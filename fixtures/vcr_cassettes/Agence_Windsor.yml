---
http_interactions:
- request:
    method: get
    uri: https://www.agenceswindsor.fr/
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - Keep-Alive
      X-Powered-By:
      - PHP/7.1.33
      Cache-Control:
      - no-cache, private
      Content-Type:
      - text/html; charset=UTF-8
      Set-Cookie:
      - XSRF-TOKEN=eyJpdiI6IktYa3Jqdk9ZaGRTdUlyQWN3NmRqSHc9PSIsInZhbHVlIjoiRk1kOUxyMFhKU3pDdjJ1XC90Z3FLbTBYSytqY2lSUjZmQ2l5bzZiT1FKeXNFSFo1XC9zaWI0TkNIVzk5RWQzeXNzIiwibWFjIjoiYWU4M2YwYjk3YzQxZjU1OTRhZjNlZGNiODA2ZmJmOTM4MjA4ZDJmYWMzNGMzNmMzM2UwYjhlYjBmYTg0YTAwMyJ9;
        expires=Wed, 15-Apr-2020 17:23:15 GMT; Max-Age=7200; path=/; secure
      - windsor_session=eyJpdiI6IjdPN2Z1M0JReHIrSnVKTjZYNkt0WUE9PSIsInZhbHVlIjoiTmZwR2F5XC9JYkVIUEFUd3Z6TjVhekdWZW1VY2U5MDl6UVpzYkZcL3RZUXVsUUNkSTMrejZleE90XC9vK3hYT0FxdSIsIm1hYyI6Ijg1ZDNjOGFlYjUxYzk1YTNkYzQwODJjZTQ5NTBlOTdhYWY3NGM4OGNmZjg4OGYzNjllY2NjMDI2NDNmMDM1OGUifQ%3D%3D;
        expires=Wed, 15-Apr-2020 17:23:15 GMT; Max-Age=7200; path=/; httponly; secure
      Transfer-Encoding:
      - chunked
      Vary:
      - Accept-Encoding
      Date:
      - Wed, 15 Apr 2020 15:23:15 GMT
      Server:
      - LiteSpeed
      Alt-Svc:
      - quic=":443"; ma=2592000; v="43,46", h3-Q043=":443"; ma=2592000, h3-Q046=":443";
        ma=2592000, h3-Q050=":443"; ma=2592000, h3-24=":443"; ma=2592000, h3-25=":443";
        ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: null
  recorded_at: Wed, 15 Apr 2020 15:23:16 GMT
- request:
    method: get
    uri: https://www.agenceswindsor.fr/acheter/2459699
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - Keep-Alive
      X-Powered-By:
      - PHP/7.1.33
      Cache-Control:
      - no-cache, private
      Content-Type:
      - text/html; charset=UTF-8
      Set-Cookie:
      - XSRF-TOKEN=eyJpdiI6IjNwRmF5VUVSOFhhSmZudlI2MVBnSlE9PSIsInZhbHVlIjoibVlwWUtoOFB5YnRidDhZWmNlYzFEa3JRUnF1T05JOWtBUnREdDJEXC9IVXczUEF4MnVRK1wvTUhWYUVzOGNuUmJKIiwibWFjIjoiNTkzMTljYzk4OWFkNmM0NmQ5ZGFmOWMzZjFmNGVjZWM0NjQyODJjOWRjMGI1MzhkYWY4NmNjOGIyN2Y5YjVmMyJ9;
        expires=Wed, 15-Apr-2020 17:23:15 GMT; Max-Age=7200; path=/; secure
      - windsor_session=eyJpdiI6InV6bHhDQUNOd2ZMayttRjJVSVcwZHc9PSIsInZhbHVlIjoidGxGN1VaZFwvNGZvS1ZkR3RiV3RrZVRTWGtcL2hTWlFRN3FrRGdBbTlhZWFvaW1ubWhsVnBBKzBpMTBNVEJWQmpHIiwibWFjIjoiY2IzODNkNTEwODVhNjZlNzkwNDRjODliZTY4NjRlYzhmMzU4MmZkYmM0MzVmZWQwNzA5YjI2MzZhMmM0ZDkzZCJ9;
        expires=Wed, 15-Apr-2020 17:23:15 GMT; Max-Age=7200; path=/; httponly; secure
      Transfer-Encoding:
      - chunked
      Vary:
      - Accept-Encoding
      Date:
      - Wed, 15 Apr 2020 15:23:15 GMT
      Server:
      - LiteSpeed
      Alt-Svc:
      - quic=":443"; ma=2592000; v="43,46", h3-Q043=":443"; ma=2592000, h3-Q046=":443";
        ma=2592000, h3-Q050=":443"; ma=2592000, h3-24=":443"; ma=2592000, h3-25=":443";
        ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: null
  recorded_at: Wed, 15 Apr 2020 15:23:16 GMT
- request:
    method: get
    uri: https://www.agenceswindsor.fr/acheter/2459627
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - Keep-Alive
      X-Powered-By:
      - PHP/7.1.33
      Cache-Control:
      - no-cache, private
      Content-Type:
      - text/html; charset=UTF-8
      Set-Cookie:
      - XSRF-TOKEN=eyJpdiI6IkhXNloyQXFwY05nSGhDTUhcL2l4Q1hRPT0iLCJ2YWx1ZSI6ImUwOHk5M1VGQXhsbXRjNGZWMUNubWVzbkhsWllBMGJqXC9Bbm1nS1g0MnRLdVRGdDNtRlFiTFdPR3VvU1JjOFlmIiwibWFjIjoiODJhMWFiMGNjZWIxYzlhY2E5NTk5ZDBmMjI4NTAzNTQ5MjcyOTliMjQ3MjliYzM0ODgxYmQ5Y2YwNWQ5MjYyOSJ9;
        expires=Wed, 15-Apr-2020 17:23:16 GMT; Max-Age=7200; path=/; secure
      - windsor_session=eyJpdiI6IjZFV3BRSjZ3NHZOQ3JJNmZvc3pTUEE9PSIsInZhbHVlIjoiY3JsYVRPbmt0XC8xbVg4cmFcL1k1T1BJdk03S1dcL0lUaTdvOCtNaDJyWFl4K1ZrNU9oS1YwakZoNlF1WkZWS0x1dCIsIm1hYyI6IjM5YTg2NTg0ODdhYTM1OTY0M2VkODE1ZmMyZTdlNjRmNzZmOTIxNzU5ZTdmMzViNWMzNGIwYmE3M2EyYzI3OWIifQ%3D%3D;
        expires=Wed, 15-Apr-2020 17:23:16 GMT; Max-Age=7200; path=/; httponly; secure
      Transfer-Encoding:
      - chunked
      Vary:
      - Accept-Encoding
      Date:
      - Wed, 15 Apr 2020 15:23:16 GMT
      Server:
      - LiteSpeed
      Alt-Svc:
      - quic=":443"; ma=2592000; v="43,46", h3-Q043=":443"; ma=2592000, h3-Q046=":443";
        ma=2592000, h3-Q050=":443"; ma=2592000, h3-24=":443"; ma=2592000, h3-25=":443";
        ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: null
  recorded_at: Wed, 15 Apr 2020 15:23:17 GMT
- request:
    method: get
    uri: https://www.agenceswindsor.fr/acheter/2362963
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - Keep-Alive
      X-Powered-By:
      - PHP/7.1.33
      Cache-Control:
      - no-cache, private
      Content-Type:
      - text/html; charset=UTF-8
      Set-Cookie:
      - XSRF-TOKEN=eyJpdiI6InI5MnF6NWNId29abjkwRlwvbmNmQVJnPT0iLCJ2YWx1ZSI6InlQd1A4YTM3WXdEOVl5U0dKczdtOUFtZ1FNa2NlVjNiR3ZINGNzckJpWnVMV24rS25qaVFPQkZMYSsza3JUUSsiLCJtYWMiOiIyNTgyNmI1OWZkYzRmMTQxMzFhZTg2YWU0NmRmOGQ0ZjQ2NTIyNTI0MzFlOWQ4ZjA2OGU2YTkyYTU5MjMyZTJjIn0%3D;
        expires=Wed, 15-Apr-2020 17:23:16 GMT; Max-Age=7200; path=/; secure
      - windsor_session=eyJpdiI6IjlNTkdQNmc2dFRGSncxRFFtVjluOHc9PSIsInZhbHVlIjoiNjk0dVN4U2FMelwvd0hFYlZEajBDT2h5OEgxeFwvTzd3MFBJOVZscjA2V0cxdG94ZGdTNDFkdSs2enBTM3NDb3JPIiwibWFjIjoiOTk3MjA1ZmVlNDM1ZjVlYmMyMDAwYjdjOTMyMWRkYzRjMzEwZWFjNDA2MmQ5MjE4NGM5MmRkMTJiZmQ3NGVkNCJ9;
        expires=Wed, 15-Apr-2020 17:23:16 GMT; Max-Age=7200; path=/; httponly; secure
      Transfer-Encoding:
      - chunked
      Vary:
      - Accept-Encoding
      Date:
      - Wed, 15 Apr 2020 15:23:16 GMT
      Server:
      - LiteSpeed
      Alt-Svc:
      - quic=":443"; ma=2592000; v="43,46", h3-Q043=":443"; ma=2592000, h3-Q046=":443";
        ma=2592000, h3-Q050=":443"; ma=2592000, h3-24=":443"; ma=2592000, h3-25=":443";
        ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: null
  recorded_at: Wed, 15 Apr 2020 15:23:17 GMT
- request:
    method: get
    uri: https://www.agenceswindsor.fr/acheter/2459667
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - Keep-Alive
      X-Powered-By:
      - PHP/7.1.33
      Cache-Control:
      - no-cache, private
      Content-Type:
      - text/html; charset=UTF-8
      Set-Cookie:
      - XSRF-TOKEN=eyJpdiI6IkU2dUlHa0RoRStSWXA1TVNxdGwwanc9PSIsInZhbHVlIjoiZUhSTVh3NlJhZ0IwS1pQenF1eHZzektTZXRBUmFSS1ZZK3d1a2k2d3ZtZVZ4TUR1ZmpSYnhMTXFVRnQxZkR6KyIsIm1hYyI6IjZhM2UyMDMyZGI1MTA2ZThkNmMwZWFiMWUxODJjNWQ2NDc3NjRiN2QxZjgwYWJkZWViZjhiYWFkZWRhM2RjNjgifQ%3D%3D;
        expires=Wed, 15-Apr-2020 17:23:17 GMT; Max-Age=7200; path=/; secure
      - windsor_session=eyJpdiI6Imh3a1ZhblY5clpxSG5HcllzNDhHNWc9PSIsInZhbHVlIjoiaTB1dVwvMG1JdGMrQnJaVmdkVTZYSThJZzNLQUJJczZpOW5tYmxxNEh3K2FTYXlmbVlLbUF5RXlYR2FsRys0bG4iLCJtYWMiOiI1ODBjMDZjODQ4YmZhMDJjNWQwZjYzZmU1OTJhNGMzMWUzZWVhM2I5ZTRlYjI2NTM0Y2ZiMmQyOWJlMThiYjc3In0%3D;
        expires=Wed, 15-Apr-2020 17:23:17 GMT; Max-Age=7200; path=/; httponly; secure
      Transfer-Encoding:
      - chunked
      Vary:
      - Accept-Encoding
      Date:
      - Wed, 15 Apr 2020 15:23:17 GMT
      Server:
      - LiteSpeed
      Alt-Svc:
      - quic=":443"; ma=2592000; v="43,46", h3-Q043=":443"; ma=2592000, h3-Q046=":443";
        ma=2592000, h3-Q050=":443"; ma=2592000, h3-24=":443"; ma=2592000, h3-25=":443";
        ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: null
  recorded_at: Wed, 15 Apr 2020 15:23:17 GMT
- request:
    method: get
    uri: https://www.agenceswindsor.fr/acheter/2459662
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - Keep-Alive
      X-Powered-By:
      - PHP/7.1.33
      Cache-Control:
      - no-cache, private
      Content-Type:
      - text/html; charset=UTF-8
      Set-Cookie:
      - XSRF-TOKEN=eyJpdiI6IkM4WTVJRk9UZFkrXC9GM1oxbTNkaUVRPT0iLCJ2YWx1ZSI6IlljQ1NjS0xpNkxYXC9zNlJtaldvYnZ6VzBrK0VVemxIV1V1NFNcL21sdEZoVXhMZXBBRDRac0ExOVZVbWM3dzRZRCIsIm1hYyI6ImM5OTIzYzM5NWM5ZmRhM2JmNDUzMTE1NjE5ZTA2YjgxMTY2OTY1ZDUxNzlkYTc5YjFkNWVhNzg3ODY1N2M3ZjgifQ%3D%3D;
        expires=Wed, 15-Apr-2020 17:23:17 GMT; Max-Age=7200; path=/; secure
      - windsor_session=eyJpdiI6IkZ4QlFvNDhrU1hvWlZtb0FaNW56eFE9PSIsInZhbHVlIjoiM1Rnd2lYcEJNNnBWMDdJR0JXV0JuY2dQNlIxMFVCcjdpc2ZpWDlXRkVpVjdvOWVNeitLVnNrYWR0WDZWdExUdCIsIm1hYyI6IjA3YTU1NGQxMDIzNTFlODAzNThjNjE1OTJmNGYzNDg0M2JkZTA5N2I0ZGMxOWJkNzY3ODBhYzYyOWNkNTM5MTUifQ%3D%3D;
        expires=Wed, 15-Apr-2020 17:23:17 GMT; Max-Age=7200; path=/; httponly; secure
      Transfer-Encoding:
      - chunked
      Vary:
      - Accept-Encoding
      Date:
      - Wed, 15 Apr 2020 15:23:17 GMT
      Server:
      - LiteSpeed
      Alt-Svc:
      - quic=":443"; ma=2592000; v="43,46", h3-Q043=":443"; ma=2592000, h3-Q046=":443";
        ma=2592000, h3-Q050=":443"; ma=2592000, h3-24=":443"; ma=2592000, h3-25=":443";
        ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: null
  recorded_at: Wed, 15 Apr 2020 15:23:18 GMT
- request:
    method: get
    uri: https://www.agenceswindsor.fr/acheter/2459658
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - Keep-Alive
      X-Powered-By:
      - PHP/7.1.33
      Cache-Control:
      - no-cache, private
      Content-Type:
      - text/html; charset=UTF-8
      Set-Cookie:
      - XSRF-TOKEN=eyJpdiI6Im4rdU5UMForMmd6cXVSR3hCbUh4dWc9PSIsInZhbHVlIjoiNGhGaDdsNDdjZmVMcGJOcEIrQ1A3UHRBXC9ncFFqam5RZjhLbGFMcGFBdEtnYUp3d3pTVDhydDY0c2c3N3MxbXgiLCJtYWMiOiI5OGFjOWRjMzJjMTU3NjNhOWMxYmU3NjI2Y2YxMmY4ZjgzNDg0MjQwMGEwNTgzNDE3MGVhNTEzZmViM2VhM2FiIn0%3D;
        expires=Wed, 15-Apr-2020 17:23:17 GMT; Max-Age=7200; path=/; secure
      - windsor_session=eyJpdiI6Ikc1ZHVrUGt4bUlOTE5JT1FKMkp4enc9PSIsInZhbHVlIjoiXC9hNG5lUlwvYkJDUmlNNG1xNHZ4YktvbkRSc2F0aU4raUxjOTVSN3plSTRHc0hqelBmRkg2ajd5OW9hYzhjcnF1IiwibWFjIjoiYTZmZWU1NTg0OTU1MDA2NDBhNjJhOTFkNTc5OWI1NTU0OTExNGI5Mzc4OTZlNGVlOWM3ODYxYzk4YjhmZTI4MSJ9;
        expires=Wed, 15-Apr-2020 17:23:17 GMT; Max-Age=7200; path=/; httponly; secure
      Transfer-Encoding:
      - chunked
      Vary:
      - Accept-Encoding
      Date:
      - Wed, 15 Apr 2020 15:23:17 GMT
      Server:
      - LiteSpeed
      Alt-Svc:
      - quic=":443"; ma=2592000; v="43,46", h3-Q043=":443"; ma=2592000, h3-Q046=":443";
        ma=2592000, h3-Q050=":443"; ma=2592000, h3-24=":443"; ma=2592000, h3-25=":443";
        ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: null
  recorded_at: Wed, 15 Apr 2020 15:23:18 GMT
- request:
    method: get
    uri: https://www.agenceswindsor.fr/acheter/2459638
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - Keep-Alive
      X-Powered-By:
      - PHP/7.1.33
      Cache-Control:
      - no-cache, private
      Content-Type:
      - text/html; charset=UTF-8
      Set-Cookie:
      - XSRF-TOKEN=eyJpdiI6InJhOVpUNXB1UVA4SzZ3WktqOXJ5RFE9PSIsInZhbHVlIjoibVRTODVCTWZ2WmR3XC9LbkdQRWNBMEJFM1VUekFTNXpUVXg4ZGNYWGJIdVNkZ2VLUW9MN1A2XC9DTG9KZUF4WitrIiwibWFjIjoiMzExZGI1ZGM3MzIxODE3MTRiMDVlMDYxNzdhMDk1OTU2NjQ4NjFmMjE0ZTQ0NDkzNjY5Yjc5ZjE5ZjNmMjA0ZSJ9;
        expires=Wed, 15-Apr-2020 17:23:18 GMT; Max-Age=7200; path=/; secure
      - windsor_session=eyJpdiI6ImcrXC9JT1VxeFBzM3h2VFl4WmNpdVBnPT0iLCJ2YWx1ZSI6IjVpenZLaUhsUERqSmVaeHRQQ09YbERWMGh4UUpcLzVZYTBMWnZZN0pTcWNGUnI0UmZKYSsybVFuOUdCOGlIcFwvRiIsIm1hYyI6IjdiOTUyMWFiNTNkM2U0NWE3OGMzNzU5ZjQ4ZDQxMjAxOGIxYzM0ZjQyMmFjZTdmMTlhMzAxYzkzZjQ0MTBmMjUifQ%3D%3D;
        expires=Wed, 15-Apr-2020 17:23:18 GMT; Max-Age=7200; path=/; httponly; secure
      Transfer-Encoding:
      - chunked
      Vary:
      - Accept-Encoding
      Date:
      - Wed, 15 Apr 2020 15:23:18 GMT
      Server:
      - LiteSpeed
      Alt-Svc:
      - quic=":443"; ma=2592000; v="43,46", h3-Q043=":443"; ma=2592000, h3-Q046=":443";
        ma=2592000, h3-Q050=":443"; ma=2592000, h3-24=":443"; ma=2592000, h3-25=":443";
        ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: null
  recorded_at: Wed, 15 Apr 2020 15:23:18 GMT
- request:
    method: get
    uri: https://www.agenceswindsor.fr/acheter/2459639
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - Keep-Alive
      X-Powered-By:
      - PHP/7.1.33
      Cache-Control:
      - no-cache, private
      Content-Type:
      - text/html; charset=UTF-8
      Set-Cookie:
      - XSRF-TOKEN=eyJpdiI6Illac1h0XC96UmEwNFdqeFVCS0dHelJnPT0iLCJ2YWx1ZSI6ImRmcCtobU0xVHpqS05Od2hmbzVjREhQYXJQalJSKzNETis5a2xzQlhhdVwvMlZlR2NJcGZaXC85K3d0eXJXUnR1TCIsIm1hYyI6ImIzY2MyMWM1YzJlNDk3OTI1OWYxNGQ2ZWFjNjVmYzliMzYwYmJlZDVjMjc4ODYwYWE5MmE3Y2QzZjJiZTQxMWQifQ%3D%3D;
        expires=Wed, 15-Apr-2020 17:23:18 GMT; Max-Age=7200; path=/; secure
      - windsor_session=eyJpdiI6IlwvRmVIQytyOWFRWGd5ck9kQkRFeWl3PT0iLCJ2YWx1ZSI6InUzWVJsMlpPQUN1OU1ZVmxJRjJsSnRZcnVaQ29Pb2lyM3VuRm9Nb3EzdmxKbnN6bHRndjdRYUh1OFJQVnd2QTUiLCJtYWMiOiIwNGFlYzZmOTViOGEwMmJiMGNkYjIyZDM3Y2YyY2FmOGM1MDEwZDhhMjYwZGU0YzczZjNiNTRjYjE2NWMxNmQwIn0%3D;
        expires=Wed, 15-Apr-2020 17:23:18 GMT; Max-Age=7200; path=/; httponly; secure
      Transfer-Encoding:
      - chunked
      Vary:
      - Accept-Encoding
      Date:
      - Wed, 15 Apr 2020 15:23:18 GMT
      Server:
      - LiteSpeed
      Alt-Svc:
      - quic=":443"; ma=2592000; v="43,46", h3-Q043=":443"; ma=2592000, h3-Q046=":443";
        ma=2592000, h3-Q050=":443"; ma=2592000, h3-24=":443"; ma=2592000, h3-25=":443";
        ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: null
  recorded_at: Wed, 15 Apr 2020 15:23:19 GMT
- request:
    method: get
    uri: https://www.agenceswindsor.fr/acheter/2459617
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - Keep-Alive
      X-Powered-By:
      - PHP/7.1.33
      Cache-Control:
      - no-cache, private
      Content-Type:
      - text/html; charset=UTF-8
      Set-Cookie:
      - XSRF-TOKEN=eyJpdiI6IitPUFBTRmNUMkVWWDZnQ1lHZjZ6Tnc9PSIsInZhbHVlIjoiR3F2MjFzNm5BMFwvU3JNeDBrSTdmXC9ma3Z0MFwvK2lLbjB2Ryt6SzhTSDFTVGVDNmVpaHFlNHRKcFBueFpncEtiNCIsIm1hYyI6IjBkYWEwYWE0YjMyMGRlMmE3NmQyMzRlN2VkODI2ZGRmNGY2MGVlNzFiY2NiNmRmZDRhZjViNTkzZGNhNDA4MWMifQ%3D%3D;
        expires=Wed, 15-Apr-2020 17:23:18 GMT; Max-Age=7200; path=/; secure
      - windsor_session=eyJpdiI6ImFVZnV4a1F6a052TW56bTA3dW5HUGc9PSIsInZhbHVlIjoiOGpWWU1sdjJTSTNCemFSQmdvOWdjcUhmSHA1cnZadWdcL28yNE84R05XVVBMN0xlcnVzZXpFbWdldjNsYVZsZlkiLCJtYWMiOiI3ZjkzYmRkNWY4NzE5MmYwZTQ0ODZmMmE1Y2JmYzMzZDVkMWUyOThkOTY4NzgwZDU1YWI0ZTVhNGUyOWY4YTFhIn0%3D;
        expires=Wed, 15-Apr-2020 17:23:18 GMT; Max-Age=7200; path=/; httponly; secure
      Transfer-Encoding:
      - chunked
      Vary:
      - Accept-Encoding
      Date:
      - Wed, 15 Apr 2020 15:23:18 GMT
      Server:
      - LiteSpeed
      Alt-Svc:
      - quic=":443"; ma=2592000; v="43,46", h3-Q043=":443"; ma=2592000, h3-Q046=":443";
        ma=2592000, h3-Q050=":443"; ma=2592000, h3-24=":443"; ma=2592000, h3-25=":443";
        ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: null
  recorded_at: Wed, 15 Apr 2020 15:23:19 GMT
- request:
    method: get
    uri: https://www.agenceswindsor.fr/acheter/2459603
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - Keep-Alive
      X-Powered-By:
      - PHP/7.1.33
      Cache-Control:
      - no-cache, private
      Content-Type:
      - text/html; charset=UTF-8
      Set-Cookie:
      - XSRF-TOKEN=eyJpdiI6InU3XC9YbnVHTkRFa0ZcL3pnbER6V3czdz09IiwidmFsdWUiOiJNTmVkZlduVGVPN3lSSjZWWmo1ZWgybFVObG1mRFVNbEx4UTdUNUtEZTFSUGZPZmw1azhENzFrRWZ5VWFzd0gwIiwibWFjIjoiYmQ0ZGE0NzE2NGQ0MmMzYjlmYTFmOTM0YjQ5ZGRlOGViY2E1Nzg2ZjdlOTYyMjIwYmVjYjdkZTBiMmNlNDQ1YiJ9;
        expires=Wed, 15-Apr-2020 17:23:19 GMT; Max-Age=7200; path=/; secure
      - windsor_session=eyJpdiI6IlZYSG9wZ3B6TWIyc1F1Qjc3bFFxZUE9PSIsInZhbHVlIjoiRFN6UHlvaW94Y05wUXJLd0VBNW1hcFNUNVR5RFpQck5hazczNWw3YTNqYjY5WkhJYko5bnE0dlZCZ2lleWRrWCIsIm1hYyI6IjkyZTVlNTNkMjBlOGUwZjBkMmYzYWM3ZTRkNzZjMDE3NDI1ZmY1NzhmZTNiNDQ0YWU2ZjdlYjkyZGIyMDlkODEifQ%3D%3D;
        expires=Wed, 15-Apr-2020 17:23:19 GMT; Max-Age=7200; path=/; httponly; secure
      Transfer-Encoding:
      - chunked
      Vary:
      - Accept-Encoding
      Date:
      - Wed, 15 Apr 2020 15:23:19 GMT
      Server:
      - LiteSpeed
      Alt-Svc:
      - quic=":443"; ma=2592000; v="43,46", h3-Q043=":443"; ma=2592000, h3-Q046=":443";
        ma=2592000, h3-Q050=":443"; ma=2592000, h3-24=":443"; ma=2592000, h3-25=":443";
        ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: null
  recorded_at: Wed, 15 Apr 2020 15:23:19 GMT
- request:
    method: get
    uri: https://www.agenceswindsor.fr/acheter/2459558
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - Keep-Alive
      X-Powered-By:
      - PHP/7.1.33
      Cache-Control:
      - no-cache, private
      Content-Type:
      - text/html; charset=UTF-8
      Set-Cookie:
      - XSRF-TOKEN=eyJpdiI6IlRiSEpDWlhLRG15bHp0THArVlRkYXc9PSIsInZhbHVlIjoibmU3RllNMDM0eCs1MjVtZVE0d21DNmNmMTdLUzB6T3dCckI3dUM4QW82aFlJaFlzdThkMXM4bm0yeEhkdUpOTSIsIm1hYyI6ImNlZThjMWZlZjM2ZTFhYzYyY2YyOTM4YWMwOTBlZWI3NmYzNDRhNWZhN2NkYjU5M2FiY2U5N2Q4YjNjYmM1YWQifQ%3D%3D;
        expires=Wed, 15-Apr-2020 17:23:19 GMT; Max-Age=7200; path=/; secure
      - windsor_session=eyJpdiI6InMydEFVVzdENWFNZ3dNSitwR2ZYQlE9PSIsInZhbHVlIjoieFlsNnpSdkZYbTZqXC9XakpZWm56Y1lIMkNBeGdnMHBVSXZ1WmlZWFl1UWg5MDdVWm15ZXVsVnNlVGVjQVwvT1pwIiwibWFjIjoiZjMyODcwMzRiNzQ3YThhMDRkNjE0Nzg0MDE1ZWVhOTc3OWRhMDU1ZGJlYWI5NTMxMzFiMjNiMDdmOTBkYmZiZSJ9;
        expires=Wed, 15-Apr-2020 17:23:19 GMT; Max-Age=7200; path=/; httponly; secure
      Transfer-Encoding:
      - chunked
      Vary:
      - Accept-Encoding
      Date:
      - Wed, 15 Apr 2020 15:23:19 GMT
      Server:
      - LiteSpeed
      Alt-Svc:
      - quic=":443"; ma=2592000; v="43,46", h3-Q043=":443"; ma=2592000, h3-Q046=":443";
        ma=2592000, h3-Q050=":443"; ma=2592000, h3-24=":443"; ma=2592000, h3-25=":443";
        ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: null
  recorded_at: Wed, 15 Apr 2020 15:23:20 GMT
- request:
    method: get
    uri: https://www.agenceswindsor.fr/acheter/2459506
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - Keep-Alive
      X-Powered-By:
      - PHP/7.1.33
      Cache-Control:
      - no-cache, private
      Content-Type:
      - text/html; charset=UTF-8
      Set-Cookie:
      - XSRF-TOKEN=eyJpdiI6InlTZ1dTbnRoVTZjTlY2SUk4SGV5ZEE9PSIsInZhbHVlIjoiRkd2XC80ZXcyZFVhMGxNN1A2Z1RSQlV3RUw2dzZJZkNUUGYyelVWQXhGZ0IyMUMzZlluWXpNdlZHMEtcL1FBWXBjIiwibWFjIjoiNmJkZTc3N2YwYWY2NmU2NGVjZWZmMWJiYzVhODViMTk2M2UxZjdmMTA5YTYzNmJhOGRiN2NmNzllOTYzMWQ1OCJ9;
        expires=Wed, 15-Apr-2020 17:23:19 GMT; Max-Age=7200; path=/; secure
      - windsor_session=eyJpdiI6InpSeTZxcXl4RUMzelNQVldJNlp3VXc9PSIsInZhbHVlIjoiZHdyWVd2SWZtXC9TQXdweVdNTm9ZWG1rUjN0QWVKZkpyc2o5WDVcL3kzenhQZk9UZ0EzRmJmenJQRzJiVWt3ZmlUIiwibWFjIjoiMjg0YzlkN2Y5ODZlOTEwZWI3YzE1M2ZjNGJkN2ZhYjkxYzcyYTIyZDJlMjAxNDdhMjA0YmFmOTk1NWEyOWQ3YiJ9;
        expires=Wed, 15-Apr-2020 17:23:19 GMT; Max-Age=7200; path=/; httponly; secure
      Transfer-Encoding:
      - chunked
      Vary:
      - Accept-Encoding
      Date:
      - Wed, 15 Apr 2020 15:23:19 GMT
      Server:
      - LiteSpeed
      Alt-Svc:
      - quic=":443"; ma=2592000; v="43,46", h3-Q043=":443"; ma=2592000, h3-Q046=":443";
        ma=2592000, h3-Q050=":443"; ma=2592000, h3-24=":443"; ma=2592000, h3-25=":443";
        ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: null
  recorded_at: Wed, 15 Apr 2020 15:23:20 GMT
- request:
    method: get
    uri: https://www.agenceswindsor.fr/acheter/52377
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - Keep-Alive
      X-Powered-By:
      - PHP/7.1.33
      Cache-Control:
      - no-cache, private
      Content-Type:
      - text/html; charset=UTF-8
      Set-Cookie:
      - XSRF-TOKEN=eyJpdiI6IjRnd0JKMnptckJBUWRINUkxOUlTb2c9PSIsInZhbHVlIjoiQUpIZWJ4Q1RGS0JTa2ZFZ0NwN2s2bW1McVp0c2o0MEp0TkFJcnNXd05mTThtd085ZkJycTNQUWpoVzlFVmMyRSIsIm1hYyI6IjkyYzQwMzg5MTA3OWVmZjEyOTEzZGIwMjcyYjdlMzlhNDJhZDdhODcxMDliMWQzNWM3ZDRhMDc5NDRiMTNmZTgifQ%3D%3D;
        expires=Wed, 15-Apr-2020 17:23:20 GMT; Max-Age=7200; path=/; secure
      - windsor_session=eyJpdiI6IlwveTc0ckNsbU94OWg0UGNjZXBTM0FRPT0iLCJ2YWx1ZSI6IlNISGNiUVBwZU9rWm9hS282djBJZVJJdHZqem5VWUZBZnZIaFpuc2hEXC9cL2dYeERUNWErOWs0VmVIdlI1ZExGeSIsIm1hYyI6IjdkZWRkOWI4NWUxMGY5NjE3NDg5Yjc2NWU4NzJkMWM5ODhkMTdiYjVkZmVhOWM0YWM3NGE4ZTk3YmUyZjVjNDIifQ%3D%3D;
        expires=Wed, 15-Apr-2020 17:23:20 GMT; Max-Age=7200; path=/; httponly; secure
      Transfer-Encoding:
      - chunked
      Vary:
      - Accept-Encoding
      Date:
      - Wed, 15 Apr 2020 15:23:20 GMT
      Server:
      - LiteSpeed
      Alt-Svc:
      - quic=":443"; ma=2592000; v="43,46", h3-Q043=":443"; ma=2592000, h3-Q046=":443";
        ma=2592000, h3-Q050=":443"; ma=2592000, h3-24=":443"; ma=2592000, h3-25=":443";
        ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        PCFkb2N0eXBlIGh0bWw+CjxodG1sIGxhbmc9ImZyIj4KPGhlYWQ+CiAgICA8bWV0YSBjaGFyc2V0PSJ1dGYtOCI+CiAgICA8bWV0YSBuYW1lPSJ2aWV3cG9ydCIgY29udGVudD0id2lkdGg9ZGV2aWNlLXdpZHRoLCBpbml0aWFsLXNjYWxlPTEsIHNocmluay10by1maXQ9bm8iPgogICAgPG1ldGEgbmFtZT0iY3NyZi10b2tlbiIgY29udGVudD0iVWJ2eVRDYmh6YmxnbGZkZ0dZQ3BqM25EcEg5a0tXYVVXMXc1OXFIbiI+CgogICAgPHRpdGxlPkxlcyBhZ2VuY2VzIGltbW9iaWxpw6hyZXMgZHUgR3JvdXBlIFdpbmRzb3I8L3RpdGxlPgoKICAgIDxsaW5rIHJlbD0iaWNvbiIgdHlwZT0iaW1hZ2UvcG5nIiBzaXplcz0iMTkyeDE5MiIgaHJlZj0iaHR0cHM6Ly93d3cuYWdlbmNlc3dpbmRzb3IuZnIvYXNzZXRzL2ltZy9mYXZpY29uL2Zhdmljb24tMTkyeDE5Mi5wbmciPgogICAgPGxpbmsgcmVsPSJpY29uIiB0eXBlPSJpbWFnZS9wbmciIHNpemVzPSIxNjB4MTYwIiBocmVmPSJodHRwczovL3d3dy5hZ2VuY2Vzd2luZHNvci5mci9hc3NldHMvaW1nL2Zhdmljb24vZmF2aWNvbi0xNjB4MTYwLnBuZyI+CiAgICA8bGluayByZWw9Imljb24iIHR5cGU9ImltYWdlL3BuZyIgc2l6ZXM9Ijk2eDk2IiBocmVmPSJodHRwczovL3d3dy5hZ2VuY2Vzd2luZHNvci5mci9hc3NldHMvaW1nL2Zhdmljb24vZmF2aWNvbi05Nng5Ni5wbmciPgogICAgPGxpbmsgcmVsPSJpY29uIiB0eXBlPSJpbWFnZS9wbmciIHNpemVzPSI2NHg2NCIgaHJlZj0iaHR0cHM6Ly93d3cuYWdlbmNlc3dpbmRzb3IuZnIvYXNzZXRzL2ltZy9mYXZpY29uL2Zhdmljb24tNjR4NjQucG5nIj4KICAgIDxsaW5rIHJlbD0iaWNvbiIgdHlwZT0iaW1hZ2UvcG5nIiBzaXplcz0iMzJ4MzIiIGhyZWY9Imh0dHBzOi8vd3d3LmFnZW5jZXN3aW5kc29yLmZyL2Fzc2V0cy9pbWcvZmF2aWNvbi9mYXZpY29uLTMyeDMyLnBuZyI+CiAgICA8bGluayByZWw9Imljb24iIHR5cGU9ImltYWdlL3BuZyIgc2l6ZXM9IjE2eDE2IiBocmVmPSJodHRwczovL3d3dy5hZ2VuY2Vzd2luZHNvci5mci9hc3NldHMvaW1nL2Zhdmljb24vZmF2aWNvbi0xNngxNi5wbmciPgogICAgPGxpbmsgcmVsPSJhcHBsZS10b3VjaC1pY29uIiBocmVmPSJodHRwczovL3d3dy5hZ2VuY2Vzd2luZHNvci5mci9hc3NldHMvaW1nL2Zhdmljb24vZmF2aWNvbi01N3g1Ny5wbmciPgogICAgPGxpbmsgcmVsPSJhcHBsZS10b3VjaC1pY29uIiBzaXplcz0iMTE0eDExNCIgaHJlZj0iaHR0cHM6Ly93d3cuYWdlbmNlc3dpbmRzb3IuZnIvYXNzZXRzL2ltZy9mYXZpY29uL2Zhdmljb24tMTE0eDExNC5wbmciPgogICAgPGxpbmsgcmVsPSJhcHBsZS10b3VjaC1pY29uIiBzaXplcz0iNzJ4NzIiIGhyZWY9Imh0dHBzOi8vd3d3LmFnZW5jZXN3aW5kc29yLmZyL2Fzc2V0cy9pbWcvZmF2aWNvbi9mYXZpY29uLTcyeDcyLnBuZyI+CiAgICA8bGluayByZWw9ImFwcGxlLXRvdWNoLWljb24iIHNpemVzPSIxNDR4MTQ0IiBocmVmPSJodHRwczovL3d3dy5hZ2VuY2Vzd2luZHNvci5mci9hc3NldHMvaW1nL2Zhdmljb24vZmF2aWNvbi0xNDR4MTQ0LnBuZyI+CiAgICA8bGluayByZWw9ImFwcGxlLXRvdWNoLWljb24iIHNpemVzPSI2MHg2MCIgaHJlZj0iaHR0cHM6Ly93d3cuYWdlbmNlc3dpbmRzb3IuZnIvYXNzZXRzL2ltZy9mYXZpY29uL2Zhdmljb24tNjB4NjAucG5nIj4KICAgIDxsaW5rIHJlbD0iYXBwbGUtdG91Y2gtaWNvbiIgc2l6ZXM9IjEyMHgxMjAiIGhyZWY9Imh0dHBzOi8vd3d3LmFnZW5jZXN3aW5kc29yLmZyL2Fzc2V0cy9pbWcvZmF2aWNvbi9mYXZpY29uLTEyMHgxMjAucG5nIj4KICAgIDxsaW5rIHJlbD0iYXBwbGUtdG91Y2gtaWNvbiIgc2l6ZXM9Ijc2eDc2IiBocmVmPSJodHRwczovL3d3dy5hZ2VuY2Vzd2luZHNvci5mci9hc3NldHMvaW1nL2Zhdmljb24vZmF2aWNvbi03Nng3Ni5wbmciPgogICAgPGxpbmsgcmVsPSJhcHBsZS10b3VjaC1pY29uIiBzaXplcz0iMTUyeDE1MiIgaHJlZj0iaHR0cHM6Ly93d3cuYWdlbmNlc3dpbmRzb3IuZnIvYXNzZXRzL2ltZy9mYXZpY29uL2Zhdmljb24tMTUyeDE1Mi5wbmciPgogICAgPGxpbmsgcmVsPSJhcHBsZS10b3VjaC1pY29uIiBzaXplcz0iMTgweDE4MCIgaHJlZj0iaHR0cHM6Ly93d3cuYWdlbmNlc3dpbmRzb3IuZnIvYXNzZXRzL2ltZy9mYXZpY29uL2Zhdmljb24tMTgweDE4MC5wbmciPgogICAgPGxpbmsgcmVsPSJtYW5pZmVzdCIgaHJlZj0iaHR0cHM6Ly93d3cuYWdlbmNlc3dpbmRzb3IuZnIvYXNzZXRzL2ltZy9mYXZpY29uL3NpdGUud2VibWFuaWZlc3QiPgogICAgPGxpbmsgcmVsPSJtYXNrLWljb24iIGhyZWY9Imh0dHBzOi8vd3d3LmFnZW5jZXN3aW5kc29yLmZyL2Fzc2V0cy9pbWcvZmF2aWNvbi9zYWZhcmktcGlubmVkLXRhYi5zdmciIGNvbG9yPSIjYTNjZjRhIj4KICAgIDxtZXRhIG5hbWU9ImFwcGxlLW1vYmlsZS13ZWItYXBwLXRpdGxlIiBjb250ZW50PSJMZXMgYWdlbmNlcyBpbW1vYmlsacOocmVzIGR1IEdyb3VwZSBXaW5kc29yIj4KICAgIDxtZXRhIG5hbWU9ImFwcGxpY2F0aW9uLW5hbWUiIGNvbnRlbnQ9IkxlcyBhZ2VuY2VzIGltbW9iaWxpw6hyZXMgZHUgR3JvdXBlIFdpbmRzb3IiPgogICAgPG1ldGEgbmFtZT0ibXNhcHBsaWNhdGlvbi1UaWxlQ29sb3IiIGNvbnRlbnQ9IiNmZmZmZmYiPgogICAgPG1ldGEgbmFtZT0idGhlbWUtY29sb3IiIGNvbnRlbnQ9IiNmZmZmZmYiPgogICAgPG1ldGEgbmFtZT0ibXNhcHBsaWNhdGlvbi1UaWxlSW1hZ2UiIGNvbnRlbnQ9Imh0dHBzOi8vd3d3LmFnZW5jZXN3aW5kc29yLmZyL2Fzc2V0cy9pbWcvZmF2aWNvbi9mYXZpY29uLTE0NHgxNDQucG5nIj4KICAgIDxtZXRhIG5hbWU9Im1zYXBwbGljYXRpb24tY29uZmlnIiBjb250ZW50PSJodHRwczovL3d3dy5hZ2VuY2Vzd2luZHNvci5mci9hc3NldHMvaW1nL2Zhdmljb24vYnJvd3NlcmNvbmZpZy54bWwiPgoKICAgIDxsaW5rIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0iaHR0cHM6Ly93d3cuYWdlbmNlc3dpbmRzb3IuZnIvYXNzZXRzL2Nzcy9ib290c3RyYXAubWluLmNzcyI+CiAgICA8bGluayByZWw9InN0eWxlc2hlZXQiIGhyZWY9Imh0dHBzOi8vd3d3LmFnZW5jZXN3aW5kc29yLmZyL2Fzc2V0cy9jc3MvZm9udGF3ZXNvbWUubWluLmNzcyI+CiAgICA8bGluayByZWw9InN0eWxlc2hlZXQiIGhyZWY9Imh0dHBzOi8vd3d3LmFnZW5jZXN3aW5kc29yLmZyL2Fzc2V0cy9qcy9wbHVnaW5zL2xlYWZsZXQvbGVhZmxldC5jc3MiPgogICAgPGxpbmsgcmVsPSJzdHlsZXNoZWV0IiBocmVmPSJodHRwczovL3d3dy5hZ2VuY2Vzd2luZHNvci5mci9hc3NldHMvanMvcGx1Z2lucy9tYWduaWZpYy1wb3B1cC9tYWduaWZpYy1wb3B1cC5jc3MiPgogICAgPGxpbmsgcmVsPSJzdHlsZXNoZWV0IiBocmVmPSJodHRwczovL3d3dy5hZ2VuY2Vzd2luZHNvci5mci9hc3NldHMvY3NzL2Nvb2tpZS5jc3MiPgogICAgPGxpbmsgcmVsPSJzdHlsZXNoZWV0IiBocmVmPSJodHRwczovL3d3dy5hZ2VuY2Vzd2luZHNvci5mci9hc3NldHMvY3NzL2RlZmF1bHQuY3NzP3Q9MS4wIj4KICAgIDxsaW5rIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0iaHR0cHM6Ly93d3cuYWdlbmNlc3dpbmRzb3IuZnIvYXNzZXRzL2Nzcy9hZ2VuY3kuY3NzP3Q9MS4wIj4KPC9oZWFkPgoKPGJvZHk+CiAgICA8ZGl2IGNsYXNzPSJjb250YWluZXIiPgogICAgICAgICAgICAgICAgPGhlYWRlciBjbGFzcz0icHktMyI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InJvdyBuby1ndXR0ZXJzIGZsZXgtbm93cmFwIGp1c3RpZnktY29udGVudC1iZXR3ZWVuIGFsaWduLWl0ZW1zLWNlbnRlciBwb3NpdGlvbi1yZWxhdGl2ZSBteC1sZy01Ij4KICAgICAgICAgICAgICAgIDxkaXYgc3R5bGU9ImJvdHRvbTowO3JpZ2h0OjA7cG9zaXRpb246YWJzb2x1dGU7ei1pbmRleDoxOyI+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly93d3cuZmFjZWJvb2suY29tL2FnZW5jZXN3aW5kc29yLyIgY2xhc3M9InBsLTIgZC1ub25lIGQtbGctaW5saW5lIiB0YXJnZXQ9Il9ibGFuayI+PGltZyBzcmM9Imh0dHBzOi8vd3d3LmFnZW5jZXN3aW5kc29yLmZyL2Fzc2V0cy9pbWcvZmFjZWJvb2suc3ZnIiBoZWlnaHQ9IjI3IiB3aWR0aD0iMjciIGFsdD0iRmFjZWJvb2siPjwvYT4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL3d3dy5pbnN0YWdyYW0uY29tL3dpbmRzb3Jwcm9tb3Rpb24vIiBjbGFzcz0icGwtMiBkLW5vbmUgZC1sZy1pbmxpbmUiIHRhcmdldD0iX2JsYW5rIj48aW1nIHNyYz0iaHR0cHM6Ly93d3cuYWdlbmNlc3dpbmRzb3IuZnIvYXNzZXRzL2ltZy9pbnN0YWdyYW0uc3ZnIiBoZWlnaHQ9IjI3IiB3aWR0aD0iMjciIGFsdD0iSW5zdGFncmFtIj48L2E+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbC05IGNvbC1tZC00IG9mZnNldC1tZC00IGNvbC1sZy0xMiBvZmZzZXQtbGctMCBkLWxnLWZsZXggYWxpZ24taXRlbXMtY2VudGVyIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vd3d3LmFnZW5jZXN3aW5kc29yLmZyIiBjbGFzcz0iaGVhZGVyLWxvZ28iPjxpbWcgc3JjPSJodHRwczovL3d3dy5hZ2VuY2Vzd2luZHNvci5mci9hc3NldHMvaW1nL2xvZ29fYWdlbmN5LnN2ZyIgYWx0PSJMZXMgYWdlbmNlcyBpbW1vYmlsacOocmVzIGR1IEdyb3VwZSBXaW5kc29yIj48L2E+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ibWwtNSBkLW5vbmUgZC1sZy1ibG9jayIgc3R5bGU9InBvc2l0aW9uOnJlbGF0aXZlO3RvcDo2cHg7Ij5MZXMgYWdlbmNlcyBpbW1vYmlsacOocmVzIGR1IEdyb3VwZSBXaW5kc29yPC9zcGFuPgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtMyBkLWZsZXggZC1sZy1ub25lIGp1c3RpZnktY29udGVudC1lbmQgYWxpZ24taXRlbXMtY2VudGVyIj4KICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIGNsYXNzPSJuYXZiYXItdG9nZ2xlciBkLWJsb2NrIGQtbGctbm9uZSBweC0yIiB0eXBlPSJidXR0b24iIGRhdGEtdG9nZ2xlPSJjb2xsYXBzZSIgZGF0YS10YXJnZXQ9IiNuYXZiYXJTdXBwb3J0ZWRDb250ZW50IiBzdHlsZT0iZm9udC1zaXplOjFyZW07Ij4KICAgICAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9ImZhcyBmYS1iYXJzIGQtYmxvY2siPjwvaT4gTWVudQogICAgICAgICAgICAgICAgICAgIDwvYnV0dG9uPgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvaGVhZGVyPgogICAgPC9kaXY+CgogICAgPG1haW4gY2xhc3M9ImNvbnRhaW5lciBwb3NpdGlvbi1yZWxhdGl2ZSI+CiAgICAgICAgPGRpdiBpZD0ibmF2aWdhdGlvbi10b3AiIGNsYXNzPSJweS0xIj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29udGFpbmVyIHB4LW1kLTAiPgogICAgICAgICAgICAgICAgPG5hdiBjbGFzcz0ibmF2YmFyIG5hdmJhci1leHBhbmQtbGcgcHgtbWQtMCBteC1tZC01Ij4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL3d3dy5hZ2VuY2Vzd2luZHNvci5mciIgY2xhc3M9Im5hdmJhci1icmFuZCBkLWJsb2NrIGQtbGctbm9uZSI+PGltZyBzcmM9Imh0dHBzOi8vd3d3LmFnZW5jZXN3aW5kc29yLmZyL2Fzc2V0cy9pbWcvbG9nb19hZ2VuY3kuc3ZnIiBhbHQ9IkxlcyBhZ2VuY2VzIGltbW9iaWxpw6hyZXMgZHUgR3JvdXBlIFdpbmRzb3IiPjwvYT4KICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIGNsYXNzPSJuYXZiYXItdG9nZ2xlciBkLWJsb2NrIGQtbGctbm9uZSIgdHlwZT0iYnV0dG9uIiBkYXRhLXRvZ2dsZT0iY29sbGFwc2UiIGRhdGEtdGFyZ2V0PSIjbmF2YmFyU3VwcG9ydGVkQ29udGVudCIgc3R5bGU9ImZvbnQtc2l6ZToxcmVtOyI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJmYXMgZmEtYmFycyI+PC9pPiBNZW51CiAgICAgICAgICAgICAgICAgICAgPC9idXR0b24+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sbGFwc2UgbmF2YmFyLWNvbGxhcHNlIiBpZD0ibmF2YmFyU3VwcG9ydGVkQ29udGVudCI+CiAgICAgICAgICAgICAgICAgICAgICAgIDx1bCBjbGFzcz0ibmF2YmFyLW5hdiBhbGlnbi1pdGVtcy1jZW50ZXIganVzdGlmeS1jb250ZW50LWJldHdlZW4gdy0xMDAiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpIGNsYXNzPSJuYXYtbG9nbyBweS0yIj48YSBocmVmPSJodHRwczovL3d3dy5hZ2VuY2Vzd2luZHNvci5mciI+PGltZyBzcmM9Imh0dHBzOi8vd3d3LmFnZW5jZXN3aW5kc29yLmZyL2Fzc2V0cy9pbWcvbG9nby5zdmciIGFsdD0iTGVzIGFnZW5jZXMgaW1tb2JpbGnDqHJlcyBkdSBHcm91cGUgV2luZHNvciI+PC9hPjwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGkgY2xhc3M9InNvY2lhbC1pY29ucyBweS0yIHRleHQtY2VudGVyIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL3d3dy5mYWNlYm9vay5jb20vV2luZHNvci1Qcm9tb3Rpb24tMTMxMDc3NDAwNTYxOTI1MS8iIGNsYXNzPSJwLTIiIHRhcmdldD0iX2JsYW5rIj48aW1nIHNyYz0iaHR0cHM6Ly93d3cuYWdlbmNlc3dpbmRzb3IuZnIvYXNzZXRzL2ltZy9mYWNlYm9vay5zdmciIGhlaWdodD0iMjciIHdpZHRoPSIyNyIgYWx0PSJGYWNlYm9vayI+PC9hPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vd3d3Lmluc3RhZ3JhbS5jb20vd2luZHNvcnByb21vdGlvbi8iIGNsYXNzPSJwLTIiIHRhcmdldD0iX2JsYW5rIj48aW1nIHNyYz0iaHR0cHM6Ly93d3cuYWdlbmNlc3dpbmRzb3IuZnIvYXNzZXRzL2ltZy9pbnN0YWdyYW0uc3ZnIiBoZWlnaHQ9IjI3IiB3aWR0aD0iMjciIGFsdD0iSW5zdGFncmFtIj48L2E+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpIGNsYXNzPSJweS0yIHRleHQtY2VudGVyIGFjdGl2ZSI+PGEgaHJlZj0iaHR0cHM6Ly93d3cuYWdlbmNlc3dpbmRzb3IuZnIiIGNsYXNzPSJkLWJsb2NrIj5BQ0hFVEVSPC9hPjwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGkgY2xhc3M9InB5LTIgdGV4dC1jZW50ZXIiPjxhIGhyZWY9Imh0dHBzOi8vd3d3LmFnZW5jZXN3aW5kc29yLmZyL3ZlbmRyZSIgY2xhc3M9ImQtYmxvY2siPlZFTkRSRTwvYT48L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpIGNsYXNzPSJweS0yIHRleHQtY2VudGVyIj48YSBocmVmPSJodHRwczovL3d3dy5hZ2VuY2Vzd2luZHNvci5mci9sb3VlciIgY2xhc3M9ImQtYmxvY2siPkxPVUVSPC9hPjwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGkgY2xhc3M9InB5LTIgdGV4dC1jZW50ZXIiPjxhIGhyZWY9Imh0dHBzOi8vd3d3LmFnZW5jZXN3aW5kc29yLmZyL2FnZW5jZS9uZXVpbGx5IiBjbGFzcz0iZC1ibG9jayI+V0lORFNPUjxzcGFuIGNsYXNzPSJkLWxnLW5vbmUgZC14bC1ub25lIj4gPC9zcGFuPjxiciBjbGFzcz0iZC1ub25lIGQtbGctaW5saW5lIj5ORVVJTExZPC9hPjwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGkgY2xhc3M9InB5LTIgdGV4dC1jZW50ZXIiPjxhIGhyZWY9Imh0dHBzOi8vd3d3LmFnZW5jZXN3aW5kc29yLmZyL2FnZW5jZS9pbnZhbGlkZXMiIGNsYXNzPSJkLWJsb2NrIj5XSU5EU09SPHNwYW4gY2xhc3M9ImQtbGctbm9uZSBkLXhsLW5vbmUiPiA8L3NwYW4+PGJyIGNsYXNzPSJkLW5vbmUgZC1sZy1pbmxpbmUiPklOVkFMSURFUzwvYT48L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpIGNsYXNzPSJweS0yIHRleHQtY2VudGVyIj48YSBocmVmPSIjIiBjbGFzcz0iZC1ibG9jayIgZGF0YS10b2dnbGU9Im1vZGFsIiBkYXRhLXRhcmdldD0iI2NvbnRhY3RNb2RhbCI+Tk9VUzxzcGFuIGNsYXNzPSJkLWxnLW5vbmUgZC14bC1ub25lIj4gPC9zcGFuPjxiciBjbGFzcz0iZC1ub25lIGQtbGctaW5saW5lIj5DT05UQUNURVI8L2E+PC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaSBjbGFzcz0iZC1ub25lIGQtbGctaW5saW5lIHB0LTIgcGItMiB0ZXh0LWNlbnRlciIgc3R5bGU9ImJvcmRlci1yaWdodDoycHggc29saWQgI2U2ZTdlODsiPjxzcGFuIGNsYXNzPSJkLWxnLW5vbmUgZC14bC1ub25lIj4gPC9zcGFuPjxiciBjbGFzcz0iZC1ub25lIGQtbGctaW5saW5lIj48L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpIGNsYXNzPSJweS0yIHRleHQtY2VudGVyIj48YSBocmVmPSJodHRwczovL3d3dy53aW5kc29yLmZyIiBjbGFzcz0iZC1ibG9jayIgdGFyZ2V0PSJfYmxhbmsiPkdST1VQRTxzcGFuIGNsYXNzPSJkLWxnLW5vbmUgZC14bC1ub25lIj4gPC9zcGFuPjxiciBjbGFzcz0iZC1ub25lIGQtbGctaW5saW5lIj5XSU5EU09SPC9hPjwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaSBjbGFzcz0icHktMiB0ZXh0LWNlbnRlciI+PGEgcmVsPSJhbHRlcm5hdGUiIGhyZWZsYW5nPSJlbiIgaHJlZj0iaHR0cHM6Ly93d3cuYWdlbmNlc3dpbmRzb3IuZnIvZW4iPjxpbWcgc3JjPSJodHRwczovL3d3dy5hZ2VuY2Vzd2luZHNvci5mci9hc3NldHMvaW1nL2ZsYWdzX2VuLnBuZyI+PC9hPjwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdWw+CiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8L25hdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9kaXY+CgogICAgICAgIDxkaXYgaWQ9ImNvbnRlbnQiPgogICAgICAgICAgICAKICAgIDxkaXYgY2xhc3M9InJvdyBtdC0zIj4KICAgIDxkaXYgY2xhc3M9ImNvbC1sZy02Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBpZD0iY2Fyb3VzZWxBbm5vdW5jZSIgY2xhc3M9ImNhcm91c2VsIHNsaWRlIG1iLTMiIGRhdGEtcmlkZT0iY2Fyb3VzZWwiIGRhdGEtaW50ZXJ2YWw9IjMwMDAiPgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNhcm91c2VsLWlubmVyIGdhbGxlcnkiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY2Fyb3VzZWwtaXRlbSBhY3RpdmUiIHN0eWxlPSJiYWNrZ3JvdW5kOiNlNmU3ZTg7Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL3d3dy5hZ2VuY2Vzd2luZHNvci5mci91cGxvYWRzL25ldWlsbHkvNWEwNWU1ZDUxODRlNGFkN2JlYTQ1NDQzMzMzZDAxMTcuanBnIj48aW1nIHNyYz0iaHR0cHM6Ly93d3cuYWdlbmNlc3dpbmRzb3IuZnIvdXBsb2Fkcy9uZXVpbGx5L21kLzVhMDVlNWQ1MTg0ZTRhZDdiZWE0NTQ0MzMzM2QwMTE3LmpwZyIgY2xhc3M9ImltZy1mbHVpZCBkLWJsb2NrIG14LWF1dG8iIGFsdD0iIj48L2E+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNhcm91c2VsLWl0ZW0iIHN0eWxlPSJiYWNrZ3JvdW5kOiNlNmU3ZTg7Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL3d3dy5hZ2VuY2Vzd2luZHNvci5mci91cGxvYWRzL25ldWlsbHkvNjlkY2EwMmY0YzdiNGQzYWFhNGRlZDA1YjY1MTA5YWYuanBnIj48aW1nIHNyYz0iaHR0cHM6Ly93d3cuYWdlbmNlc3dpbmRzb3IuZnIvdXBsb2Fkcy9uZXVpbGx5L21kLzY5ZGNhMDJmNGM3YjRkM2FhYTRkZWQwNWI2NTEwOWFmLmpwZyIgY2xhc3M9ImltZy1mbHVpZCBkLWJsb2NrIG14LWF1dG8iIGFsdD0iIj48L2E+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNhcm91c2VsLWl0ZW0iIHN0eWxlPSJiYWNrZ3JvdW5kOiNlNmU3ZTg7Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL3d3dy5hZ2VuY2Vzd2luZHNvci5mci91cGxvYWRzL25ldWlsbHkvMTI4ZDZkNmM2Y2Y5NDcyMWIzZDk0OWIwMTJlZTkxODAuanBnIj48aW1nIHNyYz0iaHR0cHM6Ly93d3cuYWdlbmNlc3dpbmRzb3IuZnIvdXBsb2Fkcy9uZXVpbGx5L21kLzEyOGQ2ZDZjNmNmOTQ3MjFiM2Q5NDliMDEyZWU5MTgwLmpwZyIgY2xhc3M9ImltZy1mbHVpZCBkLWJsb2NrIG14LWF1dG8iIGFsdD0iIj48L2E+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNhcm91c2VsLWl0ZW0iIHN0eWxlPSJiYWNrZ3JvdW5kOiNlNmU3ZTg7Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL3d3dy5hZ2VuY2Vzd2luZHNvci5mci91cGxvYWRzL25ldWlsbHkvYTRkMzE5Nzc2NGIyNDE3MTllNjQ5OGExY2JjYzdmODQuanBnIj48aW1nIHNyYz0iaHR0cHM6Ly93d3cuYWdlbmNlc3dpbmRzb3IuZnIvdXBsb2Fkcy9uZXVpbGx5L21kL2E0ZDMxOTc3NjRiMjQxNzE5ZTY0OThhMWNiY2M3Zjg0LmpwZyIgY2xhc3M9ImltZy1mbHVpZCBkLWJsb2NrIG14LWF1dG8iIGFsdD0iIj48L2E+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNhcm91c2VsLWl0ZW0iIHN0eWxlPSJiYWNrZ3JvdW5kOiNlNmU3ZTg7Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL3d3dy5hZ2VuY2Vzd2luZHNvci5mci91cGxvYWRzL25ldWlsbHkvYjQ0MDcxZGQ0YTlhNDIyNDkxNTNkOGNiZWJiNzhhM2IuanBnIj48aW1nIHNyYz0iaHR0cHM6Ly93d3cuYWdlbmNlc3dpbmRzb3IuZnIvdXBsb2Fkcy9uZXVpbGx5L21kL2I0NDA3MWRkNGE5YTQyMjQ5MTUzZDhjYmViYjc4YTNiLmpwZyIgY2xhc3M9ImltZy1mbHVpZCBkLWJsb2NrIG14LWF1dG8iIGFsdD0iIj48L2E+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNhcm91c2VsLWl0ZW0iIHN0eWxlPSJiYWNrZ3JvdW5kOiNlNmU3ZTg7Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL3d3dy5hZ2VuY2Vzd2luZHNvci5mci91cGxvYWRzL25ldWlsbHkvYTZjNmY1NmUxZTIzNGQ0MmJiYzczYjI2OTg4NDEzYzYuanBnIj48aW1nIHNyYz0iaHR0cHM6Ly93d3cuYWdlbmNlc3dpbmRzb3IuZnIvdXBsb2Fkcy9uZXVpbGx5L21kL2E2YzZmNTZlMWUyMzRkNDJiYmM3M2IyNjk4ODQxM2M2LmpwZyIgY2xhc3M9ImltZy1mbHVpZCBkLWJsb2NrIG14LWF1dG8iIGFsdD0iIj48L2E+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNhcm91c2VsLWl0ZW0iIHN0eWxlPSJiYWNrZ3JvdW5kOiNlNmU3ZTg7Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL3d3dy5hZ2VuY2Vzd2luZHNvci5mci91cGxvYWRzL25ldWlsbHkvYTJmZTExYTkxMDJmNDk1ZmE1ZjQ0NTQ3NTM1MTNhODkuanBnIj48aW1nIHNyYz0iaHR0cHM6Ly93d3cuYWdlbmNlc3dpbmRzb3IuZnIvdXBsb2Fkcy9uZXVpbGx5L21kL2EyZmUxMWE5MTAyZjQ5NWZhNWY0NDU0NzUzNTEzYTg5LmpwZyIgY2xhc3M9ImltZy1mbHVpZCBkLWJsb2NrIG14LWF1dG8iIGFsdD0iIj48L2E+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNhcm91c2VsLWl0ZW0iIHN0eWxlPSJiYWNrZ3JvdW5kOiNlNmU3ZTg7Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL3d3dy5hZ2VuY2Vzd2luZHNvci5mci91cGxvYWRzL25ldWlsbHkvODI3YjRmNjcxMjE2NGQ5YmE3OTBiMzA4NThkMTRmYTMuanBnIj48aW1nIHNyYz0iaHR0cHM6Ly93d3cuYWdlbmNlc3dpbmRzb3IuZnIvdXBsb2Fkcy9uZXVpbGx5L21kLzgyN2I0ZjY3MTIxNjRkOWJhNzkwYjMwODU4ZDE0ZmEzLmpwZyIgY2xhc3M9ImltZy1mbHVpZCBkLWJsb2NrIG14LWF1dG8iIGFsdD0iIj48L2E+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNhcm91c2VsLWl0ZW0iIHN0eWxlPSJiYWNrZ3JvdW5kOiNlNmU3ZTg7Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL3d3dy5hZ2VuY2Vzd2luZHNvci5mci91cGxvYWRzL25ldWlsbHkvOTE1MzgwZGU1Yzk5NGI4MmJhYTk4YWE0NGU1NDIwMjYuanBnIj48aW1nIHNyYz0iaHR0cHM6Ly93d3cuYWdlbmNlc3dpbmRzb3IuZnIvdXBsb2Fkcy9uZXVpbGx5L21kLzkxNTM4MGRlNWM5OTRiODJiYWE5OGFhNDRlNTQyMDI2LmpwZyIgY2xhc3M9ImltZy1mbHVpZCBkLWJsb2NrIG14LWF1dG8iIGFsdD0iIj48L2E+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNhcm91c2VsLWl0ZW0iIHN0eWxlPSJiYWNrZ3JvdW5kOiNlNmU3ZTg7Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL3d3dy5hZ2VuY2Vzd2luZHNvci5mci91cGxvYWRzL25ldWlsbHkvZDEyZjE1OTA4OWU2NGJmZjk5NDI2ZGM5OTlmN2ZhZDMuanBnIj48aW1nIHNyYz0iaHR0cHM6Ly93d3cuYWdlbmNlc3dpbmRzb3IuZnIvdXBsb2Fkcy9uZXVpbGx5L21kL2QxMmYxNTkwODllNjRiZmY5OTQyNmRjOTk5ZjdmYWQzLmpwZyIgY2xhc3M9ImltZy1mbHVpZCBkLWJsb2NrIG14LWF1dG8iIGFsdD0iIj48L2E+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNhcm91c2VsLWl0ZW0iIHN0eWxlPSJiYWNrZ3JvdW5kOiNlNmU3ZTg7Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL3d3dy5hZ2VuY2Vzd2luZHNvci5mci91cGxvYWRzL25ldWlsbHkvMTVlZGE3MDlkOGMwNDYxYjkyZjM0ZGM2YjEwMWQ2YTUuanBnIj48aW1nIHNyYz0iaHR0cHM6Ly93d3cuYWdlbmNlc3dpbmRzb3IuZnIvdXBsb2Fkcy9uZXVpbGx5L21kLzE1ZWRhNzA5ZDhjMDQ2MWI5MmYzNGRjNmIxMDFkNmE1LmpwZyIgY2xhc3M9ImltZy1mbHVpZCBkLWJsb2NrIG14LWF1dG8iIGFsdD0iIj48L2E+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNhcm91c2VsLWl0ZW0iIHN0eWxlPSJiYWNrZ3JvdW5kOiNlNmU3ZTg7Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL3d3dy5hZ2VuY2Vzd2luZHNvci5mci91cGxvYWRzL25ldWlsbHkvODRhNjBhMjY0MWEwNDIwZWI2YTNmNzRlNDIwZjI3M2QuanBnIj48aW1nIHNyYz0iaHR0cHM6Ly93d3cuYWdlbmNlc3dpbmRzb3IuZnIvdXBsb2Fkcy9uZXVpbGx5L21kLzg0YTYwYTI2NDFhMDQyMGViNmEzZjc0ZTQyMGYyNzNkLmpwZyIgY2xhc3M9ImltZy1mbHVpZCBkLWJsb2NrIG14LWF1dG8iIGFsdD0iIj48L2E+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICA8YSBjbGFzcz0iY2Fyb3VzZWwtY29udHJvbC1wcmV2IiBocmVmPSIjY2Fyb3VzZWxBbm5vdW5jZSIgcm9sZT0iYnV0dG9uIiBkYXRhLXNsaWRlPSJwcmV2Ij4KICAgICAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9ImZhbCBmYS01eCBmYS1jaGV2cm9uLWxlZnQiPjwvaT4KICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgICAgPGEgY2xhc3M9ImNhcm91c2VsLWNvbnRyb2wtbmV4dCIgaHJlZj0iI2Nhcm91c2VsQW5ub3VuY2UiIHJvbGU9ImJ1dHRvbiIgZGF0YS1zbGlkZT0ibmV4dCI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJmYWwgZmEtNXggZmEtY2hldnJvbi1yaWdodCI+PC9pPgogICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8b2wgY2xhc3M9ImNhcm91c2VsLWluZGljYXRvcnMiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGkgZGF0YS10YXJnZXQ9IiNjYXJvdXNlbEFubm91bmNlIiBkYXRhLXNsaWRlLXRvPSIwIiBjbGFzcz0iYWN0aXZlIj48L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGkgZGF0YS10YXJnZXQ9IiNjYXJvdXNlbEFubm91bmNlIiBkYXRhLXNsaWRlLXRvPSIxIj48L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGkgZGF0YS10YXJnZXQ9IiNjYXJvdXNlbEFubm91bmNlIiBkYXRhLXNsaWRlLXRvPSIyIj48L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGkgZGF0YS10YXJnZXQ9IiNjYXJvdXNlbEFubm91bmNlIiBkYXRhLXNsaWRlLXRvPSIzIj48L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGkgZGF0YS10YXJnZXQ9IiNjYXJvdXNlbEFubm91bmNlIiBkYXRhLXNsaWRlLXRvPSI0Ij48L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGkgZGF0YS10YXJnZXQ9IiNjYXJvdXNlbEFubm91bmNlIiBkYXRhLXNsaWRlLXRvPSI1Ij48L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGkgZGF0YS10YXJnZXQ9IiNjYXJvdXNlbEFubm91bmNlIiBkYXRhLXNsaWRlLXRvPSI2Ij48L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGkgZGF0YS10YXJnZXQ9IiNjYXJvdXNlbEFubm91bmNlIiBkYXRhLXNsaWRlLXRvPSI3Ij48L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGkgZGF0YS10YXJnZXQ9IiNjYXJvdXNlbEFubm91bmNlIiBkYXRhLXNsaWRlLXRvPSI4Ij48L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGkgZGF0YS10YXJnZXQ9IiNjYXJvdXNlbEFubm91bmNlIiBkYXRhLXNsaWRlLXRvPSI5Ij48L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGkgZGF0YS10YXJnZXQ9IiNjYXJvdXNlbEFubm91bmNlIiBkYXRhLXNsaWRlLXRvPSIxMCI+PC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpIGRhdGEtdGFyZ2V0PSIjY2Fyb3VzZWxBbm5vdW5jZSIgZGF0YS1zbGlkZS10bz0iMTEiPjwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L29sPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAKICAgICAgICA8ZGl2IGNsYXNzPSJhbm5vdW5jZSI+CiAgICAgICAgICAgIDxoMiBjbGFzcz0iYW5ub3VuY2UtdGl0bGUiPgogICAgICAgICAgICAgICAgUEFSSVMgVklJIC0gUVVBSSBBTkFUT0xFIEZSQU5DRQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAtIDUgUGnDqGNlcwogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9oMj4KICAgICAgICAgICAgPHAgY2xhc3M9ImFubm91bmNlLWluZm9zIj4KICAgICAgICAgICAgICAgIEFwcGFydGVtZW50CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC0gMyBjaGFtYnJlcwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC0gMjI1Jm5ic3A7bTxzdXA+Mjwvc3VwPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAtIDxiPjMmbmJzcDs1MDAmbmJzcDswMDAmbmJzcDsmZXVybzs8L2I+Jm5ic3A7RkFJICjDoCBsYSBjaGFyZ2UgZGUgbCYjMDM5O2FjcXXDqXJldXIpCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YnI+CiAgICAgICAgICAgICAgICA8ZW0+UmVmLiA1MjM3NzwvZW0+CiAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgPHAgY2xhc3M9ImFubm91bmNlLWRlc2NyaXB0aW9uIj4KICAgICAgICAgICAgICAgIFNvbXB0dWV1eCBhcHBhcnRlbWVudCBkZSAyMjUgbcKyIGVuIFJleiBkZSBDaGF1c3PDqWUgY29tcHJlbmFudCA6IFVuZSBnYWxlcmllIGQmIzAzOTtlbnRyw6llLCB1biBncmFuZCBzYWxvbiwgdHJvaXMgY2hhbWJyZXMsIHRyb2lzIHNhbGxlcyBkZSBiYWlucywgdW5lIGdyYW5kZSBjdWlzaW5lIGRpbmF0b2lyZSwgdW5lIGNhdmUgZXQgdW4gYm94IGRvdWJsZS4KQk9JU0VSSUVTIC0gQ0hFTUlORUVTIC0gREVDT1JBVElPTiBSQUZGSU5FRQogICAgICAgICAgICA8L3A+CiAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICA8dWwgY2xhc3M9ImFubm91bmNlLWFjdGlvbnMgbGlzdC1pbmxpbmUgZC1mbGV4IGFsaWduLWl0ZW1zLWNlbnRlciBqdXN0aWZ5LWNvbnRlbnQtYmV0d2VlbiBtYi0wIj4KICAgICAgICAgICAgICAgIDxsaSBjbGFzcz0ibGlzdC1pbmxpbmUtaXRlbSI+PGEgaHJlZj0iaHR0cHM6Ly93d3cuYWdlbmNlc3dpbmRzb3IuZnIvYWNoZXRlciI+UmV0b3VyIMOgIGxhIGxpc3RlIGRlcyBhbm5vbmNlczwvYT48L2xpPgogICAgICAgICAgICAgICAgPGxpIGNsYXNzPSJsaXN0LWlubGluZS1pdGVtIj48YSBocmVmPSJodHRwczovL3d3dy5hZ2VuY2Vzd2luZHNvci5mci9hbm5vbmNlLzUyMzc3L2V4cG9ydCI+RmljaGUgUERGPC9hPjwvbGk+CiAgICAgICAgICAgIDwvdWw+CiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InJvdyBnYWxsZXJ5IiBpZD0iZ2FsbGVyeV81MjM3NyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbC00IG10LTMiPjxhIGhyZWY9Imh0dHBzOi8vd3d3LmFnZW5jZXN3aW5kc29yLmZyL3VwbG9hZHMvbmV1aWxseS81YTA1ZTVkNTE4NGU0YWQ3YmVhNDU0NDMzMzNkMDExNy5qcGciPjxpbWcgc3JjPSJodHRwczovL3d3dy5hZ2VuY2Vzd2luZHNvci5mci91cGxvYWRzL25ldWlsbHkvbWQvNWEwNWU1ZDUxODRlNGFkN2JlYTQ1NDQzMzMzZDAxMTcuanBnIiBjbGFzcz0iaW1nLWZsdWlkIiBhbHQ9IiI+PC9hPjwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtNCBtdC0zIj48YSBocmVmPSJodHRwczovL3d3dy5hZ2VuY2Vzd2luZHNvci5mci91cGxvYWRzL25ldWlsbHkvNjlkY2EwMmY0YzdiNGQzYWFhNGRlZDA1YjY1MTA5YWYuanBnIj48aW1nIHNyYz0iaHR0cHM6Ly93d3cuYWdlbmNlc3dpbmRzb3IuZnIvdXBsb2Fkcy9uZXVpbGx5L21kLzY5ZGNhMDJmNGM3YjRkM2FhYTRkZWQwNWI2NTEwOWFmLmpwZyIgY2xhc3M9ImltZy1mbHVpZCIgYWx0PSIiPjwvYT48L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sLTQgbXQtMyI+PGEgaHJlZj0iaHR0cHM6Ly93d3cuYWdlbmNlc3dpbmRzb3IuZnIvdXBsb2Fkcy9uZXVpbGx5LzEyOGQ2ZDZjNmNmOTQ3MjFiM2Q5NDliMDEyZWU5MTgwLmpwZyI+PGltZyBzcmM9Imh0dHBzOi8vd3d3LmFnZW5jZXN3aW5kc29yLmZyL3VwbG9hZHMvbmV1aWxseS9tZC8xMjhkNmQ2YzZjZjk0NzIxYjNkOTQ5YjAxMmVlOTE4MC5qcGciIGNsYXNzPSJpbWctZmx1aWQiIGFsdD0iIj48L2E+PC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbC00IG10LTMiPjxhIGhyZWY9Imh0dHBzOi8vd3d3LmFnZW5jZXN3aW5kc29yLmZyL3VwbG9hZHMvbmV1aWxseS9hNGQzMTk3NzY0YjI0MTcxOWU2NDk4YTFjYmNjN2Y4NC5qcGciPjxpbWcgc3JjPSJodHRwczovL3d3dy5hZ2VuY2Vzd2luZHNvci5mci91cGxvYWRzL25ldWlsbHkvbWQvYTRkMzE5Nzc2NGIyNDE3MTllNjQ5OGExY2JjYzdmODQuanBnIiBjbGFzcz0iaW1nLWZsdWlkIiBhbHQ9IiI+PC9hPjwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtNCBtdC0zIj48YSBocmVmPSJodHRwczovL3d3dy5hZ2VuY2Vzd2luZHNvci5mci91cGxvYWRzL25ldWlsbHkvYjQ0MDcxZGQ0YTlhNDIyNDkxNTNkOGNiZWJiNzhhM2IuanBnIj48aW1nIHNyYz0iaHR0cHM6Ly93d3cuYWdlbmNlc3dpbmRzb3IuZnIvdXBsb2Fkcy9uZXVpbGx5L21kL2I0NDA3MWRkNGE5YTQyMjQ5MTUzZDhjYmViYjc4YTNiLmpwZyIgY2xhc3M9ImltZy1mbHVpZCIgYWx0PSIiPjwvYT48L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sLTQgbXQtMyI+PGEgaHJlZj0iaHR0cHM6Ly93d3cuYWdlbmNlc3dpbmRzb3IuZnIvdXBsb2Fkcy9uZXVpbGx5L2E2YzZmNTZlMWUyMzRkNDJiYmM3M2IyNjk4ODQxM2M2LmpwZyI+PGltZyBzcmM9Imh0dHBzOi8vd3d3LmFnZW5jZXN3aW5kc29yLmZyL3VwbG9hZHMvbmV1aWxseS9tZC9hNmM2ZjU2ZTFlMjM0ZDQyYmJjNzNiMjY5ODg0MTNjNi5qcGciIGNsYXNzPSJpbWctZmx1aWQiIGFsdD0iIj48L2E+PC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbC00IG10LTMiPjxhIGhyZWY9Imh0dHBzOi8vd3d3LmFnZW5jZXN3aW5kc29yLmZyL3VwbG9hZHMvbmV1aWxseS9hMmZlMTFhOTEwMmY0OTVmYTVmNDQ1NDc1MzUxM2E4OS5qcGciPjxpbWcgc3JjPSJodHRwczovL3d3dy5hZ2VuY2Vzd2luZHNvci5mci91cGxvYWRzL25ldWlsbHkvbWQvYTJmZTExYTkxMDJmNDk1ZmE1ZjQ0NTQ3NTM1MTNhODkuanBnIiBjbGFzcz0iaW1nLWZsdWlkIiBhbHQ9IiI+PC9hPjwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtNCBtdC0zIj48YSBocmVmPSJodHRwczovL3d3dy5hZ2VuY2Vzd2luZHNvci5mci91cGxvYWRzL25ldWlsbHkvODI3YjRmNjcxMjE2NGQ5YmE3OTBiMzA4NThkMTRmYTMuanBnIj48aW1nIHNyYz0iaHR0cHM6Ly93d3cuYWdlbmNlc3dpbmRzb3IuZnIvdXBsb2Fkcy9uZXVpbGx5L21kLzgyN2I0ZjY3MTIxNjRkOWJhNzkwYjMwODU4ZDE0ZmEzLmpwZyIgY2xhc3M9ImltZy1mbHVpZCIgYWx0PSIiPjwvYT48L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sLTQgbXQtMyI+PGEgaHJlZj0iaHR0cHM6Ly93d3cuYWdlbmNlc3dpbmRzb3IuZnIvdXBsb2Fkcy9uZXVpbGx5LzkxNTM4MGRlNWM5OTRiODJiYWE5OGFhNDRlNTQyMDI2LmpwZyI+PGltZyBzcmM9Imh0dHBzOi8vd3d3LmFnZW5jZXN3aW5kc29yLmZyL3VwbG9hZHMvbmV1aWxseS9tZC85MTUzODBkZTVjOTk0YjgyYmFhOThhYTQ0ZTU0MjAyNi5qcGciIGNsYXNzPSJpbWctZmx1aWQiIGFsdD0iIj48L2E+PC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbC00IG10LTMiPjxhIGhyZWY9Imh0dHBzOi8vd3d3LmFnZW5jZXN3aW5kc29yLmZyL3VwbG9hZHMvbmV1aWxseS9kMTJmMTU5MDg5ZTY0YmZmOTk0MjZkYzk5OWY3ZmFkMy5qcGciPjxpbWcgc3JjPSJodHRwczovL3d3dy5hZ2VuY2Vzd2luZHNvci5mci91cGxvYWRzL25ldWlsbHkvbWQvZDEyZjE1OTA4OWU2NGJmZjk5NDI2ZGM5OTlmN2ZhZDMuanBnIiBjbGFzcz0iaW1nLWZsdWlkIiBhbHQ9IiI+PC9hPjwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtNCBtdC0zIj48YSBocmVmPSJodHRwczovL3d3dy5hZ2VuY2Vzd2luZHNvci5mci91cGxvYWRzL25ldWlsbHkvMTVlZGE3MDlkOGMwNDYxYjkyZjM0ZGM2YjEwMWQ2YTUuanBnIj48aW1nIHNyYz0iaHR0cHM6Ly93d3cuYWdlbmNlc3dpbmRzb3IuZnIvdXBsb2Fkcy9uZXVpbGx5L21kLzE1ZWRhNzA5ZDhjMDQ2MWI5MmYzNGRjNmIxMDFkNmE1LmpwZyIgY2xhc3M9ImltZy1mbHVpZCIgYWx0PSIiPjwvYT48L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sLTQgbXQtMyI+PGEgaHJlZj0iaHR0cHM6Ly93d3cuYWdlbmNlc3dpbmRzb3IuZnIvdXBsb2Fkcy9uZXVpbGx5Lzg0YTYwYTI2NDFhMDQyMGViNmEzZjc0ZTQyMGYyNzNkLmpwZyI+PGltZyBzcmM9Imh0dHBzOi8vd3d3LmFnZW5jZXN3aW5kc29yLmZyL3VwbG9hZHMvbmV1aWxseS9tZC84NGE2MGEyNjQxYTA0MjBlYjZhM2Y3NGU0MjBmMjczZC5qcGciIGNsYXNzPSJpbWctZmx1aWQiIGFsdD0iIj48L2E+PC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICA8ZGl2IGNsYXNzPSJjb2wtbGctNiBjb2wteGwtNSBvZmZzZXQteGwtMSI+CiAgICAgICAgPGRpdiBjbGFzcz0ibXktNCI+PGltZyBzcmM9Imh0dHBzOi8vd3d3LmFnZW5jZXN3aW5kc29yLmZyL2Fzc2V0cy9pbWcvbmV1aWxseS9sb2dvLnN2ZyIgY2xhc3M9ImltZy1mbHVpZCIgc3R5bGU9Im1heC1oZWlnaHQ6NTBweDsiIGFsdD0iV2luZHNvciBOZXVpbGx5Ij48L2Rpdj4KCiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ibWItNSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXY+PGltZyBzcmM9Imh0dHBzOi8vd3d3LmFnZW5jZXN3aW5kc29yLmZyL3VwbG9hZHMvbmV1aWxseS9lcXVpcGUvVGhpZXJyeS1EZW1vbi5qcGciIGNsYXNzPSJpbWctdGh1bWJuYWlsIHJvdW5kZWQtY2lyY2xlIG1iLTIiIHN0eWxlPSJtYXgtaGVpZ2h0OjEwMHB4OyIgYWx0PSIiPjwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXY+CiAgICAgICAgICAgICAgICAgICAgPHNtYWxsPlZvdHJlIGNvbnRhY3QgOjwvc21hbGw+PGJyPgogICAgICAgICAgICAgICAgICAgIFRoaWVycnkgREVNT04KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IHN0eWxlPSJmb250LXNpemU6MS4zcmVtO21hcmdpbjouNXJlbSAwOyI+PGkgY2xhc3M9ImZhcyBmYS1waG9uZSIgc3R5bGU9ImNvbG9yOiNhM2NmNGE7Ij48L2k+IDxiPjAxJm5ic3A7NDEmbmJzcDs0MyZuYnNwOzI1Jm5ic3A7MjU8L2I+PC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IHN0eWxlPSJmb250LXNpemU6MXJlbTttYXJnaW46LjVyZW0gMDsiPjxhIGhyZWY9Im1haWx0bzomIzExNjsmIzQ2O2RlJiN4NmQ7byYjeDZlOyYjNjQ7JiN4Nzc7aSYjeDZlOyYjeDY0OyYjeDczO28mIzExNDsmI3gyZTsmI3g2NjtyIj48aSBjbGFzcz0iZmFzIGZhLWF0IiBzdHlsZT0iY29sb3I6I2EzY2Y0YTsiPjwvaT4gPHU+dC5kZW1vbkB3aW5kc29yLmZyPC91PjwvYT48L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgIAogICAgICAgIDx1bCBjbGFzcz0iYW5ub3VuY2UtZmllbGRzIGxpc3QtdW5zdHlsZWQgbXktMyI+CiAgICAgICAgICAgIDxsaT5TdXJmYWNlIExvaSBDYXJyZXogOiA8Yj4yMjUuMDAmbmJzcDttPHN1cD4yPC9zdXA+PC9iPjwvbGk+CiAgICAgICAgICAgIDxsaT5TdXJmYWNlIHRvdGFsZSA6IDxiPjIyNSZuYnNwO208c3VwPjI8L3N1cD48L2I+PC9saT4KICAgICAgICAgICAgPGxpPk5vbWJyZSBkZSBwacOoY2UocykgOiA8Yj41PC9iPjwvbGk+CiAgICAgICAgICAgIDxsaT5Ob21icmUgZGUgY2hhbWJyZShzKSA6IDxiPjM8L2I+PC9saT4KICAgICAgICAgICAgPGxpPsOJdGFnZSA6IDxiPjA8L2I+PC9saT4KICAgICAgICAgICAgPGxpPkFzY2VuY2V1ciA6IDxiPjE8L2I+PC9saT4KICAgICAgICAgICAgPGxpPkludGVycGhvbmUgOiA8Yj4xPC9iPjwvbGk+CiAgICAgICAgICAgIDxsaT5TYWxsZShzKSBkJiMwMzk7ZWF1IDogPGI+MDwvYj48L2xpPgogICAgICAgICAgICA8bGk+U2FsbGUocykgZGUgYmFpbiA6IDxiPjM8L2I+PC9saT4KICAgICAgICAgICAgPGxpPk5vbWJyZSBkZSBXQyA6IDxiPjA8L2I+PC9saT4KICAgICAgICAgICAgPGxpPlR5cGUgZGUgY3Vpc2luZSA6IDxiPkFtw6lyaWNhaW5lPC9iPjwvbGk+CiAgICAgICAgICAgIDxsaT5UeXBlIGRlIGNoYXVmZmFnZSA6IDxiPkNoYXVmZmFnZSBpbmRpdmlkdWVsIGF1IGdhejwvYj48L2xpPgogICAgICAgICAgICA8bGk+Q2F2ZShzKSA6IDxiPjE8L2I+PC9saT4KICAgICAgICAgICAgPGxpPlRlcnJhc3NlIG91IGphcmRpbiA6IDxiPk5vbjwvYj48L2xpPgogICAgICAgICAgICA8bGk+TGUgYmllbiBlc3QgZW4gY29wcm9wcmnDqXTDqSA6IDxiPk91aTwvYj48L2xpPgogICAgICAgICAgICA8bGk+Tm9tYnJlIGRlIGxvdChzKSA6IDxiPjA8L2I+PC9saT4KICAgICAgICAgICAgPGxpPkNoYXJnZXMgYW5udWVsbGVzIDogPGI+NiZuYnNwOzAwMCZuYnNwOyZldXJvOzwvYj48L2xpPgogICAgICAgIDwvdWw+CgogICAgICAgIDxkaXY+PGI+UFJJWDwvYj48L2Rpdj4KICAgICAgICA8dWwgY2xhc3M9ImFubm91bmNlLWZpZWxkcyBsaXN0LXVuc3R5bGVkIG15LTMiPgogICAgICAgICAgICA8bGk+UHJpeCA6IDxiPjMmbmJzcDs1MDAmbmJzcDswMDAmbmJzcDsmZXVybzs8L2I+PC9saT4KICAgICAgICAgICAgPGxpPkhvbm9yYWlyZXMgYWNxdcOpcmV1cihzKSA6IDxiPjEzNCZuYnNwOzYxNSZuYnNwOyZldXJvOzwvYj48L2xpPgogICAgICAgICAgICA8bGk+JSBob25vcmFpcmVzIGFjcXXDqXJldXIocykgOiA8Yj40LDAwJTwvYj48L2xpPgogICAgICAgIDwvdWw+CgogICAgICAgIDxkaXYgY2xhc3M9Im1iLTIiPkRQRTwvZGl2PgogICAgICAgIDxkaXYgY2xhc3M9InJvdyI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbC1tZC02Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBkYXRhLXNyYz0iaHR0cHM6Ly93d3cuYWdlbmNlc3dpbmRzb3IuZnIvZGlhZ25vc3RpYy9kcGUvMjU3IiBjbGFzcz0iaW1nLWZsdWlkIGJvcmRlciBib3JkZXItZGFyayBsYXp5bG9hZCIgc3R5bGU9ImRpc3BsYXk6bm9uZTsiPgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImxvYWRlciByYXRpbzFfMSI+PGkgY2xhc3M9ImZhcyBmYS1zcGlubmVyIGZhLXNwaW4gZmEtM3ggdGV4dC1tdXRlZCI+PC9pPjwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbC1tZC02IG10LTMgbXQtbWQtMCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgZGF0YS1zcmM9Imh0dHBzOi8vd3d3LmFnZW5jZXN3aW5kc29yLmZyL2RpYWdub3N0aWMvZ2VzLzU1IiBjbGFzcz0iaW1nLWZsdWlkIGJvcmRlciBib3JkZXItZGFyayBsYXp5bG9hZCIgc3R5bGU9ImRpc3BsYXk6bm9uZTsiPgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImxvYWRlciByYXRpbzFfMSI+PGkgY2xhc3M9ImZhcyBmYS1zcGlubmVyIGZhLXNwaW4gZmEtM3ggdGV4dC1tdXRlZCI+PC9pPjwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9kaXY+CiAgICA8L2Rpdj4KPC9kaXY+CgogICAgICAgIDwvZGl2PgoKICAgICAgICA8Zm9vdGVyIGlkPSJmb290ZXIiIGNsYXNzPSJyb3cgZmxleC1jb2x1bW4gZmxleC14bC1yb3cgbXgtMCBtdC01IiBzdHlsZT0iZm9udC1zaXplOjAuOHJlbTtsaW5lLWhlaWdodDoxLjJyZW07Ij4KICAgICAgICA8c3BhbiBjbGFzcz0ibXIteGwtNCI+PGI+V0lORFNPUiBORVVJTExZPC9iPiAtIDIzLCBydWUgTWFkZWxlaW5lIE1pY2hlbGlzLCA5MjIwMCBORVVJTExZPC9zcGFuPgogICAgICAgIDxzcGFuIGNsYXNzPSJtdC0yIG10LXhsLTAiPlTDqWzDqXBob25lIDogMDEmbmJzcDs0MSZuYnNwOzQzJm5ic3A7MjUmbmJzcDsyNTwvc3Bhbj4KICAgICAgICA8dWwgY2xhc3M9Imxpc3QtaW5saW5lIG1iLTAgbXQtMiBtdC14bC0wIG1sLXhsLWF1dG8iPgogICAgICAgICAgICA8bGkgY2xhc3M9Imxpc3QtaW5saW5lLWl0ZW0iPjxhIGhyZWY9IiMiIGRhdGEtdG9nZ2xlPSJtb2RhbCIgZGF0YS10YXJnZXQ9IiNwcmljZXNNb2RhbCI+VGFyaWZzPC9hPjwvbGk+CiAgICAgICAgICAgIDxsaSBjbGFzcz0ibGlzdC1pbmxpbmUtaXRlbSI+PGEgaHJlZj0iaHR0cHM6Ly93d3cuYWdlbmNlc3dpbmRzb3IuZnIvcHJvdGVjdGlvbi1kZXMtZG9ubmVlcyI+UG9saXRpcXVlL2NoYXJ0ZSBkZSB2aWUgcHJpdsOpZTwvYT48L2xpPgogICAgICAgICAgICA8bGkgY2xhc3M9Imxpc3QtaW5saW5lLWl0ZW0iPjxhIGhyZWY9IiMiIGlkPSJjb29raWUtZm9vdGVyLWJ1dHRvbiI+UG9saXRpcXVlIGRlIGNvb2tpZXM8L2E+PC9saT4KICAgICAgICAgICAgPGxpIGNsYXNzPSJsaXN0LWlubGluZS1pdGVtIj48YSBocmVmPSIjIiBkYXRhLXRvZ2dsZT0ibW9kYWwiIGRhdGEtdGFyZ2V0PSIjbGVnYWxNb2RhbCI+TWVudGlvbnMgbMOpZ2FsZXM8L2E+PC9saT4KICAgICAgICA8L3VsPgogICAgPC9mb290ZXI+CiAgICA8L21haW4+CgogICAgCiAgICA8ZGl2IGNsYXNzPSJtb2RhbCBmYWRlIiBpZD0ibG9hZE1vZGFsIj4KICAgIDxkaXYgY2xhc3M9Im1vZGFsLWRpYWxvZyBtb2RhbC14bCBtb2RhbC1kaWFsb2ctY2VudGVyZWQiPgogICAgICAgIDxkaXYgY2xhc3M9Im1vZGFsLWNvbnRlbnQiPjwvZGl2PgogICAgPC9kaXY+CjwvZGl2PgogICAgPGRpdiBjbGFzcz0ibW9kYWwgZmFkZSIgaWQ9InByaWNlc01vZGFsIj4KICAgIDxkaXYgY2xhc3M9Im1vZGFsLWRpYWxvZyBtb2RhbC1sZyBtb2RhbC1kaWFsb2ctY2VudGVyZWQiPgogICAgICAgIDxkaXYgY2xhc3M9Im1vZGFsLWNvbnRlbnQiPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJtb2RhbC1oZWFkZXIiPgogICAgICAgICAgICAgICAgPGgzIGNsYXNzPSJtb2RhbC10aXRsZSI+PGltZyBzcmM9Imh0dHBzOi8vd3d3LmFnZW5jZXN3aW5kc29yLmZyL2Fzc2V0cy9pbWcvbG9nb19hZ2VuY3kuc3ZnIiBjbGFzcz0iaW1nLWZsdWlkIiBzdHlsZT0iaGVpZ2h0OjQwcHg7IiBhbHQ9IkxlcyBhZ2VuY2VzIFdpbmRzb3IiPjwvaDM+CiAgICAgICAgICAgICAgICA8YnV0dG9uIHR5cGU9ImJ1dHRvbiIgY2xhc3M9ImNsb3NlIiBkYXRhLWRpc21pc3M9Im1vZGFsIiBhcmlhLWxhYmVsPSJDbG9zZSI+CiAgICAgICAgICAgICAgICAgICAgPHNwYW4gYXJpYS1oaWRkZW49InRydWUiPiZ0aW1lczs8L3NwYW4+CiAgICAgICAgICAgICAgICA8L2J1dHRvbj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9Im1vZGFsLWJvZHkiPgogICAgICAgICAgICAgICAgPGgzPkJBUsOITUVTIERFUyBIT05PUkFJUkVTPC9oMz4KCiAgICAgICAgICAgICAgICA8aDQ+VkVOVEVTIDo8L2g0PgoKICAgICAgICAgICAgICAgIDxwPjxzdHJvbmc+PHNwYW4gc3R5bGU9ImNvbG9yOiM4YmJmMmU7bWFyZ2luLXJpZ2h0OjEwcHg7Ij4mIzk2Nzk7PC9zcGFuPiBNYW5kYXRzPC9zdHJvbmc+IDxpbWcgc3JjPSJodHRwczovL3d3dy5hZ2VuY2Vzd2luZHNvci5mci9hc3NldHMvaW1nL3RyYWl0LnBuZyIgc3R5bGU9ImhlaWdodDoxNnB4O21hcmdpbjowIDEwcHg7d2lkdGg6NTIlOyIgYWx0PSIiPiA8c3Ryb25nPjUgJTwvc3Ryb25nPiAow6AgbGEgY2hhcmdlIGRlIGwnYWNxdcOpcmV1cik8L3A+CgogICAgICAgICAgICAgICAgPGJyPgoKICAgICAgICAgICAgICAgIDxoND5MT0NBVElPTlMgKGVuIHJlc3BlY3QgZGUgbGEgbG9pIEFsdXIgMjAxNSkgOjwvaDQ+CgogICAgICAgICAgICAgICAgPHRhYmxlIGNsYXNzPSJ0YWJsZSB0YWJsZS1ib3JkZXJlZCB0YWJsZS1uLXJlc3BvbnNpdmUiPgogICAgICAgICAgICAgICAgICAgIDx0aGVhZD4KICAgICAgICAgICAgICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRoIGNsYXNzPSJ0ZXh0LWNlbnRlciI+UsOpcGFydGl0aW9uIGRlcyBob25vcmFpcmVzPC90aD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0aCBjbGFzcz0idGV4dC1jZW50ZXIiIHN0eWxlPSJ3aWR0aDoyMCU7Ij5CYWlsbGV1cjwvdGg+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGggY2xhc3M9InRleHQtY2VudGVyIiBzdHlsZT0id2lkdGg6MjAlOyI+TG9jYXRhaXJlPC90aD4KICAgICAgICAgICAgICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgICAgICAgICA8L3RoZWFkPgogICAgICAgICAgICAgICAgICAgIDx0Ym9keT4KICAgICAgICAgICAgICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPjxzdHJvbmc+SG9ub3JhaXJlcyBkZSBsb2NhdGlvbjwvc3Ryb25nPiDDoCBsYSBjaGFyZ2UgZXhjbHVzaXZlIGR1IGJhaWxsZXVyIHBvdXIgbGVzIGxvY2F1eCBzb3VtaXMgw6AgbGEgbG9pIG7CsDg5LTQ2MiBkdSA2IGp1aWxsZXQgMTk4OS48L3RkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzPSJ0ZXh0LWNlbnRlciI+PHN0cm9uZz4xIG1vaXMgZGUgbG95ZXIgaG9ycyBjaGFyZ2VzPC9zdHJvbmc+PC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD48L3RkPgogICAgICAgICAgICAgICAgICAgICAgICA8L3RyPgogICAgICAgICAgICAgICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdj48c3Ryb25nPkhvbm9yYWlyZXMgcmVsYXRpZnMgOjwvc3Ryb25nPjwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx1bD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpPjxzdHJvbmc+w4AgbGEgdmlzaXRlLDwvc3Ryb25nPjwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaT48c3Ryb25nPsOAIGxhIHLDqWRhY3Rpb24gZHUgY29udHJhdCw8L3N0cm9uZz48L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGk+PHN0cm9uZz7DgCBsYSBjb25zdGl0dXRpb24gZHUgZG9zc2llci48L3N0cm9uZz48L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdWw+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzPSJ0ZXh0LWNlbnRlciI+PHN0cm9uZz4xMiAmZXVybzs8L3N0cm9uZz4gVFRDIHBhciBtPHN1cD4yPC9zdXA+PC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz0idGV4dC1jZW50ZXIiPjxzdHJvbmc+MTIgJmV1cm87PC9zdHJvbmc+IFRUQyBwYXIgbTxzdXA+Mjwvc3VwPjwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD48c3Ryb25nPkhvbm9yYWlyZXMgcmVsYXRpZnMgw6AgbGEgcsOpYWxpc2F0aW9uIGRlIGwnw6l0YXQgZGVzIGxpZXV4Ljwvc3Ryb25nPjwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3M9InRleHQtY2VudGVyIj48c3Ryb25nPjMgJmV1cm87PC9zdHJvbmc+IFRUQyBwYXIgbTxzdXA+Mjwvc3VwPjwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3M9InRleHQtY2VudGVyIj48c3Ryb25nPjMgJmV1cm87PC9zdHJvbmc+IFRUQyBwYXIgbTxzdXA+Mjwvc3VwPjwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgICAgICAgICAgPC90Ym9keT4KICAgICAgICAgICAgICAgIDwvdGFibGU+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgogICAgPC9kaXY+CjwvZGl2PgogICAgPGRpdiBjbGFzcz0ibW9kYWwgZmFkZSIgaWQ9ImNvbnRhY3RNb2RhbCIgdGFiaW5kZXg9Ii0xIj4KICAgIDxkaXYgY2xhc3M9Im1vZGFsLWRpYWxvZyBtb2RhbC1sZyBtb2RhbC1kaWFsb2ctY2VudGVyZWQiPgogICAgICAgIDxkaXYgY2xhc3M9Im1vZGFsLWNvbnRlbnQiPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJtb2RhbC1oZWFkZXIiPgogICAgICAgICAgICAgICAgPGgzIGNsYXNzPSJtb2RhbC10aXRsZSI+Tm91cyBjb250YWN0ZXI8L2gzPgogICAgICAgICAgICAgICAgPGJ1dHRvbiB0eXBlPSJidXR0b24iIGNsYXNzPSJjbG9zZSIgZGF0YS1kaXNtaXNzPSJtb2RhbCIgYXJpYS1sYWJlbD0iQ2xvc2UiPgogICAgICAgICAgICAgICAgICAgIDxzcGFuIGFyaWEtaGlkZGVuPSJ0cnVlIj4mdGltZXM7PC9zcGFuPgogICAgICAgICAgICAgICAgPC9idXR0b24+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8Zm9ybSBtZXRob2Q9IlBPU1QiIGFjdGlvbj0iaHR0cHM6Ly93d3cuYWdlbmNlc3dpbmRzb3IuZnIvY29udGFjdC9zdG9yZSIgYWNjZXB0LWNoYXJzZXQ9IlVURi04IiBpZD0iZnJtLWNvbnRhY3QiPjxpbnB1dCBuYW1lPSJfdG9rZW4iIHR5cGU9ImhpZGRlbiIgdmFsdWU9IlVidnlUQ2JoemJsZ2xmZGdHWUNwajNuRHBIOWtLV2FVVzF3NTlxSG4iPgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ibW9kYWwtYm9keSI+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icmVzcG9uc2UiPjwvZGl2PgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InJvdyI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbC1sZy02Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImZvcm0tZ3JvdXAiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzZWxlY3QgY2xhc3M9ImZvcm0tY29udHJvbCIgbmFtZT0iYWdlbmN5Ij48b3B0aW9uIHZhbHVlPSIiIHNlbGVjdGVkPSJzZWxlY3RlZCI+Q2hvaXNpc3NleiB2b3RyZSBhZ2VuY2U8L29wdGlvbj48b3B0aW9uIHZhbHVlPSIxIj5XaW5kc29yIE5ldWlsbHk8L29wdGlvbj48b3B0aW9uIHZhbHVlPSIyIj5XaW5kc29yIEludmFsaWRlczwvb3B0aW9uPjwvc2VsZWN0PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJmb3JtLWdyb3VwIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgZm9yPSJjdF9jaXZpbGl0eSIgY2xhc3M9Im1iLTEiPkNpdmlsaXQmZWFjdXRlOyAqPC9sYWJlbD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c2VsZWN0IGlkPSJjdF9jaXZpbGl0eSIgY2xhc3M9ImZvcm0tY29udHJvbCIgbmFtZT0iY2l2aWxpdHkiPjxvcHRpb24gdmFsdWU9Ik1vbnNpZXVyIj5Nb25zaWV1cjwvb3B0aW9uPjxvcHRpb24gdmFsdWU9Ik1hZGFtZSI+TWFkYW1lPC9vcHRpb24+PC9zZWxlY3Q+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImZvcm0tZ3JvdXAiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBmb3I9ImN0X2xhc3RuYW1lIiBjbGFzcz0ibWItMSI+Tm9tICo8L2xhYmVsPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCBpZD0iY3RfbGFzdG5hbWUiIGNsYXNzPSJmb3JtLWNvbnRyb2wiIG5hbWU9Imxhc3RuYW1lIiB0eXBlPSJ0ZXh0IiB2YWx1ZT0iIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZm9ybS1ncm91cCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGZvcj0iY3RfZmlyc3RuYW1lIiBjbGFzcz0ibWItMSI+UHImZWFjdXRlO25vbTwvbGFiZWw+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IGlkPSJjdF9maXJzdG5hbWUiIGNsYXNzPSJmb3JtLWNvbnRyb2wiIG5hbWU9ImZpcnN0bmFtZSIgdHlwZT0idGV4dCIgdmFsdWU9IiI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImZvcm0tZ3JvdXAiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBmb3I9ImN0X2VtYWlsIiBjbGFzcz0ibWItMSI+RW1haWwgKjwvbGFiZWw+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IGlkPSJjdF9lbWFpbCIgY2xhc3M9ImZvcm0tY29udHJvbCIgbmFtZT0iZW1haWwiIHR5cGU9InRleHQiIHZhbHVlPSIiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJmb3JtLWdyb3VwIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgZm9yPSJjdF9waG9uZSIgY2xhc3M9Im1iLTEiPlQmZWFjdXRlO2wmZWFjdXRlO3Bob25lPC9sYWJlbD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgaWQ9ImN0X3Bob25lIiBjbGFzcz0iZm9ybS1jb250cm9sIiBuYW1lPSJwaG9uZSIgdHlwZT0idGV4dCIgdmFsdWU9IiI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImZvcm0tZ3JvdXAiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBmb3I9ImN0X2NhcHRjaGEiIGNsYXNzPSJtYi0xIj5RdWVsbGUgZXN0IGwmIzAzOTthbm4mZWFjdXRlO2UgZW4gY291cnMgPyAqPC9sYWJlbD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgaWQ9ImN0X2NhcHRjaGEiIGNsYXNzPSJmb3JtLWNvbnRyb2wiIG1heGxlbmd0aD0iNCIgbmFtZT0iY2FwdGNoYSIgdHlwZT0idGV4dCIgdmFsdWU9IiI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbC1sZy02Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImQtZmxleCBmbGV4LWNvbHVtbiBoLTEwMCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZm9ybS1ncm91cCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBmb3I9IiIgY2xhc3M9Im1iLTEgdy0xMDAiPlZvdHJlIHJlY2hlcmNoZTwvbGFiZWw+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJmb3JtLWNoZWNrIGZvcm0tY2hlY2staW5saW5lIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgY2xhc3M9ImZvcm0tY2hlY2stbGFiZWwiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0icmFkaW8iIGNsYXNzPSJmb3JtLWNoZWNrLWlucHV0IiBuYW1lPSJzZWFyY2giIHZhbHVlPSJMb2NhdGlvbnMiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBMb2NhdGlvbnMKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2xhYmVsPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJmb3JtLWNoZWNrIGZvcm0tY2hlY2staW5saW5lIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgY2xhc3M9ImZvcm0tY2hlY2stbGFiZWwiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0icmFkaW8iIGNsYXNzPSJmb3JtLWNoZWNrLWlucHV0IiBuYW1lPSJzZWFyY2giIHZhbHVlPSJWZW50ZXMiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBWZW50ZXMKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2xhYmVsPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJmb3JtLWNoZWNrIGZvcm0tY2hlY2staW5saW5lIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgY2xhc3M9ImZvcm0tY2hlY2stbGFiZWwiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0icmFkaW8iIGNsYXNzPSJmb3JtLWNoZWNrLWlucHV0IiBuYW1lPSJzZWFyY2giIHZhbHVlPSJFc3RpbWF0aW9ucyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEVzdGltYXRpb25zCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9sYWJlbD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImZvcm0tZ3JvdXAiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgZm9yPSJjdF9tZXNzYWdlIiBjbGFzcz0ibWItMSI+UiZlYWN1dGU7ZGlnZXogdm90cmUgZGVtYW5kZSA6PC9sYWJlbD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRleHRhcmVhIGlkPSJjdF9tZXNzYWdlIiBjbGFzcz0iZm9ybS1jb250cm9sIiByb3dzPSI1IiBuYW1lPSJtZXNzYWdlIiBjb2xzPSI1MCI+PC90ZXh0YXJlYT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJmbGV4LWdyb3ctMSB3LTEwMCBkLWZsZXggYWxpZ24taXRlbXMtY2VudGVyIGp1c3RpZnktY29udGVudC1jZW50ZXIgdGV4dC1jZW50ZXIiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IHN0eWxlPSJ3aWR0aDozMDBweDsiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly93d3cuYWdlbmNlc3dpbmRzb3IuZnIvYWdlbmNlL25ldWlsbHkiPjxpbWcgc3JjPSJodHRwczovL3d3dy5hZ2VuY2Vzd2luZHNvci5mci9hc3NldHMvaW1nL25ldWlsbHkvbG9nby5zdmciIGNsYXNzPSJpbWctZmx1aWQiIHN0eWxlPSJtYXgtaGVpZ2h0OjYwcHg7IiBhbHQ9IldpbmRzb3IgTmV1aWxseSI+PC9hPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YWRkcmVzcyBjbGFzcz0ibWItMCIgc3R5bGU9ImZvbnQtc2l6ZTowLjg1cmVtO2xpbmUtaGVpZ2h0OjFyZW07cGFkZGluZy10b3A6MC41cmVtOyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAyMywgcnVlIE1hZGVsZWluZSBNaWNoZWxpcywgOTIyMDAgTkVVSUxMWTxicj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFTDqWwuIDogPGIgc3R5bGU9ImZvbnQtc2l6ZToxcmVtOyI+MDEmbmJzcDs0MSZuYnNwOzQzJm5ic3A7MjUmbmJzcDsyNTwvYj48YnI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYWRkcmVzcz4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxociBjbGFzcz0ibXktMyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vd3d3LmFnZW5jZXN3aW5kc29yLmZyL2FnZW5jZS9pbnZhbGlkZXMiPjxpbWcgc3JjPSJodHRwczovL3d3dy5hZ2VuY2Vzd2luZHNvci5mci9hc3NldHMvaW1nL2ludmFsaWRlcy9sb2dvLnN2ZyIgY2xhc3M9ImltZy1mbHVpZCIgc3R5bGU9Im1heC1oZWlnaHQ6NjBweDsiIGFsdD0iV2luZHNvciBJbnZhbGlkZXMiPjwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGFkZHJlc3MgY2xhc3M9Im1iLTAiIHN0eWxlPSJmb250LXNpemU6MC44NXJlbTtsaW5lLWhlaWdodDoxcmVtO3BhZGRpbmctdG9wOjAuNXJlbTsiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgMTQ4LCBydWUgZGUgR3JlbmVsbGUsIDc1MDA3IFBBUklTPGJyPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgVMOpbC4gOiA8YiBzdHlsZT0iZm9udC1zaXplOjFyZW07Ij4wMSZuYnNwOzQ0Jm5ic3A7MTgmbmJzcDswMCZuYnNwOzMwPC9iPjxicj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hZGRyZXNzPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ibXQtNCBtdC1sZy0wIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZm9ybS1jaGVjayBzbWFsbCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgaWQ9ImN0X2xlZ2FsIiBjbGFzcz0iZm9ybS1jaGVjay1pbnB1dCIgbmFtZT0ibGVnYWwiIHR5cGU9ImNoZWNrYm94IiB2YWx1ZT0iMSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgZm9yPSJjdF9sZWdhbCIgY2xhc3M9ImZvcm0tY2hlY2stbGFiZWwiPkonYWkgcHJpcyBjb25uYWlzc2FuY2VzIGRlcyA8YSBocmVmPSIjIiBkYXRhLXRvZ2dsZT0ibW9kYWwiIGRhdGEtdGFyZ2V0PSIjbGVnYWxNb2RhbCI+PHU+Q0dVPC91PjwvYT48L2xhYmVsPgogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZm9ybS1jaGVjayBzbWFsbCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgaWQ9ImN0X3ByaXZhY3kiIGNsYXNzPSJmb3JtLWNoZWNrLWlucHV0IiBuYW1lPSJwcml2YWN5IiB0eXBlPSJjaGVja2JveCIgdmFsdWU9IjEiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGZvcj0iY3RfcHJpdmFjeSIgY2xhc3M9ImZvcm0tY2hlY2stbGFiZWwiPkonYWNjZXB0ZSBsJ3V0aWxpc2F0aW9uIGRlIG1lcyBkb25uw6llcyBwZXJzb25uZWxsZXMgY29tbWUgZMOpY3JpdGVzIGRhbnMgbGEgPGEgaHJlZj0iaHR0cHM6Ly93d3cuYWdlbmNlc3dpbmRzb3IuZnIvcHJvdGVjdGlvbi1kZXMtZG9ubmVlcyIgdGFyZ2V0PSJfYmxhbmsiPjx1PlBvbGl0aXF1ZS9jaGFydGUgZGUgdmllIHByaXbDqWU8L3U+PC9hPi48YnI+Q29uZm9ybcOpbWVudCDDoCBsYSBsb2kgwqsgaW5mb3JtYXRpcXVlIGV0IGxpYmVydMOpcyDCuywgdm91cyBwb3V2ZXogZXhlcmNlciB2b3RyZSBkcm9pdCBkJ2FjY8OocyBhdXggZG9ubsOpZXMgdm91cyBjb25jZXJuYW50IGV0IGxlcyBmYWlyZSByZWN0aWZpZXIgaWNpLjwvbGFiZWw+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJtb2RhbC1mb290ZXIiPgogICAgICAgICAgICAgICAgICAgIDxidXR0b24gdHlwZT0ic3VibWl0IiBjbGFzcz0iYnRuIGJ0bi1vdXRsaW5lLWRhcmtncmVlbiI+RU5WT1lFUjwvYnV0dG9uPgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZm9ybT4KICAgICAgICA8L2Rpdj4KICAgIDwvZGl2Pgo8L2Rpdj4KICAgIDxkaXYgY2xhc3M9Im1vZGFsIGZhZGUiIGlkPSJsZWdhbE1vZGFsIiB0YWJpbmRleD0iLTEiPgogICAgPGRpdiBjbGFzcz0ibW9kYWwtZGlhbG9nIG1vZGFsLWxnIG1vZGFsLWRpYWxvZy1jZW50ZXJlZCI+CiAgICAgICAgPGRpdiBjbGFzcz0ibW9kYWwtY29udGVudCI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9Im1vZGFsLWhlYWRlciI+CiAgICAgICAgICAgICAgICA8aDMgY2xhc3M9Im1vZGFsLXRpdGxlIj5NZW50aW9ucyBMw6lnYWxlczwvaDM+CiAgICAgICAgICAgICAgICA8YnV0dG9uIHR5cGU9ImJ1dHRvbiIgY2xhc3M9ImNsb3NlIiBkYXRhLWRpc21pc3M9Im1vZGFsIiBhcmlhLWxhYmVsPSJDbG9zZSI+CiAgICAgICAgICAgICAgICAgICAgPHNwYW4gYXJpYS1oaWRkZW49InRydWUiPiZ0aW1lczs8L3NwYW4+CiAgICAgICAgICAgICAgICA8L2J1dHRvbj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9Im1vZGFsLWJvZHkiPgogICAgICAgICAgICAgICAgPGg0PsOJZGl0ZXVyPC9oND4KICAgICAgICAgICAgICAgIDxwPkxlIHNpdGUgYWNjZXNzaWJsZSDDoCBsJ2FkcmVzc2UgPGEgaHJlZj0iaHR0cHM6Ly93d3cuYWdlbmNlc3dpbmRzb3IuZnIiIHN0eWxlPSJ0ZXh0LWRlY29yYXRpb246dW5kZXJsaW5lOyI+aHR0cHM6Ly93d3cuYWdlbmNlc3dpbmRzb3IuZnI8L2E+IGVzdCDDqWRpdMOpIHBhciZuYnNwOzo8YnI+CiAgICAgICAgICAgICAgICAgICAgPHN0cm9uZz5HUk9VUEUgV0lORFNPUjwvc3Ryb25nPiAoU0EgYXUgY2FwaXRhbCBkZSAzMDAmbmJzcDswMDAg4oKsLCBpbW1hdHJpY3Vsw6llIGF1IFJDUyBkZSBWZXJzYWlsbGVzIHNvdXMgbGUgbsKwIEIgMzQwIDY0NCA1MzMgZXQgZG9udCBsZSBzacOoZ2Ugc29jaWFsIGVzdCA0LCBhdmVudWUgTW9yYW5lIFNhdWxuaWVyIDc4MTQwIFbDiUxJWlkpLjwvcD4KICAgICAgICAgICAgICAgIDxoND5EaXJlY3RldXIgZGUgbGEgcHVibGljYXRpb248L2g0PgogICAgICAgICAgICAgICAgPHA+CiAgICAgICAgICAgICAgICAgICAgTGUgcmVzcG9uc2FibGUgZHUgc2l0ZSBlc3QgPHN0cm9uZz5HUk9VUEUgV0lORFNPUiBEaXJlY3Rpb24gTWFya2V0aW5nLDwvc3Ryb25nPjxicj4KICAgICAgICAgICAgICAgICAgICA0IGF2ZW51ZSBNb3JhbmUgU2F1bG5pZXIgLSA3ODE0MCBWw4lMSVpZLgogICAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICAgICAgPGg0PlLDqWFsaXNhdGlvbiBkdSBzaXRlIEludGVybmV0IGV0IGNyw6lkaXRzJm5ic3A7OjwvaDQ+CiAgICAgICAgICAgICAgICA8cD4KICAgICAgICAgICAgICAgICAgICBHcmFwaGlzbWUmbmJzcDs6IFJvbWFpbiBNYWhpZXUgPGEgaHJlZj0iaHR0cDovL3BsdXNkZWJsZXUuY29tIiB0YXJnZXQ9Il9ibGFuayI+PHU+cGx1c2RlYmxldTwvdT48L2E+PGJyPgogICAgICAgICAgICAgICAgICAgIETDqXZlbG9wcGVtZW50Jm5ic3A7OiBMYXVyZW50IFRoaW9uIDxhIGhyZWY9Imh0dHA6Ly9lY2xpcHRpcXVlLmNvbSIgdGFyZ2V0PSJfYmxhbmsiPjx1PmVjbGlwdGlxdWU8L3U+PC9hPjxicj4KICAgICAgICAgICAgICAgICAgICA8YnI+CiAgICAgICAgICAgICAgICAgICAgUGhvdG90aMOocXVlJm5ic3A7OiBHcm91cGUgV2luZHNvci48YnI+CiAgICAgICAgICAgICAgICAgICAgUGhvdG9ncmFwaGllcyZuYnNwOzogU29waGllIENoaXZldCwgSmFjcXVlcyBDbGlwZXQsIEhlcnbDqSBkZSBCcnVzLCBQaGlsaXBwZSBNb3VsdSwgUm9tYWluIE1haGlldSwgTGF1cmVudCBUaGlvbi48YnI+CiAgICAgICAgICAgICAgICAgICAgQ3LDqWRpdHMgcGhvdG9ncmFwaGlxdWVzJm5ic3A7OiB0b3VzIGRyb2l0cyByw6lzZXJ2w6lzLjxicj4KICAgICAgICAgICAgICAgICAgICBQZXJzcGVjdGl2ZXMmbmJzcDs6IEVtbWFudWVsIERlYm9uLCBBdXLDqWxpZW4gSmFnbGEsIErDqXLDtG1lIFNhcmdub24sIEdpbGxlcyBDb3Vsb24KICAgICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgICAgIDxoND5Iw6liZXJnZXVyIGR1IHNpdGUgOjwvaDQ+CiAgICAgICAgICAgICAgICA8cD48YSBocmVmPSJodHRwczovL21vbmFyb2Jhc2UubmV0IiB0YXJnZXQ9Il9ibGFuayI+PHU+bW9uYXJvYmFzZS5uZXQ8L3U+PC9hPjwvcD4KICAgICAgICAgICAgICAgIDxoND5BY2PDqHMgYXUgc2l0ZTwvaDQ+CiAgICAgICAgICAgICAgICA8cD5MZSBHcm91cGUgV2luZHNvciBuZSBwb3VycmEgw6p0cmUgdGVudSByZXNwb25zYWJsZSBkZSBxdWVscXVlIGRvbW1hZ2UgcXVlIGNlIHNvaXQsIGRpcmVjdCBvdSBpbmRpcmVjdCwgcsOpc3VsdGFudCBkZSBsJ2FjY8OocyDDoCBzb24gc2l0ZSBJbnRlcm5ldCBldCDDoCBjZXV4IGRlIHNlcyBwYXJ0ZW5haXJlcyBvdSwgYXUgY29udHJhaXJlLCBkZSBsJ2ltcG9zc2liaWxpdMOpIGQneSBhY2PDqWRlci48L3A+CiAgICAgICAgICAgICAgICA8aDQ+UHJvcHJpw6l0w6kgaW50ZWxsZWN0dWVsbGU8L2g0PgogICAgICAgICAgICAgICAgPHA+CiAgICAgICAgICAgICAgICAgICAgVG91cyBsZXMgZG9jdW1lbnRzIGV0IGxlcyDDqWzDqW1lbnRzIGRpZmZ1c8OpcyBzdXIgbGUgc2l0ZSA8YSBocmVmPSJodHRwczovL3d3dy5hZ2VuY2Vzd2luZHNvci5mciI+aHR0cHM6Ly93d3cuYWdlbmNlc3dpbmRzb3IuZnI8L2E+IHNvbnQgbGEgcHJvcHJpw6l0w6kgZHUgR3JvdXBlIFdpbmRzb3IgZXQvb3UgZGUgc2VzIG1lbWJyZXMgZXQvb3UgZGUgc2VzIHBhcnRlbmFpcmVzIGV0IHNvbnQgc291bWlzIGF1eCBsb2lzIHLDqWdpc3NhbnQgbGVzIGRyb2l0cyBkZSBwcm9wcmnDqXTDqSBpbnRlbGxlY3R1ZWxsZSBlbiBGcmFuY2UgZXQgZGFucyBsZSBtb25kZS48YnI+CiAgICAgICAgICAgICAgICAgICAgTGEgcmVwcsOpc2VudGF0aW9uIGV0L291IGxhIHJlcHJvZHVjdGlvbiwgbcOqbWUgcGFydGllbGxlLCBub3RhbW1lbnQgZGVzIGxvZ2ljaWVscywgYmFzZXMgZGUgZG9ubsOpZXMsIG1hcnF1ZXMsIGRvY3VtZW50cywgbG9nb3MsIGRlc3NpbnMsIHBob3RvZ3JhcGhpZXMsIGlsbHVzdHJhdGlvbnMgZXQgZMOpbm9taW5hdGlvbnMgc29jaWFsZXMgYWNjZXNzaWJsZXMgc3VyIGxlIHNpdGUgPGEgaHJlZj0iaHR0cHM6Ly93d3cuYWdlbmNlc3dpbmRzb3IuZnIiPmh0dHBzOi8vd3d3LmFnZW5jZXN3aW5kc29yLmZyPC9hPiBlc3QgaW50ZXJkaXRlLgogICAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICAgICAgPGg0PkxpZW4gdmVycyBkJ2F1dHJlcyBzaXRlcyBJbnRlcm5ldDwvaDQ+CiAgICAgICAgICAgICAgICA8cD4KICAgICAgICAgICAgICAgICAgICBUb3V0ZSBjcsOpYXRpb24gcGFyIHVuIHRpZXJzLCBkZSBsaWVuIGh5cGVydGV4dGUgZW4gZGlyZWN0aW9uIGRlIGwndW5lIGRlcyBwYWdlcyBkdSBzaXRlIDxhIGhyZWY9Imh0dHBzOi8vd3d3LmFnZW5jZXN3aW5kc29yLmZyIiB0YXJnZXQ9Il9ibGFuayI+aHR0cHM6Ly93d3cuYWdlbmNlc3dpbmRzb3IuZnI8L2E+IG7DqWNlc3NpdGUgbCdhY2NvcmQgcHLDqWFsYWJsZSBkdSBHcm91cGUgV2luZHNvci48YnI+CiAgICAgICAgICAgICAgICAgICAgTGVzIHV0aWxpc2F0ZXVycyBzb250IGluZm9ybcOpcyBxdWUgbGVzIHNpdGVzIGV4dMOpcmlldXJzIGF1eHF1ZWxzIGlscyBwZXV2ZW50IGFjY8OpZGVyIHBhciBsJ2ludGVybcOpZGlhaXJlIGRlcyBsaWVucyBoeXBlcnRleHRlcyBuJ2FwcGFydGllbm5lbnQgcGFzIGF1IEdyb3VwZSBXaW5kc29yLiBMZSBHcm91cGUgV2luZHNvciBkw6ljbGluZSB0b3V0ZSByZXNwb25zYWJpbGl0w6kgcXVhbnQgYXUgY29udGVudSBkZXMgaW5mb3JtYXRpb25zIGZvdXJuaWVzIHN1ciBjZXMgc2l0ZXMgYXUgdGl0cmUgZGUgbCdhY3RpdmF0aW9uIGR1IGxpZW4uCiAgICAgICAgICAgICAgICA8L3A+CiAgICAgICAgICAgICAgICA8aDQ+UXVhbGl0w6kgZGVzIGluZm9ybWF0aW9uczwvaDQ+CiAgICAgICAgICAgICAgICA8cD4KICAgICAgICAgICAgICAgICAgICBMZSBHcm91cGUgV2luZHNvciBhcHBvcnRlIGxlIHBsdXMgZ3JhbmQgc29pbiDDoCBsYSBwdWJsaWNhdGlvbiBkJ2luZm9ybWF0aW9ucyBkZSBxdWFsaXTDqSBzdXIgbGUgc2l0ZS4gSWwgbmUgcGV1dCB0b3V0ZWZvaXMgcGFzIGdhcmFudGlyIGRlIG1hbmnDqHJlIGFic29sdWUgbCdleGFjdGl0dWRlIGV0IGwnZXhoYXVzdGl2aXTDqSBkZSBjZXMgaW5mb3JtYXRpb25zLjxicj4KICAgICAgICAgICAgICAgICAgICBBaW5zaSwgbGUgR3JvdXBlIFdpbmRzb3IgZXN0IHNldWxlbWVudCBzb3VtaXMgw6AgdW5lIG9ibGlnYXRpb24gZGUgbW95ZW4gOyBpbCBuZSBzYXVyYWl0IMOqdHJlIHRlbnUgcG91ciByZXNwb25zYWJsZSBkZSB0b3V0IHByw6lqdWRpY2UgZGlyZWN0IG91IGluZGlyZWN0IGR1IGZhaXQgZCd1bmUgaW5mb3JtYXRpb24gbWFsIHV0aWxpc8OpZSBldC9vdSBxdWkgc2Ugc2VyYWl0IHLDqXbDqWzDqWUgaW5leGFjdGUgb3UgaW5jb21wbMOodGUuCiAgICAgICAgICAgICAgICA8L3A+CiAgICAgICAgICAgICAgICA8aDQ+RGlzdHJpYnV0aW9uIGQndW4gY291cnJpZWw8L2g0PgogICAgICAgICAgICAgICAgPHA+TGUgR3JvdXBlIFdpbmRzb3IgbmUgc2F1cmFpdCDDqnRyZSB0ZW51IHBvdXIgcmVzcG9uc2FibGUgZHUgcmV0YXJkLCBkZSBsYSBwZXJ0ZSBvdSBkZSBsYSBtYXV2YWlzZSBkaXN0cmlidXRpb24gZCd1biBjb3VycmllbCwgbmkgZGUgc29uIGVudm9pIG91IG5vbiDDoCB1bmUgYWRyZXNzZSDDqWxlY3Ryb25pcXVlIGVycm9uw6llLjwvcD4KICAgICAgICAgICAgICAgIDxoND5JbmZvcm1hdGlxdWUgZXQgbGliZXJ0w6lzPC9oND4KICAgICAgICAgICAgICAgIDxwPgogICAgICAgICAgICAgICAgICAgIEF1Y3VuZSBpbmZvcm1hdGlvbiBwZXJzb25uZWxsZSBuJ2VzdCBjb2xsZWN0w6llIMOgIGwnaW5zdSBkZXMgdmlzaXRldXJzIGR1IHNpdGUuIEF1Y3VuZSBpbmZvcm1hdGlvbiBwZXJzb25uZWxsZSBuJ2VzdCBjw6lkw6llIMOgIGRlcyB0aWVycy48YnI+CiAgICAgICAgICAgICAgICAgICAgTGUgcmVzcGVjdCBkZXMgZGlzcG9zaXRpb25zIGRlIGxhIGxvaSBuwrAgNzgtMTcgZHUgNiBKYW52aWVyIDE5NzggbW9kaWZpw6llIHJlbGF0aXZlIMOgIGwnaW5mb3JtYXRpcXVlLCBhdXggZmljaGllcnMgZXQgYXV4IGxpYmVydMOpcywgZXN0IGFzc3Vyw6llIHBhciBsZSBjb3JyZXNwb25kYW50IEluZm9ybWF0aXF1ZSBldCBMaWJlcnTDqXMgZHUgR3JvdXBlIFdpbmRzb3IuPGJyPgogICAgICAgICAgICAgICAgICAgIExlcyB1dGlsaXNhdGV1cnMgZHUgc2l0ZSBkaXNwb3NlbnQgZCd1biBkcm9pdCBkJ2FjY8OocywgZGUgcmVjdGlmaWNhdGlvbiBldCBkZSBzdXBwcmVzc2lvbiBkZXMgaW5mb3JtYXRpb25zIHF1aSBsZXMgY29uY2VybmVudCBhdXByw6hzIGR1IEdyb3VwZSBXaW5kc29yIMOgIGwnYWRyZXNzZSBzdWl2YW50ZSA6IDxhIGhyZWY9Im1hJiN4Njk7JiN4NmM7dCYjeDZmOyYjNTg7Y29tJiN4NmQ7JiMxMTc7JiN4NmU7JiN4Njk7JiM5OTsmI3g2MTt0JiMxMDU7JiMxMTE7JiN4NmU7JiN4NDA7dyYjMTA1OyYjMTEwO2QmIzExNTsmIzExMTsmIzExNDsmI3gyZTtmciI+Y29tJiN4NmQ7JiMxMTc7JiN4NmU7JiN4Njk7JiM5OTsmI3g2MTt0JiMxMDU7JiMxMTE7JiN4NmU7JiN4NDA7dyYjMTA1OyYjMTEwO2QmIzExNTsmIzExMTsmIzExNDsmI3gyZTtmcjwvYT4gb3UgcGFyIGNvdXJyaWVyIHBvc3RhbCDDoCBsJ2FkcmVzc2Ugc3VpdmFudGUsIFdJTkRTT1IsIFNlcnZpY2UgQ29tbXVuaWNhdGlvbiwgNCBBdmVudWUgTW9yYW5lIFNhdWxuaWVyIDc4MTQwIFZFTElaWSwgYWNjb21wYWduw6kgZCd1bmUgY29waWUgZCd1biB0aXRyZSBkJ2lkZW50aXTDqSBzaWduw6kuCiAgICAgICAgICAgICAgICA8L3A+CiAgICAgICAgICAgICAgICA8aDQ+TcOpZGlhdGlvbjwvaDQ+CiAgICAgICAgICAgICAgICA8cD4KICAgICAgICAgICAgICAgICAgICBDb25mb3Jtw6ltZW50IMOgIGwnYXJ0aWNsZSBMLiA2MTItMSBkdSBjb2RlIGRlIGxhIGNvbnNvbW1hdGlvbiwgdm91cyBwb3V2ZXogcmVjb3VyaXIgZ3JhdHVpdGVtZW50IGF1IHNlcnZpY2UgZGUgbcOpZGlhdGlvbiBNRURJQ1lTIGRvbnQgV0lORFNPUiBWRU5URVMgcmVsw6h2ZSA6PGJyPgogICAgICAgICAgICAgICAgICAgIFN1ciBsYSBwbGF0ZWZvcm1lIDogPGEgaHJlZj0iaHR0cHM6Ly9jb25zby5tZWRpY3lzLmZyLyIgdGFyZ2V0PSJfYmxhbmsiPmh0dHBzOi8vY29uc28ubWVkaWN5cy5mci88L2E+IChtZXJjaSBkZSBzw6lsZWN0aW9ubmVyIFdJTkRTT1IgVkVOVEVTKTxicj4KICAgICAgICAgICAgICAgICAgICBPdSBwYXIgdm9pZSBwb3N0YWxlIDogTUVESUNZUyAtIDczLCBCb3VsZXZhcmQgZGUgQ2xpY2h5IDc1MDA5IFBhcmlzCiAgICAgICAgICAgICAgICA8L3A+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgogICAgPC9kaXY+CjwvZGl2PgoKICAgIDxzY3JpcHQ+CiAgICAgICAgdmFyIGdhX2V2ZW50X2NhdGVnb3J5ID0gJyc7CiAgICAgICAgdmFyIGdhX2V2ZW50X3R5cGUgICAgID0gJyc7CiAgICAgICAgdmFyIGdhX2V2ZW50X25hbWUgICAgID0gJyc7CiAgICA8L3NjcmlwdD4KCiAgICA8c2NyaXB0IHNyYz0iaHR0cHM6Ly93d3cuYWdlbmNlc3dpbmRzb3IuZnIvYXNzZXRzL2pzL2pxdWVyeS0zLjMuMS5taW4uanMiPjwvc2NyaXB0PgogICAgPHNjcmlwdCBzcmM9Imh0dHBzOi8vd3d3LmFnZW5jZXN3aW5kc29yLmZyL2Fzc2V0cy9qcy9ib290c3RyYXAuYnVuZGxlLm1pbi5qcyI+PC9zY3JpcHQ+CiAgICA8c2NyaXB0IHNyYz0iaHR0cHM6Ly93d3cuYWdlbmNlc3dpbmRzb3IuZnIvYXNzZXRzL2pzL2JzLWN1c3RvbS1maWxlLWlucHV0Lm1pbi5qcyI+PC9zY3JpcHQ+CiAgICA8c2NyaXB0IHNyYz0iaHR0cHM6Ly93d3cuYWdlbmNlc3dpbmRzb3IuZnIvYXNzZXRzL2pzL3BsdWdpbnMvbGF6eWxvYWQvbGF6eWxvYWQubWluLmpzIj48L3NjcmlwdD4KICAgIDxzY3JpcHQgc3JjPSJodHRwczovL3d3dy5hZ2VuY2Vzd2luZHNvci5mci9hc3NldHMvanMvcGx1Z2lucy9sZWFmbGV0L2xlYWZsZXQuanMiPjwvc2NyaXB0PgogICAgPHNjcmlwdCBzcmM9Imh0dHBzOi8vd3d3LmFnZW5jZXN3aW5kc29yLmZyL2Fzc2V0cy9qcy9wbHVnaW5zL21hZ25pZmljLXBvcHVwL2pxdWVyeS5tYWduaWZpYy1wb3B1cC5taW4uanMiPjwvc2NyaXB0PgogICAgPHNjcmlwdCBzcmM9Imh0dHBzOi8vd3d3LmFnZW5jZXN3aW5kc29yLmZyL2Fzc2V0cy9qcy9zdGlja3lmaWxsLm1pbi5qcyI+PC9zY3JpcHQ+CiAgICA8c2NyaXB0IHNyYz0iaHR0cHM6Ly93d3cuYWdlbmNlc3dpbmRzb3IuZnIvYXNzZXRzL2pzL2pxdWVyeS5tYXRjaEhlaWdodC1taW4uanMiPjwvc2NyaXB0PgogICAgPHNjcmlwdCBzcmM9Imh0dHBzOi8vd3d3LmFnZW5jZXN3aW5kc29yLmZyL2Fzc2V0cy9qcy9jbGFtcC5qcyI+PC9zY3JpcHQ+CiAgICAgICAgICAgIDxzY3JpcHQgc3JjPSJodHRwczovL3d3dy5hZ2VuY2Vzd2luZHNvci5mci9hc3NldHMvanMvY29va2llLmpzIj48L3NjcmlwdD4KICAgICAgICA8c2NyaXB0IHNyYz0iaHR0cHM6Ly93d3cuYWdlbmNlc3dpbmRzb3IuZnIvYXNzZXRzL2pzL2NvbnRhY3QuanM/dD0xLjAiPjwvc2NyaXB0PgogICAgPHNjcmlwdCBzcmM9Imh0dHBzOi8vd3d3LmFnZW5jZXN3aW5kc29yLmZyL2Fzc2V0cy9qcy9kZWZhdWx0LmpzP3Q9MS4wIj48L3NjcmlwdD4KPC9ib2R5Pgo8L2h0bWw+Cg==
    http_version: null
  recorded_at: Wed, 15 Apr 2020 15:23:21 GMT
- request:
    method: get
    uri: https://www.agenceswindsor.fr/acheter/52104
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - Keep-Alive
      X-Powered-By:
      - PHP/7.1.33
      Cache-Control:
      - no-cache, private
      Content-Type:
      - text/html; charset=UTF-8
      Set-Cookie:
      - XSRF-TOKEN=eyJpdiI6Ilh6OWQzU0pSRE9lR3VaMk8rc3o5bEE9PSIsInZhbHVlIjoiS3owXC80SUxSNkhGTUs2ck40d1F3bWdIckJcL1hXVG1SbXdvR0JIbkVEVzR3ZWY4QktCeWsxZFRaV1lMSkwrK1hCIiwibWFjIjoiMzdlNjA0YjA5ZDVhNDVkNjY0ZjdhZmIzNTNiMzYwZTNmMzM0ZTEyMGEzYTYwZGRiNGViYmY2MzIyZDlkMWJjNCJ9;
        expires=Wed, 15-Apr-2020 17:23:20 GMT; Max-Age=7200; path=/; secure
      - windsor_session=eyJpdiI6IjhocjNtWXF2dWFaV1UxU3ZqQXJHSnc9PSIsInZhbHVlIjoieWRyU2VPZjZcL1wvdHZ0ZFg1Uml4aXlDRVlVMkdqTnh0VkFKQ1ZvZDlEdEcxRG9xbHJBMnFOVkt1aXBWZ0wyRFR0IiwibWFjIjoiOTJkYWUzN2JmY2Y3MmM0NjMxNzljZjU0NmViNTZlN2YxNWE4YjFjZDgwZjYxYWIxZjc2YmRkODk4MzQyNGZkYyJ9;
        expires=Wed, 15-Apr-2020 17:23:20 GMT; Max-Age=7200; path=/; httponly; secure
      Transfer-Encoding:
      - chunked
      Vary:
      - Accept-Encoding
      Date:
      - Wed, 15 Apr 2020 15:23:20 GMT
      Server:
      - LiteSpeed
      Alt-Svc:
      - quic=":443"; ma=2592000; v="43,46", h3-Q043=":443"; ma=2592000, h3-Q046=":443";
        ma=2592000, h3-Q050=":443"; ma=2592000, h3-24=":443"; ma=2592000, h3-25=":443";
        ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: null
  recorded_at: Wed, 15 Apr 2020 15:23:21 GMT
recorded_with: VCR 5.1.0
