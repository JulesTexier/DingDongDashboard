---
http_interactions:
- request:
    method: get
    uri: https://www.agencedesenfantsrouges.com/fr/recherche/?age&city%5B%5D=32552&city%5B%5D=32553&city%5B%5D=32554&city%5B%5D=32559&city%5B%5D=32560&city%5B%5D=32561&city%5B%5D=32562&city%5B%5D=32565&city%5B%5D=32567&city%5B%5D=32568&city%5B%5D=32569&currency=EUR&customroute&homepage&nature=1&newprogram_delivery_at&newprogram_delivery_at_display&order=news%7Cdesc&price&rent_type&tenant_max&tenant_min&type%5B%5D=1&type%5B%5D=2
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Fri, 03 Apr 2020 13:33:39 GMT
      Server:
      - Apache/2.4.25 (Debian)
      Upgrade:
      - h2,h2c
      Connection:
      - Upgrade
      Set-Cookie:
      - symfony=324i1rhvtkcfpglssrqv60rd36; path=/
      Vary:
      - Accept-Encoding
      Content-Length:
      - '11139'
      Content-Type:
      - text/html; charset=utf-8
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        PCFET0NUWVBFIGh0bWw+CjxodG1sIGxhbmc9ImZyIiA+CiAgPGhlYWQ+CiAgICA8bWV0YSBjaGFyc2V0PSJ1dGYtOCI+CgogICAgCiAgICAgICAgICAgICAgICAgIDxsaW5rIHJlbD0iYWx0ZXJuYXRlIiBocmVmPSJodHRwczovL3d3dy5hZ2VuY2VkZXNlbmZhbnRzcm91Z2VzLmNvbS9mci9yZWNoZXJjaGUvP25hdHVyZT0xJnR5cGVbXT0xJnR5cGVbXT0yJmNpdHlbXT0zMjU1MiZjaXR5W109MzI1NTMmY2l0eVtdPTMyNTY5JmNpdHlbXT0zMjU1NCZjaXR5W109MzI1NjAmY2l0eVtdPTMyNTYxJmNpdHlbXT0zMjU2MiZjaXR5W109MzI1NjUmY2l0eVtdPTMyNTY3JmNpdHlbXT0zMjU2OCZjaXR5W109MzI1NTkmcHJpY2UmYWdlJnRlbmFudF9taW4mdGVuYW50X21heCZyZW50X3R5cGUmbmV3cHJvZ3JhbV9kZWxpdmVyeV9hdCZuZXdwcm9ncmFtX2RlbGl2ZXJ5X2F0X2Rpc3BsYXkmY3VycmVuY3k9RVVSJmN1c3RvbXJvdXRlJmhvbWVwYWdlJm9yZGVyPW5ld3MlN0NkZXNjIiBocmVmbGFuZz0iZnIiIC8+CiAgICAgICAgICAgICAgPGxpbmsgcmVsPSJhbHRlcm5hdGUiIGhyZWY9Imh0dHBzOi8vd3d3LmFnZW5jZWRlc2VuZmFudHNyb3VnZXMuY29tL2VuL3NlYXJjaC8iIGhyZWZsYW5nPSJlbiIgLz4KICAgICAgICAgICAgICA8bGluayByZWw9ImFsdGVybmF0ZSIgaHJlZj0iaHR0cHM6Ly93d3cuYWdlbmNlZGVzZW5mYW50c3JvdWdlcy5jb20vaXQvc2VhcmNoLyIgaHJlZmxhbmc9Iml0IiAvPgogICAgICAgICAgCiAgICAgICAgICAgIDxsaW5rIHJlbD0ibmV4dCIgaHJlZj0iaHR0cHM6Ly93d3cuYWdlbmNlZGVzZW5mYW50c3JvdWdlcy5jb20vZnIvcmVjaGVyY2hlLz9wYWdlPTIiPiAgICAKICAgIDxtZXRhIG5hbWU9InZpZXdwb3J0IiBjb250ZW50PSJ3aWR0aD1kZXZpY2Utd2lkdGgsaW5pdGlhbC1zY2FsZT0xIiAvPgogICAgPG1ldGEgbmFtZT0iZGVzY3JpcHRpb24iIGNvbnRlbnQ9IiIgLz4KPG1ldGEgbmFtZT0icm9ib3RzIiBjb250ZW50PSJpbmRleCwgZm9sbG93IiAvPgogICAgPG1ldGEgcHJvcGVydHk9Im9nOnVybCIgY29udGVudD0iaHR0cHM6Ly93d3cuYWdlbmNlZGVzZW5mYW50c3JvdWdlcy5jb20vZnIvcmVjaGVyY2hlLz9uYXR1cmU9MSZ0eXBlW109MSZ0eXBlW109MiZjaXR5W109MzI1NTImY2l0eVtdPTMyNTUzJmNpdHlbXT0zMjU2OSZjaXR5W109MzI1NTQmY2l0eVtdPTMyNTYwJmNpdHlbXT0zMjU2MSZjaXR5W109MzI1NjImY2l0eVtdPTMyNTY1JmNpdHlbXT0zMjU2NyZjaXR5W109MzI1NjgmY2l0eVtdPTMyNTU5JnByaWNlJmFnZSZ0ZW5hbnRfbWluJnRlbmFudF9tYXgmcmVudF90eXBlJm5ld3Byb2dyYW1fZGVsaXZlcnlfYXQmbmV3cHJvZ3JhbV9kZWxpdmVyeV9hdF9kaXNwbGF5JmN1cnJlbmN5PUVVUiZjdXN0b21yb3V0ZSZob21lcGFnZSZvcmRlcj1uZXdzJTdDZGVzYyI+ICAgICAgICAgICAgPG1ldGEgcHJvcGVydHk9Im9nOmltYWdlIiBjb250ZW50PSJodHRwczovL3d3dy5hZ2VuY2VkZXNlbmZhbnRzcm91Z2VzLmNvbS91cGxvYWRzL3dlYnNpdGUvMTc2OC9hYmMzOTU4N2Q2MzAyMzVmZTM5YzVjZDc4YWFiMzU5NzA0MjE2NmRhLmpwZyI+ICAgIDx0aXRsZT5BZ2VuY2UgZGVzIEVuZmFudHMgUm91Z2VzIHwgQWdlbmNlIGltbW9iaWxpw6hyZSBQYXJpcyAzZTwvdGl0bGU+CiAgICA8bWV0YSBuYW1lPSJ0d2l0dGVyOmNhcmQiIGNvbnRlbnQ9InN1bW1hcnkiPjwvbWV0YT4KICAgIDxsaW5rIHJlbD0iZG5zLXByZWZldGNoIiBocmVmPSJodHRwczovL2QxdGc5MGJ3anczZXRoLmNsb3VkZnJvbnQubmV0Ij4KICAgIDxzY3JpcHQgc3JjPSJodHRwczovL2FqYXguZ29vZ2xlYXBpcy5jb20vYWpheC9saWJzL2pxdWVyeS8xLjkuMS9qcXVlcnkubWluLmpzIj48L3NjcmlwdD4KICAgIDxzY3JpcHQ+d2luZG93LmpRdWVyeSB8fCBkb2N1bWVudC53cml0ZSgnPHNjcmlwdCBzcmM9Ii9qcy9jb21tb24vanF1ZXJ5Lm1pbi5qcyI+XHgzQy9zY3JpcHQ+Jyk8L3NjcmlwdD4KICAgIDxsaW5rIHJlbD0ic3R5bGVzaGVldCIgdHlwZT0idGV4dC9jc3MiIG1lZGlhPSJzY3JlZW4iIGhyZWY9Ii9jc3MvY29tbW9uL3V0aWxzLmNzcyI+PHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiIHNyYz0iL2pzL2NvbW1vbi9qcXVlcnkud2FpdGZvcmltYWdlcy5taW4uanMiPjwvc2NyaXB0PjxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0IiBzcmM9Ii9qcy9jb21tb24vdXRpbHMuanMiPjwvc2NyaXB0PiAgICA8bGluayByZWw9InN0eWxlc2hlZXQiIGhyZWY9Imh0dHBzOi8vZDF0ZzkwYndqdzNldGguY2xvdWRmcm9udC5uZXQvanMvb3dsLWNhcm91c2VsMi9hc3NldHMvb3dsLmNhcm91c2VsLm1pbi5jc3MiPgogICAgPGxpbmsgcmVsPSJzdHlsZXNoZWV0IiBocmVmPSJodHRwczovL2QxdGc5MGJ3anczZXRoLmNsb3VkZnJvbnQubmV0L2pzL293bC1jYXJvdXNlbDIvYXNzZXRzL293bC50aGVtZS5kZWZhdWx0LmNzcyI+CiAgICA8bGluayByZWw9InN0eWxlc2hlZXQiIGhyZWY9Imh0dHBzOi8vZDF0ZzkwYndqdzNldGguY2xvdWRmcm9udC5uZXQvanMvb3dsLWNhcm91c2VsMi9hc3NldHMvYW5pbWF0ZS5taW4uY3NzIj4KICAgIDxsaW5rIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0iaHR0cHM6Ly9kMXRnOTBid2p3M2V0aC5jbG91ZGZyb250Lm5ldC9qcy9tdWx0aXBsZS1zZWxlY3QvbXVsdGlwbGUtc2VsZWN0LmNzcyI+CiAgICA8bGluayByZWw9InN0eWxlc2hlZXQiIGhyZWY9Imh0dHBzOi8vZDF0ZzkwYndqdzNldGguY2xvdWRmcm9udC5uZXQvanMvZGF0ZXBpY2tlci9kYXRlcGlja2VyLm1pbi5jc3MiPgogICAgPGxpbmsgcmVsPSJzdHlsZXNoZWV0IiB0eXBlPSJ0ZXh0L2NzcyIgbWVkaWE9InNjcmVlbiIgaHJlZj0iaHR0cHM6Ly9kMXRnOTBid2p3M2V0aC5jbG91ZGZyb250Lm5ldC9qcy9mYW5jeWJveDIvanF1ZXJ5LmZhbmN5Ym94Lm1pbi5jc3MiPgogICAgPGxpbmsgcmVsPSJzdHlsZXNoZWV0IiB0eXBlPSJ0ZXh0L2NzcyIgbWVkaWE9InNjcmVlbiIgaHJlZj0iaHR0cHM6Ly9jZG5qcy5jbG91ZGZsYXJlLmNvbS9hamF4L2xpYnMvbWFnbmlmaWMtcG9wdXAuanMvMS4xLjAvbWFnbmlmaWMtcG9wdXAubWluLmNzcyI+CiAgICA8bGluayByZWw9InN0eWxlc2hlZXQiIGhyZWY9Imh0dHBzOi8vY2RuanMuY2xvdWRmbGFyZS5jb20vYWpheC9saWJzL3NlbGVjdDIvNC4wLjMvY3NzL3NlbGVjdDIubWluLmNzcyIgLz4KICAgICAgICAgICAgPGxpbmsgcmVsPSJzdHlsZXNoZWV0IiB0eXBlPSJ0ZXh0L2NzcyIgbWVkaWE9InNjcmVlbixwcmludCIgaHJlZj0iL2Nzcy9mcmVlMTAvbWFpbi5jc3MiPgogICAgPGxpbmsgcmVsPSJzdHlsZXNoZWV0IiB0eXBlPSJ0ZXh0L2NzcyIgbWVkaWE9InNjcmVlbixwcmludCIgaHJlZj0iL21pc2MvY3NzIiAvPgogICAgICAgIDxsaW5rIHJlbD0ic3R5bGVzaGVldCIgdHlwZT0idGV4dC9jc3MiIG1lZGlhPSJzY3JlZW4scHJpbnQiIGhyZWY9Ii9jc3MtMTc2OCI+CiAgICA8bGluayByZWw9InN0eWxlc2hlZXQiIHR5cGU9InRleHQvY3NzIiBtZWRpYT0ic2NyZWVuLHByaW50IiBocmVmPSIvY3NzL2ZyZWUxMC9tb2JpbGUuY3NzIj4KCiAgICAKICAgIAogICAgPHNjcmlwdCBzcmM9J2h0dHBzOi8vd3d3Lmdvb2dsZS5jb20vcmVjYXB0Y2hhL2FwaS5qcz9yZW5kZXI9ZXhwbGljaXQmb25sb2FkPWxvYWRDYXB0Y2hhJyBhc3luYyBkZWZlcj48L3NjcmlwdD4KCiAgICAKICAgICAgICAgIDwhLS0gR29vZ2xlIFRhZyBNYW5hZ2VyIC0tPgogICAgICA8c2NyaXB0PihmdW5jdGlvbih3LGQscyxsLGkpe3dbbF09d1tsXXx8W107d1tsXS5wdXNoKHsnZ3RtLnN0YXJ0JzoKICAgICAgbmV3IERhdGUoKS5nZXRUaW1lKCksZXZlbnQ6J2d0bS5qcyd9KTt2YXIgZj1kLmdldEVsZW1lbnRzQnlUYWdOYW1lKHMpWzBdLAogICAgICBqPWQuY3JlYXRlRWxlbWVudChzKSxkbD1sIT0nZGF0YUxheWVyJz8nJmw9JytsOicnO2ouYXN5bmM9dHJ1ZTtqLnNyYz0KICAgICAgJ2h0dHBzOi8vd3d3Lmdvb2dsZXRhZ21hbmFnZXIuY29tL2d0bS5qcz9pZD0nK2krZGw7Zi5wYXJlbnROb2RlLmluc2VydEJlZm9yZShqLGYpOwogICAgICB9KSh3aW5kb3csZG9jdW1lbnQsJ3NjcmlwdCcsJ2RhdGFMYXllcicsJ0dUTS1QUFRCRktSJyk7PC9zY3JpcHQ+CiAgICAgIDwhLS0gRW5kIEdvb2dsZSBUYWcgTWFuYWdlciAtLT4KICAgIAogICAgCiAgICAgIDwvaGVhZD4KCiAgPGJvZHkgY2xhc3M9ImxhbmctZnIgZXN0YXRlLWluZGV4ICI+CiAgICA8ZGl2IGlkPSJmYi1yb290Ij48L2Rpdj4KICAgICAgICAgIDwhLS0gR29vZ2xlIFRhZyBNYW5hZ2VyIChub3NjcmlwdCkgLS0+CiAgICAgIDxub3NjcmlwdD48aWZyYW1lIHNyYz0iaHR0cHM6Ly93d3cuZ29vZ2xldGFnbWFuYWdlci5jb20vbnMuaHRtbD9pZD1HVE0tUFBUQkZLUiIgaGVpZ2h0PSIwIiB3aWR0aD0iMCIgc3R5bGU9ImRpc3BsYXk6bm9uZTt2aXNpYmlsaXR5OmhpZGRlbiI+PC9pZnJhbWU+PC9ub3NjcmlwdD4KICAgICAgPCEtLSBFbmQgR29vZ2xlIFRhZyBNYW5hZ2VyIChub3NjcmlwdCkgLS0+CiAgICAKICAgIAogICAgPGhlYWRlcj4KICAgICAgPGRpdiBjbGFzcz0icmliYm9uIj4KICAgICAgICA8ZGl2IGNsYXNzPSJsYXlvdXRMYXJnZSBjbGVhcmZpeCI+CiAgICAgICAgICAgICAgICAgICAgICA8dWwgY2xhc3M9ImN1bHR1cmUiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGkgY2xhc3M9InNlbGVjdGVkIj48YSB0aXRsZT0iRnJhbsOnYWlzIiBocmVmPSJodHRwczovL3d3dy5hZ2VuY2VkZXNlbmZhbnRzcm91Z2VzLmNvbS9mci9yZWNoZXJjaGUvP25hdHVyZT0xJmFtcDt0eXBlW109MSZhbXA7dHlwZVtdPTImYW1wO2NpdHlbXT0zMjU1MiZhbXA7Y2l0eVtdPTMyNTUzJmFtcDtjaXR5W109MzI1NjkmYW1wO2NpdHlbXT0zMjU1NCZhbXA7Y2l0eVtdPTMyNTYwJmFtcDtjaXR5W109MzI1NjEmYW1wO2NpdHlbXT0zMjU2MiZhbXA7Y2l0eVtdPTMyNTY1JmFtcDtjaXR5W109MzI1NjcmYW1wO2NpdHlbXT0zMjU2OCZhbXA7Y2l0eVtdPTMyNTU5JmFtcDtwcmljZSZhbXA7YWdlJmFtcDt0ZW5hbnRfbWluJmFtcDt0ZW5hbnRfbWF4JmFtcDtyZW50X3R5cGUmYW1wO25ld3Byb2dyYW1fZGVsaXZlcnlfYXQmYW1wO25ld3Byb2dyYW1fZGVsaXZlcnlfYXRfZGlzcGxheSZhbXA7Y3VycmVuY3k9RVVSJmFtcDtjdXN0b21yb3V0ZSZhbXA7aG9tZXBhZ2UmYW1wO29yZGVyPW5ld3MlN0NkZXNjIj5GcmFuw6dhaXM8L2E+PC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpID48YSB0aXRsZT0iRW5nbGlzaCIgaHJlZj0iL2VuL3NlYXJjaC8iPkVuZ2xpc2g8L2E+PC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpID48YSB0aXRsZT0iSXRhbGlhbm8iIGhyZWY9Ii9pdC9zZWFyY2gvIj5JdGFsaWFubzwvYT48L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgIDwvdWw+CiAgICAgICAgICAKICAgICAgICAgIAogICAgICAgICAgPHVsIGNsYXNzPSJzb2NpYWxMaW5rcyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaSBjbGFzcz0iaWNvbiBzb2NpYWwiPjxhIGNsYXNzPSJmYWNlYm9vayIgdGFyZ2V0PSJfYmxhbmsiIGhyZWY9Imh0dHBzOi8vd3d3LmZhY2Vib29rLmNvbS9BZ2VuY2UtZGVzLUVuZmFudHMtUm91Z2VzLTI2Njc0NTk3MDExNDQxMCI+ZmFjZWJvb2s8L2E+PC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGkgY2xhc3M9Imljb24gc29jaWFsIj48YSBjbGFzcz0iZW1haWwiIGhyZWY9Ii9mci9jb250YWN0ZXotbm91cyI+RW1haWw8L2E+PC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC91bD4KICAgICAgICAgIDx1bCBjbGFzcz0idG9wTWVudSI+PGxpPjxhIHRhcmdldD0iX3NlbGYiIGhyZWY9Ii9mci9zZWxlY3Rpb24vIj5NYSBzw6lsZWN0aW9uPC9hPjwvbGk+PC91bD4gICAgICAgIDwvZGl2PgogICAgICA8L2Rpdj4KICAgICAgPGRpdiBjbGFzcz0ibGF5b3V0TGFyZ2UgY2xlYXJmaXgiPgogICAgICAgIDxkaXYgY2xhc3M9ImxvZ28iPgogICAgICAgICAgPGEgdGl0bGU9IkFnZW5jZSBkZXMgRW5mYW50cyBSb3VnZXMiIGhyZWY9Ii9mci8iPjxpbWcgYWx0PSJBZ2VuY2UgZGVzIEVuZmFudHMgUm91Z2VzIiBzcmM9Ii91cGxvYWRzL3dlYnNpdGUvMTc2OC8wNDhlMDVlNjZjMGE0ODFlNGM0MWJiYzA3YjRlM2JjZDg2NjFkNjZiLmpwZyIgLz48L2E+ICAgICAgICA8L2Rpdj4KICAgICAgICA8bmF2PgogICAgICAgICAgPHVsIGNsYXNzPSJtZW51Ij48bGkgY2xhc3M9ImJ0biI+PGEgaHJlZj0iIyI+PC9hPjwvbGk+PGxpPjxhIHRhcmdldD0iX3NlbGYiIGNsYXNzPSIiIGhyZWY9Ii9mci8iPkFjY3VlaWw8L2E+PC9saT48bGk+PGEgdGFyZ2V0PSJfc2VsZiIgY2xhc3M9IiIgaHJlZj0iL2ZyL3ZlbnRlIj5WZW50ZTwvYT48L2xpPjxsaT48YSB0YXJnZXQ9Il9zZWxmIiBjbGFzcz0iIiBocmVmPSIvZnIvbG9jYXRpb24iPkxvY2F0aW9uPC9hPjwvbGk+PGxpPjxhIHRhcmdldD0iX3NlbGYiIGNsYXNzPSIiIGhyZWY9Ii9mci9jb21tZXJjZXMiPkNvbW1lcmNlczwvYT48L2xpPjxsaT48YSB0YXJnZXQ9Il9zZWxmIiBjbGFzcz0iIiBocmVmPSIvZnIvZXN0aW1hdGlvbiI+RXN0aW1hdGlvbjwvYT48L2xpPjxsaT48YSB0YXJnZXQ9Il9zZWxmIiBjbGFzcz0iIiBocmVmPSIvZnIvYmxvZyI+QmxvZzwvYT48L2xpPjxsaT48YSB0YXJnZXQ9Il9zZWxmIiBjbGFzcz0iIiBocmVmPSIvZnIvbm90cmUtYWdlbmNlIj5Ob3RyZSBhZ2VuY2U8L2E+PC9saT48bGk+PGEgdGFyZ2V0PSJfc2VsZiIgY2xhc3M9IiIgaHJlZj0iL2ZyL2NvbnRhY3Rlei1ub3VzIj5Db250YWN0ZXotbm91czwvYT48L2xpPjwvdWw+ICAgICAgICA8L25hdj4KICAgICAgPC9kaXY+CiAgICAgICAgICA8L2hlYWRlcj4KCiAgICA8ZGl2IGNsYXNzPSJ3cmFwcGVyIj4KICAgICAgCiAgPGRpdiBpZD0ibWFwQ29udGFpbmVyIj4KICAgIDxkaXYgaWQ9Im1hcCIgc3R5bGU9IndpZHRoOiAxMDAlOyBoZWlnaHQ6IDQwMHB4OyIgY2xhc3M9Im9zX21hcCI+PC9kaXY+CjxzY3JpcHQ+CnZhciBtYXA7CiQoJ2hlYWQnKS5hcHBlbmQoJCgnPGxpbmsgcmVsPSJzdHlsZXNoZWV0IiB0eXBlPSJ0ZXh0L2NzcyIgLz4nKS5hdHRyKCdocmVmJywgJy9qcy9jb21tb24vbGVhZmxldC9sZWFmbGV0LmNzcycpKTsKJCgnaGVhZCcpLmFwcGVuZCgkKCc8bGluayByZWw9InN0eWxlc2hlZXQiIHR5cGU9InRleHQvY3NzIiAvPicpLmF0dHIoJ2hyZWYnLCAnL2pzL2NvbW1vbi9MZWFmbGV0Lkdlc3R1cmVIYW5kbGluZy9sZWFmbGV0LWdlc3R1cmUtaGFuZGxpbmcubWluLmNzcycpKTsKdmFyIG1hcmtlcl9tYXBfMTt2YXIgbWFya2VyX21hcF8yO3ZhciBtYXJrZXJfbWFwXzM7dmFyIG1hcmtlcl9tYXBfNDt2YXIgbWFya2VyX21hcF81O3ZhciBtYXJrZXJfbWFwXzY7dmFyIG1hcmtlcl9tYXBfNzt2YXIgbWFya2VyX21hcF84O3ZhciBtYXJrZXJfbWFwXzk7dmFyIG1hcmtlcl9tYXBfMTA7dmFyIG1hcmtlcl9tYXBfMTE7dmFyIG1hcmtlcl9tYXBfMTI7dmFyIG1hcmtlcl9tYXBfMTM7dmFyIG1hcmtlcl9tYXBfMTQ7dmFyIG1hcmtlcl9tYXBfMTU7dmFyIG1hcmtlcl9tYXBfMTY7dmFyIG1hcmtlcl9tYXBfMTc7dmFyIG1hcmtlcl9tYXBfMTg7dmFyIG1hcmtlcl9tYXBfMTk7dmFyIG1hcmtlcl9tYXBfMjA7dmFyIG1hcmtlcl9tYXBfMjE7dmFyIG1hcmtlcl9tYXBfMjI7dmFyIG1hcmtlcl9tYXBfMjM7dmFyIG1hcmtlcl9tYXBfMjQ7dmFyIG1hcmtlcl9tYXBfMjU7dmFyIG1hcmtlcl9tYXBfMjY7dmFyIG1hcmtlcl9tYXBfMjc7dmFyIG1hcmtlcl9tYXBfMjg7dmFyIG1hcmtlcl9tYXBfMjk7dmFyIG1hcmtlcl9tYXBfMzA7dmFyIG1hcmtlcl9tYXBfMzE7dmFyIG1hcmtlcl9tYXBfMzI7dmFyIG1hcmtlcl9tYXBfMzM7dmFyIG1hcmtlcl9tYXBfMzQ7dmFyIG1hcmtlcl9tYXBfMzU7dmFyIG1hcmtlcl9tYXBfMzY7dmFyIG1hcmtlcl9tYXBfMzc7dmFyIG1hcmtlcl9tYXBfMzg7dmFyIG1hcmtlcl9tYXBfMzk7dmFyIG1hcmtlcl9tYXBfNDA7dmFyIG1hcmtlcl9tYXBfNDE7dmFyIG1hcmtlcl9tYXBfNDI7dmFyIG1hcmtlcnNfbWFwID0gW107dmFyIGNpcmNsZXNfbWFwID0gW107ZnVuY3Rpb24gbGF1bmNoX21hcF9tYXAoKSB7Cm1hcCA9IEwubWFwKCdtYXAnLCB7IHNjcm9sbFdoZWVsWm9vbTogZmFsc2UsIGdlc3R1cmVIYW5kbGluZzogTC5Ccm93c2VyLm1vYmlsZSB9KTsKdmFyIGNsdXN0ZXIgPSBMLm1hcmtlckNsdXN0ZXJHcm91cCgpOwpMLnRpbGVMYXllcignaHR0cHM6Ly9jYXJ0b2RiLWJhc2VtYXBzLXtzfS5nbG9iYWwuc3NsLmZhc3RseS5uZXQvcmFzdGVydGlsZXMvdm95YWdlci97en0ve3h9L3t5fXtyfS5wbmcnLCB7CmF0dHJpYnV0aW9uOiAnJmNvcHk7IDxhIGhyZWY9Imh0dHA6Ly93d3cub3BlbnN0cmVldG1hcC5vcmcvY29weXJpZ2h0IiB0YXJnZXQ9Il9ibGFuayI+T3BlblN0cmVldE1hcDwvYT4gfCA8YSBocmVmPSJodHRwOi8vY2FydG9kYi5jb20vYXR0cmlidXRpb25zIiB0YXJnZXQ9Il9ibGFuayI+Q2FydG9EQjwvYT4nCiwgbWF4Wm9vbTogMTkKfSkuYWRkVG8obWFwKTsKdmFyIGljb25fYWdlbmN5ID0gTC5pY29uKHsgaWNvblVybDogJy9qcy9jb21tb24vbGVhZmxldC9pbWFnZXMvaWNvbl9hZ2VuY3kuc3ZnJywgaWNvblNpemU6IFszMCwgMzhdLCBpY29uQW5jaG9yOiBbMTUsIDM4XSwgcG9wdXBBbmNob3I6IFswLCAtMzhdIH0pOwp2YXIgaWNvbl91c2VyID0gTC5pY29uKHsgaWNvblVybDogJy9qcy9jb21tb24vbGVhZmxldC9pbWFnZXMvaWNvbl91c2VyLnN2ZycsIGljb25TaXplOiBbMzAsIDM4XSwgaWNvbkFuY2hvcjogWzE1LCAzOF0sIHBvcHVwQW5jaG9yOiBbMCwgLTM4XSB9KTsKdmFyIGljb25fdHlwZV8xID0gTC5pY29uKHsgaWNvblVybDogJy9qcy9jb21tb24vbGVhZmxldC9pbWFnZXMvaWNvbl90eXBlXzEuc3ZnJywgaWNvblNpemU6IFszMCwgMzhdLCBpY29uQW5jaG9yOiBbMTUsIDM4XSwgcG9wdXBBbmNob3I6IFswLCAtMzhdIH0pOwp2YXIgaWNvbl90eXBlXzIgPSBMLmljb24oeyBpY29uVXJsOiAnL2pzL2NvbW1vbi9sZWFmbGV0L2ltYWdlcy9pY29uX3R5cGVfMi5zdmcnLCBpY29uU2l6ZTogWzMwLCAzOF0sIGljb25BbmNob3I6IFsxNSwgMzhdLCBwb3B1cEFuY2hvcjogWzAsIC0zOF0gfSk7CnZhciBpY29uX3R5cGVfMyA9IEwuaWNvbih7IGljb25Vcmw6ICcvanMvY29tbW9uL2xlYWZsZXQvaW1hZ2VzL2ljb25fdHlwZV8zLnN2ZycsIGljb25TaXplOiBbMzAsIDM4XSwgaWNvbkFuY2hvcjogWzE1LCAzOF0sIHBvcHVwQW5jaG9yOiBbMCwgLTM4XSB9KTsKdmFyIGljb25fdHlwZV80ID0gTC5pY29uKHsgaWNvblVybDogJy9qcy9jb21tb24vbGVhZmxldC9pbWFnZXMvaWNvbl90eXBlXzQuc3ZnJywgaWNvblNpemU6IFszMCwgMzhdLCBpY29uQW5jaG9yOiBbMTUsIDM4XSwgcG9wdXBBbmNob3I6IFswLCAtMzhdIH0pOwp2YXIgaWNvbl90eXBlXzUgPSBMLmljb24oeyBpY29uVXJsOiAnL2pzL2NvbW1vbi9sZWFmbGV0L2ltYWdlcy9pY29uX3R5cGVfNS5zdmcnLCBpY29uU2l6ZTogWzMwLCAzOF0sIGljb25BbmNob3I6IFsxNSwgMzhdLCBwb3B1cEFuY2hvcjogWzAsIC0zOF0gfSk7CnZhciBpY29uX3R5cGVfNiA9IEwuaWNvbih7IGljb25Vcmw6ICcvanMvY29tbW9uL2xlYWZsZXQvaW1hZ2VzL2ljb25fdHlwZV82LnN2ZycsIGljb25TaXplOiBbMzAsIDM4XSwgaWNvbkFuY2hvcjogWzE1LCAzOF0sIHBvcHVwQW5jaG9yOiBbMCwgLTM4XSB9KTsKdmFyIGljb25fdHlwZV83ID0gTC5pY29uKHsgaWNvblVybDogJy9qcy9jb21tb24vbGVhZmxldC9pbWFnZXMvaWNvbl90eXBlXzcuc3ZnJywgaWNvblNpemU6IFszMCwgMzhdLCBpY29uQW5jaG9yOiBbMTUsIDM4XSwgcG9wdXBBbmNob3I6IFswLCAtMzhdIH0pOwp2YXIgaWNvbl90eXBlXzggPSBMLmljb24oeyBpY29uVXJsOiAnL2pzL2NvbW1vbi9sZWFmbGV0L2ltYWdlcy9pY29uX3R5cGVfOC5zdmcnLCBpY29uU2l6ZTogWzMwLCAzOF0sIGljb25BbmNob3I6IFsxNSwgMzhdLCBwb3B1cEFuY2hvcjogWzAsIC0zOF0gfSk7CnZhciBpY29uX3R5cGVfOSA9IEwuaWNvbih7IGljb25Vcmw6ICcvanMvY29tbW9uL2xlYWZsZXQvaW1hZ2VzL2ljb25fdHlwZV85LnN2ZycsIGljb25TaXplOiBbMzAsIDM4XSwgaWNvbkFuY2hvcjogWzE1LCAzOF0sIHBvcHVwQW5jaG9yOiBbMCwgLTM4XSB9KTsKdmFyIGljb25fdHlwZV8xMCA9IEwuaWNvbih7IGljb25Vcmw6ICcvanMvY29tbW9uL2xlYWZsZXQvaW1hZ2VzL2ljb25fdHlwZV8xMC5zdmcnLCBpY29uU2l6ZTogWzMwLCAzOF0sIGljb25BbmNob3I6IFsxNSwgMzhdLCBwb3B1cEFuY2hvcjogWzAsIC0zOF0gfSk7CnZhciBpY29uX2VtcHR5ID0gTC5pY29uKHsgaWNvblVybDogJy9qcy9jb21tb24vbGVhZmxldC9pbWFnZXMvaWNvbl9lbXB0eS5zdmcnLCBpY29uU2l6ZTogWzEsIDFdLCBpY29uQW5jaG9yOiBbMSwgMV0gfSk7Cm1hcmtlcl9tYXBfMSA9IEwubWFya2VyKFs0OC44NjMwNTAwMDAsIDIuMzYxMzAwMDAwXSx7aWNvbjppY29uX3R5cGVfMX0pOwp2YXIgcG9wdXAgPSBMLnBvcHVwKHsgbWluV2lkdGg6IDM1MCwgY2xhc3NOYW1lOidhamF4X2NvbnRlbnQnIH0pOwptYXJrZXJfbWFwXzEuYmluZFBvcHVwKHBvcHVwKTsKbWFya2VyX21hcF8xLm9uKCdjbGljaycsIGZ1bmN0aW9uKGUpIHsKICB2YXIgcG9wdXAgPSBlLnRhcmdldC5nZXRQb3B1cCgpOwogICQuZ2V0KCcvZnIvbWFwX3BvcHVwP2lkcz0zODIxNzE2JykuZG9uZShmdW5jdGlvbihkYXRhKSB7IHBvcHVwLnNldENvbnRlbnQoZGF0YSk7IH0pOwp9KTsKbWFya2Vyc19tYXAucHVzaChtYXJrZXJfbWFwXzEpOwpjbHVzdGVyLmFkZExheWVyKG1hcmtlcl9tYXBfMSk7Cm1hcmtlcl9tYXBfMiA9IEwubWFya2VyKFs0OC44NDMzMzAwMDAsIDIuMzYwOTYwMDAwXSx7aWNvbjppY29uX3R5cGVfMX0pOwp2YXIgcG9wdXAgPSBMLnBvcHVwKHsgbWluV2lkdGg6IDM1MCwgY2xhc3NOYW1lOidhamF4X2NvbnRlbnQnIH0pOwptYXJrZXJfbWFwXzIuYmluZFBvcHVwKHBvcHVwKTsKbWFya2VyX21hcF8yLm9uKCdjbGljaycsIGZ1bmN0aW9uKGUpIHsKICB2YXIgcG9wdXAgPSBlLnRhcmdldC5nZXRQb3B1cCgpOwogICQuZ2V0KCcvZnIvbWFwX3BvcHVwP2lkcz0zMzIyNjIwJykuZG9uZShmdW5jdGlvbihkYXRhKSB7IHBvcHVwLnNldENvbnRlbnQoZGF0YSk7IH0pOwp9KTsKbWFya2Vyc19tYXAucHVzaChtYXJrZXJfbWFwXzIpOwpjbHVzdGVyLmFkZExheWVyKG1hcmtlcl9tYXBfMik7Cm1hcmtlcl9tYXBfMyA9IEwubWFya2VyKFs0OC44NTM0MzAwMDAsIDIuMzU4MjgwMDAwXSx7aWNvbjppY29uX3R5cGVfMX0pOwp2YXIgcG9wdXAgPSBMLnBvcHVwKHsgbWluV2lkdGg6IDM1MCwgY2xhc3NOYW1lOidhamF4X2NvbnRlbnQnIH0pOwptYXJrZXJfbWFwXzMuYmluZFBvcHVwKHBvcHVwKTsKbWFya2VyX21hcF8zLm9uKCdjbGljaycsIGZ1bmN0aW9uKGUpIHsKICB2YXIgcG9wdXAgPSBlLnRhcmdldC5nZXRQb3B1cCgpOwogICQuZ2V0KCcvZnIvbWFwX3BvcHVwP2lkcz0zNDgwNzE5JykuZG9uZShmdW5jdGlvbihkYXRhKSB7IHBvcHVwLnNldENvbnRlbnQoZGF0YSk7IH0pOwp9KTsKbWFya2Vyc19tYXAucHVzaChtYXJrZXJfbWFwXzMpOwpjbHVzdGVyLmFkZExheWVyKG1hcmtlcl9tYXBfMyk7Cm1hcmtlcl9tYXBfNCA9IEwubWFya2VyKFs0OC44NTU2MTAwMDAsIDIuMzU0NDYwMDAwXSx7aWNvbjppY29uX3R5cGVfMX0pOwp2YXIgcG9wdXAgPSBMLnBvcHVwKHsgbWluV2lkdGg6IDM1MCwgY2xhc3NOYW1lOidhamF4X2NvbnRlbnQnIH0pOwptYXJrZXJfbWFwXzQuYmluZFBvcHVwKHBvcHVwKTsKbWFya2VyX21hcF80Lm9uKCdjbGljaycsIGZ1bmN0aW9uKGUpIHsKICB2YXIgcG9wdXAgPSBlLnRhcmdldC5nZXRQb3B1cCgpOwogICQuZ2V0KCcvZnIvbWFwX3BvcHVwP2lkcz0zNzcwMjM1JykuZG9uZShmdW5jdGlvbihkYXRhKSB7IHBvcHVwLnNldENvbnRlbnQoZGF0YSk7IH0pOwp9KTsKbWFya2Vyc19tYXAucHVzaChtYXJrZXJfbWFwXzQpOwpjbHVzdGVyLmFkZExheWVyKG1hcmtlcl9tYXBfNCk7Cm1hcmtlcl9tYXBfNSA9IEwubWFya2VyKFs0OC44NTU2MTAwMDAsIDIuMzU0NDYwMDAwXSx7aWNvbjppY29uX3R5cGVfMX0pOwp2YXIgcG9wdXAgPSBMLnBvcHVwKHsgbWluV2lkdGg6IDM1MCwgY2xhc3NOYW1lOidhamF4X2NvbnRlbnQnIH0pOwptYXJrZXJfbWFwXzUuYmluZFBvcHVwKHBvcHVwKTsKbWFya2VyX21hcF81Lm9uKCdjbGljaycsIGZ1bmN0aW9uKGUpIHsKICB2YXIgcG9wdXAgPSBlLnRhcmdldC5nZXRQb3B1cCgpOwogICQuZ2V0KCcvZnIvbWFwX3BvcHVwP2lkcz0zNzg2ODkyJykuZG9uZShmdW5jdGlvbihkYXRhKSB7IHBvcHVwLnNldENvbnRlbnQoZGF0YSk7IH0pOwp9KTsKbWFya2Vyc19tYXAucHVzaChtYXJrZXJfbWFwXzUpOwpjbHVzdGVyLmFkZExheWVyKG1hcmtlcl9tYXBfNSk7Cm1hcmtlcl9tYXBfNiA9IEwubWFya2VyKFs0OC44NTEyNDAwMDAsIDIuMzcyMjIwMDAwXSx7aWNvbjppY29uX3R5cGVfMX0pOwp2YXIgcG9wdXAgPSBMLnBvcHVwKHsgbWluV2lkdGg6IDM1MCwgY2xhc3NOYW1lOidhamF4X2NvbnRlbnQnIH0pOwptYXJrZXJfbWFwXzYuYmluZFBvcHVwKHBvcHVwKTsKbWFya2VyX21hcF82Lm9uKCdjbGljaycsIGZ1bmN0aW9uKGUpIHsKICB2YXIgcG9wdXAgPSBlLnRhcmdldC5nZXRQb3B1cCgpOwogICQuZ2V0KCcvZnIvbWFwX3BvcHVwP2lkcz0zMTQ1MjQyJykuZG9uZShmdW5jdGlvbihkYXRhKSB7IHBvcHVwLnNldENvbnRlbnQoZGF0YSk7IH0pOwp9KTsKbWFya2Vyc19tYXAucHVzaChtYXJrZXJfbWFwXzYpOwpjbHVzdGVyLmFkZExheWVyKG1hcmtlcl9tYXBfNik7Cm1hcmtlcl9tYXBfNyA9IEwubWFya2VyKFs0OC44NDk1OTAwMDAsIDIuMzQ0ODgwMDAwXSx7aWNvbjppY29uX3R5cGVfMX0pOwp2YXIgcG9wdXAgPSBMLnBvcHVwKHsgbWluV2lkdGg6IDM1MCwgY2xhc3NOYW1lOidhamF4X2NvbnRlbnQnIH0pOwptYXJrZXJfbWFwXzcuYmluZFBvcHVwKHBvcHVwKTsKbWFya2VyX21hcF83Lm9uKCdjbGljaycsIGZ1bmN0aW9uKGUpIHsKICB2YXIgcG9wdXAgPSBlLnRhcmdldC5nZXRQb3B1cCgpOwogICQuZ2V0KCcvZnIvbWFwX3BvcHVwP2lkcz0zMzk3NjAyJykuZG9uZShmdW5jdGlvbihkYXRhKSB7IHBvcHVwLnNldENvbnRlbnQoZGF0YSk7IH0pOwp9KTsKbWFya2Vyc19tYXAucHVzaChtYXJrZXJfbWFwXzcpOwpjbHVzdGVyLmFkZExheWVyKG1hcmtlcl9tYXBfNyk7Cm1hcmtlcl9tYXBfOCA9IEwubWFya2VyKFs0OC44Nzg1NjAwMDAsIDIuMzYwMzcwMDAwXSx7aWNvbjppY29uX3R5cGVfMX0pOwp2YXIgcG9wdXAgPSBMLnBvcHVwKHsgbWluV2lkdGg6IDM1MCwgY2xhc3NOYW1lOidhamF4X2NvbnRlbnQnIH0pOwptYXJrZXJfbWFwXzguYmluZFBvcHVwKHBvcHVwKTsKbWFya2VyX21hcF84Lm9uKCdjbGljaycsIGZ1bmN0aW9uKGUpIHsKICB2YXIgcG9wdXAgPSBlLnRhcmdldC5nZXRQb3B1cCgpOwogICQuZ2V0KCcvZnIvbWFwX3BvcHVwP2lkcz0zNjQxNjA4JykuZG9uZShmdW5jdGlvbihkYXRhKSB7IHBvcHVwLnNldENvbnRlbnQoZGF0YSk7IH0pOwp9KTsKbWFya2Vyc19tYXAucHVzaChtYXJrZXJfbWFwXzgpOwpjbHVzdGVyLmFkZExheWVyKG1hcmtlcl9tYXBfOCk7Cm1hcmtlcl9tYXBfOSA9IEwubWFya2VyKFs0OC44NTU2MTAwMDAsIDIuMzU0NDYwMDAwXSx7aWNvbjppY29uX3R5cGVfMX0pOwp2YXIgcG9wdXAgPSBMLnBvcHVwKHsgbWluV2lkdGg6IDM1MCwgY2xhc3NOYW1lOidhamF4X2NvbnRlbnQnIH0pOwptYXJrZXJfbWFwXzkuYmluZFBvcHVwKHBvcHVwKTsKbWFya2VyX21hcF85Lm9uKCdjbGljaycsIGZ1bmN0aW9uKGUpIHsKICB2YXIgcG9wdXAgPSBlLnRhcmdldC5nZXRQb3B1cCgpOwogICQuZ2V0KCcvZnIvbWFwX3BvcHVwP2lkcz0zNDA0Njk5JykuZG9uZShmdW5jdGlvbihkYXRhKSB7IHBvcHVwLnNldENvbnRlbnQoZGF0YSk7IH0pOwp9KTsKbWFya2Vyc19tYXAucHVzaChtYXJrZXJfbWFwXzkpOwpjbHVzdGVyLmFkZExheWVyKG1hcmtlcl9tYXBfOSk7Cm1hcmtlcl9tYXBfMTAgPSBMLm1hcmtlcihbNDguODU3OTkwMDAwLCAyLjM4MTE1MDAwMF0se2ljb246aWNvbl90eXBlXzF9KTsKdmFyIHBvcHVwID0gTC5wb3B1cCh7IG1pbldpZHRoOiAzNTAsIGNsYXNzTmFtZTonYWpheF9jb250ZW50JyB9KTsKbWFya2VyX21hcF8xMC5iaW5kUG9wdXAocG9wdXApOwptYXJrZXJfbWFwXzEwLm9uKCdjbGljaycsIGZ1bmN0aW9uKGUpIHsKICB2YXIgcG9wdXAgPSBlLnRhcmdldC5nZXRQb3B1cCgpOwogICQuZ2V0KCcvZnIvbWFwX3BvcHVwP2lkcz0zNzcxNjI5JykuZG9uZShmdW5jdGlvbihkYXRhKSB7IHBvcHVwLnNldENvbnRlbnQoZGF0YSk7IH0pOwp9KTsKbWFya2Vyc19tYXAucHVzaChtYXJrZXJfbWFwXzEwKTsKY2x1c3Rlci5hZGRMYXllcihtYXJrZXJfbWFwXzEwKTsKbWFya2VyX21hcF8xMSA9IEwubWFya2VyKFs0OC44NjMwNTAwMDAsIDIuMzYxMzAwMDAwXSx7aWNvbjppY29uX3R5cGVfMX0pOwp2YXIgcG9wdXAgPSBMLnBvcHVwKHsgbWluV2lkdGg6IDM1MCwgY2xhc3NOYW1lOidhamF4X2NvbnRlbnQnIH0pOwptYXJrZXJfbWFwXzExLmJpbmRQb3B1cChwb3B1cCk7Cm1hcmtlcl9tYXBfMTEub24oJ2NsaWNrJywgZnVuY3Rpb24oZSkgewogIHZhciBwb3B1cCA9IGUudGFyZ2V0LmdldFBvcHVwKCk7CiAgJC5nZXQoJy9mci9tYXBfcG9wdXA/aWRzPTM0MzMyNDknKS5kb25lKGZ1bmN0aW9uKGRhdGEpIHsgcG9wdXAuc2V0Q29udGVudChkYXRhKTsgfSk7Cn0pOwptYXJrZXJzX21hcC5wdXNoKG1hcmtlcl9tYXBfMTEpOwpjbHVzdGVyLmFkZExheWVyKG1hcmtlcl9tYXBfMTEpOwptYXJrZXJfbWFwXzEyID0gTC5tYXJrZXIoWzQ4Ljg2MzQ4MDAwMCwgMi4zNTkxMTAwMDBdLHtpY29uOmljb25fdHlwZV8xfSk7CnZhciBwb3B1cCA9IEwucG9wdXAoeyBtaW5XaWR0aDogMzUwLCBjbGFzc05hbWU6J2FqYXhfY29udGVudCcgfSk7Cm1hcmtlcl9tYXBfMTIuYmluZFBvcHVwKHBvcHVwKTsKbWFya2VyX21hcF8xMi5vbignY2xpY2snLCBmdW5jdGlvbihlKSB7CiAgdmFyIHBvcHVwID0gZS50YXJnZXQuZ2V0UG9wdXAoKTsKICAkLmdldCgnL2ZyL21hcF9wb3B1cD9pZHM9MzY0MTY4MCcpLmRvbmUoZnVuY3Rpb24oZGF0YSkgeyBwb3B1cC5zZXRDb250ZW50KGRhdGEpOyB9KTsKfSk7Cm1hcmtlcnNfbWFwLnB1c2gobWFya2VyX21hcF8xMik7CmNsdXN0ZXIuYWRkTGF5ZXIobWFya2VyX21hcF8xMik7Cm1hcmtlcl9tYXBfMTMgPSBMLm1hcmtlcihbNDguODQ4MzMwMDAwLCAyLjI1OTg3MDAwMF0se2ljb246aWNvbl90eXBlXzF9KTsKdmFyIHBvcHVwID0gTC5wb3B1cCh7IG1pbldpZHRoOiAzNTAsIGNsYXNzTmFtZTonYWpheF9jb250ZW50JyB9KTsKbWFya2VyX21hcF8xMy5iaW5kUG9wdXAocG9wdXApOwptYXJrZXJfbWFwXzEzLm9uKCdjbGljaycsIGZ1bmN0aW9uKGUpIHsKICB2YXIgcG9wdXAgPSBlLnRhcmdldC5nZXRQb3B1cCgpOwogICQuZ2V0KCcvZnIvbWFwX3BvcHVwP2lkcz0zNDA4MDY5JykuZG9uZShmdW5jdGlvbihkYXRhKSB7IHBvcHVwLnNldENvbnRlbnQoZGF0YSk7IH0pOwp9KTsKbWFya2Vyc19tYXAucHVzaChtYXJrZXJfbWFwXzEzKTsKY2x1c3Rlci5hZGRMYXllcihtYXJrZXJfbWFwXzEzKTsKbWFya2VyX21hcF8xNCA9IEwubWFya2VyKFs0OC44NjY5OTAwMDAsIDIuMzcyMDYwMDAwXSx7aWNvbjppY29uX3R5cGVfMX0pOwp2YXIgcG9wdXAgPSBMLnBvcHVwKHsgbWluV2lkdGg6IDM1MCwgY2xhc3NOYW1lOidhamF4X2NvbnRlbnQnIH0pOwptYXJrZXJfbWFwXzE0LmJpbmRQb3B1cChwb3B1cCk7Cm1hcmtlcl9tYXBfMTQub24oJ2NsaWNrJywgZnVuY3Rpb24oZSkgewogIHZhciBwb3B1cCA9IGUudGFyZ2V0LmdldFBvcHVwKCk7CiAgJC5nZXQoJy9mci9tYXBfcG9wdXA/aWRzPTMwMjY4NTgnKS5kb25lKGZ1bmN0aW9uKGRhdGEpIHsgcG9wdXAuc2V0Q29udGVudChkYXRhKTsgfSk7Cn0pOwptYXJrZXJzX21hcC5wdXNoKG1hcmtlcl9tYXBfMTQpOwpjbHVzdGVyLmFkZExheWVyKG1hcmtlcl9tYXBfMTQpOwptYXJrZXJfbWFwXzE1ID0gTC5tYXJrZXIoWzQ4Ljg3ODU2MDAwMCwgMi4zNjAzNzAwMDBdLHtpY29uOmljb25fdHlwZV8xfSk7CnZhciBwb3B1cCA9IEwucG9wdXAoeyBtaW5XaWR0aDogMzUwLCBjbGFzc05hbWU6J2FqYXhfY29udGVudCcgfSk7Cm1hcmtlcl9tYXBfMTUuYmluZFBvcHVwKHBvcHVwKTsKbWFya2VyX21hcF8xNS5vbignY2xpY2snLCBmdW5jdGlvbihlKSB7CiAgdmFyIHBvcHVwID0gZS50YXJnZXQuZ2V0UG9wdXAoKTsKICAkLmdldCgnL2ZyL21hcF9wb3B1cD9pZHM9Mjg2Nzg5NCcpLmRvbmUoZnVuY3Rpb24oZGF0YSkgeyBwb3B1cC5zZXRDb250ZW50KGRhdGEpOyB9KTsKfSk7Cm1hcmtlcnNfbWFwLnB1c2gobWFya2VyX21hcF8xNSk7CmNsdXN0ZXIuYWRkTGF5ZXIobWFya2VyX21hcF8xNSk7Cm1hcmtlcl9tYXBfMTYgPSBMLm1hcmtlcihbNDguODYwMTQwMDAwLCAyLjM1Njk4MDAwMF0se2ljb246aWNvbl90eXBlXzF9KTsKdmFyIHBvcHVwID0gTC5wb3B1cCh7IG1pbldpZHRoOiAzNTAsIGNsYXNzTmFtZTonYWpheF9jb250ZW50JyB9KTsKbWFya2VyX21hcF8xNi5iaW5kUG9wdXAocG9wdXApOwptYXJrZXJfbWFwXzE2Lm9uKCdjbGljaycsIGZ1bmN0aW9uKGUpIHsKICB2YXIgcG9wdXAgPSBlLnRhcmdldC5nZXRQb3B1cCgpOwogICQuZ2V0KCcvZnIvbWFwX3BvcHVwP2lkcz0yNzkzOTQxJykuZG9uZShmdW5jdGlvbihkYXRhKSB7IHBvcHVwLnNldENvbnRlbnQoZGF0YSk7IH0pOwp9KTsKbWFya2Vyc19tYXAucHVzaChtYXJrZXJfbWFwXzE2KTsKY2x1c3Rlci5hZGRMYXllcihtYXJrZXJfbWFwXzE2KTsKbWFya2VyX21hcF8xNyA9IEwubWFya2VyKFs0OC44NTc5OTAwMDAsIDIuMzgxMTUwMDAwXSx7aWNvbjppY29uX3R5cGVfMX0pOwp2YXIgcG9wdXAgPSBMLnBvcHVwKHsgbWluV2lkdGg6IDM1MCwgY2xhc3NOYW1lOidhamF4X2NvbnRlbnQnIH0pOwptYXJrZXJfbWFwXzE3LmJpbmRQb3B1cChwb3B1cCk7Cm1hcmtlcl9tYXBfMTcub24oJ2NsaWNrJywgZnVuY3Rpb24oZSkgewogIHZhciBwb3B1cCA9IGUudGFyZ2V0LmdldFBvcHVwKCk7CiAgJC5nZXQoJy9mci9tYXBfcG9wdXA/aWRzPTM3MzA5OTUnKS5kb25lKGZ1bmN0aW9uKGRhdGEpIHsgcG9wdXAuc2V0Q29udGVudChkYXRhKTsgfSk7Cn0pOwptYXJrZXJzX21hcC5wdXNoKG1hcmtlcl9tYXBfMTcpOwpjbHVzdGVyLmFkZExheWVyKG1hcmtlcl9tYXBfMTcpOwptYXJrZXJfbWFwXzE4ID0gTC5tYXJrZXIoWzQ4Ljg4NTA2MDAwMCwgMi40MDU1NzAwMDBdLHtpY29uOmljb25fdHlwZV8xfSk7CnZhciBwb3B1cCA9IEwucG9wdXAoeyBtaW5XaWR0aDogMzUwLCBjbGFzc05hbWU6J2FqYXhfY29udGVudCcgfSk7Cm1hcmtlcl9tYXBfMTguYmluZFBvcHVwKHBvcHVwKTsKbWFya2VyX21hcF8xOC5vbignY2xpY2snLCBmdW5jdGlvbihlKSB7CiAgdmFyIHBvcHVwID0gZS50YXJnZXQuZ2V0UG9wdXAoKTsKICAkLmdldCgnL2ZyL21hcF9wb3B1cD9pZHM9MzU3NTM2NScpLmRvbmUoZnVuY3Rpb24oZGF0YSkgeyBwb3B1cC5zZXRDb250ZW50KGRhdGEpOyB9KTsKfSk7Cm1hcmtlcnNfbWFwLnB1c2gobWFya2VyX21hcF8xOCk7CmNsdXN0ZXIuYWRkTGF5ZXIobWFya2VyX21hcF8xOCk7Cm1hcmtlcl9tYXBfMTkgPSBMLm1hcmtlcihbNDguODQ4MzMwMDAwLCAyLjI1OTg3MDAwMF0se2ljb246aWNvbl90eXBlXzF9KTsKdmFyIHBvcHVwID0gTC5wb3B1cCh7IG1pbldpZHRoOiAzNTAsIGNsYXNzTmFtZTonYWpheF9jb250ZW50JyB9KTsKbWFya2VyX21hcF8xOS5iaW5kUG9wdXAocG9wdXApOwptYXJrZXJfbWFwXzE5Lm9uKCdjbGljaycsIGZ1bmN0aW9uKGUpIHsKICB2YXIgcG9wdXAgPSBlLnRhcmdldC5nZXRQb3B1cCgpOwogICQuZ2V0KCcvZnIvbWFwX3BvcHVwP2lkcz0zNzI4ODM5JykuZG9uZShmdW5jdGlvbihkYXRhKSB7IHBvcHVwLnNldENvbnRlbnQoZGF0YSk7IH0pOwp9KTsKbWFya2Vyc19tYXAucHVzaChtYXJrZXJfbWFwXzE5KTsKY2x1c3Rlci5hZGRMYXllcihtYXJrZXJfbWFwXzE5KTsKbWFya2VyX21hcF8yMCA9IEwubWFya2VyKFs0OC44NTU2MTAwMDAsIDIuMzU0NDYwMDAwXSx7aWNvbjppY29uX3R5cGVfMX0pOwp2YXIgcG9wdXAgPSBMLnBvcHVwKHsgbWluV2lkdGg6IDM1MCwgY2xhc3NOYW1lOidhamF4X2NvbnRlbnQnIH0pOwptYXJrZXJfbWFwXzIwLmJpbmRQb3B1cChwb3B1cCk7Cm1hcmtlcl9tYXBfMjAub24oJ2NsaWNrJywgZnVuY3Rpb24oZSkgewogIHZhciBwb3B1cCA9IGUudGFyZ2V0LmdldFBvcHVwKCk7CiAgJC5nZXQoJy9mci9tYXBfcG9wdXA/aWRzPTM1MjU2NDQnKS5kb25lKGZ1bmN0aW9uKGRhdGEpIHsgcG9wdXAuc2V0Q29udGVudChkYXRhKTsgfSk7Cn0pOwptYXJrZXJzX21hcC5wdXNoKG1hcmtlcl9tYXBfMjApOwpjbHVzdGVyLmFkZExheWVyKG1hcmtlcl9tYXBfMjApOwptYXJrZXJfbWFwXzIxID0gTC5tYXJrZXIoWzQ4Ljg1MzQzMDAwMCwgMi4zNTgyODAwMDBdLHtpY29uOmljb25fdHlwZV8xfSk7CnZhciBwb3B1cCA9IEwucG9wdXAoeyBtaW5XaWR0aDogMzUwLCBjbGFzc05hbWU6J2FqYXhfY29udGVudCcgfSk7Cm1hcmtlcl9tYXBfMjEuYmluZFBvcHVwKHBvcHVwKTsKbWFya2VyX21hcF8yMS5vbignY2xpY2snLCBmdW5jdGlvbihlKSB7CiAgdmFyIHBvcHVwID0gZS50YXJnZXQuZ2V0UG9wdXAoKTsKICAkLmdldCgnL2ZyL21hcF9wb3B1cD9pZHM9MzU2NTIxNycpLmRvbmUoZnVuY3Rpb24oZGF0YSkgeyBwb3B1cC5zZXRDb250ZW50KGRhdGEpOyB9KTsKfSk7Cm1hcmtlcnNfbWFwLnB1c2gobWFya2VyX21hcF8yMSk7CmNsdXN0ZXIuYWRkTGF5ZXIobWFya2VyX21hcF8yMSk7Cm1hcmtlcl9tYXBfMjIgPSBMLm1hcmtlcihbNDguODkwNDcwMDAwLCAyLjMzMTgyMDAwMF0se2ljb246aWNvbl90eXBlXzF9KTsKdmFyIHBvcHVwID0gTC5wb3B1cCh7IG1pbldpZHRoOiAzNTAsIGNsYXNzTmFtZTonYWpheF9jb250ZW50JyB9KTsKbWFya2VyX21hcF8yMi5iaW5kUG9wdXAocG9wdXApOwptYXJrZXJfbWFwXzIyLm9uKCdjbGljaycsIGZ1bmN0aW9uKGUpIHsKICB2YXIgcG9wdXAgPSBlLnRhcmdldC5nZXRQb3B1cCgpOwogICQuZ2V0KCcvZnIvbWFwX3BvcHVwP2lkcz0zNTY5ODI2JykuZG9uZShmdW5jdGlvbihkYXRhKSB7IHBvcHVwLnNldENvbnRlbnQoZGF0YSk7IH0pOwp9KTsKbWFya2Vyc19tYXAucHVzaChtYXJrZXJfbWFwXzIyKTsKY2x1c3Rlci5hZGRMYXllcihtYXJrZXJfbWFwXzIyKTsKbWFya2VyX21hcF8yMyA9IEwubWFya2VyKFs0OC44NTIwNjAwMDAsIDIuMzY1NDEwMDAwXSx7aWNvbjppY29uX3R5cGVfMX0pOwp2YXIgcG9wdXAgPSBMLnBvcHVwKHsgbWluV2lkdGg6IDM1MCwgY2xhc3NOYW1lOidhamF4X2NvbnRlbnQnIH0pOwptYXJrZXJfbWFwXzIzLmJpbmRQb3B1cChwb3B1cCk7Cm1hcmtlcl9tYXBfMjMub24oJ2NsaWNrJywgZnVuY3Rpb24oZSkgewogIHZhciBwb3B1cCA9IGUudGFyZ2V0LmdldFBvcHVwKCk7CiAgJC5nZXQoJy9mci9tYXBfcG9wdXA/aWRzPTM2NDE3MTMnKS5kb25lKGZ1bmN0aW9uKGRhdGEpIHsgcG9wdXAuc2V0Q29udGVudChkYXRhKTsgfSk7Cn0pOwptYXJrZXJzX21hcC5wdXNoKG1hcmtlcl9tYXBfMjMpOwpjbHVzdGVyLmFkZExheWVyKG1hcmtlcl9tYXBfMjMpOwptYXJrZXJfbWFwXzI0ID0gTC5tYXJrZXIoWzQ4Ljg3ODU2MDAwMCwgMi4zNjAzNzAwMDBdLHtpY29uOmljb25fdHlwZV8xfSk7CnZhciBwb3B1cCA9IEwucG9wdXAoeyBtaW5XaWR0aDogMzUwLCBjbGFzc05hbWU6J2FqYXhfY29udGVudCcgfSk7Cm1hcmtlcl9tYXBfMjQuYmluZFBvcHVwKHBvcHVwKTsKbWFya2VyX21hcF8yNC5vbignY2xpY2snLCBmdW5jdGlvbihlKSB7CiAgdmFyIHBvcHVwID0gZS50YXJnZXQuZ2V0UG9wdXAoKTsKICAkLmdldCgnL2ZyL21hcF9wb3B1cD9pZHM9MzQzMTg2NicpLmRvbmUoZnVuY3Rpb24oZGF0YSkgeyBwb3B1cC5zZXRDb250ZW50KGRhdGEpOyB9KTsKfSk7Cm1hcmtlcnNfbWFwLnB1c2gobWFya2VyX21hcF8yNCk7CmNsdXN0ZXIuYWRkTGF5ZXIobWFya2VyX21hcF8yNCk7Cm1hcmtlcl9tYXBfMjUgPSBMLm1hcmtlcihbNDguODYzMDUwMDAwLCAyLjM2MTMwMDAwMF0se2ljb246aWNvbl90eXBlXzF9KTsKdmFyIHBvcHVwID0gTC5wb3B1cCh7IG1pbldpZHRoOiAzNTAsIGNsYXNzTmFtZTonYWpheF9jb250ZW50JyB9KTsKbWFya2VyX21hcF8yNS5iaW5kUG9wdXAocG9wdXApOwptYXJrZXJfbWFwXzI1Lm9uKCdjbGljaycsIGZ1bmN0aW9uKGUpIHsKICB2YXIgcG9wdXAgPSBlLnRhcmdldC5nZXRQb3B1cCgpOwogICQuZ2V0KCcvZnIvbWFwX3BvcHVwP2lkcz0zNTE4NTQxJykuZG9uZShmdW5jdGlvbihkYXRhKSB7IHBvcHVwLnNldENvbnRlbnQoZGF0YSk7IH0pOwp9KTsKbWFya2Vyc19tYXAucHVzaChtYXJrZXJfbWFwXzI1KTsKY2x1c3Rlci5hZGRMYXllcihtYXJrZXJfbWFwXzI1KTsKbWFya2VyX21hcF8yNiA9IEwubWFya2VyKFs0OC44NTM0MzAwMDAsIDIuMzU4MjgwMDAwXSx7aWNvbjppY29uX3R5cGVfMX0pOwp2YXIgcG9wdXAgPSBMLnBvcHVwKHsgbWluV2lkdGg6IDM1MCwgY2xhc3NOYW1lOidhamF4X2NvbnRlbnQnIH0pOwptYXJrZXJfbWFwXzI2LmJpbmRQb3B1cChwb3B1cCk7Cm1hcmtlcl9tYXBfMjYub24oJ2NsaWNrJywgZnVuY3Rpb24oZSkgewogIHZhciBwb3B1cCA9IGUudGFyZ2V0LmdldFBvcHVwKCk7CiAgJC5nZXQoJy9mci9tYXBfcG9wdXA/aWRzPTMyMjE0NjgnKS5kb25lKGZ1bmN0aW9uKGRhdGEpIHsgcG9wdXAuc2V0Q29udGVudChkYXRhKTsgfSk7Cn0pOwptYXJrZXJzX21hcC5wdXNoKG1hcmtlcl9tYXBfMjYpOwpjbHVzdGVyLmFkZExheWVyKG1hcmtlcl9tYXBfMjYpOwptYXJrZXJfbWFwXzI3ID0gTC5tYXJrZXIoWzQ4Ljg1Nzk5MDAwMCwgMi4zODExNTAwMDBdLHtpY29uOmljb25fdHlwZV8xfSk7CnZhciBwb3B1cCA9IEwucG9wdXAoeyBtaW5XaWR0aDogMzUwLCBjbGFzc05hbWU6J2FqYXhfY29udGVudCcgfSk7Cm1hcmtlcl9tYXBfMjcuYmluZFBvcHVwKHBvcHVwKTsKbWFya2VyX21hcF8yNy5vbignY2xpY2snLCBmdW5jdGlvbihlKSB7CiAgdmFyIHBvcHVwID0gZS50YXJnZXQuZ2V0UG9wdXAoKTsKICAkLmdldCgnL2ZyL21hcF9wb3B1cD9pZHM9MzI3NzM2NicpLmRvbmUoZnVuY3Rpb24oZGF0YSkgeyBwb3B1cC5zZXRDb250ZW50KGRhdGEpOyB9KTsKfSk7Cm1hcmtlcnNfbWFwLnB1c2gobWFya2VyX21hcF8yNyk7CmNsdXN0ZXIuYWRkTGF5ZXIobWFya2VyX21hcF8yNyk7Cm1hcmtlcl9tYXBfMjggPSBMLm1hcmtlcihbNDguODU4MjUwMDAwLCAyLjI3NDc5MDAwMF0se2ljb246aWNvbl90eXBlXzF9KTsKdmFyIHBvcHVwID0gTC5wb3B1cCh7IG1pbldpZHRoOiAzNTAsIGNsYXNzTmFtZTonYWpheF9jb250ZW50JyB9KTsKbWFya2VyX21hcF8yOC5iaW5kUG9wdXAocG9wdXApOwptYXJrZXJfbWFwXzI4Lm9uKCdjbGljaycsIGZ1bmN0aW9uKGUpIHsKICB2YXIgcG9wdXAgPSBlLnRhcmdldC5nZXRQb3B1cCgpOwogICQuZ2V0KCcvZnIvbWFwX3BvcHVwP2lkcz0zNTg4MjAzJykuZG9uZShmdW5jdGlvbihkYXRhKSB7IHBvcHVwLnNldENvbnRlbnQoZGF0YSk7IH0pOwp9KTsKbWFya2Vyc19tYXAucHVzaChtYXJrZXJfbWFwXzI4KTsKY2x1c3Rlci5hZGRMYXllcihtYXJrZXJfbWFwXzI4KTsKbWFya2VyX21hcF8yOSA9IEwubWFya2VyKFs0OC44NTIwNjAwMDAsIDIuMzY1NDEwMDAwXSx7aWNvbjppY29uX3R5cGVfMX0pOwp2YXIgcG9wdXAgPSBMLnBvcHVwKHsgbWluV2lkdGg6IDM1MCwgY2xhc3NOYW1lOidhamF4X2NvbnRlbnQnIH0pOwptYXJrZXJfbWFwXzI5LmJpbmRQb3B1cChwb3B1cCk7Cm1hcmtlcl9tYXBfMjkub24oJ2NsaWNrJywgZnVuY3Rpb24oZSkgewogIHZhciBwb3B1cCA9IGUudGFyZ2V0LmdldFBvcHVwKCk7CiAgJC5nZXQoJy9mci9tYXBfcG9wdXA/aWRzPTMzNjQ0OTcnKS5kb25lKGZ1bmN0aW9uKGRhdGEpIHsgcG9wdXAuc2V0Q29udGVudChkYXRhKTsgfSk7Cn0pOwptYXJrZXJzX21hcC5wdXNoKG1hcmtlcl9tYXBfMjkpOwpjbHVzdGVyLmFkZExheWVyKG1hcmtlcl9tYXBfMjkpOwptYXJrZXJfbWFwXzMwID0gTC5tYXJrZXIoWzQ4Ljg1MzQzMDAwMCwgMi4zNTgyODAwMDBdLHtpY29uOmljb25fdHlwZV8xfSk7CnZhciBwb3B1cCA9IEwucG9wdXAoeyBtaW5XaWR0aDogMzUwLCBjbGFzc05hbWU6J2FqYXhfY29udGVudCcgfSk7Cm1hcmtlcl9tYXBfMzAuYmluZFBvcHVwKHBvcHVwKTsKbWFya2VyX21hcF8zMC5vbignY2xpY2snLCBmdW5jdGlvbihlKSB7CiAgdmFyIHBvcHVwID0gZS50YXJnZXQuZ2V0UG9wdXAoKTsKICAkLmdldCgnL2ZyL21hcF9wb3B1cD9pZHM9MjY1MzcyMycpLmRvbmUoZnVuY3Rpb24oZGF0YSkgeyBwb3B1cC5zZXRDb250ZW50KGRhdGEpOyB9KTsKfSk7Cm1hcmtlcnNfbWFwLnB1c2gobWFya2VyX21hcF8zMCk7CmNsdXN0ZXIuYWRkTGF5ZXIobWFya2VyX21hcF8zMCk7Cm1hcmtlcl9tYXBfMzEgPSBMLm1hcmtlcihbNDguODYxODUwMDAwLCAyLjM3NzI2MDAwMF0se2ljb246aWNvbl90eXBlXzF9KTsKdmFyIHBvcHVwID0gTC5wb3B1cCh7IG1pbldpZHRoOiAzNTAsIGNsYXNzTmFtZTonYWpheF9jb250ZW50JyB9KTsKbWFya2VyX21hcF8zMS5iaW5kUG9wdXAocG9wdXApOwptYXJrZXJfbWFwXzMxLm9uKCdjbGljaycsIGZ1bmN0aW9uKGUpIHsKICB2YXIgcG9wdXAgPSBlLnRhcmdldC5nZXRQb3B1cCgpOwogICQuZ2V0KCcvZnIvbWFwX3BvcHVwP2lkcz0zNDE3MzQ1JykuZG9uZShmdW5jdGlvbihkYXRhKSB7IHBvcHVwLnNldENvbnRlbnQoZGF0YSk7IH0pOwp9KTsKbWFya2Vyc19tYXAucHVzaChtYXJrZXJfbWFwXzMxKTsKY2x1c3Rlci5hZGRMYXllcihtYXJrZXJfbWFwXzMxKTsKbWFya2VyX21hcF8zMiA9IEwubWFya2VyKFs0OC44Nzg1NjAwMDAsIDIuMzYwMzcwMDAwXSx7aWNvbjppY29uX3R5cGVfMX0pOwp2YXIgcG9wdXAgPSBMLnBvcHVwKHsgbWluV2lkdGg6IDM1MCwgY2xhc3NOYW1lOidhamF4X2NvbnRlbnQnIH0pOwptYXJrZXJfbWFwXzMyLmJpbmRQb3B1cChwb3B1cCk7Cm1hcmtlcl9tYXBfMzIub24oJ2NsaWNrJywgZnVuY3Rpb24oZSkgewogIHZhciBwb3B1cCA9IGUudGFyZ2V0LmdldFBvcHVwKCk7CiAgJC5nZXQoJy9mci9tYXBfcG9wdXA/aWRzPTM0MDk5OTknKS5kb25lKGZ1bmN0aW9uKGRhdGEpIHsgcG9wdXAuc2V0Q29udGVudChkYXRhKTsgfSk7Cn0pOwptYXJrZXJzX21hcC5wdXNoKG1hcmtlcl9tYXBfMzIpOwpjbHVzdGVyLmFkZExheWVyKG1hcmtlcl9tYXBfMzIpOwptYXJrZXJfbWFwXzMzID0gTC5tYXJrZXIoWzQ4Ljg1MzQzMDAwMCwgMi4zNTgyODAwMDBdLHtpY29uOmljb25fdHlwZV8xfSk7CnZhciBwb3B1cCA9IEwucG9wdXAoeyBtaW5XaWR0aDogMzUwLCBjbGFzc05hbWU6J2FqYXhfY29udGVudCcgfSk7Cm1hcmtlcl9tYXBfMzMuYmluZFBvcHVwKHBvcHVwKTsKbWFya2VyX21hcF8zMy5vbignY2xpY2snLCBmdW5jdGlvbihlKSB7CiAgdmFyIHBvcHVwID0gZS50YXJnZXQuZ2V0UG9wdXAoKTsKICAkLmdldCgnL2ZyL21hcF9wb3B1cD9pZHM9MjY1NDc5NicpLmRvbmUoZnVuY3Rpb24oZGF0YSkgeyBwb3B1cC5zZXRDb250ZW50KGRhdGEpOyB9KTsKfSk7Cm1hcmtlcnNfbWFwLnB1c2gobWFya2VyX21hcF8zMyk7CmNsdXN0ZXIuYWRkTGF5ZXIobWFya2VyX21hcF8zMyk7Cm1hcmtlcl9tYXBfMzQgPSBMLm1hcmtlcihbNDguODUyMDYwMDAwLCAyLjM2NTQxMDAwMF0se2ljb246aWNvbl90eXBlXzF9KTsKdmFyIHBvcHVwID0gTC5wb3B1cCh7IG1pbldpZHRoOiAzNTAsIGNsYXNzTmFtZTonYWpheF9jb250ZW50JyB9KTsKbWFya2VyX21hcF8zNC5iaW5kUG9wdXAocG9wdXApOwptYXJrZXJfbWFwXzM0Lm9uKCdjbGljaycsIGZ1bmN0aW9uKGUpIHsKICB2YXIgcG9wdXAgPSBlLnRhcmdldC5nZXRQb3B1cCgpOwogICQuZ2V0KCcvZnIvbWFwX3BvcHVwP2lkcz0zMDQxNTk0JykuZG9uZShmdW5jdGlvbihkYXRhKSB7IHBvcHVwLnNldENvbnRlbnQoZGF0YSk7IH0pOwp9KTsKbWFya2Vyc19tYXAucHVzaChtYXJrZXJfbWFwXzM0KTsKY2x1c3Rlci5hZGRMYXllcihtYXJrZXJfbWFwXzM0KTsKbWFya2VyX21hcF8zNSA9IEwubWFya2VyKFs0OC44NDk1OTAwMDAsIDIuMzQ0ODgwMDAwXSx7aWNvbjppY29uX3R5cGVfMX0pOwp2YXIgcG9wdXAgPSBMLnBvcHVwKHsgbWluV2lkdGg6IDM1MCwgY2xhc3NOYW1lOidhamF4X2NvbnRlbnQnIH0pOwptYXJrZXJfbWFwXzM1LmJpbmRQb3B1cChwb3B1cCk7Cm1hcmtlcl9tYXBfMzUub24oJ2NsaWNrJywgZnVuY3Rpb24oZSkgewogIHZhciBwb3B1cCA9IGUudGFyZ2V0LmdldFBvcHVwKCk7CiAgJC5nZXQoJy9mci9tYXBfcG9wdXA/aWRzPTM0MTEwNjInKS5kb25lKGZ1bmN0aW9uKGRhdGEpIHsgcG9wdXAuc2V0Q29udGVudChkYXRhKTsgfSk7Cn0pOwptYXJrZXJzX21hcC5wdXNoKG1hcmtlcl9tYXBfMzUpOwpjbHVzdGVyLmFkZExheWVyKG1hcmtlcl9tYXBfMzUpOwptYXJrZXJfbWFwXzM2ID0gTC5tYXJrZXIoWzQ4Ljg1MzQzMDAwMCwgMi4zNTgyODAwMDBdLHtpY29uOmljb25fdHlwZV8xfSk7CnZhciBwb3B1cCA9IEwucG9wdXAoeyBtaW5XaWR0aDogMzUwLCBjbGFzc05hbWU6J2FqYXhfY29udGVudCcgfSk7Cm1hcmtlcl9tYXBfMzYuYmluZFBvcHVwKHBvcHVwKTsKbWFya2VyX21hcF8zNi5vbignY2xpY2snLCBmdW5jdGlvbihlKSB7CiAgdmFyIHBvcHVwID0gZS50YXJnZXQuZ2V0UG9wdXAoKTsKICAkLmdldCgnL2ZyL21hcF9wb3B1cD9pZHM9MzMxMTgwMScpLmRvbmUoZnVuY3Rpb24oZGF0YSkgeyBwb3B1cC5zZXRDb250ZW50KGRhdGEpOyB9KTsKfSk7Cm1hcmtlcnNfbWFwLnB1c2gobWFya2VyX21hcF8zNik7CmNsdXN0ZXIuYWRkTGF5ZXIobWFya2VyX21hcF8zNik7Cm1hcmtlcl9tYXBfMzcgPSBMLm1hcmtlcihbNDguODU4NTgwMDAwLCAyLjI4NDcwMDAwMF0se2ljb246aWNvbl90eXBlXzF9KTsKdmFyIHBvcHVwID0gTC5wb3B1cCh7IG1pbldpZHRoOiAzNTAsIGNsYXNzTmFtZTonYWpheF9jb250ZW50JyB9KTsKbWFya2VyX21hcF8zNy5iaW5kUG9wdXAocG9wdXApOwptYXJrZXJfbWFwXzM3Lm9uKCdjbGljaycsIGZ1bmN0aW9uKGUpIHsKICB2YXIgcG9wdXAgPSBlLnRhcmdldC5nZXRQb3B1cCgpOwogICQuZ2V0KCcvZnIvbWFwX3BvcHVwP2lkcz0zMzE1MzIzJykuZG9uZShmdW5jdGlvbihkYXRhKSB7IHBvcHVwLnNldENvbnRlbnQoZGF0YSk7IH0pOwp9KTsKbWFya2Vyc19tYXAucHVzaChtYXJrZXJfbWFwXzM3KTsKY2x1c3Rlci5hZGRMYXllcihtYXJrZXJfbWFwXzM3KTsKbWFya2VyX21hcF8zOCA9IEwubWFya2VyKFs0OC44NTM0MzAwMDAsIDIuMzU4MjgwMDAwXSx7aWNvbjppY29uX3R5cGVfMX0pOwp2YXIgcG9wdXAgPSBMLnBvcHVwKHsgbWluV2lkdGg6IDM1MCwgY2xhc3NOYW1lOidhamF4X2NvbnRlbnQnIH0pOwptYXJrZXJfbWFwXzM4LmJpbmRQb3B1cChwb3B1cCk7Cm1hcmtlcl9tYXBfMzgub24oJ2NsaWNrJywgZnVuY3Rpb24oZSkgewogIHZhciBwb3B1cCA9IGUudGFyZ2V0LmdldFBvcHVwKCk7CiAgJC5nZXQoJy9mci9tYXBfcG9wdXA/aWRzPTMzNjQzNzYnKS5kb25lKGZ1bmN0aW9uKGRhdGEpIHsgcG9wdXAuc2V0Q29udGVudChkYXRhKTsgfSk7Cn0pOwptYXJrZXJzX21hcC5wdXNoKG1hcmtlcl9tYXBfMzgpOwpjbHVzdGVyLmFkZExheWVyKG1hcmtlcl9tYXBfMzgpOwptYXJrZXJfbWFwXzM5ID0gTC5tYXJrZXIoWzQ4Ljg5MDQ3MDAwMCwgMi4zMzE4MjAwMDBdLHtpY29uOmljb25fdHlwZV8xfSk7CnZhciBwb3B1cCA9IEwucG9wdXAoeyBtaW5XaWR0aDogMzUwLCBjbGFzc05hbWU6J2FqYXhfY29udGVudCcgfSk7Cm1hcmtlcl9tYXBfMzkuYmluZFBvcHVwKHBvcHVwKTsKbWFya2VyX21hcF8zOS5vbignY2xpY2snLCBmdW5jdGlvbihlKSB7CiAgdmFyIHBvcHVwID0gZS50YXJnZXQuZ2V0UG9wdXAoKTsKICAkLmdldCgnL2ZyL21hcF9wb3B1cD9pZHM9MzI3MzMwMicpLmRvbmUoZnVuY3Rpb24oZGF0YSkgeyBwb3B1cC5zZXRDb250ZW50KGRhdGEpOyB9KTsKfSk7Cm1hcmtlcnNfbWFwLnB1c2gobWFya2VyX21hcF8zOSk7CmNsdXN0ZXIuYWRkTGF5ZXIobWFya2VyX21hcF8zOSk7Cm1hcmtlcl9tYXBfNDAgPSBMLm1hcmtlcihbNDguODMwNzYwMDAwLCAyLjM1OTIwMDAwMF0se2ljb246aWNvbl90eXBlXzF9KTsKdmFyIHBvcHVwID0gTC5wb3B1cCh7IG1pbldpZHRoOiAzNTAsIGNsYXNzTmFtZTonYWpheF9jb250ZW50JyB9KTsKbWFya2VyX21hcF80MC5iaW5kUG9wdXAocG9wdXApOwptYXJrZXJfbWFwXzQwLm9uKCdjbGljaycsIGZ1bmN0aW9uKGUpIHsKICB2YXIgcG9wdXAgPSBlLnRhcmdldC5nZXRQb3B1cCgpOwogICQuZ2V0KCcvZnIvbWFwX3BvcHVwP2lkcz0yNjgwNzg5JykuZG9uZShmdW5jdGlvbihkYXRhKSB7IHBvcHVwLnNldENvbnRlbnQoZGF0YSk7IH0pOwp9KTsKbWFya2Vyc19tYXAucHVzaChtYXJrZXJfbWFwXzQwKTsKY2x1c3Rlci5hZGRMYXllcihtYXJrZXJfbWFwXzQwKTsKbWFya2VyX21hcF80MSA9IEwubWFya2VyKFs0OC44NTM0MzAwMDAsIDIuMzU4MjgwMDAwXSx7aWNvbjppY29uX3R5cGVfMX0pOwp2YXIgcG9wdXAgPSBMLnBvcHVwKHsgbWluV2lkdGg6IDM1MCwgY2xhc3NOYW1lOidhamF4X2NvbnRlbnQnIH0pOwptYXJrZXJfbWFwXzQxLmJpbmRQb3B1cChwb3B1cCk7Cm1hcmtlcl9tYXBfNDEub24oJ2NsaWNrJywgZnVuY3Rpb24oZSkgewogIHZhciBwb3B1cCA9IGUudGFyZ2V0LmdldFBvcHVwKCk7CiAgJC5nZXQoJy9mci9tYXBfcG9wdXA/aWRzPTI2NjA4NTUnKS5kb25lKGZ1bmN0aW9uKGRhdGEpIHsgcG9wdXAuc2V0Q29udGVudChkYXRhKTsgfSk7Cn0pOwptYXJrZXJzX21hcC5wdXNoKG1hcmtlcl9tYXBfNDEpOwpjbHVzdGVyLmFkZExheWVyKG1hcmtlcl9tYXBfNDEpOwptYXJrZXJfbWFwXzQyID0gTC5tYXJrZXIoWzQ4Ljg1ODU4MDAwMCwgMi4yODQ3MDAwMDBdLHtpY29uOmljb25fdHlwZV8xfSk7CnZhciBwb3B1cCA9IEwucG9wdXAoeyBtaW5XaWR0aDogMzUwLCBjbGFzc05hbWU6J2FqYXhfY29udGVudCcgfSk7Cm1hcmtlcl9tYXBfNDIuYmluZFBvcHVwKHBvcHVwKTsKbWFya2VyX21hcF80Mi5vbignY2xpY2snLCBmdW5jdGlvbihlKSB7CiAgdmFyIHBvcHVwID0gZS50YXJnZXQuZ2V0UG9wdXAoKTsKICAkLmdldCgnL2ZyL21hcF9wb3B1cD9pZHM9MjQ1MDQzNicpLmRvbmUoZnVuY3Rpb24oZGF0YSkgeyBwb3B1cC5zZXRDb250ZW50KGRhdGEpOyB9KTsKfSk7Cm1hcmtlcnNfbWFwLnB1c2gobWFya2VyX21hcF80Mik7CmNsdXN0ZXIuYWRkTGF5ZXIobWFya2VyX21hcF80Mik7Cm1hcC5hZGRMYXllcihjbHVzdGVyKTsKaWYobWFya2Vyc19tYXAubGVuZ3RoPjApIHsKICB2YXIgZ3JvdXAgPSBMLmZlYXR1cmVHcm91cChtYXJrZXJzX21hcCk7CiAgbWFwLmZpdEJvdW5kcyhncm91cC5nZXRCb3VuZHMoKSwge21heFpvb206IDEzfSk7Cn0KaWYoY2lyY2xlc19tYXAubGVuZ3RoPjApIHsKICBlbCA9IGNpcmNsZXNfbWFwLnNoaWZ0KCk7ICBtYXAuZml0Qm91bmRzKFtlbC5nZXRMYXRMbmcoKV0sIHttYXhab29tOiAxM30pOwp9Cn0KJC5nZXRTY3JpcHQoJy9qcy9jb21tb24vbGVhZmxldC9sZWFmbGV0LmpzJywgZnVuY3Rpb24gKCkgewogICQuZ2V0U2NyaXB0KCcvanMvY29tbW9uL0xlYWZsZXQuR2VzdHVyZUhhbmRsaW5nL2xlYWZsZXQtZ2VzdHVyZS1oYW5kbGluZy5taW4uanMnKTsKICAkLmdldFNjcmlwdCgnL2pzL2NvbW1vbi9sZWFmbGV0L2xlYWZsZXQubWFya2VyY2x1c3Rlci5qcycsIGZ1bmN0aW9uICgpIHsKCQlsYXVuY2hfbWFwX21hcCgpOwoJCWlmICh0eXBlb2YgY2FsbGJhY2tfbWFwID09PSAiZnVuY3Rpb24iKSB7IGNhbGxiYWNrX21hcChtYXApOyB9Cgl9KTsKfSk7Cjwvc2NyaXB0PgogICAgPGEgY2xhc3M9ImJ1dHRvbiIgaHJlZj0iL2ZyL21hcCI+Vm9pciB0b3VzIGxlcyBiaWVucyBzdXIgbGEgY2FydGU8L2E+ICA8L2Rpdj4KPHNlY3Rpb24gY2xhc3M9Im1haW4gbGlzdGluZyAiPgogIDxkaXYgY2xhc3M9ImxheW91dExhcmdlIGNsZWFyZml4Ij4KICAgIDxhcnRpY2xlIGNsYXNzPSJjb2x1bW5MZWZ0Ij4KICAgICAgPGgxPgogICAgICAgIFZvdHJlIHJlY2hlcmNoZSAgICAgIDwvaDE+CgogICAgICAKICAgICAgCiAgICAgIDxkaXYgY2xhc3M9Im9yZGVyIj4KICAgICAgICA8Zm9ybSBhY3Rpb249IiIgbWV0aG9kPSJnZXQiPgogICAgICAgICAgICA8c2VsZWN0IG5hbWU9Im9yZGVyIiBpZD0ib3JkZXIiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPSIiID5UcmllciBwYXI8L29wdGlvbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT0icHJpY2V8YXNjIiA+UHJpeCBjcm9pc3NhbnQ8L29wdGlvbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT0icHJpY2V8ZGVzYyIgPlByaXggZMOpY3JvaXNzYW50PC9vcHRpb24+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9ImFyZWF8YXNjIiA+U3VyZmFjZSBjcm9pc3NhbnRlPC9vcHRpb24+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9ImFyZWF8ZGVzYyIgPlN1cmZhY2UgZMOpY3JvaXNzYW50PC9vcHRpb24+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9Im5ld3N8ZGVzYyIgc2VsZWN0ZWQ9InNlbGVjdGVkIj5Ob3V2ZWF1dMOpczwvb3B0aW9uPgogICAgICAgICAgICAgICAgICAgICAgICAgIDwvc2VsZWN0PgogICAgICAgIDwvZm9ybT4KICAgICAgPC9kaXY+CgogICAgICAgICAgICAgIDx1bCBjbGFzcz0iYWRzIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGkgY2xhc3M9ImFkICI+CiAgICA8ZGl2IGNsYXNzPSJ0aXRsZXMiPgogICAgICAgICAgPGgyPkFwcGFydGVtZW50LCBQYXJpcyAzw6htZTwvaDI+CiAgICAgIDxoMz5QYXJpcyBJSUkgUnVlIGRlcyBBcnF1ZWJ1c2llcnMgIEJlYXUgMiBwacOoY2VzIHLDqW5vdsOpPC9oMz4KICAgIAogICAgPHNwYW4gY2xhc3M9InNlbGVjdGlvbkxpbmsgIiBocmVmPSIvZnIvc2VsZWN0aW9uLz9lc3RhdGU9MzgyMTcxNiIgdGl0bGU9IkFqb3V0ZXIgw6AgbGEgc8OpbGVjdGlvbiI+QWpvdXRlciDDoCBsYSBzw6lsZWN0aW9uPC9zcGFuPgogIDwvZGl2PgoKICA8ZGl2IGNsYXNzPSJwaWN0dXJlIHJlc2l6ZVBpY3R1cmUiID4KICAgICAgICAgIDxpbWcgYWx0PSJQYXJpcyBJSUkgUnVlIGRlcyBBcnF1ZWJ1c2llcnMgIEJlYXUgMiBwacOoY2VzIHLDqW5vdsOpIiBzcmM9Imh0dHBzOi8vZDFxZmoyMzF1Zzd3ZHUuY2xvdWRmcm9udC5uZXQvcGljdHVyZXMvZXN0YXRlLzM4MjIvMzgyMTcxNi80NzYyMTEwNDE1ZTgwYTNhY2U0ZmNhNi44MDYzNDMxNV83OGE0YTcwOTY3XzUwMS5qcGciIC8+ICAgIAogICAgICAgICAgPGRpdiBjbGFzcz0iYnV0dG9ucyI+CiAgICAgICAgPGRpdj4KICAgICAgICAgIDxhIGNsYXNzPSJidXR0b24gZXN0YXRlUG9wdXBMaW5rIiBocmVmPSIvZnIvcG9wdXAvMzgyMTcxNiI+QXBlcsOndTwvYT4KICAgICAgICAgIDxhIGNsYXNzPSJidXR0b24iIGhyZWY9Ii9mci9yZWNoZXJjaGUvdmVudGUtYXBwYXJ0ZW1lbnQtMi1waWVjZXMtcGFyaXMtM2VtZS1lbmZhbnRzLXJvdWdlcy03NTAwMy0zNjg1NzM3Ij5WdWUgZMOpdGFpbGzDqWU8L2E+CiAgICAgICAgPC9kaXY+CiAgICAgIDwvZGl2PgogICAgICA8L2Rpdj4KCiAgCiAgPHVsPgogICAgPGxpIGNsYXNzPSJwcmljZSAiPjxkaXY+NjMwIDAwMCDigqw8L2Rpdj48L2xpPgogICAgPGxpIGNsYXNzPSJiZWRyb29tcyI+MSA8c3Bhbj5jaGFtYnJlPC9zcGFuPjwvbGk+ICAgIDxsaSBjbGFzcz0iYmF0aHJvb21zIj4xIDxzcGFuPnNhbGxlIGRlIGJhaW5zPC9zcGFuPjwvbGk+ICAgIDxsaSBjbGFzcz0iYXJlYSI+MzkgbcKyPC9saT4gIDwvdWw+CgogIAogIAogIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgICA8bGkgY2xhc3M9ImFkICI+CiAgICA8ZGl2IGNsYXNzPSJ0aXRsZXMiPgogICAgICAgICAgPGgyPkFwcGFydGVtZW50LCBQYXJpcyA1w6htZTwvaDI+CiAgICAgIDxoMz5QYXJpcyBWIEphcmRpbiBkZXMgUExBTlRFUyAgMyBQSUVDRVMgQVNDRU5TRVVSPC9oMz4KICAgIAogICAgPHNwYW4gY2xhc3M9InNlbGVjdGlvbkxpbmsgIiBocmVmPSIvZnIvc2VsZWN0aW9uLz9lc3RhdGU9MzMyMjYyMCIgdGl0bGU9IkFqb3V0ZXIgw6AgbGEgc8OpbGVjdGlvbiI+QWpvdXRlciDDoCBsYSBzw6lsZWN0aW9uPC9zcGFuPgogIDwvZGl2PgoKICA8ZGl2IGNsYXNzPSJwaWN0dXJlIHJlc2l6ZVBpY3R1cmUiID4KICAgICAgICAgIDxpbWcgYWx0PSJQYXJpcyBWIEphcmRpbiBkZXMgUExBTlRFUyAgMyBQSUVDRVMgQVNDRU5TRVVSIiBzcmM9Imh0dHBzOi8vZDFxZmoyMzF1Zzd3ZHUuY2xvdWRmcm9udC5uZXQvcGljdHVyZXMvZXN0YXRlLzMzMjMvMzMyMjYyMC8xMDUxMzg3MzUxNWRhOTYzNWQzMzQ0YTYuOTgxMzQyNjFfOWMwZDU2MWIzMl8xMDI0LmpwZyIgLz4gICAgCiAgICAgICAgICA8ZGl2IGNsYXNzPSJidXR0b25zIj4KICAgICAgICA8ZGl2PgogICAgICAgICAgPGEgY2xhc3M9ImJ1dHRvbiBlc3RhdGVQb3B1cExpbmsiIGhyZWY9Ii9mci9wb3B1cC8zMzIyNjIwIj5BcGVyw6d1PC9hPgogICAgICAgICAgPGEgY2xhc3M9ImJ1dHRvbiIgaHJlZj0iL2ZyL3JlY2hlcmNoZS92ZW50ZS1hcHBhcnRlbWVudC0zLXBpZWNlcy1wYXJpcy01ZW1lLWphcmRpbi1kZXMtcGxhbnRlcy03NTAwNSI+VnVlIGTDqXRhaWxsw6llPC9hPgogICAgICAgIDwvZGl2PgogICAgICA8L2Rpdj4KICAgICAgPC9kaXY+CgogIAogIDx1bD4KICAgIDxsaSBjbGFzcz0icHJpY2UgIj48ZGl2Pjg1MCAwMDAg4oKsPC9kaXY+PC9saT4KICAgIDxsaSBjbGFzcz0iYmVkcm9vbXMiPjEgPHNwYW4+Y2hhbWJyZTwvc3Bhbj48L2xpPiAgICA8bGkgY2xhc3M9ImJhdGhyb29tcyI+MSA8c3Bhbj5zYWxsZSBkZSBiYWluczwvc3Bhbj48L2xpPiAgICA8bGkgY2xhc3M9ImFyZWEiPjczIG3CsjwvbGk+ICA8L3VsPgoKICAKICAKICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgPGxpIGNsYXNzPSJhZCAiPgogICAgPGRpdiBjbGFzcz0idGl0bGVzIj4KICAgICAgICAgIDxoMj5BcHBhcnRlbWVudCwgUGFyaXMgNMOobWU8L2gyPgogICAgICA8aDM+UEFSSVMgSVYgIFJVRSBBVUJSSU9UIFJEQzwvaDM+CiAgICAKICAgIDxzcGFuIGNsYXNzPSJzZWxlY3Rpb25MaW5rICIgaHJlZj0iL2ZyL3NlbGVjdGlvbi8/ZXN0YXRlPTM0ODA3MTkiIHRpdGxlPSJBam91dGVyIMOgIGxhIHPDqWxlY3Rpb24iPkFqb3V0ZXIgw6AgbGEgc8OpbGVjdGlvbjwvc3Bhbj4KICA8L2Rpdj4KCiAgPGRpdiBjbGFzcz0icGljdHVyZSByZXNpemVQaWN0dXJlIiA+CiAgICAgICAgICA8aW1nIGFsdD0iUEFSSVMgSVYgIFJVRSBBVUJSSU9UIFJEQyIgc3JjPSJodHRwczovL2QxcWZqMjMxdWc3d2R1LmNsb3VkZnJvbnQubmV0L3BpY3R1cmVzL2VzdGF0ZS8zNDgxLzM0ODA3MTkvNzM5MjcxMzcwNWRlYTQzYjJjZTk5MzIuMzYyMTUzNjZfOGE1N2QzODdlYV8xMDI0LmpwZyIgLz4gICAgCiAgICAgICAgICA8ZGl2IGNsYXNzPSJidXR0b25zIj4KICAgICAgICA8ZGl2PgogICAgICAgICAgPGEgY2xhc3M9ImJ1dHRvbiBlc3RhdGVQb3B1cExpbmsiIGhyZWY9Ii9mci9wb3B1cC8zNDgwNzE5Ij5BcGVyw6d1PC9hPgogICAgICAgICAgPGEgY2xhc3M9ImJ1dHRvbiIgaHJlZj0iL2ZyL3JlY2hlcmNoZS92ZW50ZS1hcHBhcnRlbWVudC0yLXBpZWNlcy1wYXJpcy00ZW1lLTc1MDA0LTM2MjE0NzQiPlZ1ZSBkw6l0YWlsbMOpZTwvYT4KICAgICAgICA8L2Rpdj4KICAgICAgPC9kaXY+CiAgICAgIDwvZGl2PgoKICAKICA8dWw+CiAgICA8bGkgY2xhc3M9InByaWNlICI+PGRpdj41NzkgMDAwIOKCrDwvZGl2PjwvbGk+CiAgICA8bGkgY2xhc3M9ImJlZHJvb21zIj4xIDxzcGFuPmNoYW1icmU8L3NwYW4+PC9saT4gICAgPGxpIGNsYXNzPSJiYXRocm9vbXMiPjEgPHNwYW4+c2FsbGUgZGUgYmFpbnM8L3NwYW4+PC9saT4gICAgPGxpIGNsYXNzPSJhcmVhIj40MCBtwrI8L2xpPiAgPC91bD4KCiAgCiAgCiAgPC9saT4KICAgICAgICAgICAgICAgICAgICAgIDxsaSBjbGFzcz0iYWQgIj4KICAgIDxkaXYgY2xhc3M9InRpdGxlcyI+CiAgICAgICAgICA8aDI+QXBwYXJ0ZW1lbnQsIFBhcmlzIDTDqG1lPC9oMj4KICAgICAgPGgzPlBBUklTIElWIFNBSU5UIFBBVUwgU1RVRElPIEQgRVhDRVBUSU9OPC9oMz4KICAgIAogICAgPHNwYW4gY2xhc3M9InNlbGVjdGlvbkxpbmsgIiBocmVmPSIvZnIvc2VsZWN0aW9uLz9lc3RhdGU9Mzc3MDIzNSIgdGl0bGU9IkFqb3V0ZXIgw6AgbGEgc8OpbGVjdGlvbiI+QWpvdXRlciDDoCBsYSBzw6lsZWN0aW9uPC9zcGFuPgogIDwvZGl2PgoKICA8ZGl2IGNsYXNzPSJwaWN0dXJlIHJlc2l6ZVBpY3R1cmUiID4KICAgICAgICAgIDxpbWcgYWx0PSJQQVJJUyBJViBTQUlOVCBQQVVMIFNUVURJTyBEIEVYQ0VQVElPTiIgc3JjPSJodHRwczovL2QxcWZqMjMxdWc3d2R1LmNsb3VkZnJvbnQubmV0L3BpY3R1cmVzL2VzdGF0ZS8zNzcxLzM3NzAyMzUvMTg5OTc0Njg3MzVlNjYxNGNkYmUxN2YyLjMzNzc1NDkwX2NjM2NkZWVjYjVfNjM0LmpwZyIgLz4gICAgCiAgICAgICAgICA8ZGl2IGNsYXNzPSJidXR0b25zIj4KICAgICAgICA8ZGl2PgogICAgICAgICAgPGEgY2xhc3M9ImJ1dHRvbiBlc3RhdGVQb3B1cExpbmsiIGhyZWY9Ii9mci9wb3B1cC8zNzcwMjM1Ij5BcGVyw6d1PC9hPgogICAgICAgICAgPGEgY2xhc3M9ImJ1dHRvbiIgaHJlZj0iL2ZyL3JlY2hlcmNoZS92ZW50ZS1hcHBhcnRlbWVudC0xLXBpZWNlLXBhcmlzLTRlbWUtc2FpbnQtZ2VydmFpcy03NTAwNC0zNjc3MDM2Ij5WdWUgZMOpdGFpbGzDqWU8L2E+CiAgICAgICAgPC9kaXY+CiAgICAgIDwvZGl2PgogICAgICA8L2Rpdj4KCiAgCiAgPHVsPgogICAgPGxpIGNsYXNzPSJwcmljZSAiPjxkaXY+NDk5IDAwMCDigqw8L2Rpdj48L2xpPgogICAgICAgIDxsaSBjbGFzcz0iYmF0aHJvb21zIj4xIDxzcGFuPnNhbGxlIGRlIGJhaW5zPC9zcGFuPjwvbGk+ICAgIDxsaSBjbGFzcz0iYXJlYSI+MzEgbcKyPC9saT4gIDwvdWw+CgogIAogIAogIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgICA8bGkgY2xhc3M9ImFkICI+CiAgICA8ZGl2IGNsYXNzPSJ0aXRsZXMiPgogICAgICAgICAgPGgyPkFwcGFydGVtZW50LCBQYXJpcyA0w6htZTwvaDI+CiAgICAgIDxoMz5QQVJJUyBJViBTQUlOVCBQQVVMIFNUVURJTyBEIEVYQ0VQVElPTjwvaDM+CiAgICAKICAgIDxzcGFuIGNsYXNzPSJzZWxlY3Rpb25MaW5rICIgaHJlZj0iL2ZyL3NlbGVjdGlvbi8/ZXN0YXRlPTM3ODY4OTIiIHRpdGxlPSJBam91dGVyIMOgIGxhIHPDqWxlY3Rpb24iPkFqb3V0ZXIgw6AgbGEgc8OpbGVjdGlvbjwvc3Bhbj4KICA8L2Rpdj4KCiAgPGRpdiBjbGFzcz0icGljdHVyZSByZXNpemVQaWN0dXJlIiA+CiAgICAgICAgICA8aW1nIGFsdD0iUEFSSVMgSVYgU0FJTlQgUEFVTCBTVFVESU8gRCBFWENFUFRJT04iIHNyYz0iaHR0cHM6Ly9kMXFmajIzMXVnN3dkdS5jbG91ZGZyb250Lm5ldC9waWN0dXJlcy9lc3RhdGUvMzc4Ny8zNzg2ODkyLzE0NDkyMjg0NjI1ZTZiZjY2ZDUzNTczMy4zNzIxMzAwNF8zMjgzMDBlMjc5XzYyOC5qcGciIC8+ICAgIAogICAgICAgICAgPGRpdiBjbGFzcz0iYnV0dG9ucyI+CiAgICAgICAgPGRpdj4KICAgICAgICAgIDxhIGNsYXNzPSJidXR0b24gZXN0YXRlUG9wdXBMaW5rIiBocmVmPSIvZnIvcG9wdXAvMzc4Njg5MiI+QXBlcsOndTwvYT4KICAgICAgICAgIDxhIGNsYXNzPSJidXR0b24iIGhyZWY9Ii9mci9yZWNoZXJjaGUvdmVudGUtYXBwYXJ0ZW1lbnQtMi1waWVjZXMtcGFyaXMtNGVtZS1zYWludC1nZXJ2YWlzLTc1MDA0LTM2ODExMzIiPlZ1ZSBkw6l0YWlsbMOpZTwvYT4KICAgICAgICA8L2Rpdj4KICAgICAgPC9kaXY+CiAgICAgIDwvZGl2PgoKICAKICA8dWw+CiAgICA8bGkgY2xhc3M9InByaWNlICI+PGRpdj40OTkgMDAwIOKCrDwvZGl2PjwvbGk+CiAgICAgICAgPGxpIGNsYXNzPSJiYXRocm9vbXMiPjEgPHNwYW4+c2FsbGUgZGUgYmFpbnM8L3NwYW4+PC9saT4gICAgPGxpIGNsYXNzPSJhcmVhIj4zMSBtwrI8L2xpPiAgPC91bD4KCiAgCiAgCiAgPC9saT4KICAgICAgICAgICAgICAgICAgICAgIDxsaSBjbGFzcz0iYWQgIj4KICAgIDxkaXYgY2xhc3M9InRpdGxlcyI+CiAgICAgICAgICA8aDI+QXBwYXJ0ZW1lbnQsIFBhcmlzIDEyw6htZTwvaDI+CiAgICAgIDxoMz5QYXJpcyBYSUkgQVBQQVJURU1FTlQgQVZFQyBWVUUgRVQgQVNDRU5TRVVSPC9oMz4KICAgIAogICAgPHNwYW4gY2xhc3M9InNlbGVjdGlvbkxpbmsgIiBocmVmPSIvZnIvc2VsZWN0aW9uLz9lc3RhdGU9MzE0NTI0MiIgdGl0bGU9IkFqb3V0ZXIgw6AgbGEgc8OpbGVjdGlvbiI+QWpvdXRlciDDoCBsYSBzw6lsZWN0aW9uPC9zcGFuPgogIDwvZGl2PgoKICA8ZGl2IGNsYXNzPSJwaWN0dXJlIHJlc2l6ZVBpY3R1cmUiID4KICAgICAgICAgIDxpbWcgYWx0PSJQYXJpcyBYSUkgQVBQQVJURU1FTlQgQVZFQyBWVUUgRVQgQVNDRU5TRVVSIiBzcmM9Imh0dHBzOi8vZDFxZmoyMzF1Zzd3ZHUuY2xvdWRmcm9udC5uZXQvcGljdHVyZXMvZXN0YXRlLzMxNDYvMzE0NTI0Mi84ODAwNzc5Mzg1ZTIxY2Y3MDRmYWYzNy43NzM0MDI5N18wMDIzNjU1ZmYxXzEwMjQuanBnIiAvPiAgICAKICAgICAgICAgIDxkaXYgY2xhc3M9ImJ1dHRvbnMiPgogICAgICAgIDxkaXY+CiAgICAgICAgICA8YSBjbGFzcz0iYnV0dG9uIGVzdGF0ZVBvcHVwTGluayIgaHJlZj0iL2ZyL3BvcHVwLzMxNDUyNDIiPkFwZXLDp3U8L2E+CiAgICAgICAgICA8YSBjbGFzcz0iYnV0dG9uIiBocmVmPSIvZnIvcmVjaGVyY2hlL3ZlbnRlLWFwcGFydGVtZW50LTItcGllY2VzLXBhcmlzLTEyZW1lLTc1MDEyLTM2NDA0ODMiPlZ1ZSBkw6l0YWlsbMOpZTwvYT4KICAgICAgICA8L2Rpdj4KICAgICAgPC9kaXY+CiAgICAgIDwvZGl2PgoKICAKICA8dWw+CiAgICA8bGkgY2xhc3M9InByaWNlICI+PGRpdj42NjkgMDAwIOKCrDwvZGl2PjwvbGk+CiAgICA8bGkgY2xhc3M9ImJlZHJvb21zIj4xIDxzcGFuPmNoYW1icmU8L3NwYW4+PC9saT4gICAgPGxpIGNsYXNzPSJiYXRocm9vbXMiPjEgPHNwYW4+c2FsbGUgZGUgYmFpbnM8L3NwYW4+PC9saT4gICAgPGxpIGNsYXNzPSJhcmVhIj40NyBtwrI8L2xpPiAgPC91bD4KCiAgCiAgCiAgPC9saT4KICAgICAgICAgICAgICAgICAgICAgIDxsaSBjbGFzcz0iYWQgIj4KICAgIDxkaXYgY2xhc3M9InRpdGxlcyI+CiAgICAgICAgICA8aDI+QXBwYXJ0ZW1lbnQsIFBhcmlzIDXDqG1lPC9oMj4KICAgICAgPGgzPlBBUklTIFYgUEFOVEhFT04gIFNUVURJTyBQQVJGQUlURVRBVDwvaDM+CiAgICAKICAgIDxzcGFuIGNsYXNzPSJzZWxlY3Rpb25MaW5rICIgaHJlZj0iL2ZyL3NlbGVjdGlvbi8/ZXN0YXRlPTMzOTc2MDIiIHRpdGxlPSJBam91dGVyIMOgIGxhIHPDqWxlY3Rpb24iPkFqb3V0ZXIgw6AgbGEgc8OpbGVjdGlvbjwvc3Bhbj4KICA8L2Rpdj4KCiAgPGRpdiBjbGFzcz0icGljdHVyZSByZXNpemVQaWN0dXJlIiA+CiAgICAgICAgICA8aW1nIGFsdD0iUEFSSVMgViBQQU5USEVPTiAgU1RVRElPIFBBUkZBSVRFVEFUIiBzcmM9Imh0dHBzOi8vZDFxZmoyMzF1Zzd3ZHUuY2xvdWRmcm9udC5uZXQvcGljdHVyZXMvZXN0YXRlLzMzOTgvMzM5NzYwMi8xMTUxMDY3MDE5NWRkZmRkNmI3MmI0NTQuNjg0MzE4MTZfZWU3N2RmYWVmZl8xMDI0LmpwZyIgLz4gICAgCiAgICAgICAgICA8ZGl2IGNsYXNzPSJidXR0b25zIj4KICAgICAgICA8ZGl2PgogICAgICAgICAgPGEgY2xhc3M9ImJ1dHRvbiBlc3RhdGVQb3B1cExpbmsiIGhyZWY9Ii9mci9wb3B1cC8zMzk3NjAyIj5BcGVyw6d1PC9hPgogICAgICAgICAgPGEgY2xhc3M9ImJ1dHRvbiIgaHJlZj0iL2ZyL3JlY2hlcmNoZS92ZW50ZS1hcHBhcnRlbWVudC0xLXBpZWNlLXBhcmlzLTVlbWUtc29yYm9ubmUtNzUwMDUtMzYwNTY1MSI+VnVlIGTDqXRhaWxsw6llPC9hPgogICAgICAgIDwvZGl2PgogICAgICA8L2Rpdj4KICAgICAgPC9kaXY+CgogIAogIDx1bD4KICAgIDxsaSBjbGFzcz0icHJpY2UgIj48ZGl2PjI5OSAwMDAg4oKsPC9kaXY+PC9saT4KICAgIDxsaSBjbGFzcz0iYmVkcm9vbXMiPjEgPHNwYW4+Y2hhbWJyZTwvc3Bhbj48L2xpPiAgICA8bGkgY2xhc3M9ImJhdGhyb29tcyI+MSA8c3Bhbj5zYWxsZSBkZSBiYWluczwvc3Bhbj48L2xpPiAgICA8bGkgY2xhc3M9ImFyZWEiPjE1IG3CsjwvbGk+ICA8L3VsPgoKICAKICAKICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgPGxpIGNsYXNzPSJhZCAiPgogICAgPGRpdiBjbGFzcz0idGl0bGVzIj4KICAgICAgICAgIDxoMj5BcHBhcnRlbWVudCwgUGFyaXMgMTDDqG1lPC9oMj4KICAgICAgPGgzPlBhcmlzIDEww6htZSA6IGxvZnQgZGFucyB1bmUgdHLDqHMgYmVsbGUgY291ciBwYXbDqWUgZXQgY2FsbWU8L2gzPgogICAgCiAgICA8c3BhbiBjbGFzcz0ic2VsZWN0aW9uTGluayAiIGhyZWY9Ii9mci9zZWxlY3Rpb24vP2VzdGF0ZT0zNjQxNjA4IiB0aXRsZT0iQWpvdXRlciDDoCBsYSBzw6lsZWN0aW9uIj5Bam91dGVyIMOgIGxhIHPDqWxlY3Rpb248L3NwYW4+CiAgPC9kaXY+CgogIDxkaXYgY2xhc3M9InBpY3R1cmUgcmVzaXplUGljdHVyZSIgPgogICAgICAgICAgPGltZyBhbHQ9IlBhcmlzIDEww6htZSA6IGxvZnQgZGFucyB1bmUgdHLDqHMgYmVsbGUgY291ciBwYXbDqWUgZXQgY2FsbWUiIHNyYz0iaHR0cHM6Ly9kMXFmajIzMXVnN3dkdS5jbG91ZGZyb250Lm5ldC9waWN0dXJlcy9lc3RhdGUvMzY0Mi8zNjQxNjA4LzEwODczODAxMDg1ZTUxMWQ0NzQwZTRiNS4yMDQ5OTUwMl9kN2FmOWVkZjg5XzEwMjQuanBnIiAvPiAgICAKICAgICAgICAgIDxkaXYgY2xhc3M9ImJ1dHRvbnMiPgogICAgICAgIDxkaXY+CiAgICAgICAgICA8YSBjbGFzcz0iYnV0dG9uIGVzdGF0ZVBvcHVwTGluayIgaHJlZj0iL2ZyL3BvcHVwLzM2NDE2MDgiPkFwZXLDp3U8L2E+CiAgICAgICAgICA8YSBjbGFzcz0iYnV0dG9uIiBocmVmPSIvZnIvcmVjaGVyY2hlL3ZlbnRlLWFwcGFydGVtZW50LTQtcGllY2VzLXBhcmlzLTEwZW1lLTc1MDEwLTM2Njc4MzQiPlZ1ZSBkw6l0YWlsbMOpZTwvYT4KICAgICAgICA8L2Rpdj4KICAgICAgPC9kaXY+CiAgICAgIDwvZGl2PgoKICAKICA8dWw+CiAgICA8bGkgY2xhc3M9InByaWNlICI+PGRpdj4xIDc1MCAwMDAg4oKsPC9kaXY+PC9saT4KICAgIDxsaSBjbGFzcz0iYmVkcm9vbXMiPjMgPHNwYW4+Y2hhbWJyZXM8L3NwYW4+PC9saT4gICAgPGxpIGNsYXNzPSJiYXRocm9vbXMiPjEgPHNwYW4+c2FsbGUgZGUgYmFpbnM8L3NwYW4+PC9saT4gICAgPGxpIGNsYXNzPSJhcmVhIj4xNjEgbcKyPC9saT4gIDwvdWw+CgogIAogIAogIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgICA8bGkgY2xhc3M9ImFkICI+CiAgICA8ZGl2IGNsYXNzPSJ0aXRsZXMiPgogICAgICAgICAgPGgyPkFwcGFydGVtZW50LCBQYXJpcyA0w6htZTwvaDI+CiAgICAgIDxoMz5TdCBQYXVsOkF1IGNvZXVyIGR1IE1hcmFpcyBoaXN0b3JpcXVlIHN1YmxpbWUgMyBwacOoY2VzIGVuIMOpdGFnZSDDqWxldsOpPC9oMz4KICAgIAogICAgPHNwYW4gY2xhc3M9InNlbGVjdGlvbkxpbmsgIiBocmVmPSIvZnIvc2VsZWN0aW9uLz9lc3RhdGU9MzQwNDY5OSIgdGl0bGU9IkFqb3V0ZXIgw6AgbGEgc8OpbGVjdGlvbiI+QWpvdXRlciDDoCBsYSBzw6lsZWN0aW9uPC9zcGFuPgogIDwvZGl2PgoKICA8ZGl2IGNsYXNzPSJwaWN0dXJlIHJlc2l6ZVBpY3R1cmUiID4KICAgICAgICAgIDxpbWcgYWx0PSJTdCBQYXVsOkF1IGNvZXVyIGR1IE1hcmFpcyBoaXN0b3JpcXVlIHN1YmxpbWUgMyBwacOoY2VzIGVuIMOpdGFnZSDDqWxldsOpIiBzcmM9Imh0dHBzOi8vZDFxZmoyMzF1Zzd3ZHUuY2xvdWRmcm9udC5uZXQvcGljdHVyZXMvZXN0YXRlLzM0MDUvMzQwNDY5OS8xMjc5MjkwMDcwNWUzODJmODA1MmU1OTEuNzQxMzg0NjNfMDIzMzc0OGZhYl8xMDI0LmpwZyIgLz4gICAgCiAgICAgICAgICA8ZGl2IGNsYXNzPSJidXR0b25zIj4KICAgICAgICA8ZGl2PgogICAgICAgICAgPGEgY2xhc3M9ImJ1dHRvbiBlc3RhdGVQb3B1cExpbmsiIGhyZWY9Ii9mci9wb3B1cC8zNDA0Njk5Ij5BcGVyw6d1PC9hPgogICAgICAgICAgPGEgY2xhc3M9ImJ1dHRvbiIgaHJlZj0iL2ZyL3JlY2hlcmNoZS92ZW50ZS1hcHBhcnRlbWVudC0zLXBpZWNlcy1wYXJpcy00ZW1lLTc1MDA0LTM2MDY5MzAiPlZ1ZSBkw6l0YWlsbMOpZTwvYT4KICAgICAgICA8L2Rpdj4KICAgICAgPC9kaXY+CiAgICAgIDwvZGl2PgoKICAKICA8dWw+CiAgICA8bGkgY2xhc3M9InByaWNlICI+PGRpdj4xIDI5MCAwMDAg4oKsPC9kaXY+PC9saT4KICAgIDxsaSBjbGFzcz0iYmVkcm9vbXMiPjEgPHNwYW4+Y2hhbWJyZTwvc3Bhbj48L2xpPiAgICA8bGkgY2xhc3M9ImJhdGhyb29tcyI+MSA8c3Bhbj5zYWxsZSBkZSBiYWluczwvc3Bhbj48L2xpPiAgICA8bGkgY2xhc3M9ImFyZWEiPjcyIG3CsjwvbGk+ICA8L3VsPgoKICAKICAKICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgPGxpIGNsYXNzPSJhZCAiPgogICAgPGRpdiBjbGFzcz0idGl0bGVzIj4KICAgICAgICAgIDxoMj5BcHBhcnRlbWVudCwgUGFyaXMgMTHDqG1lPC9oMj4KICAgICAgPGgzPkVYQ0xVU0lWSVRFIDogWEnDqG1lIHBsYWNlIGZvbnRhaW5lIFRpbWJhdWQgc3VibGltZSAyIHBpw6hjZXMgdnVlIGTDqWdhZ8OpZTwvaDM+CiAgICAKICAgIDxzcGFuIGNsYXNzPSJzZWxlY3Rpb25MaW5rICIgaHJlZj0iL2ZyL3NlbGVjdGlvbi8/ZXN0YXRlPTM3NzE2MjkiIHRpdGxlPSJBam91dGVyIMOgIGxhIHPDqWxlY3Rpb24iPkFqb3V0ZXIgw6AgbGEgc8OpbGVjdGlvbjwvc3Bhbj4KICA8L2Rpdj4KCiAgPGRpdiBjbGFzcz0icGljdHVyZSByZXNpemVQaWN0dXJlIiA+CiAgICAgICAgICA8aW1nIGFsdD0iRVhDTFVTSVZJVEUgOiBYScOobWUgcGxhY2UgZm9udGFpbmUgVGltYmF1ZCBzdWJsaW1lIDIgcGnDqGNlcyB2dWUgZMOpZ2Fnw6llIiBzcmM9Imh0dHBzOi8vZDFxZmoyMzF1Zzd3ZHUuY2xvdWRmcm9udC5uZXQvcGljdHVyZXMvZXN0YXRlLzM3NzIvMzc3MTYyOS8xMjQ2MjkwMjg4NWU2N2JkYjMxZGE1NTAuMzI2NTI3ODZfYTBkZTMwNzdjMl8xMDI0LmpwZyIgLz4gICAgCiAgICAgICAgICA8ZGl2IGNsYXNzPSJidXR0b25zIj4KICAgICAgICA8ZGl2PgogICAgICAgICAgPGEgY2xhc3M9ImJ1dHRvbiBlc3RhdGVQb3B1cExpbmsiIGhyZWY9Ii9mci9wb3B1cC8zNzcxNjI5Ij5BcGVyw6d1PC9hPgogICAgICAgICAgPGEgY2xhc3M9ImJ1dHRvbiIgaHJlZj0iL2ZyL3JlY2hlcmNoZS92ZW50ZS1hcHBhcnRlbWVudC0yLXBpZWNlcy1wYXJpcy0xMWVtZS03NTAxMS0zNjc5MTQ4Ij5WdWUgZMOpdGFpbGzDqWU8L2E+CiAgICAgICAgPC9kaXY+CiAgICAgIDwvZGl2PgogICAgICA8L2Rpdj4KCiAgCiAgPHVsPgogICAgPGxpIGNsYXNzPSJwcmljZSAiPjxkaXY+NTcwIDAwMCDigqw8L2Rpdj48L2xpPgogICAgPGxpIGNsYXNzPSJiZWRyb29tcyI+MSA8c3Bhbj5jaGFtYnJlPC9zcGFuPjwvbGk+ICAgIDxsaSBjbGFzcz0iYmF0aHJvb21zIj4xIDxzcGFuPnNhbGxlIGRlIGJhaW5zPC9zcGFuPjwvbGk+ICAgIDxsaSBjbGFzcz0iYXJlYSI+NDQgbcKyPC9saT4gIDwvdWw+CgogICAgICA8cCBjbGFzcz0icmliYm9uIHNvbGVhZ2VudCI+RXhjbHVzaXZpdMOpPC9wPgogIAogIAogIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgICA8bGkgY2xhc3M9ImFkICI+CiAgICA8ZGl2IGNsYXNzPSJ0aXRsZXMiPgogICAgICAgICAgPGgyPkFwcGFydGVtZW50LCBQYXJpcyAzw6htZTwvaDI+CiAgICAgIDxoMz5SVUUgRFVQRVRJVC1USE9VQVJTIC0gUEFSSVMgM8OobWU8L2gzPgogICAgCiAgICA8c3BhbiBjbGFzcz0ic2VsZWN0aW9uTGluayAiIGhyZWY9Ii9mci9zZWxlY3Rpb24vP2VzdGF0ZT0zNDMzMjQ5IiB0aXRsZT0iQWpvdXRlciDDoCBsYSBzw6lsZWN0aW9uIj5Bam91dGVyIMOgIGxhIHPDqWxlY3Rpb248L3NwYW4+CiAgPC9kaXY+CgogIDxkaXYgY2xhc3M9InBpY3R1cmUgcmVzaXplUGljdHVyZSIgPgogICAgICAgICAgPGltZyBhbHQ9IlJVRSBEVVBFVElULVRIT1VBUlMgLSBQQVJJUyAzw6htZSIgc3JjPSJodHRwczovL2QxcWZqMjMxdWc3d2R1LmNsb3VkZnJvbnQubmV0L3BpY3R1cmVzL2VzdGF0ZS8zNDM0LzM0MzMyNDkvMzE3MDc2NTM4NWUzYzEwY2IwNzUzMjQuODE1NTE3MDJfZmZjNDI1ZjA4YV8xMDI0LmpwZyIgLz4gICAgCiAgICAgICAgICA8ZGl2IGNsYXNzPSJidXR0b25zIj4KICAgICAgICA8ZGl2PgogICAgICAgICAgPGEgY2xhc3M9ImJ1dHRvbiBlc3RhdGVQb3B1cExpbmsiIGhyZWY9Ii9mci9wb3B1cC8zNDMzMjQ5Ij5BcGVyw6d1PC9hPgogICAgICAgICAgPGEgY2xhc3M9ImJ1dHRvbiIgaHJlZj0iL2ZyL3JlY2hlcmNoZS92ZW50ZS1hcHBhcnRlbWVudC0yLXBpZWNlcy1wYXJpcy0zZW1lLWVuZmFudHMtcm91Z2VzLTc1MDAzLTM2MTI4NTYiPlZ1ZSBkw6l0YWlsbMOpZTwvYT4KICAgICAgICA8L2Rpdj4KICAgICAgPC9kaXY+CiAgICAgIDwvZGl2PgoKICAKICA8dWw+CiAgICA8bGkgY2xhc3M9InByaWNlICI+PGRpdj41NjUgMDAwIOKCrDwvZGl2PjwvbGk+CiAgICA8bGkgY2xhc3M9ImJlZHJvb21zIj4xIDxzcGFuPmNoYW1icmU8L3NwYW4+PC9saT4gICAgPGxpIGNsYXNzPSJiYXRocm9vbXMiPjEgPHNwYW4+c2FsbGUgZGUgYmFpbnM8L3NwYW4+PC9saT4gICAgPGxpIGNsYXNzPSJhcmVhIj40MiBtwrI8L2xpPiAgPC91bD4KCiAgCiAgCiAgPC9saT4KICAgICAgICAgICAgICAgICAgICAgIDxsaSBjbGFzcz0iYWQgIj4KICAgIDxkaXYgY2xhc3M9InRpdGxlcyI+CiAgICAgICAgICA8aDI+QXBwYXJ0ZW1lbnQsIFBhcmlzIDPDqG1lPC9oMj4KICAgICAgPGgzPlJ1ZSBDaGFybG90LCAyIHBpw6hjZXMgZW4gUkRDIHJlZmFpdCDDoCBuZXVmPC9oMz4KICAgIAogICAgPHNwYW4gY2xhc3M9InNlbGVjdGlvbkxpbmsgIiBocmVmPSIvZnIvc2VsZWN0aW9uLz9lc3RhdGU9MzY0MTY4MCIgdGl0bGU9IkFqb3V0ZXIgw6AgbGEgc8OpbGVjdGlvbiI+QWpvdXRlciDDoCBsYSBzw6lsZWN0aW9uPC9zcGFuPgogIDwvZGl2PgoKICA8ZGl2IGNsYXNzPSJwaWN0dXJlIHJlc2l6ZVBpY3R1cmUiID4KICAgICAgICAgIDxpbWcgYWx0PSJSdWUgQ2hhcmxvdCwgMiBwacOoY2VzIGVuIFJEQyByZWZhaXQgw6AgbmV1ZiIgc3JjPSJodHRwczovL2QxcWZqMjMxdWc3d2R1LmNsb3VkZnJvbnQubmV0L3BpY3R1cmVzL2VzdGF0ZS8zNjQyLzM2NDE2ODAvMTY1OTAzMzI2NDVlNTEzMzFmZTM1MzU5LjIxMzI3ODE0XzdkYWUyNmFmMWZfMTAyNC5qcGciIC8+ICAgIAogICAgICAgICAgPGRpdiBjbGFzcz0iYnV0dG9ucyI+CiAgICAgICAgPGRpdj4KICAgICAgICAgIDxhIGNsYXNzPSJidXR0b24gZXN0YXRlUG9wdXBMaW5rIiBocmVmPSIvZnIvcG9wdXAvMzY0MTY4MCI+QXBlcsOndTwvYT4KICAgICAgICAgIDxhIGNsYXNzPSJidXR0b24iIGhyZWY9Ii9mci9yZWNoZXJjaGUvdmVudGUtYXBwYXJ0ZW1lbnQtMi1waWVjZXMtcGFyaXMtM2VtZS03NTAwMy0zNjY3MjcwIj5WdWUgZMOpdGFpbGzDqWU8L2E+CiAgICAgICAgPC9kaXY+CiAgICAgIDwvZGl2PgogICAgICA8L2Rpdj4KCiAgCiAgPHVsPgogICAgPGxpIGNsYXNzPSJwcmljZSAiPjxkaXY+NDI1IDAwMCDigqw8L2Rpdj48L2xpPgogICAgPGxpIGNsYXNzPSJiZWRyb29tcyI+MSA8c3Bhbj5jaGFtYnJlPC9zcGFuPjwvbGk+ICAgIDxsaSBjbGFzcz0iYmF0aHJvb21zIj4xIDxzcGFuPnNhbGxlIGRlIGJhaW5zPC9zcGFuPjwvbGk+ICAgIDxsaSBjbGFzcz0iYXJlYSI+MzQgbcKyPC9saT4gIDwvdWw+CgogIAogIAogIDwvbGk+CiAgICAgICAgICAgICAgICAgIDwvdWw+CgogICAgICAgICAgICAgICAgICA8dWwgY2xhc3M9InBhZ2VyIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGkgY2xhc3M9ImN1cnJlbnQiPjxzcGFuPjE8L3NwYW4+PC9saT4gICAgICAgICAgICAgICAgICAgICAgICAgIDxsaT48YSBocmVmPSIvZnIvcmVjaGVyY2hlLzIiPjI8L2E+PC9saT4gICAgICAgICAgICAgICAgICAgICAgICAgIDxsaT48YSBocmVmPSIvZnIvcmVjaGVyY2hlLzMiPjM8L2E+PC9saT4gICAgICAgICAgICAgICAgICAgICAgICAgIDxsaT48YSBocmVmPSIvZnIvcmVjaGVyY2hlLzQiPjQ8L2E+PC9saT4gICAgICAgICAgICAgICAgICAgICAgICA8bGkgY2xhc3M9Im5leHRwYWdlIj48YSB0aXRsZT0iUGFnZSBzdWl2YW50ZSIgaHJlZj0iL2ZyL3JlY2hlcmNoZS8yIj5QYWdlIHN1aXZhbnRlPC9hPjwvbGk+ICAgICAgICAgICAgPGxpIGNsYXNzPSJsYXN0cGFnZSI+PGEgdGl0bGU9IkRlcm5pw6hyZSBwYWdlIiBocmVmPSIvZnIvcmVjaGVyY2hlLzQiPkRlcm5pw6hyZSBwYWdlPC9hPjwvbGk+ICAgICAgICAgIDwvdWw+CiAgICAgICAgICAgICAgICAgIDwvYXJ0aWNsZT4KCiAgICA8YXNpZGUgY2xhc3M9ImNvbHVtblJpZ2h0IGNsZWFyZml4Ij4KICAgICAgCiAgICAgIAogICAgICA8ZGl2IGNsYXNzPSJzZWFyY2ggbGlzdGluZ1NlYXJjaCIgZGF0YS1zY3JvbGw9IjEiPgogICAgICAgIDxkaXYgY2xhc3M9ImxvYWRpbmciPjwvZGl2PgogIDxmb3JtIG1ldGhvZD0icG9zdCIgYWN0aW9uPSIvZnIvcmVjaGVyY2hlLyIgY2xhc3M9ImNsZWFyZml4Ij4KICAgICAgPGRpdiBjbGFzcz0iZmllbGQgbmF0dXJlIj48c2VsZWN0IG5hbWU9Im5hdHVyZSIgaWQ9Im5hdHVyZSI+CjxvcHRpb24gdmFsdWU9IjEiIHNlbGVjdGVkPSJzZWxlY3RlZCI+VmVudGU8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iMiI+TG9jYXRpb248L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iMyI+TG9jYXRpb24gc2Fpc29ubmnDqHJlPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjQiPlByb2dyYW1tZTwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSI1Ij5WaWFnZXIgLyBOdWUtcHJvcHJpw6l0w6k8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iNiI+RW5jaMOocmU8L29wdGlvbj4KPC9zZWxlY3Q+PC9kaXY+CiAgICA8ZGl2IGNsYXNzPSJmaWVsZHMgY2xlYXJmaXgiPgogICAgICA8ZGl2IGNsYXNzPSJmaWVsZCI+PHNlbGVjdCBuYW1lPSJ0eXBlW10iIG11bHRpcGxlPSJtdWx0aXBsZSIgaWQ9InR5cGUiPgo8b3B0aW9uIHZhbHVlPSIxIiBzZWxlY3RlZD0ic2VsZWN0ZWQiPkFwcGFydGVtZW50PC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjIiIHNlbGVjdGVkPSJzZWxlY3RlZCI+TWFpc29uPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjMiPlRlcnJhaW48L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iNCI+Q29tbWVyY2U8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iNSI+R2FyYWdlIC8gUGFya2luZzwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSI2Ij5JbW1ldWJsZTwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSI3Ij5CdXJlYXU8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iOCI+QmF0ZWF1PC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjkiPkxvY2F1eCBkJiMwMzk7YWN0aXZpdMOpIC8gRW50cmVww7R0czwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSIxMCI+Q2F2ZSAvIEJveDwvb3B0aW9uPgo8L3NlbGVjdD48L2Rpdj4KICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJmaWVsZCI+PHNlbGVjdCBuYW1lPSJyb29tc1tdIiBtdWx0aXBsZT0ibXVsdGlwbGUiIGlkPSJyb29tcyI+CjxvcHRpb24gdmFsdWU9IjEiPjEgcGnDqGNlPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjIiPjIgcGnDqGNlczwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSIzIj4zIHBpw6hjZXM8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iNCI+NCBwacOoY2VzPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjUiPjUgcGnDqGNlczwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSI2KyI+NisgcGnDqGNlczwvb3B0aW9uPgo8L3NlbGVjdD48L2Rpdj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iZmllbGQiPjxzZWxlY3QgZGF0YS1lcnJvckxvYWRpbmc9IkVycmV1ciBkZSByw6ljdXDDqXJhdGlvbiBkZXMgZG9ubsOpZXMuIiBkYXRhLWlucHV0VG9vU2hvcnQ9IlZldWlsbGV6IHNhaXNpciBkZXV4IGNhcmFjdMOocmVzIGF1IG1pbmltdW0iIGRhdGEtbm9SZXN1bHRzPSJBdWN1biByw6lzdWx0YXQiIGRhdGEtc2VhcmNoaW5nPSJSZWNoZXJjaGUgZW4gY291cnMuLi4iIGRhdGEtcGxhY2Vob2xkZXI9IlZpbGxlIiBuYW1lPSJjaXR5W10iIG11bHRpcGxlPSJtdWx0aXBsZSIgaWQ9ImNpdHkiPgo8b3B0aW9uIHZhbHVlPSIyNTk2NiI+QmVsZm9yw6p0LWVuLVBlcmNoZTwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSI1NDgiPkJvaGFpbi1lbi1WZXJtYW5kb2lzPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjUzOTQ4Ij5CcnV4ZWxsZXM8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iMzgzOTAiPkxlIFByw6ktU2FpbnQtR2VydmFpczwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSIzODM0MCI+TGV2YWxsb2lzLVBlcnJldDwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSIzODM0NiI+TmV1aWxseS1zdXItU2VpbmU8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iMzgyNDciPlBhbGFpc2VhdTwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSIzMjU1MiIgc2VsZWN0ZWQ9InNlbGVjdGVkIj5QYXJpcyAzw6htZTwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSIzMjU1MyIgc2VsZWN0ZWQ9InNlbGVjdGVkIj5QYXJpcyA0w6htZTwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSIzMjU1NCIgc2VsZWN0ZWQ9InNlbGVjdGVkIj5QYXJpcyA1w6htZTwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSIzMjU1OSIgc2VsZWN0ZWQ9InNlbGVjdGVkIj5QYXJpcyAxMMOobWU8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iMzI1NjAiIHNlbGVjdGVkPSJzZWxlY3RlZCI+UGFyaXMgMTHDqG1lPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjMyNTYxIiBzZWxlY3RlZD0ic2VsZWN0ZWQiPlBhcmlzIDEyw6htZTwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSIzMjU2MiIgc2VsZWN0ZWQ9InNlbGVjdGVkIj5QYXJpcyAxM8OobWU8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iMzI1NjUiIHNlbGVjdGVkPSJzZWxlY3RlZCI+UGFyaXMgMTbDqG1lPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjMyNTY3IiBzZWxlY3RlZD0ic2VsZWN0ZWQiPlBhcmlzIDE4w6htZTwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSIzMjU2OCIgc2VsZWN0ZWQ9InNlbGVjdGVkIj5QYXJpcyAxOcOobWU8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iMzI1NjkiIHNlbGVjdGVkPSJzZWxlY3RlZCI+UGFyaXMgMjDDqG1lPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9Ijc2NDAiPlByb3ByaWFubzwvb3B0aW9uPgo8L3NlbGVjdD48L2Rpdj4KICAgICAgPGRpdiBjbGFzcz0iZmllbGQgZHJvcGRvd24iPjxzZWxlY3QgbmFtZT0icHJpY2UiIGlkPSJwcmljZSI+CjxvcHRpb24gdmFsdWU9IiIgc2VsZWN0ZWQ9InNlbGVjdGVkIj5Qcml4PC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjAwMDAwMDAwMDAtMDAwMDIwMDAwMCI+MCAtIDIwMCAwMDAg4oKsPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjAwMDAyMDAwMDAtMDAwMDQwMDAwMCI+MjAwIDAwMCAtIDQwMCAwMDAg4oKsPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjAwMDA0MDAwMDAtMDAwMDYwMDAwMCI+NDAwIDAwMCAtIDYwMCAwMDAg4oKsPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjAwMDA2MDAwMDAtMDAwMDgwMDAwMCI+NjAwIDAwMCAtIDgwMCAwMDAg4oKsPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjAwMDA4MDAwMDAtMDAwMTIwMDAwMCI+ODAwIDAwMCAtIDEgMjAwIDAwMCDigqw8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iMDAwMTIwMDAwMC0wMDAyMDAwMDAwIj4xIDIwMCAwMDAgLSAyIDAwMCAwMDAg4oKsPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjAwMDIwMDAwMDAtRU5EIj4rIDIgMDAwIDAwMCDigqw8L29wdGlvbj4KPC9zZWxlY3Q+PC9kaXY+CiAgICAgIAogICAgICAgICAgICAgICAgPHNlY3Rpb24gY2xhc3M9ImxpZmVBbm51aXR5IiBzdHlsZT0iZGlzcGxheTogbm9uZTsiPgogICAgICAgIDxkaXYgY2xhc3M9ImZpZWxkIGRyb3Bkb3duIj48c2VsZWN0IG5hbWU9ImFubnVpdHlbXSIgbXVsdGlwbGU9Im11bHRpcGxlIiBpZD0iYW5udWl0eSI+CjxvcHRpb24gdmFsdWU9IjEiPlZpYWdlciBsaWJyZTwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSIyIj5WaWFnZXIgb2NjdXDDqTwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSIzIj5OdWUtcHJvcHJpw6l0w6k8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iNCI+VmVudGUgw6AgdGVybWU8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iNSI+VmlhZ2VyIHNlbWktb2NjdXDDqTwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSI2Ij5WZW50ZSDDoCB0ZXJtZSBsaWJyZTwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSI3Ij5WZW50ZSDDoCB0ZXJtZSBzZW1pLW9jY3Vww6k8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iOCI+VmVudGUgw6AgdGVybWUgb2NjdXDDqTwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSI5Ij5WaWFnZXIgc2FucyByZW50ZTwvb3B0aW9uPgo8L3NlbGVjdD48L2Rpdj4KICAgICAgICA8ZGl2IGNsYXNzPSJmaWVsZCI+PGlucHV0IHBsYWNlaG9sZGVyPSJNaW4uIGFnZSIgdHlwZT0idGV4dCIgbmFtZT0iYWdlIiBpZD0iYWdlIiAvPjwvZGl2PgogICAgICAgIDxkaXYgY2xhc3M9ImZpZWxkIj48aW5wdXQgcGxhY2Vob2xkZXI9IlJlbnRlIG1pbi4iIHR5cGU9InRleHQiIG5hbWU9InRlbmFudF9taW4iIGlkPSJ0ZW5hbnRfbWluIiAvPjwvZGl2PgogICAgICAgIDxkaXYgY2xhc3M9ImZpZWxkIj48aW5wdXQgcGxhY2Vob2xkZXI9IlJlbnRlIG1heC4iIHR5cGU9InRleHQiIG5hbWU9InRlbmFudF9tYXgiIGlkPSJ0ZW5hbnRfbWF4IiAvPjwvZGl2PgogICAgICA8L3NlY3Rpb24+CgogICAgICA8c2VjdGlvbiBjbGFzcz0icmVudGFsIiBzdHlsZT0iZGlzcGxheTogbm9uZTsiPgogICAgICAgIDxkaXYgY2xhc3M9ImZpZWxkIGRyb3Bkb3duIj48c2VsZWN0IG5hbWU9InJlbnRfdHlwZSIgaWQ9InJlbnRfdHlwZSI+CjxvcHRpb24gdmFsdWU9IiI+VHlwZSBkZSBsb2NhdGlvbjwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSIzIj5Db2xvY2F0aW9uPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjIiPk1ldWJsw6llPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjEiPlZpZGU8L29wdGlvbj4KPC9zZWxlY3Q+PC9kaXY+CiAgICAgIDwvc2VjdGlvbj4KCiAgICAgIDxzZWN0aW9uIGNsYXNzPSJuZXdidWlsZHMiIHN0eWxlPSJkaXNwbGF5OiBub25lOyI+CiAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImZpZWxkIGRyb3Bkb3duIj48aW5wdXQgdHlwZT0iaGlkZGVuIiBuYW1lPSJuZXdwcm9ncmFtX2RlbGl2ZXJ5X2F0IiBpZD0ibmV3cHJvZ3JhbV9kZWxpdmVyeV9hdCIgLz4gPGlucHV0IHBsYWNlaG9sZGVyPSJEw6lsYWkgZGUgbGl2cmFpc29uIiB0eXBlPSJ0ZXh0IiBuYW1lPSJuZXdwcm9ncmFtX2RlbGl2ZXJ5X2F0X2Rpc3BsYXkiIGlkPSJuZXdwcm9ncmFtX2RlbGl2ZXJ5X2F0X2Rpc3BsYXkiIC8+PC9kaXY+CiAgICAgICAgICAgICAgPC9zZWN0aW9uPgogICAgCiAgICAgIDwvZGl2PgoKICAgIDxpbnB1dCB0eXBlPSJoaWRkZW4iIG5hbWU9ImN1cnJlbmN5IiB2YWx1ZT0iRVVSIiBpZD0iY3VycmVuY3kiIC8+ICA8aW5wdXQgdHlwZT0ic3VibWl0IiB2YWx1ZT0iUmVjaGVyY2hlciIvPgogIDxpbnB1dCB0eXBlPSJoaWRkZW4iIG5hbWU9ImN1c3RvbXJvdXRlIiB2YWx1ZT0iIiAvPgogIDxpbnB1dCB0eXBlPSJoaWRkZW4iIG5hbWU9ImhvbWVwYWdlIiB2YWx1ZT0iIiAvPgo8L2Zvcm0+CgoKCiAgPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPgogICAgJChmdW5jdGlvbigpIHsKICAgICAgJCgnI25hdHVyZScpLmNoYW5nZShmdW5jdGlvbigpIHsKICAgICAgICByZWZyZXNoU2VhcmNoRm9ybSgpOwogICAgICB9KTsKICAgIH0pOwogIDwvc2NyaXB0PgoKPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPgoKICB2YXIgc2VsZWN0T3BlbiA9IGZhbHNlOwoKICAkKGZ1bmN0aW9uKCkgewogICAgJCgnI25hdHVyZSBvcHRpb246c2VsZWN0ZWQnKS52YWwoKTsKICAgIAogICAgJC5mbi5zZWxlY3QyLmFtZC5yZXF1aXJlKFsib3B0Z3JvdXAtZGF0YSIsICJvcHRncm91cC1yZXN1bHRzIl0sIGZ1bmN0aW9uIChPcHRncm91cERhdGEsIE9wdGdyb3VwUmVzdWx0cykgewogICAgICAKICAgICAgJCgnI2NpdHljb2RlJykuc2VsZWN0Mih7CiAgICAgICAgZGF0YUFkYXB0ZXI6IE9wdGdyb3VwRGF0YSwKICAgICAgICByZXN1bHRzQWRhcHRlcjogT3B0Z3JvdXBSZXN1bHRzLAogICAgICAgIG1pbmltdW1JbnB1dExlbmd0aDogMiwKICAgICAgICBtYXRjaGVyOiB6aXBjb2RlTWF0Y2hlciwKICAgICAgICBsYW5ndWFnZTogewogICAgICAgICAgZXJyb3JMb2FkaW5nOiBmdW5jdGlvbigpIHsKICAgICAgICAgICAgcmV0dXJuICQoJyNjaXR5Y29kZScpLmF0dHIoJ2RhdGEtZXJyb3JMb2FkaW5nJyk7CiAgICAgICAgICB9LAogICAgICAgICAgaW5wdXRUb29TaG9ydDogZnVuY3Rpb24oYSkgewogICAgICAgICAgICByZXR1cm4gJCgnI2NpdHljb2RlJykuYXR0cignZGF0YS1pbnB1dFRvb1Nob3J0Jyk7CiAgICAgICAgICB9LAogICAgICAgICAgbm9SZXN1bHRzOiBmdW5jdGlvbigpIHsKICAgICAgICAgICAgcmV0dXJuICQoJyNjaXR5Y29kZScpLmF0dHIoJ2RhdGEtbm9SZXN1bHRzJyk7CiAgICAgICAgICB9LAogICAgICAgICAgc2VhcmNoaW5nOiBmdW5jdGlvbigpIHsKICAgICAgICAgICAgcmV0dXJuICQoJyNjaXR5Y29kZScpLmF0dHIoJ2RhdGEtc2VhcmNoaW5nJyk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9KTsgCiAgICAgIAogICAgfSk7CiAgICAKICAgIAogICAgJCgnI2NpdHknKS5zZWxlY3QyKHsKCSAgICBwbGFjZWhvbGRlcjogJCgnI2NpdHknKS5kYXRhKCdwbGFjZWhvbGRlcicpLAoJICAgIGVzY2FwZU1hcmt1cDogZnVuY3Rpb24gKG1hcmt1cCkgeyByZXR1cm4gbWFya3VwOyB9LAoJICAgIG1pbmltdW1JbnB1dExlbmd0aDogMCwKCSAgICBsYW5ndWFnZTogewoJICAgICAgZXJyb3JMb2FkaW5nOiBmdW5jdGlvbigpIHsKCQkgICAgICByZXR1cm4gJCgnI2NpdHknKS5hdHRyKCdkYXRhLWVycm9yTG9hZGluZycpOwoJICAgICAgfSwKCSAgICAgIGlucHV0VG9vU2hvcnQ6IGZ1bmN0aW9uKGEpIHsKCSAgICAgIAlyZXR1cm4gJCgnI2NpdHknKS5hdHRyKCdkYXRhLWlucHV0VG9vU2hvcnQnKTsKCSAgICAgIH0sCgkgICAgICBub1Jlc3VsdHM6IGZ1bmN0aW9uKCkgewoJICAgICAgCXJldHVybiAkKCcjY2l0eScpLmF0dHIoJ2RhdGEtbm9SZXN1bHRzJyk7CgkgICAgICB9LAoJICAgICAgc2VhcmNoaW5nOiBmdW5jdGlvbigpIHsKCSAgICAgIAlyZXR1cm4gJCgnI2NpdHknKS5hdHRyKCdkYXRhLXNlYXJjaGluZycpOwoJICAgICAgfQoJICAgIH0KCSAgfSk7CgogICAgJCgnI2xvY2F0aW9uJykuc2VsZWN0Mih7CgkgICAgcGxhY2Vob2xkZXI6ICQoJyNsb2NhdGlvbicpLmRhdGEoJ3BsYWNlaG9sZGVyJyksCgkgICAgYWpheDogewoJICAgICAgdXJsOiAiL21pc2MvYXV0b2NvbXBsZXRlIiwKCSAgICAgIGRhdGFUeXBlOiAnanNvbicsCgkgICAgICBkZWxheTogMjUwLAoJICAgICAgZGF0YTogZnVuY3Rpb24gKHBhcmFtcykgewoJICAgICAgICByZXR1cm4gewoJICAgICAgICAgIHE6IHBhcmFtcy50ZXJtLCAvLyBzZWFyY2ggdGVybQoJICAgICAgICAgIHBhZ2U6IHBhcmFtcy5wYWdlCgkgICAgICAgIH07CgkgICAgICB9LAoJICAgICAgcHJvY2Vzc1Jlc3VsdHM6IGZ1bmN0aW9uIChkYXRhKSB7CgkgICAgICAgICAgcmV0dXJuIHsKCSAgICAgICAgICAgICAgcmVzdWx0czogJC5tYXAoZGF0YS5pdGVtcywgZnVuY3Rpb24gKGl0ZW0pIHsKCSAgICAgICAgICAgICAgICAgIHJldHVybiB7CgkgICAgICAgICAgICAgICAgICAgICAgdGV4dDogaXRlbS5uYW1lLAoJICAgICAgICAgICAgICAgICAgICAgIGlkOiBpdGVtLmlkCgkgICAgICAgICAgICAgICAgICB9CgkgICAgICAgICAgICAgIH0pCgkgICAgICAgICAgfTsKCSAgICAgIH0sCgkgICAgICBjYWNoZTogdHJ1ZQoJICAgIH0sCgkgICAgZXNjYXBlTWFya3VwOiBmdW5jdGlvbiAobWFya3VwKSB7IHJldHVybiBtYXJrdXA7IH0sCgkgICAgbWluaW11bUlucHV0TGVuZ3RoOiAyLAoJICAgIGxhbmd1YWdlOiB7CgkgICAgICBlcnJvckxvYWRpbmc6IGZ1bmN0aW9uKCkgewoJCSAgICAgIHJldHVybiAkKCcjbG9jYXRpb24nKS5hdHRyKCdkYXRhLWVycm9yTG9hZGluZycpOwoJICAgICAgfSwKCSAgICAgIGlucHV0VG9vU2hvcnQ6IGZ1bmN0aW9uKGEpIHsKCSAgICAgIAlyZXR1cm4gJCgnI2xvY2F0aW9uJykuYXR0cignZGF0YS1pbnB1dFRvb1Nob3J0Jyk7CgkgICAgICB9LAoJICAgICAgbm9SZXN1bHRzOiBmdW5jdGlvbigpIHsKCSAgICAgIAlyZXR1cm4gJCgnI2xvY2F0aW9uJykuYXR0cignZGF0YS1ub1Jlc3VsdHMnKTsKCSAgICAgIH0sCgkgICAgICBzZWFyY2hpbmc6IGZ1bmN0aW9uKCkgewoJICAgICAgCXJldHVybiAkKCcjbG9jYXRpb24nKS5hdHRyKCdkYXRhLXNlYXJjaGluZycpOwoJICAgICAgfQoJICAgIH0KCSAgfSk7CgogICAgJCgnI2RlcGFydG1lbnQnKS5zZWxlY3QyKHsKCSAgICBwbGFjZWhvbGRlcjogJCgnI2RlcGFydG1lbnQnKS5kYXRhKCdwbGFjZWhvbGRlcicpLAoJICAgIGxhbmd1YWdlOiB7CgkgICAgICBlcnJvckxvYWRpbmc6IGZ1bmN0aW9uKCkgewoJCSAgICAgIHJldHVybiAkKCcjZGVwYXJ0bWVudCcpLmF0dHIoJ2RhdGEtZXJyb3JMb2FkaW5nJyk7CgkgICAgICB9LAoJICAgICAgaW5wdXRUb29TaG9ydDogZnVuY3Rpb24oYSkgewoJICAgICAgCXJldHVybiAkKCcjZGVwYXJ0bWVudCcpLmF0dHIoJ2RhdGEtaW5wdXRUb29TaG9ydCcpOwoJICAgICAgfSwKCSAgICAgIG5vUmVzdWx0czogZnVuY3Rpb24oKSB7CgkgICAgICAJcmV0dXJuICQoJyNkZXBhcnRtZW50JykuYXR0cignZGF0YS1ub1Jlc3VsdHMnKTsKCSAgICAgIH0sCgkgICAgICBzZWFyY2hpbmc6IGZ1bmN0aW9uKCkgewoJICAgICAgCXJldHVybiAkKCcjZGVwYXJ0bWVudCcpLmF0dHIoJ2RhdGEtc2VhcmNoaW5nJyk7CgkgICAgICB9CgkgICAgfQoJICB9KTsKICAgIAogICAgJCgnI3JlZ2lvbicpLnNlbGVjdDIoewoJICAgIHBsYWNlaG9sZGVyOiAkKCcjcmVnaW9uJykuZGF0YSgncGxhY2Vob2xkZXInKSwKCSAgICBsYW5ndWFnZTogewoJICAgICAgZXJyb3JMb2FkaW5nOiBmdW5jdGlvbigpIHsKCQkgICAgICByZXR1cm4gJCgnI3JlZ2lvbicpLmF0dHIoJ2RhdGEtZXJyb3JMb2FkaW5nJyk7CgkgICAgICB9LAoJICAgICAgaW5wdXRUb29TaG9ydDogZnVuY3Rpb24oYSkgewoJICAgICAgCXJldHVybiAkKCcjcmVnaW9uJykuYXR0cignZGF0YS1pbnB1dFRvb1Nob3J0Jyk7CgkgICAgICB9LAoJICAgICAgbm9SZXN1bHRzOiBmdW5jdGlvbigpIHsKCSAgICAgIAlyZXR1cm4gJCgnI3JlZ2lvbicpLmF0dHIoJ2RhdGEtbm9SZXN1bHRzJyk7CgkgICAgICB9LAoJICAgICAgc2VhcmNoaW5nOiBmdW5jdGlvbigpIHsKCSAgICAgIAlyZXR1cm4gJCgnI3JlZ2lvbicpLmF0dHIoJ2RhdGEtc2VhcmNoaW5nJyk7CgkgICAgICB9CgkgICAgfQoJICB9KTsKICAgIAogICAgJCgnI3JlZ2RlcCcpLnNlbGVjdDIoewoJICAgIHBsYWNlaG9sZGVyOiAkKCcjcmVnZGVwJykuZGF0YSgncGxhY2Vob2xkZXInKSwKCSAgICBsYW5ndWFnZTogewoJICAgICAgZXJyb3JMb2FkaW5nOiBmdW5jdGlvbigpIHsKCQkgICAgICByZXR1cm4gJCgnI3JlZ2RlcCcpLmF0dHIoJ2RhdGEtZXJyb3JMb2FkaW5nJyk7CgkgICAgICB9LAoJICAgICAgaW5wdXRUb29TaG9ydDogZnVuY3Rpb24oYSkgewoJICAgICAgCXJldHVybiAkKCcjcmVnZGVwJykuYXR0cignZGF0YS1pbnB1dFRvb1Nob3J0Jyk7CgkgICAgICB9LAoJICAgICAgbm9SZXN1bHRzOiBmdW5jdGlvbigpIHsKCSAgICAgIAlyZXR1cm4gJCgnI3JlZ2RlcCcpLmF0dHIoJ2RhdGEtbm9SZXN1bHRzJyk7CgkgICAgICB9LAoJICAgICAgc2VhcmNoaW5nOiBmdW5jdGlvbigpIHsKCSAgICAgIAlyZXR1cm4gJCgnI3JlZ2RlcCcpLmF0dHIoJ2RhdGEtc2VhcmNoaW5nJyk7CgkgICAgICB9CgkgICAgfQoJICB9KTsKICAgIAogICAgJCgnI3NlY3RvcicpLm11bHRpcGxlU2VsZWN0KHsKICAgICAgcGxhY2Vob2xkZXI6ICJTZWN0ZXVycyIsCiAgICAgIHNlbGVjdEFsbFRleHQ6ICJUb3V0IHPDqWxlY3Rpb25uZXIiLAogICAgICBzZWxlY3RBbGxEZWxpbWl0ZXI6ICIiLAogICAgICBhbGxTZWxlY3RlZDogIlRvdXMgc8OpbGVjdGlvbm7DqXMiLAogICAgICBtaW5pbXVtQ291bnRTZWxlY3RlZDogMiwKICAgICAgY291bnRTZWxlY3RlZDogIiMgc2VjdGV1cnMiLAogICAgICBvbk9wZW46IGZ1bmN0aW9uKCkgewogICAgICAgIGRpc2FibGVTZWFyY2hGaWVsZHMoJyNzZWN0b3InKTsKICAgICAgICB2YXIgc2VsZWN0T3BlbiA9IHRydWU7CiAgICAgIH0sCiAgICAgIG9uQ2xvc2U6IGZ1bmN0aW9uKCkgewogICAgICAgIHJlZnJlc2hTZWFyY2hGb3JtKCk7CiAgICAgIH0KICAgIH0pOwoKICAgICQoJyN0eXBlJykubXVsdGlwbGVTZWxlY3QoewogICAgICBwbGFjZWhvbGRlcjogIlR5cGVzIiwKICAgICAgc2VsZWN0QWxsVGV4dDogIlRvdXQgc8OpbGVjdGlvbm5lciIsCiAgICAgIHNlbGVjdEFsbERlbGltaXRlcjogIiIsCiAgICAgIGFsbFNlbGVjdGVkOiAiVG91cyBzw6lsZWN0aW9ubsOpcyIsCiAgICAgIG1pbmltdW1Db3VudFNlbGVjdGVkOiAyLAogICAgICBjb3VudFNlbGVjdGVkOiAiIyB0eXBlcyIsCiAgICAgIG9uT3BlbjogZnVuY3Rpb24oKSB7CiAgICAgICAgZGlzYWJsZVNlYXJjaEZpZWxkcygnI3R5cGUnKTsKICAgICAgICB2YXIgc2VsZWN0T3BlbiA9IHRydWU7CiAgICAgIH0sCiAgICAgIG9uQ2xvc2U6IGZ1bmN0aW9uKCkgewogICAgICAgIHJlZnJlc2hTZWFyY2hGb3JtKCk7CiAgICAgIH0KICAgIH0pOwoKICAgICQoJyNzcGVjaWZpYycpLm11bHRpcGxlU2VsZWN0KHsKICAgICAgcGxhY2Vob2xkZXI6ICJUeXBlcyIsCiAgICAgIHNlbGVjdEFsbFRleHQ6ICJUb3V0IHPDqWxlY3Rpb25uZXIiLAogICAgICBzZWxlY3RBbGxEZWxpbWl0ZXI6ICIiLAogICAgICBhbGxTZWxlY3RlZDogIlRvdXMgc8OpbGVjdGlvbm7DqXMiLAogICAgICBtaW5pbXVtQ291bnRTZWxlY3RlZDogMiwKICAgICAgY291bnRTZWxlY3RlZDogIiMgdHlwZXMiLAogICAgICBvbk9wZW46IGZ1bmN0aW9uKCkgewogICAgICAgIGRpc2FibGVTZWFyY2hGaWVsZHMoJyNzcGVjaWZpYycpOwogICAgICAgIHZhciBzZWxlY3RPcGVuID0gdHJ1ZTsKICAgICAgfSwKICAgICAgb25DbG9zZTogZnVuY3Rpb24oKSB7CiAgICAgICAgcmVmcmVzaFNlYXJjaEZvcm0oKTsKICAgICAgfQogICAgfSk7CgogICAgJCgnI2dsb2JhbHR5cGUnKS5tdWx0aXBsZVNlbGVjdCh7CiAgICAgIHBsYWNlaG9sZGVyOiAiVHlwZXMiLAogICAgICBzZWxlY3RBbGxUZXh0OiAiVG91dCBzw6lsZWN0aW9ubmVyIiwKICAgICAgc2VsZWN0QWxsRGVsaW1pdGVyOiAiIiwKICAgICAgYWxsU2VsZWN0ZWQ6ICJUb3VzIHPDqWxlY3Rpb25uw6lzIiwKICAgICAgbWluaW11bUNvdW50U2VsZWN0ZWQ6IDIsCiAgICAgIGNvdW50U2VsZWN0ZWQ6ICIjIHR5cGVzIiwKICAgICAgb25PcGVuOiBmdW5jdGlvbigpIHsKICAgICAgICBkaXNhYmxlU2VhcmNoRmllbGRzKCcjZ2xvYmFsdHlwZScpOwogICAgICAgIHZhciBzZWxlY3RPcGVuID0gdHJ1ZTsKICAgICAgfSwKICAgICAgb25DbG9zZTogZnVuY3Rpb24oKSB7CiAgICAgICAgcmVmcmVzaFNlYXJjaEZvcm0oKTsKICAgICAgfQogICAgfSk7CgogICAgJCgnI3Jvb21zJykubXVsdGlwbGVTZWxlY3QoewogICAgICBwbGFjZWhvbGRlcjogIlBpw6hjZXMiLAogICAgICBzZWxlY3RBbGxUZXh0OiAiVG91dCBzw6lsZWN0aW9ubmVyIiwKICAgICAgc2VsZWN0QWxsRGVsaW1pdGVyOiAiIiwKICAgICAgYWxsU2VsZWN0ZWQ6ICJUb3VzIHPDqWxlY3Rpb25uw6lzIiwKICAgICAgY291bnRTZWxlY3RlZDogZmFsc2UsCiAgICAgIG9uT3BlbjogZnVuY3Rpb24oKSB7CiAgICAgICAgZGlzYWJsZVNlYXJjaEZpZWxkcygnI3Jvb21zJyk7CiAgICAgICAgdmFyIHNlbGVjdE9wZW4gPSB0cnVlOwogICAgICB9LAogICAgICBvbkNsb3NlOiBmdW5jdGlvbigpIHsKICAgICAgICByZWZyZXNoU2VhcmNoRm9ybSgpOwogICAgICB9CiAgICB9KTsKCiAgICAkKCcjYmVkcm9vbXMnKS5tdWx0aXBsZVNlbGVjdCh7CiAgICAgIHBsYWNlaG9sZGVyOiAiQ2hhbWJyZXMiLAogICAgICBzZWxlY3RBbGxUZXh0OiAiVG91dCBzw6lsZWN0aW9ubmVyIiwKICAgICAgc2VsZWN0QWxsRGVsaW1pdGVyOiAiIiwKICAgICAgYWxsU2VsZWN0ZWQ6ICJUb3VzIHPDqWxlY3Rpb25uw6lzIiwKICAgICAgY291bnRTZWxlY3RlZDogZmFsc2UsCiAgICAgIG9uT3BlbjogZnVuY3Rpb24oKSB7CiAgICAgICAgZGlzYWJsZVNlYXJjaEZpZWxkcygnI2JlZHJvb21zJyk7CiAgICAgICAgdmFyIHNlbGVjdE9wZW4gPSB0cnVlOwogICAgICB9LAogICAgICBvbkNsb3NlOiBmdW5jdGlvbigpIHsKICAgICAgICByZWZyZXNoU2VhcmNoRm9ybSgpOwogICAgICB9CiAgICB9KTsKCiAgICAkKCcjYmVkcycpLm11bHRpcGxlU2VsZWN0KHsKICAgICAgcGxhY2Vob2xkZXI6ICJDb3VjaGFnZXMiLAogICAgICBzZWxlY3RBbGxUZXh0OiAiVG91dCBzw6lsZWN0aW9ubmVyIiwKICAgICAgc2VsZWN0QWxsRGVsaW1pdGVyOiAiIiwKICAgICAgYWxsU2VsZWN0ZWQ6ICJUb3VzIHPDqWxlY3Rpb25uw6lzIiwKICAgICAgY291bnRTZWxlY3RlZDogZmFsc2UsCiAgICAgIG9uT3BlbjogZnVuY3Rpb24oKSB7CiAgICAgICAgZGlzYWJsZVNlYXJjaEZpZWxkcygnI2JlZHMnKTsKICAgICAgICB2YXIgc2VsZWN0T3BlbiA9IHRydWU7CiAgICAgIH0sCiAgICAgIG9uQ2xvc2U6IGZ1bmN0aW9uKCkgewogICAgICAgIHJlZnJlc2hTZWFyY2hGb3JtKCk7CiAgICAgIH0KICAgIH0pOwoKICAgICQoJyNhbm51aXR5JykubXVsdGlwbGVTZWxlY3QoewogICAgICBwbGFjZWhvbGRlcjogIlR5cGUgZGUgdmlhZ2VyIiwKICAgICAgc2VsZWN0QWxsVGV4dDogIlRvdXQgc8OpbGVjdGlvbm5lciIsCiAgICAgIHNlbGVjdEFsbERlbGltaXRlcjogIiIsCiAgICAgIGFsbFNlbGVjdGVkOiAiVG91cyBzw6lsZWN0aW9ubsOpcyIsCiAgICAgIG1pbmltdW1Db3VudFNlbGVjdGVkOiAyLAogICAgICBjb3VudFNlbGVjdGVkOiAiIyB0eXBlcyBkZSB2aWFnZXIiLAogICAgICBvbk9wZW46IGZ1bmN0aW9uKCkgewogICAgICAgIGRpc2FibGVTZWFyY2hGaWVsZHMoJyNhbm51aXR5Jyk7CiAgICAgICAgdmFyIHNlbGVjdE9wZW4gPSB0cnVlOwogICAgICB9LAogICAgICBvbkNsb3NlOiBmdW5jdGlvbigpIHsKICAgICAgICByZWZyZXNoU2VhcmNoRm9ybSgpOwogICAgICB9CiAgICB9KTsKCiAgICAkKCcjcm9vbV90eXBlJykubXVsdGlwbGVTZWxlY3QoewogICAgICBwbGFjZWhvbGRlcjogIlBpw6hjZXMiLAogICAgICBzZWxlY3RBbGxUZXh0OiAiVG91dCBzw6lsZWN0aW9ubmVyIiwKICAgICAgc2VsZWN0QWxsRGVsaW1pdGVyOiAiIiwKICAgICAgYWxsU2VsZWN0ZWQ6ICJUb3VzIHPDqWxlY3Rpb25uw6lzIiwKICAgICAgY291bnRTZWxlY3RlZDogZmFsc2UsCiAgICAgIG9uT3BlbjogZnVuY3Rpb24oKSB7CiAgICAgICAgZGlzYWJsZVNlYXJjaEZpZWxkcygnI3Jvb21fdHlwZScpOwogICAgICAgIHZhciBzZWxlY3RPcGVuID0gdHJ1ZTsKICAgICAgfSwKICAgICAgb25DbG9zZTogZnVuY3Rpb24oKSB7CiAgICAgICAgcmVmcmVzaFNlYXJjaEZvcm0oKTsKICAgICAgfQogICAgfSk7CgogICAgJCgnI2Rpc3RyaWN0JykubXVsdGlwbGVTZWxlY3QoewogICAgICBwbGFjZWhvbGRlcjogIlF1YXJ0aWVycyIsCiAgICAgIHNlbGVjdEFsbFRleHQ6ICJUb3V0IHPDqWxlY3Rpb25uZXIiLAogICAgICBzZWxlY3RBbGxEZWxpbWl0ZXI6ICIiLAogICAgICBhbGxTZWxlY3RlZDogIlRvdXMgc8OpbGVjdGlvbm7DqXMiLAogICAgICBtaW5pbXVtQ291bnRTZWxlY3RlZDogMiwKICAgICAgY291bnRTZWxlY3RlZDogIiMgcXVhcnRpZXJzIiwKICAgICAgb25PcGVuOiBmdW5jdGlvbigpIHsKICAgICAgICBkaXNhYmxlU2VhcmNoRmllbGRzKCcjZGlzdHJpY3QnKTsKICAgICAgICB2YXIgc2VsZWN0T3BlbiA9IHRydWU7CiAgICAgIH0sCiAgICAgIG9uQ2xvc2U6IGZ1bmN0aW9uKCkgewogICAgICAgIHJlZnJlc2hTZWFyY2hGb3JtKCk7CiAgICAgIH0KICAgIH0pOwoKICAgICQoJyNhY3Rpdml0eScpLm11bHRpcGxlU2VsZWN0KHsKICAgICAgcGxhY2Vob2xkZXI6ICJBY3Rpdml0w6kiLAogICAgICBzZWxlY3RBbGxUZXh0OiAiVG91dCBzw6lsZWN0aW9ubmVyIiwKICAgICAgc2VsZWN0QWxsRGVsaW1pdGVyOiAiIiwKICAgICAgYWxsU2VsZWN0ZWQ6ICJUb3VzIHPDqWxlY3Rpb25uw6lzIiwKICAgICAgbWluaW11bUNvdW50U2VsZWN0ZWQ6IDIsCiAgICAgIGNvdW50U2VsZWN0ZWQ6ICIjIGFjdGl2aXTDqXMiLAogICAgICBvbk9wZW46IGZ1bmN0aW9uKCkgewogICAgICAgIGRpc2FibGVTZWFyY2hGaWVsZHMoJyNhY3Rpdml0eScpOwogICAgICAgIHZhciBzZWxlY3RPcGVuID0gdHJ1ZTsKICAgICAgfSwKICAgICAgb25DbG9zZTogZnVuY3Rpb24oKSB7CiAgICAgICAgcmVmcmVzaFNlYXJjaEZvcm0oKTsKICAgICAgfQogICAgfSk7CgogICAgaWYgKCQoJyNuZXdwcm9ncmFtX2RlbGl2ZXJ5X2F0X2Rpc3BsYXknKS5sZW5ndGgpCiAgICB7CiAgICAgICQoJyNuZXdwcm9ncmFtX2RlbGl2ZXJ5X2F0X2Rpc3BsYXknKS5kYXRlcGlja2VyKHsKICAgIAkgICAgbGFuZ3VhZ2U6ICdmci1GUicsCiAgICAgICAgc3RhcnREYXRlOiBuZXcgRGF0ZSgpLAogICAgICAgIGF1dG9IaWRlOiB0cnVlCiAgICAgIH0pOwoKICAgICAgaWYgKCQoJyNuZXdwcm9ncmFtX2RlbGl2ZXJ5X2F0JykudmFsKCkpCiAgICAgICAgJCgnI25ld3Byb2dyYW1fZGVsaXZlcnlfYXRfZGlzcGxheScpLmRhdGVwaWNrZXIoJ3NldERhdGUnLCBuZXcgRGF0ZSgkKCcjbmV3cHJvZ3JhbV9kZWxpdmVyeV9hdCcpLnZhbCgpKSk7CgogICAgICAkKCcjbmV3cHJvZ3JhbV9kZWxpdmVyeV9hdF9kaXNwbGF5Jykub24oJ3BpY2suZGF0ZXBpY2tlcicsIGZ1bmN0aW9uIChlKSB7CiAgICAgICAgJCgnI25ld3Byb2dyYW1fZGVsaXZlcnlfYXQnKS52YWwoZm9ybWF0RGF0ZShlLmRhdGUpKTsKICAgICAgCX0pOwogICAgfQoKICAgICQoJy5zZWFyY2ggaW5wdXRbdHlwZT0ic3VibWl0Il0nKS5jbGljayhmdW5jdGlvbigpIHsKICAgICAgaWYgKHNlbGVjdE9wZW4pIHsKICAgICAgICByZWZyZXNoU2VhcmNoRm9ybSh0cnVlKTsKICAgICAgICByZXR1cm4gZmFsc2U7CiAgICAgIH0KICAgIH0pOwoKICAgICQoJyNzZWN0b3InKS5tdWx0aXBsZVNlbGVjdCgnZW5hYmxlJyk7CiAgICAkKCcjdHlwZScpLm11bHRpcGxlU2VsZWN0KCdlbmFibGUnKTsKICAgICQoJyNzcGVjaWZpYycpLm11bHRpcGxlU2VsZWN0KCdlbmFibGUnKTsKICAgICQoJyNnbG9iYWx0eXBlJykubXVsdGlwbGVTZWxlY3QoJ2VuYWJsZScpOwogICAgJCgnI3Jvb21zJykubXVsdGlwbGVTZWxlY3QoJ2VuYWJsZScpOwogICAgJCgnI2JlZHJvb21zJykubXVsdGlwbGVTZWxlY3QoJ2VuYWJsZScpOwogICAgJCgnI2JlZHMnKS5tdWx0aXBsZVNlbGVjdCgnZW5hYmxlJyk7CiAgICAkKCcjYW5udWl0eScpLm11bHRpcGxlU2VsZWN0KCdlbmFibGUnKTsKICAgICQoJyNyb29tX3R5cGUnKS5tdWx0aXBsZVNlbGVjdCgnZW5hYmxlJyk7CiAgICAkKCcjZGlzdHJpY3QnKS5tdWx0aXBsZVNlbGVjdCgnZW5hYmxlJyk7CiAgICAkKCcjYWN0aXZpdHknKS5tdWx0aXBsZVNlbGVjdCgnZW5hYmxlJyk7CiAgfSk7CgogIC8qKiBVcGRhdGUgZmllbGRzIGluIHNlYXJjaCBmb3JtLgogICAqIEBwYXJhbSAoYm9vbCkgc3VibWl0IDogSWYgdHJ1ZSwgZm9ybSBpcyBzdWJtaXR0ZWQgYWZ0ZXIgdXBkYXRlLiAqLwogIGZ1bmN0aW9uIHJlZnJlc2hTZWFyY2hGb3JtKHN1Ym1pdCkKICB7CiAgICBpZiAodHlwZW9mIG5hdHVyZUlkICE9ICJ1bmRlZmluZWQiKQogICAgICAkKCcjbmF0dXJlJykudmFsKG5hdHVyZUlkKTsKCiAgICAkKCcuc2VhcmNoIC5sb2FkaW5nJykuc2hvdygpOwogICAgdmFyIHNlcmlhbGl6ZWQgPSAkKCIuc2VhcmNoIGZvcm0iKS5zZXJpYWxpemUoKTsKICAgIHZhciBob21lcGFnZSA9ICQoJy5zZWFyY2ggaW5wdXRbbmFtZT0iaG9tZXBhZ2UiXScpLnZhbCgpOwogICAgCiAgICB2YXIgaXNTZWFyY2hBZHZhbmNlZCA9ICQoJy5vdmVyZmxvd1NlYXJjaCcpLmhhc0NsYXNzKCdhZHZhbmNlZFNlYXJjaE9wZW4nKTsKICAgICQoJ2lucHV0LCBzZWxlY3QnKS5wcm9wKCdkaXNhYmxlZCcsIHRydWUpOwogICAgJCgiI3NlY3RvciwgI3R5cGUsICNzcGVjaWZpYywgI2dsb2JhbHR5cGUsICNyb29tcywgI2JlZHJvb21zLCAjYmVkcywgI2FubnVpdHksICNkaXN0cmljdCwgI2FjdGl2aXR5IikubXVsdGlwbGVTZWxlY3QoImRpc2FibGUiKTsKICAgIAogICAgJC5hamF4KHsKICAgICAgdXJsOiAiL2ZyL3NlYXJjaEZvcm0iLAogICAgICB0eXBlOiAiUE9TVCIsCiAgICAgIGRhdGFUeXBlOiAiaHRtbCIsCiAgICAgIGRhdGE6IHNlcmlhbGl6ZWQsCiAgICAgIHN1Y2Nlc3M6ZnVuY3Rpb24oZGF0YSwgdGV4dFN0YXR1cykgewogICAgICAgICQoIi5zZWFyY2giKS5odG1sKGRhdGEpOwogICAgICAgICQoJy5zZWFyY2ggLmxvYWRpbmcnKS5oaWRlKCk7CgogICAgICAgIGlmICgkKCcuc2VhcmNoJykuaGFzQ2xhc3MoJ292ZXJmbG93U2VhcmNoJykpCiAgICAgICAgICByZXNpemVPdmVyZmxvd1NlYXJjaChmYWxzZSk7CiAgICAgICAgCiAgICAgICAgaWYgKGlzU2VhcmNoQWR2YW5jZWQpIHsKICAgICAgICAgICQoJy5hZHZhbmNlZFNlYXJjaCcpLnRvZ2dsZSgpOwogICAgICAgICAgJCgnLm92ZXJmbG93U2VhcmNoJykuYWRkQ2xhc3MoJ2FkdmFuY2VkU2VhcmNoT3BlbicpOwogICAgICAgIH0KICAgICAgICAgIAogICAgICAgICAgCiAgICAgICAgaWYgKHN1Ym1pdCkKICAgICAgICAgICQoJy5zZWFyY2ggZm9ybScpLnN1Ym1pdCgpOwogICAgICB9CiAgICB9KTsKICB9CgogIGZ1bmN0aW9uIGRpc2FibGVTZWFyY2hGaWVsZHMoaXRlbSkKICB7CiAgICAvLyQoJ2lucHV0LCBzZWxlY3QnKS5ub3QoaXRlbSkucHJvcCgnZGlzYWJsZWQnLCB0cnVlKTsKICAgICQoIiNzZWN0b3IsICN0eXBlLCAjc3BlY2lmaWMsICNnbG9iYWx0eXBlLCAjcm9vbXMsICNiZWRyb29tcywgI2JlZHMsICNhbm51aXR5LCAjZGlzdHJpY3QsICNhY3Rpdml0eSIpLm5vdChpdGVtKS5tdWx0aXBsZVNlbGVjdCgiZGlzYWJsZSIpOwogIH0KCiAgZnVuY3Rpb24gY291bnRTZWxlY3RlZE9uU2VsZWN0MihzZWxlY3RvcikKICB7CiAgICB2YXIgdWxkaXYgPSAkKHNlbGVjdG9yKS5zaWJsaW5ncygnc3Bhbi5zZWxlY3QyJykuZmluZCgndWwnKTsKICAgIHZhciBjb3VudCA9IHVsZGl2LmZpbmQoJ2xpJykubGVuZ3RoIC0gMTsKCiAgICAkKHNlbGVjdG9yKS5zaWJsaW5ncygnc3Bhbi5zZWxlY3QyJykuZmluZCgnLnNlbGVjdDItc2VsZWN0aW9uX19jaG9pY2UnKS5yZW1vdmUoKTsKCiAgICBpZiAoY291bnQgPT0gMSkKICAgICAgdWxkaXYucHJlcGVuZCgnPGxpIGNsYXNzPSJzZWxlY3QyLXNlbGVjdGlvbl9fY2hvaWNlIj4nKyBjb3VudCArJyB2aWxsZTwvbGk+Jyk7CiAgICBlbHNlIGlmIChjb3VudCA+IDEpCiAgICAgIHVsZGl2LnByZXBlbmQoJzxsaSBjbGFzcz0ic2VsZWN0Mi1zZWxlY3Rpb25fX2Nob2ljZSI+JysgY291bnQgKycgdmlsbGVzPC9saT4nKTsKICB9Cgo8L3NjcmlwdD4KCgogICAgICA8L2Rpdj4KICAgIDwvYXNpZGU+CiAgPC9kaXY+CgoKCiAgPC9zZWN0aW9uPgogICAgPC9kaXY+CgogICAgPGZvb3Rlcj4KICAgICAgPGRpdiBjbGFzcz0ibGF5b3V0TGFyZ2UgY2xlYXJmaXgiPgogICAgICAgIAogICAgICAgIAogICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJuZXR3b3JrIj4KICAgICAgICAgICAgPGgzPk5vdHJlIHLDqXNlYXU8L2gzPgogICAgICAgICAgICA8dWwgY2xhc3M9InNvY2lhbExpbmtzIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpIGNsYXNzPSJpY29uIHNvY2lhbCI+PGEgY2xhc3M9ImZhY2Vib29rIiB0YXJnZXQ9Il9ibGFuayIgaHJlZj0iaHR0cHM6Ly93d3cuZmFjZWJvb2suY29tL0FnZW5jZS1kZXMtRW5mYW50cy1Sb3VnZXMtMjY2NzQ1OTcwMTE0NDEwIj5mYWNlYm9vazwvYT48L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaSBjbGFzcz0iaWNvbiBzb2NpYWwiPjxhIGNsYXNzPSJlbWFpbCIgaHJlZj0iL2ZyL2NvbnRhY3Rlei1ub3VzIj5FbWFpbDwvYT48L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgIDwvdWw+CiAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImFnZW5jeSI+CiAgICAgICAgICAgICAgICAgICAgICA8aDM+QWdlbmNlIGRlcyBFbmZhbnRzIFJvdWdlczwvaDM+CiAgICAgICAgICAgIDxwIGNsYXNzPSJhZGRyZXNzIHNtYWxsSWNvbiI+CiAgICAgICAgICAgICAgNDQgcnVlIGRlIEJyZXRhZ25lPGJyPiAgICAgICAgICAgICAgICAgICAgICAgICAgICA3NTAwMyBQYXJpcyAzw6htZTxicj4KICAgICAgICAgICAgPC9wPgogICAgICAgICAgICA8cD4KICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icGhvbmUgc21hbGxJY29uIj48YSBocmVmPSJ0ZWw6MDAzMzAxNTMwMTAwNDAiPiszMyAoMCkxIDUzIDAxIDAwIDQwPC9hPjwvc3Bhbj48YnIgLz4gICAgICAgICAgICAgICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgICAgICAgPC9kaXY+CgogICAgICAgIDxkaXYgY2xhc3M9InNlY3RvcnMiPgogICAgICAgICAgICAgICAgICAgICAgPGgzPk5hdmlnYXRpb248L2gzPgogICAgICAgICAgICA8dWw+PGxpIGNsYXNzPSJsdjEiPjxhIHRhcmdldD0iX3NlbGYiIGNsYXNzPSIiIGhyZWY9Ii9mci8iPkFjY3VlaWw8L2E+PC9saT48bGkgY2xhc3M9Imx2MSI+PGEgdGFyZ2V0PSJfc2VsZiIgY2xhc3M9IiIgaHJlZj0iL2ZyL3ZlbnRlIj5WZW50ZTwvYT48L2xpPjxsaSBjbGFzcz0ibHYxIj48YSB0YXJnZXQ9Il9zZWxmIiBjbGFzcz0iIiBocmVmPSIvZnIvbG9jYXRpb24iPkxvY2F0aW9uPC9hPjwvbGk+PGxpIGNsYXNzPSJsdjEiPjxhIHRhcmdldD0iX3NlbGYiIGNsYXNzPSIiIGhyZWY9Ii9mci9jb21tZXJjZXMiPkNvbW1lcmNlczwvYT48L2xpPjxsaSBjbGFzcz0ibHYxIj48YSB0YXJnZXQ9Il9zZWxmIiBjbGFzcz0iIiBocmVmPSIvZnIvZXN0aW1hdGlvbiI+RXN0aW1hdGlvbjwvYT48L2xpPjxsaSBjbGFzcz0ibHYxIj48YSB0YXJnZXQ9Il9zZWxmIiBjbGFzcz0iIiBocmVmPSIvZnIvYmxvZyI+QmxvZzwvYT48L2xpPjxsaSBjbGFzcz0ibHYxIj48YSB0YXJnZXQ9Il9zZWxmIiBjbGFzcz0iIiBocmVmPSIvZnIvbm90cmUtYWdlbmNlIj5Ob3RyZSBhZ2VuY2U8L2E+PC9saT48bGkgY2xhc3M9Imx2MSI+PGEgdGFyZ2V0PSJfc2VsZiIgY2xhc3M9IiIgaHJlZj0iL2ZyL2NvbnRhY3Rlei1ub3VzIj5Db250YWN0ZXotbm91czwvYT48L2xpPjwvdWw+ICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgIDwvZGl2PgogICAgICA8ZGl2IGNsYXNzPSJjcmVkaXRzIj4KICAgICAgICA8cCBjbGFzcz0ibGF5b3V0TGFyZ2UiPsKpIDIwMjAgQWdlbmNlIGRlcyBFbmZhbnRzIFJvdWdlcyAtIDxhIGhyZWY9Ii9mci9tZW50aW9ucy1sZWdhbGVzIj5NZW50aW9ucyBsw6lnYWxlcyAvIG5vcyBob25vcmFpcmVzPC9hPiAtIDxhIGhyZWY9Ii9mci9kb25uZWVzLXBlcnNvbm5lbGxlcyI+RG9ubsOpZXMgcGVyc29ubmVsbGVzPC9hPiA8c3BhbiBjbGFzcz0iYXBpbW8iPuKAkyBEZXNpZ24gYnkgPGEgdGFyZ2V0PSJfYmxhbmsiIGhyZWY9Imh0dHBzOi8vYXBpbW8ubmV0LyI+YXBpbW/ihKIgTG9naWNpZWwgaW1tb2JpbGllcjwvYT4gPC9zcGFuPgogICAgICAgICAgICAgICAgPC9wPgogICAgICA8L2Rpdj4KICAgIDwvZm9vdGVyPgogICAgCiAgICA8ZGl2IGNsYXNzPSJjb29raWVDaG9pY2UiPgogIDxwPkVuIGNsaXF1YW50IHN1ciAiSidhY2NlcHRlIiwgdm91cyBhdXRvcmlzZXogbCd1dGlsaXNhdGlvbiBkZSBjb29raWVzIGFmaW4gZGUgdm91cyBhc3N1cmVyIHVuZSBleHBlcmllbmNlIG9wdGltYWxlIHN1ciBjZSBzaXRlLjwvcD4KICA8cD48YSBocmVmPSIvZnIvbWVudGlvbnMtbGVnYWxlcyI+RW4gc2F2b2lyIHBsdXM8L2E+IDxhIGNsYXNzPSJjbG9zZSIgaHJlZj0iIyI+SidhY2NlcHRlPC9hPjwvcD4KPC9kaXY+Cgo8c3R5bGUgdHlwZT0idGV4dC9jc3MiPgogIC5jb29raWVDaG9pY2UgeyBwb3NpdGlvbjogZml4ZWQ7IGJvdHRvbTogMDsgbGVmdDogMDsgd2lkdGg6IDEwMCU7IHBhZGRpbmc6IDEwcHg7IGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwwLDAsMC45KTsgei1pbmRleDogOTk5OyB9CiAgLmNvb2tpZUNob2ljZSBwIHsgcGFkZGluZzogMDsgbWFyZ2luOiAwOyBjb2xvcjogI0ZGRjsgdGV4dC1hbGlnbjogY2VudGVyOyBtYXJnaW4tYm90dG9tOiAxMHB4OyB9CiAgLmNvb2tpZUNob2ljZSBwOmxhc3Qtb2YtdHlwZSB7IG1hcmdpbjogMDsgfQogIC5jb29raWVDaG9pY2UgYSB7IGRpc3BsYXk6IGlubGluZS1ibG9jazsgY29sb3I6ICNBQUE7IG1hcmdpbi1sZWZ0OiAyMHB4OyB9CiAgLmNvb2tpZUNob2ljZSBhOmZpcnN0LWNoaWxkIHsgbWFyZ2luOiAwOyB9Cjwvc3R5bGU+CjxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij4KICAkKCcuY29va2llQ2hvaWNlIC5jbG9zZScpLmNsaWNrKGZ1bmN0aW9uKGUpIHsKICAgIGUucHJldmVudERlZmF1bHQoKTsKICAgICQuYWpheCh7CiAgICAgIHVybDogIi9sZWdhbC9jb29raWVjb25zZW50IiwKICAgICAgdHlwZTogIlBPU1QiLAogICAgICBzdWNjZXNzOmZ1bmN0aW9uKGRhdGEsIHRleHRTdGF0dXMpIHsKICAgICAgICAkKCcuY29va2llQ2hvaWNlJykuc2xpZGVVcCgnZmFzdCcpOwogICAgICAgIGlmICh0eXBlb2YgZGF0YUxheWVyICE9ICd1bmRlZmluZWQnKQogICAgICAgICAgZGF0YUxheWVyLnB1c2goeydldmVudCcgOiAnY29va2llX2NvbnNlbnRfY2xpY2snfSkKICAgICAgfQogICAgfSk7CiAgfSk7Cjwvc2NyaXB0PgoKICAgIAogICAgCiAgICA8c2NyaXB0PihmdW5jdGlvbihkLCBzLCBpZCkgewogICAgICB2YXIganMsIGZqcyA9IGQuZ2V0RWxlbWVudHNCeVRhZ05hbWUocylbMF07CiAgICAgIGlmIChkLmdldEVsZW1lbnRCeUlkKGlkKSkgcmV0dXJuOwogICAgICBqcyA9IGQuY3JlYXRlRWxlbWVudChzKTsganMuaWQgPSBpZDsKICAgICAganMuc3JjID0gIi8vY29ubmVjdC5mYWNlYm9vay5uZXQvZnJfRlIvYWxsLmpzI3hmYm1sPTEiOwogICAgICBmanMucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUoanMsIGZqcyk7CiAgICB9KGRvY3VtZW50LCAnc2NyaXB0JywgJ2ZhY2Vib29rLWpzc2RrJykpOzwvc2NyaXB0PgogICAgPHNjcmlwdCB0eXBlPSJhcHBsaWNhdGlvbi9qYXZhc2NyaXB0IiBzcmM9Ii9qcy9jb21tb24vanF1ZXJ5LXVpL2pxdWVyeS11aS0xLjEwLjIuY3VzdG9tLm1pbi5qcyI+PC9zY3JpcHQ+CiAgICA8c2NyaXB0IHR5cGU9ImFwcGxpY2F0aW9uL2phdmFzY3JpcHQiIHNyYz0iaHR0cHM6Ly9kMXRnOTBid2p3M2V0aC5jbG91ZGZyb250Lm5ldC9qcy9tb2Rlcm5penIuY3VzdG9tLmpzIj48L3NjcmlwdD4KICAgIDxzY3JpcHQgdHlwZT0iYXBwbGljYXRpb24vamF2YXNjcmlwdCIgc3JjPSJodHRwczovL2QxdGc5MGJ3anczZXRoLmNsb3VkZnJvbnQubmV0L2pzL2ZhbmN5Ym94Mi9qcXVlcnkuZmFuY3lib3gucGFjay5qcyI+PC9zY3JpcHQ+CiAgICA8c2NyaXB0IHR5cGU9ImFwcGxpY2F0aW9uL2phdmFzY3JpcHQiIHNyYz0iaHR0cHM6Ly9kMXRnOTBid2p3M2V0aC5jbG91ZGZyb250Lm5ldC9qcy9vd2wtY2Fyb3VzZWwyL293bC5jYXJvdXNlbC5taW4uanMiPjwvc2NyaXB0PgogICAgPHNjcmlwdCB0eXBlPSJhcHBsaWNhdGlvbi9qYXZhc2NyaXB0IiBzcmM9Imh0dHBzOi8vZDF0ZzkwYndqdzNldGguY2xvdWRmcm9udC5uZXQvanMvbXVsdGlwbGUtc2VsZWN0L211bHRpcGxlLXNlbGVjdC5taW4uanMiPjwvc2NyaXB0PgogICAgPHNjcmlwdCB0eXBlPSJhcHBsaWNhdGlvbi9qYXZhc2NyaXB0IiBzcmM9Imh0dHBzOi8vZDF0ZzkwYndqdzNldGguY2xvdWRmcm9udC5uZXQvanMvZGF0ZXBpY2tlci9kYXRlcGlja2VyLm1pbi5qcyI+PC9zY3JpcHQ+CiAgICA8c2NyaXB0IHR5cGU9ImFwcGxpY2F0aW9uL2phdmFzY3JpcHQiIHNyYz0iaHR0cHM6Ly9kMXRnOTBid2p3M2V0aC5jbG91ZGZyb250Lm5ldC9qcy9kYXRlcGlja2VyL2RhdGVwaWNrZXIuZnItRlIuanMiPjwvc2NyaXB0PgogICAgPHNjcmlwdCBzcmM9Imh0dHBzOi8vY2RuanMuY2xvdWRmbGFyZS5jb20vYWpheC9saWJzL3NlbGVjdDIvNC4wLjMvanMvc2VsZWN0Mi5mdWxsLm1pbi5qcyI+PC9zY3JpcHQ+CiAgICA8c2NyaXB0IHNyYz0iL2pzL2NvbW1vbi9zZWxlY3QyLm9wdGdyb3VwU2VsZWN0L3NlbGVjdDIub3B0Z3JvdXBTZWxlY3QuanMiPjwvc2NyaXB0PgogICAgPHNjcmlwdCB0eXBlPSJhcHBsaWNhdGlvbi9qYXZhc2NyaXB0IiBzcmM9Imh0dHBzOi8vY2RuanMuY2xvdWRmbGFyZS5jb20vYWpheC9saWJzL21hZ25pZmljLXBvcHVwLmpzLzEuMS4wL2pxdWVyeS5tYWduaWZpYy1wb3B1cC5taW4uanMiPjwvc2NyaXB0PgogICAgPHNjcmlwdCB0eXBlPSJhcHBsaWNhdGlvbi9qYXZhc2NyaXB0IiBzcmM9Imh0dHBzOi8vY2RuanMuY2xvdWRmbGFyZS5jb20vYWpheC9saWJzL2pxdWVyeS50b3VjaHN3aXBlLzEuNi4xOS9qcXVlcnkudG91Y2hTd2lwZS5qcyI+PC9zY3JpcHQ+CiAgICAgICAgICAgIDxzY3JpcHQgdHlwZT0iYXBwbGljYXRpb24vamF2YXNjcmlwdCIgc3JjPSIvanMvZnJlZTEwL21haW4uanMiPjwvc2NyaXB0PgogIDwvYm9keT4KPC9odG1sPgo=
    http_version: null
  recorded_at: Fri, 03 Apr 2020 13:33:39 GMT
- request:
    method: get
    uri: https://www.agencedesenfantsrouges.com/fr/recherche/vente-appartement-2-pieces-paris-3eme-enfants-rouges-75003-3685737
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Fri, 03 Apr 2020 13:33:40 GMT
      Server:
      - Apache/2.4.25 (Debian)
      Upgrade:
      - h2,h2c
      Connection:
      - Upgrade
      Set-Cookie:
      - symfony=24kqldieflrsaovl3f5rpe8i17; path=/
      Vary:
      - Accept-Encoding
      Content-Length:
      - '12489'
      Content-Type:
      - text/html; charset=utf-8
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: null
  recorded_at: Fri, 03 Apr 2020 13:33:40 GMT
- request:
    method: get
    uri: https://www.agencedesenfantsrouges.com/fr/recherche/vente-appartement-3-pieces-paris-5eme-jardin-des-plantes-75005
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Fri, 03 Apr 2020 13:33:41 GMT
      Server:
      - Apache/2.4.25 (Debian)
      Upgrade:
      - h2,h2c
      Connection:
      - Upgrade
      Set-Cookie:
      - symfony=6jdn8kagavpviu5hkvms40o4b7; path=/
      Vary:
      - Accept-Encoding
      Content-Length:
      - '12406'
      Content-Type:
      - text/html; charset=utf-8
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: null
  recorded_at: Fri, 03 Apr 2020 13:33:41 GMT
- request:
    method: get
    uri: https://www.agencedesenfantsrouges.com/fr/recherche/vente-appartement-2-pieces-paris-4eme-75004-3621474
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Fri, 03 Apr 2020 13:33:41 GMT
      Server:
      - Apache/2.4.25 (Debian)
      Upgrade:
      - h2,h2c
      Connection:
      - Upgrade
      Set-Cookie:
      - symfony=kt1tlf0nhat5bf5gld0ati2el2; path=/
      Vary:
      - Accept-Encoding
      Content-Length:
      - '12621'
      Content-Type:
      - text/html; charset=utf-8
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: null
  recorded_at: Fri, 03 Apr 2020 13:33:41 GMT
- request:
    method: get
    uri: https://www.agencedesenfantsrouges.com/fr/recherche/vente-appartement-1-piece-paris-4eme-saint-gervais-75004-3677036
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Fri, 03 Apr 2020 13:33:42 GMT
      Server:
      - Apache/2.4.25 (Debian)
      Upgrade:
      - h2,h2c
      Connection:
      - Upgrade
      Set-Cookie:
      - symfony=di39pg2730jueefrd4iv8l1553; path=/
      Vary:
      - Accept-Encoding
      Content-Length:
      - '11966'
      Content-Type:
      - text/html; charset=utf-8
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: null
  recorded_at: Fri, 03 Apr 2020 13:33:42 GMT
- request:
    method: get
    uri: https://www.agencedesenfantsrouges.com/fr/recherche/vente-appartement-2-pieces-paris-12eme-75012-3640483
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Fri, 03 Apr 2020 13:33:43 GMT
      Server:
      - Apache/2.4.25 (Debian)
      Upgrade:
      - h2,h2c
      Connection:
      - Upgrade
      Set-Cookie:
      - symfony=dketrnd04nobsgnldsucf4slr5; path=/
      Vary:
      - Accept-Encoding
      Content-Length:
      - '13068'
      Content-Type:
      - text/html; charset=utf-8
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        PCFET0NUWVBFIGh0bWw+CjxodG1sIGxhbmc9ImZyIiA+CiAgPGhlYWQ+CiAgICA8bWV0YSBjaGFyc2V0PSJ1dGYtOCI+CgogICAgCiAgICAgICAgICAgICAgICAgIDxsaW5rIHJlbD0iYWx0ZXJuYXRlIiBocmVmPSJodHRwczovL3d3dy5hZ2VuY2VkZXNlbmZhbnRzcm91Z2VzLmNvbS9mci9yZWNoZXJjaGUvdmVudGUtYXBwYXJ0ZW1lbnQtMi1waWVjZXMtcGFyaXMtMTJlbWUtNzUwMTItMzY0MDQ4MyIgaHJlZmxhbmc9ImZyIiAvPgogICAgICAgICAgICAgIDxsaW5rIHJlbD0iYWx0ZXJuYXRlIiBocmVmPSJodHRwczovL3d3dy5hZ2VuY2VkZXNlbmZhbnRzcm91Z2VzLmNvbS9lbi9zZWFyY2gvc2FsZS1hcGFydG1lbnQtMi1yb29tcy1wYXJpcy0xMmVtZS1xdWluemUtdmluZ3RzLTc1MDEyIiBocmVmbGFuZz0iZW4iIC8+CiAgICAgICAgICAgICAgPGxpbmsgcmVsPSJhbHRlcm5hdGUiIGhyZWY9Imh0dHBzOi8vd3d3LmFnZW5jZWRlc2VuZmFudHNyb3VnZXMuY29tL2l0L3NlYXJjaC92ZW5kaXRhLWFwcGFydGFtZW50by0yLXJvb21zLXBhcmlzLTEyZW1lLXF1aW56ZS12aW5ndHMtNzUwMTIiIGhyZWZsYW5nPSJpdCIgLz4KICAgICAgICAgIAogICAgCiAgICA8bWV0YSBuYW1lPSJ2aWV3cG9ydCIgY29udGVudD0id2lkdGg9ZGV2aWNlLXdpZHRoLGluaXRpYWwtc2NhbGU9MSIgLz4KICAgIDxtZXRhIG5hbWU9ImRlc2NyaXB0aW9uIiBjb250ZW50PSJEYW5zIHVuIGltbWV1YmxlIGFuY2llbiBkYXRhbnQgZGVzIGFubsOpZXMgMTkzMCwgYXBwYXJ0ZW1lbnQgZCdhbmdsZSBhdSA1w6htZSDDqXRhZ2UgcGFyIGFzY2Vuc2V1ciwgZCd1bmUgc3VyZmFjZSBkZSA0N20yIGLDqW7DqWZpY2lhbnQgZCd1bmUgdnVlIGTDqWdhZ8OpZSAsIGNsYWlyLCBzYW5zIHZpcy3DoC12aXMucsOpbm92w6kgcGFyIGFyY2hpdGVjdGUsIGF1IGRlc2lnbiBjb250ZW1wb3JhaW4gIGNvbXBvc8OpIGQndW5lIHBpw6hjZSBlbuKApiIgLz4KPG1ldGEgbmFtZT0ia2V5d29yZHMiIGNvbnRlbnQ9IlZlbnRlLEFwcGFydGVtZW50LFBhcmlzIDEyw6htZSxGcmFuY2UsMiBwacOoY2VzLENpZWwiIC8+CjxtZXRhIG5hbWU9InJvYm90cyIgY29udGVudD0iaW5kZXgsIGZvbGxvdyIgLz4KICAgIDxtZXRhIHByb3BlcnR5PSJvZzp1cmwiIGNvbnRlbnQ9Imh0dHBzOi8vd3d3LmFnZW5jZWRlc2VuZmFudHNyb3VnZXMuY29tL2ZyL3JlY2hlcmNoZS92ZW50ZS1hcHBhcnRlbWVudC0yLXBpZWNlcy1wYXJpcy0xMmVtZS03NTAxMi0zNjQwNDgzIj4gICAgPG1ldGEgcHJvcGVydHk9Im9nOnRpdGxlIiBjb250ZW50PSJQYXJpcyBYSUkgQVBQQVJURU1FTlQgQVZFQyBWVUUgRVQgQVNDRU5TRVVSIj4gICAgPG1ldGEgcHJvcGVydHk9Im9nOmRlc2NyaXB0aW9uIiBjb250ZW50PSJEYW5zIHVuIGltbWV1YmxlIGFuY2llbiBkYXRhbnQgZGVzIGFubsOpZXMgMTkzMCwgYXBwYXJ0ZW1lbnQgZCdhbmdsZSBhdSA1w6htZSDDqXRhZ2UgcGFyIGFzY2Vuc2V1ciwgZCd1bmUgc3VyZmFjZSBkZSA0N20yIGLDqW7DqWZpY2lhbnQgZCd1bmUgdnVlIGTDqWdhZ8OpZSAsIGNsYWlyLCBzYW5zIHZpcy3DoC12aXMucsOpbm92w6kgcGFyIGFyY2hpdGVjdGUsIGF14oCmIj4gICAgPG1ldGEgcHJvcGVydHk9Im9nOmltYWdlIiBjb250ZW50PSJodHRwczovL2QxcWZqMjMxdWc3d2R1LmNsb3VkZnJvbnQubmV0L3BpY3R1cmVzL2VzdGF0ZS8zMTQ2LzMxNDUyNDIvODgwMDc3OTM4NWUyMWNmNzA0ZmFmMzcuNzczNDAyOTdfMDAyMzY1NWZmMV8xMDI0LmpwZyI+ICAgIDx0aXRsZT5QYXJpcyBYSUkgQVBQQVJURU1FTlQgQVZFQyBWVUUgRVQgQVNDRU5TRVVSPC90aXRsZT4KICAgIDxtZXRhIG5hbWU9InR3aXR0ZXI6Y2FyZCIgY29udGVudD0ic3VtbWFyeSI+PC9tZXRhPgogICAgPGxpbmsgcmVsPSJkbnMtcHJlZmV0Y2giIGhyZWY9Imh0dHBzOi8vZDF0ZzkwYndqdzNldGguY2xvdWRmcm9udC5uZXQiPgogICAgPHNjcmlwdCBzcmM9Imh0dHBzOi8vYWpheC5nb29nbGVhcGlzLmNvbS9hamF4L2xpYnMvanF1ZXJ5LzEuOS4xL2pxdWVyeS5taW4uanMiPjwvc2NyaXB0PgogICAgPHNjcmlwdD53aW5kb3cualF1ZXJ5IHx8IGRvY3VtZW50LndyaXRlKCc8c2NyaXB0IHNyYz0iL2pzL2NvbW1vbi9qcXVlcnkubWluLmpzIj5ceDNDL3NjcmlwdD4nKTwvc2NyaXB0PgogICAgPGxpbmsgcmVsPSJzdHlsZXNoZWV0IiB0eXBlPSJ0ZXh0L2NzcyIgbWVkaWE9InNjcmVlbiIgaHJlZj0iL2Nzcy9jb21tb24vdXRpbHMuY3NzIj48c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCIgc3JjPSIvanMvY29tbW9uL2pxdWVyeS53YWl0Zm9yaW1hZ2VzLm1pbi5qcyI+PC9zY3JpcHQ+PHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiIHNyYz0iL2pzL2NvbW1vbi91dGlscy5qcyI+PC9zY3JpcHQ+ICAgIDxsaW5rIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0iaHR0cHM6Ly9kMXRnOTBid2p3M2V0aC5jbG91ZGZyb250Lm5ldC9qcy9vd2wtY2Fyb3VzZWwyL2Fzc2V0cy9vd2wuY2Fyb3VzZWwubWluLmNzcyI+CiAgICA8bGluayByZWw9InN0eWxlc2hlZXQiIGhyZWY9Imh0dHBzOi8vZDF0ZzkwYndqdzNldGguY2xvdWRmcm9udC5uZXQvanMvb3dsLWNhcm91c2VsMi9hc3NldHMvb3dsLnRoZW1lLmRlZmF1bHQuY3NzIj4KICAgIDxsaW5rIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0iaHR0cHM6Ly9kMXRnOTBid2p3M2V0aC5jbG91ZGZyb250Lm5ldC9qcy9vd2wtY2Fyb3VzZWwyL2Fzc2V0cy9hbmltYXRlLm1pbi5jc3MiPgogICAgPGxpbmsgcmVsPSJzdHlsZXNoZWV0IiBocmVmPSJodHRwczovL2QxdGc5MGJ3anczZXRoLmNsb3VkZnJvbnQubmV0L2pzL211bHRpcGxlLXNlbGVjdC9tdWx0aXBsZS1zZWxlY3QuY3NzIj4KICAgIDxsaW5rIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0iaHR0cHM6Ly9kMXRnOTBid2p3M2V0aC5jbG91ZGZyb250Lm5ldC9qcy9kYXRlcGlja2VyL2RhdGVwaWNrZXIubWluLmNzcyI+CiAgICA8bGluayByZWw9InN0eWxlc2hlZXQiIHR5cGU9InRleHQvY3NzIiBtZWRpYT0ic2NyZWVuIiBocmVmPSJodHRwczovL2QxdGc5MGJ3anczZXRoLmNsb3VkZnJvbnQubmV0L2pzL2ZhbmN5Ym94Mi9qcXVlcnkuZmFuY3lib3gubWluLmNzcyI+CiAgICA8bGluayByZWw9InN0eWxlc2hlZXQiIHR5cGU9InRleHQvY3NzIiBtZWRpYT0ic2NyZWVuIiBocmVmPSJodHRwczovL2NkbmpzLmNsb3VkZmxhcmUuY29tL2FqYXgvbGlicy9tYWduaWZpYy1wb3B1cC5qcy8xLjEuMC9tYWduaWZpYy1wb3B1cC5taW4uY3NzIj4KICAgIDxsaW5rIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0iaHR0cHM6Ly9jZG5qcy5jbG91ZGZsYXJlLmNvbS9hamF4L2xpYnMvc2VsZWN0Mi80LjAuMy9jc3Mvc2VsZWN0Mi5taW4uY3NzIiAvPgogICAgICAgICAgICA8bGluayByZWw9InN0eWxlc2hlZXQiIHR5cGU9InRleHQvY3NzIiBtZWRpYT0ic2NyZWVuLHByaW50IiBocmVmPSIvY3NzL2ZyZWUxMC9tYWluLmNzcyI+CiAgICA8bGluayByZWw9InN0eWxlc2hlZXQiIHR5cGU9InRleHQvY3NzIiBtZWRpYT0ic2NyZWVuLHByaW50IiBocmVmPSIvbWlzYy9jc3MiIC8+CiAgICAgICAgPGxpbmsgcmVsPSJzdHlsZXNoZWV0IiB0eXBlPSJ0ZXh0L2NzcyIgbWVkaWE9InNjcmVlbixwcmludCIgaHJlZj0iL2Nzcy0xNzY4Ij4KICAgIDxsaW5rIHJlbD0ic3R5bGVzaGVldCIgdHlwZT0idGV4dC9jc3MiIG1lZGlhPSJzY3JlZW4scHJpbnQiIGhyZWY9Ii9jc3MvZnJlZTEwL21vYmlsZS5jc3MiPgoKICAgIAogICAgCiAgICA8c2NyaXB0IHNyYz0naHR0cHM6Ly93d3cuZ29vZ2xlLmNvbS9yZWNhcHRjaGEvYXBpLmpzP3JlbmRlcj1leHBsaWNpdCZvbmxvYWQ9bG9hZENhcHRjaGEnIGFzeW5jIGRlZmVyPjwvc2NyaXB0PgoKICAgIAogICAgICAgICAgPCEtLSBHb29nbGUgVGFnIE1hbmFnZXIgLS0+CiAgICAgIDxzY3JpcHQ+KGZ1bmN0aW9uKHcsZCxzLGwsaSl7d1tsXT13W2xdfHxbXTt3W2xdLnB1c2goeydndG0uc3RhcnQnOgogICAgICBuZXcgRGF0ZSgpLmdldFRpbWUoKSxldmVudDonZ3RtLmpzJ30pO3ZhciBmPWQuZ2V0RWxlbWVudHNCeVRhZ05hbWUocylbMF0sCiAgICAgIGo9ZC5jcmVhdGVFbGVtZW50KHMpLGRsPWwhPSdkYXRhTGF5ZXInPycmbD0nK2w6Jyc7ai5hc3luYz10cnVlO2ouc3JjPQogICAgICAnaHR0cHM6Ly93d3cuZ29vZ2xldGFnbWFuYWdlci5jb20vZ3RtLmpzP2lkPScraStkbDtmLnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKGosZik7CiAgICAgIH0pKHdpbmRvdyxkb2N1bWVudCwnc2NyaXB0JywnZGF0YUxheWVyJywnR1RNLVBQVEJGS1InKTs8L3NjcmlwdD4KICAgICAgPCEtLSBFbmQgR29vZ2xlIFRhZyBNYW5hZ2VyIC0tPgogICAgCiAgICAKICAgICAgPC9oZWFkPgoKICA8Ym9keSBjbGFzcz0ibGFuZy1mciBlc3RhdGUtc2hvdyBuYXR1cmUtMSI+CiAgICA8ZGl2IGlkPSJmYi1yb290Ij48L2Rpdj4KICAgICAgICAgIDwhLS0gR29vZ2xlIFRhZyBNYW5hZ2VyIChub3NjcmlwdCkgLS0+CiAgICAgIDxub3NjcmlwdD48aWZyYW1lIHNyYz0iaHR0cHM6Ly93d3cuZ29vZ2xldGFnbWFuYWdlci5jb20vbnMuaHRtbD9pZD1HVE0tUFBUQkZLUiIgaGVpZ2h0PSIwIiB3aWR0aD0iMCIgc3R5bGU9ImRpc3BsYXk6bm9uZTt2aXNpYmlsaXR5OmhpZGRlbiI+PC9pZnJhbWU+PC9ub3NjcmlwdD4KICAgICAgPCEtLSBFbmQgR29vZ2xlIFRhZyBNYW5hZ2VyIChub3NjcmlwdCkgLS0+CiAgICAKICAgIAogICAgPGhlYWRlcj4KICAgICAgPGRpdiBjbGFzcz0icmliYm9uIj4KICAgICAgICA8ZGl2IGNsYXNzPSJsYXlvdXRMYXJnZSBjbGVhcmZpeCI+CiAgICAgICAgICAgICAgICAgICAgICA8dWwgY2xhc3M9ImN1bHR1cmUiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGkgY2xhc3M9InNlbGVjdGVkIj48YSB0aXRsZT0iRnJhbsOnYWlzIiBocmVmPSJodHRwczovL3d3dy5hZ2VuY2VkZXNlbmZhbnRzcm91Z2VzLmNvbS9mci9yZWNoZXJjaGUvdmVudGUtYXBwYXJ0ZW1lbnQtMi1waWVjZXMtcGFyaXMtMTJlbWUtNzUwMTItMzY0MDQ4MyI+RnJhbsOnYWlzPC9hPjwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaSA+PGEgdGl0bGU9IkVuZ2xpc2giIGhyZWY9Ii9lbi9zZWFyY2gvc2FsZS1hcGFydG1lbnQtMi1yb29tcy1wYXJpcy0xMmVtZS1xdWluemUtdmluZ3RzLTc1MDEyIj5FbmdsaXNoPC9hPjwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaSA+PGEgdGl0bGU9Ikl0YWxpYW5vIiBocmVmPSIvaXQvc2VhcmNoL3ZlbmRpdGEtYXBwYXJ0YW1lbnRvLTItcm9vbXMtcGFyaXMtMTJlbWUtcXVpbnplLXZpbmd0cy03NTAxMiI+SXRhbGlhbm88L2E+PC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICA8L3VsPgogICAgICAgICAgCiAgICAgICAgICAKICAgICAgICAgIDx1bCBjbGFzcz0ic29jaWFsTGlua3MiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGkgY2xhc3M9Imljb24gc29jaWFsIj48YSBjbGFzcz0iZmFjZWJvb2siIHRhcmdldD0iX2JsYW5rIiBocmVmPSJodHRwczovL3d3dy5mYWNlYm9vay5jb20vQWdlbmNlLWRlcy1FbmZhbnRzLVJvdWdlcy0yNjY3NDU5NzAxMTQ0MTAiPmZhY2Vib29rPC9hPjwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpIGNsYXNzPSJpY29uIHNvY2lhbCI+PGEgY2xhc3M9ImVtYWlsIiBocmVmPSIvZnIvY29udGFjdGV6LW5vdXMiPkVtYWlsPC9hPjwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdWw+CiAgICAgICAgICA8dWwgY2xhc3M9InRvcE1lbnUiPjxsaT48YSB0YXJnZXQ9Il9zZWxmIiBocmVmPSIvZnIvc2VsZWN0aW9uLyI+TWEgc8OpbGVjdGlvbjwvYT48L2xpPjwvdWw+ICAgICAgICA8L2Rpdj4KICAgICAgPC9kaXY+CiAgICAgIDxkaXYgY2xhc3M9ImxheW91dExhcmdlIGNsZWFyZml4Ij4KICAgICAgICA8ZGl2IGNsYXNzPSJsb2dvIj4KICAgICAgICAgIDxhIHRpdGxlPSJBZ2VuY2UgZGVzIEVuZmFudHMgUm91Z2VzIiBocmVmPSIvZnIvIj48aW1nIGFsdD0iQWdlbmNlIGRlcyBFbmZhbnRzIFJvdWdlcyIgc3JjPSIvdXBsb2Fkcy93ZWJzaXRlLzE3NjgvMDQ4ZTA1ZTY2YzBhNDgxZTRjNDFiYmMwN2I0ZTNiY2Q4NjYxZDY2Yi5qcGciIC8+PC9hPiAgICAgICAgPC9kaXY+CiAgICAgICAgPG5hdj4KICAgICAgICAgIDx1bCBjbGFzcz0ibWVudSI+PGxpIGNsYXNzPSJidG4iPjxhIGhyZWY9IiMiPjwvYT48L2xpPjxsaT48YSB0YXJnZXQ9Il9zZWxmIiBjbGFzcz0iIiBocmVmPSIvZnIvIj5BY2N1ZWlsPC9hPjwvbGk+PGxpPjxhIHRhcmdldD0iX3NlbGYiIGNsYXNzPSIiIGhyZWY9Ii9mci92ZW50ZSI+VmVudGU8L2E+PC9saT48bGk+PGEgdGFyZ2V0PSJfc2VsZiIgY2xhc3M9IiIgaHJlZj0iL2ZyL2xvY2F0aW9uIj5Mb2NhdGlvbjwvYT48L2xpPjxsaT48YSB0YXJnZXQ9Il9zZWxmIiBjbGFzcz0iIiBocmVmPSIvZnIvY29tbWVyY2VzIj5Db21tZXJjZXM8L2E+PC9saT48bGk+PGEgdGFyZ2V0PSJfc2VsZiIgY2xhc3M9IiIgaHJlZj0iL2ZyL2VzdGltYXRpb24iPkVzdGltYXRpb248L2E+PC9saT48bGk+PGEgdGFyZ2V0PSJfc2VsZiIgY2xhc3M9IiIgaHJlZj0iL2ZyL2Jsb2ciPkJsb2c8L2E+PC9saT48bGk+PGEgdGFyZ2V0PSJfc2VsZiIgY2xhc3M9IiIgaHJlZj0iL2ZyL25vdHJlLWFnZW5jZSI+Tm90cmUgYWdlbmNlPC9hPjwvbGk+PGxpPjxhIHRhcmdldD0iX3NlbGYiIGNsYXNzPSIiIGhyZWY9Ii9mci9jb250YWN0ZXotbm91cyI+Q29udGFjdGV6LW5vdXM8L2E+PC9saT48L3VsPiAgICAgICAgPC9uYXY+CiAgICAgIDwvZGl2PgogICAgICAgICAgPC9oZWFkZXI+CgogICAgPGRpdiBjbGFzcz0id3JhcHBlciI+CiAgICAgIAo8c2VjdGlvbiBjbGFzcz0ic2hvd1BpY3R1cmVzIiBkYXRhLWxheW91dEZpeGVkPSIwIj4KICAgICAgPGEgY2xhc3M9ImJ1dHRvbiIgaHJlZj0iamF2YXNjcmlwdDpoaXN0b3J5LmdvKC0xKTsiPlJldG91cjwvYT4KICAgIDxkaXYgY2xhc3M9InNob3ctY2Fyb3VzZWwgb3dsLWNhcm91c2VsIG93bC10aGVtZSI+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iaXRlbSByZXNpemVQaWN0dXJlIiBkYXRhLXByZXNlcnZlcG9ydHJhaXQ9InRydWUiPgogICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9kMXFmajIzMXVnN3dkdS5jbG91ZGZyb250Lm5ldC9waWN0dXJlcy9lc3RhdGUvMzE0Ni8zMTQ1MjQyLzg4MDA3NzkzODVlMjFjZjcwNGZhZjM3Ljc3MzQwMjk3XzAwMjM2NTVmZjFfMTkyMC5qcGciIHJlbD0ic2xpZGVzaG93IiBjbGFzcz0ic2xpZGVzaG93IiB0aXRsZT0iUGFyaXMgWElJIEFQUEFSVEVNRU5UIEFWRUMgVlVFIEVUIEFTQ0VOU0VVUiI+CiAgICAgICAgICAgIDxpbWcgYWx0PSJQYXJpcyBYSUkgQVBQQVJURU1FTlQgQVZFQyBWVUUgRVQgQVNDRU5TRVVSIiBzcmM9Imh0dHBzOi8vZDFxZmoyMzF1Zzd3ZHUuY2xvdWRmcm9udC5uZXQvcGljdHVyZXMvZXN0YXRlLzMxNDYvMzE0NTI0Mi84ODAwNzc5Mzg1ZTIxY2Y3MDRmYWYzNy43NzM0MDI5N18wMDIzNjU1ZmYxXzE5MjAuanBnIiAvPiAgICAgICAgICA8L2E+CiAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iaXRlbSByZXNpemVQaWN0dXJlIiBkYXRhLXByZXNlcnZlcG9ydHJhaXQ9InRydWUiPgogICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9kMXFmajIzMXVnN3dkdS5jbG91ZGZyb250Lm5ldC9waWN0dXJlcy9lc3RhdGUvMzE0Ni8zMTQ1MjQyLzE4NTM5NjQzNDk1ZTIxZDA1Y2I1YjhkNi44NTE1ODEzN18zZjc4NDQ2MjY5XzE5MjAuanBnIiByZWw9InNsaWRlc2hvdyIgY2xhc3M9InNsaWRlc2hvdyIgdGl0bGU9IlBhcmlzIFhJSSBBUFBBUlRFTUVOVCBBVkVDIFZVRSBFVCBBU0NFTlNFVVIiPgogICAgICAgICAgICA8aW1nIGFsdD0iUGFyaXMgWElJIEFQUEFSVEVNRU5UIEFWRUMgVlVFIEVUIEFTQ0VOU0VVUiIgc3JjPSJodHRwczovL2QxcWZqMjMxdWc3d2R1LmNsb3VkZnJvbnQubmV0L3BpY3R1cmVzL2VzdGF0ZS8zMTQ2LzMxNDUyNDIvMTg1Mzk2NDM0OTVlMjFkMDVjYjViOGQ2Ljg1MTU4MTM3XzNmNzg0NDYyNjlfMTkyMC5qcGciIC8+ICAgICAgICAgIDwvYT4KICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJpdGVtIHJlc2l6ZVBpY3R1cmUiIGRhdGEtcHJlc2VydmVwb3J0cmFpdD0idHJ1ZSI+CiAgICAgICAgICA8YSBocmVmPSJodHRwczovL2QxcWZqMjMxdWc3d2R1LmNsb3VkZnJvbnQubmV0L3BpY3R1cmVzL2VzdGF0ZS8zMTQ2LzMxNDUyNDIvMzQ5NDYwODM2NWU0OTdjNDhkMzcxZTIuMjg4OTE0MzJfZGJlYjU0YTg4YV81MTguanBnIiByZWw9InNsaWRlc2hvdyIgY2xhc3M9InNsaWRlc2hvdyIgdGl0bGU9IlBsYW4iPgogICAgICAgICAgICA8aW1nIGFsdD0iUGxhbiIgc3JjPSJodHRwczovL2QxcWZqMjMxdWc3d2R1LmNsb3VkZnJvbnQubmV0L3BpY3R1cmVzL2VzdGF0ZS8zMTQ2LzMxNDUyNDIvMzQ5NDYwODM2NWU0OTdjNDhkMzcxZTIuMjg4OTE0MzJfZGJlYjU0YTg4YV81MTguanBnIiAvPiAgICAgICAgICA8L2E+CiAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iaXRlbSByZXNpemVQaWN0dXJlIiBkYXRhLXByZXNlcnZlcG9ydHJhaXQ9InRydWUiPgogICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9kMXFmajIzMXVnN3dkdS5jbG91ZGZyb250Lm5ldC9waWN0dXJlcy9lc3RhdGUvMzE0Ni8zMTQ1MjQyLzE1MjM0NjgwNTk1ZTIxY2ZjZjg2YmY2NS4yNzgwMTYzN18zMzQyYzk3YWZiXzE5MjAuanBnIiByZWw9InNsaWRlc2hvdyIgY2xhc3M9InNsaWRlc2hvdyIgdGl0bGU9IlBhcmlzIFhJSSBBUFBBUlRFTUVOVCBBVkVDIFZVRSBFVCBBU0NFTlNFVVIiPgogICAgICAgICAgICA8aW1nIGFsdD0iUGFyaXMgWElJIEFQUEFSVEVNRU5UIEFWRUMgVlVFIEVUIEFTQ0VOU0VVUiIgc3JjPSJodHRwczovL2QxcWZqMjMxdWc3d2R1LmNsb3VkZnJvbnQubmV0L3BpY3R1cmVzL2VzdGF0ZS8zMTQ2LzMxNDUyNDIvMTUyMzQ2ODA1OTVlMjFjZmNmODZiZjY1LjI3ODAxNjM3XzMzNDJjOTdhZmJfMTkyMC5qcGciIC8+ICAgICAgICAgIDwvYT4KICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJpdGVtIHJlc2l6ZVBpY3R1cmUiIGRhdGEtcHJlc2VydmVwb3J0cmFpdD0idHJ1ZSI+CiAgICAgICAgICA8YSBocmVmPSJodHRwczovL2QxcWZqMjMxdWc3d2R1LmNsb3VkZnJvbnQubmV0L3BpY3R1cmVzL2VzdGF0ZS8zMTQ2LzMxNDUyNDIvNzY4MDE1MjgyNWUyMWQwYjlkNjdhODkuOTY4NzkyMTFfZDhhNjExN2Y5Y18xOTIwLmpwZyIgcmVsPSJzbGlkZXNob3ciIGNsYXNzPSJzbGlkZXNob3ciIHRpdGxlPSJQYXJpcyBYSUkgQVBQQVJURU1FTlQgQVZFQyBWVUUgRVQgQVNDRU5TRVVSIj4KICAgICAgICAgICAgPGltZyBhbHQ9IlBhcmlzIFhJSSBBUFBBUlRFTUVOVCBBVkVDIFZVRSBFVCBBU0NFTlNFVVIiIHNyYz0iaHR0cHM6Ly9kMXFmajIzMXVnN3dkdS5jbG91ZGZyb250Lm5ldC9waWN0dXJlcy9lc3RhdGUvMzE0Ni8zMTQ1MjQyLzc2ODAxNTI4MjVlMjFkMGI5ZDY3YTg5Ljk2ODc5MjExX2Q4YTYxMTdmOWNfMTkyMC5qcGciIC8+ICAgICAgICAgIDwvYT4KICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJpdGVtIHJlc2l6ZVBpY3R1cmUiIGRhdGEtcHJlc2VydmVwb3J0cmFpdD0idHJ1ZSI+CiAgICAgICAgICA8YSBocmVmPSJodHRwczovL2QxcWZqMjMxdWc3d2R1LmNsb3VkZnJvbnQubmV0L3BpY3R1cmVzL2VzdGF0ZS8zMTQ2LzMxNDUyNDIvMTg4NTM4MjY0MzVlMjFjZmExMzk3MmE5LjQzMjc2Nzg4X2ZkZDQwMTUxNzJfMTkyMC5qcGciIHJlbD0ic2xpZGVzaG93IiBjbGFzcz0ic2xpZGVzaG93IiB0aXRsZT0iUGFyaXMgWElJIEFQUEFSVEVNRU5UIEFWRUMgVlVFIEVUIEFTQ0VOU0VVUiI+CiAgICAgICAgICAgIDxpbWcgYWx0PSJQYXJpcyBYSUkgQVBQQVJURU1FTlQgQVZFQyBWVUUgRVQgQVNDRU5TRVVSIiBzcmM9Imh0dHBzOi8vZDFxZmoyMzF1Zzd3ZHUuY2xvdWRmcm9udC5uZXQvcGljdHVyZXMvZXN0YXRlLzMxNDYvMzE0NTI0Mi8xODg1MzgyNjQzNWUyMWNmYTEzOTcyYTkuNDMyNzY3ODhfZmRkNDAxNTE3Ml8xOTIwLmpwZyIgLz4gICAgICAgICAgPC9hPgogICAgICAgIDwvZGl2PgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9Iml0ZW0gcmVzaXplUGljdHVyZSIgZGF0YS1wcmVzZXJ2ZXBvcnRyYWl0PSJ0cnVlIj4KICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZDFxZmoyMzF1Zzd3ZHUuY2xvdWRmcm9udC5uZXQvcGljdHVyZXMvZXN0YXRlLzMxNDYvMzE0NTI0Mi8yMjQ4OTAwODk1ZTIxY2ZiODIzOTc1NC44MDUwODcxNV84NDdkNjk1NjFlXzE5MjAuanBnIiByZWw9InNsaWRlc2hvdyIgY2xhc3M9InNsaWRlc2hvdyIgdGl0bGU9IlBhcmlzIFhJSSBBUFBBUlRFTUVOVCBBVkVDIFZVRSBFVCBBU0NFTlNFVVIiPgogICAgICAgICAgICA8aW1nIGFsdD0iUGFyaXMgWElJIEFQUEFSVEVNRU5UIEFWRUMgVlVFIEVUIEFTQ0VOU0VVUiIgc3JjPSJodHRwczovL2QxcWZqMjMxdWc3d2R1LmNsb3VkZnJvbnQubmV0L3BpY3R1cmVzL2VzdGF0ZS8zMTQ2LzMxNDUyNDIvMjI0ODkwMDg5NWUyMWNmYjgyMzk3NTQuODA1MDg3MTVfODQ3ZDY5NTYxZV8xOTIwLmpwZyIgLz4gICAgICAgICAgPC9hPgogICAgICAgIDwvZGl2PgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9Iml0ZW0gcmVzaXplUGljdHVyZSIgZGF0YS1wcmVzZXJ2ZXBvcnRyYWl0PSJ0cnVlIj4KICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZDFxZmoyMzF1Zzd3ZHUuY2xvdWRmcm9udC5uZXQvcGljdHVyZXMvZXN0YXRlLzMxNDYvMzE0NTI0Mi8xNTEwMzkzNDA1ZTIxY2ZlOTJmZDQ3Mi40MjQ1Mzc5NV82NTgxYmNkZDI1XzE5MjAuanBnIiByZWw9InNsaWRlc2hvdyIgY2xhc3M9InNsaWRlc2hvdyIgdGl0bGU9IlBhcmlzIFhJSSBBUFBBUlRFTUVOVCBBVkVDIFZVRSBFVCBBU0NFTlNFVVIiPgogICAgICAgICAgICA8aW1nIGFsdD0iUGFyaXMgWElJIEFQUEFSVEVNRU5UIEFWRUMgVlVFIEVUIEFTQ0VOU0VVUiIgc3JjPSJodHRwczovL2QxcWZqMjMxdWc3d2R1LmNsb3VkZnJvbnQubmV0L3BpY3R1cmVzL2VzdGF0ZS8zMTQ2LzMxNDUyNDIvMTUxMDM5MzQwNWUyMWNmZTkyZmQ0NzIuNDI0NTM3OTVfNjU4MWJjZGQyNV8xOTIwLmpwZyIgLz4gICAgICAgICAgPC9hPgogICAgICAgIDwvZGl2PgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9Iml0ZW0gcmVzaXplUGljdHVyZSIgZGF0YS1wcmVzZXJ2ZXBvcnRyYWl0PSJ0cnVlIj4KICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZDFxZmoyMzF1Zzd3ZHUuY2xvdWRmcm9udC5uZXQvcGljdHVyZXMvZXN0YXRlLzMxNDYvMzE0NTI0Mi8zMjQwMjU4NTE1ZTIxZDAxODAyODFmMS44NDU3OTQwMl85NWZkODdkYjUyXzE5MjAuanBnIiByZWw9InNsaWRlc2hvdyIgY2xhc3M9InNsaWRlc2hvdyIgdGl0bGU9IlBhcmlzIFhJSSBBUFBBUlRFTUVOVCBBVkVDIFZVRSBFVCBBU0NFTlNFVVIiPgogICAgICAgICAgICA8aW1nIGFsdD0iUGFyaXMgWElJIEFQUEFSVEVNRU5UIEFWRUMgVlVFIEVUIEFTQ0VOU0VVUiIgc3JjPSJodHRwczovL2QxcWZqMjMxdWc3d2R1LmNsb3VkZnJvbnQubmV0L3BpY3R1cmVzL2VzdGF0ZS8zMTQ2LzMxNDUyNDIvMzI0MDI1ODUxNWUyMWQwMTgwMjgxZjEuODQ1Nzk0MDJfOTVmZDg3ZGI1Ml8xOTIwLmpwZyIgLz4gICAgICAgICAgPC9hPgogICAgICAgIDwvZGl2PgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9Iml0ZW0gcmVzaXplUGljdHVyZSIgZGF0YS1wcmVzZXJ2ZXBvcnRyYWl0PSJ0cnVlIj4KICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZDFxZmoyMzF1Zzd3ZHUuY2xvdWRmcm9udC5uZXQvcGljdHVyZXMvZXN0YXRlLzMxNDYvMzE0NTI0Mi85MjE2MDMxMDE1ZTIxZDAyZjA1YTg2Ni4zNTEyNjg1M18xYzhiNmY3MWJhXzE5MjAuanBnIiByZWw9InNsaWRlc2hvdyIgY2xhc3M9InNsaWRlc2hvdyIgdGl0bGU9IlBsYW4iPgogICAgICAgICAgICA8aW1nIGFsdD0iUGxhbiIgc3JjPSJodHRwczovL2QxcWZqMjMxdWc3d2R1LmNsb3VkZnJvbnQubmV0L3BpY3R1cmVzL2VzdGF0ZS8zMTQ2LzMxNDUyNDIvOTIxNjAzMTAxNWUyMWQwMmYwNWE4NjYuMzUxMjY4NTNfMWM4YjZmNzFiYV8xOTIwLmpwZyIgLz4gICAgICAgICAgPC9hPgogICAgICAgIDwvZGl2PgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9Iml0ZW0gcmVzaXplUGljdHVyZSIgZGF0YS1wcmVzZXJ2ZXBvcnRyYWl0PSJ0cnVlIj4KICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZDFxZmoyMzF1Zzd3ZHUuY2xvdWRmcm9udC5uZXQvcGljdHVyZXMvZXN0YXRlLzMxNDYvMzE0NTI0Mi8xMzc0MzYyOTkzNWUyMWQwNDU5MTBiMTAuODQ3MzUwNTVfOWIwM2U1MDUxYV8xOTIwLmpwZyIgcmVsPSJzbGlkZXNob3ciIGNsYXNzPSJzbGlkZXNob3ciIHRpdGxlPSJQYXJpcyBYSUkgQVBQQVJURU1FTlQgQVZFQyBWVUUgRVQgQVNDRU5TRVVSIj4KICAgICAgICAgICAgPGltZyBhbHQ9IlBhcmlzIFhJSSBBUFBBUlRFTUVOVCBBVkVDIFZVRSBFVCBBU0NFTlNFVVIiIHNyYz0iaHR0cHM6Ly9kMXFmajIzMXVnN3dkdS5jbG91ZGZyb250Lm5ldC9waWN0dXJlcy9lc3RhdGUvMzE0Ni8zMTQ1MjQyLzEzNzQzNjI5OTM1ZTIxZDA0NTkxMGIxMC44NDczNTA1NV85YjAzZTUwNTFhXzE5MjAuanBnIiAvPiAgICAgICAgICA8L2E+CiAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iaXRlbSByZXNpemVQaWN0dXJlIiBkYXRhLXByZXNlcnZlcG9ydHJhaXQ9InRydWUiPgogICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9kMXFmajIzMXVnN3dkdS5jbG91ZGZyb250Lm5ldC9waWN0dXJlcy9lc3RhdGUvMzE0Ni8zMTQ1MjQyLzIxNDYyNTQ1MjY1ZTIxZDA4YzQ4MjJkNC4xNjA3MTY1NF9mNWYwZjczOTYzXzE5MjAuanBnIiByZWw9InNsaWRlc2hvdyIgY2xhc3M9InNsaWRlc2hvdyIgdGl0bGU9IlBhcmlzIFhJSSBBUFBBUlRFTUVOVCBBVkVDIFZVRSBFVCBBU0NFTlNFVVIiPgogICAgICAgICAgICA8aW1nIGFsdD0iUGFyaXMgWElJIEFQUEFSVEVNRU5UIEFWRUMgVlVFIEVUIEFTQ0VOU0VVUiIgc3JjPSJodHRwczovL2QxcWZqMjMxdWc3d2R1LmNsb3VkZnJvbnQubmV0L3BpY3R1cmVzL2VzdGF0ZS8zMTQ2LzMxNDUyNDIvMjE0NjI1NDUyNjVlMjFkMDhjNDgyMmQ0LjE2MDcxNjU0X2Y1ZjBmNzM5NjNfMTkyMC5qcGciIC8+ICAgICAgICAgIDwvYT4KICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJpdGVtIHJlc2l6ZVBpY3R1cmUiIGRhdGEtcHJlc2VydmVwb3J0cmFpdD0idHJ1ZSI+CiAgICAgICAgICA8YSBocmVmPSJodHRwczovL2QxcWZqMjMxdWc3d2R1LmNsb3VkZnJvbnQubmV0L3BpY3R1cmVzL2VzdGF0ZS8zMTQ2LzMxNDUyNDIvMTU2OTc2NDc4MTVlMjFkMGEyZjFhNDE1LjE2NDczNjQyXzRiZmYxODYyZTRfMTkyMC5qcGciIHJlbD0ic2xpZGVzaG93IiBjbGFzcz0ic2xpZGVzaG93IiB0aXRsZT0iUGFyaXMgWElJIEFQUEFSVEVNRU5UIEFWRUMgVlVFIEVUIEFTQ0VOU0VVUiI+CiAgICAgICAgICAgIDxpbWcgYWx0PSJQYXJpcyBYSUkgQVBQQVJURU1FTlQgQVZFQyBWVUUgRVQgQVNDRU5TRVVSIiBzcmM9Imh0dHBzOi8vZDFxZmoyMzF1Zzd3ZHUuY2xvdWRmcm9udC5uZXQvcGljdHVyZXMvZXN0YXRlLzMxNDYvMzE0NTI0Mi8xNTY5NzY0NzgxNWUyMWQwYTJmMWE0MTUuMTY0NzM2NDJfNGJmZjE4NjJlNF8xOTIwLmpwZyIgLz4gICAgICAgICAgPC9hPgogICAgICAgIDwvZGl2PgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9Iml0ZW0gcmVzaXplUGljdHVyZSIgZGF0YS1wcmVzZXJ2ZXBvcnRyYWl0PSJ0cnVlIj4KICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZDFxZmoyMzF1Zzd3ZHUuY2xvdWRmcm9udC5uZXQvcGljdHVyZXMvZXN0YXRlLzMxNDYvMzE0NTI0Mi8zMDE0NDM2ODE1ZTIxZDBmZDcwYzU0MS42MTUxOTU1M19kNWUxY2ZjZjJmXzE5MjAuanBnIiByZWw9InNsaWRlc2hvdyIgY2xhc3M9InNsaWRlc2hvdyIgdGl0bGU9IlBhcmlzIFhJSSBBUFBBUlRFTUVOVCBBVkVDIFZVRSBFVCBBU0NFTlNFVVIiPgogICAgICAgICAgICA8aW1nIGFsdD0iUGFyaXMgWElJIEFQUEFSVEVNRU5UIEFWRUMgVlVFIEVUIEFTQ0VOU0VVUiIgc3JjPSJodHRwczovL2QxcWZqMjMxdWc3d2R1LmNsb3VkZnJvbnQubmV0L3BpY3R1cmVzL2VzdGF0ZS8zMTQ2LzMxNDUyNDIvMzAxNDQzNjgxNWUyMWQwZmQ3MGM1NDEuNjE1MTk1NTNfZDVlMWNmY2YyZl8xOTIwLmpwZyIgLz4gICAgICAgICAgPC9hPgogICAgICAgIDwvZGl2PgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9Iml0ZW0gcmVzaXplUGljdHVyZSIgZGF0YS1wcmVzZXJ2ZXBvcnRyYWl0PSJ0cnVlIj4KICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZDFxZmoyMzF1Zzd3ZHUuY2xvdWRmcm9udC5uZXQvcGljdHVyZXMvZXN0YXRlLzMxNDYvMzE0NTI0Mi8xMTE1Njg4ODk1ZTIxZDExNGNmNzJhMy4yNTkxNTY3MF80MWM3YTI1NDQ2XzE5MjAuanBnIiByZWw9InNsaWRlc2hvdyIgY2xhc3M9InNsaWRlc2hvdyIgdGl0bGU9IlBhcmlzIFhJSSBBUFBBUlRFTUVOVCBBVkVDIFZVRSBFVCBBU0NFTlNFVVIiPgogICAgICAgICAgICA8aW1nIGFsdD0iUGFyaXMgWElJIEFQUEFSVEVNRU5UIEFWRUMgVlVFIEVUIEFTQ0VOU0VVUiIgc3JjPSJodHRwczovL2QxcWZqMjMxdWc3d2R1LmNsb3VkZnJvbnQubmV0L3BpY3R1cmVzL2VzdGF0ZS8zMTQ2LzMxNDUyNDIvMTExNTY4ODg5NWUyMWQxMTRjZjcyYTMuMjU5MTU2NzBfNDFjN2EyNTQ0Nl8xOTIwLmpwZyIgLz4gICAgICAgICAgPC9hPgogICAgICAgIDwvZGl2PgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9Iml0ZW0gcmVzaXplUGljdHVyZSIgZGF0YS1wcmVzZXJ2ZXBvcnRyYWl0PSJ0cnVlIj4KICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZDFxZmoyMzF1Zzd3ZHUuY2xvdWRmcm9udC5uZXQvcGljdHVyZXMvZXN0YXRlLzMxNDYvMzE0NTI0Mi83MjQ1MDk0MzA1ZTIxZDE0M2E5YTE5MC44ODQ2OTM3N19jYmZmYTI5MDM3XzE5MjAuanBnIiByZWw9InNsaWRlc2hvdyIgY2xhc3M9InNsaWRlc2hvdyIgdGl0bGU9IlBhcmlzIFhJSSBBUFBBUlRFTUVOVCBBVkVDIFZVRSBFVCBBU0NFTlNFVVIiPgogICAgICAgICAgICA8aW1nIGFsdD0iUGFyaXMgWElJIEFQUEFSVEVNRU5UIEFWRUMgVlVFIEVUIEFTQ0VOU0VVUiIgc3JjPSJodHRwczovL2QxcWZqMjMxdWc3d2R1LmNsb3VkZnJvbnQubmV0L3BpY3R1cmVzL2VzdGF0ZS8zMTQ2LzMxNDUyNDIvNzI0NTA5NDMwNWUyMWQxNDNhOWExOTAuODg0NjkzNzdfY2JmZmEyOTAzN18xOTIwLmpwZyIgLz4gICAgICAgICAgPC9hPgogICAgICAgIDwvZGl2PgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9Iml0ZW0gcmVzaXplUGljdHVyZSIgZGF0YS1wcmVzZXJ2ZXBvcnRyYWl0PSJ0cnVlIj4KICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZDFxZmoyMzF1Zzd3ZHUuY2xvdWRmcm9udC5uZXQvcGljdHVyZXMvZXN0YXRlLzMxNDYvMzE0NTI0Mi8xNzkwMjYxNTEzNWUyMWQxNWQzYzYyNDEuODI0NTIwODFfMDMyODMzYzIwMl8xOTIwLmpwZyIgcmVsPSJzbGlkZXNob3ciIGNsYXNzPSJzbGlkZXNob3ciIHRpdGxlPSJQYXJpcyBYSUkgQVBQQVJURU1FTlQgQVZFQyBWVUUgRVQgQVNDRU5TRVVSIj4KICAgICAgICAgICAgPGltZyBhbHQ9IlBhcmlzIFhJSSBBUFBBUlRFTUVOVCBBVkVDIFZVRSBFVCBBU0NFTlNFVVIiIHNyYz0iaHR0cHM6Ly9kMXFmajIzMXVnN3dkdS5jbG91ZGZyb250Lm5ldC9waWN0dXJlcy9lc3RhdGUvMzE0Ni8zMTQ1MjQyLzE3OTAyNjE1MTM1ZTIxZDE1ZDNjNjI0MS44MjQ1MjA4MV8wMzI4MzNjMjAyXzE5MjAuanBnIiAvPiAgICAgICAgICA8L2E+CiAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iaXRlbSByZXNpemVQaWN0dXJlIiBkYXRhLXByZXNlcnZlcG9ydHJhaXQ9InRydWUiPgogICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9kMXFmajIzMXVnN3dkdS5jbG91ZGZyb250Lm5ldC9waWN0dXJlcy9lc3RhdGUvMzE0Ni8zMTQ1MjQyLzE3NDgwNjEwODk1ZTIxZDE3MzI4NmQ5My4wNDk5MTU1MV83ODAwNzYzMWY2XzE5MjAuanBnIiByZWw9InNsaWRlc2hvdyIgY2xhc3M9InNsaWRlc2hvdyIgdGl0bGU9IlBhcmlzIFhJSSBBUFBBUlRFTUVOVCBBVkVDIFZVRSBFVCBBU0NFTlNFVVIiPgogICAgICAgICAgICA8aW1nIGFsdD0iUGFyaXMgWElJIEFQUEFSVEVNRU5UIEFWRUMgVlVFIEVUIEFTQ0VOU0VVUiIgc3JjPSJodHRwczovL2QxcWZqMjMxdWc3d2R1LmNsb3VkZnJvbnQubmV0L3BpY3R1cmVzL2VzdGF0ZS8zMTQ2LzMxNDUyNDIvMTc0ODA2MTA4OTVlMjFkMTczMjg2ZDkzLjA0OTkxNTUxXzc4MDA3NjMxZjZfMTkyMC5qcGciIC8+ICAgICAgICAgIDwvYT4KICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJpdGVtIHJlc2l6ZVBpY3R1cmUiIGRhdGEtcHJlc2VydmVwb3J0cmFpdD0idHJ1ZSI+CiAgICAgICAgICA8YSBocmVmPSJodHRwczovL2QxcWZqMjMxdWc3d2R1LmNsb3VkZnJvbnQubmV0L3BpY3R1cmVzL2VzdGF0ZS8zMTQ2LzMxNDUyNDIvMTgwNDU3ODg0OTVlMjFkMTllNDYxZDM0LjMxNDQyMTU4X2FmOTUwYWEwZWNfMTkyMC5qcGciIHJlbD0ic2xpZGVzaG93IiBjbGFzcz0ic2xpZGVzaG93IiB0aXRsZT0iUGFyaXMgWElJIEFQUEFSVEVNRU5UIEFWRUMgVlVFIEVUIEFTQ0VOU0VVUiI+CiAgICAgICAgICAgIDxpbWcgYWx0PSJQYXJpcyBYSUkgQVBQQVJURU1FTlQgQVZFQyBWVUUgRVQgQVNDRU5TRVVSIiBzcmM9Imh0dHBzOi8vZDFxZmoyMzF1Zzd3ZHUuY2xvdWRmcm9udC5uZXQvcGljdHVyZXMvZXN0YXRlLzMxNDYvMzE0NTI0Mi8xODA0NTc4ODQ5NWUyMWQxOWU0NjFkMzQuMzE0NDIxNThfYWY5NTBhYTBlY18xOTIwLmpwZyIgLz4gICAgICAgICAgPC9hPgogICAgICAgIDwvZGl2PgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9Iml0ZW0gcmVzaXplUGljdHVyZSIgZGF0YS1wcmVzZXJ2ZXBvcnRyYWl0PSJ0cnVlIj4KICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZDFxZmoyMzF1Zzd3ZHUuY2xvdWRmcm9udC5uZXQvcGljdHVyZXMvZXN0YXRlLzMxNDYvMzE0NTI0Mi80NTkyMDU5MTY1ZTIxZDFiNmFkMWIwOC4xMjU0MzM2OV82ODcyZDdiYWVhXzE5MjAuanBnIiByZWw9InNsaWRlc2hvdyIgY2xhc3M9InNsaWRlc2hvdyIgdGl0bGU9IlBhcmlzIFhJSSBBUFBBUlRFTUVOVCBBVkVDIFZVRSBFVCBBU0NFTlNFVVIiPgogICAgICAgICAgICA8aW1nIGFsdD0iUGFyaXMgWElJIEFQUEFSVEVNRU5UIEFWRUMgVlVFIEVUIEFTQ0VOU0VVUiIgc3JjPSJodHRwczovL2QxcWZqMjMxdWc3d2R1LmNsb3VkZnJvbnQubmV0L3BpY3R1cmVzL2VzdGF0ZS8zMTQ2LzMxNDUyNDIvNDU5MjA1OTE2NWUyMWQxYjZhZDFiMDguMTI1NDMzNjlfNjg3MmQ3YmFlYV8xOTIwLmpwZyIgLz4gICAgICAgICAgPC9hPgogICAgICAgIDwvZGl2PgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9Iml0ZW0gcmVzaXplUGljdHVyZSIgZGF0YS1wcmVzZXJ2ZXBvcnRyYWl0PSJ0cnVlIj4KICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZDFxZmoyMzF1Zzd3ZHUuY2xvdWRmcm9udC5uZXQvcGljdHVyZXMvZXN0YXRlLzMxNDYvMzE0NTI0Mi8xOTI2OTMzODc5NWUyMWQxY2U3OGE1MDYuNzk3MjM0NjNfNGJhY2RlODczOF8xOTIwLmpwZyIgcmVsPSJzbGlkZXNob3ciIGNsYXNzPSJzbGlkZXNob3ciIHRpdGxlPSJQYXJpcyBYSUkgQVBQQVJURU1FTlQgQVZFQyBWVUUgRVQgQVNDRU5TRVVSIj4KICAgICAgICAgICAgPGltZyBhbHQ9IlBhcmlzIFhJSSBBUFBBUlRFTUVOVCBBVkVDIFZVRSBFVCBBU0NFTlNFVVIiIHNyYz0iaHR0cHM6Ly9kMXFmajIzMXVnN3dkdS5jbG91ZGZyb250Lm5ldC9waWN0dXJlcy9lc3RhdGUvMzE0Ni8zMTQ1MjQyLzE5MjY5MzM4Nzk1ZTIxZDFjZTc4YTUwNi43OTcyMzQ2M180YmFjZGU4NzM4XzE5MjAuanBnIiAvPiAgICAgICAgICA8L2E+CiAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iaXRlbSByZXNpemVQaWN0dXJlIiBkYXRhLXByZXNlcnZlcG9ydHJhaXQ9InRydWUiPgogICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9kMXFmajIzMXVnN3dkdS5jbG91ZGZyb250Lm5ldC9waWN0dXJlcy9lc3RhdGUvMzE0Ni8zMTQ1MjQyLzExMjcwNzU5MzA1ZTIxZDFlNWI4ZThjMi41MTI0MDYyM18xMTE5YmRlZjdlXzE5MjAuanBnIiByZWw9InNsaWRlc2hvdyIgY2xhc3M9InNsaWRlc2hvdyIgdGl0bGU9IlBhcmlzIFhJSSBBUFBBUlRFTUVOVCBBVkVDIFZVRSBFVCBBU0NFTlNFVVIiPgogICAgICAgICAgICA8aW1nIGFsdD0iUGFyaXMgWElJIEFQUEFSVEVNRU5UIEFWRUMgVlVFIEVUIEFTQ0VOU0VVUiIgc3JjPSJodHRwczovL2QxcWZqMjMxdWc3d2R1LmNsb3VkZnJvbnQubmV0L3BpY3R1cmVzL2VzdGF0ZS8zMTQ2LzMxNDUyNDIvMTEyNzA3NTkzMDVlMjFkMWU1YjhlOGMyLjUxMjQwNjIzXzExMTliZGVmN2VfMTkyMC5qcGciIC8+ICAgICAgICAgIDwvYT4KICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJpdGVtIHJlc2l6ZVBpY3R1cmUiIGRhdGEtcHJlc2VydmVwb3J0cmFpdD0idHJ1ZSI+CiAgICAgICAgICA8YSBocmVmPSJodHRwczovL2QxcWZqMjMxdWc3d2R1LmNsb3VkZnJvbnQubmV0L3BpY3R1cmVzL2VzdGF0ZS8zMTQ2LzMxNDUyNDIvMTk1NjY5MTAwNDVlMjFkMWZjMjY1ZWMxLjg5MTA1NzA2XzgxZGE1YjhiOTBfMTkyMC5qcGciIHJlbD0ic2xpZGVzaG93IiBjbGFzcz0ic2xpZGVzaG93IiB0aXRsZT0iUGFyaXMgWElJIEFQUEFSVEVNRU5UIEFWRUMgVlVFIEVUIEFTQ0VOU0VVUiI+CiAgICAgICAgICAgIDxpbWcgYWx0PSJQYXJpcyBYSUkgQVBQQVJURU1FTlQgQVZFQyBWVUUgRVQgQVNDRU5TRVVSIiBzcmM9Imh0dHBzOi8vZDFxZmoyMzF1Zzd3ZHUuY2xvdWRmcm9udC5uZXQvcGljdHVyZXMvZXN0YXRlLzMxNDYvMzE0NTI0Mi8xOTU2NjkxMDA0NWUyMWQxZmMyNjVlYzEuODkxMDU3MDZfODFkYTViOGI5MF8xOTIwLmpwZyIgLz4gICAgICAgICAgPC9hPgogICAgICAgIDwvZGl2PgogICAgICAgICAgPC9kaXY+CgogICAgPGFydGljbGU+CiAgICAgICAgICA8ZGl2PgogICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InNlbGVjdGlvbkxpbmsgIiBocmVmPSIvZnIvc2VsZWN0aW9uLz9lc3RhdGU9MzE0NTI0MiIgdGl0bGU9IkFqb3V0ZXIgw6AgbGEgc8OpbGVjdGlvbiI+QWpvdXRlciDDoCBsYSBzw6lsZWN0aW9uPC9zcGFuPgogICAgICAgIDxoMj4KICAgICAgICAgICAgICAgICAgICAgIEFwcGFydGVtZW50ICAgICAgICAgICAgICAgICAgICA8YnIgLz5QYXJpcyAxMsOobWUgICAgICAgIDwvaDI+CiAgICAgICAgPHVsPgogICAgICAgICAgICAgICAgICAgIDxsaT5SZWYuIDEwNjY8L2xpPgogICAgICAgICAgICAgICAgICAgICAgPGxpPjEgY2hhbWJyZTwvbGk+PGxpPjEgc2FsbGUgZGUgYmFpbnM8L2xpPjxsaT40NyBtwrI8L2xpPiAgICAgICAgICAKICAgICAgICAgIDxsaT42NjkgMDAwIOKCrDwvbGk+CiAgICAgICAgICAgICAgICAgIDwvdWw+CiAgICAgIDwvZGl2PgogICAgPC9hcnRpY2xlPgogIDwvc2VjdGlvbj4KCgoKPHNlY3Rpb24gY2xhc3M9Im1haW4gc2hvdyI+CiAgPGRpdiBjbGFzcz0ibGF5b3V0TGFyZ2UgY2xlYXJmaXgiPgogICAgPGFydGljbGUgY2xhc3M9ImNvbHVtbkxlZnQiPgogICAgICA8ZGl2IGNsYXNzPSJ0aXRsZXMiPgogICAgICAgIDxoMT5QYXJpcyBYSUkgQVBQQVJURU1FTlQgQVZFQyBWVUUgRVQgQVNDRU5TRVVSPC9oMT4KICAgICAgICA8dWwgY2xhc3M9InF1aWNrTGlua3MiPgogICAgICAgICAgPGxpPjxhIGNsYXNzPSJzZWxlY3RlZCIgaHJlZj0iI2Rlc2NyaXB0aW9uIj5EZXNjcmlwdGlvbjwvYT48L2xpPgogICAgICAgICAgPGxpPjxhIGhyZWY9IiNkZXRhaWxzTGlzdCI+RMOpdGFpbHM8L2E+PC9saT4KICAgICAgICAgICAgICAgICAgICAgIDxsaT48YSBocmVmPSIjc2hvd01hcCI+UGxhbjwvYT48L2xpPgogICAgICAgICAgICAgICAgICAgIDxsaT48YSBocmVmPSIjY29udGFjdExpbmUiPkNvbnRhY3Q8L2E+PC9saT4KICAgICAgICA8L3VsPgogICAgICA8L2Rpdj4KCiAgICAgIDxwIGNsYXNzPSJjb21tZW50IiBpZD0iZGVzY3JpcHRpb24iPkRhbnMgdW4gaW1tZXVibGUgYW5jaWVuIGRhdGFudCBkZXMgYW5uw6llcyAxOTMwLCBhcHBhcnRlbWVudCBkJ2FuZ2xlIGF1IDXDqG1lIMOpdGFnZSBwYXIgYXNjZW5zZXVyLCBkJ3VuZSBzdXJmYWNlIGRlIDQ3bTIgYsOpbsOpZmljaWFudCBkJ3VuZSB2dWUgZMOpZ2Fnw6llICwgY2xhaXIsIHNhbnMgdmlzLcOgLXZpcy5yw6lub3bDqSBwYXIgYXJjaGl0ZWN0ZSwgYXUgZGVzaWduIGNvbnRlbXBvcmFpbiAgY29tcG9zw6kgZCd1bmUgcGnDqGNlIGVuIHJvdG9uZGUsIGFjdHVlbGxlbWVudCBjaGFtYnJlIGQndW5lIGdyYW5kZSBzYWxsZSBkJ2VhdSwgZHJlc3NpbmcgZXQgZCd1bmUgcGnDqGNlIMOgIHZpdnJlIGF2ZWMgY3Vpc2luZSBVUyBTdXJmYWNlIGRlIDQ3TTIgPGJyIC8+DQpQcm9jaGUgTcOpdHJvIEdhcmUgZGUgTHlvbiBSRVIgQSAtIG3DqXRybyAxIGV0IDE0LjxiciAvPg0KQ2F2ZSBwcm9wcmUuIEdhcmRpZW4uPC9wPgogICAgICA8cCBjbGFzcz0icHJpbnQiPjxhIGNsYXNzPSJidXR0b24iIHRhcmdldD0iX2JsYW5rIiB0aXRsZT0iSW1wcmltZXIgY2V0dGUgYW5ub25jZSIgaHJlZj0iL2ZyL3JlY2hlcmNoZS92ZW50ZS1hcHBhcnRlbWVudC0yLXBpZWNlcy1wYXJpcy0xMmVtZS03NTAxMi0zNjQwNDgzL2ltcHJpbWVyIj5JbXByaW1lciBjZXR0ZSBhbm5vbmNlPC9hPjwvcD4KCiAgICAgIAogICAgICAKICAgICAgCiAgICAgIDxkaXYgY2xhc3M9ImRldGFpbHNMaXN0IGNsZWFyZml4IiBpZD0iZGV0YWlsc0xpc3QiPgogICAgICAgIAogICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJzdW1tYXJ5IGRldGFpbHMiPgogICAgICAgICAgICA8aDI+UsOpc3Vtw6k8L2gyPgogICAgICAgICAgICA8dWw+CiAgICAgICAgICAgICAgPGxpIGNsYXNzPSJhbHQiPlBpw6hjZXMgPHNwYW4+MiBwacOoY2VzPC9zcGFuPjwvbGk+PGxpID5TdXJmYWNlIDxzcGFuPjQ3IG3Csjwvc3Bhbj48L2xpPjxsaSBjbGFzcz0iYWx0Ij5DaGF1ZmZhZ2UgPHNwYW4+UmFkaWF0ZXVyLCBHYXosIENvbGxlY3RpZjwvc3Bhbj48L2xpPjxsaSA+RXRhdCA8c3Bhbj5FeGNlbGxlbnQgw6l0YXQ8L3NwYW4+PC9saT48bGkgY2xhc3M9ImFsdCI+RXRhZ2UgPHNwYW4+NcOobWUgLyA3IMOpdGFnZXM8L3NwYW4+PC9saT48bGkgY2xhc3M9ImFsdCI+RXhwb3NpdGlvbiA8c3Bhbj5PdWVzdDwvc3Bhbj48L2xpPjxsaSA+VnVlIDxzcGFuPkNpZWw8L3NwYW4+PC9saT48bGkgY2xhc3M9ImFsdCI+Q29uc3RydWl0IGVuIDxzcGFuPjE5Mjg8L3NwYW4+PC9saT48bGkgPkRpc3BvbmliaWxpdMOpIDxzcGFuPkxpYnJlPC9zcGFuPjwvbGk+ICAgICAgICAgICAgPC91bD4KICAgICAgICAgIDwvZGl2PgogICAgICAgIAogICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJzZXJ2aWNlcyBkZXRhaWxzIj4KICAgICAgICAgICAgPGgyPlByZXN0YXRpb25zPC9oMj4KICAgICAgICAgICAgPHVsPgogICAgICAgICAgICAgIDxsaSBjbGFzcz0iYWx0Ij5NZXVibMOpPC9saT48bGkgPkFzY2Vuc2V1cjwvbGk+PGxpIGNsYXNzPSJhbHQiPkdhcmRpZW48L2xpPjxsaSBjbGFzcz0iYWx0Ij5Db25jaWVyZ2U8L2xpPjxsaSA+SW50ZXJwaG9uZTwvbGk+ICAgICAgICAgICAgPC91bD4KICAgICAgICAgIDwvZGl2PgogICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iYXJlYXMgZGV0YWlscyI+CiAgICAgICAgICAgIDxoMj5QacOoY2VzPC9oMj4KCiAgICAgICAgICAgICAgICAgICAgICAgICAgPHVsPgogICAgICAgICAgICAgICAgPGxpIGNsYXNzPSJhbHQiPjEgQ2hhbWJyZSA8c3Bhbj48L3NwYW4+PC9saT48bGkgPjEgU2FsbGUgZGUgZG91Y2hlIC8gdG9pbGV0dGVzIDxzcGFuPjwvc3Bhbj48L2xpPjxsaSBjbGFzcz0iYWx0Ij4xIFPDqWpvdXIgPHNwYW4+PC9zcGFuPjwvbGk+PGxpID4xIEN1aXNpbmUgZCfDqXTDqSA8c3Bhbj48L3NwYW4+PC9saT48bGkgY2xhc3M9ImFsdCI+MSBUb2lsZXR0ZSA8c3Bhbj48L3NwYW4+PC9saT48bGkgPjEgRHJlc3NpbmcgPHNwYW4+PC9zcGFuPjwvbGk+PGxpIGNsYXNzPSJhbHQiPjEgQ2F2ZSA8c3Bhbj48L3NwYW4+PC9saT4gICAgICAgICAgICAgIDwvdWw+CiAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAKICAgICAgICAKICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJveGltaXRpZXMgZGV0YWlscyI+CiAgICAgICAgICAgIDxoMj5Qcm94aW1pdMOpczwvaDI+CiAgICAgICAgICAgIDx1bD4KICAgICAgICAgICAgICA8bGkgY2xhc3M9ImFsdCI+QnVzPC9saT48bGkgPk3DqXRybzwvbGk+PGxpIGNsYXNzPSJhbHQiPkNvbW1lcmNlczwvbGk+PGxpID5HYXJlIFRHVjwvbGk+ICAgICAgICAgICAgPC91bD4KICAgICAgICAgIDwvZGl2PgogICAgICAgIAogICAgICAgIAogICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJsZWdhbCBkZXRhaWxzIj4KICAgICAgICAgICAgPGgyPkluZm9ybWF0aW9ucyBsw6lnYWxlczwvaDI+CiAgICAgICAgICAgIDx1bD4KICAgICAgICAgICAgICA8bGkgY2xhc3M9ImFsdCI+NjUwIDAwMCDigqwgaG9ub3JhaXJlcyBleGNsdXM8L2xpPjxsaSA+SG9ub3JhaXJlcyBkZSAyLjkyMyAlIFRUQyDDoCBjaGFyZ2UgYWNxdcOpcmV1cjwvbGk+PGxpIGNsYXNzPSJhbHQiPkhvbm9yYWlyZXMgw6AgY2hhcmdlIGFjcXXDqXJldXI8c3Bhbj4xOSAwMDAg4oKsPC9zcGFuPjwvbGk+PGxpIGNsYXNzPSJhbHQiPlRheGUgZm9uY2nDqHJlPHNwYW4+Njk4IOKCrDwvc3Bhbj48L2xpPjxsaSA+Q2hhcmdlcyBkZSBjb3Byb3ByacOpdMOpPHNwYW4+MjIwIOKCrDwvc3Bhbj48L2xpPjxsaSBjbGFzcz0iYWx0Ij5Mb2kgQ2FycmV6PHNwYW4+NDcgbcKyPC9zcGFuPjwvbGk+ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaSA+UGFzIGRlIHByb2PDqWR1cmUgZW4gY291cnM8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgIDwvdWw+CiAgICAgICAgICA8L2Rpdj4KICAgICAgICAKICAgICAgICAgICAgICA8L2Rpdj4KICAgIDwvYXJ0aWNsZT4KCiAgICA8YXNpZGUgY2xhc3M9ImNvbHVtblJpZ2h0IGNsZWFyZml4Ij4KICAgICAgPGRpdiBjbGFzcz0idXNlckJsb2NrIj4KICAgICAgICAgICAgICAgICAgCiAgICAgICAgICA8cCBjbGFzcz0ic21hbGxJY29uIHVzZXJOYW1lIj4KICAgICAgICAgICAgPHN0cm9uZz5OYXRoYWxpZSBIQVRFTTwvc3Ryb25nPjxiciAvPgogICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEFnZW50IGltbW9iaWxpZXIgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgPC9wPgogICAgICAgICAgPHA+CiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwaG9uZSBzbWFsbEljb24iPjxhIGhyZWY9InRlbDowMDMzMDY2MDY5Nzc2NyI+KzMzICgwKTYgNjAgNjkgNzcgNjc8L2E+PC9zcGFuPjxiciAvPiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJtYWlsIHNtYWxsSWNvbiI+PGEgaHJlZj0ibWFpbHRvOm5hdGhhbGllQGFnZW5jZWRlc2VuZmFudHNyb3VnZXMuY29tIj5uYXRoYWxpZUBhZ2VuY2VkZXNlbmZhbnRzcm91Z2VzLmNvbTwvYT48L3NwYW4+ICAgICAgICAgIDwvcD4KICAgICAgICAgIDxwPjxhIGhyZWY9IiNjb250YWN0TGluZSIgY2xhc3M9ImJ1dHRvbiI+Q29udGFjdGV6LW1vaTwvYT48L3A+CiAgICAgICAgICAgICAgPC9kaXY+CgogICAgICA8ZGl2IGNsYXNzPSJzaGFyZUJsb2NrIj4KICAgICAgICA8aDI+UGFydGFnZXI8L2gyPgogICAgICAgIDx1bCBjbGFzcz0ic29jaWFsTGlua3MiPgoJICAgICAgPGxpIGNsYXNzPSJzb2NpYWwiPjxhIGNsYXNzPSJlbWFpbCBmcmllbmQiIHRpdGxlPSJFbnZveWVyIMOgIHVuIGFtaSIgaHJlZj0iL2ZyL3NlbmQtdG8tZnJpZW5kP2VzdGF0ZUlkPTM2NDA0ODMiPkVudm95ZXIgw6AgdW4gYW1pPC9hPjwvbGk+CiAgICAgICAgICA8bGkgY2xhc3M9InNvY2lhbCI+PGEgY2xhc3M9ImZhY2Vib29rIiBvbmNsaWNrPSJ3aW5kb3cub3BlbigkKHRoaXMpLmF0dHIoJ2hyZWYnKSwgJ0ZhY2Vib29rJywgY29uZmlnPSdoZWlnaHQ9MTAwLCB3aWR0aD00MDAsIHRvb2xiYXI9bm8sIG1lbnViYXI9bm8sIHNjcm9sbGJhcnM9bm8sIHJlc2l6YWJsZT1ubywgbG9jYXRpb249bm8nKTsgcmV0dXJuIGZhbHNlOyIgaHJlZj0iaHR0cDovL3d3dy5mYWNlYm9vay5jb20vc2hhcmUucGhwP3U9aHR0cCUzQSUyRiUyRnd3dy5hZ2VuY2VkZXNlbmZhbnRzcm91Z2VzLmNvbSUyRmZyJTJGcmVjaGVyY2hlJTJGdmVudGUtYXBwYXJ0ZW1lbnQtMi1waWVjZXMtcGFyaXMtMTJlbWUtNzUwMTItMzY0MDQ4MyZ0aXRsZT1QYXJpcyBYSUkgQVBQQVJURU1FTlQgQVZFQyBWVUUgRVQgQVNDRU5TRVVSIj5GYWNlYm9vazwvYT48L2xpPgogICAgICAgICAgPGxpIGNsYXNzPSJzb2NpYWwiPjxhIGNsYXNzPSJ0d2l0dGVyIiBvbmNsaWNrPSJ3aW5kb3cub3BlbigkKHRoaXMpLmF0dHIoJ2hyZWYnKSwgJ1R3aXR0ZXInLCBjb25maWc9J2hlaWdodD0yMTYsIHdpZHRoPTQwMCwgdG9vbGJhcj1ubywgbWVudWJhcj1ubywgc2Nyb2xsYmFycz1ubywgcmVzaXphYmxlPW5vLCBsb2NhdGlvbj1ubycpOyByZXR1cm4gZmFsc2U7IiBocmVmPSJodHRwOi8vdHdpdHRlci5jb20vaG9tZT9zdGF0dXM9UGFyaXMgWElJIEFQUEFSVEVNRU5UIEFWRUMgVlVFIEVUIEFTQ0VOU0VVUitodHRwJTNBJTJGJTJGd3d3LmFnZW5jZWRlc2VuZmFudHNyb3VnZXMuY29tJTJGZnIlMkZyZWNoZXJjaGUlMkZ2ZW50ZS1hcHBhcnRlbWVudC0yLXBpZWNlcy1wYXJpcy0xMmVtZS03NTAxMi0zNjQwNDgzIj5Ud2l0dGVyPC9hPjwvbGk+CiAgICAgICAgICA8bGkgY2xhc3M9InNvY2lhbCI+PGEgY2xhc3M9ImxpbmtlZGluIiBvbmNsaWNrPSJ3aW5kb3cub3BlbigkKHRoaXMpLmF0dHIoJ2hyZWYnKSwgJ0xpbmtlZEluJywgY29uZmlnPSdoZWlnaHQ9NDAwLCB3aWR0aD01MDAsIHRvb2xiYXI9bm8sIG1lbnViYXI9bm8sIHNjcm9sbGJhcnM9bm8sIHJlc2l6YWJsZT1ubywgbG9jYXRpb249bm8nKTsgcmV0dXJuIGZhbHNlOyIgaHJlZj0iaHR0cHM6Ly93d3cubGlua2VkaW4uY29tL3NoYXJlQXJ0aWNsZT9taW5pPXRydWUmdXJsPWh0dHAlM0ElMkYlMkZ3d3cuYWdlbmNlZGVzZW5mYW50c3JvdWdlcy5jb20lMkZmciUyRnJlY2hlcmNoZSUyRnZlbnRlLWFwcGFydGVtZW50LTItcGllY2VzLXBhcmlzLTEyZW1lLTc1MDEyLTM2NDA0ODMmdGl0bGU9UGFyaXMgWElJIEFQUEFSVEVNRU5UIEFWRUMgVlVFIEVUIEFTQ0VOU0VVUiZzdW1tYXJ5PURhbnMgdW4gaW1tZXVibGUgYW5jaWVuIGRhdGFudCBkZXMgYW5uw6llcyAxOTMwLCBhcHBhcnRlbWVudCBkJ2FuZ2xlIGF1IDXDqG1lIMOpdGFnZSBwYXIgYXNjZW5zZXVyLCBkJ3VuZSBzdXJmYWNlIGRlIDQ3bTIgYsOpbsOpZmljaWFudCBkJ3VuZSB2dWUgZMOpZ2Fnw6llICwgY2xhaXIsIHNhbnMgdmlzLcOgLXZpcy5yw6lub3bDqSBwYXIgYXJjaGl0ZWN0ZSwgYXXigKYiPkxpbmtlZEluPC9hPjwvbGk+CiAgICAgICAgPC91bD4KICAgICAgPC9kaXY+CgogICAgICA8ZGl2IGNsYXNzPSJzZWFyY2ggbGlzdGluZ1NlYXJjaCI+CiAgICAgICAgPGRpdiBjbGFzcz0ibG9hZGluZyI+PC9kaXY+CiAgPGZvcm0gbWV0aG9kPSJwb3N0IiBhY3Rpb249Ii9mci9yZWNoZXJjaGUvIiBjbGFzcz0iY2xlYXJmaXgiPgogICAgICA8ZGl2IGNsYXNzPSJmaWVsZCBuYXR1cmUiPjxzZWxlY3QgbmFtZT0ibmF0dXJlIiBpZD0ibmF0dXJlIj4KPG9wdGlvbiB2YWx1ZT0iMSI+VmVudGU8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iMiI+TG9jYXRpb248L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iMyI+TG9jYXRpb24gc2Fpc29ubmnDqHJlPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjQiPlByb2dyYW1tZTwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSI1Ij5WaWFnZXIgLyBOdWUtcHJvcHJpw6l0w6k8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iNiI+RW5jaMOocmU8L29wdGlvbj4KPC9zZWxlY3Q+PC9kaXY+CiAgICA8ZGl2IGNsYXNzPSJmaWVsZHMgY2xlYXJmaXgiPgogICAgICA8ZGl2IGNsYXNzPSJmaWVsZCI+PHNlbGVjdCBuYW1lPSJ0eXBlW10iIG11bHRpcGxlPSJtdWx0aXBsZSIgaWQ9InR5cGUiPgo8b3B0aW9uIHZhbHVlPSIxIj5BcHBhcnRlbWVudDwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSIyIj5NYWlzb248L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iMyI+VGVycmFpbjwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSI0Ij5Db21tZXJjZTwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSI1Ij5HYXJhZ2UgLyBQYXJraW5nPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjYiPkltbWV1YmxlPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjciPkJ1cmVhdTwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSI4Ij5CYXRlYXU8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iOSI+TG9jYXV4IGQmIzAzOTthY3Rpdml0w6kgLyBFbnRyZXDDtHRzPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjEwIj5DYXZlIC8gQm94PC9vcHRpb24+Cjwvc2VsZWN0PjwvZGl2PgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImZpZWxkIj48c2VsZWN0IG5hbWU9InJvb21zW10iIG11bHRpcGxlPSJtdWx0aXBsZSIgaWQ9InJvb21zIj4KPG9wdGlvbiB2YWx1ZT0iMSI+MSBwacOoY2U8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iMiI+MiBwacOoY2VzPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjMiPjMgcGnDqGNlczwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSI0Ij40IHBpw6hjZXM8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iNSI+NSBwacOoY2VzPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjYrIj42KyBwacOoY2VzPC9vcHRpb24+Cjwvc2VsZWN0PjwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJmaWVsZCI+PHNlbGVjdCBkYXRhLWVycm9yTG9hZGluZz0iRXJyZXVyIGRlIHLDqWN1cMOpcmF0aW9uIGRlcyBkb25uw6llcy4iIGRhdGEtaW5wdXRUb29TaG9ydD0iVmV1aWxsZXogc2Fpc2lyIGRldXggY2FyYWN0w6hyZXMgYXUgbWluaW11bSIgZGF0YS1ub1Jlc3VsdHM9IkF1Y3VuIHLDqXN1bHRhdCIgZGF0YS1zZWFyY2hpbmc9IlJlY2hlcmNoZSBlbiBjb3Vycy4uLiIgZGF0YS1wbGFjZWhvbGRlcj0iVmlsbGUiIG5hbWU9ImNpdHlbXSIgbXVsdGlwbGU9Im11bHRpcGxlIiBpZD0iY2l0eSI+CjxvcHRpb24gdmFsdWU9IjI1OTY2Ij5CZWxmb3LDqnQtZW4tUGVyY2hlPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjU0OCI+Qm9oYWluLWVuLVZlcm1hbmRvaXM8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iNTM5NDgiPkJydXhlbGxlczwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSIzODM5MCI+TGUgUHLDqS1TYWludC1HZXJ2YWlzPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjM4MzQwIj5MZXZhbGxvaXMtUGVycmV0PC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjM4MzQ2Ij5OZXVpbGx5LXN1ci1TZWluZTwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSIzODI0NyI+UGFsYWlzZWF1PC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjMyNTUyIj5QYXJpcyAzw6htZTwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSIzMjU1MyI+UGFyaXMgNMOobWU8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iMzI1NTQiPlBhcmlzIDXDqG1lPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjMyNTU5Ij5QYXJpcyAxMMOobWU8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iMzI1NjAiPlBhcmlzIDExw6htZTwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSIzMjU2MSI+UGFyaXMgMTLDqG1lPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjMyNTYyIj5QYXJpcyAxM8OobWU8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iMzI1NjUiPlBhcmlzIDE2w6htZTwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSIzMjU2NyI+UGFyaXMgMTjDqG1lPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjMyNTY4Ij5QYXJpcyAxOcOobWU8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iMzI1NjkiPlBhcmlzIDIww6htZTwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSI3NjQwIj5Qcm9wcmlhbm88L29wdGlvbj4KPC9zZWxlY3Q+PC9kaXY+CiAgICAgIDxkaXYgY2xhc3M9ImZpZWxkIGRyb3Bkb3duIj48c2VsZWN0IG5hbWU9InByaWNlIiBpZD0icHJpY2UiPgo8b3B0aW9uIHZhbHVlPSIiIHNlbGVjdGVkPSJzZWxlY3RlZCI+UHJpeDwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSIwMDAwMDAwMDAwLTAwMDAyMDAwMDAiPjAgLSAyMDAgMDAwIOKCrDwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSIwMDAwMjAwMDAwLTAwMDA0MDAwMDAiPjIwMCAwMDAgLSA0MDAgMDAwIOKCrDwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSIwMDAwNDAwMDAwLTAwMDA2MDAwMDAiPjQwMCAwMDAgLSA2MDAgMDAwIOKCrDwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSIwMDAwNjAwMDAwLTAwMDA4MDAwMDAiPjYwMCAwMDAgLSA4MDAgMDAwIOKCrDwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSIwMDAwODAwMDAwLTAwMDEyMDAwMDAiPjgwMCAwMDAgLSAxIDIwMCAwMDAg4oKsPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjAwMDEyMDAwMDAtMDAwMjAwMDAwMCI+MSAyMDAgMDAwIC0gMiAwMDAgMDAwIOKCrDwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSIwMDAyMDAwMDAwLUVORCI+KyAyIDAwMCAwMDAg4oKsPC9vcHRpb24+Cjwvc2VsZWN0PjwvZGl2PgogICAgICAKICAgICAgICAgICAgICAgIDxzZWN0aW9uIGNsYXNzPSJsaWZlQW5udWl0eSIgc3R5bGU9ImRpc3BsYXk6IG5vbmU7Ij4KICAgICAgICA8ZGl2IGNsYXNzPSJmaWVsZCBkcm9wZG93biI+PHNlbGVjdCBuYW1lPSJhbm51aXR5W10iIG11bHRpcGxlPSJtdWx0aXBsZSIgaWQ9ImFubnVpdHkiPgo8b3B0aW9uIHZhbHVlPSIxIj5WaWFnZXIgbGlicmU8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iMiI+VmlhZ2VyIG9jY3Vww6k8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iMyI+TnVlLXByb3ByacOpdMOpPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjQiPlZlbnRlIMOgIHRlcm1lPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjUiPlZpYWdlciBzZW1pLW9jY3Vww6k8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iNiI+VmVudGUgw6AgdGVybWUgbGlicmU8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iNyI+VmVudGUgw6AgdGVybWUgc2VtaS1vY2N1cMOpPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjgiPlZlbnRlIMOgIHRlcm1lIG9jY3Vww6k8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iOSI+VmlhZ2VyIHNhbnMgcmVudGU8L29wdGlvbj4KPC9zZWxlY3Q+PC9kaXY+CiAgICAgICAgPGRpdiBjbGFzcz0iZmllbGQiPjxpbnB1dCBwbGFjZWhvbGRlcj0iTWluLiBhZ2UiIHR5cGU9InRleHQiIG5hbWU9ImFnZSIgaWQ9ImFnZSIgLz48L2Rpdj4KICAgICAgICA8ZGl2IGNsYXNzPSJmaWVsZCI+PGlucHV0IHBsYWNlaG9sZGVyPSJSZW50ZSBtaW4uIiB0eXBlPSJ0ZXh0IiBuYW1lPSJ0ZW5hbnRfbWluIiBpZD0idGVuYW50X21pbiIgLz48L2Rpdj4KICAgICAgICA8ZGl2IGNsYXNzPSJmaWVsZCI+PGlucHV0IHBsYWNlaG9sZGVyPSJSZW50ZSBtYXguIiB0eXBlPSJ0ZXh0IiBuYW1lPSJ0ZW5hbnRfbWF4IiBpZD0idGVuYW50X21heCIgLz48L2Rpdj4KICAgICAgPC9zZWN0aW9uPgoKICAgICAgPHNlY3Rpb24gY2xhc3M9InJlbnRhbCIgc3R5bGU9ImRpc3BsYXk6IG5vbmU7Ij4KICAgICAgICA8ZGl2IGNsYXNzPSJmaWVsZCBkcm9wZG93biI+PHNlbGVjdCBuYW1lPSJyZW50X3R5cGUiIGlkPSJyZW50X3R5cGUiPgo8b3B0aW9uIHZhbHVlPSIiPlR5cGUgZGUgbG9jYXRpb248L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iMyI+Q29sb2NhdGlvbjwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSIyIj5NZXVibMOpZTwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSIxIj5WaWRlPC9vcHRpb24+Cjwvc2VsZWN0PjwvZGl2PgogICAgICA8L3NlY3Rpb24+CgogICAgICA8c2VjdGlvbiBjbGFzcz0ibmV3YnVpbGRzIiBzdHlsZT0iZGlzcGxheTogbm9uZTsiPgogICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJmaWVsZCBkcm9wZG93biI+PGlucHV0IHR5cGU9ImhpZGRlbiIgbmFtZT0ibmV3cHJvZ3JhbV9kZWxpdmVyeV9hdCIgaWQ9Im5ld3Byb2dyYW1fZGVsaXZlcnlfYXQiIC8+IDxpbnB1dCBwbGFjZWhvbGRlcj0iRMOpbGFpIGRlIGxpdnJhaXNvbiIgdHlwZT0idGV4dCIgbmFtZT0ibmV3cHJvZ3JhbV9kZWxpdmVyeV9hdF9kaXNwbGF5IiBpZD0ibmV3cHJvZ3JhbV9kZWxpdmVyeV9hdF9kaXNwbGF5IiAvPjwvZGl2PgogICAgICAgICAgICAgIDwvc2VjdGlvbj4KICAgIAogICAgICA8L2Rpdj4KCiAgICA8aW5wdXQgdHlwZT0iaGlkZGVuIiBuYW1lPSJjdXJyZW5jeSIgdmFsdWU9IkVVUiIgaWQ9ImN1cnJlbmN5IiAvPiAgPGlucHV0IHR5cGU9InN1Ym1pdCIgdmFsdWU9IlJlY2hlcmNoZXIiLz4KICA8aW5wdXQgdHlwZT0iaGlkZGVuIiBuYW1lPSJjdXN0b21yb3V0ZSIgdmFsdWU9IiIgLz4KICA8aW5wdXQgdHlwZT0iaGlkZGVuIiBuYW1lPSJob21lcGFnZSIgdmFsdWU9IiIgLz4KPC9mb3JtPgoKCgogIDxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij4KICAgICQoZnVuY3Rpb24oKSB7CiAgICAgICQoJyNuYXR1cmUnKS5jaGFuZ2UoZnVuY3Rpb24oKSB7CiAgICAgICAgcmVmcmVzaFNlYXJjaEZvcm0oKTsKICAgICAgfSk7CiAgICB9KTsKICA8L3NjcmlwdD4KCjxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij4KCiAgdmFyIHNlbGVjdE9wZW4gPSBmYWxzZTsKCiAgJChmdW5jdGlvbigpIHsKICAgICQoJyNuYXR1cmUgb3B0aW9uOnNlbGVjdGVkJykudmFsKCk7CiAgICAKICAgICQuZm4uc2VsZWN0Mi5hbWQucmVxdWlyZShbIm9wdGdyb3VwLWRhdGEiLCAib3B0Z3JvdXAtcmVzdWx0cyJdLCBmdW5jdGlvbiAoT3B0Z3JvdXBEYXRhLCBPcHRncm91cFJlc3VsdHMpIHsKICAgICAgCiAgICAgICQoJyNjaXR5Y29kZScpLnNlbGVjdDIoewogICAgICAgIGRhdGFBZGFwdGVyOiBPcHRncm91cERhdGEsCiAgICAgICAgcmVzdWx0c0FkYXB0ZXI6IE9wdGdyb3VwUmVzdWx0cywKICAgICAgICBtaW5pbXVtSW5wdXRMZW5ndGg6IDIsCiAgICAgICAgbWF0Y2hlcjogemlwY29kZU1hdGNoZXIsCiAgICAgICAgbGFuZ3VhZ2U6IHsKICAgICAgICAgIGVycm9yTG9hZGluZzogZnVuY3Rpb24oKSB7CiAgICAgICAgICAgIHJldHVybiAkKCcjY2l0eWNvZGUnKS5hdHRyKCdkYXRhLWVycm9yTG9hZGluZycpOwogICAgICAgICAgfSwKICAgICAgICAgIGlucHV0VG9vU2hvcnQ6IGZ1bmN0aW9uKGEpIHsKICAgICAgICAgICAgcmV0dXJuICQoJyNjaXR5Y29kZScpLmF0dHIoJ2RhdGEtaW5wdXRUb29TaG9ydCcpOwogICAgICAgICAgfSwKICAgICAgICAgIG5vUmVzdWx0czogZnVuY3Rpb24oKSB7CiAgICAgICAgICAgIHJldHVybiAkKCcjY2l0eWNvZGUnKS5hdHRyKCdkYXRhLW5vUmVzdWx0cycpOwogICAgICAgICAgfSwKICAgICAgICAgIHNlYXJjaGluZzogZnVuY3Rpb24oKSB7CiAgICAgICAgICAgIHJldHVybiAkKCcjY2l0eWNvZGUnKS5hdHRyKCdkYXRhLXNlYXJjaGluZycpOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSk7IAogICAgICAKICAgIH0pOwogICAgCiAgICAKICAgICQoJyNjaXR5Jykuc2VsZWN0Mih7CgkgICAgcGxhY2Vob2xkZXI6ICQoJyNjaXR5JykuZGF0YSgncGxhY2Vob2xkZXInKSwKCSAgICBlc2NhcGVNYXJrdXA6IGZ1bmN0aW9uIChtYXJrdXApIHsgcmV0dXJuIG1hcmt1cDsgfSwKCSAgICBtaW5pbXVtSW5wdXRMZW5ndGg6IDAsCgkgICAgbGFuZ3VhZ2U6IHsKCSAgICAgIGVycm9yTG9hZGluZzogZnVuY3Rpb24oKSB7CgkJICAgICAgcmV0dXJuICQoJyNjaXR5JykuYXR0cignZGF0YS1lcnJvckxvYWRpbmcnKTsKCSAgICAgIH0sCgkgICAgICBpbnB1dFRvb1Nob3J0OiBmdW5jdGlvbihhKSB7CgkgICAgICAJcmV0dXJuICQoJyNjaXR5JykuYXR0cignZGF0YS1pbnB1dFRvb1Nob3J0Jyk7CgkgICAgICB9LAoJICAgICAgbm9SZXN1bHRzOiBmdW5jdGlvbigpIHsKCSAgICAgIAlyZXR1cm4gJCgnI2NpdHknKS5hdHRyKCdkYXRhLW5vUmVzdWx0cycpOwoJICAgICAgfSwKCSAgICAgIHNlYXJjaGluZzogZnVuY3Rpb24oKSB7CgkgICAgICAJcmV0dXJuICQoJyNjaXR5JykuYXR0cignZGF0YS1zZWFyY2hpbmcnKTsKCSAgICAgIH0KCSAgICB9CgkgIH0pOwoKICAgICQoJyNsb2NhdGlvbicpLnNlbGVjdDIoewoJICAgIHBsYWNlaG9sZGVyOiAkKCcjbG9jYXRpb24nKS5kYXRhKCdwbGFjZWhvbGRlcicpLAoJICAgIGFqYXg6IHsKCSAgICAgIHVybDogIi9taXNjL2F1dG9jb21wbGV0ZSIsCgkgICAgICBkYXRhVHlwZTogJ2pzb24nLAoJICAgICAgZGVsYXk6IDI1MCwKCSAgICAgIGRhdGE6IGZ1bmN0aW9uIChwYXJhbXMpIHsKCSAgICAgICAgcmV0dXJuIHsKCSAgICAgICAgICBxOiBwYXJhbXMudGVybSwgLy8gc2VhcmNoIHRlcm0KCSAgICAgICAgICBwYWdlOiBwYXJhbXMucGFnZQoJICAgICAgICB9OwoJICAgICAgfSwKCSAgICAgIHByb2Nlc3NSZXN1bHRzOiBmdW5jdGlvbiAoZGF0YSkgewoJICAgICAgICAgIHJldHVybiB7CgkgICAgICAgICAgICAgIHJlc3VsdHM6ICQubWFwKGRhdGEuaXRlbXMsIGZ1bmN0aW9uIChpdGVtKSB7CgkgICAgICAgICAgICAgICAgICByZXR1cm4gewoJICAgICAgICAgICAgICAgICAgICAgIHRleHQ6IGl0ZW0ubmFtZSwKCSAgICAgICAgICAgICAgICAgICAgICBpZDogaXRlbS5pZAoJICAgICAgICAgICAgICAgICAgfQoJICAgICAgICAgICAgICB9KQoJICAgICAgICAgIH07CgkgICAgICB9LAoJICAgICAgY2FjaGU6IHRydWUKCSAgICB9LAoJICAgIGVzY2FwZU1hcmt1cDogZnVuY3Rpb24gKG1hcmt1cCkgeyByZXR1cm4gbWFya3VwOyB9LAoJICAgIG1pbmltdW1JbnB1dExlbmd0aDogMiwKCSAgICBsYW5ndWFnZTogewoJICAgICAgZXJyb3JMb2FkaW5nOiBmdW5jdGlvbigpIHsKCQkgICAgICByZXR1cm4gJCgnI2xvY2F0aW9uJykuYXR0cignZGF0YS1lcnJvckxvYWRpbmcnKTsKCSAgICAgIH0sCgkgICAgICBpbnB1dFRvb1Nob3J0OiBmdW5jdGlvbihhKSB7CgkgICAgICAJcmV0dXJuICQoJyNsb2NhdGlvbicpLmF0dHIoJ2RhdGEtaW5wdXRUb29TaG9ydCcpOwoJICAgICAgfSwKCSAgICAgIG5vUmVzdWx0czogZnVuY3Rpb24oKSB7CgkgICAgICAJcmV0dXJuICQoJyNsb2NhdGlvbicpLmF0dHIoJ2RhdGEtbm9SZXN1bHRzJyk7CgkgICAgICB9LAoJICAgICAgc2VhcmNoaW5nOiBmdW5jdGlvbigpIHsKCSAgICAgIAlyZXR1cm4gJCgnI2xvY2F0aW9uJykuYXR0cignZGF0YS1zZWFyY2hpbmcnKTsKCSAgICAgIH0KCSAgICB9CgkgIH0pOwoKICAgICQoJyNkZXBhcnRtZW50Jykuc2VsZWN0Mih7CgkgICAgcGxhY2Vob2xkZXI6ICQoJyNkZXBhcnRtZW50JykuZGF0YSgncGxhY2Vob2xkZXInKSwKCSAgICBsYW5ndWFnZTogewoJICAgICAgZXJyb3JMb2FkaW5nOiBmdW5jdGlvbigpIHsKCQkgICAgICByZXR1cm4gJCgnI2RlcGFydG1lbnQnKS5hdHRyKCdkYXRhLWVycm9yTG9hZGluZycpOwoJICAgICAgfSwKCSAgICAgIGlucHV0VG9vU2hvcnQ6IGZ1bmN0aW9uKGEpIHsKCSAgICAgIAlyZXR1cm4gJCgnI2RlcGFydG1lbnQnKS5hdHRyKCdkYXRhLWlucHV0VG9vU2hvcnQnKTsKCSAgICAgIH0sCgkgICAgICBub1Jlc3VsdHM6IGZ1bmN0aW9uKCkgewoJICAgICAgCXJldHVybiAkKCcjZGVwYXJ0bWVudCcpLmF0dHIoJ2RhdGEtbm9SZXN1bHRzJyk7CgkgICAgICB9LAoJICAgICAgc2VhcmNoaW5nOiBmdW5jdGlvbigpIHsKCSAgICAgIAlyZXR1cm4gJCgnI2RlcGFydG1lbnQnKS5hdHRyKCdkYXRhLXNlYXJjaGluZycpOwoJICAgICAgfQoJICAgIH0KCSAgfSk7CiAgICAKICAgICQoJyNyZWdpb24nKS5zZWxlY3QyKHsKCSAgICBwbGFjZWhvbGRlcjogJCgnI3JlZ2lvbicpLmRhdGEoJ3BsYWNlaG9sZGVyJyksCgkgICAgbGFuZ3VhZ2U6IHsKCSAgICAgIGVycm9yTG9hZGluZzogZnVuY3Rpb24oKSB7CgkJICAgICAgcmV0dXJuICQoJyNyZWdpb24nKS5hdHRyKCdkYXRhLWVycm9yTG9hZGluZycpOwoJICAgICAgfSwKCSAgICAgIGlucHV0VG9vU2hvcnQ6IGZ1bmN0aW9uKGEpIHsKCSAgICAgIAlyZXR1cm4gJCgnI3JlZ2lvbicpLmF0dHIoJ2RhdGEtaW5wdXRUb29TaG9ydCcpOwoJICAgICAgfSwKCSAgICAgIG5vUmVzdWx0czogZnVuY3Rpb24oKSB7CgkgICAgICAJcmV0dXJuICQoJyNyZWdpb24nKS5hdHRyKCdkYXRhLW5vUmVzdWx0cycpOwoJICAgICAgfSwKCSAgICAgIHNlYXJjaGluZzogZnVuY3Rpb24oKSB7CgkgICAgICAJcmV0dXJuICQoJyNyZWdpb24nKS5hdHRyKCdkYXRhLXNlYXJjaGluZycpOwoJICAgICAgfQoJICAgIH0KCSAgfSk7CiAgICAKICAgICQoJyNyZWdkZXAnKS5zZWxlY3QyKHsKCSAgICBwbGFjZWhvbGRlcjogJCgnI3JlZ2RlcCcpLmRhdGEoJ3BsYWNlaG9sZGVyJyksCgkgICAgbGFuZ3VhZ2U6IHsKCSAgICAgIGVycm9yTG9hZGluZzogZnVuY3Rpb24oKSB7CgkJICAgICAgcmV0dXJuICQoJyNyZWdkZXAnKS5hdHRyKCdkYXRhLWVycm9yTG9hZGluZycpOwoJICAgICAgfSwKCSAgICAgIGlucHV0VG9vU2hvcnQ6IGZ1bmN0aW9uKGEpIHsKCSAgICAgIAlyZXR1cm4gJCgnI3JlZ2RlcCcpLmF0dHIoJ2RhdGEtaW5wdXRUb29TaG9ydCcpOwoJICAgICAgfSwKCSAgICAgIG5vUmVzdWx0czogZnVuY3Rpb24oKSB7CgkgICAgICAJcmV0dXJuICQoJyNyZWdkZXAnKS5hdHRyKCdkYXRhLW5vUmVzdWx0cycpOwoJICAgICAgfSwKCSAgICAgIHNlYXJjaGluZzogZnVuY3Rpb24oKSB7CgkgICAgICAJcmV0dXJuICQoJyNyZWdkZXAnKS5hdHRyKCdkYXRhLXNlYXJjaGluZycpOwoJICAgICAgfQoJICAgIH0KCSAgfSk7CiAgICAKICAgICQoJyNzZWN0b3InKS5tdWx0aXBsZVNlbGVjdCh7CiAgICAgIHBsYWNlaG9sZGVyOiAiU2VjdGV1cnMiLAogICAgICBzZWxlY3RBbGxUZXh0OiAiVG91dCBzw6lsZWN0aW9ubmVyIiwKICAgICAgc2VsZWN0QWxsRGVsaW1pdGVyOiAiIiwKICAgICAgYWxsU2VsZWN0ZWQ6ICJUb3VzIHPDqWxlY3Rpb25uw6lzIiwKICAgICAgbWluaW11bUNvdW50U2VsZWN0ZWQ6IDIsCiAgICAgIGNvdW50U2VsZWN0ZWQ6ICIjIHNlY3RldXJzIiwKICAgICAgb25PcGVuOiBmdW5jdGlvbigpIHsKICAgICAgICBkaXNhYmxlU2VhcmNoRmllbGRzKCcjc2VjdG9yJyk7CiAgICAgICAgdmFyIHNlbGVjdE9wZW4gPSB0cnVlOwogICAgICB9LAogICAgICBvbkNsb3NlOiBmdW5jdGlvbigpIHsKICAgICAgICByZWZyZXNoU2VhcmNoRm9ybSgpOwogICAgICB9CiAgICB9KTsKCiAgICAkKCcjdHlwZScpLm11bHRpcGxlU2VsZWN0KHsKICAgICAgcGxhY2Vob2xkZXI6ICJUeXBlcyIsCiAgICAgIHNlbGVjdEFsbFRleHQ6ICJUb3V0IHPDqWxlY3Rpb25uZXIiLAogICAgICBzZWxlY3RBbGxEZWxpbWl0ZXI6ICIiLAogICAgICBhbGxTZWxlY3RlZDogIlRvdXMgc8OpbGVjdGlvbm7DqXMiLAogICAgICBtaW5pbXVtQ291bnRTZWxlY3RlZDogMiwKICAgICAgY291bnRTZWxlY3RlZDogIiMgdHlwZXMiLAogICAgICBvbk9wZW46IGZ1bmN0aW9uKCkgewogICAgICAgIGRpc2FibGVTZWFyY2hGaWVsZHMoJyN0eXBlJyk7CiAgICAgICAgdmFyIHNlbGVjdE9wZW4gPSB0cnVlOwogICAgICB9LAogICAgICBvbkNsb3NlOiBmdW5jdGlvbigpIHsKICAgICAgICByZWZyZXNoU2VhcmNoRm9ybSgpOwogICAgICB9CiAgICB9KTsKCiAgICAkKCcjc3BlY2lmaWMnKS5tdWx0aXBsZVNlbGVjdCh7CiAgICAgIHBsYWNlaG9sZGVyOiAiVHlwZXMiLAogICAgICBzZWxlY3RBbGxUZXh0OiAiVG91dCBzw6lsZWN0aW9ubmVyIiwKICAgICAgc2VsZWN0QWxsRGVsaW1pdGVyOiAiIiwKICAgICAgYWxsU2VsZWN0ZWQ6ICJUb3VzIHPDqWxlY3Rpb25uw6lzIiwKICAgICAgbWluaW11bUNvdW50U2VsZWN0ZWQ6IDIsCiAgICAgIGNvdW50U2VsZWN0ZWQ6ICIjIHR5cGVzIiwKICAgICAgb25PcGVuOiBmdW5jdGlvbigpIHsKICAgICAgICBkaXNhYmxlU2VhcmNoRmllbGRzKCcjc3BlY2lmaWMnKTsKICAgICAgICB2YXIgc2VsZWN0T3BlbiA9IHRydWU7CiAgICAgIH0sCiAgICAgIG9uQ2xvc2U6IGZ1bmN0aW9uKCkgewogICAgICAgIHJlZnJlc2hTZWFyY2hGb3JtKCk7CiAgICAgIH0KICAgIH0pOwoKICAgICQoJyNnbG9iYWx0eXBlJykubXVsdGlwbGVTZWxlY3QoewogICAgICBwbGFjZWhvbGRlcjogIlR5cGVzIiwKICAgICAgc2VsZWN0QWxsVGV4dDogIlRvdXQgc8OpbGVjdGlvbm5lciIsCiAgICAgIHNlbGVjdEFsbERlbGltaXRlcjogIiIsCiAgICAgIGFsbFNlbGVjdGVkOiAiVG91cyBzw6lsZWN0aW9ubsOpcyIsCiAgICAgIG1pbmltdW1Db3VudFNlbGVjdGVkOiAyLAogICAgICBjb3VudFNlbGVjdGVkOiAiIyB0eXBlcyIsCiAgICAgIG9uT3BlbjogZnVuY3Rpb24oKSB7CiAgICAgICAgZGlzYWJsZVNlYXJjaEZpZWxkcygnI2dsb2JhbHR5cGUnKTsKICAgICAgICB2YXIgc2VsZWN0T3BlbiA9IHRydWU7CiAgICAgIH0sCiAgICAgIG9uQ2xvc2U6IGZ1bmN0aW9uKCkgewogICAgICAgIHJlZnJlc2hTZWFyY2hGb3JtKCk7CiAgICAgIH0KICAgIH0pOwoKICAgICQoJyNyb29tcycpLm11bHRpcGxlU2VsZWN0KHsKICAgICAgcGxhY2Vob2xkZXI6ICJQacOoY2VzIiwKICAgICAgc2VsZWN0QWxsVGV4dDogIlRvdXQgc8OpbGVjdGlvbm5lciIsCiAgICAgIHNlbGVjdEFsbERlbGltaXRlcjogIiIsCiAgICAgIGFsbFNlbGVjdGVkOiAiVG91cyBzw6lsZWN0aW9ubsOpcyIsCiAgICAgIGNvdW50U2VsZWN0ZWQ6IGZhbHNlLAogICAgICBvbk9wZW46IGZ1bmN0aW9uKCkgewogICAgICAgIGRpc2FibGVTZWFyY2hGaWVsZHMoJyNyb29tcycpOwogICAgICAgIHZhciBzZWxlY3RPcGVuID0gdHJ1ZTsKICAgICAgfSwKICAgICAgb25DbG9zZTogZnVuY3Rpb24oKSB7CiAgICAgICAgcmVmcmVzaFNlYXJjaEZvcm0oKTsKICAgICAgfQogICAgfSk7CgogICAgJCgnI2JlZHJvb21zJykubXVsdGlwbGVTZWxlY3QoewogICAgICBwbGFjZWhvbGRlcjogIkNoYW1icmVzIiwKICAgICAgc2VsZWN0QWxsVGV4dDogIlRvdXQgc8OpbGVjdGlvbm5lciIsCiAgICAgIHNlbGVjdEFsbERlbGltaXRlcjogIiIsCiAgICAgIGFsbFNlbGVjdGVkOiAiVG91cyBzw6lsZWN0aW9ubsOpcyIsCiAgICAgIGNvdW50U2VsZWN0ZWQ6IGZhbHNlLAogICAgICBvbk9wZW46IGZ1bmN0aW9uKCkgewogICAgICAgIGRpc2FibGVTZWFyY2hGaWVsZHMoJyNiZWRyb29tcycpOwogICAgICAgIHZhciBzZWxlY3RPcGVuID0gdHJ1ZTsKICAgICAgfSwKICAgICAgb25DbG9zZTogZnVuY3Rpb24oKSB7CiAgICAgICAgcmVmcmVzaFNlYXJjaEZvcm0oKTsKICAgICAgfQogICAgfSk7CgogICAgJCgnI2JlZHMnKS5tdWx0aXBsZVNlbGVjdCh7CiAgICAgIHBsYWNlaG9sZGVyOiAiQ291Y2hhZ2VzIiwKICAgICAgc2VsZWN0QWxsVGV4dDogIlRvdXQgc8OpbGVjdGlvbm5lciIsCiAgICAgIHNlbGVjdEFsbERlbGltaXRlcjogIiIsCiAgICAgIGFsbFNlbGVjdGVkOiAiVG91cyBzw6lsZWN0aW9ubsOpcyIsCiAgICAgIGNvdW50U2VsZWN0ZWQ6IGZhbHNlLAogICAgICBvbk9wZW46IGZ1bmN0aW9uKCkgewogICAgICAgIGRpc2FibGVTZWFyY2hGaWVsZHMoJyNiZWRzJyk7CiAgICAgICAgdmFyIHNlbGVjdE9wZW4gPSB0cnVlOwogICAgICB9LAogICAgICBvbkNsb3NlOiBmdW5jdGlvbigpIHsKICAgICAgICByZWZyZXNoU2VhcmNoRm9ybSgpOwogICAgICB9CiAgICB9KTsKCiAgICAkKCcjYW5udWl0eScpLm11bHRpcGxlU2VsZWN0KHsKICAgICAgcGxhY2Vob2xkZXI6ICJUeXBlIGRlIHZpYWdlciIsCiAgICAgIHNlbGVjdEFsbFRleHQ6ICJUb3V0IHPDqWxlY3Rpb25uZXIiLAogICAgICBzZWxlY3RBbGxEZWxpbWl0ZXI6ICIiLAogICAgICBhbGxTZWxlY3RlZDogIlRvdXMgc8OpbGVjdGlvbm7DqXMiLAogICAgICBtaW5pbXVtQ291bnRTZWxlY3RlZDogMiwKICAgICAgY291bnRTZWxlY3RlZDogIiMgdHlwZXMgZGUgdmlhZ2VyIiwKICAgICAgb25PcGVuOiBmdW5jdGlvbigpIHsKICAgICAgICBkaXNhYmxlU2VhcmNoRmllbGRzKCcjYW5udWl0eScpOwogICAgICAgIHZhciBzZWxlY3RPcGVuID0gdHJ1ZTsKICAgICAgfSwKICAgICAgb25DbG9zZTogZnVuY3Rpb24oKSB7CiAgICAgICAgcmVmcmVzaFNlYXJjaEZvcm0oKTsKICAgICAgfQogICAgfSk7CgogICAgJCgnI3Jvb21fdHlwZScpLm11bHRpcGxlU2VsZWN0KHsKICAgICAgcGxhY2Vob2xkZXI6ICJQacOoY2VzIiwKICAgICAgc2VsZWN0QWxsVGV4dDogIlRvdXQgc8OpbGVjdGlvbm5lciIsCiAgICAgIHNlbGVjdEFsbERlbGltaXRlcjogIiIsCiAgICAgIGFsbFNlbGVjdGVkOiAiVG91cyBzw6lsZWN0aW9ubsOpcyIsCiAgICAgIGNvdW50U2VsZWN0ZWQ6IGZhbHNlLAogICAgICBvbk9wZW46IGZ1bmN0aW9uKCkgewogICAgICAgIGRpc2FibGVTZWFyY2hGaWVsZHMoJyNyb29tX3R5cGUnKTsKICAgICAgICB2YXIgc2VsZWN0T3BlbiA9IHRydWU7CiAgICAgIH0sCiAgICAgIG9uQ2xvc2U6IGZ1bmN0aW9uKCkgewogICAgICAgIHJlZnJlc2hTZWFyY2hGb3JtKCk7CiAgICAgIH0KICAgIH0pOwoKICAgICQoJyNkaXN0cmljdCcpLm11bHRpcGxlU2VsZWN0KHsKICAgICAgcGxhY2Vob2xkZXI6ICJRdWFydGllcnMiLAogICAgICBzZWxlY3RBbGxUZXh0OiAiVG91dCBzw6lsZWN0aW9ubmVyIiwKICAgICAgc2VsZWN0QWxsRGVsaW1pdGVyOiAiIiwKICAgICAgYWxsU2VsZWN0ZWQ6ICJUb3VzIHPDqWxlY3Rpb25uw6lzIiwKICAgICAgbWluaW11bUNvdW50U2VsZWN0ZWQ6IDIsCiAgICAgIGNvdW50U2VsZWN0ZWQ6ICIjIHF1YXJ0aWVycyIsCiAgICAgIG9uT3BlbjogZnVuY3Rpb24oKSB7CiAgICAgICAgZGlzYWJsZVNlYXJjaEZpZWxkcygnI2Rpc3RyaWN0Jyk7CiAgICAgICAgdmFyIHNlbGVjdE9wZW4gPSB0cnVlOwogICAgICB9LAogICAgICBvbkNsb3NlOiBmdW5jdGlvbigpIHsKICAgICAgICByZWZyZXNoU2VhcmNoRm9ybSgpOwogICAgICB9CiAgICB9KTsKCiAgICAkKCcjYWN0aXZpdHknKS5tdWx0aXBsZVNlbGVjdCh7CiAgICAgIHBsYWNlaG9sZGVyOiAiQWN0aXZpdMOpIiwKICAgICAgc2VsZWN0QWxsVGV4dDogIlRvdXQgc8OpbGVjdGlvbm5lciIsCiAgICAgIHNlbGVjdEFsbERlbGltaXRlcjogIiIsCiAgICAgIGFsbFNlbGVjdGVkOiAiVG91cyBzw6lsZWN0aW9ubsOpcyIsCiAgICAgIG1pbmltdW1Db3VudFNlbGVjdGVkOiAyLAogICAgICBjb3VudFNlbGVjdGVkOiAiIyBhY3Rpdml0w6lzIiwKICAgICAgb25PcGVuOiBmdW5jdGlvbigpIHsKICAgICAgICBkaXNhYmxlU2VhcmNoRmllbGRzKCcjYWN0aXZpdHknKTsKICAgICAgICB2YXIgc2VsZWN0T3BlbiA9IHRydWU7CiAgICAgIH0sCiAgICAgIG9uQ2xvc2U6IGZ1bmN0aW9uKCkgewogICAgICAgIHJlZnJlc2hTZWFyY2hGb3JtKCk7CiAgICAgIH0KICAgIH0pOwoKICAgIGlmICgkKCcjbmV3cHJvZ3JhbV9kZWxpdmVyeV9hdF9kaXNwbGF5JykubGVuZ3RoKQogICAgewogICAgICAkKCcjbmV3cHJvZ3JhbV9kZWxpdmVyeV9hdF9kaXNwbGF5JykuZGF0ZXBpY2tlcih7CiAgICAJICAgIGxhbmd1YWdlOiAnZnItRlInLAogICAgICAgIHN0YXJ0RGF0ZTogbmV3IERhdGUoKSwKICAgICAgICBhdXRvSGlkZTogdHJ1ZQogICAgICB9KTsKCiAgICAgIGlmICgkKCcjbmV3cHJvZ3JhbV9kZWxpdmVyeV9hdCcpLnZhbCgpKQogICAgICAgICQoJyNuZXdwcm9ncmFtX2RlbGl2ZXJ5X2F0X2Rpc3BsYXknKS5kYXRlcGlja2VyKCdzZXREYXRlJywgbmV3IERhdGUoJCgnI25ld3Byb2dyYW1fZGVsaXZlcnlfYXQnKS52YWwoKSkpOwoKICAgICAgJCgnI25ld3Byb2dyYW1fZGVsaXZlcnlfYXRfZGlzcGxheScpLm9uKCdwaWNrLmRhdGVwaWNrZXInLCBmdW5jdGlvbiAoZSkgewogICAgICAgICQoJyNuZXdwcm9ncmFtX2RlbGl2ZXJ5X2F0JykudmFsKGZvcm1hdERhdGUoZS5kYXRlKSk7CiAgICAgIAl9KTsKICAgIH0KCiAgICAkKCcuc2VhcmNoIGlucHV0W3R5cGU9InN1Ym1pdCJdJykuY2xpY2soZnVuY3Rpb24oKSB7CiAgICAgIGlmIChzZWxlY3RPcGVuKSB7CiAgICAgICAgcmVmcmVzaFNlYXJjaEZvcm0odHJ1ZSk7CiAgICAgICAgcmV0dXJuIGZhbHNlOwogICAgICB9CiAgICB9KTsKCiAgICAkKCcjc2VjdG9yJykubXVsdGlwbGVTZWxlY3QoJ2VuYWJsZScpOwogICAgJCgnI3R5cGUnKS5tdWx0aXBsZVNlbGVjdCgnZW5hYmxlJyk7CiAgICAkKCcjc3BlY2lmaWMnKS5tdWx0aXBsZVNlbGVjdCgnZW5hYmxlJyk7CiAgICAkKCcjZ2xvYmFsdHlwZScpLm11bHRpcGxlU2VsZWN0KCdlbmFibGUnKTsKICAgICQoJyNyb29tcycpLm11bHRpcGxlU2VsZWN0KCdlbmFibGUnKTsKICAgICQoJyNiZWRyb29tcycpLm11bHRpcGxlU2VsZWN0KCdlbmFibGUnKTsKICAgICQoJyNiZWRzJykubXVsdGlwbGVTZWxlY3QoJ2VuYWJsZScpOwogICAgJCgnI2FubnVpdHknKS5tdWx0aXBsZVNlbGVjdCgnZW5hYmxlJyk7CiAgICAkKCcjcm9vbV90eXBlJykubXVsdGlwbGVTZWxlY3QoJ2VuYWJsZScpOwogICAgJCgnI2Rpc3RyaWN0JykubXVsdGlwbGVTZWxlY3QoJ2VuYWJsZScpOwogICAgJCgnI2FjdGl2aXR5JykubXVsdGlwbGVTZWxlY3QoJ2VuYWJsZScpOwogIH0pOwoKICAvKiogVXBkYXRlIGZpZWxkcyBpbiBzZWFyY2ggZm9ybS4KICAgKiBAcGFyYW0gKGJvb2wpIHN1Ym1pdCA6IElmIHRydWUsIGZvcm0gaXMgc3VibWl0dGVkIGFmdGVyIHVwZGF0ZS4gKi8KICBmdW5jdGlvbiByZWZyZXNoU2VhcmNoRm9ybShzdWJtaXQpCiAgewogICAgaWYgKHR5cGVvZiBuYXR1cmVJZCAhPSAidW5kZWZpbmVkIikKICAgICAgJCgnI25hdHVyZScpLnZhbChuYXR1cmVJZCk7CgogICAgJCgnLnNlYXJjaCAubG9hZGluZycpLnNob3coKTsKICAgIHZhciBzZXJpYWxpemVkID0gJCgiLnNlYXJjaCBmb3JtIikuc2VyaWFsaXplKCk7CiAgICB2YXIgaG9tZXBhZ2UgPSAkKCcuc2VhcmNoIGlucHV0W25hbWU9ImhvbWVwYWdlIl0nKS52YWwoKTsKICAgIAogICAgdmFyIGlzU2VhcmNoQWR2YW5jZWQgPSAkKCcub3ZlcmZsb3dTZWFyY2gnKS5oYXNDbGFzcygnYWR2YW5jZWRTZWFyY2hPcGVuJyk7CiAgICAkKCdpbnB1dCwgc2VsZWN0JykucHJvcCgnZGlzYWJsZWQnLCB0cnVlKTsKICAgICQoIiNzZWN0b3IsICN0eXBlLCAjc3BlY2lmaWMsICNnbG9iYWx0eXBlLCAjcm9vbXMsICNiZWRyb29tcywgI2JlZHMsICNhbm51aXR5LCAjZGlzdHJpY3QsICNhY3Rpdml0eSIpLm11bHRpcGxlU2VsZWN0KCJkaXNhYmxlIik7CiAgICAKICAgICQuYWpheCh7CiAgICAgIHVybDogIi9mci9zZWFyY2hGb3JtIiwKICAgICAgdHlwZTogIlBPU1QiLAogICAgICBkYXRhVHlwZTogImh0bWwiLAogICAgICBkYXRhOiBzZXJpYWxpemVkLAogICAgICBzdWNjZXNzOmZ1bmN0aW9uKGRhdGEsIHRleHRTdGF0dXMpIHsKICAgICAgICAkKCIuc2VhcmNoIikuaHRtbChkYXRhKTsKICAgICAgICAkKCcuc2VhcmNoIC5sb2FkaW5nJykuaGlkZSgpOwoKICAgICAgICBpZiAoJCgnLnNlYXJjaCcpLmhhc0NsYXNzKCdvdmVyZmxvd1NlYXJjaCcpKQogICAgICAgICAgcmVzaXplT3ZlcmZsb3dTZWFyY2goZmFsc2UpOwogICAgICAgIAogICAgICAgIGlmIChpc1NlYXJjaEFkdmFuY2VkKSB7CiAgICAgICAgICAkKCcuYWR2YW5jZWRTZWFyY2gnKS50b2dnbGUoKTsKICAgICAgICAgICQoJy5vdmVyZmxvd1NlYXJjaCcpLmFkZENsYXNzKCdhZHZhbmNlZFNlYXJjaE9wZW4nKTsKICAgICAgICB9CiAgICAgICAgICAKICAgICAgICAgIAogICAgICAgIGlmIChzdWJtaXQpCiAgICAgICAgICAkKCcuc2VhcmNoIGZvcm0nKS5zdWJtaXQoKTsKICAgICAgfQogICAgfSk7CiAgfQoKICBmdW5jdGlvbiBkaXNhYmxlU2VhcmNoRmllbGRzKGl0ZW0pCiAgewogICAgLy8kKCdpbnB1dCwgc2VsZWN0Jykubm90KGl0ZW0pLnByb3AoJ2Rpc2FibGVkJywgdHJ1ZSk7CiAgICAkKCIjc2VjdG9yLCAjdHlwZSwgI3NwZWNpZmljLCAjZ2xvYmFsdHlwZSwgI3Jvb21zLCAjYmVkcm9vbXMsICNiZWRzLCAjYW5udWl0eSwgI2Rpc3RyaWN0LCAjYWN0aXZpdHkiKS5ub3QoaXRlbSkubXVsdGlwbGVTZWxlY3QoImRpc2FibGUiKTsKICB9CgogIGZ1bmN0aW9uIGNvdW50U2VsZWN0ZWRPblNlbGVjdDIoc2VsZWN0b3IpCiAgewogICAgdmFyIHVsZGl2ID0gJChzZWxlY3Rvcikuc2libGluZ3MoJ3NwYW4uc2VsZWN0MicpLmZpbmQoJ3VsJyk7CiAgICB2YXIgY291bnQgPSB1bGRpdi5maW5kKCdsaScpLmxlbmd0aCAtIDE7CgogICAgJChzZWxlY3Rvcikuc2libGluZ3MoJ3NwYW4uc2VsZWN0MicpLmZpbmQoJy5zZWxlY3QyLXNlbGVjdGlvbl9fY2hvaWNlJykucmVtb3ZlKCk7CgogICAgaWYgKGNvdW50ID09IDEpCiAgICAgIHVsZGl2LnByZXBlbmQoJzxsaSBjbGFzcz0ic2VsZWN0Mi1zZWxlY3Rpb25fX2Nob2ljZSI+JysgY291bnQgKycgdmlsbGU8L2xpPicpOwogICAgZWxzZSBpZiAoY291bnQgPiAxKQogICAgICB1bGRpdi5wcmVwZW5kKCc8bGkgY2xhc3M9InNlbGVjdDItc2VsZWN0aW9uX19jaG9pY2UiPicrIGNvdW50ICsnIHZpbGxlczwvbGk+Jyk7CiAgfQoKPC9zY3JpcHQ+CgoKICAgICAgPC9kaXY+CgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9InNpbWlsYXJCbG9jayI+CiAgICAgICAgICA8aDI+UHJvZHVpdHMgc2ltaWxhaXJlczwvaDI+CiAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJpdGVtIj4KICAgICAgICAgICAgICA8YSBocmVmPSIvZnIvcmVjaGVyY2hlL3ZlbnRlLWFwcGFydGVtZW50LTItcGllY2VzLXBhcmlzLTNlbWUtZW5mYW50cy1yb3VnZXMtNzUwMDMtMzYxMjg1NiIgdGl0bGU9IlJVRSBEVVBFVElULVRIT1VBUlMgLSBQQVJJUyAzw6htZSI+CiAgICAgICAgICAgICAgICA8ZGl2PgogICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwaWN0dXJlIHJlc2l6ZVBpY3R1cmUiIGRhdGEtcHJlc2VydmVwb3J0cmFpdD0iZmFsc2UiIGRhdGEtb3ZlcmZsb3c9InRydWUiPgogICAgICAgICAgICAgICAgICAgIDxpbWcgYWx0PSJSVUUgRFVQRVRJVC1USE9VQVJTIC0gUEFSSVMgM8OobWUiIHNyYz0iaHR0cHM6Ly9kMXFmajIzMXVnN3dkdS5jbG91ZGZyb250Lm5ldC9waWN0dXJlcy9lc3RhdGUvMzQzNC8zNDMzMjQ5LzMxNzA3NjUzODVlM2MxMGNiMDc1MzI0LjgxNTUxNzAyX2ZmYzQyNWYwOGFfNDAwLmpwZyIgLz4gICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPGRpdj4KICAgICAgICAgICAgICAgICAgPGgzPkFwcGFydGVtZW50LCBQYXJpcyAzw6htZTwvaDM+CiAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJwcmljZSI+NTY1IDAwMCDigqw8L3A+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iaXRlbSI+CiAgICAgICAgICAgICAgPGEgaHJlZj0iL2ZyL3JlY2hlcmNoZS92ZW50ZS1hcHBhcnRlbWVudC00LXBpZWNlcy1wYXJpcy0xMGVtZS03NTAxMC0zNjU2MTY0IiB0aXRsZT0iQ29tbWUgdW5lIG1haXNvbiwgZW50cmUgR29uY291cnQgZXQgQmVsbGV2aWxsZS4iPgogICAgICAgICAgICAgICAgPGRpdj4KICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icGljdHVyZSByZXNpemVQaWN0dXJlIiBkYXRhLXByZXNlcnZlcG9ydHJhaXQ9ImZhbHNlIiBkYXRhLW92ZXJmbG93PSJ0cnVlIj4KICAgICAgICAgICAgICAgICAgICA8aW1nIGFsdD0iQ29tbWUgdW5lIG1haXNvbiwgZW50cmUgR29uY291cnQgZXQgQmVsbGV2aWxsZS4iIHNyYz0iaHR0cHM6Ly9kMXFmajIzMXVnN3dkdS5jbG91ZGZyb250Lm5ldC9waWN0dXJlcy9lc3RhdGUvMzQzMi8zNDMxODY2LzEyNDM4MDc1ODY1ZTNhZGJmMmQ1Yjg2Ny4wMDUzMzIzM185NDVmMWU0YjEyXzQwMC5qcGciIC8+ICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDxkaXY+CiAgICAgICAgICAgICAgICAgIDxoMz5BcHBhcnRlbWVudCwgUGFyaXMgMTDDqG1lPC9oMz4KICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9InByaWNlIj43OTAgMDAwIOKCrDwvcD4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJpdGVtIj4KICAgICAgICAgICAgICA8YSBocmVmPSIvZnIvcmVjaGVyY2hlL3ZlbnRlLWFwcGFydGVtZW50LTItcGllY2VzLXBhcmlzLTExZW1lLTc1MDExLTM2NzkxNDgiIHRpdGxlPSJFWENMVVNJVklURSA6IFhJw6htZSBwbGFjZSBmb250YWluZSBUaW1iYXVkIHN1YmxpbWUgMiBwacOoY2VzIHZ1ZSBkw6lnYWfDqWUiPgogICAgICAgICAgICAgICAgPGRpdj4KICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icGljdHVyZSByZXNpemVQaWN0dXJlIiBkYXRhLXByZXNlcnZlcG9ydHJhaXQ9ImZhbHNlIiBkYXRhLW92ZXJmbG93PSJ0cnVlIj4KICAgICAgICAgICAgICAgICAgICA8aW1nIGFsdD0iRVhDTFVTSVZJVEUgOiBYScOobWUgcGxhY2UgZm9udGFpbmUgVGltYmF1ZCBzdWJsaW1lIDIgcGnDqGNlcyB2dWUgZMOpZ2Fnw6llIiBzcmM9Imh0dHBzOi8vZDFxZmoyMzF1Zzd3ZHUuY2xvdWRmcm9udC5uZXQvcGljdHVyZXMvZXN0YXRlLzM3NzIvMzc3MTYyOS8xMjQ2MjkwMjg4NWU2N2JkYjMxZGE1NTAuMzI2NTI3ODZfYTBkZTMwNzdjMl80MDAuanBnIiAvPiAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8ZGl2PgogICAgICAgICAgICAgICAgICA8aDM+QXBwYXJ0ZW1lbnQsIFBhcmlzIDExw6htZTwvaDM+CiAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJwcmljZSI+NTcwIDAwMCDigqw8L3A+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgCiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJsb2FuQ2FsY3VsYXRvciI+CiAgICA8aDI+U2ltdWxlciBtb24gZW1wcnVudCBpbW1vYmlsaWVyPC9oMj4KICAgIDxwPlV0aWxpc2V6IGxlIGZvcm11bGFpcmUgc3VpdmFudCBhZmluIGQnb2J0ZW5pciB1bmUgZXN0aW1hdGlvbiBkZSB2b3MgbWVuc3VhbGl0w6lzIGV0IGR1IG1vbnRhbnQgdG90YWwgZGUgZmluYW5jZW1lbnQgcG91ciBsJ2FjaGF0IGRlIGNlIGJpZW4uPC9wPgogICAgPGZvcm0+CiAgICAgIDxkaXYgY2xhc3M9ImZpZWxkIj4KICAgICAgICA8bGFiZWw+TW9udGFudCBkZSBsJ2FjcXVpc2l0aW9uPC9sYWJlbD4KICAgICAgICA8ZGl2IGNsYXNzPSJzdWZmaXgiPgogICAgICAgICAgPGlucHV0IHR5cGU9InRleHQiIG5hbWU9ImxvYW5CYXNlUHJpY2UiIGlkPSJsb2FuQmFzZVByaWNlIiB2YWx1ZT0iNjY5MDAwIiByZWFkb25seT0icmVhZG9ubHkiIC8+CiAgICAgICAgICA8c3Bhbj7igqw8L3NwYW4+CiAgICAgICAgPC9kaXY+CiAgICAgIDwvZGl2PgogICAgICA8ZGl2IGNsYXNzPSJmaWVsZCI+CiAgICAgICAgPGxhYmVsPkFwcG9ydDwvbGFiZWw+CiAgICAgICAgPGRpdiBjbGFzcz0ic3VmZml4Ij4KICAgICAgICAgIDxpbnB1dCB0eXBlPSJ0ZXh0IiBuYW1lPSJsb2FuQ29udHJpYnV0aW9uIiBpZD0ibG9hbkNvbnRyaWJ1dGlvbiIgdmFsdWU9IjAiIC8+CiAgICAgICAgICA8c3Bhbj7igqw8L3NwYW4+CiAgICAgICAgPC9kaXY+CiAgICAgIDwvZGl2PgogICAgICA8ZGl2IGNsYXNzPSJmaWVsZCI+CiAgICAgICAgPGxhYmVsPkR1csOpZSBkdSBwcsOqdDwvbGFiZWw+CiAgICAgICAgPHNlbGVjdCBuYW1lPSJsb2FuRHVyYXRpb24iIGlkPSJsb2FuRHVyYXRpb24iPgogICAgICAgICAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT0iNSI+NSBhbnM8L29wdGlvbj4KICAgICAgICAgICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9IjEwIj4xMCBhbnM8L29wdGlvbj4KICAgICAgICAgICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9IjE1Ij4xNSBhbnM8L29wdGlvbj4KICAgICAgICAgICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9IjIwIj4yMCBhbnM8L29wdGlvbj4KICAgICAgICAgICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9IjI1Ij4yNSBhbnM8L29wdGlvbj4KICAgICAgICAgICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9IjMwIj4zMCBhbnM8L29wdGlvbj4KICAgICAgICAgICAgICAgICAgPC9zZWxlY3Q+CiAgICAgIDwvZGl2PgogICAgICA8ZGl2IGNsYXNzPSJmaWVsZCI+CiAgICAgICAgPGxhYmVsPlRhdXggZCdlbXBydW50PC9sYWJlbD4KICAgICAgICA8ZGl2IGNsYXNzPSJzdWZmaXgiPgogICAgICAgICAgPGlucHV0IHR5cGU9InRleHQiIG5hbWU9ImxvYW5SYXRlIiBpZD0ibG9hblJhdGUiIHZhbHVlPSIiIC8+CiAgICAgICAgICA8c3Bhbj4lPC9zcGFuPgogICAgICAgIDwvZGl2PgogICAgICA8L2Rpdj4KICAgICAgPGRpdiBjbGFzcz0iZmllbGQiPgogICAgICAgIDxpbnB1dCBjbGFzcz0iYnV0dG9uIiB0eXBlPSJidXR0b24iIHZhbHVlPSJTaW11bGVyIiAvPgogICAgICA8L2Rpdj4KICAgIDwvZm9ybT4KCiAgICA8ZGl2IGlkPSJsb2FuUmVzdWx0Ij4KICAgICAgPHVsPgogICAgICAgIDxsaSBjbGFzcz0ibW9udGgiPkVzdGltYXRpb24gZGUgdm9zIG1lbnN1YWxpdMOpcyA6IDxzcGFuPjwvc3Bhbj48L2xpPgogICAgICAgIDxsaSBjbGFzcz0idG90YWwiPk1vbnRhbnQgdG90YWwgZW1wcnVudMOpIDogPHNwYW4+PC9zcGFuPjwvbGk+CiAgICAgICAgPGxpIGNsYXNzPSJjb3N0Ij5Db8O7dCBkdSBjcsOpZGl0IDogPHNwYW4+PC9zcGFuPjwvbGk+CiAgICAgIDwvdWw+CiAgICA8L2Rpdj4KICA8L2Rpdj4KCgo8c3R5bGUgdHlwZT0idGV4dC9jc3MiPgogIC5sb2FuQ2FsY3VsYXRvciAuZmllbGQgeyBtYXJnaW4tYm90dG9tOiAxMHB4OyB9CiAgLmxvYW5DYWxjdWxhdG9yIC5maWVsZCBsYWJlbCB7IGRpc3BsYXk6IGJsb2NrOyBtYXJnaW4tYm90dG9tOiA1cHg7IH0KICAubG9hbkNhbGN1bGF0b3IgLmZpZWxkIC5zdWZmaXggeyBwb3NpdGlvbjogcmVsYXRpdmU7IH0KICAubG9hbkNhbGN1bGF0b3IgLmZpZWxkIC5zdWZmaXggaW5wdXQsCiAgLmxvYW5DYWxjdWxhdG9yIC5maWVsZCAuc3VmZml4IHNlbGVjdCB7CiAgICBwYWRkaW5nLXJpZ2h0OiA0MHB4OwogIH0KICAubG9hbkNhbGN1bGF0b3IgLmZpZWxkIC5zdWZmaXggc3BhbiB7CiAgICBwb3NpdGlvbjogYWJzb2x1dGU7IHRvcDogN3B4OyByaWdodDogMDsgd2lkdGg6IDQwcHg7IHRleHQtYWxpZ246IGNlbnRlcjsKICB9CgogICNsb2FuUmVzdWx0IHsgZGlzcGxheTogbm9uZTsgbWFyZ2luLXRvcDogMjBweDsgfQogICNsb2FuUmVzdWx0IHNwYW4geyBmbG9hdDogcmlnaHQ7IGZvbnQtd2VpZ2h0OiBib2xkOyB9CgogIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDY0MHB4KSB7CiAgICAjbG9hblJlc3VsdCBsaSB7IG1hcmdpbi1ib3R0b206IDVweDsgfQogICAgI2xvYW5SZXN1bHQgc3BhbiB7IGZsb2F0OiBub25lOyBkaXNwbGF5OiBibG9jazsgfQogIH0KCjwvc3R5bGU+CjxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij4KCiAgdmFyIGN1cnJlbmN5ID0gJ+KCrCc7CiAgCiAgICB2YXIgcmF0ZXMgPSB7CiAgICA3OiAxLAogICAgMTA6IDEuMTAsCiAgICAxNTogMS40MCwKICAgIDIwOiAxLjYwLAogICAgMjU6IDEuOTAsCiAgICAzMDogMi43CiAgfTsKICAKCiAgJChmdW5jdGlvbigpIHsKCSAgc2V0TG9hblJhdGUoKTsKCiAgICAkKCcjbG9hbkR1cmF0aW9uJykuY2hhbmdlKGZ1bmN0aW9uKCkgewogICAgICBzZXRMb2FuUmF0ZSgpOwogICAgfSk7CgogICAgJCgnaW5wdXRbdHlwZT0iYnV0dG9uIl0nKS5jbGljayhmdW5jdGlvbigpIHsKICAgICAgc2ltdWxhdGVMb2FuKCk7CiAgICB9KTsKICB9KTsKCiAgZnVuY3Rpb24gc2V0TG9hblJhdGUoKSB7CiAgICB2YXIgcmF0ZSA9IHJhdGVzWyQoJyNsb2FuRHVyYXRpb24nKS52YWwoKV07CiAgICAkKCcjbG9hblJhdGUnKS52YWwocmF0ZSk7CiAgICAgIH0KCiAgZnVuY3Rpb24gc2ltdWxhdGVMb2FuKHJldHVyblZhbHVlKQogIHsKICAgIHZhciByZXR1cm5WYWx1ZSA9IHR5cGVvZiByZXR1cm5WYWx1ZSAhPSAidW5kZWZpbmVkIiA/IHJldHVyblZhbHVlIDogZmFsc2U7CiAgICB2YXIgYW1vdW50ID0gcGFyc2VJbnQoJCgnI2xvYW5CYXNlUHJpY2UnKS52YWwoKSwgMTApIC0gcGFyc2VJbnQoJCgnI2xvYW5Db250cmlidXRpb24nKS52YWwoKSwgMTApOwogICAgdmFyIGR1cmF0aW9uID0gcGFyc2VJbnQoJCgnI2xvYW5EdXJhdGlvbicpLnZhbCgpLCAxMCkgKiAxMjsKICAgIHZhciByYXRlID0gcGFyc2VGbG9hdCgkKCcjbG9hblJhdGUnKS52YWwoKS5yZXBsYWNlKCIsIiwgIi4iKSkgLyAxMDA7CiAgICB2YXIgcHJpY2VCeU1vbnRoID0gcGFyc2VGbG9hdChOdW1iZXIoKGFtb3VudCAqIHJhdGUgLyAxMikgLyAoMSAtIE1hdGgucG93KDEgKyByYXRlIC8gMTIsIC1kdXJhdGlvbikpKSk7CgogICAgaWYgKHJldHVyblZhbHVlKQogICAgewogICAgICByZXR1cm4gcHJpY2VCeU1vbnRoOwogICAgfQogICAgZWxzZQogICAgewogICAgICAkKCcjbG9hblJlc3VsdCAubW9udGggc3BhbicpLmh0bWwocHJpY2VCeU1vbnRoLnRvRml4ZWQoMikudG9Mb2NhbGVTdHJpbmcoKSArICcgJyArIGN1cnJlbmN5KTsKCiAgICAgIGlmIChhbW91bnQgJiYgcHJpY2VCeU1vbnRoICE9ICJOYU4iKQogICAgICAgICQoJyNsb2FuUmVzdWx0Jykuc2hvdygpOwogICAgICBlbHNlCiAgICAgICAgJCgnI2xvYW5SZXN1bHQnKS5oaWRlKCk7CgogICAgICBjYWxjdWxlX21vbnRhbnQoKTsKICAgIH0KICB9CgogIGZ1bmN0aW9uIGNhbGN1bGVfbW9udGFudChyZXR1cm5WYWx1ZSkKICB7CiAgICB2YXIgYW1vdW50ID0gcGFyc2VJbnQoJCgnI2xvYW5CYXNlUHJpY2UnKS52YWwoKSwgMTApIC0gcGFyc2VJbnQoJCgnI2xvYW5Db250cmlidXRpb24nKS52YWwoKSwgMTApOwogICAgdmFyIGR1cmF0aW9uID0gcGFyc2VJbnQoJCgnI2xvYW5EdXJhdGlvbicpLnZhbCgpLCAxMCkgKiAxMjsKICAgIHZhciBwcmljZUJ5TW9udGggPSBzaW11bGF0ZUxvYW4odHJ1ZSk7CiAgICB2YXIgdG90YWxQcmljZSA9IHBhcnNlRmxvYXQocHJpY2VCeU1vbnRoICogZHVyYXRpb24pLnRvRml4ZWQoMik7CiAgICB2YXIgZGlmZiA9IHBhcnNlRmxvYXQodG90YWxQcmljZSAtIGFtb3VudCkudG9GaXhlZCgyKTsKCiAgICAkKCcjbG9hblJlc3VsdCAudG90YWwgc3BhbicpLmh0bWwodG90YWxQcmljZS50b0xvY2FsZVN0cmluZygpICsgJyAnICsgY3VycmVuY3kpOwogICAgJCgnI2xvYW5SZXN1bHQgLmNvc3Qgc3BhbicpLmh0bWwoZGlmZi50b0xvY2FsZVN0cmluZygpICsgJyAnICsgY3VycmVuY3kpOwogIH0KCjwvc2NyaXB0PgogICAgICAgICAgPC9hc2lkZT4KICA8L2Rpdj4KCiAgICAgIDxhc2lkZSBjbGFzcz0ibWFwICIgaWQ9InNob3dNYXAiPgogICAgICAgICAgICAgIDxkaXYgaWQ9Im1hcCIgc3R5bGU9IndpZHRoOiAxMDAlOyBoZWlnaHQ6IDQwMHB4OyIgY2xhc3M9Im9zX21hcCI+PC9kaXY+CjxzY3JpcHQ+CnZhciBtYXA7CiQoJ2hlYWQnKS5hcHBlbmQoJCgnPGxpbmsgcmVsPSJzdHlsZXNoZWV0IiB0eXBlPSJ0ZXh0L2NzcyIgLz4nKS5hdHRyKCdocmVmJywgJy9qcy9jb21tb24vbGVhZmxldC9sZWFmbGV0LmNzcycpKTsKJCgnaGVhZCcpLmFwcGVuZCgkKCc8bGluayByZWw9InN0eWxlc2hlZXQiIHR5cGU9InRleHQvY3NzIiAvPicpLmF0dHIoJ2hyZWYnLCAnL2pzL2NvbW1vbi9MZWFmbGV0Lkdlc3R1cmVIYW5kbGluZy9sZWFmbGV0LWdlc3R1cmUtaGFuZGxpbmcubWluLmNzcycpKTsKdmFyIG1hcmtlcl9tYXBfMTt2YXIgbWFya2VyX21hcF8yO3ZhciBtYXJrZXJzX21hcCA9IFtdO3ZhciBjaXJjbGVzX21hcCA9IFtdO2Z1bmN0aW9uIGxhdW5jaF9tYXBfbWFwKCkgewptYXAgPSBMLm1hcCgnbWFwJywgeyBzY3JvbGxXaGVlbFpvb206IGZhbHNlLCBnZXN0dXJlSGFuZGxpbmc6IEwuQnJvd3Nlci5tb2JpbGUgfSk7CkwudGlsZUxheWVyKCdodHRwczovL2NhcnRvZGItYmFzZW1hcHMte3N9Lmdsb2JhbC5zc2wuZmFzdGx5Lm5ldC9yYXN0ZXJ0aWxlcy92b3lhZ2VyL3t6fS97eH0ve3l9e3J9LnBuZycsIHsKYXR0cmlidXRpb246ICcmY29weTsgPGEgaHJlZj0iaHR0cDovL3d3dy5vcGVuc3RyZWV0bWFwLm9yZy9jb3B5cmlnaHQiIHRhcmdldD0iX2JsYW5rIj5PcGVuU3RyZWV0TWFwPC9hPiB8IDxhIGhyZWY9Imh0dHA6Ly9jYXJ0b2RiLmNvbS9hdHRyaWJ1dGlvbnMiIHRhcmdldD0iX2JsYW5rIj5DYXJ0b0RCPC9hPicKLCBtYXhab29tOiAxOQp9KS5hZGRUbyhtYXApOwp2YXIgaWNvbl9hZ2VuY3kgPSBMLmljb24oeyBpY29uVXJsOiAnL2pzL2NvbW1vbi9sZWFmbGV0L2ltYWdlcy9pY29uX2FnZW5jeS5zdmcnLCBpY29uU2l6ZTogWzMwLCAzOF0sIGljb25BbmNob3I6IFsxNSwgMzhdLCBwb3B1cEFuY2hvcjogWzAsIC0zOF0gfSk7CnZhciBpY29uX3VzZXIgPSBMLmljb24oeyBpY29uVXJsOiAnL2pzL2NvbW1vbi9sZWFmbGV0L2ltYWdlcy9pY29uX3VzZXIuc3ZnJywgaWNvblNpemU6IFszMCwgMzhdLCBpY29uQW5jaG9yOiBbMTUsIDM4XSwgcG9wdXBBbmNob3I6IFswLCAtMzhdIH0pOwp2YXIgaWNvbl90eXBlXzEgPSBMLmljb24oeyBpY29uVXJsOiAnL2pzL2NvbW1vbi9sZWFmbGV0L2ltYWdlcy9pY29uX3R5cGVfMS5zdmcnLCBpY29uU2l6ZTogWzMwLCAzOF0sIGljb25BbmNob3I6IFsxNSwgMzhdLCBwb3B1cEFuY2hvcjogWzAsIC0zOF0gfSk7CnZhciBpY29uX3R5cGVfMiA9IEwuaWNvbih7IGljb25Vcmw6ICcvanMvY29tbW9uL2xlYWZsZXQvaW1hZ2VzL2ljb25fdHlwZV8yLnN2ZycsIGljb25TaXplOiBbMzAsIDM4XSwgaWNvbkFuY2hvcjogWzE1LCAzOF0sIHBvcHVwQW5jaG9yOiBbMCwgLTM4XSB9KTsKdmFyIGljb25fdHlwZV8zID0gTC5pY29uKHsgaWNvblVybDogJy9qcy9jb21tb24vbGVhZmxldC9pbWFnZXMvaWNvbl90eXBlXzMuc3ZnJywgaWNvblNpemU6IFszMCwgMzhdLCBpY29uQW5jaG9yOiBbMTUsIDM4XSwgcG9wdXBBbmNob3I6IFswLCAtMzhdIH0pOwp2YXIgaWNvbl90eXBlXzQgPSBMLmljb24oeyBpY29uVXJsOiAnL2pzL2NvbW1vbi9sZWFmbGV0L2ltYWdlcy9pY29uX3R5cGVfNC5zdmcnLCBpY29uU2l6ZTogWzMwLCAzOF0sIGljb25BbmNob3I6IFsxNSwgMzhdLCBwb3B1cEFuY2hvcjogWzAsIC0zOF0gfSk7CnZhciBpY29uX3R5cGVfNSA9IEwuaWNvbih7IGljb25Vcmw6ICcvanMvY29tbW9uL2xlYWZsZXQvaW1hZ2VzL2ljb25fdHlwZV81LnN2ZycsIGljb25TaXplOiBbMzAsIDM4XSwgaWNvbkFuY2hvcjogWzE1LCAzOF0sIHBvcHVwQW5jaG9yOiBbMCwgLTM4XSB9KTsKdmFyIGljb25fdHlwZV82ID0gTC5pY29uKHsgaWNvblVybDogJy9qcy9jb21tb24vbGVhZmxldC9pbWFnZXMvaWNvbl90eXBlXzYuc3ZnJywgaWNvblNpemU6IFszMCwgMzhdLCBpY29uQW5jaG9yOiBbMTUsIDM4XSwgcG9wdXBBbmNob3I6IFswLCAtMzhdIH0pOwp2YXIgaWNvbl90eXBlXzcgPSBMLmljb24oeyBpY29uVXJsOiAnL2pzL2NvbW1vbi9sZWFmbGV0L2ltYWdlcy9pY29uX3R5cGVfNy5zdmcnLCBpY29uU2l6ZTogWzMwLCAzOF0sIGljb25BbmNob3I6IFsxNSwgMzhdLCBwb3B1cEFuY2hvcjogWzAsIC0zOF0gfSk7CnZhciBpY29uX3R5cGVfOCA9IEwuaWNvbih7IGljb25Vcmw6ICcvanMvY29tbW9uL2xlYWZsZXQvaW1hZ2VzL2ljb25fdHlwZV84LnN2ZycsIGljb25TaXplOiBbMzAsIDM4XSwgaWNvbkFuY2hvcjogWzE1LCAzOF0sIHBvcHVwQW5jaG9yOiBbMCwgLTM4XSB9KTsKdmFyIGljb25fdHlwZV85ID0gTC5pY29uKHsgaWNvblVybDogJy9qcy9jb21tb24vbGVhZmxldC9pbWFnZXMvaWNvbl90eXBlXzkuc3ZnJywgaWNvblNpemU6IFszMCwgMzhdLCBpY29uQW5jaG9yOiBbMTUsIDM4XSwgcG9wdXBBbmNob3I6IFswLCAtMzhdIH0pOwp2YXIgaWNvbl90eXBlXzEwID0gTC5pY29uKHsgaWNvblVybDogJy9qcy9jb21tb24vbGVhZmxldC9pbWFnZXMvaWNvbl90eXBlXzEwLnN2ZycsIGljb25TaXplOiBbMzAsIDM4XSwgaWNvbkFuY2hvcjogWzE1LCAzOF0sIHBvcHVwQW5jaG9yOiBbMCwgLTM4XSB9KTsKdmFyIGljb25fZW1wdHkgPSBMLmljb24oeyBpY29uVXJsOiAnL2pzL2NvbW1vbi9sZWFmbGV0L2ltYWdlcy9pY29uX2VtcHR5LnN2ZycsIGljb25TaXplOiBbMSwgMV0sIGljb25BbmNob3I6IFsxLCAxXSB9KTsKbWFya2VyX21hcF8xID0gTC5tYXJrZXIoWzQ4Ljg1NjAxMDAwMCwgMi4zNjQ2MzAwMDBdLHtpY29uOmljb25fYWdlbmN5fSk7Cm1hcmtlcl9tYXBfMS5hZGRUbyhtYXApOwptYXJrZXJfbWFwXzEuYmluZFBvcHVwKCI8c3Ryb25nPkFnZW5jZSBkZXMgZW5mYW50cyByb3VnZXMgUGxhY2UgZGVzIFZvc2dlczwvc3Ryb25nPjxicj4xNyBwbGFjZSBkZXMgdm9zZ2VzPGJyPjc1MDA0IFBhcmlzIDTDqG1lPGJyPiszMyAoMCkxIDg1IDc0IDAxIDAxIik7Cm1hcmtlcnNfbWFwLnB1c2gobWFya2VyX21hcF8xKTsKbWFya2VyX21hcF8yID0gTC5tYXJrZXIoWzQ4Ljg1MTI0MDAwMCwgMi4zNzIyMjAwMDBdLHtpY29uOmljb25fdHlwZV8xfSk7Cm1hcmtlcl9tYXBfMi5hZGRUbyhtYXApOwptYXJrZXJzX21hcC5wdXNoKG1hcmtlcl9tYXBfMik7CmlmKG1hcmtlcnNfbWFwLmxlbmd0aD4wKSB7CiAgdmFyIGdyb3VwID0gTC5mZWF0dXJlR3JvdXAobWFya2Vyc19tYXApOwogIG1hcC5maXRCb3VuZHMoZ3JvdXAuZ2V0Qm91bmRzKCksIHttYXhab29tOiAxM30pOwp9CmlmKGNpcmNsZXNfbWFwLmxlbmd0aD4wKSB7CiAgZWwgPSBjaXJjbGVzX21hcC5zaGlmdCgpOyAgbWFwLmZpdEJvdW5kcyhbZWwuZ2V0TGF0TG5nKCldLCB7bWF4Wm9vbTogMTN9KTsKfQp9CiQuZ2V0U2NyaXB0KCcvanMvY29tbW9uL2xlYWZsZXQvbGVhZmxldC5qcycsIGZ1bmN0aW9uICgpIHsKICAkLmdldFNjcmlwdCgnL2pzL2NvbW1vbi9MZWFmbGV0Lkdlc3R1cmVIYW5kbGluZy9sZWFmbGV0LWdlc3R1cmUtaGFuZGxpbmcubWluLmpzJyk7CgkJbGF1bmNoX21hcF9tYXAoKTsKCQlpZiAodHlwZW9mIGNhbGxiYWNrX21hcCA9PT0gImZ1bmN0aW9uIikgeyBjYWxsYmFja19tYXAobWFwKTsgfQp9KTsKPC9zY3JpcHQ+CiAgICAgICAgICA8L2FzaWRlPgogIAogICAgICA8YXNpZGUgY2xhc3M9ImNvbnRhY3RMaW5lIGNvbnRhY3RVc2VyIiBpZD0iY29udGFjdExpbmUiPgogICAgICA8ZGl2IGNsYXNzPSJsYXlvdXRMYXJnZSI+CiAgICAgICAgPGgyPkNvbnRhY3RleiB1biBjb25zZWlsbGVyPC9oMj4KICAgICAgICA8ZGl2PgogICAgICAgICAgPGRpdj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iYWdlbmN5Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icGljdHVyZSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgYWx0PSJBZ2VuY2UgZGVzIGVuZmFudHMgcm91Z2VzIFBsYWNlIGRlcyBWb3NnZXMiIHNyYz0iL3VwbG9hZHMvd2Vic2l0ZS8xNzY4LzA0OGUwNWU2NmMwYTQ4MWU0YzQxYmJjMDdiNGUzYmNkODY2MWQ2NmIuanBnIiAvPiAgICAgICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgICAgICA8cCBjbGFzcz0iYWRkcmVzcyBzbWFsbEljb24iPgogICAgICAgICAgICAgICAgICAxNyBwbGFjZSBkZXMgdm9zZ2VzPGJyIC8+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDc1MDA0IFBhcmlzIDTDqG1lPGJyPkZyYW5jZSAgICAgICAgICAgICAgICA8L3A+CiAgICAgICAgICAgICAgICA8cD4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InBob25lIHNtYWxsSWNvbiI+PGEgaHJlZj0idGVsOjAwMzMwMTg1NzQwMTAxIj4rMzMgKDApMSA4NSA3NCAwMSAwMTwvYT48L3NwYW4+PGJyIC8+ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0idXNlciI+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ1c2VyQnViYmxlIHBpY3R1cmUgcmVzaXplUGljdHVyZSIgZGF0YS1wcmVzZXJ2ZXBvcnRyYWl0PSJmYWxzZSIgZGF0YS1vdmVyZmxvdz0idHJ1ZSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgICAgICA8cCBjbGFzcz0ic21hbGxJY29uIHVzZXJOYW1lIj4KICAgICAgICAgICAgICAgICAgPHN0cm9uZz5OYXRoYWxpZSBIQVRFTTwvc3Ryb25nPjxiciAvPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEFnZW50IGltbW9iaWxpZXIgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgICAgIDxwPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icGhvbmUgc21hbGxJY29uIj48YSBocmVmPSJ0ZWw6MDAzMzA2NjA2OTc3NjciPiszMyAoMCk2IDYwIDY5IDc3IDY3PC9hPjwvc3Bhbj48YnIgLz4gICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ibWFpbCBzbWFsbEljb24iPjxhIGhyZWY9Im1haWx0bzpuYXRoYWxpZUBhZ2VuY2VkZXNlbmZhbnRzcm91Z2VzLmNvbSI+bmF0aGFsaWVAYWdlbmNlZGVzZW5mYW50c3JvdWdlcy5jb208L2E+PC9zcGFuPiAgICAgICAgICAgICAgICA8L3A+CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgIDxkaXY+CiAgICAgICAgICAgIAogIDxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij4KICAgIHZhciBjYXB0Y2hhcyA9IFtdOwogICAgdmFyIHN1Ym1pdHRlZEZvcm0gPSBudWxsOwogICAgCiAgICBmdW5jdGlvbiBoYW5kbGVGb3JtKHRva2VuKSB7CiAgICAgIHZhciAkdGhpcyA9ICQoJyMnICsgc3VibWl0dGVkRm9ybSk7CiAgICAgICQuYWpheCh7CiAgICAgICAgbWV0aG9kOiAnUE9TVCcsCiAgICAgICAgdXJsOiAkdGhpcy5hdHRyKCdhY3Rpb24nKSwKICAgICAgICBkYXRhOiAkdGhpcy5zZXJpYWxpemUoKSwKICAgICAgICBzdWNjZXNzOiBmdW5jdGlvbihkYXRhKSB7CiAgICAgICAgICBpZih0eXBlb2Ygc2hvd0Zvcm1DYWxsYmFjayA9PT0gJ2Z1bmN0aW9uJykgc2hvd0Zvcm1DYWxsYmFjaygpOwogICAgICAgICAgJHRoaXMucmVwbGFjZVdpdGgoZGF0YSk7CiAgICAgICAgfSwKICAgICAgICBlcnJvcjogZnVuY3Rpb24oeGhyKSB7CiAgICAgICAgICAkdGhpcy5yZXBsYWNlV2l0aCh4aHIucmVwb25zZVRleHQpOwogICAgICAgIH0KICAgICAgfSk7CiAgICB9CiAgICAKICAgIGZ1bmN0aW9uIGxvYWRDYXB0Y2hhKGZvcm1TZWxlY3RvcikgewogICAgICBpZighZm9ybVNlbGVjdG9yKSBmb3JtU2VsZWN0b3IgPSAnLmN1c3RvbUZvcm0nOwogICAgICAkKGZvcm1TZWxlY3RvciArICcgaW5wdXRbdHlwZT0ic3VibWl0Il0nKS5vbignY2xpY2snLCBmdW5jdGlvbihldmVudCkgeyBldmVudC5wcmV2ZW50RGVmYXVsdCgpOyBzdWJtaXR0ZWRGb3JtID0gJCh0aGlzKS5jbG9zZXN0KCdmb3JtJykuYXR0cignaWQnKTsgZ3JlY2FwdGNoYS5leGVjdXRlKGNhcHRjaGFzWyQodGhpcykuY2xvc2VzdCgnZm9ybScpLmF0dHIoJ2lkJyldKTsgfSk7CiAgICAgICQoZm9ybVNlbGVjdG9yICsgJyAuZy1yZWNhcHRjaGEnKS5lYWNoKGZ1bmN0aW9uKCkgewogICAgICAgIGlmKGNhcHRjaGFzLmluZGV4T2YoJCh0aGlzKS5jbG9zZXN0KCdmb3JtJykuYXR0cignaWQnKSkgPT0gLTEpIHsKICAgICAgICAgIHZhciAkdGhpcyA9ICQodGhpcyk7CiAgICAgICAgICB2YXIgY2FwdGNoYUlEID0gZ3JlY2FwdGNoYS5yZW5kZXIoJCh0aGlzKS5hdHRyKCdpZCcpLCB7ICdzaXRla2V5JyA6ICR0aGlzLmRhdGEoJ3NpdGVrZXknKS50b1N0cmluZygpLCAnc2l6ZScgOiAkdGhpcy5kYXRhKCdzaXplJykudG9TdHJpbmcoKSwgJ2NhbGxiYWNrJyA6ICR0aGlzLmRhdGEoJ2NhbGxiYWNrJykudG9TdHJpbmcoKSB9KTsKICAgICAgICAgIGNhcHRjaGFzWyQodGhpcykuY2xvc2VzdCgnZm9ybScpLmF0dHIoJ2lkJyldID0gY2FwdGNoYUlEOwogICAgICAgIH0KICAgICAgfSk7CiAgICB9CiAgPC9zY3JpcHQ+Cjxmb3JtIGlkPSJjb250YWN0LWZvcm0tNjA3MjYwMzI5IiBjbGFzcz0iY3VzdG9tRm9ybSBtb3JlRm9ybSAiIG1ldGhvZD0icG9zdCIgYWN0aW9uPSIvY29udGFjdEZvcm0vdjMiPiAgICAKICA8ZGl2IGNsYXNzPSJjb250YWN0LXVzLWNvbnRlbnQiPgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImZpZWxkIGFnZW5jeUlkIGRyb3Bkb3duIj4KICAgICAgICA8aW5wdXQgdHlwZT0iaGlkZGVuIiBuYW1lPSJjdXN0b21lclthZ2VuY3lfaWRdIiB2YWx1ZT0iMTEyMzMiIGlkPSJjdXN0b21lcl9hZ2VuY3lfaWQiIC8+ICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImZpZWxkIGxhc3RuYW1lIj4KICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJ0ZXh0IiBuYW1lPSJjdXN0b21lcltsYXN0bmFtZV0iIHBsYWNlaG9sZGVyPSJOb20iIGlkPSJjdXN0b21lcl9sYXN0bmFtZSIgLz4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJmaWVsZCBlbWFpbCI+CiAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0idGV4dCIgbmFtZT0iY3VzdG9tZXJbZW1haWxdIiBwbGFjZWhvbGRlcj0iZS1tYWlsIiBpZD0iY3VzdG9tZXJfZW1haWwiIC8+ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZmllbGQgdGVsIj4KICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJ0ZXh0IiBuYW1lPSJjdXN0b21lclt0ZWxdIiBwbGFjZWhvbGRlcj0iVMOpbMOpcGhvbmUiIGlkPSJjdXN0b21lcl90ZWwiIC8+ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZmllbGQgbWVzc2FnZSI+CiAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGV4dGFyZWEgcm93cz0iNCIgY29scz0iMzAiIG5hbWU9ImN1c3RvbWVyW21lc3NhZ2VdIiBwbGFjZWhvbGRlcj0iTWVzc2FnZSIgaWQ9ImN1c3RvbWVyX21lc3NhZ2UiPjwvdGV4dGFyZWE+ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAKICAgIDxkaXYgY2xhc3M9ImNvbnRhY3R1cy1ncnBkIj4KICAgICAgICAgICAgPGlucHV0IHR5cGU9ImNoZWNrYm94IiBuYW1lPSJjdXN0b21lcltncnBkX2FncmVlbWVudF0iIGlkPSJjdXN0b21lcl9ncnBkX2FncmVlbWVudCIgLz4gICAgICA8bGFiZWwgZm9yPSJjdXN0b21lcl9ncnBkX2FncmVlbWVudCI+SuKAmWFpIGx1IGV0IGonYWNjZXB0ZSBsYSA8YSB0YXJnZXQ9Il9ibGFuayIgaHJlZj0iL2ZyL2Rvbm5lZXMtcGVyc29ubmVsbGVzIj5wb2xpdGlxdWUgZGUgY29uZmlkZW50aWFsaXTDqTwvYT4gZHUgc2l0ZTwvbGFiZWw+CiAgICA8L2Rpdj4KICA8L2Rpdj4KICAKICA8aW5wdXQgdHlwZT0iaGlkZGVuIiBuYW1lPSJjdXN0b21lcltpZF0iIGlkPSJjdXN0b21lcl9pZCIgLz48aW5wdXQgdHlwZT0iaGlkZGVuIiBuYW1lPSJjdXN0b21lclthY3RpdmVfaXNdIiB2YWx1ZT0iMSIgaWQ9ImN1c3RvbWVyX2FjdGl2ZV9pcyIgLz48aW5wdXQgdHlwZT0iaGlkZGVuIiBuYW1lPSJjdXN0b21lclt3ZWJzaXRlX2lkXSIgdmFsdWU9IjE3NjgiIGlkPSJjdXN0b21lcl93ZWJzaXRlX2lkIiAvPjxpbnB1dCB0eXBlPSJoaWRkZW4iIG5hbWU9ImN1c3RvbWVyW2FnZW5jeV9pZF0iIHZhbHVlPSIxMTIzMyIgaWQ9ImN1c3RvbWVyX2FnZW5jeV9pZCIgLz48aW5wdXQgdHlwZT0iaGlkZGVuIiBuYW1lPSJjdXN0b21lclt1c2VyX2lkXSIgaWQ9ImN1c3RvbWVyX3VzZXJfaWQiIC8+PGlucHV0IHR5cGU9ImhpZGRlbiIgbmFtZT0iY3VzdG9tZXJbZXN0YXRlX2lkXSIgdmFsdWU9IjM2NDA0ODMiIGlkPSJjdXN0b21lcl9lc3RhdGVfaWQiIC8+PGlucHV0IHR5cGU9ImhpZGRlbiIgbmFtZT0iY3VzdG9tZXJbcmVxdWVzdF9pZF0iIHZhbHVlPSIyIiBpZD0iY3VzdG9tZXJfcmVxdWVzdF9pZCIgLz48aW5wdXQgdHlwZT0iaGlkZGVuIiBuYW1lPSJjdXN0b21lcltsYW5ndWFnZV0iIHZhbHVlPSJmciIgaWQ9ImN1c3RvbWVyX2xhbmd1YWdlIiAvPjxpbnB1dCB0eXBlPSJoaWRkZW4iIG5hbWU9ImN1c3RvbWVyW19jc3JmX3Rva2VuXSIgdmFsdWU9IjY4ZDE4OWJkOTE5OGQwMzFkNWVjMzliZTNkZTg4MGFkIiBpZD0iY3VzdG9tZXJfX2NzcmZfdG9rZW4iIC8+ICAKICAgICAgICA8aW5wdXQgdHlwZT0iaGlkZGVuIiBuYW1lPSJ0eXBlIiB2YWx1ZT0ibW9yZSI+CiAgICAgICAgCiAgICAKICA8ZGl2IGlkPSJjYXB0Y2hhLTYwNzI2MDMyOSIgY2xhc3M9ImctcmVjYXB0Y2hhIiBkYXRhLXNpdGVrZXk9IjZMZURqSDBVQUFBQUFHSWRERHdqbXRXeGJnR29PT083RTBKUHRfc20iIGRhdGEtY2FsbGJhY2s9ImhhbmRsZUZvcm0iIGRhdGEtc2l6ZT0iaW52aXNpYmxlIj48L2Rpdj4KICAKICA8aW5wdXQgdHlwZT0ic3VibWl0IiB2YWx1ZT0iRW52b3llciIgY2xhc3M9ImNvbnRhY3R1cy1zZW5kIi8+CiAgPC9mb3JtPiAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2Rpdj4KICAgICAgPC9kaXY+CiAgICA8L2FzaWRlPgogIDwvc2VjdGlvbj4KCjxzY3JpcHQ+IWZ1bmN0aW9uKGQscyxpZCl7dmFyIGpzLGZqcz1kLmdldEVsZW1lbnRzQnlUYWdOYW1lKHMpWzBdO2lmKCFkLmdldEVsZW1lbnRCeUlkKGlkKSl7anM9ZC5jcmVhdGVFbGVtZW50KHMpO2pzLmlkPWlkO2pzLnNyYz0iLy9wbGF0Zm9ybS50d2l0dGVyLmNvbS93aWRnZXRzLmpzIjtmanMucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUoanMsZmpzKTt9fShkb2N1bWVudCwic2NyaXB0IiwidHdpdHRlci13anMiKTs8L3NjcmlwdD4KICAgIDwvZGl2PgoKICAgIDxmb290ZXI+CiAgICAgIDxkaXYgY2xhc3M9ImxheW91dExhcmdlIGNsZWFyZml4Ij4KICAgICAgICAKICAgICAgICAKICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ibmV0d29yayI+CiAgICAgICAgICAgIDxoMz5Ob3RyZSByw6lzZWF1PC9oMz4KICAgICAgICAgICAgPHVsIGNsYXNzPSJzb2NpYWxMaW5rcyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaSBjbGFzcz0iaWNvbiBzb2NpYWwiPjxhIGNsYXNzPSJmYWNlYm9vayIgdGFyZ2V0PSJfYmxhbmsiIGhyZWY9Imh0dHBzOi8vd3d3LmZhY2Vib29rLmNvbS9BZ2VuY2UtZGVzLUVuZmFudHMtUm91Z2VzLTI2Njc0NTk3MDExNDQxMCI+ZmFjZWJvb2s8L2E+PC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGkgY2xhc3M9Imljb24gc29jaWFsIj48YSBjbGFzcz0iZW1haWwiIGhyZWY9Ii9mci9jb250YWN0ZXotbm91cyI+RW1haWw8L2E+PC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICA8L3VsPgogICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJhZ2VuY3kiPgogICAgICAgICAgICAgICAgICAgICAgPGgzPkFnZW5jZSBkZXMgRW5mYW50cyBSb3VnZXM8L2gzPgogICAgICAgICAgICA8cCBjbGFzcz0iYWRkcmVzcyBzbWFsbEljb24iPgogICAgICAgICAgICAgIDQ0IHJ1ZSBkZSBCcmV0YWduZTxicj4gICAgICAgICAgICAgICAgICAgICAgICAgICAgNzUwMDMgUGFyaXMgM8OobWU8YnI+CiAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgPHA+CiAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InBob25lIHNtYWxsSWNvbiI+PGEgaHJlZj0idGVsOjAwMzMwMTUzMDEwMDQwIj4rMzMgKDApMSA1MyAwMSAwMCA0MDwvYT48L3NwYW4+PGJyIC8+ICAgICAgICAgICAgICAgICAgICAgICAgICA8L3A+CiAgICAgICAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICA8ZGl2IGNsYXNzPSJzZWN0b3JzIj4KICAgICAgICAgICAgICAgICAgICAgIDxoMz5OYXZpZ2F0aW9uPC9oMz4KICAgICAgICAgICAgPHVsPjxsaSBjbGFzcz0ibHYxIj48YSB0YXJnZXQ9Il9zZWxmIiBjbGFzcz0iIiBocmVmPSIvZnIvIj5BY2N1ZWlsPC9hPjwvbGk+PGxpIGNsYXNzPSJsdjEiPjxhIHRhcmdldD0iX3NlbGYiIGNsYXNzPSIiIGhyZWY9Ii9mci92ZW50ZSI+VmVudGU8L2E+PC9saT48bGkgY2xhc3M9Imx2MSI+PGEgdGFyZ2V0PSJfc2VsZiIgY2xhc3M9IiIgaHJlZj0iL2ZyL2xvY2F0aW9uIj5Mb2NhdGlvbjwvYT48L2xpPjxsaSBjbGFzcz0ibHYxIj48YSB0YXJnZXQ9Il9zZWxmIiBjbGFzcz0iIiBocmVmPSIvZnIvY29tbWVyY2VzIj5Db21tZXJjZXM8L2E+PC9saT48bGkgY2xhc3M9Imx2MSI+PGEgdGFyZ2V0PSJfc2VsZiIgY2xhc3M9IiIgaHJlZj0iL2ZyL2VzdGltYXRpb24iPkVzdGltYXRpb248L2E+PC9saT48bGkgY2xhc3M9Imx2MSI+PGEgdGFyZ2V0PSJfc2VsZiIgY2xhc3M9IiIgaHJlZj0iL2ZyL2Jsb2ciPkJsb2c8L2E+PC9saT48bGkgY2xhc3M9Imx2MSI+PGEgdGFyZ2V0PSJfc2VsZiIgY2xhc3M9IiIgaHJlZj0iL2ZyL25vdHJlLWFnZW5jZSI+Tm90cmUgYWdlbmNlPC9hPjwvbGk+PGxpIGNsYXNzPSJsdjEiPjxhIHRhcmdldD0iX3NlbGYiIGNsYXNzPSIiIGhyZWY9Ii9mci9jb250YWN0ZXotbm91cyI+Q29udGFjdGV6LW5vdXM8L2E+PC9saT48L3VsPiAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICA8L2Rpdj4KICAgICAgPGRpdiBjbGFzcz0iY3JlZGl0cyI+CiAgICAgICAgPHAgY2xhc3M9ImxheW91dExhcmdlIj7CqSAyMDIwIEFnZW5jZSBkZXMgRW5mYW50cyBSb3VnZXMgLSA8YSBocmVmPSIvZnIvbWVudGlvbnMtbGVnYWxlcyI+TWVudGlvbnMgbMOpZ2FsZXMgLyBub3MgaG9ub3JhaXJlczwvYT4gLSA8YSBocmVmPSIvZnIvZG9ubmVlcy1wZXJzb25uZWxsZXMiPkRvbm7DqWVzIHBlcnNvbm5lbGxlczwvYT4gPHNwYW4gY2xhc3M9ImFwaW1vIj7igJMgRGVzaWduIGJ5IDxhIHRhcmdldD0iX2JsYW5rIiBocmVmPSJodHRwczovL2FwaW1vLm5ldC8iPmFwaW1v4oSiIExvZ2ljaWVsIGltbW9iaWxpZXI8L2E+IDwvc3Bhbj4KICAgICAgICAgICAgICAgIDwvcD4KICAgICAgPC9kaXY+CiAgICA8L2Zvb3Rlcj4KICAgIAogICAgPGRpdiBjbGFzcz0iY29va2llQ2hvaWNlIj4KICA8cD5FbiBjbGlxdWFudCBzdXIgIkonYWNjZXB0ZSIsIHZvdXMgYXV0b3Jpc2V6IGwndXRpbGlzYXRpb24gZGUgY29va2llcyBhZmluIGRlIHZvdXMgYXNzdXJlciB1bmUgZXhwZXJpZW5jZSBvcHRpbWFsZSBzdXIgY2Ugc2l0ZS48L3A+CiAgPHA+PGEgaHJlZj0iL2ZyL21lbnRpb25zLWxlZ2FsZXMiPkVuIHNhdm9pciBwbHVzPC9hPiA8YSBjbGFzcz0iY2xvc2UiIGhyZWY9IiMiPkonYWNjZXB0ZTwvYT48L3A+CjwvZGl2PgoKPHN0eWxlIHR5cGU9InRleHQvY3NzIj4KICAuY29va2llQ2hvaWNlIHsgcG9zaXRpb246IGZpeGVkOyBib3R0b206IDA7IGxlZnQ6IDA7IHdpZHRoOiAxMDAlOyBwYWRkaW5nOiAxMHB4OyBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsMCwwLDAuOSk7IHotaW5kZXg6IDk5OTsgfQogIC5jb29raWVDaG9pY2UgcCB7IHBhZGRpbmc6IDA7IG1hcmdpbjogMDsgY29sb3I6ICNGRkY7IHRleHQtYWxpZ246IGNlbnRlcjsgbWFyZ2luLWJvdHRvbTogMTBweDsgfQogIC5jb29raWVDaG9pY2UgcDpsYXN0LW9mLXR5cGUgeyBtYXJnaW46IDA7IH0KICAuY29va2llQ2hvaWNlIGEgeyBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7IGNvbG9yOiAjQUFBOyBtYXJnaW4tbGVmdDogMjBweDsgfQogIC5jb29raWVDaG9pY2UgYTpmaXJzdC1jaGlsZCB7IG1hcmdpbjogMDsgfQo8L3N0eWxlPgo8c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCI+CiAgJCgnLmNvb2tpZUNob2ljZSAuY2xvc2UnKS5jbGljayhmdW5jdGlvbihlKSB7CiAgICBlLnByZXZlbnREZWZhdWx0KCk7CiAgICAkLmFqYXgoewogICAgICB1cmw6ICIvbGVnYWwvY29va2llY29uc2VudCIsCiAgICAgIHR5cGU6ICJQT1NUIiwKICAgICAgc3VjY2VzczpmdW5jdGlvbihkYXRhLCB0ZXh0U3RhdHVzKSB7CiAgICAgICAgJCgnLmNvb2tpZUNob2ljZScpLnNsaWRlVXAoJ2Zhc3QnKTsKICAgICAgICBpZiAodHlwZW9mIGRhdGFMYXllciAhPSAndW5kZWZpbmVkJykKICAgICAgICAgIGRhdGFMYXllci5wdXNoKHsnZXZlbnQnIDogJ2Nvb2tpZV9jb25zZW50X2NsaWNrJ30pCiAgICAgIH0KICAgIH0pOwogIH0pOwo8L3NjcmlwdD4KCiAgICAKICAgIAogICAgPHNjcmlwdD4oZnVuY3Rpb24oZCwgcywgaWQpIHsKICAgICAgdmFyIGpzLCBmanMgPSBkLmdldEVsZW1lbnRzQnlUYWdOYW1lKHMpWzBdOwogICAgICBpZiAoZC5nZXRFbGVtZW50QnlJZChpZCkpIHJldHVybjsKICAgICAganMgPSBkLmNyZWF0ZUVsZW1lbnQocyk7IGpzLmlkID0gaWQ7CiAgICAgIGpzLnNyYyA9ICIvL2Nvbm5lY3QuZmFjZWJvb2submV0L2ZyX0ZSL2FsbC5qcyN4ZmJtbD0xIjsKICAgICAgZmpzLnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKGpzLCBmanMpOwogICAgfShkb2N1bWVudCwgJ3NjcmlwdCcsICdmYWNlYm9vay1qc3NkaycpKTs8L3NjcmlwdD4KICAgIDxzY3JpcHQgdHlwZT0iYXBwbGljYXRpb24vamF2YXNjcmlwdCIgc3JjPSIvanMvY29tbW9uL2pxdWVyeS11aS9qcXVlcnktdWktMS4xMC4yLmN1c3RvbS5taW4uanMiPjwvc2NyaXB0PgogICAgPHNjcmlwdCB0eXBlPSJhcHBsaWNhdGlvbi9qYXZhc2NyaXB0IiBzcmM9Imh0dHBzOi8vZDF0ZzkwYndqdzNldGguY2xvdWRmcm9udC5uZXQvanMvbW9kZXJuaXpyLmN1c3RvbS5qcyI+PC9zY3JpcHQ+CiAgICA8c2NyaXB0IHR5cGU9ImFwcGxpY2F0aW9uL2phdmFzY3JpcHQiIHNyYz0iaHR0cHM6Ly9kMXRnOTBid2p3M2V0aC5jbG91ZGZyb250Lm5ldC9qcy9mYW5jeWJveDIvanF1ZXJ5LmZhbmN5Ym94LnBhY2suanMiPjwvc2NyaXB0PgogICAgPHNjcmlwdCB0eXBlPSJhcHBsaWNhdGlvbi9qYXZhc2NyaXB0IiBzcmM9Imh0dHBzOi8vZDF0ZzkwYndqdzNldGguY2xvdWRmcm9udC5uZXQvanMvb3dsLWNhcm91c2VsMi9vd2wuY2Fyb3VzZWwubWluLmpzIj48L3NjcmlwdD4KICAgIDxzY3JpcHQgdHlwZT0iYXBwbGljYXRpb24vamF2YXNjcmlwdCIgc3JjPSJodHRwczovL2QxdGc5MGJ3anczZXRoLmNsb3VkZnJvbnQubmV0L2pzL211bHRpcGxlLXNlbGVjdC9tdWx0aXBsZS1zZWxlY3QubWluLmpzIj48L3NjcmlwdD4KICAgIDxzY3JpcHQgdHlwZT0iYXBwbGljYXRpb24vamF2YXNjcmlwdCIgc3JjPSJodHRwczovL2QxdGc5MGJ3anczZXRoLmNsb3VkZnJvbnQubmV0L2pzL2RhdGVwaWNrZXIvZGF0ZXBpY2tlci5taW4uanMiPjwvc2NyaXB0PgogICAgPHNjcmlwdCB0eXBlPSJhcHBsaWNhdGlvbi9qYXZhc2NyaXB0IiBzcmM9Imh0dHBzOi8vZDF0ZzkwYndqdzNldGguY2xvdWRmcm9udC5uZXQvanMvZGF0ZXBpY2tlci9kYXRlcGlja2VyLmZyLUZSLmpzIj48L3NjcmlwdD4KICAgIDxzY3JpcHQgc3JjPSJodHRwczovL2NkbmpzLmNsb3VkZmxhcmUuY29tL2FqYXgvbGlicy9zZWxlY3QyLzQuMC4zL2pzL3NlbGVjdDIuZnVsbC5taW4uanMiPjwvc2NyaXB0PgogICAgPHNjcmlwdCBzcmM9Ii9qcy9jb21tb24vc2VsZWN0Mi5vcHRncm91cFNlbGVjdC9zZWxlY3QyLm9wdGdyb3VwU2VsZWN0LmpzIj48L3NjcmlwdD4KICAgIDxzY3JpcHQgdHlwZT0iYXBwbGljYXRpb24vamF2YXNjcmlwdCIgc3JjPSJodHRwczovL2NkbmpzLmNsb3VkZmxhcmUuY29tL2FqYXgvbGlicy9tYWduaWZpYy1wb3B1cC5qcy8xLjEuMC9qcXVlcnkubWFnbmlmaWMtcG9wdXAubWluLmpzIj48L3NjcmlwdD4KICAgIDxzY3JpcHQgdHlwZT0iYXBwbGljYXRpb24vamF2YXNjcmlwdCIgc3JjPSJodHRwczovL2NkbmpzLmNsb3VkZmxhcmUuY29tL2FqYXgvbGlicy9qcXVlcnkudG91Y2hzd2lwZS8xLjYuMTkvanF1ZXJ5LnRvdWNoU3dpcGUuanMiPjwvc2NyaXB0PgogICAgICAgICAgICA8c2NyaXB0IHR5cGU9ImFwcGxpY2F0aW9uL2phdmFzY3JpcHQiIHNyYz0iL2pzL2ZyZWUxMC9tYWluLmpzIj48L3NjcmlwdD4KICA8L2JvZHk+CjwvaHRtbD4K
    http_version: null
  recorded_at: Fri, 03 Apr 2020 13:33:43 GMT
- request:
    method: get
    uri: https://www.agencedesenfantsrouges.com/fr/recherche/vente-appartement-1-piece-paris-5eme-sorbonne-75005-3605651
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Fri, 03 Apr 2020 13:33:43 GMT
      Server:
      - Apache/2.4.25 (Debian)
      Upgrade:
      - h2,h2c
      Connection:
      - Upgrade
      Set-Cookie:
      - symfony=6rbq1cteb77ju5665kss6c5to2; path=/
      Vary:
      - Accept-Encoding
      Content-Length:
      - '12641'
      Content-Type:
      - text/html; charset=utf-8
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: null
  recorded_at: Fri, 03 Apr 2020 13:33:44 GMT
- request:
    method: get
    uri: https://www.agencedesenfantsrouges.com/fr/recherche/vente-appartement-4-pieces-paris-10eme-75010-3667834
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Fri, 03 Apr 2020 13:33:44 GMT
      Server:
      - Apache/2.4.25 (Debian)
      Upgrade:
      - h2,h2c
      Connection:
      - Upgrade
      Set-Cookie:
      - symfony=958pldh14pvj29qafn59c8i6g2; path=/
      Vary:
      - Accept-Encoding
      Content-Length:
      - '12349'
      Content-Type:
      - text/html; charset=utf-8
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        PCFET0NUWVBFIGh0bWw+CjxodG1sIGxhbmc9ImZyIiA+CiAgPGhlYWQ+CiAgICA8bWV0YSBjaGFyc2V0PSJ1dGYtOCI+CgogICAgCiAgICAgICAgICAgICAgICAgIDxsaW5rIHJlbD0iYWx0ZXJuYXRlIiBocmVmPSJodHRwczovL3d3dy5hZ2VuY2VkZXNlbmZhbnRzcm91Z2VzLmNvbS9mci9yZWNoZXJjaGUvdmVudGUtYXBwYXJ0ZW1lbnQtNC1waWVjZXMtcGFyaXMtMTBlbWUtNzUwMTAtMzY2NzgzNCIgaHJlZmxhbmc9ImZyIiAvPgogICAgICAgICAgICAgIDxsaW5rIHJlbD0iYWx0ZXJuYXRlIiBocmVmPSJodHRwczovL3d3dy5hZ2VuY2VkZXNlbmZhbnRzcm91Z2VzLmNvbS9lbi9zZWFyY2gvc2FsZS1hcGFydG1lbnQtNC1yb29tcy1wYXJpcy0xMGVtZS03NTAxMC0zNjY3ODM0IiBocmVmbGFuZz0iZW4iIC8+CiAgICAgICAgICAgICAgPGxpbmsgcmVsPSJhbHRlcm5hdGUiIGhyZWY9Imh0dHBzOi8vd3d3LmFnZW5jZWRlc2VuZmFudHNyb3VnZXMuY29tL2l0L3NlYXJjaC92ZW5kaXRhLWFwcGFydGFtZW50by00LXJvb21zLXBhcmlzLTEwZW1lLTc1MDEwLTM2Njc4MzQiIGhyZWZsYW5nPSJpdCIgLz4KICAgICAgICAgIAogICAgCiAgICA8bWV0YSBuYW1lPSJ2aWV3cG9ydCIgY29udGVudD0id2lkdGg9ZGV2aWNlLXdpZHRoLGluaXRpYWwtc2NhbGU9MSIgLz4KICAgIDxtZXRhIG5hbWU9ImRlc2NyaXB0aW9uIiBjb250ZW50PSJBIHByb3hpbWl0w6kgZHUgbcOpdHJvIEdvbmNvdXJ0IGRhbnMgbGUgMTDDqG1lIGFycm9uZGlzc2VtZW50LCAgbG9jYWwgY29tbWVyY2lhbCBkJ2V4Y2VwdGlvbiDDoCB1c2FnZSBkJ2hhYml0YXRpb24gZGUgMTYyIG0yIGRpdmlzw6kgc3VyIGRldXggbml2ZWF1eC4gQ2UgYmllbiwgdHLDqHMgbHVtaW5ldXgsIGLDqW7DqWZpY2llIGR1IGNhbG1lIGFic29sdSBkJ3VuZSBjb3VyIHRyw6hzIGRlbWFuZMOpZS4NCkRldXggZW50csOpZXMgcGVybWV0dGVudOKApiIgLz4KPG1ldGEgbmFtZT0ia2V5d29yZHMiIGNvbnRlbnQ9IlZlbnRlLEFwcGFydGVtZW50LFBhcmlzIDEww6htZSxGcmFuY2UsNCBwacOoY2VzLENvdXIgQ291ciIgLz4KPG1ldGEgbmFtZT0icm9ib3RzIiBjb250ZW50PSJpbmRleCwgZm9sbG93IiAvPgogICAgPG1ldGEgcHJvcGVydHk9Im9nOnVybCIgY29udGVudD0iaHR0cHM6Ly93d3cuYWdlbmNlZGVzZW5mYW50c3JvdWdlcy5jb20vZnIvcmVjaGVyY2hlL3ZlbnRlLWFwcGFydGVtZW50LTQtcGllY2VzLXBhcmlzLTEwZW1lLTc1MDEwLTM2Njc4MzQiPiAgICA8bWV0YSBwcm9wZXJ0eT0ib2c6dGl0bGUiIGNvbnRlbnQ9IlBhcmlzIDEww6htZSA6IGxvZnQgZGFucyB1bmUgdHLDqHMgYmVsbGUgY291ciBwYXbDqWUgZXQgY2FsbWUiPiAgICA8bWV0YSBwcm9wZXJ0eT0ib2c6ZGVzY3JpcHRpb24iIGNvbnRlbnQ9IkEgcHJveGltaXTDqSBkdSBtw6l0cm8gR29uY291cnQgZGFucyBsZSAxMMOobWUgYXJyb25kaXNzZW1lbnQsICBsb2NhbCBjb21tZXJjaWFsIGQnZXhjZXB0aW9uIMOgIHVzYWdlIGQnaGFiaXRhdGlvbiBkZSAxNjIgbTIgZGl2aXPDqSBzdXIgZGV1eCBuaXZlYXV4LiBDZSBiaWVuLCB0csOocyBsdW1pbmV1eCwgYsOpbsOpZmljaWUgZHUgY2FsbWUgYWJzb2x14oCmIj4gICAgPG1ldGEgcHJvcGVydHk9Im9nOmltYWdlIiBjb250ZW50PSJodHRwczovL2QxcWZqMjMxdWc3d2R1LmNsb3VkZnJvbnQubmV0L3BpY3R1cmVzL2VzdGF0ZS8zNjQyLzM2NDE2MDgvMTA4NzM4MDEwODVlNTExZDQ3NDBlNGI1LjIwNDk5NTAyX2Q3YWY5ZWRmODlfMTAyNC5qcGciPiAgICA8dGl0bGU+UGFyaXMgMTDDqG1lIDogbG9mdCBkYW5zIHVuZSB0csOocyBiZWxsZSBjb3VyIHBhdsOpZSBldCBjYWxtZTwvdGl0bGU+CiAgICA8bWV0YSBuYW1lPSJ0d2l0dGVyOmNhcmQiIGNvbnRlbnQ9InN1bW1hcnkiPjwvbWV0YT4KICAgIDxsaW5rIHJlbD0iZG5zLXByZWZldGNoIiBocmVmPSJodHRwczovL2QxdGc5MGJ3anczZXRoLmNsb3VkZnJvbnQubmV0Ij4KICAgIDxzY3JpcHQgc3JjPSJodHRwczovL2FqYXguZ29vZ2xlYXBpcy5jb20vYWpheC9saWJzL2pxdWVyeS8xLjkuMS9qcXVlcnkubWluLmpzIj48L3NjcmlwdD4KICAgIDxzY3JpcHQ+d2luZG93LmpRdWVyeSB8fCBkb2N1bWVudC53cml0ZSgnPHNjcmlwdCBzcmM9Ii9qcy9jb21tb24vanF1ZXJ5Lm1pbi5qcyI+XHgzQy9zY3JpcHQ+Jyk8L3NjcmlwdD4KICAgIDxsaW5rIHJlbD0ic3R5bGVzaGVldCIgdHlwZT0idGV4dC9jc3MiIG1lZGlhPSJzY3JlZW4iIGhyZWY9Ii9jc3MvY29tbW9uL3V0aWxzLmNzcyI+PHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiIHNyYz0iL2pzL2NvbW1vbi9qcXVlcnkud2FpdGZvcmltYWdlcy5taW4uanMiPjwvc2NyaXB0PjxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0IiBzcmM9Ii9qcy9jb21tb24vdXRpbHMuanMiPjwvc2NyaXB0PiAgICA8bGluayByZWw9InN0eWxlc2hlZXQiIGhyZWY9Imh0dHBzOi8vZDF0ZzkwYndqdzNldGguY2xvdWRmcm9udC5uZXQvanMvb3dsLWNhcm91c2VsMi9hc3NldHMvb3dsLmNhcm91c2VsLm1pbi5jc3MiPgogICAgPGxpbmsgcmVsPSJzdHlsZXNoZWV0IiBocmVmPSJodHRwczovL2QxdGc5MGJ3anczZXRoLmNsb3VkZnJvbnQubmV0L2pzL293bC1jYXJvdXNlbDIvYXNzZXRzL293bC50aGVtZS5kZWZhdWx0LmNzcyI+CiAgICA8bGluayByZWw9InN0eWxlc2hlZXQiIGhyZWY9Imh0dHBzOi8vZDF0ZzkwYndqdzNldGguY2xvdWRmcm9udC5uZXQvanMvb3dsLWNhcm91c2VsMi9hc3NldHMvYW5pbWF0ZS5taW4uY3NzIj4KICAgIDxsaW5rIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0iaHR0cHM6Ly9kMXRnOTBid2p3M2V0aC5jbG91ZGZyb250Lm5ldC9qcy9tdWx0aXBsZS1zZWxlY3QvbXVsdGlwbGUtc2VsZWN0LmNzcyI+CiAgICA8bGluayByZWw9InN0eWxlc2hlZXQiIGhyZWY9Imh0dHBzOi8vZDF0ZzkwYndqdzNldGguY2xvdWRmcm9udC5uZXQvanMvZGF0ZXBpY2tlci9kYXRlcGlja2VyLm1pbi5jc3MiPgogICAgPGxpbmsgcmVsPSJzdHlsZXNoZWV0IiB0eXBlPSJ0ZXh0L2NzcyIgbWVkaWE9InNjcmVlbiIgaHJlZj0iaHR0cHM6Ly9kMXRnOTBid2p3M2V0aC5jbG91ZGZyb250Lm5ldC9qcy9mYW5jeWJveDIvanF1ZXJ5LmZhbmN5Ym94Lm1pbi5jc3MiPgogICAgPGxpbmsgcmVsPSJzdHlsZXNoZWV0IiB0eXBlPSJ0ZXh0L2NzcyIgbWVkaWE9InNjcmVlbiIgaHJlZj0iaHR0cHM6Ly9jZG5qcy5jbG91ZGZsYXJlLmNvbS9hamF4L2xpYnMvbWFnbmlmaWMtcG9wdXAuanMvMS4xLjAvbWFnbmlmaWMtcG9wdXAubWluLmNzcyI+CiAgICA8bGluayByZWw9InN0eWxlc2hlZXQiIGhyZWY9Imh0dHBzOi8vY2RuanMuY2xvdWRmbGFyZS5jb20vYWpheC9saWJzL3NlbGVjdDIvNC4wLjMvY3NzL3NlbGVjdDIubWluLmNzcyIgLz4KICAgICAgICAgICAgPGxpbmsgcmVsPSJzdHlsZXNoZWV0IiB0eXBlPSJ0ZXh0L2NzcyIgbWVkaWE9InNjcmVlbixwcmludCIgaHJlZj0iL2Nzcy9mcmVlMTAvbWFpbi5jc3MiPgogICAgPGxpbmsgcmVsPSJzdHlsZXNoZWV0IiB0eXBlPSJ0ZXh0L2NzcyIgbWVkaWE9InNjcmVlbixwcmludCIgaHJlZj0iL21pc2MvY3NzIiAvPgogICAgICAgIDxsaW5rIHJlbD0ic3R5bGVzaGVldCIgdHlwZT0idGV4dC9jc3MiIG1lZGlhPSJzY3JlZW4scHJpbnQiIGhyZWY9Ii9jc3MtMTc2OCI+CiAgICA8bGluayByZWw9InN0eWxlc2hlZXQiIHR5cGU9InRleHQvY3NzIiBtZWRpYT0ic2NyZWVuLHByaW50IiBocmVmPSIvY3NzL2ZyZWUxMC9tb2JpbGUuY3NzIj4KCiAgICAKICAgIAogICAgPHNjcmlwdCBzcmM9J2h0dHBzOi8vd3d3Lmdvb2dsZS5jb20vcmVjYXB0Y2hhL2FwaS5qcz9yZW5kZXI9ZXhwbGljaXQmb25sb2FkPWxvYWRDYXB0Y2hhJyBhc3luYyBkZWZlcj48L3NjcmlwdD4KCiAgICAKICAgICAgICAgIDwhLS0gR29vZ2xlIFRhZyBNYW5hZ2VyIC0tPgogICAgICA8c2NyaXB0PihmdW5jdGlvbih3LGQscyxsLGkpe3dbbF09d1tsXXx8W107d1tsXS5wdXNoKHsnZ3RtLnN0YXJ0JzoKICAgICAgbmV3IERhdGUoKS5nZXRUaW1lKCksZXZlbnQ6J2d0bS5qcyd9KTt2YXIgZj1kLmdldEVsZW1lbnRzQnlUYWdOYW1lKHMpWzBdLAogICAgICBqPWQuY3JlYXRlRWxlbWVudChzKSxkbD1sIT0nZGF0YUxheWVyJz8nJmw9JytsOicnO2ouYXN5bmM9dHJ1ZTtqLnNyYz0KICAgICAgJ2h0dHBzOi8vd3d3Lmdvb2dsZXRhZ21hbmFnZXIuY29tL2d0bS5qcz9pZD0nK2krZGw7Zi5wYXJlbnROb2RlLmluc2VydEJlZm9yZShqLGYpOwogICAgICB9KSh3aW5kb3csZG9jdW1lbnQsJ3NjcmlwdCcsJ2RhdGFMYXllcicsJ0dUTS1QUFRCRktSJyk7PC9zY3JpcHQ+CiAgICAgIDwhLS0gRW5kIEdvb2dsZSBUYWcgTWFuYWdlciAtLT4KICAgIAogICAgCiAgICAgIDwvaGVhZD4KCiAgPGJvZHkgY2xhc3M9ImxhbmctZnIgZXN0YXRlLXNob3cgbmF0dXJlLTEiPgogICAgPGRpdiBpZD0iZmItcm9vdCI+PC9kaXY+CiAgICAgICAgICA8IS0tIEdvb2dsZSBUYWcgTWFuYWdlciAobm9zY3JpcHQpIC0tPgogICAgICA8bm9zY3JpcHQ+PGlmcmFtZSBzcmM9Imh0dHBzOi8vd3d3Lmdvb2dsZXRhZ21hbmFnZXIuY29tL25zLmh0bWw/aWQ9R1RNLVBQVEJGS1IiIGhlaWdodD0iMCIgd2lkdGg9IjAiIHN0eWxlPSJkaXNwbGF5Om5vbmU7dmlzaWJpbGl0eTpoaWRkZW4iPjwvaWZyYW1lPjwvbm9zY3JpcHQ+CiAgICAgIDwhLS0gRW5kIEdvb2dsZSBUYWcgTWFuYWdlciAobm9zY3JpcHQpIC0tPgogICAgCiAgICAKICAgIDxoZWFkZXI+CiAgICAgIDxkaXYgY2xhc3M9InJpYmJvbiI+CiAgICAgICAgPGRpdiBjbGFzcz0ibGF5b3V0TGFyZ2UgY2xlYXJmaXgiPgogICAgICAgICAgICAgICAgICAgICAgPHVsIGNsYXNzPSJjdWx0dXJlIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpIGNsYXNzPSJzZWxlY3RlZCI+PGEgdGl0bGU9IkZyYW7Dp2FpcyIgaHJlZj0iaHR0cHM6Ly93d3cuYWdlbmNlZGVzZW5mYW50c3JvdWdlcy5jb20vZnIvcmVjaGVyY2hlL3ZlbnRlLWFwcGFydGVtZW50LTQtcGllY2VzLXBhcmlzLTEwZW1lLTc1MDEwLTM2Njc4MzQiPkZyYW7Dp2FpczwvYT48L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGkgPjxhIHRpdGxlPSJFbmdsaXNoIiBocmVmPSIvZW4vc2VhcmNoL3NhbGUtYXBhcnRtZW50LTQtcm9vbXMtcGFyaXMtMTBlbWUtNzUwMTAtMzY2NzgzNCI+RW5nbGlzaDwvYT48L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGkgPjxhIHRpdGxlPSJJdGFsaWFubyIgaHJlZj0iL2l0L3NlYXJjaC92ZW5kaXRhLWFwcGFydGFtZW50by00LXJvb21zLXBhcmlzLTEwZW1lLTc1MDEwLTM2Njc4MzQiPkl0YWxpYW5vPC9hPjwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgPC91bD4KICAgICAgICAgIAogICAgICAgICAgCiAgICAgICAgICA8dWwgY2xhc3M9InNvY2lhbExpbmtzIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpIGNsYXNzPSJpY29uIHNvY2lhbCI+PGEgY2xhc3M9ImZhY2Vib29rIiB0YXJnZXQ9Il9ibGFuayIgaHJlZj0iaHR0cHM6Ly93d3cuZmFjZWJvb2suY29tL0FnZW5jZS1kZXMtRW5mYW50cy1Sb3VnZXMtMjY2NzQ1OTcwMTE0NDEwIj5mYWNlYm9vazwvYT48L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaSBjbGFzcz0iaWNvbiBzb2NpYWwiPjxhIGNsYXNzPSJlbWFpbCIgaHJlZj0iL2ZyL2NvbnRhY3Rlei1ub3VzIj5FbWFpbDwvYT48L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3VsPgogICAgICAgICAgPHVsIGNsYXNzPSJ0b3BNZW51Ij48bGk+PGEgdGFyZ2V0PSJfc2VsZiIgaHJlZj0iL2ZyL3NlbGVjdGlvbi8iPk1hIHPDqWxlY3Rpb248L2E+PC9saT48L3VsPiAgICAgICAgPC9kaXY+CiAgICAgIDwvZGl2PgogICAgICA8ZGl2IGNsYXNzPSJsYXlvdXRMYXJnZSBjbGVhcmZpeCI+CiAgICAgICAgPGRpdiBjbGFzcz0ibG9nbyI+CiAgICAgICAgICA8YSB0aXRsZT0iQWdlbmNlIGRlcyBFbmZhbnRzIFJvdWdlcyIgaHJlZj0iL2ZyLyI+PGltZyBhbHQ9IkFnZW5jZSBkZXMgRW5mYW50cyBSb3VnZXMiIHNyYz0iL3VwbG9hZHMvd2Vic2l0ZS8xNzY4LzA0OGUwNWU2NmMwYTQ4MWU0YzQxYmJjMDdiNGUzYmNkODY2MWQ2NmIuanBnIiAvPjwvYT4gICAgICAgIDwvZGl2PgogICAgICAgIDxuYXY+CiAgICAgICAgICA8dWwgY2xhc3M9Im1lbnUiPjxsaSBjbGFzcz0iYnRuIj48YSBocmVmPSIjIj48L2E+PC9saT48bGk+PGEgdGFyZ2V0PSJfc2VsZiIgY2xhc3M9IiIgaHJlZj0iL2ZyLyI+QWNjdWVpbDwvYT48L2xpPjxsaT48YSB0YXJnZXQ9Il9zZWxmIiBjbGFzcz0iIiBocmVmPSIvZnIvdmVudGUiPlZlbnRlPC9hPjwvbGk+PGxpPjxhIHRhcmdldD0iX3NlbGYiIGNsYXNzPSIiIGhyZWY9Ii9mci9sb2NhdGlvbiI+TG9jYXRpb248L2E+PC9saT48bGk+PGEgdGFyZ2V0PSJfc2VsZiIgY2xhc3M9IiIgaHJlZj0iL2ZyL2NvbW1lcmNlcyI+Q29tbWVyY2VzPC9hPjwvbGk+PGxpPjxhIHRhcmdldD0iX3NlbGYiIGNsYXNzPSIiIGhyZWY9Ii9mci9lc3RpbWF0aW9uIj5Fc3RpbWF0aW9uPC9hPjwvbGk+PGxpPjxhIHRhcmdldD0iX3NlbGYiIGNsYXNzPSIiIGhyZWY9Ii9mci9ibG9nIj5CbG9nPC9hPjwvbGk+PGxpPjxhIHRhcmdldD0iX3NlbGYiIGNsYXNzPSIiIGhyZWY9Ii9mci9ub3RyZS1hZ2VuY2UiPk5vdHJlIGFnZW5jZTwvYT48L2xpPjxsaT48YSB0YXJnZXQ9Il9zZWxmIiBjbGFzcz0iIiBocmVmPSIvZnIvY29udGFjdGV6LW5vdXMiPkNvbnRhY3Rlei1ub3VzPC9hPjwvbGk+PC91bD4gICAgICAgIDwvbmF2PgogICAgICA8L2Rpdj4KICAgICAgICAgIDwvaGVhZGVyPgoKICAgIDxkaXYgY2xhc3M9IndyYXBwZXIiPgogICAgICAKPHNlY3Rpb24gY2xhc3M9InNob3dQaWN0dXJlcyIgZGF0YS1sYXlvdXRGaXhlZD0iMCI+CiAgICAgIDxhIGNsYXNzPSJidXR0b24iIGhyZWY9ImphdmFzY3JpcHQ6aGlzdG9yeS5nbygtMSk7Ij5SZXRvdXI8L2E+CiAgICA8ZGl2IGNsYXNzPSJzaG93LWNhcm91c2VsIG93bC1jYXJvdXNlbCBvd2wtdGhlbWUiPgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Iml0ZW0gcmVzaXplUGljdHVyZSIgZGF0YS1wcmVzZXJ2ZXBvcnRyYWl0PSJ0cnVlIj4KICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZDFxZmoyMzF1Zzd3ZHUuY2xvdWRmcm9udC5uZXQvcGljdHVyZXMvZXN0YXRlLzM2NDIvMzY0MTYwOC8xMDg3MzgwMTA4NWU1MTFkNDc0MGU0YjUuMjA0OTk1MDJfZDdhZjllZGY4OV8xOTIwLmpwZyIgcmVsPSJzbGlkZXNob3ciIGNsYXNzPSJzbGlkZXNob3ciIHRpdGxlPSJQYXJpcyAxMMOobWUgOiBsb2Z0IGRhbnMgdW5lIHRyw6hzIGJlbGxlIGNvdXIgcGF2w6llIGV0IGNhbG1lIj4KICAgICAgICAgICAgPGltZyBhbHQ9IlBhcmlzIDEww6htZSA6IGxvZnQgZGFucyB1bmUgdHLDqHMgYmVsbGUgY291ciBwYXbDqWUgZXQgY2FsbWUiIHNyYz0iaHR0cHM6Ly9kMXFmajIzMXVnN3dkdS5jbG91ZGZyb250Lm5ldC9waWN0dXJlcy9lc3RhdGUvMzY0Mi8zNjQxNjA4LzEwODczODAxMDg1ZTUxMWQ0NzQwZTRiNS4yMDQ5OTUwMl9kN2FmOWVkZjg5XzE5MjAuanBnIiAvPiAgICAgICAgICA8L2E+CiAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iaXRlbSByZXNpemVQaWN0dXJlIiBkYXRhLXByZXNlcnZlcG9ydHJhaXQ9InRydWUiPgogICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9kMXFmajIzMXVnN3dkdS5jbG91ZGZyb250Lm5ldC9waWN0dXJlcy9lc3RhdGUvMzY0Mi8zNjQxNjA4Lzk2MDIwNDI4MDVlNTExZDQ5ZDAxNzMzLjYwMjU1OTY4XzBiNjAyODhjM2ZfMTc5OC5qcGciIHJlbD0ic2xpZGVzaG93IiBjbGFzcz0ic2xpZGVzaG93IiB0aXRsZT0iUGFyaXMgMTDDqG1lIDogbG9mdCBkYW5zIHVuZSB0csOocyBiZWxsZSBjb3VyIHBhdsOpZSBldCBjYWxtZSI+CiAgICAgICAgICAgIDxpbWcgYWx0PSJQYXJpcyAxMMOobWUgOiBsb2Z0IGRhbnMgdW5lIHRyw6hzIGJlbGxlIGNvdXIgcGF2w6llIGV0IGNhbG1lIiBzcmM9Imh0dHBzOi8vZDFxZmoyMzF1Zzd3ZHUuY2xvdWRmcm9udC5uZXQvcGljdHVyZXMvZXN0YXRlLzM2NDIvMzY0MTYwOC85NjAyMDQyODA1ZTUxMWQ0OWQwMTczMy42MDI1NTk2OF8wYjYwMjg4YzNmXzE3OTguanBnIiAvPiAgICAgICAgICA8L2E+CiAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iaXRlbSByZXNpemVQaWN0dXJlIiBkYXRhLXByZXNlcnZlcG9ydHJhaXQ9InRydWUiPgogICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9kMXFmajIzMXVnN3dkdS5jbG91ZGZyb250Lm5ldC9waWN0dXJlcy9lc3RhdGUvMzY0Mi8zNjQxNjA4LzEzMjA1ODUxMjE1ZTUxMWQ1MjE3ODU2My42ODUwNDk5N184NDg0NzU4NDZlXzE3NTkuanBnIiByZWw9InNsaWRlc2hvdyIgY2xhc3M9InNsaWRlc2hvdyIgdGl0bGU9Ikx1c3RyZSI+CiAgICAgICAgICAgIDxpbWcgYWx0PSJMdXN0cmUiIHNyYz0iaHR0cHM6Ly9kMXFmajIzMXVnN3dkdS5jbG91ZGZyb250Lm5ldC9waWN0dXJlcy9lc3RhdGUvMzY0Mi8zNjQxNjA4LzEzMjA1ODUxMjE1ZTUxMWQ1MjE3ODU2My42ODUwNDk5N184NDg0NzU4NDZlXzE3NTkuanBnIiAvPiAgICAgICAgICA8L2E+CiAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iaXRlbSByZXNpemVQaWN0dXJlIiBkYXRhLXByZXNlcnZlcG9ydHJhaXQ9InRydWUiPgogICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9kMXFmajIzMXVnN3dkdS5jbG91ZGZyb250Lm5ldC9waWN0dXJlcy9lc3RhdGUvMzY0Mi8zNjQxNjA4LzkzNzUyMDgxNzVlNTExZDU0YWYwZTc0LjYzMzk1NjUzX2RiYTVmMDE2OTFfMTc5OC5qcGciIHJlbD0ic2xpZGVzaG93IiBjbGFzcz0ic2xpZGVzaG93IiB0aXRsZT0iUGFyaXMgMTDDqG1lIDogbG9mdCBkYW5zIHVuZSB0csOocyBiZWxsZSBjb3VyIHBhdsOpZSBldCBjYWxtZSI+CiAgICAgICAgICAgIDxpbWcgYWx0PSJQYXJpcyAxMMOobWUgOiBsb2Z0IGRhbnMgdW5lIHRyw6hzIGJlbGxlIGNvdXIgcGF2w6llIGV0IGNhbG1lIiBzcmM9Imh0dHBzOi8vZDFxZmoyMzF1Zzd3ZHUuY2xvdWRmcm9udC5uZXQvcGljdHVyZXMvZXN0YXRlLzM2NDIvMzY0MTYwOC85Mzc1MjA4MTc1ZTUxMWQ1NGFmMGU3NC42MzM5NTY1M19kYmE1ZjAxNjkxXzE3OTguanBnIiAvPiAgICAgICAgICA8L2E+CiAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iaXRlbSByZXNpemVQaWN0dXJlIiBkYXRhLXByZXNlcnZlcG9ydHJhaXQ9InRydWUiPgogICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9kMXFmajIzMXVnN3dkdS5jbG91ZGZyb250Lm5ldC9waWN0dXJlcy9lc3RhdGUvMzY0Mi8zNjQxNjA4LzE1NTcyMzcyMzE1ZTUxMWQ1NzE0Y2M4Mi4wMTAyODI5Ml9lNzdjYTg5OWU1XzE4MjUuanBnIiByZWw9InNsaWRlc2hvdyIgY2xhc3M9InNsaWRlc2hvdyIgdGl0bGU9IlBhcmlzIDEww6htZSA6IGxvZnQgZGFucyB1bmUgdHLDqHMgYmVsbGUgY291ciBwYXbDqWUgZXQgY2FsbWUiPgogICAgICAgICAgICA8aW1nIGFsdD0iUGFyaXMgMTDDqG1lIDogbG9mdCBkYW5zIHVuZSB0csOocyBiZWxsZSBjb3VyIHBhdsOpZSBldCBjYWxtZSIgc3JjPSJodHRwczovL2QxcWZqMjMxdWc3d2R1LmNsb3VkZnJvbnQubmV0L3BpY3R1cmVzL2VzdGF0ZS8zNjQyLzM2NDE2MDgvMTU1NzIzNzIzMTVlNTExZDU3MTRjYzgyLjAxMDI4MjkyX2U3N2NhODk5ZTVfMTgyNS5qcGciIC8+ICAgICAgICAgIDwvYT4KICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJpdGVtIHJlc2l6ZVBpY3R1cmUiIGRhdGEtcHJlc2VydmVwb3J0cmFpdD0idHJ1ZSI+CiAgICAgICAgICA8YSBocmVmPSJodHRwczovL2QxcWZqMjMxdWc3d2R1LmNsb3VkZnJvbnQubmV0L3BpY3R1cmVzL2VzdGF0ZS8zNjQyLzM2NDE2MDgvMjA3MjcxOTU4MjVlNTExZDU5NTIyNDUxLjA1ODY1NTQ1XzliZDE3NzlhOTNfMTc5OC5qcGciIHJlbD0ic2xpZGVzaG93IiBjbGFzcz0ic2xpZGVzaG93IiB0aXRsZT0iUGFyaXMgMTDDqG1lIDogbG9mdCBkYW5zIHVuZSB0csOocyBiZWxsZSBjb3VyIHBhdsOpZSBldCBjYWxtZSI+CiAgICAgICAgICAgIDxpbWcgYWx0PSJQYXJpcyAxMMOobWUgOiBsb2Z0IGRhbnMgdW5lIHRyw6hzIGJlbGxlIGNvdXIgcGF2w6llIGV0IGNhbG1lIiBzcmM9Imh0dHBzOi8vZDFxZmoyMzF1Zzd3ZHUuY2xvdWRmcm9udC5uZXQvcGljdHVyZXMvZXN0YXRlLzM2NDIvMzY0MTYwOC8yMDcyNzE5NTgyNWU1MTFkNTk1MjI0NTEuMDU4NjU1NDVfOWJkMTc3OWE5M18xNzk4LmpwZyIgLz4gICAgICAgICAgPC9hPgogICAgICAgIDwvZGl2PgogICAgICAgICAgPC9kaXY+CgogICAgPGFydGljbGU+CiAgICAgICAgICA8ZGl2PgogICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InNlbGVjdGlvbkxpbmsgIiBocmVmPSIvZnIvc2VsZWN0aW9uLz9lc3RhdGU9MzY0MTYwOCIgdGl0bGU9IkFqb3V0ZXIgw6AgbGEgc8OpbGVjdGlvbiI+QWpvdXRlciDDoCBsYSBzw6lsZWN0aW9uPC9zcGFuPgogICAgICAgIDxoMj4KICAgICAgICAgICAgICAgICAgICAgIEFwcGFydGVtZW50ICAgICAgICAgICAgICAgICAgICA8YnIgLz5QYXJpcyAxMMOobWUgICAgICAgIDwvaDI+CiAgICAgICAgPHVsPgogICAgICAgICAgICAgICAgICAgIDxsaT5SZWYuIDEwNTI8L2xpPgogICAgICAgICAgICAgICAgICAgICAgPGxpPjMgY2hhbWJyZXM8L2xpPjxsaT4xIHNhbGxlIGRlIGJhaW5zPC9saT48bGk+MTYxIG3CsjwvbGk+ICAgICAgICAgIAogICAgICAgICAgPGxpPjEgNzUwIDAwMCDigqw8L2xpPgogICAgICAgICAgICAgICAgICA8L3VsPgogICAgICA8L2Rpdj4KICAgIDwvYXJ0aWNsZT4KICA8L3NlY3Rpb24+CgoKCjxzZWN0aW9uIGNsYXNzPSJtYWluIHNob3ciPgogIDxkaXYgY2xhc3M9ImxheW91dExhcmdlIGNsZWFyZml4Ij4KICAgIDxhcnRpY2xlIGNsYXNzPSJjb2x1bW5MZWZ0Ij4KICAgICAgPGRpdiBjbGFzcz0idGl0bGVzIj4KICAgICAgICA8aDE+UGFyaXMgMTDDqG1lIDogbG9mdCBkYW5zIHVuZSB0csOocyBiZWxsZSBjb3VyIHBhdsOpZSBldCBjYWxtZTwvaDE+CiAgICAgICAgPHVsIGNsYXNzPSJxdWlja0xpbmtzIj4KICAgICAgICAgIDxsaT48YSBjbGFzcz0ic2VsZWN0ZWQiIGhyZWY9IiNkZXNjcmlwdGlvbiI+RGVzY3JpcHRpb248L2E+PC9saT4KICAgICAgICAgIDxsaT48YSBocmVmPSIjZGV0YWlsc0xpc3QiPkTDqXRhaWxzPC9hPjwvbGk+CiAgICAgICAgICAgICAgICAgICAgICA8bGk+PGEgaHJlZj0iI3Nob3dNYXAiPlBsYW48L2E+PC9saT4KICAgICAgICAgICAgICAgICAgICA8bGk+PGEgaHJlZj0iI2NvbnRhY3RMaW5lIj5Db250YWN0PC9hPjwvbGk+CiAgICAgICAgPC91bD4KICAgICAgPC9kaXY+CgogICAgICA8cCBjbGFzcz0iY29tbWVudCIgaWQ9ImRlc2NyaXB0aW9uIj5BIHByb3hpbWl0w6kgZHUgbcOpdHJvIEdvbmNvdXJ0IGRhbnMgbGUgMTDDqG1lIGFycm9uZGlzc2VtZW50LCAgbG9jYWwgY29tbWVyY2lhbCBkJ2V4Y2VwdGlvbiDDoCB1c2FnZSBkJ2hhYml0YXRpb24gZGUgMTYyIG0yIGRpdmlzw6kgc3VyIGRldXggbml2ZWF1eC4gQ2UgYmllbiwgdHLDqHMgbHVtaW5ldXgsIGLDqW7DqWZpY2llIGR1IGNhbG1lIGFic29sdSBkJ3VuZSBjb3VyIHRyw6hzIGRlbWFuZMOpZS48YnIgLz4NCkRldXggZW50csOpZXMgcGVybWV0dGVudCBsJ2FjY8OocyBhdSBiaWVuIGNvbXBvc8OpIGRlIGxhIG1hbmnDqHJlIHN1aXZhbnRlIDo8YnIgLz4NCkF1IHByZW1pZXIgbml2ZWF1LCB1biBncmFuZCBhdGVsaWVyIGRlIDQ2LDQzIG0yLCB1biBzw6lqb3VyIGN1aXNpbmUgZGUgMjUgbTIsIHVuZSBzYWxsZSBkZSBiYWluLCB1bmUgZ3JhbmRlIGNoYW1icmUsIGRlcyB3YyBzw6lwYXLDqXMsIDIgcGV0aXRlcyBjaGFtYnJlcyBldCB1biBwYWxpZXIgY29zeSAgZW4gbWV6emFuaW5lLjxiciAvPg0KQXUgc2Vjb25kIG5pdmVhdSBlbiBzb3VzIHNvbCwgdW5lIGdyYW5kZSBjdWlzaW5lIGRlIDI2LDM3IG0yLCB1bmUgc2FsbGUgZCdlYXUgKGFuY2llbm5lbWVudCB1biBsYWJvcmF0b2lyZSBwaG90bykgZXQgZGVzIHdjIHPDqXBhcsOpcy4gPGJyIC8+DQpBIHZvaXIgcmFwaWRlbWVudCAhPC9wPgogICAgICA8cCBjbGFzcz0icHJpbnQiPjxhIGNsYXNzPSJidXR0b24iIHRhcmdldD0iX2JsYW5rIiB0aXRsZT0iSW1wcmltZXIgY2V0dGUgYW5ub25jZSIgaHJlZj0iL2ZyL3JlY2hlcmNoZS92ZW50ZS1hcHBhcnRlbWVudC00LXBpZWNlcy1wYXJpcy0xMGVtZS03NTAxMC0zNjY3ODM0L2ltcHJpbWVyIj5JbXByaW1lciBjZXR0ZSBhbm5vbmNlPC9hPjwvcD4KCiAgICAgIAogICAgICAKICAgICAgCiAgICAgIDxkaXYgY2xhc3M9ImRldGFpbHNMaXN0IGNsZWFyZml4IiBpZD0iZGV0YWlsc0xpc3QiPgogICAgICAgIAogICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJzdW1tYXJ5IGRldGFpbHMiPgogICAgICAgICAgICA8aDI+UsOpc3Vtw6k8L2gyPgogICAgICAgICAgICA8dWw+CiAgICAgICAgICAgICAgPGxpIGNsYXNzPSJhbHQiPlBpw6hjZXMgPHNwYW4+NCBwacOoY2VzPC9zcGFuPjwvbGk+PGxpID5TdXJmYWNlIDxzcGFuPjE2MSBtwrI8L3NwYW4+PC9saT48bGkgY2xhc3M9ImFsdCI+U3VyZmFjZSB0b3RhbGUgPHNwYW4+MTYzIG3Csjwvc3Bhbj48L2xpPjxsaSA+Q2hhdWZmYWdlIDxzcGFuPlJhZGlhdGV1ciwgR2F6LCBJbmRpdmlkdWVsPC9zcGFuPjwvbGk+PGxpIGNsYXNzPSJhbHQiPkVhdSBjaGF1ZGUgPHNwYW4+Q2hhdWRpw6hyZTwvc3Bhbj48L2xpPjxsaSBjbGFzcz0iYWx0Ij5FdGF0IDxzcGFuPsOAIHJhZnJhw65jaGlyPC9zcGFuPjwvbGk+PGxpID5FdGFnZSA8c3Bhbj5SZXotZGUtY2hhdXNzw6llIC8gMiDDqXRhZ2VzPC9zcGFuPjwvbGk+PGxpIGNsYXNzPSJhbHQiPkV4cG9zaXRpb24gPHNwYW4+U3VkIEVzdCBOb3JkPC9zcGFuPjwvbGk+PGxpID5WdWUgPHNwYW4+Q291ciBDb3VyPC9zcGFuPjwvbGk+PGxpIGNsYXNzPSJhbHQiPkNvbnN0cnVpdCBlbiA8c3Bhbj4xOTA4PC9zcGFuPjwvbGk+ICAgICAgICAgICAgPC91bD4KICAgICAgICAgIDwvZGl2PgogICAgICAgIAogICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iYXJlYXMgZGV0YWlscyI+CiAgICAgICAgICAgIDxoMj5QacOoY2VzPC9oMj4KCiAgICAgICAgICAgICAgICAgICAgICAgICAgPHVsPgogICAgICAgICAgICAgICAgPGxpIGNsYXNzPSJhbHQiPjMgQ2hhbWJyZXMgPHNwYW4+LSwgLSwgMjAuNzYgbcKyPC9zcGFuPjwvbGk+PGxpID4yIFRvaWxldHRlcyA8c3Bhbj4wLjk2IG3CsiwgMS41NSBtwrI8L3NwYW4+PC9saT48bGkgY2xhc3M9ImFsdCI+MSBNZXp6YW5pbmUgPHNwYW4+MjkuMjYgbcKyPC9zcGFuPjwvbGk+PGxpID4xIFPDqWpvdXIgPHNwYW4+MjUuMSBtwrI8L3NwYW4+PC9saT48bGkgY2xhc3M9ImFsdCI+MiBDdWlzaW5lcyA8c3Bhbj4tLCAyNi4zNyBtwrI8L3NwYW4+PC9saT48bGkgPjEgQXRlbGllciA8c3Bhbj40Ni40MyBtwrI8L3NwYW4+PC9saT48bGkgY2xhc3M9ImFsdCI+MSBTYWxsZSBkZSBkb3VjaGUgPHNwYW4+NS4xMSBtwrI8L3NwYW4+PC9saT48bGkgPjEgUGFya2luZyA8c3Bhbj48L3NwYW4+PC9saT4gICAgICAgICAgICAgIDwvdWw+CiAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAKICAgICAgICAKICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJveGltaXRpZXMgZGV0YWlscyI+CiAgICAgICAgICAgIDxoMj5Qcm94aW1pdMOpczwvaDI+CiAgICAgICAgICAgIDx1bD4KICAgICAgICAgICAgICA8bGkgY2xhc3M9ImFsdCI+QnVzPC9saT48bGkgPkdhcmUgcm91dGnDqHJlPC9saT48bGkgY2xhc3M9ImFsdCI+TcOpdHJvPC9saT48bGkgPkNvbW1lcmNlczwvbGk+PGxpIGNsYXNzPSJhbHQiPsOJY29sZSBwcmltYWlyZTwvbGk+PGxpID5DZW50cmUgdmlsbGU8L2xpPjxsaSBjbGFzcz0iYWx0Ij5Nw6lkZWNpbjwvbGk+PGxpID5UcmFtd2F5PC9saT48bGkgY2xhc3M9ImFsdCI+R2FyZTwvbGk+PGxpIGNsYXNzPSJhbHQiPlRheGk8L2xpPjxsaSA+UGFyYzwvbGk+PGxpIGNsYXNzPSJhbHQiPlN1cGVybWFyY2jDqTwvbGk+PGxpID5DaW7DqW1hPC9saT48bGkgY2xhc3M9ImFsdCI+w4ljb2xlIHNlY29uZGFpcmU8L2xpPjxsaSA+QcOpcm9wb3J0PC9saT48bGkgY2xhc3M9ImFsdCI+TWVyPC9saT48bGkgPkdhcmUgVEdWPC9saT48bGkgY2xhc3M9ImFsdCI+VW5pdmVyc2l0w6k8L2xpPiAgICAgICAgICAgIDwvdWw+CiAgICAgICAgICA8L2Rpdj4KICAgICAgICAKICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZGlhZ25vc3RpY3MgZGV0YWlscyAiPgogICAgICAgICAgICA8aDI+RWZmaWNhY2l0w6kgw6luZXJnw6l0aXF1ZTwvaDI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBzcmM9Ii9mci9kaWFnbm9zdGljLzM2Njc4MzQvMS8xMjciIGFsdD0iw4luZXJnaWUgLSBDb25zb21tYXRpb24gY29udmVudGlvbm5lbGxlIj4KICAgICAgICAgICAgICAgICAgICAgICAgICA8aW1nIHNyYz0iL2ZyL2RpYWdub3N0aWMvMzY2NzgzNC8yLzI5IiBhbHQ9IsOJbmVyZ2llIC0gRXN0aW1hdGlvbiBkZXMgw6ltaXNzaW9ucyI+CiAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAKICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ibGVnYWwgZGV0YWlscyI+CiAgICAgICAgICAgIDxoMj5JbmZvcm1hdGlvbnMgbMOpZ2FsZXM8L2gyPgogICAgICAgICAgICA8dWw+CiAgICAgICAgICAgICAgPGxpIGNsYXNzPSJhbHQiPkhvbm9yYWlyZXMgw6AgY2hhcmdlIHZlbmRldXI8L2xpPjxsaSBjbGFzcz0iYWx0Ij5Mb2kgQ2FycmV6PHNwYW4+MTYxIG3Csjwvc3Bhbj48L2xpPiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGkgPlBhcyBkZSBwcm9jw6lkdXJlIGVuIGNvdXJzPC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICA8L3VsPgogICAgICAgICAgPC9kaXY+CiAgICAgICAgCiAgICAgICAgICAgICAgPC9kaXY+CiAgICA8L2FydGljbGU+CgogICAgPGFzaWRlIGNsYXNzPSJjb2x1bW5SaWdodCBjbGVhcmZpeCI+CiAgICAgIDxkaXYgY2xhc3M9InVzZXJCbG9jayI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InVzZXJCdWJibGUgcGljdHVyZSByZXNpemVQaWN0dXJlIiBkYXRhLXByZXNlcnZlcG9ydHJhaXQ9ImZhbHNlIj4KICAgICAgICAgICAgICA8aW1nIHNyYz0iaHR0cHM6Ly9hcGkuYXBpbW8ucHJvL3VwbG9hZHMvdXNlci8zODM0MC9waWN0dXJlLmpwZyIvPgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgIAogICAgICAgICAgPHAgY2xhc3M9InNtYWxsSWNvbiB1c2VyTmFtZSI+CiAgICAgICAgICAgIDxzdHJvbmc+QXVkZSBQUkVUUkU8L3N0cm9uZz48YnIgLz4KICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBBZ2VudCBpbW1vYmlsaWVyICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgIDwvcD4KICAgICAgICAgIDxwPgogICAgICAgICAgICA8c3BhbiBjbGFzcz0icGhvbmUgc21hbGxJY29uIj48YSBocmVmPSJ0ZWw6MDAzMzA2MzU1OTI1OTEiPiszMyAoMCk2IDM1IDU5IDI1IDkxPC9hPjwvc3Bhbj48YnIgLz4gICAgICAgICAgICA8c3BhbiBjbGFzcz0ibWFpbCBzbWFsbEljb24iPjxhIGhyZWY9Im1haWx0bzphdWRlQGFnZW5jZWRlc2VuZmFudHNyb3VnZXMuY29tIj5hdWRlQGFnZW5jZWRlc2VuZmFudHNyb3VnZXMuY29tPC9hPjwvc3Bhbj4gICAgICAgICAgPC9wPgogICAgICAgICAgPHA+PGEgaHJlZj0iI2NvbnRhY3RMaW5lIiBjbGFzcz0iYnV0dG9uIj5Db250YWN0ZXotbW9pPC9hPjwvcD4KICAgICAgICAgICAgICA8L2Rpdj4KCiAgICAgIDxkaXYgY2xhc3M9InNoYXJlQmxvY2siPgogICAgICAgIDxoMj5QYXJ0YWdlcjwvaDI+CiAgICAgICAgPHVsIGNsYXNzPSJzb2NpYWxMaW5rcyI+CgkgICAgICA8bGkgY2xhc3M9InNvY2lhbCI+PGEgY2xhc3M9ImVtYWlsIGZyaWVuZCIgdGl0bGU9IkVudm95ZXIgw6AgdW4gYW1pIiBocmVmPSIvZnIvc2VuZC10by1mcmllbmQ/ZXN0YXRlSWQ9MzY2NzgzNCI+RW52b3llciDDoCB1biBhbWk8L2E+PC9saT4KICAgICAgICAgIDxsaSBjbGFzcz0ic29jaWFsIj48YSBjbGFzcz0iZmFjZWJvb2siIG9uY2xpY2s9IndpbmRvdy5vcGVuKCQodGhpcykuYXR0cignaHJlZicpLCAnRmFjZWJvb2snLCBjb25maWc9J2hlaWdodD0xMDAsIHdpZHRoPTQwMCwgdG9vbGJhcj1ubywgbWVudWJhcj1ubywgc2Nyb2xsYmFycz1ubywgcmVzaXphYmxlPW5vLCBsb2NhdGlvbj1ubycpOyByZXR1cm4gZmFsc2U7IiBocmVmPSJodHRwOi8vd3d3LmZhY2Vib29rLmNvbS9zaGFyZS5waHA/dT1odHRwJTNBJTJGJTJGd3d3LmFnZW5jZWRlc2VuZmFudHNyb3VnZXMuY29tJTJGZnIlMkZyZWNoZXJjaGUlMkZ2ZW50ZS1hcHBhcnRlbWVudC00LXBpZWNlcy1wYXJpcy0xMGVtZS03NTAxMC0zNjY3ODM0JnRpdGxlPVBhcmlzIDEwJmVncmF2ZTttZSA6IGxvZnQgZGFucyB1bmUgdHImZWdyYXZlO3MgYmVsbGUgY291ciBwYXYmZWFjdXRlO2UgZXQgY2FsbWUiPkZhY2Vib29rPC9hPjwvbGk+CiAgICAgICAgICA8bGkgY2xhc3M9InNvY2lhbCI+PGEgY2xhc3M9InR3aXR0ZXIiIG9uY2xpY2s9IndpbmRvdy5vcGVuKCQodGhpcykuYXR0cignaHJlZicpLCAnVHdpdHRlcicsIGNvbmZpZz0naGVpZ2h0PTIxNiwgd2lkdGg9NDAwLCB0b29sYmFyPW5vLCBtZW51YmFyPW5vLCBzY3JvbGxiYXJzPW5vLCByZXNpemFibGU9bm8sIGxvY2F0aW9uPW5vJyk7IHJldHVybiBmYWxzZTsiIGhyZWY9Imh0dHA6Ly90d2l0dGVyLmNvbS9ob21lP3N0YXR1cz1QYXJpcyAxMCZlZ3JhdmU7bWUgOiBsb2Z0IGRhbnMgdW5lIHRyJmVncmF2ZTtzIGJlbGxlIGNvdXIgcGF2JmVhY3V0ZTtlIGV0IGNhbG1lK2h0dHAlM0ElMkYlMkZ3d3cuYWdlbmNlZGVzZW5mYW50c3JvdWdlcy5jb20lMkZmciUyRnJlY2hlcmNoZSUyRnZlbnRlLWFwcGFydGVtZW50LTQtcGllY2VzLXBhcmlzLTEwZW1lLTc1MDEwLTM2Njc4MzQiPlR3aXR0ZXI8L2E+PC9saT4KICAgICAgICAgIDxsaSBjbGFzcz0ic29jaWFsIj48YSBjbGFzcz0ibGlua2VkaW4iIG9uY2xpY2s9IndpbmRvdy5vcGVuKCQodGhpcykuYXR0cignaHJlZicpLCAnTGlua2VkSW4nLCBjb25maWc9J2hlaWdodD00MDAsIHdpZHRoPTUwMCwgdG9vbGJhcj1ubywgbWVudWJhcj1ubywgc2Nyb2xsYmFycz1ubywgcmVzaXphYmxlPW5vLCBsb2NhdGlvbj1ubycpOyByZXR1cm4gZmFsc2U7IiBocmVmPSJodHRwczovL3d3dy5saW5rZWRpbi5jb20vc2hhcmVBcnRpY2xlP21pbmk9dHJ1ZSZ1cmw9aHR0cCUzQSUyRiUyRnd3dy5hZ2VuY2VkZXNlbmZhbnRzcm91Z2VzLmNvbSUyRmZyJTJGcmVjaGVyY2hlJTJGdmVudGUtYXBwYXJ0ZW1lbnQtNC1waWVjZXMtcGFyaXMtMTBlbWUtNzUwMTAtMzY2NzgzNCZ0aXRsZT1QYXJpcyAxMCZlZ3JhdmU7bWUgOiBsb2Z0IGRhbnMgdW5lIHRyJmVncmF2ZTtzIGJlbGxlIGNvdXIgcGF2JmVhY3V0ZTtlIGV0IGNhbG1lJnN1bW1hcnk9QSBwcm94aW1pdMOpIGR1IG3DqXRybyBHb25jb3VydCBkYW5zIGxlIDEww6htZSBhcnJvbmRpc3NlbWVudCwgIGxvY2FsIGNvbW1lcmNpYWwgZCdleGNlcHRpb24gw6AgdXNhZ2UgZCdoYWJpdGF0aW9uIGRlIDE2MiBtMiBkaXZpc8OpIHN1ciBkZXV4IG5pdmVhdXguIENlIGJpZW4sIHRyw6hzIGx1bWluZXV4LCBiw6luw6lmaWNpZSBkdSBjYWxtZSBhYnNvbHXigKYiPkxpbmtlZEluPC9hPjwvbGk+CiAgICAgICAgPC91bD4KICAgICAgPC9kaXY+CgogICAgICA8ZGl2IGNsYXNzPSJzZWFyY2ggbGlzdGluZ1NlYXJjaCI+CiAgICAgICAgPGRpdiBjbGFzcz0ibG9hZGluZyI+PC9kaXY+CiAgPGZvcm0gbWV0aG9kPSJwb3N0IiBhY3Rpb249Ii9mci9yZWNoZXJjaGUvIiBjbGFzcz0iY2xlYXJmaXgiPgogICAgICA8ZGl2IGNsYXNzPSJmaWVsZCBuYXR1cmUiPjxzZWxlY3QgbmFtZT0ibmF0dXJlIiBpZD0ibmF0dXJlIj4KPG9wdGlvbiB2YWx1ZT0iMSI+VmVudGU8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iMiI+TG9jYXRpb248L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iMyI+TG9jYXRpb24gc2Fpc29ubmnDqHJlPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjQiPlByb2dyYW1tZTwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSI1Ij5WaWFnZXIgLyBOdWUtcHJvcHJpw6l0w6k8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iNiI+RW5jaMOocmU8L29wdGlvbj4KPC9zZWxlY3Q+PC9kaXY+CiAgICA8ZGl2IGNsYXNzPSJmaWVsZHMgY2xlYXJmaXgiPgogICAgICA8ZGl2IGNsYXNzPSJmaWVsZCI+PHNlbGVjdCBuYW1lPSJ0eXBlW10iIG11bHRpcGxlPSJtdWx0aXBsZSIgaWQ9InR5cGUiPgo8b3B0aW9uIHZhbHVlPSIxIj5BcHBhcnRlbWVudDwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSIyIj5NYWlzb248L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iMyI+VGVycmFpbjwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSI0Ij5Db21tZXJjZTwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSI1Ij5HYXJhZ2UgLyBQYXJraW5nPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjYiPkltbWV1YmxlPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjciPkJ1cmVhdTwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSI4Ij5CYXRlYXU8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iOSI+TG9jYXV4IGQmIzAzOTthY3Rpdml0w6kgLyBFbnRyZXDDtHRzPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjEwIj5DYXZlIC8gQm94PC9vcHRpb24+Cjwvc2VsZWN0PjwvZGl2PgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImZpZWxkIj48c2VsZWN0IG5hbWU9InJvb21zW10iIG11bHRpcGxlPSJtdWx0aXBsZSIgaWQ9InJvb21zIj4KPG9wdGlvbiB2YWx1ZT0iMSI+MSBwacOoY2U8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iMiI+MiBwacOoY2VzPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjMiPjMgcGnDqGNlczwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSI0Ij40IHBpw6hjZXM8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iNSI+NSBwacOoY2VzPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjYrIj42KyBwacOoY2VzPC9vcHRpb24+Cjwvc2VsZWN0PjwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJmaWVsZCI+PHNlbGVjdCBkYXRhLWVycm9yTG9hZGluZz0iRXJyZXVyIGRlIHLDqWN1cMOpcmF0aW9uIGRlcyBkb25uw6llcy4iIGRhdGEtaW5wdXRUb29TaG9ydD0iVmV1aWxsZXogc2Fpc2lyIGRldXggY2FyYWN0w6hyZXMgYXUgbWluaW11bSIgZGF0YS1ub1Jlc3VsdHM9IkF1Y3VuIHLDqXN1bHRhdCIgZGF0YS1zZWFyY2hpbmc9IlJlY2hlcmNoZSBlbiBjb3Vycy4uLiIgZGF0YS1wbGFjZWhvbGRlcj0iVmlsbGUiIG5hbWU9ImNpdHlbXSIgbXVsdGlwbGU9Im11bHRpcGxlIiBpZD0iY2l0eSI+CjxvcHRpb24gdmFsdWU9IjI1OTY2Ij5CZWxmb3LDqnQtZW4tUGVyY2hlPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjU0OCI+Qm9oYWluLWVuLVZlcm1hbmRvaXM8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iNTM5NDgiPkJydXhlbGxlczwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSIzODM5MCI+TGUgUHLDqS1TYWludC1HZXJ2YWlzPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjM4MzQwIj5MZXZhbGxvaXMtUGVycmV0PC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjM4MzQ2Ij5OZXVpbGx5LXN1ci1TZWluZTwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSIzODI0NyI+UGFsYWlzZWF1PC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjMyNTUyIj5QYXJpcyAzw6htZTwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSIzMjU1MyI+UGFyaXMgNMOobWU8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iMzI1NTQiPlBhcmlzIDXDqG1lPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjMyNTU5Ij5QYXJpcyAxMMOobWU8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iMzI1NjAiPlBhcmlzIDExw6htZTwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSIzMjU2MSI+UGFyaXMgMTLDqG1lPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjMyNTYyIj5QYXJpcyAxM8OobWU8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iMzI1NjUiPlBhcmlzIDE2w6htZTwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSIzMjU2NyI+UGFyaXMgMTjDqG1lPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjMyNTY4Ij5QYXJpcyAxOcOobWU8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iMzI1NjkiPlBhcmlzIDIww6htZTwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSI3NjQwIj5Qcm9wcmlhbm88L29wdGlvbj4KPC9zZWxlY3Q+PC9kaXY+CiAgICAgIDxkaXYgY2xhc3M9ImZpZWxkIGRyb3Bkb3duIj48c2VsZWN0IG5hbWU9InByaWNlIiBpZD0icHJpY2UiPgo8b3B0aW9uIHZhbHVlPSIiIHNlbGVjdGVkPSJzZWxlY3RlZCI+UHJpeDwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSIwMDAwMDAwMDAwLTAwMDAyMDAwMDAiPjAgLSAyMDAgMDAwIOKCrDwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSIwMDAwMjAwMDAwLTAwMDA0MDAwMDAiPjIwMCAwMDAgLSA0MDAgMDAwIOKCrDwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSIwMDAwNDAwMDAwLTAwMDA2MDAwMDAiPjQwMCAwMDAgLSA2MDAgMDAwIOKCrDwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSIwMDAwNjAwMDAwLTAwMDA4MDAwMDAiPjYwMCAwMDAgLSA4MDAgMDAwIOKCrDwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSIwMDAwODAwMDAwLTAwMDEyMDAwMDAiPjgwMCAwMDAgLSAxIDIwMCAwMDAg4oKsPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjAwMDEyMDAwMDAtMDAwMjAwMDAwMCI+MSAyMDAgMDAwIC0gMiAwMDAgMDAwIOKCrDwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSIwMDAyMDAwMDAwLUVORCI+KyAyIDAwMCAwMDAg4oKsPC9vcHRpb24+Cjwvc2VsZWN0PjwvZGl2PgogICAgICAKICAgICAgICAgICAgICAgIDxzZWN0aW9uIGNsYXNzPSJsaWZlQW5udWl0eSIgc3R5bGU9ImRpc3BsYXk6IG5vbmU7Ij4KICAgICAgICA8ZGl2IGNsYXNzPSJmaWVsZCBkcm9wZG93biI+PHNlbGVjdCBuYW1lPSJhbm51aXR5W10iIG11bHRpcGxlPSJtdWx0aXBsZSIgaWQ9ImFubnVpdHkiPgo8b3B0aW9uIHZhbHVlPSIxIj5WaWFnZXIgbGlicmU8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iMiI+VmlhZ2VyIG9jY3Vww6k8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iMyI+TnVlLXByb3ByacOpdMOpPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjQiPlZlbnRlIMOgIHRlcm1lPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjUiPlZpYWdlciBzZW1pLW9jY3Vww6k8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iNiI+VmVudGUgw6AgdGVybWUgbGlicmU8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iNyI+VmVudGUgw6AgdGVybWUgc2VtaS1vY2N1cMOpPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjgiPlZlbnRlIMOgIHRlcm1lIG9jY3Vww6k8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iOSI+VmlhZ2VyIHNhbnMgcmVudGU8L29wdGlvbj4KPC9zZWxlY3Q+PC9kaXY+CiAgICAgICAgPGRpdiBjbGFzcz0iZmllbGQiPjxpbnB1dCBwbGFjZWhvbGRlcj0iTWluLiBhZ2UiIHR5cGU9InRleHQiIG5hbWU9ImFnZSIgaWQ9ImFnZSIgLz48L2Rpdj4KICAgICAgICA8ZGl2IGNsYXNzPSJmaWVsZCI+PGlucHV0IHBsYWNlaG9sZGVyPSJSZW50ZSBtaW4uIiB0eXBlPSJ0ZXh0IiBuYW1lPSJ0ZW5hbnRfbWluIiBpZD0idGVuYW50X21pbiIgLz48L2Rpdj4KICAgICAgICA8ZGl2IGNsYXNzPSJmaWVsZCI+PGlucHV0IHBsYWNlaG9sZGVyPSJSZW50ZSBtYXguIiB0eXBlPSJ0ZXh0IiBuYW1lPSJ0ZW5hbnRfbWF4IiBpZD0idGVuYW50X21heCIgLz48L2Rpdj4KICAgICAgPC9zZWN0aW9uPgoKICAgICAgPHNlY3Rpb24gY2xhc3M9InJlbnRhbCIgc3R5bGU9ImRpc3BsYXk6IG5vbmU7Ij4KICAgICAgICA8ZGl2IGNsYXNzPSJmaWVsZCBkcm9wZG93biI+PHNlbGVjdCBuYW1lPSJyZW50X3R5cGUiIGlkPSJyZW50X3R5cGUiPgo8b3B0aW9uIHZhbHVlPSIiPlR5cGUgZGUgbG9jYXRpb248L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iMyI+Q29sb2NhdGlvbjwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSIyIj5NZXVibMOpZTwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSIxIj5WaWRlPC9vcHRpb24+Cjwvc2VsZWN0PjwvZGl2PgogICAgICA8L3NlY3Rpb24+CgogICAgICA8c2VjdGlvbiBjbGFzcz0ibmV3YnVpbGRzIiBzdHlsZT0iZGlzcGxheTogbm9uZTsiPgogICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJmaWVsZCBkcm9wZG93biI+PGlucHV0IHR5cGU9ImhpZGRlbiIgbmFtZT0ibmV3cHJvZ3JhbV9kZWxpdmVyeV9hdCIgaWQ9Im5ld3Byb2dyYW1fZGVsaXZlcnlfYXQiIC8+IDxpbnB1dCBwbGFjZWhvbGRlcj0iRMOpbGFpIGRlIGxpdnJhaXNvbiIgdHlwZT0idGV4dCIgbmFtZT0ibmV3cHJvZ3JhbV9kZWxpdmVyeV9hdF9kaXNwbGF5IiBpZD0ibmV3cHJvZ3JhbV9kZWxpdmVyeV9hdF9kaXNwbGF5IiAvPjwvZGl2PgogICAgICAgICAgICAgIDwvc2VjdGlvbj4KICAgIAogICAgICA8L2Rpdj4KCiAgICA8aW5wdXQgdHlwZT0iaGlkZGVuIiBuYW1lPSJjdXJyZW5jeSIgdmFsdWU9IkVVUiIgaWQ9ImN1cnJlbmN5IiAvPiAgPGlucHV0IHR5cGU9InN1Ym1pdCIgdmFsdWU9IlJlY2hlcmNoZXIiLz4KICA8aW5wdXQgdHlwZT0iaGlkZGVuIiBuYW1lPSJjdXN0b21yb3V0ZSIgdmFsdWU9IiIgLz4KICA8aW5wdXQgdHlwZT0iaGlkZGVuIiBuYW1lPSJob21lcGFnZSIgdmFsdWU9IiIgLz4KPC9mb3JtPgoKCgogIDxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij4KICAgICQoZnVuY3Rpb24oKSB7CiAgICAgICQoJyNuYXR1cmUnKS5jaGFuZ2UoZnVuY3Rpb24oKSB7CiAgICAgICAgcmVmcmVzaFNlYXJjaEZvcm0oKTsKICAgICAgfSk7CiAgICB9KTsKICA8L3NjcmlwdD4KCjxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij4KCiAgdmFyIHNlbGVjdE9wZW4gPSBmYWxzZTsKCiAgJChmdW5jdGlvbigpIHsKICAgICQoJyNuYXR1cmUgb3B0aW9uOnNlbGVjdGVkJykudmFsKCk7CiAgICAKICAgICQuZm4uc2VsZWN0Mi5hbWQucmVxdWlyZShbIm9wdGdyb3VwLWRhdGEiLCAib3B0Z3JvdXAtcmVzdWx0cyJdLCBmdW5jdGlvbiAoT3B0Z3JvdXBEYXRhLCBPcHRncm91cFJlc3VsdHMpIHsKICAgICAgCiAgICAgICQoJyNjaXR5Y29kZScpLnNlbGVjdDIoewogICAgICAgIGRhdGFBZGFwdGVyOiBPcHRncm91cERhdGEsCiAgICAgICAgcmVzdWx0c0FkYXB0ZXI6IE9wdGdyb3VwUmVzdWx0cywKICAgICAgICBtaW5pbXVtSW5wdXRMZW5ndGg6IDIsCiAgICAgICAgbWF0Y2hlcjogemlwY29kZU1hdGNoZXIsCiAgICAgICAgbGFuZ3VhZ2U6IHsKICAgICAgICAgIGVycm9yTG9hZGluZzogZnVuY3Rpb24oKSB7CiAgICAgICAgICAgIHJldHVybiAkKCcjY2l0eWNvZGUnKS5hdHRyKCdkYXRhLWVycm9yTG9hZGluZycpOwogICAgICAgICAgfSwKICAgICAgICAgIGlucHV0VG9vU2hvcnQ6IGZ1bmN0aW9uKGEpIHsKICAgICAgICAgICAgcmV0dXJuICQoJyNjaXR5Y29kZScpLmF0dHIoJ2RhdGEtaW5wdXRUb29TaG9ydCcpOwogICAgICAgICAgfSwKICAgICAgICAgIG5vUmVzdWx0czogZnVuY3Rpb24oKSB7CiAgICAgICAgICAgIHJldHVybiAkKCcjY2l0eWNvZGUnKS5hdHRyKCdkYXRhLW5vUmVzdWx0cycpOwogICAgICAgICAgfSwKICAgICAgICAgIHNlYXJjaGluZzogZnVuY3Rpb24oKSB7CiAgICAgICAgICAgIHJldHVybiAkKCcjY2l0eWNvZGUnKS5hdHRyKCdkYXRhLXNlYXJjaGluZycpOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSk7IAogICAgICAKICAgIH0pOwogICAgCiAgICAKICAgICQoJyNjaXR5Jykuc2VsZWN0Mih7CgkgICAgcGxhY2Vob2xkZXI6ICQoJyNjaXR5JykuZGF0YSgncGxhY2Vob2xkZXInKSwKCSAgICBlc2NhcGVNYXJrdXA6IGZ1bmN0aW9uIChtYXJrdXApIHsgcmV0dXJuIG1hcmt1cDsgfSwKCSAgICBtaW5pbXVtSW5wdXRMZW5ndGg6IDAsCgkgICAgbGFuZ3VhZ2U6IHsKCSAgICAgIGVycm9yTG9hZGluZzogZnVuY3Rpb24oKSB7CgkJICAgICAgcmV0dXJuICQoJyNjaXR5JykuYXR0cignZGF0YS1lcnJvckxvYWRpbmcnKTsKCSAgICAgIH0sCgkgICAgICBpbnB1dFRvb1Nob3J0OiBmdW5jdGlvbihhKSB7CgkgICAgICAJcmV0dXJuICQoJyNjaXR5JykuYXR0cignZGF0YS1pbnB1dFRvb1Nob3J0Jyk7CgkgICAgICB9LAoJICAgICAgbm9SZXN1bHRzOiBmdW5jdGlvbigpIHsKCSAgICAgIAlyZXR1cm4gJCgnI2NpdHknKS5hdHRyKCdkYXRhLW5vUmVzdWx0cycpOwoJICAgICAgfSwKCSAgICAgIHNlYXJjaGluZzogZnVuY3Rpb24oKSB7CgkgICAgICAJcmV0dXJuICQoJyNjaXR5JykuYXR0cignZGF0YS1zZWFyY2hpbmcnKTsKCSAgICAgIH0KCSAgICB9CgkgIH0pOwoKICAgICQoJyNsb2NhdGlvbicpLnNlbGVjdDIoewoJICAgIHBsYWNlaG9sZGVyOiAkKCcjbG9jYXRpb24nKS5kYXRhKCdwbGFjZWhvbGRlcicpLAoJICAgIGFqYXg6IHsKCSAgICAgIHVybDogIi9taXNjL2F1dG9jb21wbGV0ZSIsCgkgICAgICBkYXRhVHlwZTogJ2pzb24nLAoJICAgICAgZGVsYXk6IDI1MCwKCSAgICAgIGRhdGE6IGZ1bmN0aW9uIChwYXJhbXMpIHsKCSAgICAgICAgcmV0dXJuIHsKCSAgICAgICAgICBxOiBwYXJhbXMudGVybSwgLy8gc2VhcmNoIHRlcm0KCSAgICAgICAgICBwYWdlOiBwYXJhbXMucGFnZQoJICAgICAgICB9OwoJICAgICAgfSwKCSAgICAgIHByb2Nlc3NSZXN1bHRzOiBmdW5jdGlvbiAoZGF0YSkgewoJICAgICAgICAgIHJldHVybiB7CgkgICAgICAgICAgICAgIHJlc3VsdHM6ICQubWFwKGRhdGEuaXRlbXMsIGZ1bmN0aW9uIChpdGVtKSB7CgkgICAgICAgICAgICAgICAgICByZXR1cm4gewoJICAgICAgICAgICAgICAgICAgICAgIHRleHQ6IGl0ZW0ubmFtZSwKCSAgICAgICAgICAgICAgICAgICAgICBpZDogaXRlbS5pZAoJICAgICAgICAgICAgICAgICAgfQoJICAgICAgICAgICAgICB9KQoJICAgICAgICAgIH07CgkgICAgICB9LAoJICAgICAgY2FjaGU6IHRydWUKCSAgICB9LAoJICAgIGVzY2FwZU1hcmt1cDogZnVuY3Rpb24gKG1hcmt1cCkgeyByZXR1cm4gbWFya3VwOyB9LAoJICAgIG1pbmltdW1JbnB1dExlbmd0aDogMiwKCSAgICBsYW5ndWFnZTogewoJICAgICAgZXJyb3JMb2FkaW5nOiBmdW5jdGlvbigpIHsKCQkgICAgICByZXR1cm4gJCgnI2xvY2F0aW9uJykuYXR0cignZGF0YS1lcnJvckxvYWRpbmcnKTsKCSAgICAgIH0sCgkgICAgICBpbnB1dFRvb1Nob3J0OiBmdW5jdGlvbihhKSB7CgkgICAgICAJcmV0dXJuICQoJyNsb2NhdGlvbicpLmF0dHIoJ2RhdGEtaW5wdXRUb29TaG9ydCcpOwoJICAgICAgfSwKCSAgICAgIG5vUmVzdWx0czogZnVuY3Rpb24oKSB7CgkgICAgICAJcmV0dXJuICQoJyNsb2NhdGlvbicpLmF0dHIoJ2RhdGEtbm9SZXN1bHRzJyk7CgkgICAgICB9LAoJICAgICAgc2VhcmNoaW5nOiBmdW5jdGlvbigpIHsKCSAgICAgIAlyZXR1cm4gJCgnI2xvY2F0aW9uJykuYXR0cignZGF0YS1zZWFyY2hpbmcnKTsKCSAgICAgIH0KCSAgICB9CgkgIH0pOwoKICAgICQoJyNkZXBhcnRtZW50Jykuc2VsZWN0Mih7CgkgICAgcGxhY2Vob2xkZXI6ICQoJyNkZXBhcnRtZW50JykuZGF0YSgncGxhY2Vob2xkZXInKSwKCSAgICBsYW5ndWFnZTogewoJICAgICAgZXJyb3JMb2FkaW5nOiBmdW5jdGlvbigpIHsKCQkgICAgICByZXR1cm4gJCgnI2RlcGFydG1lbnQnKS5hdHRyKCdkYXRhLWVycm9yTG9hZGluZycpOwoJICAgICAgfSwKCSAgICAgIGlucHV0VG9vU2hvcnQ6IGZ1bmN0aW9uKGEpIHsKCSAgICAgIAlyZXR1cm4gJCgnI2RlcGFydG1lbnQnKS5hdHRyKCdkYXRhLWlucHV0VG9vU2hvcnQnKTsKCSAgICAgIH0sCgkgICAgICBub1Jlc3VsdHM6IGZ1bmN0aW9uKCkgewoJICAgICAgCXJldHVybiAkKCcjZGVwYXJ0bWVudCcpLmF0dHIoJ2RhdGEtbm9SZXN1bHRzJyk7CgkgICAgICB9LAoJICAgICAgc2VhcmNoaW5nOiBmdW5jdGlvbigpIHsKCSAgICAgIAlyZXR1cm4gJCgnI2RlcGFydG1lbnQnKS5hdHRyKCdkYXRhLXNlYXJjaGluZycpOwoJICAgICAgfQoJICAgIH0KCSAgfSk7CiAgICAKICAgICQoJyNyZWdpb24nKS5zZWxlY3QyKHsKCSAgICBwbGFjZWhvbGRlcjogJCgnI3JlZ2lvbicpLmRhdGEoJ3BsYWNlaG9sZGVyJyksCgkgICAgbGFuZ3VhZ2U6IHsKCSAgICAgIGVycm9yTG9hZGluZzogZnVuY3Rpb24oKSB7CgkJICAgICAgcmV0dXJuICQoJyNyZWdpb24nKS5hdHRyKCdkYXRhLWVycm9yTG9hZGluZycpOwoJICAgICAgfSwKCSAgICAgIGlucHV0VG9vU2hvcnQ6IGZ1bmN0aW9uKGEpIHsKCSAgICAgIAlyZXR1cm4gJCgnI3JlZ2lvbicpLmF0dHIoJ2RhdGEtaW5wdXRUb29TaG9ydCcpOwoJICAgICAgfSwKCSAgICAgIG5vUmVzdWx0czogZnVuY3Rpb24oKSB7CgkgICAgICAJcmV0dXJuICQoJyNyZWdpb24nKS5hdHRyKCdkYXRhLW5vUmVzdWx0cycpOwoJICAgICAgfSwKCSAgICAgIHNlYXJjaGluZzogZnVuY3Rpb24oKSB7CgkgICAgICAJcmV0dXJuICQoJyNyZWdpb24nKS5hdHRyKCdkYXRhLXNlYXJjaGluZycpOwoJICAgICAgfQoJICAgIH0KCSAgfSk7CiAgICAKICAgICQoJyNyZWdkZXAnKS5zZWxlY3QyKHsKCSAgICBwbGFjZWhvbGRlcjogJCgnI3JlZ2RlcCcpLmRhdGEoJ3BsYWNlaG9sZGVyJyksCgkgICAgbGFuZ3VhZ2U6IHsKCSAgICAgIGVycm9yTG9hZGluZzogZnVuY3Rpb24oKSB7CgkJICAgICAgcmV0dXJuICQoJyNyZWdkZXAnKS5hdHRyKCdkYXRhLWVycm9yTG9hZGluZycpOwoJICAgICAgfSwKCSAgICAgIGlucHV0VG9vU2hvcnQ6IGZ1bmN0aW9uKGEpIHsKCSAgICAgIAlyZXR1cm4gJCgnI3JlZ2RlcCcpLmF0dHIoJ2RhdGEtaW5wdXRUb29TaG9ydCcpOwoJICAgICAgfSwKCSAgICAgIG5vUmVzdWx0czogZnVuY3Rpb24oKSB7CgkgICAgICAJcmV0dXJuICQoJyNyZWdkZXAnKS5hdHRyKCdkYXRhLW5vUmVzdWx0cycpOwoJICAgICAgfSwKCSAgICAgIHNlYXJjaGluZzogZnVuY3Rpb24oKSB7CgkgICAgICAJcmV0dXJuICQoJyNyZWdkZXAnKS5hdHRyKCdkYXRhLXNlYXJjaGluZycpOwoJICAgICAgfQoJICAgIH0KCSAgfSk7CiAgICAKICAgICQoJyNzZWN0b3InKS5tdWx0aXBsZVNlbGVjdCh7CiAgICAgIHBsYWNlaG9sZGVyOiAiU2VjdGV1cnMiLAogICAgICBzZWxlY3RBbGxUZXh0OiAiVG91dCBzw6lsZWN0aW9ubmVyIiwKICAgICAgc2VsZWN0QWxsRGVsaW1pdGVyOiAiIiwKICAgICAgYWxsU2VsZWN0ZWQ6ICJUb3VzIHPDqWxlY3Rpb25uw6lzIiwKICAgICAgbWluaW11bUNvdW50U2VsZWN0ZWQ6IDIsCiAgICAgIGNvdW50U2VsZWN0ZWQ6ICIjIHNlY3RldXJzIiwKICAgICAgb25PcGVuOiBmdW5jdGlvbigpIHsKICAgICAgICBkaXNhYmxlU2VhcmNoRmllbGRzKCcjc2VjdG9yJyk7CiAgICAgICAgdmFyIHNlbGVjdE9wZW4gPSB0cnVlOwogICAgICB9LAogICAgICBvbkNsb3NlOiBmdW5jdGlvbigpIHsKICAgICAgICByZWZyZXNoU2VhcmNoRm9ybSgpOwogICAgICB9CiAgICB9KTsKCiAgICAkKCcjdHlwZScpLm11bHRpcGxlU2VsZWN0KHsKICAgICAgcGxhY2Vob2xkZXI6ICJUeXBlcyIsCiAgICAgIHNlbGVjdEFsbFRleHQ6ICJUb3V0IHPDqWxlY3Rpb25uZXIiLAogICAgICBzZWxlY3RBbGxEZWxpbWl0ZXI6ICIiLAogICAgICBhbGxTZWxlY3RlZDogIlRvdXMgc8OpbGVjdGlvbm7DqXMiLAogICAgICBtaW5pbXVtQ291bnRTZWxlY3RlZDogMiwKICAgICAgY291bnRTZWxlY3RlZDogIiMgdHlwZXMiLAogICAgICBvbk9wZW46IGZ1bmN0aW9uKCkgewogICAgICAgIGRpc2FibGVTZWFyY2hGaWVsZHMoJyN0eXBlJyk7CiAgICAgICAgdmFyIHNlbGVjdE9wZW4gPSB0cnVlOwogICAgICB9LAogICAgICBvbkNsb3NlOiBmdW5jdGlvbigpIHsKICAgICAgICByZWZyZXNoU2VhcmNoRm9ybSgpOwogICAgICB9CiAgICB9KTsKCiAgICAkKCcjc3BlY2lmaWMnKS5tdWx0aXBsZVNlbGVjdCh7CiAgICAgIHBsYWNlaG9sZGVyOiAiVHlwZXMiLAogICAgICBzZWxlY3RBbGxUZXh0OiAiVG91dCBzw6lsZWN0aW9ubmVyIiwKICAgICAgc2VsZWN0QWxsRGVsaW1pdGVyOiAiIiwKICAgICAgYWxsU2VsZWN0ZWQ6ICJUb3VzIHPDqWxlY3Rpb25uw6lzIiwKICAgICAgbWluaW11bUNvdW50U2VsZWN0ZWQ6IDIsCiAgICAgIGNvdW50U2VsZWN0ZWQ6ICIjIHR5cGVzIiwKICAgICAgb25PcGVuOiBmdW5jdGlvbigpIHsKICAgICAgICBkaXNhYmxlU2VhcmNoRmllbGRzKCcjc3BlY2lmaWMnKTsKICAgICAgICB2YXIgc2VsZWN0T3BlbiA9IHRydWU7CiAgICAgIH0sCiAgICAgIG9uQ2xvc2U6IGZ1bmN0aW9uKCkgewogICAgICAgIHJlZnJlc2hTZWFyY2hGb3JtKCk7CiAgICAgIH0KICAgIH0pOwoKICAgICQoJyNnbG9iYWx0eXBlJykubXVsdGlwbGVTZWxlY3QoewogICAgICBwbGFjZWhvbGRlcjogIlR5cGVzIiwKICAgICAgc2VsZWN0QWxsVGV4dDogIlRvdXQgc8OpbGVjdGlvbm5lciIsCiAgICAgIHNlbGVjdEFsbERlbGltaXRlcjogIiIsCiAgICAgIGFsbFNlbGVjdGVkOiAiVG91cyBzw6lsZWN0aW9ubsOpcyIsCiAgICAgIG1pbmltdW1Db3VudFNlbGVjdGVkOiAyLAogICAgICBjb3VudFNlbGVjdGVkOiAiIyB0eXBlcyIsCiAgICAgIG9uT3BlbjogZnVuY3Rpb24oKSB7CiAgICAgICAgZGlzYWJsZVNlYXJjaEZpZWxkcygnI2dsb2JhbHR5cGUnKTsKICAgICAgICB2YXIgc2VsZWN0T3BlbiA9IHRydWU7CiAgICAgIH0sCiAgICAgIG9uQ2xvc2U6IGZ1bmN0aW9uKCkgewogICAgICAgIHJlZnJlc2hTZWFyY2hGb3JtKCk7CiAgICAgIH0KICAgIH0pOwoKICAgICQoJyNyb29tcycpLm11bHRpcGxlU2VsZWN0KHsKICAgICAgcGxhY2Vob2xkZXI6ICJQacOoY2VzIiwKICAgICAgc2VsZWN0QWxsVGV4dDogIlRvdXQgc8OpbGVjdGlvbm5lciIsCiAgICAgIHNlbGVjdEFsbERlbGltaXRlcjogIiIsCiAgICAgIGFsbFNlbGVjdGVkOiAiVG91cyBzw6lsZWN0aW9ubsOpcyIsCiAgICAgIGNvdW50U2VsZWN0ZWQ6IGZhbHNlLAogICAgICBvbk9wZW46IGZ1bmN0aW9uKCkgewogICAgICAgIGRpc2FibGVTZWFyY2hGaWVsZHMoJyNyb29tcycpOwogICAgICAgIHZhciBzZWxlY3RPcGVuID0gdHJ1ZTsKICAgICAgfSwKICAgICAgb25DbG9zZTogZnVuY3Rpb24oKSB7CiAgICAgICAgcmVmcmVzaFNlYXJjaEZvcm0oKTsKICAgICAgfQogICAgfSk7CgogICAgJCgnI2JlZHJvb21zJykubXVsdGlwbGVTZWxlY3QoewogICAgICBwbGFjZWhvbGRlcjogIkNoYW1icmVzIiwKICAgICAgc2VsZWN0QWxsVGV4dDogIlRvdXQgc8OpbGVjdGlvbm5lciIsCiAgICAgIHNlbGVjdEFsbERlbGltaXRlcjogIiIsCiAgICAgIGFsbFNlbGVjdGVkOiAiVG91cyBzw6lsZWN0aW9ubsOpcyIsCiAgICAgIGNvdW50U2VsZWN0ZWQ6IGZhbHNlLAogICAgICBvbk9wZW46IGZ1bmN0aW9uKCkgewogICAgICAgIGRpc2FibGVTZWFyY2hGaWVsZHMoJyNiZWRyb29tcycpOwogICAgICAgIHZhciBzZWxlY3RPcGVuID0gdHJ1ZTsKICAgICAgfSwKICAgICAgb25DbG9zZTogZnVuY3Rpb24oKSB7CiAgICAgICAgcmVmcmVzaFNlYXJjaEZvcm0oKTsKICAgICAgfQogICAgfSk7CgogICAgJCgnI2JlZHMnKS5tdWx0aXBsZVNlbGVjdCh7CiAgICAgIHBsYWNlaG9sZGVyOiAiQ291Y2hhZ2VzIiwKICAgICAgc2VsZWN0QWxsVGV4dDogIlRvdXQgc8OpbGVjdGlvbm5lciIsCiAgICAgIHNlbGVjdEFsbERlbGltaXRlcjogIiIsCiAgICAgIGFsbFNlbGVjdGVkOiAiVG91cyBzw6lsZWN0aW9ubsOpcyIsCiAgICAgIGNvdW50U2VsZWN0ZWQ6IGZhbHNlLAogICAgICBvbk9wZW46IGZ1bmN0aW9uKCkgewogICAgICAgIGRpc2FibGVTZWFyY2hGaWVsZHMoJyNiZWRzJyk7CiAgICAgICAgdmFyIHNlbGVjdE9wZW4gPSB0cnVlOwogICAgICB9LAogICAgICBvbkNsb3NlOiBmdW5jdGlvbigpIHsKICAgICAgICByZWZyZXNoU2VhcmNoRm9ybSgpOwogICAgICB9CiAgICB9KTsKCiAgICAkKCcjYW5udWl0eScpLm11bHRpcGxlU2VsZWN0KHsKICAgICAgcGxhY2Vob2xkZXI6ICJUeXBlIGRlIHZpYWdlciIsCiAgICAgIHNlbGVjdEFsbFRleHQ6ICJUb3V0IHPDqWxlY3Rpb25uZXIiLAogICAgICBzZWxlY3RBbGxEZWxpbWl0ZXI6ICIiLAogICAgICBhbGxTZWxlY3RlZDogIlRvdXMgc8OpbGVjdGlvbm7DqXMiLAogICAgICBtaW5pbXVtQ291bnRTZWxlY3RlZDogMiwKICAgICAgY291bnRTZWxlY3RlZDogIiMgdHlwZXMgZGUgdmlhZ2VyIiwKICAgICAgb25PcGVuOiBmdW5jdGlvbigpIHsKICAgICAgICBkaXNhYmxlU2VhcmNoRmllbGRzKCcjYW5udWl0eScpOwogICAgICAgIHZhciBzZWxlY3RPcGVuID0gdHJ1ZTsKICAgICAgfSwKICAgICAgb25DbG9zZTogZnVuY3Rpb24oKSB7CiAgICAgICAgcmVmcmVzaFNlYXJjaEZvcm0oKTsKICAgICAgfQogICAgfSk7CgogICAgJCgnI3Jvb21fdHlwZScpLm11bHRpcGxlU2VsZWN0KHsKICAgICAgcGxhY2Vob2xkZXI6ICJQacOoY2VzIiwKICAgICAgc2VsZWN0QWxsVGV4dDogIlRvdXQgc8OpbGVjdGlvbm5lciIsCiAgICAgIHNlbGVjdEFsbERlbGltaXRlcjogIiIsCiAgICAgIGFsbFNlbGVjdGVkOiAiVG91cyBzw6lsZWN0aW9ubsOpcyIsCiAgICAgIGNvdW50U2VsZWN0ZWQ6IGZhbHNlLAogICAgICBvbk9wZW46IGZ1bmN0aW9uKCkgewogICAgICAgIGRpc2FibGVTZWFyY2hGaWVsZHMoJyNyb29tX3R5cGUnKTsKICAgICAgICB2YXIgc2VsZWN0T3BlbiA9IHRydWU7CiAgICAgIH0sCiAgICAgIG9uQ2xvc2U6IGZ1bmN0aW9uKCkgewogICAgICAgIHJlZnJlc2hTZWFyY2hGb3JtKCk7CiAgICAgIH0KICAgIH0pOwoKICAgICQoJyNkaXN0cmljdCcpLm11bHRpcGxlU2VsZWN0KHsKICAgICAgcGxhY2Vob2xkZXI6ICJRdWFydGllcnMiLAogICAgICBzZWxlY3RBbGxUZXh0OiAiVG91dCBzw6lsZWN0aW9ubmVyIiwKICAgICAgc2VsZWN0QWxsRGVsaW1pdGVyOiAiIiwKICAgICAgYWxsU2VsZWN0ZWQ6ICJUb3VzIHPDqWxlY3Rpb25uw6lzIiwKICAgICAgbWluaW11bUNvdW50U2VsZWN0ZWQ6IDIsCiAgICAgIGNvdW50U2VsZWN0ZWQ6ICIjIHF1YXJ0aWVycyIsCiAgICAgIG9uT3BlbjogZnVuY3Rpb24oKSB7CiAgICAgICAgZGlzYWJsZVNlYXJjaEZpZWxkcygnI2Rpc3RyaWN0Jyk7CiAgICAgICAgdmFyIHNlbGVjdE9wZW4gPSB0cnVlOwogICAgICB9LAogICAgICBvbkNsb3NlOiBmdW5jdGlvbigpIHsKICAgICAgICByZWZyZXNoU2VhcmNoRm9ybSgpOwogICAgICB9CiAgICB9KTsKCiAgICAkKCcjYWN0aXZpdHknKS5tdWx0aXBsZVNlbGVjdCh7CiAgICAgIHBsYWNlaG9sZGVyOiAiQWN0aXZpdMOpIiwKICAgICAgc2VsZWN0QWxsVGV4dDogIlRvdXQgc8OpbGVjdGlvbm5lciIsCiAgICAgIHNlbGVjdEFsbERlbGltaXRlcjogIiIsCiAgICAgIGFsbFNlbGVjdGVkOiAiVG91cyBzw6lsZWN0aW9ubsOpcyIsCiAgICAgIG1pbmltdW1Db3VudFNlbGVjdGVkOiAyLAogICAgICBjb3VudFNlbGVjdGVkOiAiIyBhY3Rpdml0w6lzIiwKICAgICAgb25PcGVuOiBmdW5jdGlvbigpIHsKICAgICAgICBkaXNhYmxlU2VhcmNoRmllbGRzKCcjYWN0aXZpdHknKTsKICAgICAgICB2YXIgc2VsZWN0T3BlbiA9IHRydWU7CiAgICAgIH0sCiAgICAgIG9uQ2xvc2U6IGZ1bmN0aW9uKCkgewogICAgICAgIHJlZnJlc2hTZWFyY2hGb3JtKCk7CiAgICAgIH0KICAgIH0pOwoKICAgIGlmICgkKCcjbmV3cHJvZ3JhbV9kZWxpdmVyeV9hdF9kaXNwbGF5JykubGVuZ3RoKQogICAgewogICAgICAkKCcjbmV3cHJvZ3JhbV9kZWxpdmVyeV9hdF9kaXNwbGF5JykuZGF0ZXBpY2tlcih7CiAgICAJICAgIGxhbmd1YWdlOiAnZnItRlInLAogICAgICAgIHN0YXJ0RGF0ZTogbmV3IERhdGUoKSwKICAgICAgICBhdXRvSGlkZTogdHJ1ZQogICAgICB9KTsKCiAgICAgIGlmICgkKCcjbmV3cHJvZ3JhbV9kZWxpdmVyeV9hdCcpLnZhbCgpKQogICAgICAgICQoJyNuZXdwcm9ncmFtX2RlbGl2ZXJ5X2F0X2Rpc3BsYXknKS5kYXRlcGlja2VyKCdzZXREYXRlJywgbmV3IERhdGUoJCgnI25ld3Byb2dyYW1fZGVsaXZlcnlfYXQnKS52YWwoKSkpOwoKICAgICAgJCgnI25ld3Byb2dyYW1fZGVsaXZlcnlfYXRfZGlzcGxheScpLm9uKCdwaWNrLmRhdGVwaWNrZXInLCBmdW5jdGlvbiAoZSkgewogICAgICAgICQoJyNuZXdwcm9ncmFtX2RlbGl2ZXJ5X2F0JykudmFsKGZvcm1hdERhdGUoZS5kYXRlKSk7CiAgICAgIAl9KTsKICAgIH0KCiAgICAkKCcuc2VhcmNoIGlucHV0W3R5cGU9InN1Ym1pdCJdJykuY2xpY2soZnVuY3Rpb24oKSB7CiAgICAgIGlmIChzZWxlY3RPcGVuKSB7CiAgICAgICAgcmVmcmVzaFNlYXJjaEZvcm0odHJ1ZSk7CiAgICAgICAgcmV0dXJuIGZhbHNlOwogICAgICB9CiAgICB9KTsKCiAgICAkKCcjc2VjdG9yJykubXVsdGlwbGVTZWxlY3QoJ2VuYWJsZScpOwogICAgJCgnI3R5cGUnKS5tdWx0aXBsZVNlbGVjdCgnZW5hYmxlJyk7CiAgICAkKCcjc3BlY2lmaWMnKS5tdWx0aXBsZVNlbGVjdCgnZW5hYmxlJyk7CiAgICAkKCcjZ2xvYmFsdHlwZScpLm11bHRpcGxlU2VsZWN0KCdlbmFibGUnKTsKICAgICQoJyNyb29tcycpLm11bHRpcGxlU2VsZWN0KCdlbmFibGUnKTsKICAgICQoJyNiZWRyb29tcycpLm11bHRpcGxlU2VsZWN0KCdlbmFibGUnKTsKICAgICQoJyNiZWRzJykubXVsdGlwbGVTZWxlY3QoJ2VuYWJsZScpOwogICAgJCgnI2FubnVpdHknKS5tdWx0aXBsZVNlbGVjdCgnZW5hYmxlJyk7CiAgICAkKCcjcm9vbV90eXBlJykubXVsdGlwbGVTZWxlY3QoJ2VuYWJsZScpOwogICAgJCgnI2Rpc3RyaWN0JykubXVsdGlwbGVTZWxlY3QoJ2VuYWJsZScpOwogICAgJCgnI2FjdGl2aXR5JykubXVsdGlwbGVTZWxlY3QoJ2VuYWJsZScpOwogIH0pOwoKICAvKiogVXBkYXRlIGZpZWxkcyBpbiBzZWFyY2ggZm9ybS4KICAgKiBAcGFyYW0gKGJvb2wpIHN1Ym1pdCA6IElmIHRydWUsIGZvcm0gaXMgc3VibWl0dGVkIGFmdGVyIHVwZGF0ZS4gKi8KICBmdW5jdGlvbiByZWZyZXNoU2VhcmNoRm9ybShzdWJtaXQpCiAgewogICAgaWYgKHR5cGVvZiBuYXR1cmVJZCAhPSAidW5kZWZpbmVkIikKICAgICAgJCgnI25hdHVyZScpLnZhbChuYXR1cmVJZCk7CgogICAgJCgnLnNlYXJjaCAubG9hZGluZycpLnNob3coKTsKICAgIHZhciBzZXJpYWxpemVkID0gJCgiLnNlYXJjaCBmb3JtIikuc2VyaWFsaXplKCk7CiAgICB2YXIgaG9tZXBhZ2UgPSAkKCcuc2VhcmNoIGlucHV0W25hbWU9ImhvbWVwYWdlIl0nKS52YWwoKTsKICAgIAogICAgdmFyIGlzU2VhcmNoQWR2YW5jZWQgPSAkKCcub3ZlcmZsb3dTZWFyY2gnKS5oYXNDbGFzcygnYWR2YW5jZWRTZWFyY2hPcGVuJyk7CiAgICAkKCdpbnB1dCwgc2VsZWN0JykucHJvcCgnZGlzYWJsZWQnLCB0cnVlKTsKICAgICQoIiNzZWN0b3IsICN0eXBlLCAjc3BlY2lmaWMsICNnbG9iYWx0eXBlLCAjcm9vbXMsICNiZWRyb29tcywgI2JlZHMsICNhbm51aXR5LCAjZGlzdHJpY3QsICNhY3Rpdml0eSIpLm11bHRpcGxlU2VsZWN0KCJkaXNhYmxlIik7CiAgICAKICAgICQuYWpheCh7CiAgICAgIHVybDogIi9mci9zZWFyY2hGb3JtIiwKICAgICAgdHlwZTogIlBPU1QiLAogICAgICBkYXRhVHlwZTogImh0bWwiLAogICAgICBkYXRhOiBzZXJpYWxpemVkLAogICAgICBzdWNjZXNzOmZ1bmN0aW9uKGRhdGEsIHRleHRTdGF0dXMpIHsKICAgICAgICAkKCIuc2VhcmNoIikuaHRtbChkYXRhKTsKICAgICAgICAkKCcuc2VhcmNoIC5sb2FkaW5nJykuaGlkZSgpOwoKICAgICAgICBpZiAoJCgnLnNlYXJjaCcpLmhhc0NsYXNzKCdvdmVyZmxvd1NlYXJjaCcpKQogICAgICAgICAgcmVzaXplT3ZlcmZsb3dTZWFyY2goZmFsc2UpOwogICAgICAgIAogICAgICAgIGlmIChpc1NlYXJjaEFkdmFuY2VkKSB7CiAgICAgICAgICAkKCcuYWR2YW5jZWRTZWFyY2gnKS50b2dnbGUoKTsKICAgICAgICAgICQoJy5vdmVyZmxvd1NlYXJjaCcpLmFkZENsYXNzKCdhZHZhbmNlZFNlYXJjaE9wZW4nKTsKICAgICAgICB9CiAgICAgICAgICAKICAgICAgICAgIAogICAgICAgIGlmIChzdWJtaXQpCiAgICAgICAgICAkKCcuc2VhcmNoIGZvcm0nKS5zdWJtaXQoKTsKICAgICAgfQogICAgfSk7CiAgfQoKICBmdW5jdGlvbiBkaXNhYmxlU2VhcmNoRmllbGRzKGl0ZW0pCiAgewogICAgLy8kKCdpbnB1dCwgc2VsZWN0Jykubm90KGl0ZW0pLnByb3AoJ2Rpc2FibGVkJywgdHJ1ZSk7CiAgICAkKCIjc2VjdG9yLCAjdHlwZSwgI3NwZWNpZmljLCAjZ2xvYmFsdHlwZSwgI3Jvb21zLCAjYmVkcm9vbXMsICNiZWRzLCAjYW5udWl0eSwgI2Rpc3RyaWN0LCAjYWN0aXZpdHkiKS5ub3QoaXRlbSkubXVsdGlwbGVTZWxlY3QoImRpc2FibGUiKTsKICB9CgogIGZ1bmN0aW9uIGNvdW50U2VsZWN0ZWRPblNlbGVjdDIoc2VsZWN0b3IpCiAgewogICAgdmFyIHVsZGl2ID0gJChzZWxlY3Rvcikuc2libGluZ3MoJ3NwYW4uc2VsZWN0MicpLmZpbmQoJ3VsJyk7CiAgICB2YXIgY291bnQgPSB1bGRpdi5maW5kKCdsaScpLmxlbmd0aCAtIDE7CgogICAgJChzZWxlY3Rvcikuc2libGluZ3MoJ3NwYW4uc2VsZWN0MicpLmZpbmQoJy5zZWxlY3QyLXNlbGVjdGlvbl9fY2hvaWNlJykucmVtb3ZlKCk7CgogICAgaWYgKGNvdW50ID09IDEpCiAgICAgIHVsZGl2LnByZXBlbmQoJzxsaSBjbGFzcz0ic2VsZWN0Mi1zZWxlY3Rpb25fX2Nob2ljZSI+JysgY291bnQgKycgdmlsbGU8L2xpPicpOwogICAgZWxzZSBpZiAoY291bnQgPiAxKQogICAgICB1bGRpdi5wcmVwZW5kKCc8bGkgY2xhc3M9InNlbGVjdDItc2VsZWN0aW9uX19jaG9pY2UiPicrIGNvdW50ICsnIHZpbGxlczwvbGk+Jyk7CiAgfQoKPC9zY3JpcHQ+CgoKICAgICAgPC9kaXY+CgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9InNpbWlsYXJCbG9jayI+CiAgICAgICAgICA8aDI+UHJvZHVpdHMgc2ltaWxhaXJlczwvaDI+CiAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJpdGVtIj4KICAgICAgICAgICAgICA8YSBocmVmPSIvZnIvcmVjaGVyY2hlL3ZlbnRlLWFwcGFydGVtZW50LTQtcGllY2VzLXBhcmlzLTEwZW1lLTc1MDEwLTE0MjMyNzAiIHRpdGxlPSIiPgogICAgICAgICAgICAgICAgPGRpdj4KICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icGljdHVyZSByZXNpemVQaWN0dXJlIiBkYXRhLXByZXNlcnZlcG9ydHJhaXQ9ImZhbHNlIiBkYXRhLW92ZXJmbG93PSJ0cnVlIj4KICAgICAgICAgICAgICAgICAgICA8aW1nIGFsdD0iIiBzcmM9Imh0dHBzOi8vZDFxZmoyMzF1Zzd3ZHUuY2xvdWRmcm9udC5uZXQvcGljdHVyZXMvZXN0YXRlLzI4NjgvMjg2Nzg5NC8xODI2OTYwODkyNWM5YjVkNTQxMGY4MjMuMzk5NjEzODRfOGE2YjI1ZmE5Y180MDAuanBnIiAvPiAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8ZGl2PgogICAgICAgICAgICAgICAgICA8aDM+QXBwYXJ0ZW1lbnQsIFBhcmlzIDEww6htZTwvaDM+CiAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJwcmljZSI+MSA3ODAgMDAwIOKCrDwvcD4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAKICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImxvYW5DYWxjdWxhdG9yIj4KICAgIDxoMj5TaW11bGVyIG1vbiBlbXBydW50IGltbW9iaWxpZXI8L2gyPgogICAgPHA+VXRpbGlzZXogbGUgZm9ybXVsYWlyZSBzdWl2YW50IGFmaW4gZCdvYnRlbmlyIHVuZSBlc3RpbWF0aW9uIGRlIHZvcyBtZW5zdWFsaXTDqXMgZXQgZHUgbW9udGFudCB0b3RhbCBkZSBmaW5hbmNlbWVudCBwb3VyIGwnYWNoYXQgZGUgY2UgYmllbi48L3A+CiAgICA8Zm9ybT4KICAgICAgPGRpdiBjbGFzcz0iZmllbGQiPgogICAgICAgIDxsYWJlbD5Nb250YW50IGRlIGwnYWNxdWlzaXRpb248L2xhYmVsPgogICAgICAgIDxkaXYgY2xhc3M9InN1ZmZpeCI+CiAgICAgICAgICA8aW5wdXQgdHlwZT0idGV4dCIgbmFtZT0ibG9hbkJhc2VQcmljZSIgaWQ9ImxvYW5CYXNlUHJpY2UiIHZhbHVlPSIxNzUwMDAwIiByZWFkb25seT0icmVhZG9ubHkiIC8+CiAgICAgICAgICA8c3Bhbj7igqw8L3NwYW4+CiAgICAgICAgPC9kaXY+CiAgICAgIDwvZGl2PgogICAgICA8ZGl2IGNsYXNzPSJmaWVsZCI+CiAgICAgICAgPGxhYmVsPkFwcG9ydDwvbGFiZWw+CiAgICAgICAgPGRpdiBjbGFzcz0ic3VmZml4Ij4KICAgICAgICAgIDxpbnB1dCB0eXBlPSJ0ZXh0IiBuYW1lPSJsb2FuQ29udHJpYnV0aW9uIiBpZD0ibG9hbkNvbnRyaWJ1dGlvbiIgdmFsdWU9IjAiIC8+CiAgICAgICAgICA8c3Bhbj7igqw8L3NwYW4+CiAgICAgICAgPC9kaXY+CiAgICAgIDwvZGl2PgogICAgICA8ZGl2IGNsYXNzPSJmaWVsZCI+CiAgICAgICAgPGxhYmVsPkR1csOpZSBkdSBwcsOqdDwvbGFiZWw+CiAgICAgICAgPHNlbGVjdCBuYW1lPSJsb2FuRHVyYXRpb24iIGlkPSJsb2FuRHVyYXRpb24iPgogICAgICAgICAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT0iNSI+NSBhbnM8L29wdGlvbj4KICAgICAgICAgICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9IjEwIj4xMCBhbnM8L29wdGlvbj4KICAgICAgICAgICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9IjE1Ij4xNSBhbnM8L29wdGlvbj4KICAgICAgICAgICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9IjIwIj4yMCBhbnM8L29wdGlvbj4KICAgICAgICAgICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9IjI1Ij4yNSBhbnM8L29wdGlvbj4KICAgICAgICAgICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9IjMwIj4zMCBhbnM8L29wdGlvbj4KICAgICAgICAgICAgICAgICAgPC9zZWxlY3Q+CiAgICAgIDwvZGl2PgogICAgICA8ZGl2IGNsYXNzPSJmaWVsZCI+CiAgICAgICAgPGxhYmVsPlRhdXggZCdlbXBydW50PC9sYWJlbD4KICAgICAgICA8ZGl2IGNsYXNzPSJzdWZmaXgiPgogICAgICAgICAgPGlucHV0IHR5cGU9InRleHQiIG5hbWU9ImxvYW5SYXRlIiBpZD0ibG9hblJhdGUiIHZhbHVlPSIiIC8+CiAgICAgICAgICA8c3Bhbj4lPC9zcGFuPgogICAgICAgIDwvZGl2PgogICAgICA8L2Rpdj4KICAgICAgPGRpdiBjbGFzcz0iZmllbGQiPgogICAgICAgIDxpbnB1dCBjbGFzcz0iYnV0dG9uIiB0eXBlPSJidXR0b24iIHZhbHVlPSJTaW11bGVyIiAvPgogICAgICA8L2Rpdj4KICAgIDwvZm9ybT4KCiAgICA8ZGl2IGlkPSJsb2FuUmVzdWx0Ij4KICAgICAgPHVsPgogICAgICAgIDxsaSBjbGFzcz0ibW9udGgiPkVzdGltYXRpb24gZGUgdm9zIG1lbnN1YWxpdMOpcyA6IDxzcGFuPjwvc3Bhbj48L2xpPgogICAgICAgIDxsaSBjbGFzcz0idG90YWwiPk1vbnRhbnQgdG90YWwgZW1wcnVudMOpIDogPHNwYW4+PC9zcGFuPjwvbGk+CiAgICAgICAgPGxpIGNsYXNzPSJjb3N0Ij5Db8O7dCBkdSBjcsOpZGl0IDogPHNwYW4+PC9zcGFuPjwvbGk+CiAgICAgIDwvdWw+CiAgICA8L2Rpdj4KICA8L2Rpdj4KCgo8c3R5bGUgdHlwZT0idGV4dC9jc3MiPgogIC5sb2FuQ2FsY3VsYXRvciAuZmllbGQgeyBtYXJnaW4tYm90dG9tOiAxMHB4OyB9CiAgLmxvYW5DYWxjdWxhdG9yIC5maWVsZCBsYWJlbCB7IGRpc3BsYXk6IGJsb2NrOyBtYXJnaW4tYm90dG9tOiA1cHg7IH0KICAubG9hbkNhbGN1bGF0b3IgLmZpZWxkIC5zdWZmaXggeyBwb3NpdGlvbjogcmVsYXRpdmU7IH0KICAubG9hbkNhbGN1bGF0b3IgLmZpZWxkIC5zdWZmaXggaW5wdXQsCiAgLmxvYW5DYWxjdWxhdG9yIC5maWVsZCAuc3VmZml4IHNlbGVjdCB7CiAgICBwYWRkaW5nLXJpZ2h0OiA0MHB4OwogIH0KICAubG9hbkNhbGN1bGF0b3IgLmZpZWxkIC5zdWZmaXggc3BhbiB7CiAgICBwb3NpdGlvbjogYWJzb2x1dGU7IHRvcDogN3B4OyByaWdodDogMDsgd2lkdGg6IDQwcHg7IHRleHQtYWxpZ246IGNlbnRlcjsKICB9CgogICNsb2FuUmVzdWx0IHsgZGlzcGxheTogbm9uZTsgbWFyZ2luLXRvcDogMjBweDsgfQogICNsb2FuUmVzdWx0IHNwYW4geyBmbG9hdDogcmlnaHQ7IGZvbnQtd2VpZ2h0OiBib2xkOyB9CgogIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDY0MHB4KSB7CiAgICAjbG9hblJlc3VsdCBsaSB7IG1hcmdpbi1ib3R0b206IDVweDsgfQogICAgI2xvYW5SZXN1bHQgc3BhbiB7IGZsb2F0OiBub25lOyBkaXNwbGF5OiBibG9jazsgfQogIH0KCjwvc3R5bGU+CjxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij4KCiAgdmFyIGN1cnJlbmN5ID0gJ+KCrCc7CiAgCiAgICB2YXIgcmF0ZXMgPSB7CiAgICA3OiAxLAogICAgMTA6IDEuMTAsCiAgICAxNTogMS40MCwKICAgIDIwOiAxLjYwLAogICAgMjU6IDEuOTAsCiAgICAzMDogMi43CiAgfTsKICAKCiAgJChmdW5jdGlvbigpIHsKCSAgc2V0TG9hblJhdGUoKTsKCiAgICAkKCcjbG9hbkR1cmF0aW9uJykuY2hhbmdlKGZ1bmN0aW9uKCkgewogICAgICBzZXRMb2FuUmF0ZSgpOwogICAgfSk7CgogICAgJCgnaW5wdXRbdHlwZT0iYnV0dG9uIl0nKS5jbGljayhmdW5jdGlvbigpIHsKICAgICAgc2ltdWxhdGVMb2FuKCk7CiAgICB9KTsKICB9KTsKCiAgZnVuY3Rpb24gc2V0TG9hblJhdGUoKSB7CiAgICB2YXIgcmF0ZSA9IHJhdGVzWyQoJyNsb2FuRHVyYXRpb24nKS52YWwoKV07CiAgICAkKCcjbG9hblJhdGUnKS52YWwocmF0ZSk7CiAgICAgIH0KCiAgZnVuY3Rpb24gc2ltdWxhdGVMb2FuKHJldHVyblZhbHVlKQogIHsKICAgIHZhciByZXR1cm5WYWx1ZSA9IHR5cGVvZiByZXR1cm5WYWx1ZSAhPSAidW5kZWZpbmVkIiA/IHJldHVyblZhbHVlIDogZmFsc2U7CiAgICB2YXIgYW1vdW50ID0gcGFyc2VJbnQoJCgnI2xvYW5CYXNlUHJpY2UnKS52YWwoKSwgMTApIC0gcGFyc2VJbnQoJCgnI2xvYW5Db250cmlidXRpb24nKS52YWwoKSwgMTApOwogICAgdmFyIGR1cmF0aW9uID0gcGFyc2VJbnQoJCgnI2xvYW5EdXJhdGlvbicpLnZhbCgpLCAxMCkgKiAxMjsKICAgIHZhciByYXRlID0gcGFyc2VGbG9hdCgkKCcjbG9hblJhdGUnKS52YWwoKS5yZXBsYWNlKCIsIiwgIi4iKSkgLyAxMDA7CiAgICB2YXIgcHJpY2VCeU1vbnRoID0gcGFyc2VGbG9hdChOdW1iZXIoKGFtb3VudCAqIHJhdGUgLyAxMikgLyAoMSAtIE1hdGgucG93KDEgKyByYXRlIC8gMTIsIC1kdXJhdGlvbikpKSk7CgogICAgaWYgKHJldHVyblZhbHVlKQogICAgewogICAgICByZXR1cm4gcHJpY2VCeU1vbnRoOwogICAgfQogICAgZWxzZQogICAgewogICAgICAkKCcjbG9hblJlc3VsdCAubW9udGggc3BhbicpLmh0bWwocHJpY2VCeU1vbnRoLnRvRml4ZWQoMikudG9Mb2NhbGVTdHJpbmcoKSArICcgJyArIGN1cnJlbmN5KTsKCiAgICAgIGlmIChhbW91bnQgJiYgcHJpY2VCeU1vbnRoICE9ICJOYU4iKQogICAgICAgICQoJyNsb2FuUmVzdWx0Jykuc2hvdygpOwogICAgICBlbHNlCiAgICAgICAgJCgnI2xvYW5SZXN1bHQnKS5oaWRlKCk7CgogICAgICBjYWxjdWxlX21vbnRhbnQoKTsKICAgIH0KICB9CgogIGZ1bmN0aW9uIGNhbGN1bGVfbW9udGFudChyZXR1cm5WYWx1ZSkKICB7CiAgICB2YXIgYW1vdW50ID0gcGFyc2VJbnQoJCgnI2xvYW5CYXNlUHJpY2UnKS52YWwoKSwgMTApIC0gcGFyc2VJbnQoJCgnI2xvYW5Db250cmlidXRpb24nKS52YWwoKSwgMTApOwogICAgdmFyIGR1cmF0aW9uID0gcGFyc2VJbnQoJCgnI2xvYW5EdXJhdGlvbicpLnZhbCgpLCAxMCkgKiAxMjsKICAgIHZhciBwcmljZUJ5TW9udGggPSBzaW11bGF0ZUxvYW4odHJ1ZSk7CiAgICB2YXIgdG90YWxQcmljZSA9IHBhcnNlRmxvYXQocHJpY2VCeU1vbnRoICogZHVyYXRpb24pLnRvRml4ZWQoMik7CiAgICB2YXIgZGlmZiA9IHBhcnNlRmxvYXQodG90YWxQcmljZSAtIGFtb3VudCkudG9GaXhlZCgyKTsKCiAgICAkKCcjbG9hblJlc3VsdCAudG90YWwgc3BhbicpLmh0bWwodG90YWxQcmljZS50b0xvY2FsZVN0cmluZygpICsgJyAnICsgY3VycmVuY3kpOwogICAgJCgnI2xvYW5SZXN1bHQgLmNvc3Qgc3BhbicpLmh0bWwoZGlmZi50b0xvY2FsZVN0cmluZygpICsgJyAnICsgY3VycmVuY3kpOwogIH0KCjwvc2NyaXB0PgogICAgICAgICAgPC9hc2lkZT4KICA8L2Rpdj4KCiAgICAgIDxhc2lkZSBjbGFzcz0ibWFwICIgaWQ9InNob3dNYXAiPgogICAgICAgICAgICAgIDxkaXYgaWQ9Im1hcCIgc3R5bGU9IndpZHRoOiAxMDAlOyBoZWlnaHQ6IDQwMHB4OyIgY2xhc3M9Im9zX21hcCI+PC9kaXY+CjxzY3JpcHQ+CnZhciBtYXA7CiQoJ2hlYWQnKS5hcHBlbmQoJCgnPGxpbmsgcmVsPSJzdHlsZXNoZWV0IiB0eXBlPSJ0ZXh0L2NzcyIgLz4nKS5hdHRyKCdocmVmJywgJy9qcy9jb21tb24vbGVhZmxldC9sZWFmbGV0LmNzcycpKTsKJCgnaGVhZCcpLmFwcGVuZCgkKCc8bGluayByZWw9InN0eWxlc2hlZXQiIHR5cGU9InRleHQvY3NzIiAvPicpLmF0dHIoJ2hyZWYnLCAnL2pzL2NvbW1vbi9MZWFmbGV0Lkdlc3R1cmVIYW5kbGluZy9sZWFmbGV0LWdlc3R1cmUtaGFuZGxpbmcubWluLmNzcycpKTsKdmFyIG1hcmtlcl9tYXBfMTt2YXIgbWFya2VyX21hcF8yO3ZhciBtYXJrZXJzX21hcCA9IFtdO3ZhciBjaXJjbGVzX21hcCA9IFtdO2Z1bmN0aW9uIGxhdW5jaF9tYXBfbWFwKCkgewptYXAgPSBMLm1hcCgnbWFwJywgeyBzY3JvbGxXaGVlbFpvb206IGZhbHNlLCBnZXN0dXJlSGFuZGxpbmc6IEwuQnJvd3Nlci5tb2JpbGUgfSk7CkwudGlsZUxheWVyKCdodHRwczovL2NhcnRvZGItYmFzZW1hcHMte3N9Lmdsb2JhbC5zc2wuZmFzdGx5Lm5ldC9yYXN0ZXJ0aWxlcy92b3lhZ2VyL3t6fS97eH0ve3l9e3J9LnBuZycsIHsKYXR0cmlidXRpb246ICcmY29weTsgPGEgaHJlZj0iaHR0cDovL3d3dy5vcGVuc3RyZWV0bWFwLm9yZy9jb3B5cmlnaHQiIHRhcmdldD0iX2JsYW5rIj5PcGVuU3RyZWV0TWFwPC9hPiB8IDxhIGhyZWY9Imh0dHA6Ly9jYXJ0b2RiLmNvbS9hdHRyaWJ1dGlvbnMiIHRhcmdldD0iX2JsYW5rIj5DYXJ0b0RCPC9hPicKLCBtYXhab29tOiAxOQp9KS5hZGRUbyhtYXApOwp2YXIgaWNvbl9hZ2VuY3kgPSBMLmljb24oeyBpY29uVXJsOiAnL2pzL2NvbW1vbi9sZWFmbGV0L2ltYWdlcy9pY29uX2FnZW5jeS5zdmcnLCBpY29uU2l6ZTogWzMwLCAzOF0sIGljb25BbmNob3I6IFsxNSwgMzhdLCBwb3B1cEFuY2hvcjogWzAsIC0zOF0gfSk7CnZhciBpY29uX3VzZXIgPSBMLmljb24oeyBpY29uVXJsOiAnL2pzL2NvbW1vbi9sZWFmbGV0L2ltYWdlcy9pY29uX3VzZXIuc3ZnJywgaWNvblNpemU6IFszMCwgMzhdLCBpY29uQW5jaG9yOiBbMTUsIDM4XSwgcG9wdXBBbmNob3I6IFswLCAtMzhdIH0pOwp2YXIgaWNvbl90eXBlXzEgPSBMLmljb24oeyBpY29uVXJsOiAnL2pzL2NvbW1vbi9sZWFmbGV0L2ltYWdlcy9pY29uX3R5cGVfMS5zdmcnLCBpY29uU2l6ZTogWzMwLCAzOF0sIGljb25BbmNob3I6IFsxNSwgMzhdLCBwb3B1cEFuY2hvcjogWzAsIC0zOF0gfSk7CnZhciBpY29uX3R5cGVfMiA9IEwuaWNvbih7IGljb25Vcmw6ICcvanMvY29tbW9uL2xlYWZsZXQvaW1hZ2VzL2ljb25fdHlwZV8yLnN2ZycsIGljb25TaXplOiBbMzAsIDM4XSwgaWNvbkFuY2hvcjogWzE1LCAzOF0sIHBvcHVwQW5jaG9yOiBbMCwgLTM4XSB9KTsKdmFyIGljb25fdHlwZV8zID0gTC5pY29uKHsgaWNvblVybDogJy9qcy9jb21tb24vbGVhZmxldC9pbWFnZXMvaWNvbl90eXBlXzMuc3ZnJywgaWNvblNpemU6IFszMCwgMzhdLCBpY29uQW5jaG9yOiBbMTUsIDM4XSwgcG9wdXBBbmNob3I6IFswLCAtMzhdIH0pOwp2YXIgaWNvbl90eXBlXzQgPSBMLmljb24oeyBpY29uVXJsOiAnL2pzL2NvbW1vbi9sZWFmbGV0L2ltYWdlcy9pY29uX3R5cGVfNC5zdmcnLCBpY29uU2l6ZTogWzMwLCAzOF0sIGljb25BbmNob3I6IFsxNSwgMzhdLCBwb3B1cEFuY2hvcjogWzAsIC0zOF0gfSk7CnZhciBpY29uX3R5cGVfNSA9IEwuaWNvbih7IGljb25Vcmw6ICcvanMvY29tbW9uL2xlYWZsZXQvaW1hZ2VzL2ljb25fdHlwZV81LnN2ZycsIGljb25TaXplOiBbMzAsIDM4XSwgaWNvbkFuY2hvcjogWzE1LCAzOF0sIHBvcHVwQW5jaG9yOiBbMCwgLTM4XSB9KTsKdmFyIGljb25fdHlwZV82ID0gTC5pY29uKHsgaWNvblVybDogJy9qcy9jb21tb24vbGVhZmxldC9pbWFnZXMvaWNvbl90eXBlXzYuc3ZnJywgaWNvblNpemU6IFszMCwgMzhdLCBpY29uQW5jaG9yOiBbMTUsIDM4XSwgcG9wdXBBbmNob3I6IFswLCAtMzhdIH0pOwp2YXIgaWNvbl90eXBlXzcgPSBMLmljb24oeyBpY29uVXJsOiAnL2pzL2NvbW1vbi9sZWFmbGV0L2ltYWdlcy9pY29uX3R5cGVfNy5zdmcnLCBpY29uU2l6ZTogWzMwLCAzOF0sIGljb25BbmNob3I6IFsxNSwgMzhdLCBwb3B1cEFuY2hvcjogWzAsIC0zOF0gfSk7CnZhciBpY29uX3R5cGVfOCA9IEwuaWNvbih7IGljb25Vcmw6ICcvanMvY29tbW9uL2xlYWZsZXQvaW1hZ2VzL2ljb25fdHlwZV84LnN2ZycsIGljb25TaXplOiBbMzAsIDM4XSwgaWNvbkFuY2hvcjogWzE1LCAzOF0sIHBvcHVwQW5jaG9yOiBbMCwgLTM4XSB9KTsKdmFyIGljb25fdHlwZV85ID0gTC5pY29uKHsgaWNvblVybDogJy9qcy9jb21tb24vbGVhZmxldC9pbWFnZXMvaWNvbl90eXBlXzkuc3ZnJywgaWNvblNpemU6IFszMCwgMzhdLCBpY29uQW5jaG9yOiBbMTUsIDM4XSwgcG9wdXBBbmNob3I6IFswLCAtMzhdIH0pOwp2YXIgaWNvbl90eXBlXzEwID0gTC5pY29uKHsgaWNvblVybDogJy9qcy9jb21tb24vbGVhZmxldC9pbWFnZXMvaWNvbl90eXBlXzEwLnN2ZycsIGljb25TaXplOiBbMzAsIDM4XSwgaWNvbkFuY2hvcjogWzE1LCAzOF0sIHBvcHVwQW5jaG9yOiBbMCwgLTM4XSB9KTsKdmFyIGljb25fZW1wdHkgPSBMLmljb24oeyBpY29uVXJsOiAnL2pzL2NvbW1vbi9sZWFmbGV0L2ltYWdlcy9pY29uX2VtcHR5LnN2ZycsIGljb25TaXplOiBbMSwgMV0sIGljb25BbmNob3I6IFsxLCAxXSB9KTsKbWFya2VyX21hcF8xID0gTC5tYXJrZXIoWzQ4Ljg2NDQwMDAwMCwgMi4zNzE3NjAwMDBdLHtpY29uOmljb25fYWdlbmN5fSk7Cm1hcmtlcl9tYXBfMS5hZGRUbyhtYXApOwptYXJrZXJfbWFwXzEuYmluZFBvcHVwKCI8c3Ryb25nPkFnZW5jZSBkZXMgRW5mYW50cyBSb3VnZXMgT2JlcmthbXBmPC9zdHJvbmc+PGJyPjM4IHJ1ZSBPYmVya2FtcGY8YnI+NzUwMTEgUGFyaXMgMTHDqG1lPGJyPiszMyAoMCkxIDg1IDc0IDczIDczIik7Cm1hcmtlcnNfbWFwLnB1c2gobWFya2VyX21hcF8xKTsKbWFya2VyX21hcF8yID0gTC5tYXJrZXIoWzQ4Ljg3ODU2MDAwMCwgMi4zNjAzNzAwMDBdLHtpY29uOmljb25fdHlwZV8xfSk7Cm1hcmtlcl9tYXBfMi5hZGRUbyhtYXApOwptYXJrZXJzX21hcC5wdXNoKG1hcmtlcl9tYXBfMik7CmlmKG1hcmtlcnNfbWFwLmxlbmd0aD4wKSB7CiAgdmFyIGdyb3VwID0gTC5mZWF0dXJlR3JvdXAobWFya2Vyc19tYXApOwogIG1hcC5maXRCb3VuZHMoZ3JvdXAuZ2V0Qm91bmRzKCksIHttYXhab29tOiAxM30pOwp9CmlmKGNpcmNsZXNfbWFwLmxlbmd0aD4wKSB7CiAgZWwgPSBjaXJjbGVzX21hcC5zaGlmdCgpOyAgbWFwLmZpdEJvdW5kcyhbZWwuZ2V0TGF0TG5nKCldLCB7bWF4Wm9vbTogMTN9KTsKfQp9CiQuZ2V0U2NyaXB0KCcvanMvY29tbW9uL2xlYWZsZXQvbGVhZmxldC5qcycsIGZ1bmN0aW9uICgpIHsKICAkLmdldFNjcmlwdCgnL2pzL2NvbW1vbi9MZWFmbGV0Lkdlc3R1cmVIYW5kbGluZy9sZWFmbGV0LWdlc3R1cmUtaGFuZGxpbmcubWluLmpzJyk7CgkJbGF1bmNoX21hcF9tYXAoKTsKCQlpZiAodHlwZW9mIGNhbGxiYWNrX21hcCA9PT0gImZ1bmN0aW9uIikgeyBjYWxsYmFja19tYXAobWFwKTsgfQp9KTsKPC9zY3JpcHQ+CiAgICAgICAgICA8L2FzaWRlPgogIAogICAgICA8YXNpZGUgY2xhc3M9ImNvbnRhY3RMaW5lIGNvbnRhY3RVc2VyIiBpZD0iY29udGFjdExpbmUiPgogICAgICA8ZGl2IGNsYXNzPSJsYXlvdXRMYXJnZSI+CiAgICAgICAgPGgyPkNvbnRhY3RleiB1biBjb25zZWlsbGVyPC9oMj4KICAgICAgICA8ZGl2PgogICAgICAgICAgPGRpdj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iYWdlbmN5Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icGljdHVyZSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgYWx0PSJBZ2VuY2UgZGVzIEVuZmFudHMgUm91Z2VzIE9iZXJrYW1wZiIgc3JjPSIvdXBsb2Fkcy93ZWJzaXRlLzE3NjgvMDQ4ZTA1ZTY2YzBhNDgxZTRjNDFiYmMwN2I0ZTNiY2Q4NjYxZDY2Yi5qcGciIC8+ICAgICAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJhZGRyZXNzIHNtYWxsSWNvbiI+CiAgICAgICAgICAgICAgICAgIDM4IHJ1ZSBPYmVya2FtcGY8YnIgLz4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgNzUwMTEgUGFyaXMgMTHDqG1lPGJyPkZyYW5jZSAgICAgICAgICAgICAgICA8L3A+CiAgICAgICAgICAgICAgICA8cD4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InBob25lIHNtYWxsSWNvbiI+PGEgaHJlZj0idGVsOjAwMzMwMTg1NzQ3MzczIj4rMzMgKDApMSA4NSA3NCA3MyA3MzwvYT48L3NwYW4+PGJyIC8+ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0idXNlciI+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ1c2VyQnViYmxlIHBpY3R1cmUgcmVzaXplUGljdHVyZSIgZGF0YS1wcmVzZXJ2ZXBvcnRyYWl0PSJmYWxzZSIgZGF0YS1vdmVyZmxvdz0idHJ1ZSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBzcmM9Imh0dHBzOi8vYXBpLmFwaW1vLnByby91cGxvYWRzL3VzZXIvMzgzNDAvcGljdHVyZS5qcGciLz4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJzbWFsbEljb24gdXNlck5hbWUiPgogICAgICAgICAgICAgICAgICA8c3Ryb25nPkF1ZGUgUFJFVFJFPC9zdHJvbmc+PGJyIC8+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgQWdlbnQgaW1tb2JpbGllciAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICAgICAgPHA+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwaG9uZSBzbWFsbEljb24iPjxhIGhyZWY9InRlbDowMDMzMDYzNTU5MjU5MSI+KzMzICgwKTYgMzUgNTkgMjUgOTE8L2E+PC9zcGFuPjxiciAvPiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJtYWlsIHNtYWxsSWNvbiI+PGEgaHJlZj0ibWFpbHRvOmF1ZGVAYWdlbmNlZGVzZW5mYW50c3JvdWdlcy5jb20iPmF1ZGVAYWdlbmNlZGVzZW5mYW50c3JvdWdlcy5jb208L2E+PC9zcGFuPiAgICAgICAgICAgICAgICA8L3A+CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgIDxkaXY+CiAgICAgICAgICAgIAogIDxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij4KICAgIHZhciBjYXB0Y2hhcyA9IFtdOwogICAgdmFyIHN1Ym1pdHRlZEZvcm0gPSBudWxsOwogICAgCiAgICBmdW5jdGlvbiBoYW5kbGVGb3JtKHRva2VuKSB7CiAgICAgIHZhciAkdGhpcyA9ICQoJyMnICsgc3VibWl0dGVkRm9ybSk7CiAgICAgICQuYWpheCh7CiAgICAgICAgbWV0aG9kOiAnUE9TVCcsCiAgICAgICAgdXJsOiAkdGhpcy5hdHRyKCdhY3Rpb24nKSwKICAgICAgICBkYXRhOiAkdGhpcy5zZXJpYWxpemUoKSwKICAgICAgICBzdWNjZXNzOiBmdW5jdGlvbihkYXRhKSB7CiAgICAgICAgICBpZih0eXBlb2Ygc2hvd0Zvcm1DYWxsYmFjayA9PT0gJ2Z1bmN0aW9uJykgc2hvd0Zvcm1DYWxsYmFjaygpOwogICAgICAgICAgJHRoaXMucmVwbGFjZVdpdGgoZGF0YSk7CiAgICAgICAgfSwKICAgICAgICBlcnJvcjogZnVuY3Rpb24oeGhyKSB7CiAgICAgICAgICAkdGhpcy5yZXBsYWNlV2l0aCh4aHIucmVwb25zZVRleHQpOwogICAgICAgIH0KICAgICAgfSk7CiAgICB9CiAgICAKICAgIGZ1bmN0aW9uIGxvYWRDYXB0Y2hhKGZvcm1TZWxlY3RvcikgewogICAgICBpZighZm9ybVNlbGVjdG9yKSBmb3JtU2VsZWN0b3IgPSAnLmN1c3RvbUZvcm0nOwogICAgICAkKGZvcm1TZWxlY3RvciArICcgaW5wdXRbdHlwZT0ic3VibWl0Il0nKS5vbignY2xpY2snLCBmdW5jdGlvbihldmVudCkgeyBldmVudC5wcmV2ZW50RGVmYXVsdCgpOyBzdWJtaXR0ZWRGb3JtID0gJCh0aGlzKS5jbG9zZXN0KCdmb3JtJykuYXR0cignaWQnKTsgZ3JlY2FwdGNoYS5leGVjdXRlKGNhcHRjaGFzWyQodGhpcykuY2xvc2VzdCgnZm9ybScpLmF0dHIoJ2lkJyldKTsgfSk7CiAgICAgICQoZm9ybVNlbGVjdG9yICsgJyAuZy1yZWNhcHRjaGEnKS5lYWNoKGZ1bmN0aW9uKCkgewogICAgICAgIGlmKGNhcHRjaGFzLmluZGV4T2YoJCh0aGlzKS5jbG9zZXN0KCdmb3JtJykuYXR0cignaWQnKSkgPT0gLTEpIHsKICAgICAgICAgIHZhciAkdGhpcyA9ICQodGhpcyk7CiAgICAgICAgICB2YXIgY2FwdGNoYUlEID0gZ3JlY2FwdGNoYS5yZW5kZXIoJCh0aGlzKS5hdHRyKCdpZCcpLCB7ICdzaXRla2V5JyA6ICR0aGlzLmRhdGEoJ3NpdGVrZXknKS50b1N0cmluZygpLCAnc2l6ZScgOiAkdGhpcy5kYXRhKCdzaXplJykudG9TdHJpbmcoKSwgJ2NhbGxiYWNrJyA6ICR0aGlzLmRhdGEoJ2NhbGxiYWNrJykudG9TdHJpbmcoKSB9KTsKICAgICAgICAgIGNhcHRjaGFzWyQodGhpcykuY2xvc2VzdCgnZm9ybScpLmF0dHIoJ2lkJyldID0gY2FwdGNoYUlEOwogICAgICAgIH0KICAgICAgfSk7CiAgICB9CiAgPC9zY3JpcHQ+Cjxmb3JtIGlkPSJjb250YWN0LWZvcm0tMTgzMzk0NDkxMSIgY2xhc3M9ImN1c3RvbUZvcm0gbW9yZUZvcm0gIiBtZXRob2Q9InBvc3QiIGFjdGlvbj0iL2NvbnRhY3RGb3JtL3YzIj4gICAgCiAgPGRpdiBjbGFzcz0iY29udGFjdC11cy1jb250ZW50Ij4KICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJmaWVsZCBhZ2VuY3lJZCBkcm9wZG93biI+CiAgICAgICAgPGlucHV0IHR5cGU9ImhpZGRlbiIgbmFtZT0iY3VzdG9tZXJbYWdlbmN5X2lkXSIgdmFsdWU9IjExMjMyIiBpZD0iY3VzdG9tZXJfYWdlbmN5X2lkIiAvPiAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJmaWVsZCBsYXN0bmFtZSI+CiAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0idGV4dCIgbmFtZT0iY3VzdG9tZXJbbGFzdG5hbWVdIiBwbGFjZWhvbGRlcj0iTm9tIiBpZD0iY3VzdG9tZXJfbGFzdG5hbWUiIC8+ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZmllbGQgZW1haWwiPgogICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9InRleHQiIG5hbWU9ImN1c3RvbWVyW2VtYWlsXSIgcGxhY2Vob2xkZXI9ImUtbWFpbCIgaWQ9ImN1c3RvbWVyX2VtYWlsIiAvPiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImZpZWxkIHRlbCI+CiAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0idGV4dCIgbmFtZT0iY3VzdG9tZXJbdGVsXSIgcGxhY2Vob2xkZXI9IlTDqWzDqXBob25lIiBpZD0iY3VzdG9tZXJfdGVsIiAvPiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImZpZWxkIG1lc3NhZ2UiPgogICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRleHRhcmVhIHJvd3M9IjQiIGNvbHM9IjMwIiBuYW1lPSJjdXN0b21lclttZXNzYWdlXSIgcGxhY2Vob2xkZXI9Ik1lc3NhZ2UiIGlkPSJjdXN0b21lcl9tZXNzYWdlIj48L3RleHRhcmVhPiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgCiAgICA8ZGl2IGNsYXNzPSJjb250YWN0dXMtZ3JwZCI+CiAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJjaGVja2JveCIgbmFtZT0iY3VzdG9tZXJbZ3JwZF9hZ3JlZW1lbnRdIiBpZD0iY3VzdG9tZXJfZ3JwZF9hZ3JlZW1lbnQiIC8+ICAgICAgPGxhYmVsIGZvcj0iY3VzdG9tZXJfZ3JwZF9hZ3JlZW1lbnQiPkrigJlhaSBsdSBldCBqJ2FjY2VwdGUgbGEgPGEgdGFyZ2V0PSJfYmxhbmsiIGhyZWY9Ii9mci9kb25uZWVzLXBlcnNvbm5lbGxlcyI+cG9saXRpcXVlIGRlIGNvbmZpZGVudGlhbGl0w6k8L2E+IGR1IHNpdGU8L2xhYmVsPgogICAgPC9kaXY+CiAgPC9kaXY+CiAgCiAgPGlucHV0IHR5cGU9ImhpZGRlbiIgbmFtZT0iY3VzdG9tZXJbaWRdIiBpZD0iY3VzdG9tZXJfaWQiIC8+PGlucHV0IHR5cGU9ImhpZGRlbiIgbmFtZT0iY3VzdG9tZXJbYWN0aXZlX2lzXSIgdmFsdWU9IjEiIGlkPSJjdXN0b21lcl9hY3RpdmVfaXMiIC8+PGlucHV0IHR5cGU9ImhpZGRlbiIgbmFtZT0iY3VzdG9tZXJbd2Vic2l0ZV9pZF0iIHZhbHVlPSIxNzY4IiBpZD0iY3VzdG9tZXJfd2Vic2l0ZV9pZCIgLz48aW5wdXQgdHlwZT0iaGlkZGVuIiBuYW1lPSJjdXN0b21lclthZ2VuY3lfaWRdIiB2YWx1ZT0iMTEyMzIiIGlkPSJjdXN0b21lcl9hZ2VuY3lfaWQiIC8+PGlucHV0IHR5cGU9ImhpZGRlbiIgbmFtZT0iY3VzdG9tZXJbdXNlcl9pZF0iIGlkPSJjdXN0b21lcl91c2VyX2lkIiAvPjxpbnB1dCB0eXBlPSJoaWRkZW4iIG5hbWU9ImN1c3RvbWVyW2VzdGF0ZV9pZF0iIHZhbHVlPSIzNjY3ODM0IiBpZD0iY3VzdG9tZXJfZXN0YXRlX2lkIiAvPjxpbnB1dCB0eXBlPSJoaWRkZW4iIG5hbWU9ImN1c3RvbWVyW3JlcXVlc3RfaWRdIiB2YWx1ZT0iMiIgaWQ9ImN1c3RvbWVyX3JlcXVlc3RfaWQiIC8+PGlucHV0IHR5cGU9ImhpZGRlbiIgbmFtZT0iY3VzdG9tZXJbbGFuZ3VhZ2VdIiB2YWx1ZT0iZnIiIGlkPSJjdXN0b21lcl9sYW5ndWFnZSIgLz48aW5wdXQgdHlwZT0iaGlkZGVuIiBuYW1lPSJjdXN0b21lcltfY3NyZl90b2tlbl0iIHZhbHVlPSI3ZTE4MzU4NWRiNWZlZTdjMWU2YzM0ZDVlMmNiNzdlOCIgaWQ9ImN1c3RvbWVyX19jc3JmX3Rva2VuIiAvPiAgCiAgICAgICAgPGlucHV0IHR5cGU9ImhpZGRlbiIgbmFtZT0idHlwZSIgdmFsdWU9Im1vcmUiPgogICAgICAgIAogICAgCiAgPGRpdiBpZD0iY2FwdGNoYS0xODMzOTQ0OTExIiBjbGFzcz0iZy1yZWNhcHRjaGEiIGRhdGEtc2l0ZWtleT0iNkxlRGpIMFVBQUFBQUdJZEREd2ptdFd4YmdHb09PTzdFMEpQdF9zbSIgZGF0YS1jYWxsYmFjaz0iaGFuZGxlRm9ybSIgZGF0YS1zaXplPSJpbnZpc2libGUiPjwvZGl2PgogIAogIDxpbnB1dCB0eXBlPSJzdWJtaXQiIHZhbHVlPSJFbnZveWVyIiBjbGFzcz0iY29udGFjdHVzLXNlbmQiLz4KICA8L2Zvcm0+ICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgogICAgICA8L2Rpdj4KICAgIDwvYXNpZGU+CiAgPC9zZWN0aW9uPgoKPHNjcmlwdD4hZnVuY3Rpb24oZCxzLGlkKXt2YXIganMsZmpzPWQuZ2V0RWxlbWVudHNCeVRhZ05hbWUocylbMF07aWYoIWQuZ2V0RWxlbWVudEJ5SWQoaWQpKXtqcz1kLmNyZWF0ZUVsZW1lbnQocyk7anMuaWQ9aWQ7anMuc3JjPSIvL3BsYXRmb3JtLnR3aXR0ZXIuY29tL3dpZGdldHMuanMiO2Zqcy5wYXJlbnROb2RlLmluc2VydEJlZm9yZShqcyxmanMpO319KGRvY3VtZW50LCJzY3JpcHQiLCJ0d2l0dGVyLXdqcyIpOzwvc2NyaXB0PgogICAgPC9kaXY+CgogICAgPGZvb3Rlcj4KICAgICAgPGRpdiBjbGFzcz0ibGF5b3V0TGFyZ2UgY2xlYXJmaXgiPgogICAgICAgIAogICAgICAgIAogICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJuZXR3b3JrIj4KICAgICAgICAgICAgPGgzPk5vdHJlIHLDqXNlYXU8L2gzPgogICAgICAgICAgICA8dWwgY2xhc3M9InNvY2lhbExpbmtzIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpIGNsYXNzPSJpY29uIHNvY2lhbCI+PGEgY2xhc3M9ImZhY2Vib29rIiB0YXJnZXQ9Il9ibGFuayIgaHJlZj0iaHR0cHM6Ly93d3cuZmFjZWJvb2suY29tL0FnZW5jZS1kZXMtRW5mYW50cy1Sb3VnZXMtMjY2NzQ1OTcwMTE0NDEwIj5mYWNlYm9vazwvYT48L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaSBjbGFzcz0iaWNvbiBzb2NpYWwiPjxhIGNsYXNzPSJlbWFpbCIgaHJlZj0iL2ZyL2NvbnRhY3Rlei1ub3VzIj5FbWFpbDwvYT48L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgIDwvdWw+CiAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImFnZW5jeSI+CiAgICAgICAgICAgICAgICAgICAgICA8aDM+QWdlbmNlIGRlcyBFbmZhbnRzIFJvdWdlczwvaDM+CiAgICAgICAgICAgIDxwIGNsYXNzPSJhZGRyZXNzIHNtYWxsSWNvbiI+CiAgICAgICAgICAgICAgNDQgcnVlIGRlIEJyZXRhZ25lPGJyPiAgICAgICAgICAgICAgICAgICAgICAgICAgICA3NTAwMyBQYXJpcyAzw6htZTxicj4KICAgICAgICAgICAgPC9wPgogICAgICAgICAgICA8cD4KICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icGhvbmUgc21hbGxJY29uIj48YSBocmVmPSJ0ZWw6MDAzMzAxNTMwMTAwNDAiPiszMyAoMCkxIDUzIDAxIDAwIDQwPC9hPjwvc3Bhbj48YnIgLz4gICAgICAgICAgICAgICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgICAgICAgPC9kaXY+CgogICAgICAgIDxkaXYgY2xhc3M9InNlY3RvcnMiPgogICAgICAgICAgICAgICAgICAgICAgPGgzPk5hdmlnYXRpb248L2gzPgogICAgICAgICAgICA8dWw+PGxpIGNsYXNzPSJsdjEiPjxhIHRhcmdldD0iX3NlbGYiIGNsYXNzPSIiIGhyZWY9Ii9mci8iPkFjY3VlaWw8L2E+PC9saT48bGkgY2xhc3M9Imx2MSI+PGEgdGFyZ2V0PSJfc2VsZiIgY2xhc3M9IiIgaHJlZj0iL2ZyL3ZlbnRlIj5WZW50ZTwvYT48L2xpPjxsaSBjbGFzcz0ibHYxIj48YSB0YXJnZXQ9Il9zZWxmIiBjbGFzcz0iIiBocmVmPSIvZnIvbG9jYXRpb24iPkxvY2F0aW9uPC9hPjwvbGk+PGxpIGNsYXNzPSJsdjEiPjxhIHRhcmdldD0iX3NlbGYiIGNsYXNzPSIiIGhyZWY9Ii9mci9jb21tZXJjZXMiPkNvbW1lcmNlczwvYT48L2xpPjxsaSBjbGFzcz0ibHYxIj48YSB0YXJnZXQ9Il9zZWxmIiBjbGFzcz0iIiBocmVmPSIvZnIvZXN0aW1hdGlvbiI+RXN0aW1hdGlvbjwvYT48L2xpPjxsaSBjbGFzcz0ibHYxIj48YSB0YXJnZXQ9Il9zZWxmIiBjbGFzcz0iIiBocmVmPSIvZnIvYmxvZyI+QmxvZzwvYT48L2xpPjxsaSBjbGFzcz0ibHYxIj48YSB0YXJnZXQ9Il9zZWxmIiBjbGFzcz0iIiBocmVmPSIvZnIvbm90cmUtYWdlbmNlIj5Ob3RyZSBhZ2VuY2U8L2E+PC9saT48bGkgY2xhc3M9Imx2MSI+PGEgdGFyZ2V0PSJfc2VsZiIgY2xhc3M9IiIgaHJlZj0iL2ZyL2NvbnRhY3Rlei1ub3VzIj5Db250YWN0ZXotbm91czwvYT48L2xpPjwvdWw+ICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgIDwvZGl2PgogICAgICA8ZGl2IGNsYXNzPSJjcmVkaXRzIj4KICAgICAgICA8cCBjbGFzcz0ibGF5b3V0TGFyZ2UiPsKpIDIwMjAgQWdlbmNlIGRlcyBFbmZhbnRzIFJvdWdlcyAtIDxhIGhyZWY9Ii9mci9tZW50aW9ucy1sZWdhbGVzIj5NZW50aW9ucyBsw6lnYWxlcyAvIG5vcyBob25vcmFpcmVzPC9hPiAtIDxhIGhyZWY9Ii9mci9kb25uZWVzLXBlcnNvbm5lbGxlcyI+RG9ubsOpZXMgcGVyc29ubmVsbGVzPC9hPiA8c3BhbiBjbGFzcz0iYXBpbW8iPuKAkyBEZXNpZ24gYnkgPGEgdGFyZ2V0PSJfYmxhbmsiIGhyZWY9Imh0dHBzOi8vYXBpbW8ubmV0LyI+YXBpbW/ihKIgTG9naWNpZWwgaW1tb2JpbGllcjwvYT4gPC9zcGFuPgogICAgICAgICAgICAgICAgPC9wPgogICAgICA8L2Rpdj4KICAgIDwvZm9vdGVyPgogICAgCiAgICA8ZGl2IGNsYXNzPSJjb29raWVDaG9pY2UiPgogIDxwPkVuIGNsaXF1YW50IHN1ciAiSidhY2NlcHRlIiwgdm91cyBhdXRvcmlzZXogbCd1dGlsaXNhdGlvbiBkZSBjb29raWVzIGFmaW4gZGUgdm91cyBhc3N1cmVyIHVuZSBleHBlcmllbmNlIG9wdGltYWxlIHN1ciBjZSBzaXRlLjwvcD4KICA8cD48YSBocmVmPSIvZnIvbWVudGlvbnMtbGVnYWxlcyI+RW4gc2F2b2lyIHBsdXM8L2E+IDxhIGNsYXNzPSJjbG9zZSIgaHJlZj0iIyI+SidhY2NlcHRlPC9hPjwvcD4KPC9kaXY+Cgo8c3R5bGUgdHlwZT0idGV4dC9jc3MiPgogIC5jb29raWVDaG9pY2UgeyBwb3NpdGlvbjogZml4ZWQ7IGJvdHRvbTogMDsgbGVmdDogMDsgd2lkdGg6IDEwMCU7IHBhZGRpbmc6IDEwcHg7IGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwwLDAsMC45KTsgei1pbmRleDogOTk5OyB9CiAgLmNvb2tpZUNob2ljZSBwIHsgcGFkZGluZzogMDsgbWFyZ2luOiAwOyBjb2xvcjogI0ZGRjsgdGV4dC1hbGlnbjogY2VudGVyOyBtYXJnaW4tYm90dG9tOiAxMHB4OyB9CiAgLmNvb2tpZUNob2ljZSBwOmxhc3Qtb2YtdHlwZSB7IG1hcmdpbjogMDsgfQogIC5jb29raWVDaG9pY2UgYSB7IGRpc3BsYXk6IGlubGluZS1ibG9jazsgY29sb3I6ICNBQUE7IG1hcmdpbi1sZWZ0OiAyMHB4OyB9CiAgLmNvb2tpZUNob2ljZSBhOmZpcnN0LWNoaWxkIHsgbWFyZ2luOiAwOyB9Cjwvc3R5bGU+CjxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij4KICAkKCcuY29va2llQ2hvaWNlIC5jbG9zZScpLmNsaWNrKGZ1bmN0aW9uKGUpIHsKICAgIGUucHJldmVudERlZmF1bHQoKTsKICAgICQuYWpheCh7CiAgICAgIHVybDogIi9sZWdhbC9jb29raWVjb25zZW50IiwKICAgICAgdHlwZTogIlBPU1QiLAogICAgICBzdWNjZXNzOmZ1bmN0aW9uKGRhdGEsIHRleHRTdGF0dXMpIHsKICAgICAgICAkKCcuY29va2llQ2hvaWNlJykuc2xpZGVVcCgnZmFzdCcpOwogICAgICAgIGlmICh0eXBlb2YgZGF0YUxheWVyICE9ICd1bmRlZmluZWQnKQogICAgICAgICAgZGF0YUxheWVyLnB1c2goeydldmVudCcgOiAnY29va2llX2NvbnNlbnRfY2xpY2snfSkKICAgICAgfQogICAgfSk7CiAgfSk7Cjwvc2NyaXB0PgoKICAgIAogICAgCiAgICA8c2NyaXB0PihmdW5jdGlvbihkLCBzLCBpZCkgewogICAgICB2YXIganMsIGZqcyA9IGQuZ2V0RWxlbWVudHNCeVRhZ05hbWUocylbMF07CiAgICAgIGlmIChkLmdldEVsZW1lbnRCeUlkKGlkKSkgcmV0dXJuOwogICAgICBqcyA9IGQuY3JlYXRlRWxlbWVudChzKTsganMuaWQgPSBpZDsKICAgICAganMuc3JjID0gIi8vY29ubmVjdC5mYWNlYm9vay5uZXQvZnJfRlIvYWxsLmpzI3hmYm1sPTEiOwogICAgICBmanMucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUoanMsIGZqcyk7CiAgICB9KGRvY3VtZW50LCAnc2NyaXB0JywgJ2ZhY2Vib29rLWpzc2RrJykpOzwvc2NyaXB0PgogICAgPHNjcmlwdCB0eXBlPSJhcHBsaWNhdGlvbi9qYXZhc2NyaXB0IiBzcmM9Ii9qcy9jb21tb24vanF1ZXJ5LXVpL2pxdWVyeS11aS0xLjEwLjIuY3VzdG9tLm1pbi5qcyI+PC9zY3JpcHQ+CiAgICA8c2NyaXB0IHR5cGU9ImFwcGxpY2F0aW9uL2phdmFzY3JpcHQiIHNyYz0iaHR0cHM6Ly9kMXRnOTBid2p3M2V0aC5jbG91ZGZyb250Lm5ldC9qcy9tb2Rlcm5penIuY3VzdG9tLmpzIj48L3NjcmlwdD4KICAgIDxzY3JpcHQgdHlwZT0iYXBwbGljYXRpb24vamF2YXNjcmlwdCIgc3JjPSJodHRwczovL2QxdGc5MGJ3anczZXRoLmNsb3VkZnJvbnQubmV0L2pzL2ZhbmN5Ym94Mi9qcXVlcnkuZmFuY3lib3gucGFjay5qcyI+PC9zY3JpcHQ+CiAgICA8c2NyaXB0IHR5cGU9ImFwcGxpY2F0aW9uL2phdmFzY3JpcHQiIHNyYz0iaHR0cHM6Ly9kMXRnOTBid2p3M2V0aC5jbG91ZGZyb250Lm5ldC9qcy9vd2wtY2Fyb3VzZWwyL293bC5jYXJvdXNlbC5taW4uanMiPjwvc2NyaXB0PgogICAgPHNjcmlwdCB0eXBlPSJhcHBsaWNhdGlvbi9qYXZhc2NyaXB0IiBzcmM9Imh0dHBzOi8vZDF0ZzkwYndqdzNldGguY2xvdWRmcm9udC5uZXQvanMvbXVsdGlwbGUtc2VsZWN0L211bHRpcGxlLXNlbGVjdC5taW4uanMiPjwvc2NyaXB0PgogICAgPHNjcmlwdCB0eXBlPSJhcHBsaWNhdGlvbi9qYXZhc2NyaXB0IiBzcmM9Imh0dHBzOi8vZDF0ZzkwYndqdzNldGguY2xvdWRmcm9udC5uZXQvanMvZGF0ZXBpY2tlci9kYXRlcGlja2VyLm1pbi5qcyI+PC9zY3JpcHQ+CiAgICA8c2NyaXB0IHR5cGU9ImFwcGxpY2F0aW9uL2phdmFzY3JpcHQiIHNyYz0iaHR0cHM6Ly9kMXRnOTBid2p3M2V0aC5jbG91ZGZyb250Lm5ldC9qcy9kYXRlcGlja2VyL2RhdGVwaWNrZXIuZnItRlIuanMiPjwvc2NyaXB0PgogICAgPHNjcmlwdCBzcmM9Imh0dHBzOi8vY2RuanMuY2xvdWRmbGFyZS5jb20vYWpheC9saWJzL3NlbGVjdDIvNC4wLjMvanMvc2VsZWN0Mi5mdWxsLm1pbi5qcyI+PC9zY3JpcHQ+CiAgICA8c2NyaXB0IHNyYz0iL2pzL2NvbW1vbi9zZWxlY3QyLm9wdGdyb3VwU2VsZWN0L3NlbGVjdDIub3B0Z3JvdXBTZWxlY3QuanMiPjwvc2NyaXB0PgogICAgPHNjcmlwdCB0eXBlPSJhcHBsaWNhdGlvbi9qYXZhc2NyaXB0IiBzcmM9Imh0dHBzOi8vY2RuanMuY2xvdWRmbGFyZS5jb20vYWpheC9saWJzL21hZ25pZmljLXBvcHVwLmpzLzEuMS4wL2pxdWVyeS5tYWduaWZpYy1wb3B1cC5taW4uanMiPjwvc2NyaXB0PgogICAgPHNjcmlwdCB0eXBlPSJhcHBsaWNhdGlvbi9qYXZhc2NyaXB0IiBzcmM9Imh0dHBzOi8vY2RuanMuY2xvdWRmbGFyZS5jb20vYWpheC9saWJzL2pxdWVyeS50b3VjaHN3aXBlLzEuNi4xOS9qcXVlcnkudG91Y2hTd2lwZS5qcyI+PC9zY3JpcHQ+CiAgICAgICAgICAgIDxzY3JpcHQgdHlwZT0iYXBwbGljYXRpb24vamF2YXNjcmlwdCIgc3JjPSIvanMvZnJlZTEwL21haW4uanMiPjwvc2NyaXB0PgogIDwvYm9keT4KPC9odG1sPgo=
    http_version: null
  recorded_at: Fri, 03 Apr 2020 13:33:44 GMT
- request:
    method: get
    uri: https://www.agencedesenfantsrouges.com/fr/recherche/vente-appartement-3-pieces-paris-4eme-75004-3606930
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Fri, 03 Apr 2020 13:33:45 GMT
      Server:
      - Apache/2.4.25 (Debian)
      Upgrade:
      - h2,h2c
      Connection:
      - Upgrade
      Set-Cookie:
      - symfony=87vol0dumg45398rg5v3otq4p7; path=/
      Vary:
      - Accept-Encoding
      Content-Length:
      - '12928'
      Content-Type:
      - text/html; charset=utf-8
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: null
  recorded_at: Fri, 03 Apr 2020 13:33:45 GMT
- request:
    method: get
    uri: https://www.agencedesenfantsrouges.com/fr/recherche/vente-appartement-2-pieces-paris-11eme-75011-3679148
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Fri, 03 Apr 2020 13:33:45 GMT
      Server:
      - Apache/2.4.25 (Debian)
      Upgrade:
      - h2,h2c
      Connection:
      - Upgrade
      Set-Cookie:
      - symfony=tjhc4d0kvj5spkd048051vnlk6; path=/
      Vary:
      - Accept-Encoding
      Content-Length:
      - '12825'
      Content-Type:
      - text/html; charset=utf-8
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        PCFET0NUWVBFIGh0bWw+CjxodG1sIGxhbmc9ImZyIiA+CiAgPGhlYWQ+CiAgICA8bWV0YSBjaGFyc2V0PSJ1dGYtOCI+CgogICAgCiAgICAgICAgICAgICAgICAgIDxsaW5rIHJlbD0iYWx0ZXJuYXRlIiBocmVmPSJodHRwczovL3d3dy5hZ2VuY2VkZXNlbmZhbnRzcm91Z2VzLmNvbS9mci9yZWNoZXJjaGUvdmVudGUtYXBwYXJ0ZW1lbnQtMi1waWVjZXMtcGFyaXMtMTFlbWUtNzUwMTEtMzY3OTE0OCIgaHJlZmxhbmc9ImZyIiAvPgogICAgICAgICAgICAgIDxsaW5rIHJlbD0iYWx0ZXJuYXRlIiBocmVmPSJodHRwczovL3d3dy5hZ2VuY2VkZXNlbmZhbnRzcm91Z2VzLmNvbS9lbi9zZWFyY2gvc2FsZS1hcGFydG1lbnQtMi1yb29tcy1wYXJpcy0xMWVtZS03NTAxMS0zNjc5MTQ4IiBocmVmbGFuZz0iZW4iIC8+CiAgICAgICAgICAgICAgPGxpbmsgcmVsPSJhbHRlcm5hdGUiIGhyZWY9Imh0dHBzOi8vd3d3LmFnZW5jZWRlc2VuZmFudHNyb3VnZXMuY29tL2l0L3NlYXJjaC92ZW5kaXRhLWFwcGFydGFtZW50by0yLXJvb21zLXBhcmlzLTExZW1lLTc1MDExLTM2NzkxNDgiIGhyZWZsYW5nPSJpdCIgLz4KICAgICAgICAgIAogICAgCiAgICA8bWV0YSBuYW1lPSJ2aWV3cG9ydCIgY29udGVudD0id2lkdGg9ZGV2aWNlLXdpZHRoLGluaXRpYWwtc2NhbGU9MSIgLz4KICAgIDxtZXRhIG5hbWU9ImRlc2NyaXB0aW9uIiBjb250ZW50PSJPRkYgTWFya2V0IERhbnMgdW5lIGpvbGllIGNvcHJvcHJpw6l0w6ksIGF1IDMgw6htZSDDqXRhZ2UgYXZlYyBhc2NlbnNldXIuIEFwcGFydGVtZW50IDIgcGnDqGNlcyBkJ2V4Y2VwdGlvbiBhdSBjb2V1ciBkdSAxMSDDqG1lIGFycm9uZGlzc2VtZW50LiANCklsIHNlIGNvbXBvc2UgZCd1bmUgZ3JhbmRlIHBpw6hjZXMgw6Agdml2cmUgYXZlYyBiYWxjb24gZXQgY3Vpc2luZSBvdXZlcnRlIHRvdXQgw6lxdWlww6llLCB1bmUgY2hhbWJyZSBhdmVj4oCmIiAvPgo8bWV0YSBuYW1lPSJrZXl3b3JkcyIgY29udGVudD0iVmVudGUsQXBwYXJ0ZW1lbnQsUGFyaXMgMTHDqG1lLEZyYW5jZSwyIHBpw6hjZXMsUnVlIiAvPgo8bWV0YSBuYW1lPSJyb2JvdHMiIGNvbnRlbnQ9ImluZGV4LCBmb2xsb3ciIC8+CiAgICA8bWV0YSBwcm9wZXJ0eT0ib2c6dXJsIiBjb250ZW50PSJodHRwczovL3d3dy5hZ2VuY2VkZXNlbmZhbnRzcm91Z2VzLmNvbS9mci9yZWNoZXJjaGUvdmVudGUtYXBwYXJ0ZW1lbnQtMi1waWVjZXMtcGFyaXMtMTFlbWUtNzUwMTEtMzY3OTE0OCI+ICAgIDxtZXRhIHByb3BlcnR5PSJvZzp0aXRsZSIgY29udGVudD0iRVhDTFVTSVZJVEUgOiBYScOobWUgcGxhY2UgZm9udGFpbmUgVGltYmF1ZCBzdWJsaW1lIDIgcGnDqGNlcyB2dWUgZMOpZ2Fnw6llIj4gICAgPG1ldGEgcHJvcGVydHk9Im9nOmRlc2NyaXB0aW9uIiBjb250ZW50PSJPRkYgTWFya2V0IERhbnMgdW5lIGpvbGllIGNvcHJvcHJpw6l0w6ksIGF1IDMgw6htZSDDqXRhZ2UgYXZlYyBhc2NlbnNldXIuIEFwcGFydGVtZW50IDIgcGnDqGNlcyBkJ2V4Y2VwdGlvbiBhdSBjb2V1ciBkdSAxMSDDqG1lIGFycm9uZGlzc2VtZW50LiANCklsIHNlIGNvbXBvc2UgZCd1bmUgZ3JhbmRlIHBpw6hjZXMgw6Agdml2cmUgYXZlYyBiYWxjb24gZXTigKYiPiAgICA8bWV0YSBwcm9wZXJ0eT0ib2c6aW1hZ2UiIGNvbnRlbnQ9Imh0dHBzOi8vZDFxZmoyMzF1Zzd3ZHUuY2xvdWRmcm9udC5uZXQvcGljdHVyZXMvZXN0YXRlLzM3NzIvMzc3MTYyOS8xMjQ2MjkwMjg4NWU2N2JkYjMxZGE1NTAuMzI2NTI3ODZfYTBkZTMwNzdjMl8xMDI0LmpwZyI+ICAgIDx0aXRsZT5FWENMVVNJVklURSA6IFhJw6htZSBwbGFjZSBmb250YWluZSBUaW1iYXVkIHN1YmxpbWUgMiBwacOoY2VzIHZ1ZSBkw6lnYWfDqWU8L3RpdGxlPgogICAgPG1ldGEgbmFtZT0idHdpdHRlcjpjYXJkIiBjb250ZW50PSJzdW1tYXJ5Ij48L21ldGE+CiAgICA8bGluayByZWw9ImRucy1wcmVmZXRjaCIgaHJlZj0iaHR0cHM6Ly9kMXRnOTBid2p3M2V0aC5jbG91ZGZyb250Lm5ldCI+CiAgICA8c2NyaXB0IHNyYz0iaHR0cHM6Ly9hamF4Lmdvb2dsZWFwaXMuY29tL2FqYXgvbGlicy9qcXVlcnkvMS45LjEvanF1ZXJ5Lm1pbi5qcyI+PC9zY3JpcHQ+CiAgICA8c2NyaXB0PndpbmRvdy5qUXVlcnkgfHwgZG9jdW1lbnQud3JpdGUoJzxzY3JpcHQgc3JjPSIvanMvY29tbW9uL2pxdWVyeS5taW4uanMiPlx4M0Mvc2NyaXB0PicpPC9zY3JpcHQ+CiAgICA8bGluayByZWw9InN0eWxlc2hlZXQiIHR5cGU9InRleHQvY3NzIiBtZWRpYT0ic2NyZWVuIiBocmVmPSIvY3NzL2NvbW1vbi91dGlscy5jc3MiPjxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0IiBzcmM9Ii9qcy9jb21tb24vanF1ZXJ5LndhaXRmb3JpbWFnZXMubWluLmpzIj48L3NjcmlwdD48c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCIgc3JjPSIvanMvY29tbW9uL3V0aWxzLmpzIj48L3NjcmlwdD4gICAgPGxpbmsgcmVsPSJzdHlsZXNoZWV0IiBocmVmPSJodHRwczovL2QxdGc5MGJ3anczZXRoLmNsb3VkZnJvbnQubmV0L2pzL293bC1jYXJvdXNlbDIvYXNzZXRzL293bC5jYXJvdXNlbC5taW4uY3NzIj4KICAgIDxsaW5rIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0iaHR0cHM6Ly9kMXRnOTBid2p3M2V0aC5jbG91ZGZyb250Lm5ldC9qcy9vd2wtY2Fyb3VzZWwyL2Fzc2V0cy9vd2wudGhlbWUuZGVmYXVsdC5jc3MiPgogICAgPGxpbmsgcmVsPSJzdHlsZXNoZWV0IiBocmVmPSJodHRwczovL2QxdGc5MGJ3anczZXRoLmNsb3VkZnJvbnQubmV0L2pzL293bC1jYXJvdXNlbDIvYXNzZXRzL2FuaW1hdGUubWluLmNzcyI+CiAgICA8bGluayByZWw9InN0eWxlc2hlZXQiIGhyZWY9Imh0dHBzOi8vZDF0ZzkwYndqdzNldGguY2xvdWRmcm9udC5uZXQvanMvbXVsdGlwbGUtc2VsZWN0L211bHRpcGxlLXNlbGVjdC5jc3MiPgogICAgPGxpbmsgcmVsPSJzdHlsZXNoZWV0IiBocmVmPSJodHRwczovL2QxdGc5MGJ3anczZXRoLmNsb3VkZnJvbnQubmV0L2pzL2RhdGVwaWNrZXIvZGF0ZXBpY2tlci5taW4uY3NzIj4KICAgIDxsaW5rIHJlbD0ic3R5bGVzaGVldCIgdHlwZT0idGV4dC9jc3MiIG1lZGlhPSJzY3JlZW4iIGhyZWY9Imh0dHBzOi8vZDF0ZzkwYndqdzNldGguY2xvdWRmcm9udC5uZXQvanMvZmFuY3lib3gyL2pxdWVyeS5mYW5jeWJveC5taW4uY3NzIj4KICAgIDxsaW5rIHJlbD0ic3R5bGVzaGVldCIgdHlwZT0idGV4dC9jc3MiIG1lZGlhPSJzY3JlZW4iIGhyZWY9Imh0dHBzOi8vY2RuanMuY2xvdWRmbGFyZS5jb20vYWpheC9saWJzL21hZ25pZmljLXBvcHVwLmpzLzEuMS4wL21hZ25pZmljLXBvcHVwLm1pbi5jc3MiPgogICAgPGxpbmsgcmVsPSJzdHlsZXNoZWV0IiBocmVmPSJodHRwczovL2NkbmpzLmNsb3VkZmxhcmUuY29tL2FqYXgvbGlicy9zZWxlY3QyLzQuMC4zL2Nzcy9zZWxlY3QyLm1pbi5jc3MiIC8+CiAgICAgICAgICAgIDxsaW5rIHJlbD0ic3R5bGVzaGVldCIgdHlwZT0idGV4dC9jc3MiIG1lZGlhPSJzY3JlZW4scHJpbnQiIGhyZWY9Ii9jc3MvZnJlZTEwL21haW4uY3NzIj4KICAgIDxsaW5rIHJlbD0ic3R5bGVzaGVldCIgdHlwZT0idGV4dC9jc3MiIG1lZGlhPSJzY3JlZW4scHJpbnQiIGhyZWY9Ii9taXNjL2NzcyIgLz4KICAgICAgICA8bGluayByZWw9InN0eWxlc2hlZXQiIHR5cGU9InRleHQvY3NzIiBtZWRpYT0ic2NyZWVuLHByaW50IiBocmVmPSIvY3NzLTE3NjgiPgogICAgPGxpbmsgcmVsPSJzdHlsZXNoZWV0IiB0eXBlPSJ0ZXh0L2NzcyIgbWVkaWE9InNjcmVlbixwcmludCIgaHJlZj0iL2Nzcy9mcmVlMTAvbW9iaWxlLmNzcyI+CgogICAgCiAgICAKICAgIDxzY3JpcHQgc3JjPSdodHRwczovL3d3dy5nb29nbGUuY29tL3JlY2FwdGNoYS9hcGkuanM/cmVuZGVyPWV4cGxpY2l0Jm9ubG9hZD1sb2FkQ2FwdGNoYScgYXN5bmMgZGVmZXI+PC9zY3JpcHQ+CgogICAgCiAgICAgICAgICA8IS0tIEdvb2dsZSBUYWcgTWFuYWdlciAtLT4KICAgICAgPHNjcmlwdD4oZnVuY3Rpb24odyxkLHMsbCxpKXt3W2xdPXdbbF18fFtdO3dbbF0ucHVzaCh7J2d0bS5zdGFydCc6CiAgICAgIG5ldyBEYXRlKCkuZ2V0VGltZSgpLGV2ZW50OidndG0uanMnfSk7dmFyIGY9ZC5nZXRFbGVtZW50c0J5VGFnTmFtZShzKVswXSwKICAgICAgaj1kLmNyZWF0ZUVsZW1lbnQocyksZGw9bCE9J2RhdGFMYXllcic/JyZsPScrbDonJztqLmFzeW5jPXRydWU7ai5zcmM9CiAgICAgICdodHRwczovL3d3dy5nb29nbGV0YWdtYW5hZ2VyLmNvbS9ndG0uanM/aWQ9JytpK2RsO2YucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUoaixmKTsKICAgICAgfSkod2luZG93LGRvY3VtZW50LCdzY3JpcHQnLCdkYXRhTGF5ZXInLCdHVE0tUFBUQkZLUicpOzwvc2NyaXB0PgogICAgICA8IS0tIEVuZCBHb29nbGUgVGFnIE1hbmFnZXIgLS0+CiAgICAKICAgIAogICAgICA8L2hlYWQ+CgogIDxib2R5IGNsYXNzPSJsYW5nLWZyIGVzdGF0ZS1zaG93IG5hdHVyZS0xIj4KICAgIDxkaXYgaWQ9ImZiLXJvb3QiPjwvZGl2PgogICAgICAgICAgPCEtLSBHb29nbGUgVGFnIE1hbmFnZXIgKG5vc2NyaXB0KSAtLT4KICAgICAgPG5vc2NyaXB0PjxpZnJhbWUgc3JjPSJodHRwczovL3d3dy5nb29nbGV0YWdtYW5hZ2VyLmNvbS9ucy5odG1sP2lkPUdUTS1QUFRCRktSIiBoZWlnaHQ9IjAiIHdpZHRoPSIwIiBzdHlsZT0iZGlzcGxheTpub25lO3Zpc2liaWxpdHk6aGlkZGVuIj48L2lmcmFtZT48L25vc2NyaXB0PgogICAgICA8IS0tIEVuZCBHb29nbGUgVGFnIE1hbmFnZXIgKG5vc2NyaXB0KSAtLT4KICAgIAogICAgCiAgICA8aGVhZGVyPgogICAgICA8ZGl2IGNsYXNzPSJyaWJib24iPgogICAgICAgIDxkaXYgY2xhc3M9ImxheW91dExhcmdlIGNsZWFyZml4Ij4KICAgICAgICAgICAgICAgICAgICAgIDx1bCBjbGFzcz0iY3VsdHVyZSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaSBjbGFzcz0ic2VsZWN0ZWQiPjxhIHRpdGxlPSJGcmFuw6dhaXMiIGhyZWY9Imh0dHBzOi8vd3d3LmFnZW5jZWRlc2VuZmFudHNyb3VnZXMuY29tL2ZyL3JlY2hlcmNoZS92ZW50ZS1hcHBhcnRlbWVudC0yLXBpZWNlcy1wYXJpcy0xMWVtZS03NTAxMS0zNjc5MTQ4Ij5GcmFuw6dhaXM8L2E+PC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpID48YSB0aXRsZT0iRW5nbGlzaCIgaHJlZj0iL2VuL3NlYXJjaC9zYWxlLWFwYXJ0bWVudC0yLXJvb21zLXBhcmlzLTExZW1lLTc1MDExLTM2NzkxNDgiPkVuZ2xpc2g8L2E+PC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpID48YSB0aXRsZT0iSXRhbGlhbm8iIGhyZWY9Ii9pdC9zZWFyY2gvdmVuZGl0YS1hcHBhcnRhbWVudG8tMi1yb29tcy1wYXJpcy0xMWVtZS03NTAxMS0zNjc5MTQ4Ij5JdGFsaWFubzwvYT48L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgIDwvdWw+CiAgICAgICAgICAKICAgICAgICAgIAogICAgICAgICAgPHVsIGNsYXNzPSJzb2NpYWxMaW5rcyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaSBjbGFzcz0iaWNvbiBzb2NpYWwiPjxhIGNsYXNzPSJmYWNlYm9vayIgdGFyZ2V0PSJfYmxhbmsiIGhyZWY9Imh0dHBzOi8vd3d3LmZhY2Vib29rLmNvbS9BZ2VuY2UtZGVzLUVuZmFudHMtUm91Z2VzLTI2Njc0NTk3MDExNDQxMCI+ZmFjZWJvb2s8L2E+PC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGkgY2xhc3M9Imljb24gc29jaWFsIj48YSBjbGFzcz0iZW1haWwiIGhyZWY9Ii9mci9jb250YWN0ZXotbm91cyI+RW1haWw8L2E+PC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC91bD4KICAgICAgICAgIDx1bCBjbGFzcz0idG9wTWVudSI+PGxpPjxhIHRhcmdldD0iX3NlbGYiIGhyZWY9Ii9mci9zZWxlY3Rpb24vIj5NYSBzw6lsZWN0aW9uPC9hPjwvbGk+PC91bD4gICAgICAgIDwvZGl2PgogICAgICA8L2Rpdj4KICAgICAgPGRpdiBjbGFzcz0ibGF5b3V0TGFyZ2UgY2xlYXJmaXgiPgogICAgICAgIDxkaXYgY2xhc3M9ImxvZ28iPgogICAgICAgICAgPGEgdGl0bGU9IkFnZW5jZSBkZXMgRW5mYW50cyBSb3VnZXMiIGhyZWY9Ii9mci8iPjxpbWcgYWx0PSJBZ2VuY2UgZGVzIEVuZmFudHMgUm91Z2VzIiBzcmM9Ii91cGxvYWRzL3dlYnNpdGUvMTc2OC8wNDhlMDVlNjZjMGE0ODFlNGM0MWJiYzA3YjRlM2JjZDg2NjFkNjZiLmpwZyIgLz48L2E+ICAgICAgICA8L2Rpdj4KICAgICAgICA8bmF2PgogICAgICAgICAgPHVsIGNsYXNzPSJtZW51Ij48bGkgY2xhc3M9ImJ0biI+PGEgaHJlZj0iIyI+PC9hPjwvbGk+PGxpPjxhIHRhcmdldD0iX3NlbGYiIGNsYXNzPSIiIGhyZWY9Ii9mci8iPkFjY3VlaWw8L2E+PC9saT48bGk+PGEgdGFyZ2V0PSJfc2VsZiIgY2xhc3M9IiIgaHJlZj0iL2ZyL3ZlbnRlIj5WZW50ZTwvYT48L2xpPjxsaT48YSB0YXJnZXQ9Il9zZWxmIiBjbGFzcz0iIiBocmVmPSIvZnIvbG9jYXRpb24iPkxvY2F0aW9uPC9hPjwvbGk+PGxpPjxhIHRhcmdldD0iX3NlbGYiIGNsYXNzPSIiIGhyZWY9Ii9mci9jb21tZXJjZXMiPkNvbW1lcmNlczwvYT48L2xpPjxsaT48YSB0YXJnZXQ9Il9zZWxmIiBjbGFzcz0iIiBocmVmPSIvZnIvZXN0aW1hdGlvbiI+RXN0aW1hdGlvbjwvYT48L2xpPjxsaT48YSB0YXJnZXQ9Il9zZWxmIiBjbGFzcz0iIiBocmVmPSIvZnIvYmxvZyI+QmxvZzwvYT48L2xpPjxsaT48YSB0YXJnZXQ9Il9zZWxmIiBjbGFzcz0iIiBocmVmPSIvZnIvbm90cmUtYWdlbmNlIj5Ob3RyZSBhZ2VuY2U8L2E+PC9saT48bGk+PGEgdGFyZ2V0PSJfc2VsZiIgY2xhc3M9IiIgaHJlZj0iL2ZyL2NvbnRhY3Rlei1ub3VzIj5Db250YWN0ZXotbm91czwvYT48L2xpPjwvdWw+ICAgICAgICA8L25hdj4KICAgICAgPC9kaXY+CiAgICAgICAgICA8L2hlYWRlcj4KCiAgICA8ZGl2IGNsYXNzPSJ3cmFwcGVyIj4KICAgICAgCjxzZWN0aW9uIGNsYXNzPSJzaG93UGljdHVyZXMiIGRhdGEtbGF5b3V0Rml4ZWQ9IjAiPgogICAgICA8YSBjbGFzcz0iYnV0dG9uIiBocmVmPSJqYXZhc2NyaXB0Omhpc3RvcnkuZ28oLTEpOyI+UmV0b3VyPC9hPgogICAgPGRpdiBjbGFzcz0ic2hvdy1jYXJvdXNlbCBvd2wtY2Fyb3VzZWwgb3dsLXRoZW1lIj4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJpdGVtIHJlc2l6ZVBpY3R1cmUiIGRhdGEtcHJlc2VydmVwb3J0cmFpdD0idHJ1ZSI+CiAgICAgICAgICA8YSBocmVmPSJodHRwczovL2QxcWZqMjMxdWc3d2R1LmNsb3VkZnJvbnQubmV0L3BpY3R1cmVzL2VzdGF0ZS8zNzcyLzM3NzE2MjkvMTI0NjI5MDI4ODVlNjdiZGIzMWRhNTUwLjMyNjUyNzg2X2EwZGUzMDc3YzJfMTkyMC5qcGciIHJlbD0ic2xpZGVzaG93IiBjbGFzcz0ic2xpZGVzaG93IiB0aXRsZT0iRVhDTFVTSVZJVEUgOiBYScOobWUgcGxhY2UgZm9udGFpbmUgVGltYmF1ZCBzdWJsaW1lIDIgcGnDqGNlcyB2dWUgZMOpZ2Fnw6llIj4KICAgICAgICAgICAgPGltZyBhbHQ9IkVYQ0xVU0lWSVRFIDogWEnDqG1lIHBsYWNlIGZvbnRhaW5lIFRpbWJhdWQgc3VibGltZSAyIHBpw6hjZXMgdnVlIGTDqWdhZ8OpZSIgc3JjPSJodHRwczovL2QxcWZqMjMxdWc3d2R1LmNsb3VkZnJvbnQubmV0L3BpY3R1cmVzL2VzdGF0ZS8zNzcyLzM3NzE2MjkvMTI0NjI5MDI4ODVlNjdiZGIzMWRhNTUwLjMyNjUyNzg2X2EwZGUzMDc3YzJfMTkyMC5qcGciIC8+ICAgICAgICAgIDwvYT4KICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJpdGVtIHJlc2l6ZVBpY3R1cmUiIGRhdGEtcHJlc2VydmVwb3J0cmFpdD0idHJ1ZSI+CiAgICAgICAgICA8YSBocmVmPSJodHRwczovL2QxcWZqMjMxdWc3d2R1LmNsb3VkZnJvbnQubmV0L3BpY3R1cmVzL2VzdGF0ZS8zNzcyLzM3NzE2MjkvMTMxNzYwNDExNWU2N2JkNzgzZGMyZTUuOTc1NDAzMTNfNGZiMjUwY2RmMl8xOTIwLmpwZyIgcmVsPSJzbGlkZXNob3ciIGNsYXNzPSJzbGlkZXNob3ciIHRpdGxlPSJFWENMVVNJVklURSA6IFhJw6htZSBwbGFjZSBmb250YWluZSBUaW1iYXVkIHN1YmxpbWUgMiBwacOoY2VzIHZ1ZSBkw6lnYWfDqWUiPgogICAgICAgICAgICA8aW1nIGFsdD0iRVhDTFVTSVZJVEUgOiBYScOobWUgcGxhY2UgZm9udGFpbmUgVGltYmF1ZCBzdWJsaW1lIDIgcGnDqGNlcyB2dWUgZMOpZ2Fnw6llIiBzcmM9Imh0dHBzOi8vZDFxZmoyMzF1Zzd3ZHUuY2xvdWRmcm9udC5uZXQvcGljdHVyZXMvZXN0YXRlLzM3NzIvMzc3MTYyOS8xMzE3NjA0MTE1ZTY3YmQ3ODNkYzJlNS45NzU0MDMxM180ZmIyNTBjZGYyXzE5MjAuanBnIiAvPiAgICAgICAgICA8L2E+CiAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iaXRlbSByZXNpemVQaWN0dXJlIiBkYXRhLXByZXNlcnZlcG9ydHJhaXQ9InRydWUiPgogICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9kMXFmajIzMXVnN3dkdS5jbG91ZGZyb250Lm5ldC9waWN0dXJlcy9lc3RhdGUvMzc3Mi8zNzcxNjI5Lzg1OTI1NTQzNzVlNjdiZDQ5YzA3Yjg5LjU5NjY3NzU0XzA3YWVmOWZmYzdfMTkyMC5qcGciIHJlbD0ic2xpZGVzaG93IiBjbGFzcz0ic2xpZGVzaG93IiB0aXRsZT0iRVhDTFVTSVZJVEUgOiBYScOobWUgcGxhY2UgZm9udGFpbmUgVGltYmF1ZCBzdWJsaW1lIDIgcGnDqGNlcyB2dWUgZMOpZ2Fnw6llIj4KICAgICAgICAgICAgPGltZyBhbHQ9IkVYQ0xVU0lWSVRFIDogWEnDqG1lIHBsYWNlIGZvbnRhaW5lIFRpbWJhdWQgc3VibGltZSAyIHBpw6hjZXMgdnVlIGTDqWdhZ8OpZSIgc3JjPSJodHRwczovL2QxcWZqMjMxdWc3d2R1LmNsb3VkZnJvbnQubmV0L3BpY3R1cmVzL2VzdGF0ZS8zNzcyLzM3NzE2MjkvODU5MjU1NDM3NWU2N2JkNDljMDdiODkuNTk2Njc3NTRfMDdhZWY5ZmZjN18xOTIwLmpwZyIgLz4gICAgICAgICAgPC9hPgogICAgICAgIDwvZGl2PgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9Iml0ZW0gcmVzaXplUGljdHVyZSIgZGF0YS1wcmVzZXJ2ZXBvcnRyYWl0PSJ0cnVlIj4KICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZDFxZmoyMzF1Zzd3ZHUuY2xvdWRmcm9udC5uZXQvcGljdHVyZXMvZXN0YXRlLzM3NzIvMzc3MTYyOS8yNDc1MDc3NDQ1ZTY3YmQ0ZjdhN2FmNS42NDc4NzMzOF80OWU3NDFhOTQ5XzE5MjAuanBnIiByZWw9InNsaWRlc2hvdyIgY2xhc3M9InNsaWRlc2hvdyIgdGl0bGU9IkVYQ0xVU0lWSVRFIDogWEnDqG1lIHBsYWNlIGZvbnRhaW5lIFRpbWJhdWQgc3VibGltZSAyIHBpw6hjZXMgdnVlIGTDqWdhZ8OpZSI+CiAgICAgICAgICAgIDxpbWcgYWx0PSJFWENMVVNJVklURSA6IFhJw6htZSBwbGFjZSBmb250YWluZSBUaW1iYXVkIHN1YmxpbWUgMiBwacOoY2VzIHZ1ZSBkw6lnYWfDqWUiIHNyYz0iaHR0cHM6Ly9kMXFmajIzMXVnN3dkdS5jbG91ZGZyb250Lm5ldC9waWN0dXJlcy9lc3RhdGUvMzc3Mi8zNzcxNjI5LzI0NzUwNzc0NDVlNjdiZDRmN2E3YWY1LjY0Nzg3MzM4XzQ5ZTc0MWE5NDlfMTkyMC5qcGciIC8+ICAgICAgICAgIDwvYT4KICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJpdGVtIHJlc2l6ZVBpY3R1cmUiIGRhdGEtcHJlc2VydmVwb3J0cmFpdD0idHJ1ZSI+CiAgICAgICAgICA8YSBocmVmPSJodHRwczovL2QxcWZqMjMxdWc3d2R1LmNsb3VkZnJvbnQubmV0L3BpY3R1cmVzL2VzdGF0ZS8zNzcyLzM3NzE2MjkvMjA0NDY2NjA1MzVlNjdiZDVjODcxYTQ5LjE0NTE3MjA5XzlkM2M1ZWZhZDJfMTkyMC5qcGciIHJlbD0ic2xpZGVzaG93IiBjbGFzcz0ic2xpZGVzaG93IiB0aXRsZT0iRVhDTFVTSVZJVEUgOiBYScOobWUgcGxhY2UgZm9udGFpbmUgVGltYmF1ZCBzdWJsaW1lIDIgcGnDqGNlcyB2dWUgZMOpZ2Fnw6llIj4KICAgICAgICAgICAgPGltZyBhbHQ9IkVYQ0xVU0lWSVRFIDogWEnDqG1lIHBsYWNlIGZvbnRhaW5lIFRpbWJhdWQgc3VibGltZSAyIHBpw6hjZXMgdnVlIGTDqWdhZ8OpZSIgc3JjPSJodHRwczovL2QxcWZqMjMxdWc3d2R1LmNsb3VkZnJvbnQubmV0L3BpY3R1cmVzL2VzdGF0ZS8zNzcyLzM3NzE2MjkvMjA0NDY2NjA1MzVlNjdiZDVjODcxYTQ5LjE0NTE3MjA5XzlkM2M1ZWZhZDJfMTkyMC5qcGciIC8+ICAgICAgICAgIDwvYT4KICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJpdGVtIHJlc2l6ZVBpY3R1cmUiIGRhdGEtcHJlc2VydmVwb3J0cmFpdD0idHJ1ZSI+CiAgICAgICAgICA8YSBocmVmPSJodHRwczovL2QxcWZqMjMxdWc3d2R1LmNsb3VkZnJvbnQubmV0L3BpY3R1cmVzL2VzdGF0ZS8zNzcyLzM3NzE2MjkvMTQ5NjE4NzEwMDVlNjdiZDY0NzhhNDgwLjE1NjcxMTIxX2QxMjVhOGIxYjVfMTkyMC5qcGciIHJlbD0ic2xpZGVzaG93IiBjbGFzcz0ic2xpZGVzaG93IiB0aXRsZT0iRVhDTFVTSVZJVEUgOiBYScOobWUgcGxhY2UgZm9udGFpbmUgVGltYmF1ZCBzdWJsaW1lIDIgcGnDqGNlcyB2dWUgZMOpZ2Fnw6llIj4KICAgICAgICAgICAgPGltZyBhbHQ9IkVYQ0xVU0lWSVRFIDogWEnDqG1lIHBsYWNlIGZvbnRhaW5lIFRpbWJhdWQgc3VibGltZSAyIHBpw6hjZXMgdnVlIGTDqWdhZ8OpZSIgc3JjPSJodHRwczovL2QxcWZqMjMxdWc3d2R1LmNsb3VkZnJvbnQubmV0L3BpY3R1cmVzL2VzdGF0ZS8zNzcyLzM3NzE2MjkvMTQ5NjE4NzEwMDVlNjdiZDY0NzhhNDgwLjE1NjcxMTIxX2QxMjVhOGIxYjVfMTkyMC5qcGciIC8+ICAgICAgICAgIDwvYT4KICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJpdGVtIHJlc2l6ZVBpY3R1cmUiIGRhdGEtcHJlc2VydmVwb3J0cmFpdD0idHJ1ZSI+CiAgICAgICAgICA8YSBocmVmPSJodHRwczovL2QxcWZqMjMxdWc3d2R1LmNsb3VkZnJvbnQubmV0L3BpY3R1cmVzL2VzdGF0ZS8zNzcyLzM3NzE2MjkvMTkzMzUwNTU0MzVlNjdiZDcwZGQ4NGY0LjM5OTgyOTUyXzE1ZTQzMzRiZTVfMTkyMC5qcGciIHJlbD0ic2xpZGVzaG93IiBjbGFzcz0ic2xpZGVzaG93IiB0aXRsZT0iQWNpZXIgaW5veHlkYWJsZSI+CiAgICAgICAgICAgIDxpbWcgYWx0PSJBY2llciBpbm94eWRhYmxlIiBzcmM9Imh0dHBzOi8vZDFxZmoyMzF1Zzd3ZHUuY2xvdWRmcm9udC5uZXQvcGljdHVyZXMvZXN0YXRlLzM3NzIvMzc3MTYyOS8xOTMzNTA1NTQzNWU2N2JkNzBkZDg0ZjQuMzk5ODI5NTJfMTVlNDMzNGJlNV8xOTIwLmpwZyIgLz4gICAgICAgICAgPC9hPgogICAgICAgIDwvZGl2PgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9Iml0ZW0gcmVzaXplUGljdHVyZSIgZGF0YS1wcmVzZXJ2ZXBvcnRyYWl0PSJ0cnVlIj4KICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZDFxZmoyMzF1Zzd3ZHUuY2xvdWRmcm9udC5uZXQvcGljdHVyZXMvZXN0YXRlLzM3NzIvMzc3MTYyOS8xMzYwNzA5MDI1NWU2N2JkN2RkNjgxOTYuNjk0MzE5MzBfMGUwMTlhYzI3Ml8xOTIwLmpwZyIgcmVsPSJzbGlkZXNob3ciIGNsYXNzPSJzbGlkZXNob3ciIHRpdGxlPSJFWENMVVNJVklURSA6IFhJw6htZSBwbGFjZSBmb250YWluZSBUaW1iYXVkIHN1YmxpbWUgMiBwacOoY2VzIHZ1ZSBkw6lnYWfDqWUiPgogICAgICAgICAgICA8aW1nIGFsdD0iRVhDTFVTSVZJVEUgOiBYScOobWUgcGxhY2UgZm9udGFpbmUgVGltYmF1ZCBzdWJsaW1lIDIgcGnDqGNlcyB2dWUgZMOpZ2Fnw6llIiBzcmM9Imh0dHBzOi8vZDFxZmoyMzF1Zzd3ZHUuY2xvdWRmcm9udC5uZXQvcGljdHVyZXMvZXN0YXRlLzM3NzIvMzc3MTYyOS8xMzYwNzA5MDI1NWU2N2JkN2RkNjgxOTYuNjk0MzE5MzBfMGUwMTlhYzI3Ml8xOTIwLmpwZyIgLz4gICAgICAgICAgPC9hPgogICAgICAgIDwvZGl2PgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9Iml0ZW0gcmVzaXplUGljdHVyZSIgZGF0YS1wcmVzZXJ2ZXBvcnRyYWl0PSJ0cnVlIj4KICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZDFxZmoyMzF1Zzd3ZHUuY2xvdWRmcm9udC5uZXQvcGljdHVyZXMvZXN0YXRlLzM3NzIvMzc3MTYyOS8xNjY1MjY5MTExNWU2N2JkODM2MTViODMuNDQwNjQyMzFfNjFiYTM5MDU1Y18xOTIwLmpwZyIgcmVsPSJzbGlkZXNob3ciIGNsYXNzPSJzbGlkZXNob3ciIHRpdGxlPSJFWENMVVNJVklURSA6IFhJw6htZSBwbGFjZSBmb250YWluZSBUaW1iYXVkIHN1YmxpbWUgMiBwacOoY2VzIHZ1ZSBkw6lnYWfDqWUiPgogICAgICAgICAgICA8aW1nIGFsdD0iRVhDTFVTSVZJVEUgOiBYScOobWUgcGxhY2UgZm9udGFpbmUgVGltYmF1ZCBzdWJsaW1lIDIgcGnDqGNlcyB2dWUgZMOpZ2Fnw6llIiBzcmM9Imh0dHBzOi8vZDFxZmoyMzF1Zzd3ZHUuY2xvdWRmcm9udC5uZXQvcGljdHVyZXMvZXN0YXRlLzM3NzIvMzc3MTYyOS8xNjY1MjY5MTExNWU2N2JkODM2MTViODMuNDQwNjQyMzFfNjFiYTM5MDU1Y18xOTIwLmpwZyIgLz4gICAgICAgICAgPC9hPgogICAgICAgIDwvZGl2PgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9Iml0ZW0gcmVzaXplUGljdHVyZSIgZGF0YS1wcmVzZXJ2ZXBvcnRyYWl0PSJ0cnVlIj4KICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZDFxZmoyMzF1Zzd3ZHUuY2xvdWRmcm9udC5uZXQvcGljdHVyZXMvZXN0YXRlLzM3NzIvMzc3MTYyOS85NDIzNTM2ODA1ZTY3YmQ4OTY3MWY5Ny45OTQ4MDQ3Ml80Y2JhYzg5YTc2XzE5MjAuanBnIiByZWw9InNsaWRlc2hvdyIgY2xhc3M9InNsaWRlc2hvdyIgdGl0bGU9IkVYQ0xVU0lWSVRFIDogWEnDqG1lIHBsYWNlIGZvbnRhaW5lIFRpbWJhdWQgc3VibGltZSAyIHBpw6hjZXMgdnVlIGTDqWdhZ8OpZSI+CiAgICAgICAgICAgIDxpbWcgYWx0PSJFWENMVVNJVklURSA6IFhJw6htZSBwbGFjZSBmb250YWluZSBUaW1iYXVkIHN1YmxpbWUgMiBwacOoY2VzIHZ1ZSBkw6lnYWfDqWUiIHNyYz0iaHR0cHM6Ly9kMXFmajIzMXVnN3dkdS5jbG91ZGZyb250Lm5ldC9waWN0dXJlcy9lc3RhdGUvMzc3Mi8zNzcxNjI5Lzk0MjM1MzY4MDVlNjdiZDg5NjcxZjk3Ljk5NDgwNDcyXzRjYmFjODlhNzZfMTkyMC5qcGciIC8+ICAgICAgICAgIDwvYT4KICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJpdGVtIHJlc2l6ZVBpY3R1cmUiIGRhdGEtcHJlc2VydmVwb3J0cmFpdD0idHJ1ZSI+CiAgICAgICAgICA8YSBocmVmPSJodHRwczovL2QxcWZqMjMxdWc3d2R1LmNsb3VkZnJvbnQubmV0L3BpY3R1cmVzL2VzdGF0ZS8zNzcyLzM3NzE2MjkvMTIxNTk2MDYzNWU2N2JkOGY1OGJlMjguMTMyODYzMTdfMjEyZTJlZjE3ZV8xOTIwLmpwZyIgcmVsPSJzbGlkZXNob3ciIGNsYXNzPSJzbGlkZXNob3ciIHRpdGxlPSJFWENMVVNJVklURSA6IFhJw6htZSBwbGFjZSBmb250YWluZSBUaW1iYXVkIHN1YmxpbWUgMiBwacOoY2VzIHZ1ZSBkw6lnYWfDqWUiPgogICAgICAgICAgICA8aW1nIGFsdD0iRVhDTFVTSVZJVEUgOiBYScOobWUgcGxhY2UgZm9udGFpbmUgVGltYmF1ZCBzdWJsaW1lIDIgcGnDqGNlcyB2dWUgZMOpZ2Fnw6llIiBzcmM9Imh0dHBzOi8vZDFxZmoyMzF1Zzd3ZHUuY2xvdWRmcm9udC5uZXQvcGljdHVyZXMvZXN0YXRlLzM3NzIvMzc3MTYyOS8xMjE1OTYwNjM1ZTY3YmQ4ZjU4YmUyOC4xMzI4NjMxN18yMTJlMmVmMTdlXzE5MjAuanBnIiAvPiAgICAgICAgICA8L2E+CiAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iaXRlbSByZXNpemVQaWN0dXJlIiBkYXRhLXByZXNlcnZlcG9ydHJhaXQ9InRydWUiPgogICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9kMXFmajIzMXVnN3dkdS5jbG91ZGZyb250Lm5ldC9waWN0dXJlcy9lc3RhdGUvMzc3Mi8zNzcxNjI5LzE0MTc0NzIxODQ1ZTY3YmUwZWI4NDZjNC4xMzczODM5NV81OGZhY2QyOGNjXzE5MjAuanBnIiByZWw9InNsaWRlc2hvdyIgY2xhc3M9InNsaWRlc2hvdyIgdGl0bGU9IkVYQ0xVU0lWSVRFIDogWEnDqG1lIHBsYWNlIGZvbnRhaW5lIFRpbWJhdWQgc3VibGltZSAyIHBpw6hjZXMgdnVlIGTDqWdhZ8OpZSI+CiAgICAgICAgICAgIDxpbWcgYWx0PSJFWENMVVNJVklURSA6IFhJw6htZSBwbGFjZSBmb250YWluZSBUaW1iYXVkIHN1YmxpbWUgMiBwacOoY2VzIHZ1ZSBkw6lnYWfDqWUiIHNyYz0iaHR0cHM6Ly9kMXFmajIzMXVnN3dkdS5jbG91ZGZyb250Lm5ldC9waWN0dXJlcy9lc3RhdGUvMzc3Mi8zNzcxNjI5LzE0MTc0NzIxODQ1ZTY3YmUwZWI4NDZjNC4xMzczODM5NV81OGZhY2QyOGNjXzE5MjAuanBnIiAvPiAgICAgICAgICA8L2E+CiAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iaXRlbSByZXNpemVQaWN0dXJlIiBkYXRhLXByZXNlcnZlcG9ydHJhaXQ9InRydWUiPgogICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9kMXFmajIzMXVnN3dkdS5jbG91ZGZyb250Lm5ldC9waWN0dXJlcy9lc3RhdGUvMzc3Mi8zNzcxNjI5LzIxNjAzNzUwNzVlNjdiZTM5YTI3NmY3LjM1Mjg0NDExXzUxYjYwYzY4MTFfMTkyMC5qcGciIHJlbD0ic2xpZGVzaG93IiBjbGFzcz0ic2xpZGVzaG93IiB0aXRsZT0iRVhDTFVTSVZJVEUgOiBYScOobWUgcGxhY2UgZm9udGFpbmUgVGltYmF1ZCBzdWJsaW1lIDIgcGnDqGNlcyB2dWUgZMOpZ2Fnw6llIj4KICAgICAgICAgICAgPGltZyBhbHQ9IkVYQ0xVU0lWSVRFIDogWEnDqG1lIHBsYWNlIGZvbnRhaW5lIFRpbWJhdWQgc3VibGltZSAyIHBpw6hjZXMgdnVlIGTDqWdhZ8OpZSIgc3JjPSJodHRwczovL2QxcWZqMjMxdWc3d2R1LmNsb3VkZnJvbnQubmV0L3BpY3R1cmVzL2VzdGF0ZS8zNzcyLzM3NzE2MjkvMjE2MDM3NTA3NWU2N2JlMzlhMjc2ZjcuMzUyODQ0MTFfNTFiNjBjNjgxMV8xOTIwLmpwZyIgLz4gICAgICAgICAgPC9hPgogICAgICAgIDwvZGl2PgogICAgICAgICAgPC9kaXY+CgogICAgPGFydGljbGU+CiAgICAgICAgICA8ZGl2PgogICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InNlbGVjdGlvbkxpbmsgIiBocmVmPSIvZnIvc2VsZWN0aW9uLz9lc3RhdGU9Mzc3MTYyOSIgdGl0bGU9IkFqb3V0ZXIgw6AgbGEgc8OpbGVjdGlvbiI+QWpvdXRlciDDoCBsYSBzw6lsZWN0aW9uPC9zcGFuPgogICAgICAgIDxoMj4KICAgICAgICAgICAgICAgICAgICAgIEFwcGFydGVtZW50ICAgICAgICAgICAgICAgICAgICA8YnIgLz5QYXJpcyAxMcOobWUgICAgICAgIDwvaDI+CiAgICAgICAgPHVsPgogICAgICAgICAgICAgICAgICAgIDxsaT5SZWYuIDEwNTY8L2xpPgogICAgICAgICAgICAgICAgICAgICAgPGxpPjEgY2hhbWJyZTwvbGk+PGxpPjEgc2FsbGUgZGUgYmFpbnM8L2xpPjxsaT40NCBtwrI8L2xpPiAgICAgICAgICAKICAgICAgICAgIDxsaT41NzAgMDAwIOKCrDwvbGk+CiAgICAgICAgICAgICAgICAgIDwvdWw+CiAgICAgIDwvZGl2PgogICAgPC9hcnRpY2xlPgogIDwvc2VjdGlvbj4KCgoKPHNlY3Rpb24gY2xhc3M9Im1haW4gc2hvdyI+CiAgPGRpdiBjbGFzcz0ibGF5b3V0TGFyZ2UgY2xlYXJmaXgiPgogICAgPGFydGljbGUgY2xhc3M9ImNvbHVtbkxlZnQiPgogICAgICA8ZGl2IGNsYXNzPSJ0aXRsZXMiPgogICAgICAgIDxoMT5FWENMVVNJVklURSA6IFhJw6htZSBwbGFjZSBmb250YWluZSBUaW1iYXVkIHN1YmxpbWUgMiBwacOoY2VzIHZ1ZSBkw6lnYWfDqWU8L2gxPgogICAgICAgIDx1bCBjbGFzcz0icXVpY2tMaW5rcyI+CiAgICAgICAgICA8bGk+PGEgY2xhc3M9InNlbGVjdGVkIiBocmVmPSIjZGVzY3JpcHRpb24iPkRlc2NyaXB0aW9uPC9hPjwvbGk+CiAgICAgICAgICA8bGk+PGEgaHJlZj0iI2RldGFpbHNMaXN0Ij5Ew6l0YWlsczwvYT48L2xpPgogICAgICAgICAgICAgICAgICAgICAgPGxpPjxhIGhyZWY9IiNzaG93TWFwIj5QbGFuPC9hPjwvbGk+CiAgICAgICAgICAgICAgICAgICAgPGxpPjxhIGhyZWY9IiNjb250YWN0TGluZSI+Q29udGFjdDwvYT48L2xpPgogICAgICAgIDwvdWw+CiAgICAgIDwvZGl2PgoKICAgICAgPHAgY2xhc3M9ImNvbW1lbnQiIGlkPSJkZXNjcmlwdGlvbiI+T0ZGIE1hcmtldCBEYW5zIHVuZSBqb2xpZSBjb3Byb3ByacOpdMOpLCBhdSAzIMOobWUgw6l0YWdlIGF2ZWMgYXNjZW5zZXVyLiBBcHBhcnRlbWVudCAyIHBpw6hjZXMgZCdleGNlcHRpb24gYXUgY29ldXIgZHUgMTEgw6htZSBhcnJvbmRpc3NlbWVudC4gPGJyIC8+DQpJbCBzZSBjb21wb3NlIGQndW5lIGdyYW5kZSBwacOoY2VzIMOgIHZpdnJlIGF2ZWMgYmFsY29uIGV0IGN1aXNpbmUgb3V2ZXJ0ZSB0b3V0IMOpcXVpcMOpZSwgdW5lIGNoYW1icmUgYXZlYyBkcmVzc2luZyBldCB1bmUgc2FsbGUgZCdlYXUgZG91Y2hlIMOgIGwnaXRhbGllbm5lLjxiciAvPg0KQ2UgYmllbiBlc3QgcHJvcG9zw6kgYXZlYyB1bmUgY2F2ZTxiciAvPg0KQ2V0IGFwcGFydGVtZW50IGLDqW7DqWZpY2llIGRlIHRyw6hzIGJlbGxlcyBwcmVzdGF0aW9ucywgbWFyYnJlLCDDqXF1aXBlbWVudCBkZSBxdWFsaXTDqSwgdHLDqHMgYmVsbGUgaGF1dGV1ciBzb3VzIHBsYWZvbmQsIGx1bWluZXV4IGV0IHZ1ZSBkw6lnYWfDqWUuPC9wPgogICAgICA8cCBjbGFzcz0icHJpbnQiPjxhIGNsYXNzPSJidXR0b24iIHRhcmdldD0iX2JsYW5rIiB0aXRsZT0iSW1wcmltZXIgY2V0dGUgYW5ub25jZSIgaHJlZj0iL2ZyL3JlY2hlcmNoZS92ZW50ZS1hcHBhcnRlbWVudC0yLXBpZWNlcy1wYXJpcy0xMWVtZS03NTAxMS0zNjc5MTQ4L2ltcHJpbWVyIj5JbXByaW1lciBjZXR0ZSBhbm5vbmNlPC9hPjwvcD4KCiAgICAgIAogICAgICAKICAgICAgCiAgICAgIDxkaXYgY2xhc3M9ImRldGFpbHNMaXN0IGNsZWFyZml4IiBpZD0iZGV0YWlsc0xpc3QiPgogICAgICAgIAogICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJzdW1tYXJ5IGRldGFpbHMiPgogICAgICAgICAgICA8aDI+UsOpc3Vtw6k8L2gyPgogICAgICAgICAgICA8dWw+CiAgICAgICAgICAgICAgPGxpIGNsYXNzPSJhbHQiPlBpw6hjZXMgPHNwYW4+MiBwacOoY2VzPC9zcGFuPjwvbGk+PGxpID5TdXJmYWNlIDxzcGFuPjQ0IG3Csjwvc3Bhbj48L2xpPjxsaSBjbGFzcz0iYWx0Ij5TdXJmYWNlIHRvdGFsZSA8c3Bhbj40NSBtwrI8L3NwYW4+PC9saT48bGkgPkVhdSBjaGF1ZGUgPHNwYW4+Q2hhdWZmZS1lYXU8L3NwYW4+PC9saT48bGkgY2xhc3M9ImFsdCI+RXRhdCA8c3Bhbj5FeGNlbGxlbnQgw6l0YXQ8L3NwYW4+PC9saT48bGkgPkV0YWdlIDxzcGFuPjPDqG1lIC8gNyDDqXRhZ2VzPC9zcGFuPjwvbGk+PGxpIGNsYXNzPSJhbHQiPlZ1ZSA8c3Bhbj5SdWU8L3NwYW4+PC9saT4gICAgICAgICAgICA8L3VsPgogICAgICAgICAgPC9kaXY+CiAgICAgICAgCiAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InNlcnZpY2VzIGRldGFpbHMiPgogICAgICAgICAgICA8aDI+UHJlc3RhdGlvbnM8L2gyPgogICAgICAgICAgICA8dWw+CiAgICAgICAgICAgICAgPGxpIGNsYXNzPSJhbHQiPkRvdWJsZSB2aXRyYWdlPC9saT48bGkgPk1ldWJsw6k8L2xpPjxsaSBjbGFzcz0iYWx0Ij5BbGFybWUgaW5jZW5kaWU8L2xpPjxsaSBjbGFzcz0iYWx0Ij5Bc2NlbnNldXI8L2xpPjxsaSA+SW50ZXJwaG9uZTwvbGk+ICAgICAgICAgICAgPC91bD4KICAgICAgICAgIDwvZGl2PgogICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iYXJlYXMgZGV0YWlscyI+CiAgICAgICAgICAgIDxoMj5QacOoY2VzPC9oMj4KCiAgICAgICAgICAgICAgICAgICAgICAgICAgPHVsPgogICAgICAgICAgICAgICAgPGxpIGNsYXNzPSJhbHQiPjEgRW50csOpZSA8c3Bhbj4wLjgxIG3Csjwvc3Bhbj48L2xpPjxsaSA+MSBTw6lqb3VyIDxzcGFuPjI4LjE0IG3Csjwvc3Bhbj48L2xpPjxsaSBjbGFzcz0iYWx0Ij4xIEN1aXNpbmUgPHNwYW4+PC9zcGFuPjwvbGk+PGxpIGNsYXNzPSJhbHQiPjEgQ2hhbWJyZSA8c3Bhbj4xMC45MyBtwrI8L3NwYW4+PC9saT48bGkgPjEgU2FsbGUgZGUgZG91Y2hlIC8gdG9pbGV0dGVzIDxzcGFuPjMuNjQgbcKyPC9zcGFuPjwvbGk+PGxpIGNsYXNzPSJhbHQiPjEgQmFsY29uIDxzcGFuPjEuNDMgbcKyPC9zcGFuPjwvbGk+ICAgICAgICAgICAgICA8L3VsPgogICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgCiAgICAgICAgCiAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb3hpbWl0aWVzIGRldGFpbHMiPgogICAgICAgICAgICA8aDI+UHJveGltaXTDqXM8L2gyPgogICAgICAgICAgICA8dWw+CiAgICAgICAgICAgICAgPGxpIGNsYXNzPSJhbHQiPkJ1czwvbGk+PGxpID5Nw6l0cm88L2xpPjxsaSBjbGFzcz0iYWx0Ij5Db21tZXJjZXM8L2xpPjxsaSA+w4ljb2xlIHByaW1haXJlPC9saT48bGkgY2xhc3M9ImFsdCI+Q2VudHJlIHZpbGxlPC9saT48bGkgPk3DqWRlY2luPC9saT48bGkgY2xhc3M9ImFsdCI+R2FyZTwvbGk+PGxpIGNsYXNzPSJhbHQiPlRheGk8L2xpPjxsaSA+U3VwZXJtYXJjaMOpPC9saT48bGkgY2xhc3M9ImFsdCI+UGlzY2luZTwvbGk+PGxpID5DaW7DqW1hPC9saT48bGkgY2xhc3M9ImFsdCI+w4ljb2xlIHNlY29uZGFpcmU8L2xpPjxsaSA+R2FyZSBUR1Y8L2xpPjxsaSBjbGFzcz0iYWx0Ij5Vbml2ZXJzaXTDqTwvbGk+ICAgICAgICAgICAgPC91bD4KICAgICAgICAgIDwvZGl2PgogICAgICAgIAogICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJkaWFnbm9zdGljcyBkZXRhaWxzICI+CiAgICAgICAgICAgIDxoMj5FZmZpY2FjaXTDqSDDqW5lcmfDqXRpcXVlPC9oMj4KICAgICAgICAgICAgICAgICAgICAgICAgICA8aW1nIHNyYz0iL2ZyL2RpYWdub3N0aWMvMzY3OTE0OC8xLzIzMyIgYWx0PSLDiW5lcmdpZSAtIENvbnNvbW1hdGlvbiBjb252ZW50aW9ubmVsbGUiPgogICAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgc3JjPSIvZnIvZGlhZ25vc3RpYy8zNjc5MTQ4LzIvNiIgYWx0PSLDiW5lcmdpZSAtIEVzdGltYXRpb24gZGVzIMOpbWlzc2lvbnMiPgogICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgCiAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImxlZ2FsIGRldGFpbHMiPgogICAgICAgICAgICA8aDI+SW5mb3JtYXRpb25zIGzDqWdhbGVzPC9oMj4KICAgICAgICAgICAgPHVsPgogICAgICAgICAgICAgIDxsaSBjbGFzcz0iYWx0Ij5Ib25vcmFpcmVzIMOgIGNoYXJnZSB2ZW5kZXVyPC9saT48bGkgPkNvcHJvcHJpw6l0w6kgZW4gZGlmZmljdWx0w6k8L2xpPjxsaSBjbGFzcz0iYWx0Ij5Mb2kgQ2FycmV6PHNwYW4+NDMgbcKyPC9zcGFuPjwvbGk+ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaSA+UHJvY8OpZHVyZSBlbiBjb3VyczwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgPC91bD4KICAgICAgICAgIDwvZGl2PgogICAgICAgIAogICAgICAgICAgICAgIDwvZGl2PgogICAgPC9hcnRpY2xlPgoKICAgIDxhc2lkZSBjbGFzcz0iY29sdW1uUmlnaHQgY2xlYXJmaXgiPgogICAgICA8ZGl2IGNsYXNzPSJ1c2VyQmxvY2siPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ1c2VyQnViYmxlIHBpY3R1cmUgcmVzaXplUGljdHVyZSIgZGF0YS1wcmVzZXJ2ZXBvcnRyYWl0PSJmYWxzZSI+CiAgICAgICAgICAgICAgPGltZyBzcmM9Imh0dHBzOi8vYXBpLmFwaW1vLnByby91cGxvYWRzL3VzZXIvMzgzNDAvcGljdHVyZS5qcGciLz4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAKICAgICAgICAgIDxwIGNsYXNzPSJzbWFsbEljb24gdXNlck5hbWUiPgogICAgICAgICAgICA8c3Ryb25nPkF1ZGUgUFJFVFJFPC9zdHJvbmc+PGJyIC8+CiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgQWdlbnQgaW1tb2JpbGllciAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICA8L3A+CiAgICAgICAgICA8cD4KICAgICAgICAgICAgPHNwYW4gY2xhc3M9InBob25lIHNtYWxsSWNvbiI+PGEgaHJlZj0idGVsOjAwMzMwNjM1NTkyNTkxIj4rMzMgKDApNiAzNSA1OSAyNSA5MTwvYT48L3NwYW4+PGJyIC8+ICAgICAgICAgICAgPHNwYW4gY2xhc3M9Im1haWwgc21hbGxJY29uIj48YSBocmVmPSJtYWlsdG86YXVkZUBhZ2VuY2VkZXNlbmZhbnRzcm91Z2VzLmNvbSI+YXVkZUBhZ2VuY2VkZXNlbmZhbnRzcm91Z2VzLmNvbTwvYT48L3NwYW4+ICAgICAgICAgIDwvcD4KICAgICAgICAgIDxwPjxhIGhyZWY9IiNjb250YWN0TGluZSIgY2xhc3M9ImJ1dHRvbiI+Q29udGFjdGV6LW1vaTwvYT48L3A+CiAgICAgICAgICAgICAgPC9kaXY+CgogICAgICA8ZGl2IGNsYXNzPSJzaGFyZUJsb2NrIj4KICAgICAgICA8aDI+UGFydGFnZXI8L2gyPgogICAgICAgIDx1bCBjbGFzcz0ic29jaWFsTGlua3MiPgoJICAgICAgPGxpIGNsYXNzPSJzb2NpYWwiPjxhIGNsYXNzPSJlbWFpbCBmcmllbmQiIHRpdGxlPSJFbnZveWVyIMOgIHVuIGFtaSIgaHJlZj0iL2ZyL3NlbmQtdG8tZnJpZW5kP2VzdGF0ZUlkPTM2NzkxNDgiPkVudm95ZXIgw6AgdW4gYW1pPC9hPjwvbGk+CiAgICAgICAgICA8bGkgY2xhc3M9InNvY2lhbCI+PGEgY2xhc3M9ImZhY2Vib29rIiBvbmNsaWNrPSJ3aW5kb3cub3BlbigkKHRoaXMpLmF0dHIoJ2hyZWYnKSwgJ0ZhY2Vib29rJywgY29uZmlnPSdoZWlnaHQ9MTAwLCB3aWR0aD00MDAsIHRvb2xiYXI9bm8sIG1lbnViYXI9bm8sIHNjcm9sbGJhcnM9bm8sIHJlc2l6YWJsZT1ubywgbG9jYXRpb249bm8nKTsgcmV0dXJuIGZhbHNlOyIgaHJlZj0iaHR0cDovL3d3dy5mYWNlYm9vay5jb20vc2hhcmUucGhwP3U9aHR0cCUzQSUyRiUyRnd3dy5hZ2VuY2VkZXNlbmZhbnRzcm91Z2VzLmNvbSUyRmZyJTJGcmVjaGVyY2hlJTJGdmVudGUtYXBwYXJ0ZW1lbnQtMi1waWVjZXMtcGFyaXMtMTFlbWUtNzUwMTEtMzY3OTE0OCZ0aXRsZT1FWENMVVNJVklURSA6IFhJJmVncmF2ZTttZSBwbGFjZSBmb250YWluZSBUaW1iYXVkIHN1YmxpbWUgMiBwaSZlZ3JhdmU7Y2VzIHZ1ZSBkJmVhY3V0ZTtnYWcmZWFjdXRlO2UiPkZhY2Vib29rPC9hPjwvbGk+CiAgICAgICAgICA8bGkgY2xhc3M9InNvY2lhbCI+PGEgY2xhc3M9InR3aXR0ZXIiIG9uY2xpY2s9IndpbmRvdy5vcGVuKCQodGhpcykuYXR0cignaHJlZicpLCAnVHdpdHRlcicsIGNvbmZpZz0naGVpZ2h0PTIxNiwgd2lkdGg9NDAwLCB0b29sYmFyPW5vLCBtZW51YmFyPW5vLCBzY3JvbGxiYXJzPW5vLCByZXNpemFibGU9bm8sIGxvY2F0aW9uPW5vJyk7IHJldHVybiBmYWxzZTsiIGhyZWY9Imh0dHA6Ly90d2l0dGVyLmNvbS9ob21lP3N0YXR1cz1FWENMVVNJVklURSA6IFhJJmVncmF2ZTttZSBwbGFjZSBmb250YWluZSBUaW1iYXVkIHN1YmxpbWUgMiBwaSZlZ3JhdmU7Y2VzIHZ1ZSBkJmVhY3V0ZTtnYWcmZWFjdXRlO2UraHR0cCUzQSUyRiUyRnd3dy5hZ2VuY2VkZXNlbmZhbnRzcm91Z2VzLmNvbSUyRmZyJTJGcmVjaGVyY2hlJTJGdmVudGUtYXBwYXJ0ZW1lbnQtMi1waWVjZXMtcGFyaXMtMTFlbWUtNzUwMTEtMzY3OTE0OCI+VHdpdHRlcjwvYT48L2xpPgogICAgICAgICAgPGxpIGNsYXNzPSJzb2NpYWwiPjxhIGNsYXNzPSJsaW5rZWRpbiIgb25jbGljaz0id2luZG93Lm9wZW4oJCh0aGlzKS5hdHRyKCdocmVmJyksICdMaW5rZWRJbicsIGNvbmZpZz0naGVpZ2h0PTQwMCwgd2lkdGg9NTAwLCB0b29sYmFyPW5vLCBtZW51YmFyPW5vLCBzY3JvbGxiYXJzPW5vLCByZXNpemFibGU9bm8sIGxvY2F0aW9uPW5vJyk7IHJldHVybiBmYWxzZTsiIGhyZWY9Imh0dHBzOi8vd3d3LmxpbmtlZGluLmNvbS9zaGFyZUFydGljbGU/bWluaT10cnVlJnVybD1odHRwJTNBJTJGJTJGd3d3LmFnZW5jZWRlc2VuZmFudHNyb3VnZXMuY29tJTJGZnIlMkZyZWNoZXJjaGUlMkZ2ZW50ZS1hcHBhcnRlbWVudC0yLXBpZWNlcy1wYXJpcy0xMWVtZS03NTAxMS0zNjc5MTQ4JnRpdGxlPUVYQ0xVU0lWSVRFIDogWEkmZWdyYXZlO21lIHBsYWNlIGZvbnRhaW5lIFRpbWJhdWQgc3VibGltZSAyIHBpJmVncmF2ZTtjZXMgdnVlIGQmZWFjdXRlO2dhZyZlYWN1dGU7ZSZzdW1tYXJ5PU9GRiBNYXJrZXQgRGFucyB1bmUgam9saWUgY29wcm9wcmnDqXTDqSwgYXUgMyDDqG1lIMOpdGFnZSBhdmVjIGFzY2Vuc2V1ci4gQXBwYXJ0ZW1lbnQgMiBwacOoY2VzIGQnZXhjZXB0aW9uIGF1IGNvZXVyIGR1IDExIMOobWUgYXJyb25kaXNzZW1lbnQuIA0KSWwgc2UgY29tcG9zZSBkJ3VuZSBncmFuZGUgcGnDqGNlcyDDoCB2aXZyZSBhdmVjIGJhbGNvbiBldOKApiI+TGlua2VkSW48L2E+PC9saT4KICAgICAgICA8L3VsPgogICAgICA8L2Rpdj4KCiAgICAgIDxkaXYgY2xhc3M9InNlYXJjaCBsaXN0aW5nU2VhcmNoIj4KICAgICAgICA8ZGl2IGNsYXNzPSJsb2FkaW5nIj48L2Rpdj4KICA8Zm9ybSBtZXRob2Q9InBvc3QiIGFjdGlvbj0iL2ZyL3JlY2hlcmNoZS8iIGNsYXNzPSJjbGVhcmZpeCI+CiAgICAgIDxkaXYgY2xhc3M9ImZpZWxkIG5hdHVyZSI+PHNlbGVjdCBuYW1lPSJuYXR1cmUiIGlkPSJuYXR1cmUiPgo8b3B0aW9uIHZhbHVlPSIxIj5WZW50ZTwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSIyIj5Mb2NhdGlvbjwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSIzIj5Mb2NhdGlvbiBzYWlzb25uacOocmU8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iNCI+UHJvZ3JhbW1lPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjUiPlZpYWdlciAvIE51ZS1wcm9wcmnDqXTDqTwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSI2Ij5FbmNow6hyZTwvb3B0aW9uPgo8L3NlbGVjdD48L2Rpdj4KICAgIDxkaXYgY2xhc3M9ImZpZWxkcyBjbGVhcmZpeCI+CiAgICAgIDxkaXYgY2xhc3M9ImZpZWxkIj48c2VsZWN0IG5hbWU9InR5cGVbXSIgbXVsdGlwbGU9Im11bHRpcGxlIiBpZD0idHlwZSI+CjxvcHRpb24gdmFsdWU9IjEiPkFwcGFydGVtZW50PC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjIiPk1haXNvbjwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSIzIj5UZXJyYWluPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjQiPkNvbW1lcmNlPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjUiPkdhcmFnZSAvIFBhcmtpbmc8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iNiI+SW1tZXVibGU8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iNyI+QnVyZWF1PC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjgiPkJhdGVhdTwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSI5Ij5Mb2NhdXggZCYjMDM5O2FjdGl2aXTDqSAvIEVudHJlcMO0dHM8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iMTAiPkNhdmUgLyBCb3g8L29wdGlvbj4KPC9zZWxlY3Q+PC9kaXY+CiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZmllbGQiPjxzZWxlY3QgbmFtZT0icm9vbXNbXSIgbXVsdGlwbGU9Im11bHRpcGxlIiBpZD0icm9vbXMiPgo8b3B0aW9uIHZhbHVlPSIxIj4xIHBpw6hjZTwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSIyIj4yIHBpw6hjZXM8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iMyI+MyBwacOoY2VzPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjQiPjQgcGnDqGNlczwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSI1Ij41IHBpw6hjZXM8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iNisiPjYrIHBpw6hjZXM8L29wdGlvbj4KPC9zZWxlY3Q+PC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImZpZWxkIj48c2VsZWN0IGRhdGEtZXJyb3JMb2FkaW5nPSJFcnJldXIgZGUgcsOpY3Vww6lyYXRpb24gZGVzIGRvbm7DqWVzLiIgZGF0YS1pbnB1dFRvb1Nob3J0PSJWZXVpbGxleiBzYWlzaXIgZGV1eCBjYXJhY3TDqHJlcyBhdSBtaW5pbXVtIiBkYXRhLW5vUmVzdWx0cz0iQXVjdW4gcsOpc3VsdGF0IiBkYXRhLXNlYXJjaGluZz0iUmVjaGVyY2hlIGVuIGNvdXJzLi4uIiBkYXRhLXBsYWNlaG9sZGVyPSJWaWxsZSIgbmFtZT0iY2l0eVtdIiBtdWx0aXBsZT0ibXVsdGlwbGUiIGlkPSJjaXR5Ij4KPG9wdGlvbiB2YWx1ZT0iMjU5NjYiPkJlbGZvcsOqdC1lbi1QZXJjaGU8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iNTQ4Ij5Cb2hhaW4tZW4tVmVybWFuZG9pczwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSI1Mzk0OCI+QnJ1eGVsbGVzPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjM4MzkwIj5MZSBQcsOpLVNhaW50LUdlcnZhaXM8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iMzgzNDAiPkxldmFsbG9pcy1QZXJyZXQ8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iMzgzNDYiPk5ldWlsbHktc3VyLVNlaW5lPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjM4MjQ3Ij5QYWxhaXNlYXU8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iMzI1NTIiPlBhcmlzIDPDqG1lPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjMyNTUzIj5QYXJpcyA0w6htZTwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSIzMjU1NCI+UGFyaXMgNcOobWU8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iMzI1NTkiPlBhcmlzIDEww6htZTwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSIzMjU2MCI+UGFyaXMgMTHDqG1lPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjMyNTYxIj5QYXJpcyAxMsOobWU8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iMzI1NjIiPlBhcmlzIDEzw6htZTwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSIzMjU2NSI+UGFyaXMgMTbDqG1lPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjMyNTY3Ij5QYXJpcyAxOMOobWU8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iMzI1NjgiPlBhcmlzIDE5w6htZTwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSIzMjU2OSI+UGFyaXMgMjDDqG1lPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9Ijc2NDAiPlByb3ByaWFubzwvb3B0aW9uPgo8L3NlbGVjdD48L2Rpdj4KICAgICAgPGRpdiBjbGFzcz0iZmllbGQgZHJvcGRvd24iPjxzZWxlY3QgbmFtZT0icHJpY2UiIGlkPSJwcmljZSI+CjxvcHRpb24gdmFsdWU9IiIgc2VsZWN0ZWQ9InNlbGVjdGVkIj5Qcml4PC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjAwMDAwMDAwMDAtMDAwMDIwMDAwMCI+MCAtIDIwMCAwMDAg4oKsPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjAwMDAyMDAwMDAtMDAwMDQwMDAwMCI+MjAwIDAwMCAtIDQwMCAwMDAg4oKsPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjAwMDA0MDAwMDAtMDAwMDYwMDAwMCI+NDAwIDAwMCAtIDYwMCAwMDAg4oKsPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjAwMDA2MDAwMDAtMDAwMDgwMDAwMCI+NjAwIDAwMCAtIDgwMCAwMDAg4oKsPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjAwMDA4MDAwMDAtMDAwMTIwMDAwMCI+ODAwIDAwMCAtIDEgMjAwIDAwMCDigqw8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iMDAwMTIwMDAwMC0wMDAyMDAwMDAwIj4xIDIwMCAwMDAgLSAyIDAwMCAwMDAg4oKsPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjAwMDIwMDAwMDAtRU5EIj4rIDIgMDAwIDAwMCDigqw8L29wdGlvbj4KPC9zZWxlY3Q+PC9kaXY+CiAgICAgIAogICAgICAgICAgICAgICAgPHNlY3Rpb24gY2xhc3M9ImxpZmVBbm51aXR5IiBzdHlsZT0iZGlzcGxheTogbm9uZTsiPgogICAgICAgIDxkaXYgY2xhc3M9ImZpZWxkIGRyb3Bkb3duIj48c2VsZWN0IG5hbWU9ImFubnVpdHlbXSIgbXVsdGlwbGU9Im11bHRpcGxlIiBpZD0iYW5udWl0eSI+CjxvcHRpb24gdmFsdWU9IjEiPlZpYWdlciBsaWJyZTwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSIyIj5WaWFnZXIgb2NjdXDDqTwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSIzIj5OdWUtcHJvcHJpw6l0w6k8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iNCI+VmVudGUgw6AgdGVybWU8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iNSI+VmlhZ2VyIHNlbWktb2NjdXDDqTwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSI2Ij5WZW50ZSDDoCB0ZXJtZSBsaWJyZTwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSI3Ij5WZW50ZSDDoCB0ZXJtZSBzZW1pLW9jY3Vww6k8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iOCI+VmVudGUgw6AgdGVybWUgb2NjdXDDqTwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSI5Ij5WaWFnZXIgc2FucyByZW50ZTwvb3B0aW9uPgo8L3NlbGVjdD48L2Rpdj4KICAgICAgICA8ZGl2IGNsYXNzPSJmaWVsZCI+PGlucHV0IHBsYWNlaG9sZGVyPSJNaW4uIGFnZSIgdHlwZT0idGV4dCIgbmFtZT0iYWdlIiBpZD0iYWdlIiAvPjwvZGl2PgogICAgICAgIDxkaXYgY2xhc3M9ImZpZWxkIj48aW5wdXQgcGxhY2Vob2xkZXI9IlJlbnRlIG1pbi4iIHR5cGU9InRleHQiIG5hbWU9InRlbmFudF9taW4iIGlkPSJ0ZW5hbnRfbWluIiAvPjwvZGl2PgogICAgICAgIDxkaXYgY2xhc3M9ImZpZWxkIj48aW5wdXQgcGxhY2Vob2xkZXI9IlJlbnRlIG1heC4iIHR5cGU9InRleHQiIG5hbWU9InRlbmFudF9tYXgiIGlkPSJ0ZW5hbnRfbWF4IiAvPjwvZGl2PgogICAgICA8L3NlY3Rpb24+CgogICAgICA8c2VjdGlvbiBjbGFzcz0icmVudGFsIiBzdHlsZT0iZGlzcGxheTogbm9uZTsiPgogICAgICAgIDxkaXYgY2xhc3M9ImZpZWxkIGRyb3Bkb3duIj48c2VsZWN0IG5hbWU9InJlbnRfdHlwZSIgaWQ9InJlbnRfdHlwZSI+CjxvcHRpb24gdmFsdWU9IiI+VHlwZSBkZSBsb2NhdGlvbjwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSIzIj5Db2xvY2F0aW9uPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjIiPk1ldWJsw6llPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjEiPlZpZGU8L29wdGlvbj4KPC9zZWxlY3Q+PC9kaXY+CiAgICAgIDwvc2VjdGlvbj4KCiAgICAgIDxzZWN0aW9uIGNsYXNzPSJuZXdidWlsZHMiIHN0eWxlPSJkaXNwbGF5OiBub25lOyI+CiAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImZpZWxkIGRyb3Bkb3duIj48aW5wdXQgdHlwZT0iaGlkZGVuIiBuYW1lPSJuZXdwcm9ncmFtX2RlbGl2ZXJ5X2F0IiBpZD0ibmV3cHJvZ3JhbV9kZWxpdmVyeV9hdCIgLz4gPGlucHV0IHBsYWNlaG9sZGVyPSJEw6lsYWkgZGUgbGl2cmFpc29uIiB0eXBlPSJ0ZXh0IiBuYW1lPSJuZXdwcm9ncmFtX2RlbGl2ZXJ5X2F0X2Rpc3BsYXkiIGlkPSJuZXdwcm9ncmFtX2RlbGl2ZXJ5X2F0X2Rpc3BsYXkiIC8+PC9kaXY+CiAgICAgICAgICAgICAgPC9zZWN0aW9uPgogICAgCiAgICAgIDwvZGl2PgoKICAgIDxpbnB1dCB0eXBlPSJoaWRkZW4iIG5hbWU9ImN1cnJlbmN5IiB2YWx1ZT0iRVVSIiBpZD0iY3VycmVuY3kiIC8+ICA8aW5wdXQgdHlwZT0ic3VibWl0IiB2YWx1ZT0iUmVjaGVyY2hlciIvPgogIDxpbnB1dCB0eXBlPSJoaWRkZW4iIG5hbWU9ImN1c3RvbXJvdXRlIiB2YWx1ZT0iIiAvPgogIDxpbnB1dCB0eXBlPSJoaWRkZW4iIG5hbWU9ImhvbWVwYWdlIiB2YWx1ZT0iIiAvPgo8L2Zvcm0+CgoKCiAgPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPgogICAgJChmdW5jdGlvbigpIHsKICAgICAgJCgnI25hdHVyZScpLmNoYW5nZShmdW5jdGlvbigpIHsKICAgICAgICByZWZyZXNoU2VhcmNoRm9ybSgpOwogICAgICB9KTsKICAgIH0pOwogIDwvc2NyaXB0PgoKPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPgoKICB2YXIgc2VsZWN0T3BlbiA9IGZhbHNlOwoKICAkKGZ1bmN0aW9uKCkgewogICAgJCgnI25hdHVyZSBvcHRpb246c2VsZWN0ZWQnKS52YWwoKTsKICAgIAogICAgJC5mbi5zZWxlY3QyLmFtZC5yZXF1aXJlKFsib3B0Z3JvdXAtZGF0YSIsICJvcHRncm91cC1yZXN1bHRzIl0sIGZ1bmN0aW9uIChPcHRncm91cERhdGEsIE9wdGdyb3VwUmVzdWx0cykgewogICAgICAKICAgICAgJCgnI2NpdHljb2RlJykuc2VsZWN0Mih7CiAgICAgICAgZGF0YUFkYXB0ZXI6IE9wdGdyb3VwRGF0YSwKICAgICAgICByZXN1bHRzQWRhcHRlcjogT3B0Z3JvdXBSZXN1bHRzLAogICAgICAgIG1pbmltdW1JbnB1dExlbmd0aDogMiwKICAgICAgICBtYXRjaGVyOiB6aXBjb2RlTWF0Y2hlciwKICAgICAgICBsYW5ndWFnZTogewogICAgICAgICAgZXJyb3JMb2FkaW5nOiBmdW5jdGlvbigpIHsKICAgICAgICAgICAgcmV0dXJuICQoJyNjaXR5Y29kZScpLmF0dHIoJ2RhdGEtZXJyb3JMb2FkaW5nJyk7CiAgICAgICAgICB9LAogICAgICAgICAgaW5wdXRUb29TaG9ydDogZnVuY3Rpb24oYSkgewogICAgICAgICAgICByZXR1cm4gJCgnI2NpdHljb2RlJykuYXR0cignZGF0YS1pbnB1dFRvb1Nob3J0Jyk7CiAgICAgICAgICB9LAogICAgICAgICAgbm9SZXN1bHRzOiBmdW5jdGlvbigpIHsKICAgICAgICAgICAgcmV0dXJuICQoJyNjaXR5Y29kZScpLmF0dHIoJ2RhdGEtbm9SZXN1bHRzJyk7CiAgICAgICAgICB9LAogICAgICAgICAgc2VhcmNoaW5nOiBmdW5jdGlvbigpIHsKICAgICAgICAgICAgcmV0dXJuICQoJyNjaXR5Y29kZScpLmF0dHIoJ2RhdGEtc2VhcmNoaW5nJyk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9KTsgCiAgICAgIAogICAgfSk7CiAgICAKICAgIAogICAgJCgnI2NpdHknKS5zZWxlY3QyKHsKCSAgICBwbGFjZWhvbGRlcjogJCgnI2NpdHknKS5kYXRhKCdwbGFjZWhvbGRlcicpLAoJICAgIGVzY2FwZU1hcmt1cDogZnVuY3Rpb24gKG1hcmt1cCkgeyByZXR1cm4gbWFya3VwOyB9LAoJICAgIG1pbmltdW1JbnB1dExlbmd0aDogMCwKCSAgICBsYW5ndWFnZTogewoJICAgICAgZXJyb3JMb2FkaW5nOiBmdW5jdGlvbigpIHsKCQkgICAgICByZXR1cm4gJCgnI2NpdHknKS5hdHRyKCdkYXRhLWVycm9yTG9hZGluZycpOwoJICAgICAgfSwKCSAgICAgIGlucHV0VG9vU2hvcnQ6IGZ1bmN0aW9uKGEpIHsKCSAgICAgIAlyZXR1cm4gJCgnI2NpdHknKS5hdHRyKCdkYXRhLWlucHV0VG9vU2hvcnQnKTsKCSAgICAgIH0sCgkgICAgICBub1Jlc3VsdHM6IGZ1bmN0aW9uKCkgewoJICAgICAgCXJldHVybiAkKCcjY2l0eScpLmF0dHIoJ2RhdGEtbm9SZXN1bHRzJyk7CgkgICAgICB9LAoJICAgICAgc2VhcmNoaW5nOiBmdW5jdGlvbigpIHsKCSAgICAgIAlyZXR1cm4gJCgnI2NpdHknKS5hdHRyKCdkYXRhLXNlYXJjaGluZycpOwoJICAgICAgfQoJICAgIH0KCSAgfSk7CgogICAgJCgnI2xvY2F0aW9uJykuc2VsZWN0Mih7CgkgICAgcGxhY2Vob2xkZXI6ICQoJyNsb2NhdGlvbicpLmRhdGEoJ3BsYWNlaG9sZGVyJyksCgkgICAgYWpheDogewoJICAgICAgdXJsOiAiL21pc2MvYXV0b2NvbXBsZXRlIiwKCSAgICAgIGRhdGFUeXBlOiAnanNvbicsCgkgICAgICBkZWxheTogMjUwLAoJICAgICAgZGF0YTogZnVuY3Rpb24gKHBhcmFtcykgewoJICAgICAgICByZXR1cm4gewoJICAgICAgICAgIHE6IHBhcmFtcy50ZXJtLCAvLyBzZWFyY2ggdGVybQoJICAgICAgICAgIHBhZ2U6IHBhcmFtcy5wYWdlCgkgICAgICAgIH07CgkgICAgICB9LAoJICAgICAgcHJvY2Vzc1Jlc3VsdHM6IGZ1bmN0aW9uIChkYXRhKSB7CgkgICAgICAgICAgcmV0dXJuIHsKCSAgICAgICAgICAgICAgcmVzdWx0czogJC5tYXAoZGF0YS5pdGVtcywgZnVuY3Rpb24gKGl0ZW0pIHsKCSAgICAgICAgICAgICAgICAgIHJldHVybiB7CgkgICAgICAgICAgICAgICAgICAgICAgdGV4dDogaXRlbS5uYW1lLAoJICAgICAgICAgICAgICAgICAgICAgIGlkOiBpdGVtLmlkCgkgICAgICAgICAgICAgICAgICB9CgkgICAgICAgICAgICAgIH0pCgkgICAgICAgICAgfTsKCSAgICAgIH0sCgkgICAgICBjYWNoZTogdHJ1ZQoJICAgIH0sCgkgICAgZXNjYXBlTWFya3VwOiBmdW5jdGlvbiAobWFya3VwKSB7IHJldHVybiBtYXJrdXA7IH0sCgkgICAgbWluaW11bUlucHV0TGVuZ3RoOiAyLAoJICAgIGxhbmd1YWdlOiB7CgkgICAgICBlcnJvckxvYWRpbmc6IGZ1bmN0aW9uKCkgewoJCSAgICAgIHJldHVybiAkKCcjbG9jYXRpb24nKS5hdHRyKCdkYXRhLWVycm9yTG9hZGluZycpOwoJICAgICAgfSwKCSAgICAgIGlucHV0VG9vU2hvcnQ6IGZ1bmN0aW9uKGEpIHsKCSAgICAgIAlyZXR1cm4gJCgnI2xvY2F0aW9uJykuYXR0cignZGF0YS1pbnB1dFRvb1Nob3J0Jyk7CgkgICAgICB9LAoJICAgICAgbm9SZXN1bHRzOiBmdW5jdGlvbigpIHsKCSAgICAgIAlyZXR1cm4gJCgnI2xvY2F0aW9uJykuYXR0cignZGF0YS1ub1Jlc3VsdHMnKTsKCSAgICAgIH0sCgkgICAgICBzZWFyY2hpbmc6IGZ1bmN0aW9uKCkgewoJICAgICAgCXJldHVybiAkKCcjbG9jYXRpb24nKS5hdHRyKCdkYXRhLXNlYXJjaGluZycpOwoJICAgICAgfQoJICAgIH0KCSAgfSk7CgogICAgJCgnI2RlcGFydG1lbnQnKS5zZWxlY3QyKHsKCSAgICBwbGFjZWhvbGRlcjogJCgnI2RlcGFydG1lbnQnKS5kYXRhKCdwbGFjZWhvbGRlcicpLAoJICAgIGxhbmd1YWdlOiB7CgkgICAgICBlcnJvckxvYWRpbmc6IGZ1bmN0aW9uKCkgewoJCSAgICAgIHJldHVybiAkKCcjZGVwYXJ0bWVudCcpLmF0dHIoJ2RhdGEtZXJyb3JMb2FkaW5nJyk7CgkgICAgICB9LAoJICAgICAgaW5wdXRUb29TaG9ydDogZnVuY3Rpb24oYSkgewoJICAgICAgCXJldHVybiAkKCcjZGVwYXJ0bWVudCcpLmF0dHIoJ2RhdGEtaW5wdXRUb29TaG9ydCcpOwoJICAgICAgfSwKCSAgICAgIG5vUmVzdWx0czogZnVuY3Rpb24oKSB7CgkgICAgICAJcmV0dXJuICQoJyNkZXBhcnRtZW50JykuYXR0cignZGF0YS1ub1Jlc3VsdHMnKTsKCSAgICAgIH0sCgkgICAgICBzZWFyY2hpbmc6IGZ1bmN0aW9uKCkgewoJICAgICAgCXJldHVybiAkKCcjZGVwYXJ0bWVudCcpLmF0dHIoJ2RhdGEtc2VhcmNoaW5nJyk7CgkgICAgICB9CgkgICAgfQoJICB9KTsKICAgIAogICAgJCgnI3JlZ2lvbicpLnNlbGVjdDIoewoJICAgIHBsYWNlaG9sZGVyOiAkKCcjcmVnaW9uJykuZGF0YSgncGxhY2Vob2xkZXInKSwKCSAgICBsYW5ndWFnZTogewoJICAgICAgZXJyb3JMb2FkaW5nOiBmdW5jdGlvbigpIHsKCQkgICAgICByZXR1cm4gJCgnI3JlZ2lvbicpLmF0dHIoJ2RhdGEtZXJyb3JMb2FkaW5nJyk7CgkgICAgICB9LAoJICAgICAgaW5wdXRUb29TaG9ydDogZnVuY3Rpb24oYSkgewoJICAgICAgCXJldHVybiAkKCcjcmVnaW9uJykuYXR0cignZGF0YS1pbnB1dFRvb1Nob3J0Jyk7CgkgICAgICB9LAoJICAgICAgbm9SZXN1bHRzOiBmdW5jdGlvbigpIHsKCSAgICAgIAlyZXR1cm4gJCgnI3JlZ2lvbicpLmF0dHIoJ2RhdGEtbm9SZXN1bHRzJyk7CgkgICAgICB9LAoJICAgICAgc2VhcmNoaW5nOiBmdW5jdGlvbigpIHsKCSAgICAgIAlyZXR1cm4gJCgnI3JlZ2lvbicpLmF0dHIoJ2RhdGEtc2VhcmNoaW5nJyk7CgkgICAgICB9CgkgICAgfQoJICB9KTsKICAgIAogICAgJCgnI3JlZ2RlcCcpLnNlbGVjdDIoewoJICAgIHBsYWNlaG9sZGVyOiAkKCcjcmVnZGVwJykuZGF0YSgncGxhY2Vob2xkZXInKSwKCSAgICBsYW5ndWFnZTogewoJICAgICAgZXJyb3JMb2FkaW5nOiBmdW5jdGlvbigpIHsKCQkgICAgICByZXR1cm4gJCgnI3JlZ2RlcCcpLmF0dHIoJ2RhdGEtZXJyb3JMb2FkaW5nJyk7CgkgICAgICB9LAoJICAgICAgaW5wdXRUb29TaG9ydDogZnVuY3Rpb24oYSkgewoJICAgICAgCXJldHVybiAkKCcjcmVnZGVwJykuYXR0cignZGF0YS1pbnB1dFRvb1Nob3J0Jyk7CgkgICAgICB9LAoJICAgICAgbm9SZXN1bHRzOiBmdW5jdGlvbigpIHsKCSAgICAgIAlyZXR1cm4gJCgnI3JlZ2RlcCcpLmF0dHIoJ2RhdGEtbm9SZXN1bHRzJyk7CgkgICAgICB9LAoJICAgICAgc2VhcmNoaW5nOiBmdW5jdGlvbigpIHsKCSAgICAgIAlyZXR1cm4gJCgnI3JlZ2RlcCcpLmF0dHIoJ2RhdGEtc2VhcmNoaW5nJyk7CgkgICAgICB9CgkgICAgfQoJICB9KTsKICAgIAogICAgJCgnI3NlY3RvcicpLm11bHRpcGxlU2VsZWN0KHsKICAgICAgcGxhY2Vob2xkZXI6ICJTZWN0ZXVycyIsCiAgICAgIHNlbGVjdEFsbFRleHQ6ICJUb3V0IHPDqWxlY3Rpb25uZXIiLAogICAgICBzZWxlY3RBbGxEZWxpbWl0ZXI6ICIiLAogICAgICBhbGxTZWxlY3RlZDogIlRvdXMgc8OpbGVjdGlvbm7DqXMiLAogICAgICBtaW5pbXVtQ291bnRTZWxlY3RlZDogMiwKICAgICAgY291bnRTZWxlY3RlZDogIiMgc2VjdGV1cnMiLAogICAgICBvbk9wZW46IGZ1bmN0aW9uKCkgewogICAgICAgIGRpc2FibGVTZWFyY2hGaWVsZHMoJyNzZWN0b3InKTsKICAgICAgICB2YXIgc2VsZWN0T3BlbiA9IHRydWU7CiAgICAgIH0sCiAgICAgIG9uQ2xvc2U6IGZ1bmN0aW9uKCkgewogICAgICAgIHJlZnJlc2hTZWFyY2hGb3JtKCk7CiAgICAgIH0KICAgIH0pOwoKICAgICQoJyN0eXBlJykubXVsdGlwbGVTZWxlY3QoewogICAgICBwbGFjZWhvbGRlcjogIlR5cGVzIiwKICAgICAgc2VsZWN0QWxsVGV4dDogIlRvdXQgc8OpbGVjdGlvbm5lciIsCiAgICAgIHNlbGVjdEFsbERlbGltaXRlcjogIiIsCiAgICAgIGFsbFNlbGVjdGVkOiAiVG91cyBzw6lsZWN0aW9ubsOpcyIsCiAgICAgIG1pbmltdW1Db3VudFNlbGVjdGVkOiAyLAogICAgICBjb3VudFNlbGVjdGVkOiAiIyB0eXBlcyIsCiAgICAgIG9uT3BlbjogZnVuY3Rpb24oKSB7CiAgICAgICAgZGlzYWJsZVNlYXJjaEZpZWxkcygnI3R5cGUnKTsKICAgICAgICB2YXIgc2VsZWN0T3BlbiA9IHRydWU7CiAgICAgIH0sCiAgICAgIG9uQ2xvc2U6IGZ1bmN0aW9uKCkgewogICAgICAgIHJlZnJlc2hTZWFyY2hGb3JtKCk7CiAgICAgIH0KICAgIH0pOwoKICAgICQoJyNzcGVjaWZpYycpLm11bHRpcGxlU2VsZWN0KHsKICAgICAgcGxhY2Vob2xkZXI6ICJUeXBlcyIsCiAgICAgIHNlbGVjdEFsbFRleHQ6ICJUb3V0IHPDqWxlY3Rpb25uZXIiLAogICAgICBzZWxlY3RBbGxEZWxpbWl0ZXI6ICIiLAogICAgICBhbGxTZWxlY3RlZDogIlRvdXMgc8OpbGVjdGlvbm7DqXMiLAogICAgICBtaW5pbXVtQ291bnRTZWxlY3RlZDogMiwKICAgICAgY291bnRTZWxlY3RlZDogIiMgdHlwZXMiLAogICAgICBvbk9wZW46IGZ1bmN0aW9uKCkgewogICAgICAgIGRpc2FibGVTZWFyY2hGaWVsZHMoJyNzcGVjaWZpYycpOwogICAgICAgIHZhciBzZWxlY3RPcGVuID0gdHJ1ZTsKICAgICAgfSwKICAgICAgb25DbG9zZTogZnVuY3Rpb24oKSB7CiAgICAgICAgcmVmcmVzaFNlYXJjaEZvcm0oKTsKICAgICAgfQogICAgfSk7CgogICAgJCgnI2dsb2JhbHR5cGUnKS5tdWx0aXBsZVNlbGVjdCh7CiAgICAgIHBsYWNlaG9sZGVyOiAiVHlwZXMiLAogICAgICBzZWxlY3RBbGxUZXh0OiAiVG91dCBzw6lsZWN0aW9ubmVyIiwKICAgICAgc2VsZWN0QWxsRGVsaW1pdGVyOiAiIiwKICAgICAgYWxsU2VsZWN0ZWQ6ICJUb3VzIHPDqWxlY3Rpb25uw6lzIiwKICAgICAgbWluaW11bUNvdW50U2VsZWN0ZWQ6IDIsCiAgICAgIGNvdW50U2VsZWN0ZWQ6ICIjIHR5cGVzIiwKICAgICAgb25PcGVuOiBmdW5jdGlvbigpIHsKICAgICAgICBkaXNhYmxlU2VhcmNoRmllbGRzKCcjZ2xvYmFsdHlwZScpOwogICAgICAgIHZhciBzZWxlY3RPcGVuID0gdHJ1ZTsKICAgICAgfSwKICAgICAgb25DbG9zZTogZnVuY3Rpb24oKSB7CiAgICAgICAgcmVmcmVzaFNlYXJjaEZvcm0oKTsKICAgICAgfQogICAgfSk7CgogICAgJCgnI3Jvb21zJykubXVsdGlwbGVTZWxlY3QoewogICAgICBwbGFjZWhvbGRlcjogIlBpw6hjZXMiLAogICAgICBzZWxlY3RBbGxUZXh0OiAiVG91dCBzw6lsZWN0aW9ubmVyIiwKICAgICAgc2VsZWN0QWxsRGVsaW1pdGVyOiAiIiwKICAgICAgYWxsU2VsZWN0ZWQ6ICJUb3VzIHPDqWxlY3Rpb25uw6lzIiwKICAgICAgY291bnRTZWxlY3RlZDogZmFsc2UsCiAgICAgIG9uT3BlbjogZnVuY3Rpb24oKSB7CiAgICAgICAgZGlzYWJsZVNlYXJjaEZpZWxkcygnI3Jvb21zJyk7CiAgICAgICAgdmFyIHNlbGVjdE9wZW4gPSB0cnVlOwogICAgICB9LAogICAgICBvbkNsb3NlOiBmdW5jdGlvbigpIHsKICAgICAgICByZWZyZXNoU2VhcmNoRm9ybSgpOwogICAgICB9CiAgICB9KTsKCiAgICAkKCcjYmVkcm9vbXMnKS5tdWx0aXBsZVNlbGVjdCh7CiAgICAgIHBsYWNlaG9sZGVyOiAiQ2hhbWJyZXMiLAogICAgICBzZWxlY3RBbGxUZXh0OiAiVG91dCBzw6lsZWN0aW9ubmVyIiwKICAgICAgc2VsZWN0QWxsRGVsaW1pdGVyOiAiIiwKICAgICAgYWxsU2VsZWN0ZWQ6ICJUb3VzIHPDqWxlY3Rpb25uw6lzIiwKICAgICAgY291bnRTZWxlY3RlZDogZmFsc2UsCiAgICAgIG9uT3BlbjogZnVuY3Rpb24oKSB7CiAgICAgICAgZGlzYWJsZVNlYXJjaEZpZWxkcygnI2JlZHJvb21zJyk7CiAgICAgICAgdmFyIHNlbGVjdE9wZW4gPSB0cnVlOwogICAgICB9LAogICAgICBvbkNsb3NlOiBmdW5jdGlvbigpIHsKICAgICAgICByZWZyZXNoU2VhcmNoRm9ybSgpOwogICAgICB9CiAgICB9KTsKCiAgICAkKCcjYmVkcycpLm11bHRpcGxlU2VsZWN0KHsKICAgICAgcGxhY2Vob2xkZXI6ICJDb3VjaGFnZXMiLAogICAgICBzZWxlY3RBbGxUZXh0OiAiVG91dCBzw6lsZWN0aW9ubmVyIiwKICAgICAgc2VsZWN0QWxsRGVsaW1pdGVyOiAiIiwKICAgICAgYWxsU2VsZWN0ZWQ6ICJUb3VzIHPDqWxlY3Rpb25uw6lzIiwKICAgICAgY291bnRTZWxlY3RlZDogZmFsc2UsCiAgICAgIG9uT3BlbjogZnVuY3Rpb24oKSB7CiAgICAgICAgZGlzYWJsZVNlYXJjaEZpZWxkcygnI2JlZHMnKTsKICAgICAgICB2YXIgc2VsZWN0T3BlbiA9IHRydWU7CiAgICAgIH0sCiAgICAgIG9uQ2xvc2U6IGZ1bmN0aW9uKCkgewogICAgICAgIHJlZnJlc2hTZWFyY2hGb3JtKCk7CiAgICAgIH0KICAgIH0pOwoKICAgICQoJyNhbm51aXR5JykubXVsdGlwbGVTZWxlY3QoewogICAgICBwbGFjZWhvbGRlcjogIlR5cGUgZGUgdmlhZ2VyIiwKICAgICAgc2VsZWN0QWxsVGV4dDogIlRvdXQgc8OpbGVjdGlvbm5lciIsCiAgICAgIHNlbGVjdEFsbERlbGltaXRlcjogIiIsCiAgICAgIGFsbFNlbGVjdGVkOiAiVG91cyBzw6lsZWN0aW9ubsOpcyIsCiAgICAgIG1pbmltdW1Db3VudFNlbGVjdGVkOiAyLAogICAgICBjb3VudFNlbGVjdGVkOiAiIyB0eXBlcyBkZSB2aWFnZXIiLAogICAgICBvbk9wZW46IGZ1bmN0aW9uKCkgewogICAgICAgIGRpc2FibGVTZWFyY2hGaWVsZHMoJyNhbm51aXR5Jyk7CiAgICAgICAgdmFyIHNlbGVjdE9wZW4gPSB0cnVlOwogICAgICB9LAogICAgICBvbkNsb3NlOiBmdW5jdGlvbigpIHsKICAgICAgICByZWZyZXNoU2VhcmNoRm9ybSgpOwogICAgICB9CiAgICB9KTsKCiAgICAkKCcjcm9vbV90eXBlJykubXVsdGlwbGVTZWxlY3QoewogICAgICBwbGFjZWhvbGRlcjogIlBpw6hjZXMiLAogICAgICBzZWxlY3RBbGxUZXh0OiAiVG91dCBzw6lsZWN0aW9ubmVyIiwKICAgICAgc2VsZWN0QWxsRGVsaW1pdGVyOiAiIiwKICAgICAgYWxsU2VsZWN0ZWQ6ICJUb3VzIHPDqWxlY3Rpb25uw6lzIiwKICAgICAgY291bnRTZWxlY3RlZDogZmFsc2UsCiAgICAgIG9uT3BlbjogZnVuY3Rpb24oKSB7CiAgICAgICAgZGlzYWJsZVNlYXJjaEZpZWxkcygnI3Jvb21fdHlwZScpOwogICAgICAgIHZhciBzZWxlY3RPcGVuID0gdHJ1ZTsKICAgICAgfSwKICAgICAgb25DbG9zZTogZnVuY3Rpb24oKSB7CiAgICAgICAgcmVmcmVzaFNlYXJjaEZvcm0oKTsKICAgICAgfQogICAgfSk7CgogICAgJCgnI2Rpc3RyaWN0JykubXVsdGlwbGVTZWxlY3QoewogICAgICBwbGFjZWhvbGRlcjogIlF1YXJ0aWVycyIsCiAgICAgIHNlbGVjdEFsbFRleHQ6ICJUb3V0IHPDqWxlY3Rpb25uZXIiLAogICAgICBzZWxlY3RBbGxEZWxpbWl0ZXI6ICIiLAogICAgICBhbGxTZWxlY3RlZDogIlRvdXMgc8OpbGVjdGlvbm7DqXMiLAogICAgICBtaW5pbXVtQ291bnRTZWxlY3RlZDogMiwKICAgICAgY291bnRTZWxlY3RlZDogIiMgcXVhcnRpZXJzIiwKICAgICAgb25PcGVuOiBmdW5jdGlvbigpIHsKICAgICAgICBkaXNhYmxlU2VhcmNoRmllbGRzKCcjZGlzdHJpY3QnKTsKICAgICAgICB2YXIgc2VsZWN0T3BlbiA9IHRydWU7CiAgICAgIH0sCiAgICAgIG9uQ2xvc2U6IGZ1bmN0aW9uKCkgewogICAgICAgIHJlZnJlc2hTZWFyY2hGb3JtKCk7CiAgICAgIH0KICAgIH0pOwoKICAgICQoJyNhY3Rpdml0eScpLm11bHRpcGxlU2VsZWN0KHsKICAgICAgcGxhY2Vob2xkZXI6ICJBY3Rpdml0w6kiLAogICAgICBzZWxlY3RBbGxUZXh0OiAiVG91dCBzw6lsZWN0aW9ubmVyIiwKICAgICAgc2VsZWN0QWxsRGVsaW1pdGVyOiAiIiwKICAgICAgYWxsU2VsZWN0ZWQ6ICJUb3VzIHPDqWxlY3Rpb25uw6lzIiwKICAgICAgbWluaW11bUNvdW50U2VsZWN0ZWQ6IDIsCiAgICAgIGNvdW50U2VsZWN0ZWQ6ICIjIGFjdGl2aXTDqXMiLAogICAgICBvbk9wZW46IGZ1bmN0aW9uKCkgewogICAgICAgIGRpc2FibGVTZWFyY2hGaWVsZHMoJyNhY3Rpdml0eScpOwogICAgICAgIHZhciBzZWxlY3RPcGVuID0gdHJ1ZTsKICAgICAgfSwKICAgICAgb25DbG9zZTogZnVuY3Rpb24oKSB7CiAgICAgICAgcmVmcmVzaFNlYXJjaEZvcm0oKTsKICAgICAgfQogICAgfSk7CgogICAgaWYgKCQoJyNuZXdwcm9ncmFtX2RlbGl2ZXJ5X2F0X2Rpc3BsYXknKS5sZW5ndGgpCiAgICB7CiAgICAgICQoJyNuZXdwcm9ncmFtX2RlbGl2ZXJ5X2F0X2Rpc3BsYXknKS5kYXRlcGlja2VyKHsKICAgIAkgICAgbGFuZ3VhZ2U6ICdmci1GUicsCiAgICAgICAgc3RhcnREYXRlOiBuZXcgRGF0ZSgpLAogICAgICAgIGF1dG9IaWRlOiB0cnVlCiAgICAgIH0pOwoKICAgICAgaWYgKCQoJyNuZXdwcm9ncmFtX2RlbGl2ZXJ5X2F0JykudmFsKCkpCiAgICAgICAgJCgnI25ld3Byb2dyYW1fZGVsaXZlcnlfYXRfZGlzcGxheScpLmRhdGVwaWNrZXIoJ3NldERhdGUnLCBuZXcgRGF0ZSgkKCcjbmV3cHJvZ3JhbV9kZWxpdmVyeV9hdCcpLnZhbCgpKSk7CgogICAgICAkKCcjbmV3cHJvZ3JhbV9kZWxpdmVyeV9hdF9kaXNwbGF5Jykub24oJ3BpY2suZGF0ZXBpY2tlcicsIGZ1bmN0aW9uIChlKSB7CiAgICAgICAgJCgnI25ld3Byb2dyYW1fZGVsaXZlcnlfYXQnKS52YWwoZm9ybWF0RGF0ZShlLmRhdGUpKTsKICAgICAgCX0pOwogICAgfQoKICAgICQoJy5zZWFyY2ggaW5wdXRbdHlwZT0ic3VibWl0Il0nKS5jbGljayhmdW5jdGlvbigpIHsKICAgICAgaWYgKHNlbGVjdE9wZW4pIHsKICAgICAgICByZWZyZXNoU2VhcmNoRm9ybSh0cnVlKTsKICAgICAgICByZXR1cm4gZmFsc2U7CiAgICAgIH0KICAgIH0pOwoKICAgICQoJyNzZWN0b3InKS5tdWx0aXBsZVNlbGVjdCgnZW5hYmxlJyk7CiAgICAkKCcjdHlwZScpLm11bHRpcGxlU2VsZWN0KCdlbmFibGUnKTsKICAgICQoJyNzcGVjaWZpYycpLm11bHRpcGxlU2VsZWN0KCdlbmFibGUnKTsKICAgICQoJyNnbG9iYWx0eXBlJykubXVsdGlwbGVTZWxlY3QoJ2VuYWJsZScpOwogICAgJCgnI3Jvb21zJykubXVsdGlwbGVTZWxlY3QoJ2VuYWJsZScpOwogICAgJCgnI2JlZHJvb21zJykubXVsdGlwbGVTZWxlY3QoJ2VuYWJsZScpOwogICAgJCgnI2JlZHMnKS5tdWx0aXBsZVNlbGVjdCgnZW5hYmxlJyk7CiAgICAkKCcjYW5udWl0eScpLm11bHRpcGxlU2VsZWN0KCdlbmFibGUnKTsKICAgICQoJyNyb29tX3R5cGUnKS5tdWx0aXBsZVNlbGVjdCgnZW5hYmxlJyk7CiAgICAkKCcjZGlzdHJpY3QnKS5tdWx0aXBsZVNlbGVjdCgnZW5hYmxlJyk7CiAgICAkKCcjYWN0aXZpdHknKS5tdWx0aXBsZVNlbGVjdCgnZW5hYmxlJyk7CiAgfSk7CgogIC8qKiBVcGRhdGUgZmllbGRzIGluIHNlYXJjaCBmb3JtLgogICAqIEBwYXJhbSAoYm9vbCkgc3VibWl0IDogSWYgdHJ1ZSwgZm9ybSBpcyBzdWJtaXR0ZWQgYWZ0ZXIgdXBkYXRlLiAqLwogIGZ1bmN0aW9uIHJlZnJlc2hTZWFyY2hGb3JtKHN1Ym1pdCkKICB7CiAgICBpZiAodHlwZW9mIG5hdHVyZUlkICE9ICJ1bmRlZmluZWQiKQogICAgICAkKCcjbmF0dXJlJykudmFsKG5hdHVyZUlkKTsKCiAgICAkKCcuc2VhcmNoIC5sb2FkaW5nJykuc2hvdygpOwogICAgdmFyIHNlcmlhbGl6ZWQgPSAkKCIuc2VhcmNoIGZvcm0iKS5zZXJpYWxpemUoKTsKICAgIHZhciBob21lcGFnZSA9ICQoJy5zZWFyY2ggaW5wdXRbbmFtZT0iaG9tZXBhZ2UiXScpLnZhbCgpOwogICAgCiAgICB2YXIgaXNTZWFyY2hBZHZhbmNlZCA9ICQoJy5vdmVyZmxvd1NlYXJjaCcpLmhhc0NsYXNzKCdhZHZhbmNlZFNlYXJjaE9wZW4nKTsKICAgICQoJ2lucHV0LCBzZWxlY3QnKS5wcm9wKCdkaXNhYmxlZCcsIHRydWUpOwogICAgJCgiI3NlY3RvciwgI3R5cGUsICNzcGVjaWZpYywgI2dsb2JhbHR5cGUsICNyb29tcywgI2JlZHJvb21zLCAjYmVkcywgI2FubnVpdHksICNkaXN0cmljdCwgI2FjdGl2aXR5IikubXVsdGlwbGVTZWxlY3QoImRpc2FibGUiKTsKICAgIAogICAgJC5hamF4KHsKICAgICAgdXJsOiAiL2ZyL3NlYXJjaEZvcm0iLAogICAgICB0eXBlOiAiUE9TVCIsCiAgICAgIGRhdGFUeXBlOiAiaHRtbCIsCiAgICAgIGRhdGE6IHNlcmlhbGl6ZWQsCiAgICAgIHN1Y2Nlc3M6ZnVuY3Rpb24oZGF0YSwgdGV4dFN0YXR1cykgewogICAgICAgICQoIi5zZWFyY2giKS5odG1sKGRhdGEpOwogICAgICAgICQoJy5zZWFyY2ggLmxvYWRpbmcnKS5oaWRlKCk7CgogICAgICAgIGlmICgkKCcuc2VhcmNoJykuaGFzQ2xhc3MoJ292ZXJmbG93U2VhcmNoJykpCiAgICAgICAgICByZXNpemVPdmVyZmxvd1NlYXJjaChmYWxzZSk7CiAgICAgICAgCiAgICAgICAgaWYgKGlzU2VhcmNoQWR2YW5jZWQpIHsKICAgICAgICAgICQoJy5hZHZhbmNlZFNlYXJjaCcpLnRvZ2dsZSgpOwogICAgICAgICAgJCgnLm92ZXJmbG93U2VhcmNoJykuYWRkQ2xhc3MoJ2FkdmFuY2VkU2VhcmNoT3BlbicpOwogICAgICAgIH0KICAgICAgICAgIAogICAgICAgICAgCiAgICAgICAgaWYgKHN1Ym1pdCkKICAgICAgICAgICQoJy5zZWFyY2ggZm9ybScpLnN1Ym1pdCgpOwogICAgICB9CiAgICB9KTsKICB9CgogIGZ1bmN0aW9uIGRpc2FibGVTZWFyY2hGaWVsZHMoaXRlbSkKICB7CiAgICAvLyQoJ2lucHV0LCBzZWxlY3QnKS5ub3QoaXRlbSkucHJvcCgnZGlzYWJsZWQnLCB0cnVlKTsKICAgICQoIiNzZWN0b3IsICN0eXBlLCAjc3BlY2lmaWMsICNnbG9iYWx0eXBlLCAjcm9vbXMsICNiZWRyb29tcywgI2JlZHMsICNhbm51aXR5LCAjZGlzdHJpY3QsICNhY3Rpdml0eSIpLm5vdChpdGVtKS5tdWx0aXBsZVNlbGVjdCgiZGlzYWJsZSIpOwogIH0KCiAgZnVuY3Rpb24gY291bnRTZWxlY3RlZE9uU2VsZWN0MihzZWxlY3RvcikKICB7CiAgICB2YXIgdWxkaXYgPSAkKHNlbGVjdG9yKS5zaWJsaW5ncygnc3Bhbi5zZWxlY3QyJykuZmluZCgndWwnKTsKICAgIHZhciBjb3VudCA9IHVsZGl2LmZpbmQoJ2xpJykubGVuZ3RoIC0gMTsKCiAgICAkKHNlbGVjdG9yKS5zaWJsaW5ncygnc3Bhbi5zZWxlY3QyJykuZmluZCgnLnNlbGVjdDItc2VsZWN0aW9uX19jaG9pY2UnKS5yZW1vdmUoKTsKCiAgICBpZiAoY291bnQgPT0gMSkKICAgICAgdWxkaXYucHJlcGVuZCgnPGxpIGNsYXNzPSJzZWxlY3QyLXNlbGVjdGlvbl9fY2hvaWNlIj4nKyBjb3VudCArJyB2aWxsZTwvbGk+Jyk7CiAgICBlbHNlIGlmIChjb3VudCA+IDEpCiAgICAgIHVsZGl2LnByZXBlbmQoJzxsaSBjbGFzcz0ic2VsZWN0Mi1zZWxlY3Rpb25fX2Nob2ljZSI+JysgY291bnQgKycgdmlsbGVzPC9saT4nKTsKICB9Cgo8L3NjcmlwdD4KCgogICAgICA8L2Rpdj4KCiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ic2ltaWxhckJsb2NrIj4KICAgICAgICAgIDxoMj5Qcm9kdWl0cyBzaW1pbGFpcmVzPC9oMj4KICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Iml0ZW0iPgogICAgICAgICAgICAgIDxhIGhyZWY9Ii9mci9yZWNoZXJjaGUvdmVudGUtYXBwYXJ0ZW1lbnQtMi1waWVjZXMtcGFyaXMtM2VtZS1lbmZhbnRzLXJvdWdlcy03NTAwMy0zNjEyODU2IiB0aXRsZT0iUlVFIERVUEVUSVQtVEhPVUFSUyAtIFBBUklTIDPDqG1lIj4KICAgICAgICAgICAgICAgIDxkaXY+CiAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InBpY3R1cmUgcmVzaXplUGljdHVyZSIgZGF0YS1wcmVzZXJ2ZXBvcnRyYWl0PSJmYWxzZSIgZGF0YS1vdmVyZmxvdz0idHJ1ZSI+CiAgICAgICAgICAgICAgICAgICAgPGltZyBhbHQ9IlJVRSBEVVBFVElULVRIT1VBUlMgLSBQQVJJUyAzw6htZSIgc3JjPSJodHRwczovL2QxcWZqMjMxdWc3d2R1LmNsb3VkZnJvbnQubmV0L3BpY3R1cmVzL2VzdGF0ZS8zNDM0LzM0MzMyNDkvMzE3MDc2NTM4NWUzYzEwY2IwNzUzMjQuODE1NTE3MDJfZmZjNDI1ZjA4YV80MDAuanBnIiAvPiAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8ZGl2PgogICAgICAgICAgICAgICAgICA8aDM+QXBwYXJ0ZW1lbnQsIFBhcmlzIDPDqG1lPC9oMz4KICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9InByaWNlIj41NjUgMDAwIOKCrDwvcD4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJpdGVtIj4KICAgICAgICAgICAgICA8YSBocmVmPSIvZnIvcmVjaGVyY2hlL3ZlbnRlLWFwcGFydGVtZW50LTItcGllY2VzLXBhcmlzLTRlbWUtc2FpbnQtZ2VydmFpcy03NTAwNC0yMDQ4NTg1IiB0aXRsZT0iSUxFIFNUIExPVUlTIFF1YWkgZCcgQW5qb3UgMiBwacOoY2VzIHN1ciBqYXJkaW4gbHVtaW5ldXggZXQgY2FsbWUiPgogICAgICAgICAgICAgICAgPGRpdj4KICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icGljdHVyZSByZXNpemVQaWN0dXJlIiBkYXRhLXByZXNlcnZlcG9ydHJhaXQ9ImZhbHNlIiBkYXRhLW92ZXJmbG93PSJ0cnVlIj4KICAgICAgICAgICAgICAgICAgICA8aW1nIGFsdD0iSUxFIFNUIExPVUlTIFF1YWkgZCcgQW5qb3UgMiBwacOoY2VzIHN1ciBqYXJkaW4gbHVtaW5ldXggZXQgY2FsbWUiIHNyYz0iaHR0cHM6Ly9kMXFmajIzMXVnN3dkdS5jbG91ZGZyb250Lm5ldC9waWN0dXJlcy9lc3RhdGUvMzA0Mi8zMDQxNTk0LzYzODQ2MDk1NTVjZTY3NDI3MmNjODgzLjkyOTA3Nzk1XzkxYzZjOTk2MWVfNDAwLmpwZyIgLz4gICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPGRpdj4KICAgICAgICAgICAgICAgICAgPGgzPkFwcGFydGVtZW50LCBQYXJpcyA0w6htZTwvaDM+CiAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJwcmljZSI+NjM1IDAwMCDigqw8L3A+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iaXRlbSI+CiAgICAgICAgICAgICAgPGEgaHJlZj0iL2ZyL3JlY2hlcmNoZS92ZW50ZS1hcHBhcnRlbWVudC0yLXBpZWNlcy1wYXJpcy0xOGVtZS03NTAxOC0zNTc1NzE5IiB0aXRsZT0iQ0FVTEFJTkNPVVJUIDE4ZSAgQmVhdSAyIHBpw6hjZXMgZGUgNTRtwrIgcmVmYWl0IG5ldWYuIFZ1ZSBkw6lnYWfDqWUiPgogICAgICAgICAgICAgICAgPGRpdj4KICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icGljdHVyZSByZXNpemVQaWN0dXJlIiBkYXRhLXByZXNlcnZlcG9ydHJhaXQ9ImZhbHNlIiBkYXRhLW92ZXJmbG93PSJ0cnVlIj4KICAgICAgICAgICAgICAgICAgICA8aW1nIGFsdD0iQ0FVTEFJTkNPVVJUIDE4ZSAgQmVhdSAyIHBpw6hjZXMgZGUgNTRtwrIgcmVmYWl0IG5ldWYuIFZ1ZSBkw6lnYWfDqWUiIHNyYz0iaHR0cHM6Ly9kMXFmajIzMXVnN3dkdS5jbG91ZGZyb250Lm5ldC9waWN0dXJlcy9lc3RhdGUvMzI3NC8zMjczMzAyLzI2MzcwNjE1ZDljZWRjNjg2ZDVjNy43OTk3NzA5NF9iZmE2NDRkNDliXzQwMC5qcGciIC8+ICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDxkaXY+CiAgICAgICAgICAgICAgICAgIDxoMz5BcHBhcnRlbWVudCwgUGFyaXMgMTjDqG1lPC9oMz4KICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9InByaWNlIj42MzAgMDAwIOKCrDwvcD4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAKICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImxvYW5DYWxjdWxhdG9yIj4KICAgIDxoMj5TaW11bGVyIG1vbiBlbXBydW50IGltbW9iaWxpZXI8L2gyPgogICAgPHA+VXRpbGlzZXogbGUgZm9ybXVsYWlyZSBzdWl2YW50IGFmaW4gZCdvYnRlbmlyIHVuZSBlc3RpbWF0aW9uIGRlIHZvcyBtZW5zdWFsaXTDqXMgZXQgZHUgbW9udGFudCB0b3RhbCBkZSBmaW5hbmNlbWVudCBwb3VyIGwnYWNoYXQgZGUgY2UgYmllbi48L3A+CiAgICA8Zm9ybT4KICAgICAgPGRpdiBjbGFzcz0iZmllbGQiPgogICAgICAgIDxsYWJlbD5Nb250YW50IGRlIGwnYWNxdWlzaXRpb248L2xhYmVsPgogICAgICAgIDxkaXYgY2xhc3M9InN1ZmZpeCI+CiAgICAgICAgICA8aW5wdXQgdHlwZT0idGV4dCIgbmFtZT0ibG9hbkJhc2VQcmljZSIgaWQ9ImxvYW5CYXNlUHJpY2UiIHZhbHVlPSI1NzAwMDAiIHJlYWRvbmx5PSJyZWFkb25seSIgLz4KICAgICAgICAgIDxzcGFuPuKCrDwvc3Bhbj4KICAgICAgICA8L2Rpdj4KICAgICAgPC9kaXY+CiAgICAgIDxkaXYgY2xhc3M9ImZpZWxkIj4KICAgICAgICA8bGFiZWw+QXBwb3J0PC9sYWJlbD4KICAgICAgICA8ZGl2IGNsYXNzPSJzdWZmaXgiPgogICAgICAgICAgPGlucHV0IHR5cGU9InRleHQiIG5hbWU9ImxvYW5Db250cmlidXRpb24iIGlkPSJsb2FuQ29udHJpYnV0aW9uIiB2YWx1ZT0iMCIgLz4KICAgICAgICAgIDxzcGFuPuKCrDwvc3Bhbj4KICAgICAgICA8L2Rpdj4KICAgICAgPC9kaXY+CiAgICAgIDxkaXYgY2xhc3M9ImZpZWxkIj4KICAgICAgICA8bGFiZWw+RHVyw6llIGR1IHByw6p0PC9sYWJlbD4KICAgICAgICA8c2VsZWN0IG5hbWU9ImxvYW5EdXJhdGlvbiIgaWQ9ImxvYW5EdXJhdGlvbiI+CiAgICAgICAgICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPSI1Ij41IGFuczwvb3B0aW9uPgogICAgICAgICAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT0iMTAiPjEwIGFuczwvb3B0aW9uPgogICAgICAgICAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT0iMTUiPjE1IGFuczwvb3B0aW9uPgogICAgICAgICAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT0iMjAiPjIwIGFuczwvb3B0aW9uPgogICAgICAgICAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT0iMjUiPjI1IGFuczwvb3B0aW9uPgogICAgICAgICAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT0iMzAiPjMwIGFuczwvb3B0aW9uPgogICAgICAgICAgICAgICAgICA8L3NlbGVjdD4KICAgICAgPC9kaXY+CiAgICAgIDxkaXYgY2xhc3M9ImZpZWxkIj4KICAgICAgICA8bGFiZWw+VGF1eCBkJ2VtcHJ1bnQ8L2xhYmVsPgogICAgICAgIDxkaXYgY2xhc3M9InN1ZmZpeCI+CiAgICAgICAgICA8aW5wdXQgdHlwZT0idGV4dCIgbmFtZT0ibG9hblJhdGUiIGlkPSJsb2FuUmF0ZSIgdmFsdWU9IiIgLz4KICAgICAgICAgIDxzcGFuPiU8L3NwYW4+CiAgICAgICAgPC9kaXY+CiAgICAgIDwvZGl2PgogICAgICA8ZGl2IGNsYXNzPSJmaWVsZCI+CiAgICAgICAgPGlucHV0IGNsYXNzPSJidXR0b24iIHR5cGU9ImJ1dHRvbiIgdmFsdWU9IlNpbXVsZXIiIC8+CiAgICAgIDwvZGl2PgogICAgPC9mb3JtPgoKICAgIDxkaXYgaWQ9ImxvYW5SZXN1bHQiPgogICAgICA8dWw+CiAgICAgICAgPGxpIGNsYXNzPSJtb250aCI+RXN0aW1hdGlvbiBkZSB2b3MgbWVuc3VhbGl0w6lzIDogPHNwYW4+PC9zcGFuPjwvbGk+CiAgICAgICAgPGxpIGNsYXNzPSJ0b3RhbCI+TW9udGFudCB0b3RhbCBlbXBydW50w6kgOiA8c3Bhbj48L3NwYW4+PC9saT4KICAgICAgICA8bGkgY2xhc3M9ImNvc3QiPkNvw7t0IGR1IGNyw6lkaXQgOiA8c3Bhbj48L3NwYW4+PC9saT4KICAgICAgPC91bD4KICAgIDwvZGl2PgogIDwvZGl2PgoKCjxzdHlsZSB0eXBlPSJ0ZXh0L2NzcyI+CiAgLmxvYW5DYWxjdWxhdG9yIC5maWVsZCB7IG1hcmdpbi1ib3R0b206IDEwcHg7IH0KICAubG9hbkNhbGN1bGF0b3IgLmZpZWxkIGxhYmVsIHsgZGlzcGxheTogYmxvY2s7IG1hcmdpbi1ib3R0b206IDVweDsgfQogIC5sb2FuQ2FsY3VsYXRvciAuZmllbGQgLnN1ZmZpeCB7IHBvc2l0aW9uOiByZWxhdGl2ZTsgfQogIC5sb2FuQ2FsY3VsYXRvciAuZmllbGQgLnN1ZmZpeCBpbnB1dCwKICAubG9hbkNhbGN1bGF0b3IgLmZpZWxkIC5zdWZmaXggc2VsZWN0IHsKICAgIHBhZGRpbmctcmlnaHQ6IDQwcHg7CiAgfQogIC5sb2FuQ2FsY3VsYXRvciAuZmllbGQgLnN1ZmZpeCBzcGFuIHsKICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTsgdG9wOiA3cHg7IHJpZ2h0OiAwOyB3aWR0aDogNDBweDsgdGV4dC1hbGlnbjogY2VudGVyOwogIH0KCiAgI2xvYW5SZXN1bHQgeyBkaXNwbGF5OiBub25lOyBtYXJnaW4tdG9wOiAyMHB4OyB9CiAgI2xvYW5SZXN1bHQgc3BhbiB7IGZsb2F0OiByaWdodDsgZm9udC13ZWlnaHQ6IGJvbGQ7IH0KCiAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNjQwcHgpIHsKICAgICNsb2FuUmVzdWx0IGxpIHsgbWFyZ2luLWJvdHRvbTogNXB4OyB9CiAgICAjbG9hblJlc3VsdCBzcGFuIHsgZmxvYXQ6IG5vbmU7IGRpc3BsYXk6IGJsb2NrOyB9CiAgfQoKPC9zdHlsZT4KPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPgoKICB2YXIgY3VycmVuY3kgPSAn4oKsJzsKICAKICAgIHZhciByYXRlcyA9IHsKICAgIDc6IDEsCiAgICAxMDogMS4xMCwKICAgIDE1OiAxLjQwLAogICAgMjA6IDEuNjAsCiAgICAyNTogMS45MCwKICAgIDMwOiAyLjcKICB9OwogIAoKICAkKGZ1bmN0aW9uKCkgewoJICBzZXRMb2FuUmF0ZSgpOwoKICAgICQoJyNsb2FuRHVyYXRpb24nKS5jaGFuZ2UoZnVuY3Rpb24oKSB7CiAgICAgIHNldExvYW5SYXRlKCk7CiAgICB9KTsKCiAgICAkKCdpbnB1dFt0eXBlPSJidXR0b24iXScpLmNsaWNrKGZ1bmN0aW9uKCkgewogICAgICBzaW11bGF0ZUxvYW4oKTsKICAgIH0pOwogIH0pOwoKICBmdW5jdGlvbiBzZXRMb2FuUmF0ZSgpIHsKICAgIHZhciByYXRlID0gcmF0ZXNbJCgnI2xvYW5EdXJhdGlvbicpLnZhbCgpXTsKICAgICQoJyNsb2FuUmF0ZScpLnZhbChyYXRlKTsKICAgICAgfQoKICBmdW5jdGlvbiBzaW11bGF0ZUxvYW4ocmV0dXJuVmFsdWUpCiAgewogICAgdmFyIHJldHVyblZhbHVlID0gdHlwZW9mIHJldHVyblZhbHVlICE9ICJ1bmRlZmluZWQiID8gcmV0dXJuVmFsdWUgOiBmYWxzZTsKICAgIHZhciBhbW91bnQgPSBwYXJzZUludCgkKCcjbG9hbkJhc2VQcmljZScpLnZhbCgpLCAxMCkgLSBwYXJzZUludCgkKCcjbG9hbkNvbnRyaWJ1dGlvbicpLnZhbCgpLCAxMCk7CiAgICB2YXIgZHVyYXRpb24gPSBwYXJzZUludCgkKCcjbG9hbkR1cmF0aW9uJykudmFsKCksIDEwKSAqIDEyOwogICAgdmFyIHJhdGUgPSBwYXJzZUZsb2F0KCQoJyNsb2FuUmF0ZScpLnZhbCgpLnJlcGxhY2UoIiwiLCAiLiIpKSAvIDEwMDsKICAgIHZhciBwcmljZUJ5TW9udGggPSBwYXJzZUZsb2F0KE51bWJlcigoYW1vdW50ICogcmF0ZSAvIDEyKSAvICgxIC0gTWF0aC5wb3coMSArIHJhdGUgLyAxMiwgLWR1cmF0aW9uKSkpKTsKCiAgICBpZiAocmV0dXJuVmFsdWUpCiAgICB7CiAgICAgIHJldHVybiBwcmljZUJ5TW9udGg7CiAgICB9CiAgICBlbHNlCiAgICB7CiAgICAgICQoJyNsb2FuUmVzdWx0IC5tb250aCBzcGFuJykuaHRtbChwcmljZUJ5TW9udGgudG9GaXhlZCgyKS50b0xvY2FsZVN0cmluZygpICsgJyAnICsgY3VycmVuY3kpOwoKICAgICAgaWYgKGFtb3VudCAmJiBwcmljZUJ5TW9udGggIT0gIk5hTiIpCiAgICAgICAgJCgnI2xvYW5SZXN1bHQnKS5zaG93KCk7CiAgICAgIGVsc2UKICAgICAgICAkKCcjbG9hblJlc3VsdCcpLmhpZGUoKTsKCiAgICAgIGNhbGN1bGVfbW9udGFudCgpOwogICAgfQogIH0KCiAgZnVuY3Rpb24gY2FsY3VsZV9tb250YW50KHJldHVyblZhbHVlKQogIHsKICAgIHZhciBhbW91bnQgPSBwYXJzZUludCgkKCcjbG9hbkJhc2VQcmljZScpLnZhbCgpLCAxMCkgLSBwYXJzZUludCgkKCcjbG9hbkNvbnRyaWJ1dGlvbicpLnZhbCgpLCAxMCk7CiAgICB2YXIgZHVyYXRpb24gPSBwYXJzZUludCgkKCcjbG9hbkR1cmF0aW9uJykudmFsKCksIDEwKSAqIDEyOwogICAgdmFyIHByaWNlQnlNb250aCA9IHNpbXVsYXRlTG9hbih0cnVlKTsKICAgIHZhciB0b3RhbFByaWNlID0gcGFyc2VGbG9hdChwcmljZUJ5TW9udGggKiBkdXJhdGlvbikudG9GaXhlZCgyKTsKICAgIHZhciBkaWZmID0gcGFyc2VGbG9hdCh0b3RhbFByaWNlIC0gYW1vdW50KS50b0ZpeGVkKDIpOwoKICAgICQoJyNsb2FuUmVzdWx0IC50b3RhbCBzcGFuJykuaHRtbCh0b3RhbFByaWNlLnRvTG9jYWxlU3RyaW5nKCkgKyAnICcgKyBjdXJyZW5jeSk7CiAgICAkKCcjbG9hblJlc3VsdCAuY29zdCBzcGFuJykuaHRtbChkaWZmLnRvTG9jYWxlU3RyaW5nKCkgKyAnICcgKyBjdXJyZW5jeSk7CiAgfQoKPC9zY3JpcHQ+CiAgICAgICAgICA8L2FzaWRlPgogIDwvZGl2PgoKICAgICAgPGFzaWRlIGNsYXNzPSJtYXAgIiBpZD0ic2hvd01hcCI+CiAgICAgICAgICAgICAgPGRpdiBpZD0ibWFwIiBzdHlsZT0id2lkdGg6IDEwMCU7IGhlaWdodDogNDAwcHg7IiBjbGFzcz0ib3NfbWFwIj48L2Rpdj4KPHNjcmlwdD4KdmFyIG1hcDsKJCgnaGVhZCcpLmFwcGVuZCgkKCc8bGluayByZWw9InN0eWxlc2hlZXQiIHR5cGU9InRleHQvY3NzIiAvPicpLmF0dHIoJ2hyZWYnLCAnL2pzL2NvbW1vbi9sZWFmbGV0L2xlYWZsZXQuY3NzJykpOwokKCdoZWFkJykuYXBwZW5kKCQoJzxsaW5rIHJlbD0ic3R5bGVzaGVldCIgdHlwZT0idGV4dC9jc3MiIC8+JykuYXR0cignaHJlZicsICcvanMvY29tbW9uL0xlYWZsZXQuR2VzdHVyZUhhbmRsaW5nL2xlYWZsZXQtZ2VzdHVyZS1oYW5kbGluZy5taW4uY3NzJykpOwp2YXIgbWFya2VyX21hcF8xO3ZhciBtYXJrZXJfbWFwXzI7dmFyIG1hcmtlcnNfbWFwID0gW107dmFyIGNpcmNsZXNfbWFwID0gW107ZnVuY3Rpb24gbGF1bmNoX21hcF9tYXAoKSB7Cm1hcCA9IEwubWFwKCdtYXAnLCB7IHNjcm9sbFdoZWVsWm9vbTogZmFsc2UsIGdlc3R1cmVIYW5kbGluZzogTC5Ccm93c2VyLm1vYmlsZSB9KTsKTC50aWxlTGF5ZXIoJ2h0dHBzOi8vY2FydG9kYi1iYXNlbWFwcy17c30uZ2xvYmFsLnNzbC5mYXN0bHkubmV0L3Jhc3RlcnRpbGVzL3ZveWFnZXIve3p9L3t4fS97eX17cn0ucG5nJywgewphdHRyaWJ1dGlvbjogJyZjb3B5OyA8YSBocmVmPSJodHRwOi8vd3d3Lm9wZW5zdHJlZXRtYXAub3JnL2NvcHlyaWdodCIgdGFyZ2V0PSJfYmxhbmsiPk9wZW5TdHJlZXRNYXA8L2E+IHwgPGEgaHJlZj0iaHR0cDovL2NhcnRvZGIuY29tL2F0dHJpYnV0aW9ucyIgdGFyZ2V0PSJfYmxhbmsiPkNhcnRvREI8L2E+JwosIG1heFpvb206IDE5Cn0pLmFkZFRvKG1hcCk7CnZhciBpY29uX2FnZW5jeSA9IEwuaWNvbih7IGljb25Vcmw6ICcvanMvY29tbW9uL2xlYWZsZXQvaW1hZ2VzL2ljb25fYWdlbmN5LnN2ZycsIGljb25TaXplOiBbMzAsIDM4XSwgaWNvbkFuY2hvcjogWzE1LCAzOF0sIHBvcHVwQW5jaG9yOiBbMCwgLTM4XSB9KTsKdmFyIGljb25fdXNlciA9IEwuaWNvbih7IGljb25Vcmw6ICcvanMvY29tbW9uL2xlYWZsZXQvaW1hZ2VzL2ljb25fdXNlci5zdmcnLCBpY29uU2l6ZTogWzMwLCAzOF0sIGljb25BbmNob3I6IFsxNSwgMzhdLCBwb3B1cEFuY2hvcjogWzAsIC0zOF0gfSk7CnZhciBpY29uX3R5cGVfMSA9IEwuaWNvbih7IGljb25Vcmw6ICcvanMvY29tbW9uL2xlYWZsZXQvaW1hZ2VzL2ljb25fdHlwZV8xLnN2ZycsIGljb25TaXplOiBbMzAsIDM4XSwgaWNvbkFuY2hvcjogWzE1LCAzOF0sIHBvcHVwQW5jaG9yOiBbMCwgLTM4XSB9KTsKdmFyIGljb25fdHlwZV8yID0gTC5pY29uKHsgaWNvblVybDogJy9qcy9jb21tb24vbGVhZmxldC9pbWFnZXMvaWNvbl90eXBlXzIuc3ZnJywgaWNvblNpemU6IFszMCwgMzhdLCBpY29uQW5jaG9yOiBbMTUsIDM4XSwgcG9wdXBBbmNob3I6IFswLCAtMzhdIH0pOwp2YXIgaWNvbl90eXBlXzMgPSBMLmljb24oeyBpY29uVXJsOiAnL2pzL2NvbW1vbi9sZWFmbGV0L2ltYWdlcy9pY29uX3R5cGVfMy5zdmcnLCBpY29uU2l6ZTogWzMwLCAzOF0sIGljb25BbmNob3I6IFsxNSwgMzhdLCBwb3B1cEFuY2hvcjogWzAsIC0zOF0gfSk7CnZhciBpY29uX3R5cGVfNCA9IEwuaWNvbih7IGljb25Vcmw6ICcvanMvY29tbW9uL2xlYWZsZXQvaW1hZ2VzL2ljb25fdHlwZV80LnN2ZycsIGljb25TaXplOiBbMzAsIDM4XSwgaWNvbkFuY2hvcjogWzE1LCAzOF0sIHBvcHVwQW5jaG9yOiBbMCwgLTM4XSB9KTsKdmFyIGljb25fdHlwZV81ID0gTC5pY29uKHsgaWNvblVybDogJy9qcy9jb21tb24vbGVhZmxldC9pbWFnZXMvaWNvbl90eXBlXzUuc3ZnJywgaWNvblNpemU6IFszMCwgMzhdLCBpY29uQW5jaG9yOiBbMTUsIDM4XSwgcG9wdXBBbmNob3I6IFswLCAtMzhdIH0pOwp2YXIgaWNvbl90eXBlXzYgPSBMLmljb24oeyBpY29uVXJsOiAnL2pzL2NvbW1vbi9sZWFmbGV0L2ltYWdlcy9pY29uX3R5cGVfNi5zdmcnLCBpY29uU2l6ZTogWzMwLCAzOF0sIGljb25BbmNob3I6IFsxNSwgMzhdLCBwb3B1cEFuY2hvcjogWzAsIC0zOF0gfSk7CnZhciBpY29uX3R5cGVfNyA9IEwuaWNvbih7IGljb25Vcmw6ICcvanMvY29tbW9uL2xlYWZsZXQvaW1hZ2VzL2ljb25fdHlwZV83LnN2ZycsIGljb25TaXplOiBbMzAsIDM4XSwgaWNvbkFuY2hvcjogWzE1LCAzOF0sIHBvcHVwQW5jaG9yOiBbMCwgLTM4XSB9KTsKdmFyIGljb25fdHlwZV84ID0gTC5pY29uKHsgaWNvblVybDogJy9qcy9jb21tb24vbGVhZmxldC9pbWFnZXMvaWNvbl90eXBlXzguc3ZnJywgaWNvblNpemU6IFszMCwgMzhdLCBpY29uQW5jaG9yOiBbMTUsIDM4XSwgcG9wdXBBbmNob3I6IFswLCAtMzhdIH0pOwp2YXIgaWNvbl90eXBlXzkgPSBMLmljb24oeyBpY29uVXJsOiAnL2pzL2NvbW1vbi9sZWFmbGV0L2ltYWdlcy9pY29uX3R5cGVfOS5zdmcnLCBpY29uU2l6ZTogWzMwLCAzOF0sIGljb25BbmNob3I6IFsxNSwgMzhdLCBwb3B1cEFuY2hvcjogWzAsIC0zOF0gfSk7CnZhciBpY29uX3R5cGVfMTAgPSBMLmljb24oeyBpY29uVXJsOiAnL2pzL2NvbW1vbi9sZWFmbGV0L2ltYWdlcy9pY29uX3R5cGVfMTAuc3ZnJywgaWNvblNpemU6IFszMCwgMzhdLCBpY29uQW5jaG9yOiBbMTUsIDM4XSwgcG9wdXBBbmNob3I6IFswLCAtMzhdIH0pOwp2YXIgaWNvbl9lbXB0eSA9IEwuaWNvbih7IGljb25Vcmw6ICcvanMvY29tbW9uL2xlYWZsZXQvaW1hZ2VzL2ljb25fZW1wdHkuc3ZnJywgaWNvblNpemU6IFsxLCAxXSwgaWNvbkFuY2hvcjogWzEsIDFdIH0pOwptYXJrZXJfbWFwXzEgPSBMLm1hcmtlcihbNDguODY0NDAwMDAwLCAyLjM3MTc2MDAwMF0se2ljb246aWNvbl9hZ2VuY3l9KTsKbWFya2VyX21hcF8xLmFkZFRvKG1hcCk7Cm1hcmtlcl9tYXBfMS5iaW5kUG9wdXAoIjxzdHJvbmc+QWdlbmNlIGRlcyBFbmZhbnRzIFJvdWdlcyBPYmVya2FtcGY8L3N0cm9uZz48YnI+MzggcnVlIE9iZXJrYW1wZjxicj43NTAxMSBQYXJpcyAxMcOobWU8YnI+KzMzICgwKTEgODUgNzQgNzMgNzMiKTsKbWFya2Vyc19tYXAucHVzaChtYXJrZXJfbWFwXzEpOwptYXJrZXJfbWFwXzIgPSBMLm1hcmtlcihbNDguODU3OTkwMDAwLCAyLjM4MTE1MDAwMF0se2ljb246aWNvbl90eXBlXzF9KTsKbWFya2VyX21hcF8yLmFkZFRvKG1hcCk7Cm1hcmtlcnNfbWFwLnB1c2gobWFya2VyX21hcF8yKTsKaWYobWFya2Vyc19tYXAubGVuZ3RoPjApIHsKICB2YXIgZ3JvdXAgPSBMLmZlYXR1cmVHcm91cChtYXJrZXJzX21hcCk7CiAgbWFwLmZpdEJvdW5kcyhncm91cC5nZXRCb3VuZHMoKSwge21heFpvb206IDEzfSk7Cn0KaWYoY2lyY2xlc19tYXAubGVuZ3RoPjApIHsKICBlbCA9IGNpcmNsZXNfbWFwLnNoaWZ0KCk7ICBtYXAuZml0Qm91bmRzKFtlbC5nZXRMYXRMbmcoKV0sIHttYXhab29tOiAxM30pOwp9Cn0KJC5nZXRTY3JpcHQoJy9qcy9jb21tb24vbGVhZmxldC9sZWFmbGV0LmpzJywgZnVuY3Rpb24gKCkgewogICQuZ2V0U2NyaXB0KCcvanMvY29tbW9uL0xlYWZsZXQuR2VzdHVyZUhhbmRsaW5nL2xlYWZsZXQtZ2VzdHVyZS1oYW5kbGluZy5taW4uanMnKTsKCQlsYXVuY2hfbWFwX21hcCgpOwoJCWlmICh0eXBlb2YgY2FsbGJhY2tfbWFwID09PSAiZnVuY3Rpb24iKSB7IGNhbGxiYWNrX21hcChtYXApOyB9Cn0pOwo8L3NjcmlwdD4KICAgICAgICAgIDwvYXNpZGU+CiAgCiAgICAgIDxhc2lkZSBjbGFzcz0iY29udGFjdExpbmUgY29udGFjdFVzZXIiIGlkPSJjb250YWN0TGluZSI+CiAgICAgIDxkaXYgY2xhc3M9ImxheW91dExhcmdlIj4KICAgICAgICA8aDI+Q29udGFjdGV6IHVuIGNvbnNlaWxsZXI8L2gyPgogICAgICAgIDxkaXY+CiAgICAgICAgICA8ZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJhZ2VuY3kiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwaWN0dXJlIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBhbHQ9IkFnZW5jZSBkZXMgRW5mYW50cyBSb3VnZXMgT2JlcmthbXBmIiBzcmM9Ii91cGxvYWRzL3dlYnNpdGUvMTc2OC8wNDhlMDVlNjZjMGE0ODFlNGM0MWJiYzA3YjRlM2JjZDg2NjFkNjZiLmpwZyIgLz4gICAgICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICAgICAgPHAgY2xhc3M9ImFkZHJlc3Mgc21hbGxJY29uIj4KICAgICAgICAgICAgICAgICAgMzggcnVlIE9iZXJrYW1wZjxiciAvPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA3NTAxMSBQYXJpcyAxMcOobWU8YnI+RnJhbmNlICAgICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgICAgIDxwPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icGhvbmUgc21hbGxJY29uIj48YSBocmVmPSJ0ZWw6MDAzMzAxODU3NDczNzMiPiszMyAoMCkxIDg1IDc0IDczIDczPC9hPjwvc3Bhbj48YnIgLz4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ1c2VyIj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InVzZXJCdWJibGUgcGljdHVyZSByZXNpemVQaWN0dXJlIiBkYXRhLXByZXNlcnZlcG9ydHJhaXQ9ImZhbHNlIiBkYXRhLW92ZXJmbG93PSJ0cnVlIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW1nIHNyYz0iaHR0cHM6Ly9hcGkuYXBpbW8ucHJvL3VwbG9hZHMvdXNlci8zODM0MC9waWN0dXJlLmpwZyIvPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICAgICAgPHAgY2xhc3M9InNtYWxsSWNvbiB1c2VyTmFtZSI+CiAgICAgICAgICAgICAgICAgIDxzdHJvbmc+QXVkZSBQUkVUUkU8L3N0cm9uZz48YnIgLz4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBBZ2VudCBpbW1vYmlsaWVyICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICA8L3A+CiAgICAgICAgICAgICAgICA8cD4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InBob25lIHNtYWxsSWNvbiI+PGEgaHJlZj0idGVsOjAwMzMwNjM1NTkyNTkxIj4rMzMgKDApNiAzNSA1OSAyNSA5MTwvYT48L3NwYW4+PGJyIC8+ICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9Im1haWwgc21hbGxJY29uIj48YSBocmVmPSJtYWlsdG86YXVkZUBhZ2VuY2VkZXNlbmZhbnRzcm91Z2VzLmNvbSI+YXVkZUBhZ2VuY2VkZXNlbmZhbnRzcm91Z2VzLmNvbTwvYT48L3NwYW4+ICAgICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgPGRpdj4KICAgICAgICAgICAgCiAgPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPgogICAgdmFyIGNhcHRjaGFzID0gW107CiAgICB2YXIgc3VibWl0dGVkRm9ybSA9IG51bGw7CiAgICAKICAgIGZ1bmN0aW9uIGhhbmRsZUZvcm0odG9rZW4pIHsKICAgICAgdmFyICR0aGlzID0gJCgnIycgKyBzdWJtaXR0ZWRGb3JtKTsKICAgICAgJC5hamF4KHsKICAgICAgICBtZXRob2Q6ICdQT1NUJywKICAgICAgICB1cmw6ICR0aGlzLmF0dHIoJ2FjdGlvbicpLAogICAgICAgIGRhdGE6ICR0aGlzLnNlcmlhbGl6ZSgpLAogICAgICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uKGRhdGEpIHsKICAgICAgICAgIGlmKHR5cGVvZiBzaG93Rm9ybUNhbGxiYWNrID09PSAnZnVuY3Rpb24nKSBzaG93Rm9ybUNhbGxiYWNrKCk7CiAgICAgICAgICAkdGhpcy5yZXBsYWNlV2l0aChkYXRhKTsKICAgICAgICB9LAogICAgICAgIGVycm9yOiBmdW5jdGlvbih4aHIpIHsKICAgICAgICAgICR0aGlzLnJlcGxhY2VXaXRoKHhoci5yZXBvbnNlVGV4dCk7CiAgICAgICAgfQogICAgICB9KTsKICAgIH0KICAgIAogICAgZnVuY3Rpb24gbG9hZENhcHRjaGEoZm9ybVNlbGVjdG9yKSB7CiAgICAgIGlmKCFmb3JtU2VsZWN0b3IpIGZvcm1TZWxlY3RvciA9ICcuY3VzdG9tRm9ybSc7CiAgICAgICQoZm9ybVNlbGVjdG9yICsgJyBpbnB1dFt0eXBlPSJzdWJtaXQiXScpLm9uKCdjbGljaycsIGZ1bmN0aW9uKGV2ZW50KSB7IGV2ZW50LnByZXZlbnREZWZhdWx0KCk7IHN1Ym1pdHRlZEZvcm0gPSAkKHRoaXMpLmNsb3Nlc3QoJ2Zvcm0nKS5hdHRyKCdpZCcpOyBncmVjYXB0Y2hhLmV4ZWN1dGUoY2FwdGNoYXNbJCh0aGlzKS5jbG9zZXN0KCdmb3JtJykuYXR0cignaWQnKV0pOyB9KTsKICAgICAgJChmb3JtU2VsZWN0b3IgKyAnIC5nLXJlY2FwdGNoYScpLmVhY2goZnVuY3Rpb24oKSB7CiAgICAgICAgaWYoY2FwdGNoYXMuaW5kZXhPZigkKHRoaXMpLmNsb3Nlc3QoJ2Zvcm0nKS5hdHRyKCdpZCcpKSA9PSAtMSkgewogICAgICAgICAgdmFyICR0aGlzID0gJCh0aGlzKTsKICAgICAgICAgIHZhciBjYXB0Y2hhSUQgPSBncmVjYXB0Y2hhLnJlbmRlcigkKHRoaXMpLmF0dHIoJ2lkJyksIHsgJ3NpdGVrZXknIDogJHRoaXMuZGF0YSgnc2l0ZWtleScpLnRvU3RyaW5nKCksICdzaXplJyA6ICR0aGlzLmRhdGEoJ3NpemUnKS50b1N0cmluZygpLCAnY2FsbGJhY2snIDogJHRoaXMuZGF0YSgnY2FsbGJhY2snKS50b1N0cmluZygpIH0pOwogICAgICAgICAgY2FwdGNoYXNbJCh0aGlzKS5jbG9zZXN0KCdmb3JtJykuYXR0cignaWQnKV0gPSBjYXB0Y2hhSUQ7CiAgICAgICAgfQogICAgICB9KTsKICAgIH0KICA8L3NjcmlwdD4KPGZvcm0gaWQ9ImNvbnRhY3QtZm9ybS0xMTM2MjU1NzE3IiBjbGFzcz0iY3VzdG9tRm9ybSBtb3JlRm9ybSAiIG1ldGhvZD0icG9zdCIgYWN0aW9uPSIvY29udGFjdEZvcm0vdjMiPiAgICAKICA8ZGl2IGNsYXNzPSJjb250YWN0LXVzLWNvbnRlbnQiPgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImZpZWxkIGFnZW5jeUlkIGRyb3Bkb3duIj4KICAgICAgICA8aW5wdXQgdHlwZT0iaGlkZGVuIiBuYW1lPSJjdXN0b21lclthZ2VuY3lfaWRdIiB2YWx1ZT0iMTEyMzIiIGlkPSJjdXN0b21lcl9hZ2VuY3lfaWQiIC8+ICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImZpZWxkIGxhc3RuYW1lIj4KICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJ0ZXh0IiBuYW1lPSJjdXN0b21lcltsYXN0bmFtZV0iIHBsYWNlaG9sZGVyPSJOb20iIGlkPSJjdXN0b21lcl9sYXN0bmFtZSIgLz4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJmaWVsZCBlbWFpbCI+CiAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0idGV4dCIgbmFtZT0iY3VzdG9tZXJbZW1haWxdIiBwbGFjZWhvbGRlcj0iZS1tYWlsIiBpZD0iY3VzdG9tZXJfZW1haWwiIC8+ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZmllbGQgdGVsIj4KICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJ0ZXh0IiBuYW1lPSJjdXN0b21lclt0ZWxdIiBwbGFjZWhvbGRlcj0iVMOpbMOpcGhvbmUiIGlkPSJjdXN0b21lcl90ZWwiIC8+ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZmllbGQgbWVzc2FnZSI+CiAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGV4dGFyZWEgcm93cz0iNCIgY29scz0iMzAiIG5hbWU9ImN1c3RvbWVyW21lc3NhZ2VdIiBwbGFjZWhvbGRlcj0iTWVzc2FnZSIgaWQ9ImN1c3RvbWVyX21lc3NhZ2UiPjwvdGV4dGFyZWE+ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAKICAgIDxkaXYgY2xhc3M9ImNvbnRhY3R1cy1ncnBkIj4KICAgICAgICAgICAgPGlucHV0IHR5cGU9ImNoZWNrYm94IiBuYW1lPSJjdXN0b21lcltncnBkX2FncmVlbWVudF0iIGlkPSJjdXN0b21lcl9ncnBkX2FncmVlbWVudCIgLz4gICAgICA8bGFiZWwgZm9yPSJjdXN0b21lcl9ncnBkX2FncmVlbWVudCI+SuKAmWFpIGx1IGV0IGonYWNjZXB0ZSBsYSA8YSB0YXJnZXQ9Il9ibGFuayIgaHJlZj0iL2ZyL2Rvbm5lZXMtcGVyc29ubmVsbGVzIj5wb2xpdGlxdWUgZGUgY29uZmlkZW50aWFsaXTDqTwvYT4gZHUgc2l0ZTwvbGFiZWw+CiAgICA8L2Rpdj4KICA8L2Rpdj4KICAKICA8aW5wdXQgdHlwZT0iaGlkZGVuIiBuYW1lPSJjdXN0b21lcltpZF0iIGlkPSJjdXN0b21lcl9pZCIgLz48aW5wdXQgdHlwZT0iaGlkZGVuIiBuYW1lPSJjdXN0b21lclthY3RpdmVfaXNdIiB2YWx1ZT0iMSIgaWQ9ImN1c3RvbWVyX2FjdGl2ZV9pcyIgLz48aW5wdXQgdHlwZT0iaGlkZGVuIiBuYW1lPSJjdXN0b21lclt3ZWJzaXRlX2lkXSIgdmFsdWU9IjE3NjgiIGlkPSJjdXN0b21lcl93ZWJzaXRlX2lkIiAvPjxpbnB1dCB0eXBlPSJoaWRkZW4iIG5hbWU9ImN1c3RvbWVyW2FnZW5jeV9pZF0iIHZhbHVlPSIxMTIzMiIgaWQ9ImN1c3RvbWVyX2FnZW5jeV9pZCIgLz48aW5wdXQgdHlwZT0iaGlkZGVuIiBuYW1lPSJjdXN0b21lclt1c2VyX2lkXSIgaWQ9ImN1c3RvbWVyX3VzZXJfaWQiIC8+PGlucHV0IHR5cGU9ImhpZGRlbiIgbmFtZT0iY3VzdG9tZXJbZXN0YXRlX2lkXSIgdmFsdWU9IjM2NzkxNDgiIGlkPSJjdXN0b21lcl9lc3RhdGVfaWQiIC8+PGlucHV0IHR5cGU9ImhpZGRlbiIgbmFtZT0iY3VzdG9tZXJbcmVxdWVzdF9pZF0iIHZhbHVlPSIyIiBpZD0iY3VzdG9tZXJfcmVxdWVzdF9pZCIgLz48aW5wdXQgdHlwZT0iaGlkZGVuIiBuYW1lPSJjdXN0b21lcltsYW5ndWFnZV0iIHZhbHVlPSJmciIgaWQ9ImN1c3RvbWVyX2xhbmd1YWdlIiAvPjxpbnB1dCB0eXBlPSJoaWRkZW4iIG5hbWU9ImN1c3RvbWVyW19jc3JmX3Rva2VuXSIgdmFsdWU9IjI0MDYyOGZjMjE3M2MwMWQ1MWVlZjhlMThiNWQ5YTc0IiBpZD0iY3VzdG9tZXJfX2NzcmZfdG9rZW4iIC8+ICAKICAgICAgICA8aW5wdXQgdHlwZT0iaGlkZGVuIiBuYW1lPSJ0eXBlIiB2YWx1ZT0ibW9yZSI+CiAgICAgICAgCiAgICAKICA8ZGl2IGlkPSJjYXB0Y2hhLTExMzYyNTU3MTciIGNsYXNzPSJnLXJlY2FwdGNoYSIgZGF0YS1zaXRla2V5PSI2TGVEakgwVUFBQUFBR0lkRER3am10V3hiZ0dvT09PN0UwSlB0X3NtIiBkYXRhLWNhbGxiYWNrPSJoYW5kbGVGb3JtIiBkYXRhLXNpemU9ImludmlzaWJsZSI+PC9kaXY+CiAgCiAgPGlucHV0IHR5cGU9InN1Ym1pdCIgdmFsdWU9IkVudm95ZXIiIGNsYXNzPSJjb250YWN0dXMtc2VuZCIvPgogIDwvZm9ybT4gICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9kaXY+CiAgICAgIDwvZGl2PgogICAgPC9hc2lkZT4KICA8L3NlY3Rpb24+Cgo8c2NyaXB0PiFmdW5jdGlvbihkLHMsaWQpe3ZhciBqcyxmanM9ZC5nZXRFbGVtZW50c0J5VGFnTmFtZShzKVswXTtpZighZC5nZXRFbGVtZW50QnlJZChpZCkpe2pzPWQuY3JlYXRlRWxlbWVudChzKTtqcy5pZD1pZDtqcy5zcmM9Ii8vcGxhdGZvcm0udHdpdHRlci5jb20vd2lkZ2V0cy5qcyI7ZmpzLnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKGpzLGZqcyk7fX0oZG9jdW1lbnQsInNjcmlwdCIsInR3aXR0ZXItd2pzIik7PC9zY3JpcHQ+CiAgICA8L2Rpdj4KCiAgICA8Zm9vdGVyPgogICAgICA8ZGl2IGNsYXNzPSJsYXlvdXRMYXJnZSBjbGVhcmZpeCI+CiAgICAgICAgCiAgICAgICAgCiAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Im5ldHdvcmsiPgogICAgICAgICAgICA8aDM+Tm90cmUgcsOpc2VhdTwvaDM+CiAgICAgICAgICAgIDx1bCBjbGFzcz0ic29jaWFsTGlua3MiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGkgY2xhc3M9Imljb24gc29jaWFsIj48YSBjbGFzcz0iZmFjZWJvb2siIHRhcmdldD0iX2JsYW5rIiBocmVmPSJodHRwczovL3d3dy5mYWNlYm9vay5jb20vQWdlbmNlLWRlcy1FbmZhbnRzLVJvdWdlcy0yNjY3NDU5NzAxMTQ0MTAiPmZhY2Vib29rPC9hPjwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpIGNsYXNzPSJpY29uIHNvY2lhbCI+PGEgY2xhc3M9ImVtYWlsIiBocmVmPSIvZnIvY29udGFjdGV6LW5vdXMiPkVtYWlsPC9hPjwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgPC91bD4KICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iYWdlbmN5Ij4KICAgICAgICAgICAgICAgICAgICAgIDxoMz5BZ2VuY2UgZGVzIEVuZmFudHMgUm91Z2VzPC9oMz4KICAgICAgICAgICAgPHAgY2xhc3M9ImFkZHJlc3Mgc21hbGxJY29uIj4KICAgICAgICAgICAgICA0NCBydWUgZGUgQnJldGFnbmU8YnI+ICAgICAgICAgICAgICAgICAgICAgICAgICAgIDc1MDAzIFBhcmlzIDPDqG1lPGJyPgogICAgICAgICAgICA8L3A+CiAgICAgICAgICAgIDxwPgogICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwaG9uZSBzbWFsbEljb24iPjxhIGhyZWY9InRlbDowMDMzMDE1MzAxMDA0MCI+KzMzICgwKTEgNTMgMDEgMDAgNDA8L2E+PC9zcGFuPjxiciAvPiAgICAgICAgICAgICAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgPGRpdiBjbGFzcz0ic2VjdG9ycyI+CiAgICAgICAgICAgICAgICAgICAgICA8aDM+TmF2aWdhdGlvbjwvaDM+CiAgICAgICAgICAgIDx1bD48bGkgY2xhc3M9Imx2MSI+PGEgdGFyZ2V0PSJfc2VsZiIgY2xhc3M9IiIgaHJlZj0iL2ZyLyI+QWNjdWVpbDwvYT48L2xpPjxsaSBjbGFzcz0ibHYxIj48YSB0YXJnZXQ9Il9zZWxmIiBjbGFzcz0iIiBocmVmPSIvZnIvdmVudGUiPlZlbnRlPC9hPjwvbGk+PGxpIGNsYXNzPSJsdjEiPjxhIHRhcmdldD0iX3NlbGYiIGNsYXNzPSIiIGhyZWY9Ii9mci9sb2NhdGlvbiI+TG9jYXRpb248L2E+PC9saT48bGkgY2xhc3M9Imx2MSI+PGEgdGFyZ2V0PSJfc2VsZiIgY2xhc3M9IiIgaHJlZj0iL2ZyL2NvbW1lcmNlcyI+Q29tbWVyY2VzPC9hPjwvbGk+PGxpIGNsYXNzPSJsdjEiPjxhIHRhcmdldD0iX3NlbGYiIGNsYXNzPSIiIGhyZWY9Ii9mci9lc3RpbWF0aW9uIj5Fc3RpbWF0aW9uPC9hPjwvbGk+PGxpIGNsYXNzPSJsdjEiPjxhIHRhcmdldD0iX3NlbGYiIGNsYXNzPSIiIGhyZWY9Ii9mci9ibG9nIj5CbG9nPC9hPjwvbGk+PGxpIGNsYXNzPSJsdjEiPjxhIHRhcmdldD0iX3NlbGYiIGNsYXNzPSIiIGhyZWY9Ii9mci9ub3RyZS1hZ2VuY2UiPk5vdHJlIGFnZW5jZTwvYT48L2xpPjxsaSBjbGFzcz0ibHYxIj48YSB0YXJnZXQ9Il9zZWxmIiBjbGFzcz0iIiBocmVmPSIvZnIvY29udGFjdGV6LW5vdXMiPkNvbnRhY3Rlei1ub3VzPC9hPjwvbGk+PC91bD4gICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgPC9kaXY+CiAgICAgIDxkaXYgY2xhc3M9ImNyZWRpdHMiPgogICAgICAgIDxwIGNsYXNzPSJsYXlvdXRMYXJnZSI+wqkgMjAyMCBBZ2VuY2UgZGVzIEVuZmFudHMgUm91Z2VzIC0gPGEgaHJlZj0iL2ZyL21lbnRpb25zLWxlZ2FsZXMiPk1lbnRpb25zIGzDqWdhbGVzIC8gbm9zIGhvbm9yYWlyZXM8L2E+IC0gPGEgaHJlZj0iL2ZyL2Rvbm5lZXMtcGVyc29ubmVsbGVzIj5Eb25uw6llcyBwZXJzb25uZWxsZXM8L2E+IDxzcGFuIGNsYXNzPSJhcGltbyI+4oCTIERlc2lnbiBieSA8YSB0YXJnZXQ9Il9ibGFuayIgaHJlZj0iaHR0cHM6Ly9hcGltby5uZXQvIj5hcGltb+KEoiBMb2dpY2llbCBpbW1vYmlsaWVyPC9hPiA8L3NwYW4+CiAgICAgICAgICAgICAgICA8L3A+CiAgICAgIDwvZGl2PgogICAgPC9mb290ZXI+CiAgICAKICAgIDxkaXYgY2xhc3M9ImNvb2tpZUNob2ljZSI+CiAgPHA+RW4gY2xpcXVhbnQgc3VyICJKJ2FjY2VwdGUiLCB2b3VzIGF1dG9yaXNleiBsJ3V0aWxpc2F0aW9uIGRlIGNvb2tpZXMgYWZpbiBkZSB2b3VzIGFzc3VyZXIgdW5lIGV4cGVyaWVuY2Ugb3B0aW1hbGUgc3VyIGNlIHNpdGUuPC9wPgogIDxwPjxhIGhyZWY9Ii9mci9tZW50aW9ucy1sZWdhbGVzIj5FbiBzYXZvaXIgcGx1czwvYT4gPGEgY2xhc3M9ImNsb3NlIiBocmVmPSIjIj5KJ2FjY2VwdGU8L2E+PC9wPgo8L2Rpdj4KCjxzdHlsZSB0eXBlPSJ0ZXh0L2NzcyI+CiAgLmNvb2tpZUNob2ljZSB7IHBvc2l0aW9uOiBmaXhlZDsgYm90dG9tOiAwOyBsZWZ0OiAwOyB3aWR0aDogMTAwJTsgcGFkZGluZzogMTBweDsgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLDAsMCwwLjkpOyB6LWluZGV4OiA5OTk7IH0KICAuY29va2llQ2hvaWNlIHAgeyBwYWRkaW5nOiAwOyBtYXJnaW46IDA7IGNvbG9yOiAjRkZGOyB0ZXh0LWFsaWduOiBjZW50ZXI7IG1hcmdpbi1ib3R0b206IDEwcHg7IH0KICAuY29va2llQ2hvaWNlIHA6bGFzdC1vZi10eXBlIHsgbWFyZ2luOiAwOyB9CiAgLmNvb2tpZUNob2ljZSBhIHsgZGlzcGxheTogaW5saW5lLWJsb2NrOyBjb2xvcjogI0FBQTsgbWFyZ2luLWxlZnQ6IDIwcHg7IH0KICAuY29va2llQ2hvaWNlIGE6Zmlyc3QtY2hpbGQgeyBtYXJnaW46IDA7IH0KPC9zdHlsZT4KPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPgogICQoJy5jb29raWVDaG9pY2UgLmNsb3NlJykuY2xpY2soZnVuY3Rpb24oZSkgewogICAgZS5wcmV2ZW50RGVmYXVsdCgpOwogICAgJC5hamF4KHsKICAgICAgdXJsOiAiL2xlZ2FsL2Nvb2tpZWNvbnNlbnQiLAogICAgICB0eXBlOiAiUE9TVCIsCiAgICAgIHN1Y2Nlc3M6ZnVuY3Rpb24oZGF0YSwgdGV4dFN0YXR1cykgewogICAgICAgICQoJy5jb29raWVDaG9pY2UnKS5zbGlkZVVwKCdmYXN0Jyk7CiAgICAgICAgaWYgKHR5cGVvZiBkYXRhTGF5ZXIgIT0gJ3VuZGVmaW5lZCcpCiAgICAgICAgICBkYXRhTGF5ZXIucHVzaCh7J2V2ZW50JyA6ICdjb29raWVfY29uc2VudF9jbGljayd9KQogICAgICB9CiAgICB9KTsKICB9KTsKPC9zY3JpcHQ+CgogICAgCiAgICAKICAgIDxzY3JpcHQ+KGZ1bmN0aW9uKGQsIHMsIGlkKSB7CiAgICAgIHZhciBqcywgZmpzID0gZC5nZXRFbGVtZW50c0J5VGFnTmFtZShzKVswXTsKICAgICAgaWYgKGQuZ2V0RWxlbWVudEJ5SWQoaWQpKSByZXR1cm47CiAgICAgIGpzID0gZC5jcmVhdGVFbGVtZW50KHMpOyBqcy5pZCA9IGlkOwogICAgICBqcy5zcmMgPSAiLy9jb25uZWN0LmZhY2Vib29rLm5ldC9mcl9GUi9hbGwuanMjeGZibWw9MSI7CiAgICAgIGZqcy5wYXJlbnROb2RlLmluc2VydEJlZm9yZShqcywgZmpzKTsKICAgIH0oZG9jdW1lbnQsICdzY3JpcHQnLCAnZmFjZWJvb2stanNzZGsnKSk7PC9zY3JpcHQ+CiAgICA8c2NyaXB0IHR5cGU9ImFwcGxpY2F0aW9uL2phdmFzY3JpcHQiIHNyYz0iL2pzL2NvbW1vbi9qcXVlcnktdWkvanF1ZXJ5LXVpLTEuMTAuMi5jdXN0b20ubWluLmpzIj48L3NjcmlwdD4KICAgIDxzY3JpcHQgdHlwZT0iYXBwbGljYXRpb24vamF2YXNjcmlwdCIgc3JjPSJodHRwczovL2QxdGc5MGJ3anczZXRoLmNsb3VkZnJvbnQubmV0L2pzL21vZGVybml6ci5jdXN0b20uanMiPjwvc2NyaXB0PgogICAgPHNjcmlwdCB0eXBlPSJhcHBsaWNhdGlvbi9qYXZhc2NyaXB0IiBzcmM9Imh0dHBzOi8vZDF0ZzkwYndqdzNldGguY2xvdWRmcm9udC5uZXQvanMvZmFuY3lib3gyL2pxdWVyeS5mYW5jeWJveC5wYWNrLmpzIj48L3NjcmlwdD4KICAgIDxzY3JpcHQgdHlwZT0iYXBwbGljYXRpb24vamF2YXNjcmlwdCIgc3JjPSJodHRwczovL2QxdGc5MGJ3anczZXRoLmNsb3VkZnJvbnQubmV0L2pzL293bC1jYXJvdXNlbDIvb3dsLmNhcm91c2VsLm1pbi5qcyI+PC9zY3JpcHQ+CiAgICA8c2NyaXB0IHR5cGU9ImFwcGxpY2F0aW9uL2phdmFzY3JpcHQiIHNyYz0iaHR0cHM6Ly9kMXRnOTBid2p3M2V0aC5jbG91ZGZyb250Lm5ldC9qcy9tdWx0aXBsZS1zZWxlY3QvbXVsdGlwbGUtc2VsZWN0Lm1pbi5qcyI+PC9zY3JpcHQ+CiAgICA8c2NyaXB0IHR5cGU9ImFwcGxpY2F0aW9uL2phdmFzY3JpcHQiIHNyYz0iaHR0cHM6Ly9kMXRnOTBid2p3M2V0aC5jbG91ZGZyb250Lm5ldC9qcy9kYXRlcGlja2VyL2RhdGVwaWNrZXIubWluLmpzIj48L3NjcmlwdD4KICAgIDxzY3JpcHQgdHlwZT0iYXBwbGljYXRpb24vamF2YXNjcmlwdCIgc3JjPSJodHRwczovL2QxdGc5MGJ3anczZXRoLmNsb3VkZnJvbnQubmV0L2pzL2RhdGVwaWNrZXIvZGF0ZXBpY2tlci5mci1GUi5qcyI+PC9zY3JpcHQ+CiAgICA8c2NyaXB0IHNyYz0iaHR0cHM6Ly9jZG5qcy5jbG91ZGZsYXJlLmNvbS9hamF4L2xpYnMvc2VsZWN0Mi80LjAuMy9qcy9zZWxlY3QyLmZ1bGwubWluLmpzIj48L3NjcmlwdD4KICAgIDxzY3JpcHQgc3JjPSIvanMvY29tbW9uL3NlbGVjdDIub3B0Z3JvdXBTZWxlY3Qvc2VsZWN0Mi5vcHRncm91cFNlbGVjdC5qcyI+PC9zY3JpcHQ+CiAgICA8c2NyaXB0IHR5cGU9ImFwcGxpY2F0aW9uL2phdmFzY3JpcHQiIHNyYz0iaHR0cHM6Ly9jZG5qcy5jbG91ZGZsYXJlLmNvbS9hamF4L2xpYnMvbWFnbmlmaWMtcG9wdXAuanMvMS4xLjAvanF1ZXJ5Lm1hZ25pZmljLXBvcHVwLm1pbi5qcyI+PC9zY3JpcHQ+CiAgICA8c2NyaXB0IHR5cGU9ImFwcGxpY2F0aW9uL2phdmFzY3JpcHQiIHNyYz0iaHR0cHM6Ly9jZG5qcy5jbG91ZGZsYXJlLmNvbS9hamF4L2xpYnMvanF1ZXJ5LnRvdWNoc3dpcGUvMS42LjE5L2pxdWVyeS50b3VjaFN3aXBlLmpzIj48L3NjcmlwdD4KICAgICAgICAgICAgPHNjcmlwdCB0eXBlPSJhcHBsaWNhdGlvbi9qYXZhc2NyaXB0IiBzcmM9Ii9qcy9mcmVlMTAvbWFpbi5qcyI+PC9zY3JpcHQ+CiAgPC9ib2R5Pgo8L2h0bWw+Cg==
    http_version: null
  recorded_at: Fri, 03 Apr 2020 13:33:45 GMT
- request:
    method: get
    uri: https://www.agencedesenfantsrouges.com/fr/recherche/vente-appartement-2-pieces-paris-3eme-enfants-rouges-75003-3612856
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Fri, 03 Apr 2020 13:33:46 GMT
      Server:
      - Apache/2.4.25 (Debian)
      Upgrade:
      - h2,h2c
      Connection:
      - Upgrade
      Set-Cookie:
      - symfony=li2q8cevmp4o6odg5r4qii57b3; path=/
      Vary:
      - Accept-Encoding
      Content-Length:
      - '12338'
      Content-Type:
      - text/html; charset=utf-8
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: null
  recorded_at: Fri, 03 Apr 2020 13:33:46 GMT
- request:
    method: get
    uri: https://www.agencedesenfantsrouges.com/fr/recherche/vente-appartement-2-pieces-paris-3eme-75003-3667270
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Fri, 03 Apr 2020 13:33:46 GMT
      Server:
      - Apache/2.4.25 (Debian)
      Upgrade:
      - h2,h2c
      Connection:
      - Upgrade
      Set-Cookie:
      - symfony=vn1ohk9coo4d9o87rionp4ov96; path=/
      Vary:
      - Accept-Encoding
      Content-Length:
      - '12323'
      Content-Type:
      - text/html; charset=utf-8
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: null
  recorded_at: Fri, 03 Apr 2020 13:33:47 GMT
recorded_with: VCR 5.1.0
