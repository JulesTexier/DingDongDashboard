---
http_interactions:
- request:
    method: post
    uri: http://www.agencessaintferdinand.com/acheter/
    body:
      encoding: UTF-8
      string: action=ajax_filter_listings&action_values=vente&category_values=All+Types&city=all&area=All+Areas&order=3&newpage=1&page_id=5393
    headers:
      User-Agent:
      - Typhoeus - https://github.com/typhoeus/typhoeus
      Expect:
      - ''
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Tue, 16 Jun 2020 14:31:43 GMT
      Server:
      - Apache/2.4.7 (Ubuntu)
      X-Pingback:
      - http://www.agencessaintferdinand.com/xmlrpc.php
      Link:
      - "<http://www.agencessaintferdinand.com/?p=5393>; rel=shortlink"
      - <http://www.agencessaintferdinand.com/wp-json/>; rel="https://api.w.org/"
      Vary:
      - Accept-Encoding
      Transfer-Encoding:
      - chunked
      Content-Type:
      - text/html; charset=UTF-8
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version:
  recorded_at: Tue, 16 Jun 2020 14:43:23 GMT
- request:
    method: get
    uri: http://www.agencessaintferdinand.com/properties/blomet-10-pieces/
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Tue, 16 Jun 2020 14:31:44 GMT
      Server:
      - Apache/2.4.7 (Ubuntu)
      X-Pingback:
      - http://www.agencessaintferdinand.com/xmlrpc.php
      Link:
      - "<http://www.agencessaintferdinand.com/?p=2094160>; rel=shortlink"
      - <http://www.agencessaintferdinand.com/wp-json/>; rel="https://api.w.org/"
      Vary:
      - Accept-Encoding
      Content-Length:
      - '19416'
      Content-Type:
      - text/html; charset=UTF-8
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version:
  recorded_at: Tue, 16 Jun 2020 14:43:24 GMT
- request:
    method: get
    uri: http://www.agencessaintferdinand.com/properties/foch-8-pieces/
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Tue, 16 Jun 2020 14:31:45 GMT
      Server:
      - Apache/2.4.7 (Ubuntu)
      X-Pingback:
      - http://www.agencessaintferdinand.com/xmlrpc.php
      Link:
      - "<http://www.agencessaintferdinand.com/?p=2071733>; rel=shortlink"
      - <http://www.agencessaintferdinand.com/wp-json/>; rel="https://api.w.org/"
      Vary:
      - Accept-Encoding
      Content-Length:
      - '20425'
      Content-Type:
      - text/html; charset=UTF-8
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version:
  recorded_at: Tue, 16 Jun 2020 14:43:24 GMT
- request:
    method: get
    uri: http://www.agencessaintferdinand.com/properties/quai-dorsay-6-pieces/
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Tue, 16 Jun 2020 14:31:45 GMT
      Server:
      - Apache/2.4.7 (Ubuntu)
      X-Pingback:
      - http://www.agencessaintferdinand.com/xmlrpc.php
      Link:
      - "<http://www.agencessaintferdinand.com/?p=2104530>; rel=shortlink"
      - <http://www.agencessaintferdinand.com/wp-json/>; rel="https://api.w.org/"
      Vary:
      - Accept-Encoding
      Content-Length:
      - '21055'
      Content-Type:
      - text/html; charset=UTF-8
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version:
  recorded_at: Tue, 16 Jun 2020 14:43:25 GMT
- request:
    method: get
    uri: http://www.agencessaintferdinand.com/properties/gros-caillou-5-pieces/
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Tue, 16 Jun 2020 14:31:46 GMT
      Server:
      - Apache/2.4.7 (Ubuntu)
      X-Pingback:
      - http://www.agencessaintferdinand.com/xmlrpc.php
      Link:
      - "<http://www.agencessaintferdinand.com/?p=2102716>; rel=shortlink"
      - <http://www.agencessaintferdinand.com/wp-json/>; rel="https://api.w.org/"
      Vary:
      - Accept-Encoding
      Content-Length:
      - '20852'
      Content-Type:
      - text/html; charset=UTF-8
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version:
  recorded_at: Tue, 16 Jun 2020 14:43:25 GMT
- request:
    method: get
    uri: http://www.agencessaintferdinand.com/properties/brochant-9-pieces/
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Tue, 16 Jun 2020 14:31:47 GMT
      Server:
      - Apache/2.4.7 (Ubuntu)
      X-Pingback:
      - http://www.agencessaintferdinand.com/xmlrpc.php
      Link:
      - "<http://www.agencessaintferdinand.com/?p=2083924>; rel=shortlink"
      - <http://www.agencessaintferdinand.com/wp-json/>; rel="https://api.w.org/"
      Vary:
      - Accept-Encoding
      Content-Length:
      - '20842'
      Content-Type:
      - text/html; charset=UTF-8
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version:
  recorded_at: Tue, 16 Jun 2020 14:43:26 GMT
- request:
    method: get
    uri: http://www.agencessaintferdinand.com/properties/foch-6-pieces/
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Tue, 16 Jun 2020 14:31:47 GMT
      Server:
      - Apache/2.4.7 (Ubuntu)
      X-Pingback:
      - http://www.agencessaintferdinand.com/xmlrpc.php
      Link:
      - "<http://www.agencessaintferdinand.com/?p=2084753>; rel=shortlink"
      - <http://www.agencessaintferdinand.com/wp-json/>; rel="https://api.w.org/"
      Vary:
      - Accept-Encoding
      Content-Length:
      - '20518'
      Content-Type:
      - text/html; charset=UTF-8
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version:
  recorded_at: Tue, 16 Jun 2020 14:43:27 GMT
- request:
    method: get
    uri: http://www.agencessaintferdinand.com/properties/place-des-ternes-6-pieces/
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Tue, 16 Jun 2020 14:31:48 GMT
      Server:
      - Apache/2.4.7 (Ubuntu)
      X-Pingback:
      - http://www.agencessaintferdinand.com/xmlrpc.php
      Link:
      - "<http://www.agencessaintferdinand.com/?p=2085085>; rel=shortlink"
      - <http://www.agencessaintferdinand.com/wp-json/>; rel="https://api.w.org/"
      Vary:
      - Accept-Encoding
      Content-Length:
      - '20908'
      Content-Type:
      - text/html; charset=UTF-8
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version:
  recorded_at: Tue, 16 Jun 2020 14:43:27 GMT
- request:
    method: get
    uri: http://www.agencessaintferdinand.com/properties/foch-6-pieces-2/
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Tue, 16 Jun 2020 14:31:48 GMT
      Server:
      - Apache/2.4.7 (Ubuntu)
      X-Pingback:
      - http://www.agencessaintferdinand.com/xmlrpc.php
      Link:
      - "<http://www.agencessaintferdinand.com/?p=2087423>; rel=shortlink"
      - <http://www.agencessaintferdinand.com/wp-json/>; rel="https://api.w.org/"
      Vary:
      - Accept-Encoding
      Content-Length:
      - '20512'
      Content-Type:
      - text/html; charset=UTF-8
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version:
  recorded_at: Tue, 16 Jun 2020 14:43:28 GMT
- request:
    method: get
    uri: http://www.agencessaintferdinand.com/properties/flandrin-4-pieces/
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Tue, 16 Jun 2020 14:31:49 GMT
      Server:
      - Apache/2.4.7 (Ubuntu)
      X-Pingback:
      - http://www.agencessaintferdinand.com/xmlrpc.php
      Link:
      - "<http://www.agencessaintferdinand.com/?p=2102952>; rel=shortlink"
      - <http://www.agencessaintferdinand.com/wp-json/>; rel="https://api.w.org/"
      Vary:
      - Accept-Encoding
      Content-Length:
      - '20733'
      Content-Type:
      - text/html; charset=UTF-8
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version:
  recorded_at: Tue, 16 Jun 2020 14:43:28 GMT
- request:
    method: get
    uri: http://www.agencessaintferdinand.com/properties/courcelles-6-pieces/
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Tue, 16 Jun 2020 14:31:49 GMT
      Server:
      - Apache/2.4.7 (Ubuntu)
      X-Pingback:
      - http://www.agencessaintferdinand.com/xmlrpc.php
      Link:
      - "<http://www.agencessaintferdinand.com/?p=2103641>; rel=shortlink"
      - <http://www.agencessaintferdinand.com/wp-json/>; rel="https://api.w.org/"
      Vary:
      - Accept-Encoding
      Content-Length:
      - '20775'
      Content-Type:
      - text/html; charset=UTF-8
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version:
  recorded_at: Tue, 16 Jun 2020 14:43:29 GMT
- request:
    method: get
    uri: http://www.agencessaintferdinand.com/properties/victor-hugo-5-pieces/
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Tue, 16 Jun 2020 14:31:50 GMT
      Server:
      - Apache/2.4.7 (Ubuntu)
      X-Pingback:
      - http://www.agencessaintferdinand.com/xmlrpc.php
      Link:
      - "<http://www.agencessaintferdinand.com/?p=2089666>; rel=shortlink"
      - <http://www.agencessaintferdinand.com/wp-json/>; rel="https://api.w.org/"
      Vary:
      - Accept-Encoding
      Content-Length:
      - '20682'
      Content-Type:
      - text/html; charset=UTF-8
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        PCFET0NUWVBFIGh0bWw+CjxodG1sIGxhbmc9ImZyLUZSIj4KPGhlYWQ+CjxtZXRhIGNoYXJzZXQ9IlVURi04IiAvPgo8bWV0YSBodHRwLWVxdWl2PSJDb250ZW50LVR5cGUiIGNvbnRlbnQ9InRleHQvaHRtbDsgY2hhcnNldD11dGYtOCIvPgo8bWV0YSBuYW1lPSJ2aWV3cG9ydCIgY29udGVudD0id2lkdGg9ZGV2aWNlLXdpZHRoLCBpbml0aWFsLXNjYWxlPTEsdXNlci1zY2FsYWJsZT1ubyI+Cgo8dGl0bGU+VmljdG9yIEh1Z28gJiM4MjExOyA1IHBpw6hjZShzKSB8IEdyb3VwZSBTYWludCBGZXJkaW5hbmQgSW1tb2JpbGllcjwvdGl0bGU+CgoKCjxsaW5rIHJlbD0icGluZ2JhY2siIGhyZWY9Imh0dHA6Ly93d3cuYWdlbmNlc3NhaW50ZmVyZGluYW5kLmNvbS94bWxycGMucGhwIiAvPgogCjxsaW5rIHJlbD0ic2hvcnRjdXQgaWNvbiIgaHJlZj0iaHR0cDovL3d3dy5zYWludGZlcmRpbmFuZC5mci93cC1jb250ZW50L3VwbG9hZHMvMjAxNS8wOS9mYXZpY29uLnBuZyIgdHlwZT0iaW1hZ2UveC1pY29uIiAvPjxsaW5rIHJlbD0nZG5zLXByZWZldGNoJyBocmVmPScvL21hcHMuZ29vZ2xlYXBpcy5jb20nIC8+CjxsaW5rIHJlbD0nZG5zLXByZWZldGNoJyBocmVmPScvL2ZvbnRzLmdvb2dsZWFwaXMuY29tJyAvPgo8bGluayByZWw9J2Rucy1wcmVmZXRjaCcgaHJlZj0nLy9zLncub3JnJyAvPgo8bGluayByZWw9ImFsdGVybmF0ZSIgdHlwZT0iYXBwbGljYXRpb24vcnNzK3htbCIgdGl0bGU9Ikdyb3VwZSBTYWludCBGZXJkaW5hbmQgSW1tb2JpbGllciAmcmFxdW87IEZsdXgiIGhyZWY9Imh0dHA6Ly93d3cuYWdlbmNlc3NhaW50ZmVyZGluYW5kLmNvbS9mZWVkLyIgLz4KPGxpbmsgcmVsPSJhbHRlcm5hdGUiIHR5cGU9ImFwcGxpY2F0aW9uL3Jzcyt4bWwiIHRpdGxlPSJHcm91cGUgU2FpbnQgRmVyZGluYW5kIEltbW9iaWxpZXIgJnJhcXVvOyBGbHV4IGRlcyBjb21tZW50YWlyZXMiIGhyZWY9Imh0dHA6Ly93d3cuYWdlbmNlc3NhaW50ZmVyZGluYW5kLmNvbS9jb21tZW50cy9mZWVkLyIgLz4KPGxpbmsgcmVsPSJhbHRlcm5hdGUiIHR5cGU9ImFwcGxpY2F0aW9uL3Jzcyt4bWwiIHRpdGxlPSJHcm91cGUgU2FpbnQgRmVyZGluYW5kIEltbW9iaWxpZXIgJnJhcXVvOyBWaWN0b3IgSHVnbyAmIzgyMTE7IDUgcGnDqGNlKHMpIEZsdXggZGVzIGNvbW1lbnRhaXJlcyIgaHJlZj0iaHR0cDovL3d3dy5hZ2VuY2Vzc2FpbnRmZXJkaW5hbmQuY29tL3Byb3BlcnRpZXMvdmljdG9yLWh1Z28tNS1waWVjZXMvZmVlZC8iIC8+CgkJPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPgoJCQl3aW5kb3cuX3dwZW1vamlTZXR0aW5ncyA9IHsiYmFzZVVybCI6Imh0dHBzOlwvXC9zLncub3JnXC9pbWFnZXNcL2NvcmVcL2Vtb2ppXC8xMi4wLjAtMVwvNzJ4NzJcLyIsImV4dCI6Ii5wbmciLCJzdmdVcmwiOiJodHRwczpcL1wvcy53Lm9yZ1wvaW1hZ2VzXC9jb3JlXC9lbW9qaVwvMTIuMC4wLTFcL3N2Z1wvIiwic3ZnRXh0IjoiLnN2ZyIsInNvdXJjZSI6eyJjb25jYXRlbW9qaSI6Imh0dHA6XC9cL3d3dy5hZ2VuY2Vzc2FpbnRmZXJkaW5hbmQuY29tXC93cC1pbmNsdWRlc1wvanNcL3dwLWVtb2ppLXJlbGVhc2UubWluLmpzP3Zlcj01LjIuNyJ9fTsKCQkJIWZ1bmN0aW9uKGEsYixjKXtmdW5jdGlvbiBkKGEsYil7dmFyIGM9U3RyaW5nLmZyb21DaGFyQ29kZTtsLmNsZWFyUmVjdCgwLDAsay53aWR0aCxrLmhlaWdodCksbC5maWxsVGV4dChjLmFwcGx5KHRoaXMsYSksMCwwKTt2YXIgZD1rLnRvRGF0YVVSTCgpO2wuY2xlYXJSZWN0KDAsMCxrLndpZHRoLGsuaGVpZ2h0KSxsLmZpbGxUZXh0KGMuYXBwbHkodGhpcyxiKSwwLDApO3ZhciBlPWsudG9EYXRhVVJMKCk7cmV0dXJuIGQ9PT1lfWZ1bmN0aW9uIGUoYSl7dmFyIGI7aWYoIWx8fCFsLmZpbGxUZXh0KXJldHVybiExO3N3aXRjaChsLnRleHRCYXNlbGluZT0idG9wIixsLmZvbnQ9IjYwMCAzMnB4IEFyaWFsIixhKXtjYXNlImZsYWciOnJldHVybiEoYj1kKFs1NTM1Niw1NjgyNiw1NTM1Niw1NjgxOV0sWzU1MzU2LDU2ODI2LDgyMDMsNTUzNTYsNTY4MTldKSkmJihiPWQoWzU1MzU2LDU3MzMyLDU2MTI4LDU2NDIzLDU2MTI4LDU2NDE4LDU2MTI4LDU2NDIxLDU2MTI4LDU2NDMwLDU2MTI4LDU2NDIzLDU2MTI4LDU2NDQ3XSxbNTUzNTYsNTczMzIsODIwMyw1NjEyOCw1NjQyMyw4MjAzLDU2MTI4LDU2NDE4LDgyMDMsNTYxMjgsNTY0MjEsODIwMyw1NjEyOCw1NjQzMCw4MjAzLDU2MTI4LDU2NDIzLDgyMDMsNTYxMjgsNTY0NDddKSwhYik7Y2FzZSJlbW9qaSI6cmV0dXJuIGI9ZChbNTUzNTcsNTY0MjQsNTUzNTYsNTczNDIsODIwNSw1NTM1OCw1NjYwNSw4MjA1LDU1MzU3LDU2NDI0LDU1MzU2LDU3MzQwXSxbNTUzNTcsNTY0MjQsNTUzNTYsNTczNDIsODIwMyw1NTM1OCw1NjYwNSw4MjAzLDU1MzU3LDU2NDI0LDU1MzU2LDU3MzQwXSksIWJ9cmV0dXJuITF9ZnVuY3Rpb24gZihhKXt2YXIgYz1iLmNyZWF0ZUVsZW1lbnQoInNjcmlwdCIpO2Muc3JjPWEsYy5kZWZlcj1jLnR5cGU9InRleHQvamF2YXNjcmlwdCIsYi5nZXRFbGVtZW50c0J5VGFnTmFtZSgiaGVhZCIpWzBdLmFwcGVuZENoaWxkKGMpfXZhciBnLGgsaSxqLGs9Yi5jcmVhdGVFbGVtZW50KCJjYW52YXMiKSxsPWsuZ2V0Q29udGV4dCYmay5nZXRDb250ZXh0KCIyZCIpO2ZvcihqPUFycmF5KCJmbGFnIiwiZW1vamkiKSxjLnN1cHBvcnRzPXtldmVyeXRoaW5nOiEwLGV2ZXJ5dGhpbmdFeGNlcHRGbGFnOiEwfSxpPTA7aTxqLmxlbmd0aDtpKyspYy5zdXBwb3J0c1tqW2ldXT1lKGpbaV0pLGMuc3VwcG9ydHMuZXZlcnl0aGluZz1jLnN1cHBvcnRzLmV2ZXJ5dGhpbmcmJmMuc3VwcG9ydHNbaltpXV0sImZsYWciIT09altpXSYmKGMuc3VwcG9ydHMuZXZlcnl0aGluZ0V4Y2VwdEZsYWc9Yy5zdXBwb3J0cy5ldmVyeXRoaW5nRXhjZXB0RmxhZyYmYy5zdXBwb3J0c1tqW2ldXSk7Yy5zdXBwb3J0cy5ldmVyeXRoaW5nRXhjZXB0RmxhZz1jLnN1cHBvcnRzLmV2ZXJ5dGhpbmdFeGNlcHRGbGFnJiYhYy5zdXBwb3J0cy5mbGFnLGMuRE9NUmVhZHk9ITEsYy5yZWFkeUNhbGxiYWNrPWZ1bmN0aW9uKCl7Yy5ET01SZWFkeT0hMH0sYy5zdXBwb3J0cy5ldmVyeXRoaW5nfHwoaD1mdW5jdGlvbigpe2MucmVhZHlDYWxsYmFjaygpfSxiLmFkZEV2ZW50TGlzdGVuZXI/KGIuYWRkRXZlbnRMaXN0ZW5lcigiRE9NQ29udGVudExvYWRlZCIsaCwhMSksYS5hZGRFdmVudExpc3RlbmVyKCJsb2FkIixoLCExKSk6KGEuYXR0YWNoRXZlbnQoIm9ubG9hZCIsaCksYi5hdHRhY2hFdmVudCgib25yZWFkeXN0YXRlY2hhbmdlIixmdW5jdGlvbigpeyJjb21wbGV0ZSI9PT1iLnJlYWR5U3RhdGUmJmMucmVhZHlDYWxsYmFjaygpfSkpLGc9Yy5zb3VyY2V8fHt9LGcuY29uY2F0ZW1vamk/ZihnLmNvbmNhdGVtb2ppKTpnLndwZW1vamkmJmcudHdlbW9qaSYmKGYoZy50d2Vtb2ppKSxmKGcud3BlbW9qaSkpKX0od2luZG93LGRvY3VtZW50LHdpbmRvdy5fd3BlbW9qaVNldHRpbmdzKTsKCQk8L3NjcmlwdD4KCQk8c3R5bGUgdHlwZT0idGV4dC9jc3MiPgppbWcud3Atc21pbGV5LAppbWcuZW1vamkgewoJZGlzcGxheTogaW5saW5lICFpbXBvcnRhbnQ7Cglib3JkZXI6IG5vbmUgIWltcG9ydGFudDsKCWJveC1zaGFkb3c6IG5vbmUgIWltcG9ydGFudDsKCWhlaWdodDogMWVtICFpbXBvcnRhbnQ7Cgl3aWR0aDogMWVtICFpbXBvcnRhbnQ7CgltYXJnaW46IDAgLjA3ZW0gIWltcG9ydGFudDsKCXZlcnRpY2FsLWFsaWduOiAtMC4xZW0gIWltcG9ydGFudDsKCWJhY2tncm91bmQ6IG5vbmUgIWltcG9ydGFudDsKCXBhZGRpbmc6IDAgIWltcG9ydGFudDsKfQo8L3N0eWxlPgoJPGxpbmsgcmVsPSdzdHlsZXNoZWV0JyBpZD0nZm9ybWlkYWJsZS1jc3MnICBocmVmPSdodHRwOi8vd3d3LmFnZW5jZXNzYWludGZlcmRpbmFuZC5jb20vd3AtY29udGVudC9wbHVnaW5zL2Zvcm1pZGFibGUvY3NzL2Zvcm1pZGFibGVmb3Jtcy5jc3M/dmVyPTEwMTQxNDM1JyB0eXBlPSd0ZXh0L2NzcycgbWVkaWE9J2FsbCcgLz4KPGxpbmsgcmVsPSdzdHlsZXNoZWV0JyBpZD0nd3AtYmxvY2stbGlicmFyeS1jc3MnICBocmVmPSdodHRwOi8vd3d3LmFnZW5jZXNzYWludGZlcmRpbmFuZC5jb20vd3AtaW5jbHVkZXMvY3NzL2Rpc3QvYmxvY2stbGlicmFyeS9zdHlsZS5taW4uY3NzP3Zlcj01LjIuNycgdHlwZT0ndGV4dC9jc3MnIG1lZGlhPSdhbGwnIC8+CjxsaW5rIHJlbD0nc3R5bGVzaGVldCcgaWQ9J3BhcmlzLWh0bWw1LW1hcC1zdHlsZS1jc3MnICBocmVmPSdodHRwOi8vd3d3LmFnZW5jZXNzYWludGZlcmRpbmFuZC5jb20vd3AtY29udGVudC9wbHVnaW5zL3BhcmlzaHRtbG1hcC9zdGF0aWMvY3NzL21hcC5jc3M/dmVyPTUuMi43JyB0eXBlPSd0ZXh0L2NzcycgbWVkaWE9J2FsbCcgLz4KPGxpbmsgcmVsPSdzdHlsZXNoZWV0JyBpZD0ncnMtcGx1Z2luLXNldHRpbmdzLWNzcycgIGhyZWY9J2h0dHA6Ly93d3cuYWdlbmNlc3NhaW50ZmVyZGluYW5kLmNvbS93cC1jb250ZW50L3BsdWdpbnMvcmV2c2xpZGVyL3B1YmxpYy9hc3NldHMvY3NzL3NldHRpbmdzLmNzcz92ZXI9NS4wLjQuMScgdHlwZT0ndGV4dC9jc3MnIG1lZGlhPSdhbGwnIC8+CjxzdHlsZSBpZD0ncnMtcGx1Z2luLXNldHRpbmdzLWlubGluZS1jc3MnIHR5cGU9J3RleHQvY3NzJz4KLnRwLWNhcHRpb24gYXtjb2xvcjojZmY3MzAyO3RleHQtc2hhZG93Om5vbmU7LXdlYmtpdC10cmFuc2l0aW9uOmFsbCAwLjJzIGVhc2Utb3V0Oy1tb3otdHJhbnNpdGlvbjphbGwgMC4ycyBlYXNlLW91dDstby10cmFuc2l0aW9uOmFsbCAwLjJzIGVhc2Utb3V0Oy1tcy10cmFuc2l0aW9uOmFsbCAwLjJzIGVhc2Utb3V0fS50cC1jYXB0aW9uIGE6aG92ZXJ7Y29sb3I6I2ZmYTkwMn0udHAtY2FwdGlvbiBhe2NvbG9yOiNmZjczMDI7dGV4dC1zaGFkb3c6bm9uZTstd2Via2l0LXRyYW5zaXRpb246YWxsIDAuMnMgZWFzZS1vdXQ7LW1vei10cmFuc2l0aW9uOmFsbCAwLjJzIGVhc2Utb3V0Oy1vLXRyYW5zaXRpb246YWxsIDAuMnMgZWFzZS1vdXQ7LW1zLXRyYW5zaXRpb246YWxsIDAuMnMgZWFzZS1vdXR9LnRwLWNhcHRpb24gYTpob3Zlcntjb2xvcjojZmZhOTAyfQo8L3N0eWxlPgo8bGluayByZWw9J3N0eWxlc2hlZXQnIGlkPSd3cGVzdGF0ZV9zdHlsZS1jc3MnICBocmVmPSdodHRwOi8vd3d3LmFnZW5jZXNzYWludGZlcmRpbmFuZC5jb20vd3AtY29udGVudC90aGVtZXMvd3ByZXNpZGVuY2Uvc3R5bGUuY3NzP3Zlcj0xLjAnIHR5cGU9J3RleHQvY3NzJyBtZWRpYT0nYWxsJyAvPgo8bGluayByZWw9J3N0eWxlc2hlZXQnIGlkPSd3cGVzdGF0ZV9tZWRpYS1jc3MnICBocmVmPSdodHRwOi8vd3d3LmFnZW5jZXNzYWludGZlcmRpbmFuZC5jb20vd3AtY29udGVudC90aGVtZXMvd3ByZXNpZGVuY2UvY3NzL215X21lZGlhLmNzcz92ZXI9MS4wJyB0eXBlPSd0ZXh0L2NzcycgbWVkaWE9J2FsbCcgLz4KPGxpbmsgcmVsPSdzdHlsZXNoZWV0JyBpZD0ncHJldHR5cGhvdG8tY3NzJyAgaHJlZj0naHR0cDovL3d3dy5hZ2VuY2Vzc2FpbnRmZXJkaW5hbmQuY29tL3dwLWNvbnRlbnQvcGx1Z2lucy9qc19jb21wb3Nlci9hc3NldHMvbGliL3ByZXR0eXBob3RvL2Nzcy9wcmV0dHlQaG90by5taW4uY3NzP3Zlcj01LjQuNCcgdHlwZT0ndGV4dC9jc3MnIG1lZGlhPSdhbGwnIC8+CjxsaW5rIHJlbD0nc3R5bGVzaGVldCcgaWQ9J2pxdWVyeS51aS50aGVtZS1jc3MnICBocmVmPSdodHRwOi8vd3d3LmFnZW5jZXNzYWludGZlcmRpbmFuZC5jb20vd3AtY29udGVudC90aGVtZXMvd3ByZXNpZGVuY2UvY3NzL2pxdWVyeS11aS5taW4uY3NzP3Zlcj01LjIuNycgdHlwZT0ndGV4dC9jc3MnIG1lZGlhPSdhbGwnIC8+CjxsaW5rIHJlbD0nc3R5bGVzaGVldCcgaWQ9J3dwZXN0YXRlLWN1c3RvbS1mb250LWNzcycgIGhyZWY9J2h0dHA6Ly9mb250cy5nb29nbGVhcGlzLmNvbS9jc3M/ZmFtaWx5PUxhdG8lM0E0MDAlMkM1MDAlMkMzMDAmIzAzODt2ZXI9NS4yLjcnIHR5cGU9J3RleHQvY3NzJyBtZWRpYT0nYWxsJyAvPgo8bGluayByZWw9J3N0eWxlc2hlZXQnIGlkPSdmb250LWF3ZXNvbWUubWluLWNzcycgIGhyZWY9J2h0dHA6Ly93d3cuYWdlbmNlc3NhaW50ZmVyZGluYW5kLmNvbS93cC1jb250ZW50L3RoZW1lcy93cHJlc2lkZW5jZS9jc3MvZm9udGF3ZXNvbWUvY3NzL2ZvbnQtYXdlc29tZS5taW4uY3NzP3Zlcj01LjIuNycgdHlwZT0ndGV4dC9jc3MnIG1lZGlhPSdhbGwnIC8+CjxsaW5rIHJlbD0nc3R5bGVzaGVldCcgaWQ9J2JzZi1EZWZhdWx0cy1jc3MnICBocmVmPSdodHRwOi8vd3d3LmFnZW5jZXNzYWludGZlcmRpbmFuZC5jb20vd3AtY29udGVudC91cGxvYWRzL3NtaWxlX2ZvbnRzL0RlZmF1bHRzL0RlZmF1bHRzLmNzcz92ZXI9NS4yLjcnIHR5cGU9J3RleHQvY3NzJyBtZWRpYT0nYWxsJyAvPgo8c2NyaXB0IHR5cGU9J3RleHQvamF2YXNjcmlwdCcgc3JjPSdodHRwOi8vd3d3LmFnZW5jZXNzYWludGZlcmRpbmFuZC5jb20vd3AtaW5jbHVkZXMvanMvanF1ZXJ5L2pxdWVyeS5qcz92ZXI9MS4xMi40LXdwJz48L3NjcmlwdD4KPHNjcmlwdCB0eXBlPSd0ZXh0L2phdmFzY3JpcHQnIHNyYz0naHR0cDovL3d3dy5hZ2VuY2Vzc2FpbnRmZXJkaW5hbmQuY29tL3dwLWluY2x1ZGVzL2pzL2pxdWVyeS9qcXVlcnktbWlncmF0ZS5taW4uanM/dmVyPTEuNC4xJz48L3NjcmlwdD4KPHNjcmlwdCB0eXBlPSd0ZXh0L2phdmFzY3JpcHQnIHNyYz0naHR0cDovL3d3dy5hZ2VuY2Vzc2FpbnRmZXJkaW5hbmQuY29tL3dwLWNvbnRlbnQvcGx1Z2lucy9yZXZzbGlkZXIvcHVibGljL2Fzc2V0cy9qcy9qcXVlcnkudGhlbWVwdW5jaC50b29scy5taW4uanM/dmVyPTUuMC40LjEnPjwvc2NyaXB0Pgo8c2NyaXB0IHR5cGU9J3RleHQvamF2YXNjcmlwdCcgc3JjPSdodHRwOi8vd3d3LmFnZW5jZXNzYWludGZlcmRpbmFuZC5jb20vd3AtY29udGVudC9wbHVnaW5zL3JldnNsaWRlci9wdWJsaWMvYXNzZXRzL2pzL2pxdWVyeS50aGVtZXB1bmNoLnJldm9sdXRpb24ubWluLmpzP3Zlcj01LjAuNC4xJz48L3NjcmlwdD4KPHNjcmlwdCB0eXBlPSd0ZXh0L2phdmFzY3JpcHQnIHNyYz0naHR0cDovL3d3dy5hZ2VuY2Vzc2FpbnRmZXJkaW5hbmQuY29tL3dwLWNvbnRlbnQvdGhlbWVzL3dwcmVzaWRlbmNlL2pzL2Jvb3RzdHJhcC5taW4uanM/dmVyPTEuMCc+PC9zY3JpcHQ+CjxzY3JpcHQgdHlwZT0ndGV4dC9qYXZhc2NyaXB0JyBzcmM9J2h0dHA6Ly93d3cuYWdlbmNlc3NhaW50ZmVyZGluYW5kLmNvbS93cC1jb250ZW50L3RoZW1lcy93cHJlc2lkZW5jZS9qcy9tb2Rlcm5penIuY3VzdG9tLjYyNDU2LmpzP3Zlcj0xLjAnPjwvc2NyaXB0Pgo8c2NyaXB0IHR5cGU9J3RleHQvamF2YXNjcmlwdCcgc3JjPSdodHRwOi8vbWFwcy5nb29nbGVhcGlzLmNvbS9tYXBzL2FwaS9qcz9saWJyYXJpZXM9cGxhY2VzJiMwMzg7c2Vuc29yPXRydWUmIzAzODtrZXk9QUl6YVN5RHZhZGN6dThsTXN4WDBrZDl3RmVoOGNCTl9GbnYyamdNJiMwMzg7dmVyPTEuMCc+PC9zY3JpcHQ+CjxsaW5rIHJlbD0naHR0cHM6Ly9hcGkudy5vcmcvJyBocmVmPSdodHRwOi8vd3d3LmFnZW5jZXNzYWludGZlcmRpbmFuZC5jb20vd3AtanNvbi8nIC8+CjxsaW5rIHJlbD0iRWRpdFVSSSIgdHlwZT0iYXBwbGljYXRpb24vcnNkK3htbCIgdGl0bGU9IlJTRCIgaHJlZj0iaHR0cDovL3d3dy5hZ2VuY2Vzc2FpbnRmZXJkaW5hbmQuY29tL3htbHJwYy5waHA/cnNkIiAvPgo8bGluayByZWw9Indsd21hbmlmZXN0IiB0eXBlPSJhcHBsaWNhdGlvbi93bHdtYW5pZmVzdCt4bWwiIGhyZWY9Imh0dHA6Ly93d3cuYWdlbmNlc3NhaW50ZmVyZGluYW5kLmNvbS93cC1pbmNsdWRlcy93bHdtYW5pZmVzdC54bWwiIC8+IAo8bWV0YSBuYW1lPSJnZW5lcmF0b3IiIGNvbnRlbnQ9IldvcmRQcmVzcyA1LjIuNyIgLz4KPGxpbmsgcmVsPSJjYW5vbmljYWwiIGhyZWY9Imh0dHA6Ly93d3cuYWdlbmNlc3NhaW50ZmVyZGluYW5kLmNvbS9wcm9wZXJ0aWVzL3ZpY3Rvci1odWdvLTUtcGllY2VzLyIgLz4KPGxpbmsgcmVsPSdzaG9ydGxpbmsnIGhyZWY9J2h0dHA6Ly93d3cuYWdlbmNlc3NhaW50ZmVyZGluYW5kLmNvbS8/cD0yMDg5NjY2JyAvPgo8bGluayByZWw9ImFsdGVybmF0ZSIgdHlwZT0iYXBwbGljYXRpb24vanNvbitvZW1iZWQiIGhyZWY9Imh0dHA6Ly93d3cuYWdlbmNlc3NhaW50ZmVyZGluYW5kLmNvbS93cC1qc29uL29lbWJlZC8xLjAvZW1iZWQ/dXJsPWh0dHAlM0ElMkYlMkZ3d3cuYWdlbmNlc3NhaW50ZmVyZGluYW5kLmNvbSUyRnByb3BlcnRpZXMlMkZ2aWN0b3ItaHVnby01LXBpZWNlcyUyRiIgLz4KPGxpbmsgcmVsPSJhbHRlcm5hdGUiIHR5cGU9InRleHQveG1sK29lbWJlZCIgaHJlZj0iaHR0cDovL3d3dy5hZ2VuY2Vzc2FpbnRmZXJkaW5hbmQuY29tL3dwLWpzb24vb2VtYmVkLzEuMC9lbWJlZD91cmw9aHR0cCUzQSUyRiUyRnd3dy5hZ2VuY2Vzc2FpbnRmZXJkaW5hbmQuY29tJTJGcHJvcGVydGllcyUyRnZpY3Rvci1odWdvLTUtcGllY2VzJTJGJiMwMzg7Zm9ybWF0PXhtbCIgLz4KPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPmRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5jbGFzc05hbWUgKz0gIiBqcyI7PC9zY3JpcHQ+DQo8c3R5bGUgdHlwZT0ndGV4dC9jc3MnPmJvZHksIGgxLCBoMiwgaDMsIGg0LCBoNSwgaDYsIGgxIGEsIGgyIGEsIGgzIGEsIGg0IGEsIGg1IGEsIGg2IGF7Zm9udC1mYW1pbHk6IkxhdG8iICFpbXBvcnRhbnQ7fQogICAgLnByb3BlcnR5X2xpc3RpbmcgaW1newogICAgICAgIGJvcmRlci1ib3R0b206IDNweCBzb2xpZCAjOWU5NDgzOwogICAgfQogICAgCiNhZHYtc2VhcmNoLWhlYWRlci0zLCN0YWJfcHJwZyB1bCwud3BjZjctZm9ybSBpbnB1dFt0eXBlPSJzdWJtaXQiXSwuYWR2X3Jlc3VsdHNfd3JhcHBlciAjYWR2YW5jZWRfc3VibWl0XzIsLndwYl9idG4taW5mbywjc2xpZGVyX2VuYWJsZV9tYXA6aG92ZXIsICNzbGlkZXJfZW5hYmxlX3N0cmVldDpob3ZlciwgI3NsaWRlcl9lbmFibGVfc2xpZGVyOmhvdmVyLCNjb2xvcGhvbiAuc29jaWFsX3NpZGViYXJfaW50ZXJuYWwgYTpob3ZlciwgI3ByaW1hcnkgLnNvY2lhbF9zaWRlYmFyX2ludGVybmFsIGE6aG92ZXIsCi51aS13aWRnZXQtaGVhZGVyLC5zbGlkZXJfY29udHJvbF9sZWZ0LCAgLnNsaWRlcl9jb250cm9sX3JpZ2h0LC5zaW5nbGUtY29udGVudCBpbnB1dFt0eXBlPSJzdWJtaXQiXSAsCiNzbGlkZXJfZW5hYmxlX3NsaWRlci5zbGlkZXJvbiwjc2xpZGVyX2VuYWJsZV9zdHJlZXQuc2xpZGVyb24sICNzbGlkZXJfZW5hYmxlX21hcC5zbGlkZXJvbiAsCi5jb21tZW50LWZvcm0gI3N1Ym1pdCwjYWRkX2Zhdm9yaXRlcy5pc2Zhdm9yaXRlOmhvdmVyLCNhZGRfZmF2b3JpdGVzOmhvdmVyICAsLmNhcm91c2VsLWNvbnRyb2wtdGhlbWUtcHJldiwuY2Fyb3VzZWwtY29udHJvbC10aGVtZS1uZXh0LAojcHJpbWFyeSAuc29jaWFsX3NpZGViYXJfaW50ZXJuYWwgYTpob3ZlciAsICNhZHYtc2VhcmNoLWhlYWRlci1tb2JpbGUsI2Fkdi1zZWFyY2gtaGVhZGVyLTEsIC5mZWF0dXJlZF9zZWNvbmRfbGluZSwgLndwYl9idG4taW5mbywgLmFnZW50X2NvbnRhbmN0X2Zvcm0gaW5wdXRbdHlwZT0ic3VibWl0Il0gIHsKICAgIGJhY2tncm91bmQtY29sb3I6ICM5ZTk0ODMhaW1wb3J0YW50Owp9CiAKLmJsb2dfdW5pdF9pbWFnZSBpbWcsIC5ibG9nMnYgaW1nLCAuc2luZ2xlLWNvbnRlbnQgaW5wdXRbdHlwZT0ic3VibWl0Il0gLAouYWdlbnRwaWN0LC5mZWF0dXJlZF9wcm9wZXJ0eSBpbWcgLCAuYWdlbnRfdW5pdCBpbWcgewogICAgYm9yZGVyLWJvdHRvbTogM3B4IHNvbGlkICM5ZTk0ODMhaW1wb3J0YW50Owp9CgouY29tcGFyZV9pdGVtX2hlYWQgLnByb3BlcnR5X3ByaWNlLCNncmlkX3ZpZXc6aG92ZXIsICNsaXN0X3ZpZXc6aG92ZXIsI3ByaW1hcnkgYTpob3ZlciwuZnJvbnRfcGxhbl9yb3c6aG92ZXIsLmFkdl9leHRlbmRlZF9vcHRpb25zX3RleHQsLnNsaWRlci1jb250ZW50IGgzIGE6aG92ZXIsLmFnZW50X3VuaXRfc29jaWFsX3NpbmdsZSBhOmhvdmVyICwKLmFkdl9leHRlbmRlZF9vcHRpb25zX3RleHQ6aG92ZXIgLC5icmVhZGNydW1iIGE6aG92ZXIgLCAucHJvcGVydHktcGFuZWwgaDQ6aG92ZXIsCi5mZWF0dXJlZF9hcnRpY2xlOmhvdmVyIC5mZWF0dXJlZF9hcnRpY2xlX3JpZ2h0LCAuaW5mb19kZXRhaWxzIC5wcm9wX3ByaWNleCwjY29udGFjdGluZm9ib3gsCi5pbmZvX2RldGFpbHMgI2luZm9ib3hfdGl0bGUsLmZlYXR1cmVkX3Byb3BlcnR5OmhvdmVyIGgyIGEsCi5ibG9nX3VuaXQ6aG92ZXIgaDMgYSwuYmxvZ191bml0X21ldGEgLnJlYWRfbW9yZTpob3ZlciwKLmJsb2dfdW5pdF9tZXRhIGE6aG92ZXIsLmFnZW50X3VuaXQ6aG92ZXIgaDQgYSwubGlzdGluZ19maWx0ZXJfc2VsZWN0Lm9wZW4gLmZpbHRlcl9tZW51X3RyaWdnZXIsCi53cGVzdGF0ZV9hY2NvcmRpb25fdGFiIC51aS1zdGF0ZS1hY3RpdmUgYSwud3Blc3RhdGVfYWNjb3JkaW9uX3RhYiAudWktc3RhdGUtYWN0aXZlIGE6bGluaywud3Blc3RhdGVfYWNjb3JkaW9uX3RhYiAudWktc3RhdGUtYWN0aXZlIGE6dmlzaXRlZCwKLnRoZW1lLXNsaWRlci1wcmljZSwgLmFnZW50X3VuaXQ6aG92ZXIgaDQgYSwubWV0YS1pbmZvIGE6aG92ZXIsLndpZGdldF9sYXRlc3RfcHJpY2UsLnBhY2stbGlzdGluZy10aXRsZSwjY29sb3Bob24gYTpob3ZlciwgI2NvbG9waG9uIGxpIGE6aG92ZXIsCi5wcmljZV9hcmVhLCAucHJvcGVydHlfbGlzdGluZzpob3ZlciBoNCBhLCAubGlzdGluZ191bml0X3ByaWNlX3dyYXBwZXIsYTpob3ZlciwgYTpmb2N1cywgLnRvcF9iYXIgLnNvY2lhbF9zaWRlYmFyX2ludGVybmFsIGE6aG92ZXIsCi5wYWdpbmF0aW9uID4gLmFjdGl2ZSA+IGEsIC5wYWdpbmF0aW9uID4gLmFjdGl2ZSA+IHNwYW4sIC5wYWdpbmF0aW9uID4gLmFjdGl2ZSA+IGE6aG92ZXIsIC5wYWdpbmF0aW9uID4gLmFjdGl2ZSA+IHNwYW46aG92ZXIsIC5wYWdpbmF0aW9uID4gLmFjdGl2ZSA+IGE6Zm9jdXMsIC5wYWdpbmF0aW9uID4gLmFjdGl2ZSA+IHNwYW46Zm9jdXMsLmZlYXR1cmVkX3Byb3BfcHJpY2UsLnVzZXJfbWVudSwudXNlcl9sb2dlZCBpLCAjYWNjZXNzIC5jdXJyZW50LW1lbnUtaXRlbSA+YSwgI2FjY2VzcyAuY3VycmVudC1tZW51LXBhcmVudD5hLCAjYWNjZXNzIC5jdXJyZW50LW1lbnUtYW5jZXN0b3I+YSwjYWNjZXNzIC5tZW51IGxpOmhvdmVyPmEsICNhY2Nlc3MgLm1lbnUgbGk6aG92ZXI+YTphY3RpdmUsICNhY2Nlc3MgLm1lbnUgbGk6aG92ZXI+YTpmb2N1c3sKICAgIGNvbG9yOiAjOWU5NDgzOwp9CiNhbW91bnRfd2QsICNhbW91bnQsI2Ftb3VudF9tb2JpbGUsI2Ftb3VudF9zaHsKICAgIGNvbG9yOiAjOWU5NDgzIWltcG9ydGFudDsKfQogICAgICAgIAouZmVhdHVyZWRfYXJ0aWNsZV90aXRsZXsKICAgIGJvcmRlci10b3A6IDNweCBzb2xpZCAjOWU5NDgzIWltcG9ydGFudDsKfQoKLnNjcm9sbG9uIHsKICAgIGJvcmRlcjogMXB4IHNvbGlkICM5ZTk0ODM7Cn0KLmN1c3RvbW5hdnsKICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjOWU5NDgzOwp9Ym9keSwud2lkZSB7YmFja2dyb3VuZC1jb2xvcjogI2ZmZmZmZjt9IC5jb250ZW50X3dyYXBwZXJ7IGJhY2tncm91bmQtY29sb3I6ICNmZmZmZmY7fSAgLm1hc3Rlcl9oZWFkZXIsI2FjY2VzcyB1bCB1bCwuY3VzdG9tbmF2ICB7YmFja2dyb3VuZC1jb2xvcjogI2ZmZmZmZiB9Ci5mZWF0dXJlZF9hcnRpY2xlX3JpZ2gsIC5mZWF0dXJlZF9hcnRpY2xlX3NlY29uZGxpbmUsCi5wcm9wZXJ0eV9sb2NhdGlvbiAuaW5mb3Jvb20sIC5wcm9wZXJ0eV9sb2NhdGlvbiAuaW5mb2JhdGggLCAuYWdlbnRfbWV0YSAsIC5ibG9nX3VuaXRfbWV0YSBhLCAucHJvcGVydHlfbG9jYXRpb24gLmluZm9zaXplLAouc2FsZV9saW5lICwgLm1ldGEtaW5mbyBhLCAuYnJlYWRjcnVtYiA+IGxpICsgbGk6YmVmb3JlLCAuYmxvZ191bml0X21ldGEsIC5tZXRhLWluZm8sLmFnZW50X3Bvc2l0aW9uLC5icmVhZGNydW1iIGEgewogICAgY29sb3I6ICM5ZTk0ODM7Cn1ib2R5LGEsbGFiZWwsaW5wdXRbdHlwZT10ZXh0XSwgaW5wdXRbdHlwZT1wYXNzd29yZF0sIGlucHV0W3R5cGU9ZW1haWxdLCBpbnB1dFt0eXBlPXVybF0sIGlucHV0W3R5cGU9bnVtYmVyXSwgdGV4dGFyZWEsIC5zbGlkZXItY29udGVudCwgLmxpc3RpbmctZGV0YWlscywgLmZvcm0tY29udHJvbCwgI3VzZXJfbWVudV9vcGVuIGksCiNncmlkX3ZpZXcsICNsaXN0X3ZpZXcsIC5saXN0aW5nX2RldGFpbHMgYSwgLm5vdGljZV9hcmVhLCAuc29jaWFsLWFnZW50LXBhZ2UgYSwgLnByb3BfZGV0YWlsc3gsICNyZWdfcGFzc21haWxfdG9wYmFyLCNyZWdfcGFzc21haWwsIC50ZXN0aW1vbmlhbC10ZXh0LAoud3Blc3RhdGVfdGFicyAudWktd2lkZ2V0LWNvbnRlbnQsIC53cGVzdGF0ZV90b3VyICAudWktd2lkZ2V0LWNvbnRlbnQsIC53cGVzdGF0ZV9hY2NvcmRpb25fdGFiIC51aS13aWRnZXQtY29udGVudCwgLndwZXN0YXRlX2FjY29yZGlvbl90YWIgLnVpLXN0YXRlLWRlZmF1bHQsIC53cGVzdGF0ZV9hY2NvcmRpb25fdGFiIC51aS13aWRnZXQtY29udGVudCAudWktc3RhdGUtZGVmYXVsdCwgCi53cGVzdGF0ZV9hY2NvcmRpb25fdGFiIC51aS13aWRnZXQtaGVhZGVyIC51aS1zdGF0ZS1kZWZhdWx0LC5maWx0ZXJfbWVudXsgY29sb3I6ICMxOTFkNDI7fS5jYXJldCwgIC5jYXJldF9zaWRlYmFyLCAuYWR2YW5jZWRfc2VhcmNoX3Nob3J0Y29kZSAuY2FyZXRfZmlsdGVyeyBib3JkZXItdG9wOiA2cHggc29saWQgIzE5MWQ0Mjt9Ci51c2VyX2Rhc2hib2FyZF9saXN0ZWQgYSwgICAgLmJsb2dfdW5pdF9tZXRhIC5yZWFkX21vcmUsIC5zbGlkZXItY29udGVudCAucmVhZF9tb3JlICwgLmJsb2cydiAucmVhZF9tb3JlLCAuYnJlYWRjcnVtYiAuYWN0aXZlewogICAgY29sb3I6ICMjYTE3MWI7Cn1oMSwgaDIsIGgzLCBoNCwgaDUsIGg2LCBoMSBhLCBoMiBhLCBoMyBhLCBoNCBhLCBoNSBhLCBoNiBhICwuZmVhdHVyZWRfcHJvcGVydHkgaDIgYSwgLmZlYXR1cmVkX3Byb3BlcnR5IGgyLC5ibG9nX3VuaXQgaDMsIC5ibG9nX3VuaXQgaDMgYSwuc3VibWl0X2NvbnRhaW5lcl9oZWFkZXIgIHtjb2xvcjogIzllOTQ4Mzt9I2NvbG9waG9uIHtiYWNrZ3JvdW5kLWNvbG9yOiAjOWU5NDgzO30jY29sb3Bob24sICNjb2xvcGhvbiBhLCAjY29sb3Bob24gbGkgYSAsI2NvbG9waG9uIC53aWRnZXQtdGl0bGUtZm9vdGVye2NvbG9yOiAjZmZmZmZmO30uc3ViX2Zvb3RlciwgLnN1YmZvb3Rlcl9tZW51IGEsIC5zdWJmb290ZXJfbWVudSBsaSBhIHtjb2xvcjogIzE5MWQ0MiFpbXBvcnRhbnQ7fS56aWxsb3dfd2lkZ2V0IC53aWRnZXQtdGl0bGUtZm9vdGVyLCAubW9ydGdhZ2VfY2FsY3VsYXRvcl9kaXYgLndpZGdldC10aXRsZS1zaWRlYmFyLCAubG9naW53ZF9zaWRlYmFyIC53aWRnZXQtdGl0bGUtc2lkZWJhciwuemlsbG93X3dpZGdldCAud2lkZ2V0LXRpdGxlLXNpZGViYXIsIC5hZHZhbmNlZF9zZWFyY2hfc2lkZWJhciAud2lkZ2V0LXRpdGxlLXNpZGViYXIsLnppbGxvd193aWRnZXQsLmFkdmFuY2VkX3NlYXJjaF9zaWRlYmFyLC5sb2dpbndkX3NpZGViYXIsLm1vcnRnYWdlX2NhbGN1bGF0b3JfZGl2IHtiYWNrZ3JvdW5kLWNvbG9yOiAjZmRmZGZkO30ud2lkZ2V0LXRpdGxlLXNpZGViYXJ7Y29sb3I6ICM0MzRhNTQ7fSAubW9ydGdhZ2VfY2FsY3VsYXRvcl9kaXYgLndpZGdldC10aXRsZS1zaWRlYmFyLC5sb2dpbndkX3NpZGViYXIgLndpZGdldC10aXRsZS1zaWRlYmFyLCAuemlsbG93X3dpZGdldCAud2lkZ2V0LXRpdGxlLXNpZGViYXIsIC5hZHZhbmNlZF9zZWFyY2hfc2lkZWJhciAud2lkZ2V0LXRpdGxlLXNpZGViYXJ7Y29sb3I6ICM0MzRhNTQ7fSNwcmltYXJ5LCNwcmltYXJ5IGEsI3ByaW1hcnkgbGFiZWwsICAuYWR2YW5jZWRfc2VhcmNoX3NpZGViYXIgIC5mb3JtLWNvbnRyb2w6Oi13ZWJraXQtaW5wdXQtcGxhY2Vob2xkZXIge2NvbG9yOiAjODg4QzhFO30jYWNjZXNzIGEsI2FjY2VzcyB1bCB1bCBhe2NvbG9yOiM0MzRhNTQ7fQogICAgI3VzZXJfbWVudV9vcGVuID4gbGkgPiBhOmhvdmVyLCAgICAgI3VzZXJfbWVudV9vcGVuID4gbGkgPiBhOmZvY3VzLAogICAgLmZpbHRlcl9tZW51IGxpOmhvdmVyLCAgICAuc3ViLW1lbnUgbGk6aG92ZXIsICNhY2Nlc3MgLm1lbnUgbGk6aG92ZXI+YSwgCiAgICAjYWNjZXNzIC5tZW51IGxpOmhvdmVyPmE6YWN0aXZlLCAgICAgI2FjY2VzcyAubWVudSBsaTpob3Zlcj5hOmZvY3VzewogICAgYmFja2dyb3VuZC1jb2xvcjogIzE5MWQ0Mjt9CiAgICAKICAgIC5mb3JtLWNvbnRyb2wub3BlbiAuZmlsdGVyX21lbnVfdHJpZ2dlciwgLm1lbnVfdXNlcl90b29sc3sKICAgICAgICBjb2xvcjogIzE5MWQ0MjsKICAgIH0KICAgIC5tZW51X3VzZXJfcGljdHVyZSB7CiAgICAgICAgYm9yZGVyOiAxcHggc29saWQgIzE5MWQ0MjsKICAgIH0KICAgICNhY2Nlc3MgLnN1Yi1tZW51IGxpOmhvdmVyPmEsICNhY2Nlc3MgLnN1Yi1tZW51IGxpOmhvdmVyPmE6YWN0aXZlLCAjYWNjZXNzIC5zdWItbWVudSBsaTpob3Zlcj5hOmZvY3VzIHtjb2xvcjogI2ZmZmZmZjt9LnRvcF9iYXJfd3JhcHBlcntiYWNrZ3JvdW5kLWNvbG9yOiNmZGZkZmQ7fS50b3BfYmFyLC50b3BfYmFyIGF7Y29sb3I6IzFhMTcxYjt9LmFkdmFuY2VkX3NlYXJjaF9zaG9ydGNvZGUgIC5jYXJldF9maWx0ZXIsLmFkdmFuY2VkX3NlYXJjaF9zaG9ydGNvZGUgIC5mb3JtLWNvbnRyb2wsLmFkdmFuY2VkX3NlYXJjaF9zaG9ydGNvZGUgIGlucHV0W3R5cGU9dGV4dF0sLmFkdmFuY2VkX3NlYXJjaF9zaG9ydGNvZGUgIC5mb3JtLWNvbnRyb2w6Oi13ZWJraXQtaW5wdXQtcGxhY2Vob2xkZXIsCiAgICAuYWR2LXNlYXJjaC0xIC5jYXJldF9maWx0ZXIsLmFkdi1zZWFyY2gtMSAuZm9ybS1jb250cm9sLC5hZHYtc2VhcmNoLTEgaW5wdXRbdHlwZT10ZXh0XSwuYWR2LXNlYXJjaC0xIC5mb3JtLWNvbnRyb2w6Oi13ZWJraXQtaW5wdXQtcGxhY2Vob2xkZXJ7Y29sb3I6IzFhMTcxYjt9LmZlYXR1cmVkX2FydGljbGVfdGl0bGUsIC50ZXN0aW1vbmlhbC10ZXh0LCAuYWR2MS1ob2xkZXIsICAgLmFkdmFuY2VkX3NlYXJjaF9zaG9ydGNvZGUsIC5mZWF0dXJlZF9zZWNvbmRsaW5lICwgIC5wcm9wZXJ0eV9saXN0aW5nICwuYWdlbnRfdW5pdCwgLmJsb2dfdW5pdCB7IGJhY2tncm91bmQtY29sb3I6I2ZkZmRmZDt9CiAgICAuZmVhdHVyZWRfYXJ0aWNsZSwgIC5tb3J0Z2FnZV9jYWxjdWxhdG9yX2RpdiwgLmxvZ2lud2Rfc2lkZWJhciwgLmFkdmFuY2VkX3NlYXJjaF9zaWRlYmFyLCAuYWR2YW5jZWRfc2VhcmNoX3Nob3J0Y29kZSwgICNhY2Nlc3MgdWwgdWwsIC50ZXN0aW1vbmlhbC10ZXh0LCAuc3VibWl0X2NvbnRhaW5lciwgLnppbGxvd193aWRnZXQsICAgCiAgICAuZmVhdHVyZWRfcHJvcGVydHksIC5wcm9wZXJ0eV9saXN0aW5nICwuYWdlbnRfdW5pdCwuYmxvZ191bml0LHByb3BlcnR5X2xpc3Rpbmd7CiAgICAgICAgYm9yZGVyLWNvbG9yOiMxOTFkNDI7CiAgICB9IAogCiAgICAuY29tcGFueV9oZWFkbGluZSwgLmxvZ2lud2Rfc2lkZWJhciAud2lkZ2V0LXRpdGxlLXNpZGViYXIsCiAgICAuYWR2YW5jZWRfc2VhcmNoX3NpZGViYXIgLndpZGdldC10aXRsZS1mb290ZXIsLmFkdmFuY2VkX3NlYXJjaF9zaWRlYmFyIC53aWRnZXQtdGl0bGUtc2lkZWJhciAsCiAgICAuemlsbG93X3dpZGdldCAud2lkZ2V0LXRpdGxlLWZvb3RlciwuemlsbG93X3dpZGdldCAud2lkZ2V0LXRpdGxlLXNpZGViYXIsIC5hZHYxLWhvbGRlciwubm90aWNlX2FyZWEsICAudG9wX2Jhcl93cmFwcGVyLCAubWFzdGVyX2hlYWRlciwgICNhY2Nlc3MgdWwgdWwgYSAsIC5saXN0aW5nX2ZpbHRlcnNfaGVhZCwgLmxpc3RpbmdfZmlsdGVycyAgICB7CiAgICAgICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICMxOTFkNDI7CiAgICB9CiAgICAKICAgIC5hZHYtc2VhcmNoLTEsIC5ub3RpY2VfYXJlYSwgIC5saXN0aW5nX2ZpbHRlcnNfaGVhZCwgLmxpc3RpbmdfZmlsdGVycywgLmxpc3RpbmdfdW5pdF9wcmljZV93cmFwcGVyewogICAgICAgIGJvcmRlci10b3A6IDFweCBzb2xpZCAjMTkxZDQyOwogICAgfQogICAgCiAgICAuYWR2MS1ob2xkZXJ7CiAgICAgICAgYm9yZGVyLWxlZnQ6IDFweCBzb2xpZCAjMTkxZDQyOwogICAgfQogICAgCiAgICAjc2VhcmNoX3dyYXBwZXJ7CiAgICAgIGJvcmRlci1ib3R0b206IDNweCBzb2xpZCAjMTkxZDQyOwogICAgfSAudHdpdHRlcl93cmFwcGVyLCAuc2xpZGVyX2NvbnRyb2xfcmlnaHQ6aG92ZXIsIC5zbGlkZXJfY29udHJvbF9sZWZ0OmhvdmVyLCAuY29tbWVudC1mb3JtICNzdWJtaXQ6aG92ZXIsIC5jYXJvdXNlbC1jb250cm9sLXRoZW1lLXByZXY6aG92ZXIsIC5jYXJvdXNlbC1jb250cm9sLXRoZW1lLW5leHQ6aG92ZXIgLCAud3BiX2J0bi1pbmZvOmhvdmVyLCAjYWR2YW5jZWRfc3VibWl0XzI6aG92ZXIsICNhZ2VudF9zdWJtaXQ6aG92ZXJ7YmFja2dyb3VuZC1jb2xvcjogIzllOTQ4MyFpbXBvcnRhbnQ7fS5jb21tZW50LWZvcm0gI3N1Ym1pdCwgLndwYl9idG4taW5mbywgLmFnZW50X2NvbnRhbmN0X2Zvcm0gaW5wdXRbdHlwZT0ic3VibWl0Il0sIC50d2l0dGVyX3dyYXBwZXJ7IGJvcmRlci1ib3R0b206IDNweCBzb2xpZCAjOWU5NDgzIWltcG9ydGFudDt9Lmljb25fc2VsZWN0ZWQsLmZlYXR1cmVkX3Byb3BfbGFiZWwge2NvbG9yOiAjOWU5NDgzIWltcG9ydGFudDt9I3RhYl9wcnBnIGxpe2JvcmRlci1yaWdodDogMXB4IHNvbGlkICM5ZTk0ODM7fS5zdWJfZm9vdGVye2JhY2tncm91bmQtY29sb3I6IzllOTQ4Mzt9DQoNCi5hZHYtc2VhcmNoLTEsIC5ub3RpY2VfYXJlYSwgLmxpc3RpbmdfZmlsdGVyc19oZWFkLCAubGlzdGluZ19maWx0ZXJzLCAubGlzdGluZ191bml0X3ByaWNlX3dyYXBwZXJ7DQpib3JkZXItdG9wLWNvbG9yOiM5ZTk0ODM7DQpib3JkZXItYm90dG9tLWNvbG9yOiM5ZTk0ODM7DQpiYWNrZ3JvdW5kLWNvbG9yOiNmZmY7DQp9DQoNCi5mZWF0dXJlZF9hcnRpY2xlLCAubW9ydGdhZ2VfY2FsY3VsYXRvcl9kaXYsIC5sb2dpbndkX3NpZGViYXIsIC5hZHZhbmNlZF9zZWFyY2hfc2lkZWJhciwgLmFkdmFuY2VkX3NlYXJjaF9zaG9ydGNvZGUsICNhY2Nlc3MgdWwgdWwsIC50ZXN0aW1vbmlhbC10ZXh0LCAuc3VibWl0X2NvbnRhaW5lciwgLnppbGxvd193aWRnZXQsIC5mZWF0dXJlZF9wcm9wZXJ0eSwgLnByb3BlcnR5X2xpc3RpbmcsIC5hZ2VudF91bml0LCAuYmxvZ191bml0LCBwcm9wZXJ0eV9saXN0aW5new0KYm9yZGVyLWNvbG9yOiM5ZTk0ODM7DQp9DQoNCiNhY2Nlc3MgYSwgI2FjY2VzcyB1bCB1bCBhe2NvbG9yOiNmZmY7fQ0KDQojYWNjZXNzIC5jdXJyZW50LW1lbnUtaXRlbSAmZ3Q7YXtjb2xvcjojMDAwICFpbXBvcnRhbnQ7fQ0KDQouZmF7Y29sb3I6IzAwMDt9DQoNCi5jb250YWN0LWJveHtkaXNwbGF5Om5vbmUgIWltcG9ydGFudH0NCg0KLnNsaWRlci1wcm9wZXJ0eS1zdGF0dXN7ZGlzcGxheTpub25lICFpbXBvcnRhbnR9DQoucmliYm9uLXdyYXBwZXItZGVmYXVsdHtkaXNwbGF5Om5vbmUgIWltcG9ydGFudH08L3N0eWxlPjxtZXRhIG5hbWU9ImdlbmVyYXRvciIgY29udGVudD0iUG93ZXJlZCBieSBXUEJha2VyeSBQYWdlIEJ1aWxkZXIgLSBkcmFnIGFuZCBkcm9wIHBhZ2UgYnVpbGRlciBmb3IgV29yZFByZXNzLiIvPgo8IS0tW2lmIGx0ZSBJRSA5XT48bGluayByZWw9InN0eWxlc2hlZXQiIHR5cGU9InRleHQvY3NzIiBocmVmPSJodHRwOi8vd3d3LmFnZW5jZXNzYWludGZlcmRpbmFuZC5jb20vd3AtY29udGVudC9wbHVnaW5zL2pzX2NvbXBvc2VyL2Fzc2V0cy9jc3MvdmNfbHRlX2llOS5taW4uY3NzIiBtZWRpYT0ic2NyZWVuIj48IVtlbmRpZl0tLT48bWV0YSBuYW1lPSJnZW5lcmF0b3IiIGNvbnRlbnQ9IlBvd2VyZWQgYnkgU2xpZGVyIFJldm9sdXRpb24gNS4wLjQuMSAtIHJlc3BvbnNpdmUsIE1vYmlsZS1GcmllbmRseSBTbGlkZXIgUGx1Z2luIGZvciBXb3JkUHJlc3Mgd2l0aCBjb21mb3J0YWJsZSBkcmFnIGFuZCBkcm9wIGludGVyZmFjZS4iIC8+Cjxub3NjcmlwdD48c3R5bGUgdHlwZT0idGV4dC9jc3MiPiAud3BiX2FuaW1hdGVfd2hlbl9hbG1vc3RfdmlzaWJsZSB7IG9wYWNpdHk6IDE7IH08L3N0eWxlPjwvbm9zY3JpcHQ+ICAgIDxtZXRhIHByb3BlcnR5PSJvZzppbWFnZSIgY29udGVudD0iaHR0cDovL3d3dy5hZ2VuY2Vzc2FpbnRmZXJkaW5hbmQuY29tL3dwLWNvbnRlbnQvdXBsb2Fkcy8yMDIwLzAxLzE5ODc2XzEuanBnIi8+CiAgICA8bWV0YSBwcm9wZXJ0eT0ib2c6aW1hZ2U6c2VjdXJlX3VybCIgY29udGVudD0iaHR0cDovL3d3dy5hZ2VuY2Vzc2FpbnRmZXJkaW5hbmQuY29tL3dwLWNvbnRlbnQvdXBsb2Fkcy8yMDIwLzAxLzE5ODc2XzEuanBnIiAvPgo8L2hlYWQ+CgoKPGJvZHkgY2xhc3M9ImVzdGF0ZV9wcm9wZXJ0eS10ZW1wbGF0ZS1kZWZhdWx0IHNpbmdsZSBzaW5nbGUtZXN0YXRlX3Byb3BlcnR5IHBvc3RpZC0yMDg5NjY2IHdwYi1qcy1jb21wb3NlciBqcy1jb21wLXZlci01LjQuNCB2Y19yZXNwb25zaXZlIj4gIAogICAgCgo8ZGl2IGNsYXNzPSJtb2JpbGV3cmFwcGVyIj4KICAgIDxkaXYgY2xhc3M9InNuYXAtZHJhd2VycyI+CiAgICAgICAgPCEtLSBMZWZ0IFNpZGViYXItLT4KICAgICAgICA8ZGl2IGNsYXNzPSJzbmFwLWRyYXdlciBzbmFwLWRyYXdlci1sZWZ0Ij4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ibW9iaWxlbWVudS1jbG9zZSI+PGkgY2xhc3M9ImZhIGZhLXRpbWVzIj48L2k+PC9kaXY+CiAgICAgICAgICAgIDx1bCBpZD0ibWVudS1tYWluLW1lbnUiIGNsYXNzPSJtb2JpbGV4LW1lbnUiPjxsaSBpZD0ibWVudS1pdGVtLTE3OTg3IiBjbGFzcz0ibWVudS1pdGVtIG1lbnUtaXRlbS10eXBlLXBvc3RfdHlwZSBtZW51LWl0ZW0tb2JqZWN0LXBhZ2UgbWVudS1pdGVtLTE3OTg3Ij48YSBocmVmPSJodHRwOi8vd3d3LmFnZW5jZXNzYWludGZlcmRpbmFuZC5jb20vdmVuZHJlLyI+VkVORFJFPC9hPjwvbGk+CjxsaSBpZD0ibWVudS1pdGVtLTE4MTA4IiBjbGFzcz0ibWVudS1pdGVtIG1lbnUtaXRlbS10eXBlLXBvc3RfdHlwZSBtZW51LWl0ZW0tb2JqZWN0LXBhZ2UgbWVudS1pdGVtLTE4MTA4Ij48YSBocmVmPSJodHRwOi8vd3d3LmFnZW5jZXNzYWludGZlcmRpbmFuZC5jb20vYWNoZXRlci8iPkFDSEVURVI8L2E+PC9saT4KPGxpIGlkPSJtZW51LWl0ZW0tMTgzMjEiIGNsYXNzPSJtZW51LWl0ZW0gbWVudS1pdGVtLXR5cGUtcG9zdF90eXBlIG1lbnUtaXRlbS1vYmplY3QtcGFnZSBtZW51LWl0ZW0tMTgzMjEiPjxhIGhyZWY9Imh0dHA6Ly93d3cuYWdlbmNlc3NhaW50ZmVyZGluYW5kLmNvbS9sb3Vlci8iPkxPVUVSPC9hPjwvbGk+CjxsaSBpZD0ibWVudS1pdGVtLTE3OTkwIiBjbGFzcz0ibWVudS1pdGVtIG1lbnUtaXRlbS10eXBlLXBvc3RfdHlwZSBtZW51LWl0ZW0tb2JqZWN0LXBhZ2UgbWVudS1pdGVtLTE3OTkwIj48YSBocmVmPSJodHRwOi8vd3d3LmFnZW5jZXNzYWludGZlcmRpbmFuZC5jb20vZ2VyZXIvIj5Hw4lSRVI8L2E+PC9saT4KPGxpIGlkPSJtZW51LWl0ZW0tMTgzMzEiIGNsYXNzPSJtZW51LWl0ZW0gbWVudS1pdGVtLXR5cGUtcG9zdF90eXBlIG1lbnUtaXRlbS1vYmplY3QtcGFnZSBtZW51LWl0ZW0tMTgzMzEiPjxhIGhyZWY9Imh0dHA6Ly93d3cuYWdlbmNlc3NhaW50ZmVyZGluYW5kLmNvbS9sZS1ncm91cGUvIj5MRSBHUk9VUEU8L2E+PC9saT4KPGxpIGlkPSJtZW51LWl0ZW0tMTc5MzkiIGNsYXNzPSJtZW51LWl0ZW0gbWVudS1pdGVtLXR5cGUtcG9zdF90eXBlIG1lbnUtaXRlbS1vYmplY3QtcGFnZSBtZW51LWl0ZW0tMTc5MzkiPjxhIGhyZWY9Imh0dHA6Ly93d3cuYWdlbmNlc3NhaW50ZmVyZGluYW5kLmNvbS9hZ2VuY2VzLWltbW9iaWxpZXJlcy1wYXJpcy8iPkxFUyBBR0VOQ0VTPC9hPjwvbGk+CjxsaSBpZD0ibWVudS1pdGVtLTIwODkzMDYiIGNsYXNzPSJtZW51LWl0ZW0gbWVudS1pdGVtLXR5cGUtdGF4b25vbXkgbWVudS1pdGVtLW9iamVjdC1jYXRlZ29yeSBtZW51LWl0ZW0tMjA4OTMwNiI+PGEgaHJlZj0iaHR0cDovL3d3dy5hZ2VuY2Vzc2FpbnRmZXJkaW5hbmQuY29tL2NhdGVnb3J5L2FjdHVhbGl0ZXMvIj5BQ1RVQUxJVMOJUzwvYT48L2xpPgo8bGkgaWQ9Im1lbnUtaXRlbS0xNzc1MSIgY2xhc3M9Im1lbnUtaXRlbSBtZW51LWl0ZW0tdHlwZS1wb3N0X3R5cGUgbWVudS1pdGVtLW9iamVjdC1wYWdlIG1lbnUtaXRlbS0xNzc1MSI+PGEgaHJlZj0iaHR0cDovL3d3dy5hZ2VuY2Vzc2FpbnRmZXJkaW5hbmQuY29tL2NvbnRhY3QvIj5DT05UQUNUPC9hPjwvbGk+CjwvdWw+ICAgICAgICA8L2Rpdj4KICAgIDwvZGl2Pgo8L2Rpdj4gCiAgICAKPGRpdiBjbGFzcz0id2Vic2l0ZS13cmFwcGVyIiBpZD0iYWxsX3dyYXBwZXIiID4KPGRpdiBjbGFzcz0iY29udGFpbmVyIG1haW5fd3JhcHBlciAgd2lkZSAgIj4KICAgIDxkaXYgY2xhc3M9Im1vYmlsZV9oZWFkZXIiPgogICAgPGRpdiBjbGFzcz0ibW9iaWxlLXRyaWdnZXIiPjxpIGNsYXNzPSIgZmEgZmEtYmFycyI+PC9pPjwvZGl2PgogICAgPGRpdiBjbGFzcz0ibW9iaWxlLWxvZ28iPgogICAgICAgIDxhIGhyZWY9Imh0dHA6Ly93d3cuYWdlbmNlc3NhaW50ZmVyZGluYW5kLmNvbSI+CiAgICAgICAgPGltZyBzcmM9Imh0dHA6Ly93d3cuc2FpbnRmZXJkaW5hbmQuZnIvd3AtY29udGVudC91cGxvYWRzLzIwMTUvMTIvbG9nb19ncmFuZC5wbmciIGNsYXNzPSJpbWctcmVzcG9uc2l2ZSByZXRpbmFfcmVhZHkgIiBhbHQ9ImxvZ28iLz4gICAgICAgIDwvYT4KICAgIDwvZGl2PiAgICAKPC9kaXY+ICAgICAgICAKICAgIDxkaXYgY2xhc3M9Im1hc3Rlcl9oZWFkZXIgIHdpZGUgICBoZWFkZXJfdHJhbnNwYXJlbnQgIj4KICAgICAgICAKICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAKICAgICAgICAKICAgICAgICA8ZGl2IGNsYXNzPSJoZWFkZXJfd3JhcHBlciBoZWFkZXJfdHlwZTEgIj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iaGVhZGVyX3dyYXBwZXJfaW5zaWRlIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJsb2dvIiA+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cDovL3d3dy5hZ2VuY2Vzc2FpbnRmZXJkaW5hbmQuY29tIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBzdHlsZT0ibWFyZ2luLXRvcDoyMHB4OyIgc3JjPSJodHRwOi8vd3d3LnNhaW50ZmVyZGluYW5kLmZyL3dwLWNvbnRlbnQvdXBsb2Fkcy8yMDE1LzEyL2xvZ29fZ3JhbmQucG5nIiBjbGFzcz0iaW1nLXJlc3BvbnNpdmUgcmV0aW5hX3JlYWR5IiBhbHQ9ImxvZ28iLz4gICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgIDwvZGl2PiAgIAoKICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIAogICAKICAgIDxkaXYgY2xhc3M9InVzZXJfbWVudSIgaWQ9InVzZXJfbWVudV91Ij4gICAKICAgICAgICA8YSBjbGFzcz0ibWVudV91c2VyX3Rvb2xzIGRyb3Bkb3duIiBpZD0idXNlcl9tZW51X3RyaWdnZXIiIGRhdGEtdG9nZ2xlPSJkcm9wZG93biI+ICA8aSBjbGFzcz0iZmEgZmEtYmFycyI+PC9pPjwvYT4KICAgICAgICA8ZGl2IGNsYXNzPSJzdWJtaXRfYWN0aW9uIj5Db25uZXhpb248L2Rpdj4KICAgCiAgICAgICAgICAgICAgICAgIAogICAgPC9kaXY+IAogICAgICAgIAogICAgICAgIAogICAgICAgICAgICAgICAgCiAgICAgICAgCiAgICAgICAgCiAgICAgICAgCjxkaXYgaWQ9InVzZXJfbWVudV9vcGVuIiBjbGFzcz0iZHJvcGRvd24tbWVudSB0b3BtZW51eCIgPgogICAgPGRpdiBjbGFzcz0ibG9naW5fc2lkZWJhciI+CiAgICAgICAgPGgzIGNsYXNzPSJ3aWRnZXQtdGl0bGUtc2lkZWJhciIgIGlkPSJsb2dpbi1kaXYtdGl0bGUtdG9wYmFyIj5Mb2dpbjwvaDM+CiAgICAgICAgPGRpdiBjbGFzcz0ibG9naW5fZm9ybSIgaWQ9ImxvZ2luLWRpdl90b3BiYXIiPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJsb2dpbmFsZXJ0IiBpZD0ibG9naW5fbWVzc2FnZV9hcmVhX3RvcGJhciIgPiA8L2Rpdj4KICAgIAogICAgICAgICAgICA8aW5wdXQgdHlwZT0idGV4dCIgY2xhc3M9ImZvcm0tY29udHJvbCIgbmFtZT0ibG9nIiBpZD0ibG9naW5fdXNlcl90b3BiYXIiIHBsYWNlaG9sZGVyPSJOb20gZCd1dGlsaXNhdGV1ciIvPgogICAgICAgICAgICA8aW5wdXQgdHlwZT0icGFzc3dvcmQiIGNsYXNzPSJmb3JtLWNvbnRyb2wiIG5hbWU9InB3ZCIgaWQ9ImxvZ2luX3B3ZF90b3BiYXIiIHBsYWNlaG9sZGVyPSJNb3QgZGUgcGFzc2UiLz4KICAgICAgICAgICAgPGlucHV0IHR5cGU9ImhpZGRlbiIgbmFtZT0ibG9naW5wb3AiIGlkPSJsb2dpbnBvcF93ZF90b3BiYXIiIHZhbHVlPSIwIj4KICAgICAgICAgICAgPGlucHV0IHR5cGU9ImhpZGRlbiIgaWQ9InNlY3VyaXR5LWxvZ2luLXRvcGJhciIgbmFtZT0ic2VjdXJpdHktbG9naW4tdG9wYmFyIiB2YWx1ZT0iZTc4YWE1YTc4MyIgLz48aW5wdXQgdHlwZT0iaGlkZGVuIiBuYW1lPSJfd3BfaHR0cF9yZWZlcmVyIiB2YWx1ZT0iL3Byb3BlcnRpZXMvdmljdG9yLWh1Z28tNS1waWVjZXMvIiAvPiAgIAogICAgICAgICAKICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz0id3BiX2J1dHRvbiAgd3BiX2J0bi1pbmZvIHdwYl9idG4tbGFyZ2UiIGlkPSJ3cC1sb2dpbi1idXQtdG9wYmFyIj5Mb2dpbjwvYnV0dG9uPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJsb2dpbi1saW5rcyI+CiAgICAgICAgICAgICAgICA8YSBocmVmPSIjIiBpZD0id2lkZ2V0X3JlZ2lzdGVyX3RvcGJhciI+QmVzb2luIGQndW4gY29tcHRlID8gSW5zY3JpdmV6LXZvdXMgaWNpICE8L2E+CiAgICAgICAgICAgICAgICA8YSBocmVmPSIjIiBpZD0iZm9yZ290X3Bhc3NfdG9wYmFyIj5Nb3QgZGUgcGFzc2Ugb3VibGnDqSA/PC9hPgogICAgICAgICAgICAgICAgPGRpdiBpZD0iZmFjZWJvb2tsb2dpbnNpZGViYXJfdG9wYmFyIiBkYXRhLXNvY2lhbD0iZmFjZWJvb2siPjwvZGl2PiAgICAgICAgICAgIDwvZGl2PiAgICAKICAgICAgIDwvZGl2PgoKICAgICAgICA8aDMgY2xhc3M9IndpZGdldC10aXRsZS1zaWRlYmFyIiAgaWQ9InJlZ2lzdGVyLWRpdi10aXRsZS10b3BiYXIiPlMnaW5zY3JpcmU8L2gzPgogICAgICAgIDxkaXYgY2xhc3M9ImxvZ2luX2Zvcm0iIGlkPSJyZWdpc3Rlci1kaXYtdG9wYmFyIj4KCiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImxvZ2luYWxlcnQiIGlkPSJyZWdpc3Rlcl9tZXNzYWdlX2FyZWFfdG9wYmFyIiA+PC9kaXY+CiAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJ0ZXh0IiBuYW1lPSJ1c2VyX2xvZ2luX3JlZ2lzdGVyIiBpZD0idXNlcl9sb2dpbl9yZWdpc3Rlcl90b3BiYXIiIGNsYXNzPSJmb3JtLWNvbnRyb2wiIHBsYWNlaG9sZGVyPSJOb20gZCd1dGlsaXNhdGV1ciIvPgogICAgICAgICAgICA8aW5wdXQgdHlwZT0idGV4dCIgbmFtZT0idXNlcl9lbWFpbF9yZWdpc3RlciIgaWQ9InVzZXJfZW1haWxfcmVnaXN0ZXJfdG9wYmFyIiBjbGFzcz0iZm9ybS1jb250cm9sIiBwbGFjZWhvbGRlcj0iTWVzc2FnZXJpZSIgIC8+CiAgICAgICAgICAgIAogICAgICAgICAgICAgPGlucHV0IHR5cGU9InBhc3N3b3JkIiBuYW1lPSJ1c2VyX3Bhc3N3b3JkIiBpZD0idXNlcl9wYXNzd29yZF90b3BiYXIiIGNsYXNzPSJmb3JtLWNvbnRyb2wiIHBsYWNlaG9sZGVyPSJNb3QgZGUgcGFzc2UiLz4KICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJwYXNzd29yZCIgbmFtZT0idXNlcl9wYXNzd29yZF9yZXR5cGUiIGlkPSJ1c2VyX3Bhc3N3b3JkX3RvcGJhcl9yZXR5cGUiIGNsYXNzPSJmb3JtLWNvbnRyb2wiIHBsYWNlaG9sZGVyPSJSZXR5cGUgUGFzc3dvcmQiICAvPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJjaGVja2JveCIgbmFtZT0idGVybXMiIGlkPSJ1c2VyX3Rlcm1zX3JlZ2lzdGVyX3RvcGJhciIgLz4KICAgICAgICAgICAgPGxhYmVsIGlkPSJ1c2VyX3Rlcm1zX3JlZ2lzdGVyX3RvcGJhcl9sYWJlbCIgZm9yPSJ1c2VyX3Rlcm1zX3JlZ2lzdGVyX3RvcGJhciI+SSBhZ3JlZSB3aXRoIDxhIGhyZWY9Imh0dHA6Ly93d3cuYWdlbmNlc3NhaW50ZmVyZGluYW5kLmNvbSAiIHRhcmdldD0iX2JsYW5rIiBpZD0idXNlcl90ZXJtc19yZWdpc3Rlcl90b3BiYXJfbGluayI+dGVybXMgJiBjb25kaXRpb25zPC9hPiA8L2xhYmVsPgogICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICA8aW5wdXQgdHlwZT0iaGlkZGVuIiBpZD0ic2VjdXJpdHktcmVnaXN0ZXItdG9wYmFyIiBuYW1lPSJzZWN1cml0eS1yZWdpc3Rlci10b3BiYXIiIHZhbHVlPSI0NjU0MWY4MjkzIiAvPjxpbnB1dCB0eXBlPSJoaWRkZW4iIG5hbWU9Il93cF9odHRwX3JlZmVyZXIiIHZhbHVlPSIvcHJvcGVydGllcy92aWN0b3ItaHVnby01LXBpZWNlcy8iIC8+ICAgCiAgICAgICAgICAgIAogICAgICAgICAgICA8YnV0dG9uIGNsYXNzPSJ3cGJfYnV0dG9uICB3cGJfYnRuLWluZm8gd3BiX2J0bi1sYXJnZSIgaWQ9IndwLXN1Ym1pdC1yZWdpc3Rlcl90b3BiYXIiID5TJ2luc2NyaXJlPC9idXR0b24+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImxvZ2luLWxpbmtzIj4KICAgICAgICAgICAgICAgIDxhIGhyZWY9IiMiIGlkPSJ3aWRnZXRfbG9naW5fdG9wYmFyIj5SZXRvdXIgw6AgbGEgcGFnZSBkZSBjb25uZXhpb248L2E+ICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgPC9kaXY+ICAgCiAgICAgICAgPC9kaXY+CiAgICAgICAgCiAgICAgICAgPGgzIGNsYXNzPSJ3aWRnZXQtdGl0bGUtc2lkZWJhciIgIGlkPSJmb3Jnb3QtZGl2LXRpdGxlLXRvcGJhciI+UsOpaW5pdGlhbGlzZXIgbW90IGRlIHBhc3NlPC9oMz4KICAgICAgICA8ZGl2IGNsYXNzPSJsb2dpbl9mb3JtIiBpZD0iZm9yZ290LXBhc3MtZGl2Ij4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ibG9naW5hbGVydCIgaWQ9ImZvcmdvdF9wYXNzX2FyZWFfdG9wYmFyIj48L2Rpdj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ibG9naW5yb3ciPgogICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJ0ZXh0IiBjbGFzcz0iZm9ybS1jb250cm9sIiBuYW1lPSJmb3Jnb3RfZW1haWwiIGlkPSJmb3Jnb3RfZW1haWxfdG9wYmFyIiBwbGFjZWhvbGRlcj0iRW50cmV6IHZvdHJlIGFkcmVzc2UgRS1tYWlsIiBzaXplPSIyMCIgLz4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJoaWRkZW4iIGlkPSJzZWN1cml0eS1mb3Jnb3QtdG9wYmFyIiBuYW1lPSJzZWN1cml0eS1mb3Jnb3QtdG9wYmFyIiB2YWx1ZT0iNDBhNGJkYjdmMCIgLz48aW5wdXQgdHlwZT0iaGlkZGVuIiBuYW1lPSJfd3BfaHR0cF9yZWZlcmVyIiB2YWx1ZT0iL3Byb3BlcnRpZXMvdmljdG9yLWh1Z28tNS1waWVjZXMvIiAvPiAgCiAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJoaWRkZW4iIGlkPSJwb3N0aWQiIHZhbHVlPSInLiRwb3N0X2lkLiciPiAgICAKICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz0id3BiX2J1dHRvbiAgd3BiX2J0bi1pbmZvIHdwYl9idG4tbGFyZ2UgIHZjX2J1dHRvbiIgaWQ9IndwLWZvcmdvdC1idXQtdG9wYmFyIiBuYW1lPSJmb3Jnb3QiID5Sw6lpbml0aWFsaXNlciBtb3QgZGUgcGFzc2U8L2J1dHRvbj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ibG9naW4tbGlua3Mgc2hvcnRsb2ciPgogICAgICAgICAgICA8YSBocmVmPSIjIiBpZD0icmV0dXJuX2xvZ2luX3RvcGJhciI+UmV2ZW5pciDDoCBsYSBjb25uZXhpb248L2E+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgogICAgICAgIAogICAgICAgIAogICAgPC9kaXY+CjwvZGl2PgogICAgCiAgICAgICAgICAgICAgICA8bmF2IGlkPSJhY2Nlc3MiPgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Im1lbnUtbWFpbi1tZW51LWNvbnRhaW5lciI+PHVsIGlkPSJtZW51LW1haW4tbWVudS0xIiBjbGFzcz0ibWVudSI+PGxpIGNsYXNzPSJtZW51LWl0ZW0gbWVudS1pdGVtLXR5cGUtcG9zdF90eXBlIG1lbnUtaXRlbS1vYmplY3QtcGFnZSBtZW51LWl0ZW0tMTc5ODciPjxhIGhyZWY9Imh0dHA6Ly93d3cuYWdlbmNlc3NhaW50ZmVyZGluYW5kLmNvbS92ZW5kcmUvIj5WRU5EUkU8L2E+PC9saT4KPGxpIGNsYXNzPSJtZW51LWl0ZW0gbWVudS1pdGVtLXR5cGUtcG9zdF90eXBlIG1lbnUtaXRlbS1vYmplY3QtcGFnZSBtZW51LWl0ZW0tMTgxMDgiPjxhIGhyZWY9Imh0dHA6Ly93d3cuYWdlbmNlc3NhaW50ZmVyZGluYW5kLmNvbS9hY2hldGVyLyI+QUNIRVRFUjwvYT48L2xpPgo8bGkgY2xhc3M9Im1lbnUtaXRlbSBtZW51LWl0ZW0tdHlwZS1wb3N0X3R5cGUgbWVudS1pdGVtLW9iamVjdC1wYWdlIG1lbnUtaXRlbS0xODMyMSI+PGEgaHJlZj0iaHR0cDovL3d3dy5hZ2VuY2Vzc2FpbnRmZXJkaW5hbmQuY29tL2xvdWVyLyI+TE9VRVI8L2E+PC9saT4KPGxpIGNsYXNzPSJtZW51LWl0ZW0gbWVudS1pdGVtLXR5cGUtcG9zdF90eXBlIG1lbnUtaXRlbS1vYmplY3QtcGFnZSBtZW51LWl0ZW0tMTc5OTAiPjxhIGhyZWY9Imh0dHA6Ly93d3cuYWdlbmNlc3NhaW50ZmVyZGluYW5kLmNvbS9nZXJlci8iPkfDiVJFUjwvYT48L2xpPgo8bGkgY2xhc3M9Im1lbnUtaXRlbSBtZW51LWl0ZW0tdHlwZS1wb3N0X3R5cGUgbWVudS1pdGVtLW9iamVjdC1wYWdlIG1lbnUtaXRlbS0xODMzMSI+PGEgaHJlZj0iaHR0cDovL3d3dy5hZ2VuY2Vzc2FpbnRmZXJkaW5hbmQuY29tL2xlLWdyb3VwZS8iPkxFIEdST1VQRTwvYT48L2xpPgo8bGkgY2xhc3M9Im1lbnUtaXRlbSBtZW51LWl0ZW0tdHlwZS1wb3N0X3R5cGUgbWVudS1pdGVtLW9iamVjdC1wYWdlIG1lbnUtaXRlbS0xNzkzOSI+PGEgaHJlZj0iaHR0cDovL3d3dy5hZ2VuY2Vzc2FpbnRmZXJkaW5hbmQuY29tL2FnZW5jZXMtaW1tb2JpbGllcmVzLXBhcmlzLyI+TEVTIEFHRU5DRVM8L2E+PC9saT4KPGxpIGNsYXNzPSJtZW51LWl0ZW0gbWVudS1pdGVtLXR5cGUtdGF4b25vbXkgbWVudS1pdGVtLW9iamVjdC1jYXRlZ29yeSBtZW51LWl0ZW0tMjA4OTMwNiI+PGEgaHJlZj0iaHR0cDovL3d3dy5hZ2VuY2Vzc2FpbnRmZXJkaW5hbmQuY29tL2NhdGVnb3J5L2FjdHVhbGl0ZXMvIj5BQ1RVQUxJVMOJUzwvYT48L2xpPgo8bGkgY2xhc3M9Im1lbnUtaXRlbSBtZW51LWl0ZW0tdHlwZS1wb3N0X3R5cGUgbWVudS1pdGVtLW9iamVjdC1wYWdlIG1lbnUtaXRlbS0xNzc1MSI+PGEgaHJlZj0iaHR0cDovL3d3dy5hZ2VuY2Vzc2FpbnRmZXJkaW5hbmQuY29tL2NvbnRhY3QvIj5DT05UQUNUPC9hPjwvbGk+CjwvdWw+PC9kaXY+ICAgICAgICAgICAgICAgIDwvbmF2PjwhLS0gI2FjY2VzcyAtLT4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgoKICAgICA8L2Rpdj4gCiAgICAKICAgIDxkaXYgY2xhc3M9ImhlYWRlcl9tZWRpYSI+CjxpbWcgc3JjPSJodHRwOi8vd3d3LnNhaW50ZmVyZGluYW5kLmZyL3dwLWNvbnRlbnQvdXBsb2Fkcy8yMDE1LzEyL2FjY3VlaWwxcjIxLmpwZyIgIGNsYXNzPSJpbWctcmVzcG9uc2l2ZSIgY2xhc3M9ImhlYWRlcmltZyIgYWx0PSJoZWFkZXJfaW1hZ2UiLz4gICAgCiAgIAo8L2Rpdj4KCiAgIAogICAgCiAgPGRpdiBjbGFzcz0iY29udGFpbmVyIGNvbnRlbnRfd3JhcHBlciI+CgoKPGRpdiBjbGFzcz0icm93Ij4KICAgIDxkaXYgY2xhc3M9ImNvbC14cy0xMiBjb2wtbWQtMTIgYnJlYWRjcnVtYl9jb250YWluZXIiPjxvbCBjbGFzcz0iYnJlYWRjcnVtYiI+CiAgICAgICAgICAgPGxpPjxhIGhyZWY9Imh0dHA6Ly93d3cuYWdlbmNlc3NhaW50ZmVyZGluYW5kLmNvbSI+QWNjdWVpbDwvYT48L2xpPjxsaT48YSBocmVmPSJodHRwOi8vd3d3LmFnZW5jZXNzYWludGZlcmRpbmFuZC5jb20vbGlzdGluZ3MvYXBwYXJ0ZW1lbnQvIiByZWw9InRhZyI+QXBwYXJ0ZW1lbnQ8L2E+PC9saT48bGkgY2xhc3M9ImFjdGl2ZSI+VmljdG9yIEh1Z28gJiM4MjExOyA1IHBpw6hjZShzKTwvbGk+PC9vbD48L2Rpdj4gICAgPGRpdiBjbGFzcz0iIGNvbC1tZC05IHJpZ2h0bWFyZ2luICI+CiAgICAgICAgCjxzcGFuIGNsYXNzPSJlbnRyeS10aXRsZSBsaXN0aW5nX2xvYWRlcl90aXRsZSI+UsOpc3VsdGF0IGRlIHZvdHJlIHJlY2hlcmNoZTwvc3Bhbj4KCjxkaXYgY2xhc3M9InNwaW5uZXIiIGlkPSJsaXN0aW5nX2xvYWRlciI+CiAgPGRpdiBjbGFzcz0icmVjdDEiPjwvZGl2PgogIDxkaXYgY2xhc3M9InJlY3QyIj48L2Rpdj4KICA8ZGl2IGNsYXNzPSJyZWN0MyI+PC9kaXY+CiAgPGRpdiBjbGFzcz0icmVjdDQiPjwvZGl2PgogIDxkaXYgY2xhc3M9InJlY3Q1Ij48L2Rpdj4KPC9kaXY+Cgo8ZGl2IGlkPSJsaXN0aW5nX2FqYXhfY29udGFpbmVyIj4KCjwvZGl2PgogICAgICAgICAgICAgICAgCiAgICAgICAgPGgxIGNsYXNzPSJlbnRyeS10aXRsZSBlbnRyeS1wcm9wIj5WaWN0b3IgSHVnbyAmIzgyMTE7IDUgcGnDqGNlKHMpPC9oMT4gICAKICAgICAgICA8c3BhbiBjbGFzcz0icHJpY2VfYXJlYSI+Mi4wNTAuMDAwIOKCrCA8c3BhbiBjbGFzcz0icHJpY2VfbGFiZWwiPio8L3NwYW4+PC9zcGFuPgogICAgICAgIDxkaXYgY2xhc3M9InNpbmdsZS1jb250ZW50IGxpc3RpbmctY29udGVudCI+CiAgICAgICAgICAgIAogICAgICAgICAgCiAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgCiAgICAgICAgPGRpdiBjbGFzcz0ibm90aWNlX2FyZWEiPiAgICAgICAgICAgCiAgICAgICAgICAgIAogICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9wZXJ0eV9jYXRlZ3MiPgogICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cDovL3d3dy5hZ2VuY2Vzc2FpbnRmZXJkaW5hbmQuY29tL2xpc3RpbmdzL2FwcGFydGVtZW50LyIgcmVsPSJ0YWciPkFwcGFydGVtZW50PC9hPiBkYW5zIDxhIGhyZWY9Imh0dHA6Ly93d3cuYWdlbmNlc3NhaW50ZmVyZGluYW5kLmNvbS9hY3Rpb24vdmVudGUvIiByZWw9InRhZyI+VmVudGU8L2E+ICAgICAgICAgICAgCiAgICAgICAgICAgIDwvZGl2PiAgCiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJhZHJlc19hcmVhIj5WaWN0b3IgSHVnbywgPGEgaHJlZj0iaHR0cDovL3d3dy5hZ2VuY2Vzc2FpbnRmZXJkaW5hbmQuY29tL2NpdHkvcGFyaXMtMTYvIiByZWw9InRhZyI+UGFyaXMgMTY8L2E+LCA8YSBocmVmPSJodHRwOi8vd3d3LmFnZW5jZXNzYWludGZlcmRpbmFuZC5jb20vYXJlYS92aWN0b3ItaHVnby8iIHJlbD0idGFnIj5WaWN0b3IgSHVnbzwvYT48L3NwYW4+ICAgCiAgICAgICAgICAgIAogICAgICAgICAgIDxkaXYgaWQ9ImFkZF9mYXZvcml0ZXMiIGNsYXNzPSJpc25vdGZhdm9yaXRlIiBkYXRhLXBvc3RpZD0iMjA4OTY2NiI+QWpvdXRlciBhdXggZmF2b3JpczwvZGl2PiAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAKICAgICAgICAgICA8ZGl2IGNsYXNzPSJkb3dubG9hZF9wZGYiPgogICAgICAgICAgICAgICAKICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAKICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvcF9zb2NpYWwiPgogICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cDovL3d3dy5mYWNlYm9vay5jb20vc2hhcmVyLnBocD91PWh0dHA6Ly93d3cuYWdlbmNlc3NhaW50ZmVyZGluYW5kLmNvbS9wcm9wZXJ0aWVzL3ZpY3Rvci1odWdvLTUtcGllY2VzLyZhbXA7dD1WaWN0b3IrSHVnbyslMjYlMjM4MjExJTNCKzUrcGklQzMlQThjZSUyOHMlMjkiIHRhcmdldD0iX2JsYW5rIiBjbGFzcz0ic2hhcmVfZmFjZWJvb2siPjxpIGNsYXNzPSJmYSBmYS1mYWNlYm9vayBmYS0yIj48L2k+PC9hPgogICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cDovL3R3aXR0ZXIuY29tL2hvbWU/c3RhdHVzPVZpY3RvcitIdWdvKyUyNiUyMzgyMTElM0IrNStwaSVDMyVBOGNlJTI4cyUyOStodHRwJTNBJTJGJTJGd3d3LmFnZW5jZXNzYWludGZlcmRpbmFuZC5jb20lMkZwcm9wZXJ0aWVzJTJGdmljdG9yLWh1Z28tNS1waWVjZXMlMkYiIGNsYXNzPSJzaGFyZV90d2VldCIgdGFyZ2V0PSJfYmxhbmsiPjxpIGNsYXNzPSJmYSBmYS10d2l0dGVyIGZhLTIiPjwvaT48L2E+CiAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL3BsdXMuZ29vZ2xlLmNvbS9zaGFyZT91cmw9aHR0cDovL3d3dy5hZ2VuY2Vzc2FpbnRmZXJkaW5hbmQuY29tL3Byb3BlcnRpZXMvdmljdG9yLWh1Z28tNS1waWVjZXMvIiBvbmNsaWNrPSJqYXZhc2NyaXB0OndpbmRvdy5vcGVuKHRoaXMuaHJlZiwnJywgJ21lbnViYXI9bm8sdG9vbGJhcj1ubyxyZXNpemFibGU9eWVzLHNjcm9sbGJhcnM9eWVzLGhlaWdodD02MDAsd2lkdGg9NjAwJyk7cmV0dXJuIGZhbHNlOyIgdGFyZ2V0PSJfYmxhbmsiIGNsYXNzPSJzaGFyZV9nb29nbGUiPjxpIGNsYXNzPSJmYSBmYS1nb29nbGUtcGx1cyBmYS0yIj48L2k+PC9hPiAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwOi8vcGludGVyZXN0LmNvbS9waW4vY3JlYXRlL2J1dHRvbi8/dXJsPWh0dHA6Ly93d3cuYWdlbmNlc3NhaW50ZmVyZGluYW5kLmNvbS9wcm9wZXJ0aWVzL3ZpY3Rvci1odWdvLTUtcGllY2VzLyZhbXA7bWVkaWE9aHR0cDovL3d3dy5hZ2VuY2Vzc2FpbnRmZXJkaW5hbmQuY29tL3dwLWNvbnRlbnQvdXBsb2Fkcy8yMDIwLzAxLzE5ODc2XzEtMTQwMHg3OTAuanBnJmFtcDtkZXNjcmlwdGlvbj1WaWN0b3IrSHVnbyslMjYlMjM4MjExJTNCKzUrcGklQzMlQThjZSUyOHMlMjkiIHRhcmdldD0iX2JsYW5rIiBjbGFzcz0ic2hhcmVfcGludGVyZXN0Ij4gPGkgY2xhc3M9ImZhIGZhLXBpbnRlcmVzdCBmYS0yIj48L2k+IDwvYT4gICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZmEgZmEtcHJpbnQiIGlkPSJwcmludF9wYWdlIiBkYXRhLXByb3BpZD0iMjA4OTY2NiI+PC9pPgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2Rpdj4gICAgCiAgICAgICAgICAgIAogICAgICAgIAkJCgoKICAgICAgICAgICAKICAgIDxkaXYgaWQ9ImNhcm91c2VsLWxpc3RpbmciIGNsYXNzPSJjYXJvdXNlbCBzbGlkZSBwb3N0LWNhcnVzZWwiIGRhdGEtcmlkZT0iY2Fyb3VzZWwiIGRhdGEtaW50ZXJ2YWw9ImZhbHNlIj4KICAgICAgICA8ZGl2IGNsYXNzPSJzbGlkZXItcHJvcGVydHktc3RhdHVzIHJpYmJvbi13cmFwcGVyLURpc3BvbmlibGUgRGlzcG9uaWJsZSI+RGlzcG9uaWJsZTwvZGl2PiAgICAgICAgCiAgICAgICAgCiAgICAgICAgCgogICAgPCEtLSBXcmFwcGVyIGZvciBzbGlkZXMgLS0+CiAgICA8ZGl2IGNsYXNzPSJjYXJvdXNlbC1pbm5lciI+CiAgICAgIDxkaXYgY2xhc3M9Iml0ZW0gIGFjdGl2ZSAgIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cDovL3d3dy5hZ2VuY2Vzc2FpbnRmZXJkaW5hbmQuY29tL3dwLWNvbnRlbnQvdXBsb2Fkcy8yMDIwLzAxLzE5ODc2XzEuanBnIiByZWw9InByZXR0eVBob3RvW3BwX2dhbF0iIGNsYXNzPSJwcmV0dHlnYWxlcnkiPiAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW1nICBzcmM9Imh0dHA6Ly93d3cuYWdlbmNlc3NhaW50ZmVyZGluYW5kLmNvbS93cC1jb250ZW50L3VwbG9hZHMvMjAyMC8wMS8xOTg3Nl8xLTgzNXg0NjcuanBnIiAgYWx0PSIiIGNsYXNzPSJpbWctcmVzcG9uc2l2ZSIgLz4KICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj48ZGl2IGNsYXNzPSJpdGVtICAiPgogICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwOi8vd3d3LmFnZW5jZXNzYWludGZlcmRpbmFuZC5jb20vd3AtY29udGVudC91cGxvYWRzLzIwMjAvMDEvMTk4NzZfMi5qcGciIHJlbD0icHJldHR5UGhvdG9bcHBfZ2FsXSIgY2xhc3M9InByZXR0eWdhbGVyeSIgPiAKICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgIHNyYz0iaHR0cDovL3d3dy5hZ2VuY2Vzc2FpbnRmZXJkaW5hbmQuY29tL3dwLWNvbnRlbnQvdXBsb2Fkcy8yMDIwLzAxLzE5ODc2XzItODM1eDQ2Ny5qcGciIGFsdD0iaXRlbSIgY2xhc3M9ImltZy1yZXNwb25zaXZlIiAvPgogICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj48ZGl2IGNsYXNzPSJpdGVtICAiPgogICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwOi8vd3d3LmFnZW5jZXNzYWludGZlcmRpbmFuZC5jb20vd3AtY29udGVudC91cGxvYWRzLzIwMjAvMDEvMTk4NzZfMy5qcGciIHJlbD0icHJldHR5UGhvdG9bcHBfZ2FsXSIgY2xhc3M9InByZXR0eWdhbGVyeSIgPiAKICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgIHNyYz0iaHR0cDovL3d3dy5hZ2VuY2Vzc2FpbnRmZXJkaW5hbmQuY29tL3dwLWNvbnRlbnQvdXBsb2Fkcy8yMDIwLzAxLzE5ODc2XzMtODM1eDQ2Ny5qcGciIGFsdD0iaXRlbSIgY2xhc3M9ImltZy1yZXNwb25zaXZlIiAvPgogICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj48ZGl2IGNsYXNzPSJpdGVtICAiPgogICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwOi8vd3d3LmFnZW5jZXNzYWludGZlcmRpbmFuZC5jb20vd3AtY29udGVudC91cGxvYWRzLzIwMjAvMDEvMTk4NzZfNC5qcGciIHJlbD0icHJldHR5UGhvdG9bcHBfZ2FsXSIgY2xhc3M9InByZXR0eWdhbGVyeSIgPiAKICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgIHNyYz0iaHR0cDovL3d3dy5hZ2VuY2Vzc2FpbnRmZXJkaW5hbmQuY29tL3dwLWNvbnRlbnQvdXBsb2Fkcy8yMDIwLzAxLzE5ODc2XzQtODM1eDQ2Ny5qcGciIGFsdD0iaXRlbSIgY2xhc3M9ImltZy1yZXNwb25zaXZlIiAvPgogICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj48ZGl2IGNsYXNzPSJpdGVtICAiPgogICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwOi8vd3d3LmFnZW5jZXNzYWludGZlcmRpbmFuZC5jb20vd3AtY29udGVudC91cGxvYWRzLzIwMjAvMDEvMTk4NzZfNS5qcGciIHJlbD0icHJldHR5UGhvdG9bcHBfZ2FsXSIgY2xhc3M9InByZXR0eWdhbGVyeSIgPiAKICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgIHNyYz0iaHR0cDovL3d3dy5hZ2VuY2Vzc2FpbnRmZXJkaW5hbmQuY29tL3dwLWNvbnRlbnQvdXBsb2Fkcy8yMDIwLzAxLzE5ODc2XzUtODM1eDQ2Ny5qcGciIGFsdD0iaXRlbSIgY2xhc3M9ImltZy1yZXNwb25zaXZlIiAvPgogICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj48ZGl2IGNsYXNzPSJpdGVtICAiPgogICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwOi8vd3d3LmFnZW5jZXNzYWludGZlcmRpbmFuZC5jb20vd3AtY29udGVudC91cGxvYWRzLzIwMjAvMDEvMTk4NzZfNi5qcGciIHJlbD0icHJldHR5UGhvdG9bcHBfZ2FsXSIgY2xhc3M9InByZXR0eWdhbGVyeSIgPiAKICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgIHNyYz0iaHR0cDovL3d3dy5hZ2VuY2Vzc2FpbnRmZXJkaW5hbmQuY29tL3dwLWNvbnRlbnQvdXBsb2Fkcy8yMDIwLzAxLzE5ODc2XzYtODM1eDQ2Ny5qcGciIGFsdD0iaXRlbSIgY2xhc3M9ImltZy1yZXNwb25zaXZlIiAvPgogICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj48ZGl2IGNsYXNzPSJpdGVtICAiPgogICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwOi8vd3d3LmFnZW5jZXNzYWludGZlcmRpbmFuZC5jb20vd3AtY29udGVudC91cGxvYWRzLzIwMjAvMDEvMTk4NzZfNy5qcGciIHJlbD0icHJldHR5UGhvdG9bcHBfZ2FsXSIgY2xhc3M9InByZXR0eWdhbGVyeSIgPiAKICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgIHNyYz0iaHR0cDovL3d3dy5hZ2VuY2Vzc2FpbnRmZXJkaW5hbmQuY29tL3dwLWNvbnRlbnQvdXBsb2Fkcy8yMDIwLzAxLzE5ODc2XzctODM1eDQ2Ny5qcGciIGFsdD0iaXRlbSIgY2xhc3M9ImltZy1yZXNwb25zaXZlIiAvPgogICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4gICAgPC9kaXY+CgogICAgPCEtLSBJbmRpY2F0b3JzIC0tPiAgICAKICAgIDxkaXYgY2xhc3M9ImNhcnVzZWwtYmFjayI+PC9kaXY+ICAKICAgIDxvbCBjbGFzcz0iY2Fyb3VzZWwtaW5kaWNhdG9ycyI+CiAgICAgIDxsaSBkYXRhLXRhcmdldD0iI2Nhcm91c2VsLWxpc3RpbmciIGRhdGEtc2xpZGUtdG89IjAiIGNsYXNzPSIgYWN0aXZlICI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGltZyAgc3JjPSJodHRwOi8vd3d3LmFnZW5jZXNzYWludGZlcmRpbmFuZC5jb20vd3AtY29udGVudC91cGxvYWRzLzIwMjAvMDEvMTk4NzZfMS0xNDN4ODMuanBnIiAgYWx0PSJzbGlkZXIiIC8+CiAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvbGk+IDxsaSBkYXRhLXRhcmdldD0iI2Nhcm91c2VsLWxpc3RpbmciIGRhdGEtc2xpZGUtdG89IjEiIGNsYXNzPSIgIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW1nICBzcmM9Imh0dHA6Ly93d3cuYWdlbmNlc3NhaW50ZmVyZGluYW5kLmNvbS93cC1jb250ZW50L3VwbG9hZHMvMjAyMC8wMS8xOTg3Nl8yLTE0M3g4My5qcGciICBhbHQ9InNsaWRlciIgLz4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvbGk+IDxsaSBkYXRhLXRhcmdldD0iI2Nhcm91c2VsLWxpc3RpbmciIGRhdGEtc2xpZGUtdG89IjIiIGNsYXNzPSIgIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW1nICBzcmM9Imh0dHA6Ly93d3cuYWdlbmNlc3NhaW50ZmVyZGluYW5kLmNvbS93cC1jb250ZW50L3VwbG9hZHMvMjAyMC8wMS8xOTg3Nl8zLTE0M3g4My5qcGciICBhbHQ9InNsaWRlciIgLz4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvbGk+IDxsaSBkYXRhLXRhcmdldD0iI2Nhcm91c2VsLWxpc3RpbmciIGRhdGEtc2xpZGUtdG89IjMiIGNsYXNzPSIgIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW1nICBzcmM9Imh0dHA6Ly93d3cuYWdlbmNlc3NhaW50ZmVyZGluYW5kLmNvbS93cC1jb250ZW50L3VwbG9hZHMvMjAyMC8wMS8xOTg3Nl80LTE0M3g4My5qcGciICBhbHQ9InNsaWRlciIgLz4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvbGk+IDxsaSBkYXRhLXRhcmdldD0iI2Nhcm91c2VsLWxpc3RpbmciIGRhdGEtc2xpZGUtdG89IjQiIGNsYXNzPSIgIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW1nICBzcmM9Imh0dHA6Ly93d3cuYWdlbmNlc3NhaW50ZmVyZGluYW5kLmNvbS93cC1jb250ZW50L3VwbG9hZHMvMjAyMC8wMS8xOTg3Nl81LTE0M3g4My5qcGciICBhbHQ9InNsaWRlciIgLz4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvbGk+IDxsaSBkYXRhLXRhcmdldD0iI2Nhcm91c2VsLWxpc3RpbmciIGRhdGEtc2xpZGUtdG89IjUiIGNsYXNzPSIgIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW1nICBzcmM9Imh0dHA6Ly93d3cuYWdlbmNlc3NhaW50ZmVyZGluYW5kLmNvbS93cC1jb250ZW50L3VwbG9hZHMvMjAyMC8wMS8xOTg3Nl82LTE0M3g4My5qcGciICBhbHQ9InNsaWRlciIgLz4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvbGk+IDxsaSBkYXRhLXRhcmdldD0iI2Nhcm91c2VsLWxpc3RpbmciIGRhdGEtc2xpZGUtdG89IjYiIGNsYXNzPSIgIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW1nICBzcmM9Imh0dHA6Ly93d3cuYWdlbmNlc3NhaW50ZmVyZGluYW5kLmNvbS93cC1jb250ZW50L3VwbG9hZHMvMjAyMC8wMS8xOTg3Nl83LTE0M3g4My5qcGciICBhbHQ9InNsaWRlciIgLz4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvbGk+ICAgIDwvb2w+CgogICAgPG9sIGNsYXNzPSJjYXJvdXNlbC1yb3VuZC1pbmRpY2F0b3JzIj4KICAgICAgICAgPGxpIGRhdGEtdGFyZ2V0PSIjY2Fyb3VzZWwtbGlzdGluZyIgZGF0YS1zbGlkZS10bz0iMCIgY2xhc3M9IiBhY3RpdmUgIiA+PC9saT4gPGxpIGRhdGEtdGFyZ2V0PSIjY2Fyb3VzZWwtbGlzdGluZyIgZGF0YS1zbGlkZS10bz0iMSIgY2xhc3M9IiAiPjwvbGk+IDxsaSBkYXRhLXRhcmdldD0iI2Nhcm91c2VsLWxpc3RpbmciIGRhdGEtc2xpZGUtdG89IjIiIGNsYXNzPSIgIj48L2xpPiA8bGkgZGF0YS10YXJnZXQ9IiNjYXJvdXNlbC1saXN0aW5nIiBkYXRhLXNsaWRlLXRvPSIzIiBjbGFzcz0iICI+PC9saT4gPGxpIGRhdGEtdGFyZ2V0PSIjY2Fyb3VzZWwtbGlzdGluZyIgZGF0YS1zbGlkZS10bz0iNCIgY2xhc3M9IiAiPjwvbGk+IDxsaSBkYXRhLXRhcmdldD0iI2Nhcm91c2VsLWxpc3RpbmciIGRhdGEtc2xpZGUtdG89IjUiIGNsYXNzPSIgIj48L2xpPiA8bGkgZGF0YS10YXJnZXQ9IiNjYXJvdXNlbC1saXN0aW5nIiBkYXRhLXNsaWRlLXRvPSI2IiBjbGFzcz0iICI+PC9saT4gICAgPC9vbD4gCgogICAgPGRpdiBjbGFzcz0iY2FwdGlvbi13cmFwcGVyIj4gICAKICAgICAgPHNwYW4gZGF0YS1zbGlkZS10bz0iMCIgY2xhc3M9IiBhY3RpdmUgIiA+PC9zcGFuPjxzcGFuIGRhdGEtc2xpZGUtdG89IjEiIGNsYXNzPSIgIj48L3NwYW4+PHNwYW4gZGF0YS1zbGlkZS10bz0iMiIgY2xhc3M9IiAiPjwvc3Bhbj48c3BhbiBkYXRhLXNsaWRlLXRvPSIzIiBjbGFzcz0iICI+PC9zcGFuPjxzcGFuIGRhdGEtc2xpZGUtdG89IjQiIGNsYXNzPSIgIj48L3NwYW4+PHNwYW4gZGF0YS1zbGlkZS10bz0iNSIgY2xhc3M9IiAiPjwvc3Bhbj48c3BhbiBkYXRhLXNsaWRlLXRvPSI2IiBjbGFzcz0iICI+PC9zcGFuPiAgICAgICAgPGRpdiBjbGFzcz0iY2FwdGlvbl9jb250cm9sIj48L2Rpdj4KICAgIDwvZGl2PiAgCgogICAgPCEtLSBDb250cm9scyAtLT4KICAgIDxhIGNsYXNzPSJsZWZ0IGNhcm91c2VsLWNvbnRyb2wiIGhyZWY9IiNjYXJvdXNlbC1saXN0aW5nIiBkYXRhLXNsaWRlPSJwcmV2Ij4KICAgICAgPGkgY2xhc3M9ImZhIGZhLWFuZ2xlLWxlZnQiPjwvaT4KICAgIDwvYT4KICAgIDxhIGNsYXNzPSJyaWdodCBjYXJvdXNlbC1jb250cm9sIiBocmVmPSIjY2Fyb3VzZWwtbGlzdGluZyIgZGF0YS1zbGlkZT0ibmV4dCI+CiAgICAgIDxpIGNsYXNzPSJmYSBmYS1hbmdsZS1yaWdodCI+PC9pPgogICAgPC9hPgogICAgPC9kaXY+CgogICAgICAgICAgICAKICAgICAgICAgCiAgICAgICAgICAgIAogICAgICAgIDxkaXYgcm9sZT0idGFicGFuZWwiIGlkPSJ0YWJfcHJwZyI+CgogIDwhLS0gTmF2IHRhYnMgLS0+CiAgPHVsIGNsYXNzPSJuYXYgbmF2LXRhYnMiIHJvbGU9InRhYmxpc3QiPgogICAgPGxpIHJvbGU9InByZXNlbnRhdGlvbiIgY2xhc3M9ImFjdGl2ZSI+CiAgICAgICAgPGEgaHJlZj0iI2Rlc2NyaXB0aW9uIiBhcmlhLWNvbnRyb2xzPSJkZXNjcmlwdGlvbiIgcm9sZT0idGFiIiBkYXRhLXRvZ2dsZT0idGFiIj4KICAgICAgICBEZXNjcmlwdGlmICAgICAgICA8L2E+CiAgICAgICAgCiAgICA8L2xpPgogICAgCiAgICA8bGkgcm9sZT0icHJlc2VudGF0aW9uIj4KICAgICAgICA8YSBocmVmPSIjYWRkcmVzcyIgYXJpYS1jb250cm9scz0iYWRkcmVzcyIgcm9sZT0idGFiIiBkYXRhLXRvZ2dsZT0idGFiIj4KICAgICAgICAgICAgU2VjdGV1ciAgICAgICAgPC9hPgogICAgPC9saT4KICAgIAogICAgPGxpIHJvbGU9InByZXNlbnRhdGlvbiI+CiAgICAgICAgPGEgaHJlZj0iI2RldGFpbHMiIGFyaWEtY29udHJvbHM9ImRldGFpbHMiIHJvbGU9InRhYiIgZGF0YS10b2dnbGU9InRhYiI+CiAgICAgICAgICAgIETDqXRhaWxzICAgICAgICA8L2E+CiAgICA8L2xpPgogICAgICAgICAgICA8bGkgcm9sZT0icHJlc2VudGF0aW9uIj4KICAgICAgICAgICAgPGEgaHJlZj0iI2ZlYXR1cmVzIiBhcmlhLWNvbnRyb2xzPSJmZWF0dXJlcyIgcm9sZT0idGFiIiBkYXRhLXRvZ2dsZT0idGFiIj4KICAgICAgICAgICAgICAgT3B0aW9ucyAgICAgICAgICAgIDwvYT4KICAgICAgICA8L2xpPgogICAgICAgIAogICAgCiAgICAgICAgICAgIAogICAgCiAgICAgIAogIDwvdWw+CgogIDwhLS0gVGFiIHBhbmVzIC0tPgogIDxkaXYgY2xhc3M9InRhYi1jb250ZW50Ij4KICAgIDxkaXYgcm9sZT0idGFicGFuZWwiIGNsYXNzPSJ0YWItcGFuZSBhY3RpdmUiIGlkPSJkZXNjcmlwdGlvbiI+CiAgICAgICAgPHA+UEFSSVMgWFZJICYjODIxMTsgUVVBUlRJRVIgVklDVE9SIEhVR08gJiM4MjExOyAyIENIQU1CUkVTL1BPU1NJQklMSVTDiSAzICYjODIxMTsgMiBFTUUgw4lUQUdFIEFWRUMgQkFMQ09OLiBEYW5zIHVuIGJlbCBpbW1ldWJsZSBhdXggcGFydGllcyBjb21tdW5lcyBkZSBzdGFuZGluZywgY2V0IGFwcGFydGVtZW50IMOgIGxhIGTDqWNvcmF0aW9uIHNpbmd1bGnDqHJlIGLDqW7DqWZpY2llIGRlIGdyYW5kcyBlc3BhY2VzIGx1bWluZXV4LiBJbCBzZSBjb21wb3NlIGRlIGxhIGZhw6dvbiBzdWl2YW50ZTogaGFsbCBkJnJzcXVvO2VudHLDqWUsIHPDqWpvdXIsIHNhbG9uLCBzYWxsZSBkZSBob21lIGNpbsOpbWEsIDIgY2hhbWJyZXMgZGUgZ3JhbmRlIHRhaWxsZSwgY3Vpc2luZSBkw65uYXRvaXJlLCBzYWxsZSBkZSBkb3VjaGUsIHNhbGxlIGRlIGJhaW4sIDIgV0MuVW5lIGdyYW5kZSBjYXZlIGNvbXBsw6h0ZSBjZSBiaWVuLiBQb3NzaWJpbGl0w6kgZCZyc3F1bzthY3F1w6lyaXIgdW4gZ3JhbmQgYm94IGZhY2lsZSBkJnJzcXVvO2FjY8OocyBhaW5zaSBxdSZyc3F1bzt1bmUgY2hhbWJyZSBkZSBzZXJ2aWNlIGRlIDExbcKyIGVuIHJlei1kZS1jaGF1c3PDqWUgc3Vyw6lsZXbDqS4gQ0FMTUUgJiM4MjExOyBMVU1JTkVVWCAmIzgyMTE7IEJPTk5FIFNFQ1RPUklTQVRJT04gU0NPTEFJUkUgJiM4MjExOyBQUk9YSU1JVMOJIENPTU1FUkNFUyBldCBUUkFOU1BPUlRTLjxiciAvPgpDaGFyZ2VzIGRlIGNvcHJvcHJpw6l0w6kgOiA2MDAg4oKsPGJyIC8+CiogUHJpeCBhZmZpY2jDqSBob25vcmFpcmVzIGluY2x1cy48YnIgLz4KSG9ub3JhaXJlcyA6IDMsNTM1MzUzNTM1MzUzNTIgJSBUVEMgQWNxdcOpcmV1cjxiciAvPgpOYi4gZGUgbG90cyBkYW5zIGxhIGNvcHJvcHJpw6l0w6kgOiAwPGJyIC8+ClN5bmRpY2F0IGRlcyBjb3Byb3ByacOpdGFpcmVzIDogPC9wPgogICAgICAKICAgIDwvZGl2PgoKICAgIDxkaXYgcm9sZT0idGFicGFuZWwiIGNsYXNzPSJ0YWItcGFuZSIgaWQ9ImFkZHJlc3MiPgogICAgICAgIDxkaXYgY2xhc3M9Imxpc3RpbmdfZGV0YWlsIGNvbC1tZC00Ij48c3Ryb25nPkFkcmVzc2U6PC9zdHJvbmc+IFZpY3RvciBIdWdvPC9kaXY+PGRpdiBjbGFzcz0ibGlzdGluZ19kZXRhaWwgY29sLW1kLTQiPjxzdHJvbmc+VmlsbGU6PC9zdHJvbmc+IDxhIGhyZWY9Imh0dHA6Ly93d3cuYWdlbmNlc3NhaW50ZmVyZGluYW5kLmNvbS9jaXR5L3BhcmlzLTE2LyIgcmVsPSJ0YWciPlBhcmlzIDE2PC9hPjwvZGl2PjxkaXYgY2xhc3M9Imxpc3RpbmdfZGV0YWlsIGNvbC1tZC00Ij48c3Ryb25nPlpvbmU6PC9zdHJvbmc+IDxhIGhyZWY9Imh0dHA6Ly93d3cuYWdlbmNlc3NhaW50ZmVyZGluYW5kLmNvbS9hcmVhL3ZpY3Rvci1odWdvLyIgcmVsPSJ0YWciPlZpY3RvciBIdWdvPC9hPjwvZGl2PjxkaXYgY2xhc3M9Imxpc3RpbmdfZGV0YWlsIGNvbC1tZC00Ij48c3Ryb25nPlppcDo8L3N0cm9uZz4gNzUxMTY8L2Rpdj48ZGl2IGNsYXNzPSJsaXN0aW5nX2RldGFpbCBjb2wtbWQtNCI+PHN0cm9uZz5QYXlzOjwvc3Ryb25nPiBGUkFOQ0U8L2Rpdj4gICAgPC9kaXY+CiAgICAgIAogICAgPGRpdiByb2xlPSJ0YWJwYW5lbCIgY2xhc3M9InRhYi1wYW5lIiBpZD0iZGV0YWlscyI+CiAgICAgICAgPGRpdiBjbGFzcz0ibGlzdGluZ19kZXRhaWwgY29sLW1kLTQiIGlkPSJwcm9wZXJ0eWlkX2Rpc3BsYXkiPjxzdHJvbmc+UsOpZsOpcmVuY2U6PC9zdHJvbmc+IDE5ODc2PC9kaXY+PGRpdiBjbGFzcz0ibGlzdGluZ19kZXRhaWwgY29sLW1kLTQiPjxzdHJvbmc+UHJpeDo8L3N0cm9uZz4gMi4wNTAuMDAwIOKCrCA8c3BhbiBjbGFzcz0icHJpY2VfbGFiZWwiPio8L3NwYW4+PC9kaXY+PGRpdiBjbGFzcz0ibGlzdGluZ19kZXRhaWwgY29sLW1kLTQiPjxzdHJvbmc+U3VyZmFjZSBMb2dlbWVudDo8L3N0cm9uZz4gMTQ2IG08c3VwPjI8L3N1cD48L2Rpdj48ZGl2IGNsYXNzPSJsaXN0aW5nX2RldGFpbCBjb2wtbWQtNCI+PHN0cm9uZz5QacOoY2VzOjwvc3Ryb25nPiA1PC9kaXY+PGRpdiBjbGFzcz0ibGlzdGluZ19kZXRhaWwgY29sLW1kLTQiPjxzdHJvbmc+Q2hhbWJyZXM6PC9zdHJvbmc+IDI8L2Rpdj48ZGl2IGNsYXNzPSJsaXN0aW5nX2RldGFpbCBjb2wtbWQtNCI+PHN0cm9uZz5FdGFnZTo8L3N0cm9uZz4gMjwvZGl2PjxkaXYgY2xhc3M9Imxpc3RpbmdfZGV0YWlsIGNvbC1tZC00Ij48c3Ryb25nPkFubsOpZSBDb25zdHJ1Y3Rpb246PC9zdHJvbmc+IDE5NTU8L2Rpdj4gIAogICAgPC9kaXY+CiAgICAgIAogICAgPGRpdiByb2xlPSJ0YWJwYW5lbCIgY2xhc3M9InRhYi1wYW5lIiBpZD0iZmVhdHVyZXMiPgogICAgICAgIDxkaXYgY2xhc3M9Imxpc3RpbmdfZGV0YWlsIGNvbC1tZC00Ij48aSBjbGFzcz0iZmEgZmEtY2hlY2siPjwvaT5DaGFtYnJlIGRlIHNlcnZpY2U8L2Rpdj48ZGl2IGNsYXNzPSJsaXN0aW5nX2RldGFpbCBjb2wtbWQtNCI+PGkgY2xhc3M9ImZhIGZhLWNoZWNrIj48L2k+QXNjZW5zZXVyPC9kaXY+PGRpdiBjbGFzcz0ibGlzdGluZ19kZXRhaWwgY29sLW1kLTQiPjxpIGNsYXNzPSJmYSBmYS1jaGVjayI+PC9pPkdhcmRpZW48L2Rpdj48ZGl2IGNsYXNzPSJsaXN0aW5nX2RldGFpbCBjb2wtbWQtNCI+PGkgY2xhc3M9ImZhIGZhLWNoZWNrIj48L2k+QmFsY29uPC9kaXY+ICAgIDwvZGl2PiAgCiAgICAgCiAgICAgCiAgICAgIAogICAgICAgICAgCiAgICAgIAogIDwvZGl2PgoKPC9kaXY+ICAgIAogICAgICAgIAogICAgICAgICAgICAKICAgICAgICAgICAgCiAgICAgICAgICAgIAogICAgICAgCiAgICAKICAgICAgICAgIAogICAgICAgICAKICAgICAgICAKICAgICAgIAogICAgICAgIAkKICAgICAgICA8IS0tQ29tcGFyZSBTdGFydHMgaGVyZS0tPiAgICAgCjxkaXYgY2xhc3M9InByb3AtY29tcGFyZSAiPgogICAgPGZvcm0gbWV0aG9kPSJwb3N0IiBpZD0iZm9ybV9jb21wYXJlIiBhY3Rpb249Imh0dHA6Ly93d3cuYWdlbmNlc3NhaW50ZmVyZGluYW5kLmNvbS9jb21wYXJlLWxpc3RpbmdzLyI+CiAgICAgICAgPGg0PkNvbXBhcmVyIGxlcyBwcm9wcmnDqXTDqXM8L2g0PgogICAgICAgIDxidXR0b24gICBpZD0ic3VibWl0X2NvbXBhcmUiIGNsYXNzPSJ3cGJfYnV0dG9uICB3cGJfYnRuLWluZm8gd3BiX2J0bi1sYXJnZSI+IENvbXBhcmVyIDwvYnV0dG9uPgogICAgPC9mb3JtPgo8L2Rpdj4gICAgCjwhLS1Db21wYXJlIEVuZHMgaGVyZS0tPiAgIAoKICAgICAgICA8ZGl2IGNsYXNzPSJteWxpc3RpbmdzIj4gCiAgICAgICAgICAgIDxoMyBjbGFzcz0iYWdlbnRfbGlzdGluZ3NfdGl0bGVfc2ltaWxhciIgPkFubm9uY2VzIHNpbWlsYWlyZXM8L2gzPiAgIAogICAgICAgICAgICAgIAoKCgo8ZGl2IGNsYXNzPSJjb2wtbWQtNCBsaXN0aW5nX3dyYXBwZXIiIGRhdGEtb3JnPSI0IiBkYXRhLWxpc3RpZD0iMjEwNjgzMCIgPiAKICAgIDxkaXYgY2xhc3M9InByb3BlcnR5X2xpc3RpbmciIGRhdGEtbGluaz0iaHR0cDovL3d3dy5hZ2VuY2Vzc2FpbnRmZXJkaW5hbmQuY29tL3Byb3BlcnRpZXMvbXVldHRlLTUtcGllY2VzLyI+CiAgICAgICAgPGRpdiBjbGFzcz0ibGlzdGluZy11bml0LWltZy13cmFwcGVyIj48YSBocmVmPSJodHRwOi8vd3d3LmFnZW5jZXNzYWludGZlcmRpbmFuZC5jb20vcHJvcGVydGllcy9tdWV0dGUtNS1waWVjZXMvIj48aW1nIHdpZHRoPSI0ODAiIGhlaWdodD0iMjk4IiBzcmM9Imh0dHA6Ly93d3cuYWdlbmNlc3NhaW50ZmVyZGluYW5kLmNvbS93cC1jb250ZW50L3VwbG9hZHMvMjAyMC8wNi8yMDM2N18xLTQ4MHgyOTguanBnIiBjbGFzcz0ibGF6eWxvYWQgaW1nLXJlc3BvbnNpdmUgd3AtcG9zdC1pbWFnZSIgYWx0PSIiIGRhdGEtb3JpZ2luYWw9IiIgLz48L2E+PGRpdiBjbGFzcz0ibGlzdGluZy1jb3ZlciI+PC9kaXY+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cDovL3d3dy5hZ2VuY2Vzc2FpbnRmZXJkaW5hbmQuY29tL3Byb3BlcnRpZXMvbXVldHRlLTUtcGllY2VzLyI+IDxzcGFuIGNsYXNzPSJsaXN0aW5nLWNvdmVyLXBsdXMiPis8L3NwYW4+PC9hPjwvZGl2PjxhIGhyZWY9Imh0dHA6Ly93d3cuYWdlbmNlc3NhaW50ZmVyZGluYW5kLmNvbS9wcm9wZXJ0aWVzL211ZXR0ZS01LXBpZWNlcy8iPjxkaXYgY2xhc3M9InJpYmJvbi13cmFwcGVyLWRlZmF1bHQgcmliYm9uLXdyYXBwZXItRGlzcG9uaWJsZSI+PGRpdiBjbGFzcz0icmliYm9uLWluc2lkZSBEaXNwb25pYmxlIj5EaXNwb25pYmxlPC9kaXY+PC9kaXY+PC9hPgogIAogICAgICAgIDxoND48YSBocmVmPSJodHRwOi8vd3d3LmFnZW5jZXNzYWludGZlcmRpbmFuZC5jb20vcHJvcGVydGllcy9tdWV0dGUtNS1waWVjZXMvIj4KICAgICAgICAgICAgTVVFVFRFICYjODIxMTsgNSBwacOoY2UocykgICAgICAgICAgICA8L2E+IAogICAgICAgIDwvaDQ+IAogICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9wZXJ0eV9sb2NhdGlvbiI+ICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iaW5mb3Jvb20iPjM8L3NwYW4+PHNwYW4gY2xhc3M9ImluZm9iYXRoIj4xPC9zcGFuPiA8c3BhbiBjbGFzcz0iaW5mb3NpemUiPjE1MCBtPHN1cD4yPC9zdXA+PC9zcGFuPiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Imxpc3RpbmdfZGV0YWlscyB0aGVfZ3JpZF92aWV3Ij4KICAgICAgICAgICAgICAgICAgICBQQVJJUyAxNiAmIzgyMTE7IEVYQ0xVU0lWSVRFICYjODIxMTsgTVVFVFRFICYjODIxMTsgRGFucyB1biBiZWwgaW1tZXVibGUgSGF1c3NtYW5uaWVuLCBzaXR1w6kgYXUgLi4uICAgICAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Imxpc3RpbmdfZGV0YWlscyB0aGVfbGlzdF92aWV3Ij4KICAgICAgICAgICAgICAgICAgICBQQVJJUyAxNiAmIzgyMTE7IEVYQ0xVU0lWSVRFICYjODIxMTsgTVVFVFRFICYjODIxMTsgRGFucyB1biBiZWwgaW1tZXVibGUgSGF1c3NtYW5uaWVuLCBzaXR1w6kgYXUgMWVyIMOpdGFnZSwgY2UgNSBwacOoY2VzIGZhbWlsaWFsIC4uLiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgCiAgICAgICAKICAgICAgICAgICAgPGRpdiBjbGFzcz0ibGlzdGluZ19wcm9wX2RldGFpbHMiPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAKICAgICAgICAgICAgPGRpdiBjbGFzcz0ibGlzdGluZ191bml0X3ByaWNlX3dyYXBwZXIiPjEuNzYwLjAwMCDigqwgPHNwYW4gY2xhc3M9InByaWNlX2xhYmVsIj4qPC9zcGFuPiAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Imxpc3RpbmdfYWN0aW9ucyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJzaGFyZV91bml0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cDovL3d3dy5mYWNlYm9vay5jb20vc2hhcmVyLnBocD91PWh0dHA6Ly93d3cuYWdlbmNlc3NhaW50ZmVyZGluYW5kLmNvbS9wcm9wZXJ0aWVzL211ZXR0ZS01LXBpZWNlcy8mYW1wO3Q9TVVFVFRFKyUyNiUyMzgyMTElM0IrNStwaSVDMyVBOGNlJTI4cyUyOSIgdGFyZ2V0PSJfYmxhbmsiIGNsYXNzPSJzb2NpYWxfZmFjZWJvb2siPjwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cDovL3R3aXR0ZXIuY29tL2hvbWU/c3RhdHVzPU1VRVRURSslMjYlMjM4MjExJTNCKzUrcGklQzMlQThjZSUyOHMlMjkraHR0cCUzQSUyRiUyRnd3dy5hZ2VuY2Vzc2FpbnRmZXJkaW5hbmQuY29tJTJGcHJvcGVydGllcyUyRm11ZXR0ZS01LXBpZWNlcyUyRiIgY2xhc3M9InNvY2lhbF90d2VldCIgdGFyZ2V0PSJfYmxhbmsiPjwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9wbHVzLmdvb2dsZS5jb20vc2hhcmU/dXJsPWh0dHA6Ly93d3cuYWdlbmNlc3NhaW50ZmVyZGluYW5kLmNvbS9wcm9wZXJ0aWVzL211ZXR0ZS01LXBpZWNlcy8iIG9uY2xpY2s9ImphdmFzY3JpcHQ6d2luZG93Lm9wZW4odGhpcy5ocmVmLCcnLCAnbWVudWJhcj1ubyx0b29sYmFyPW5vLHJlc2l6YWJsZT15ZXMsc2Nyb2xsYmFycz15ZXMsaGVpZ2h0PTYwMCx3aWR0aD02MDAnKTtyZXR1cm4gZmFsc2U7IiB0YXJnZXQ9Il9ibGFuayIgY2xhc3M9InNvY2lhbF9nb29nbGUiPjwvYT4gCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHA6Ly9waW50ZXJlc3QuY29tL3Bpbi9jcmVhdGUvYnV0dG9uLz91cmw9aHR0cDovL3d3dy5hZ2VuY2Vzc2FpbnRmZXJkaW5hbmQuY29tL3Byb3BlcnRpZXMvbXVldHRlLTUtcGllY2VzLyZhbXA7bWVkaWE9JmFtcDtkZXNjcmlwdGlvbj1NVUVUVEUrJTI2JTIzODIxMSUzQis1K3BpJUMzJUE4Y2UlMjhzJTI5IiB0YXJnZXQ9Il9ibGFuayIgY2xhc3M9InNvY2lhbF9waW50ZXJlc3QiPjwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ic2hhcmVfbGlzdCIgIGRhdGEtb3JpZ2luYWwtdGl0bGU9IlBhcnRhZ2VyIiA+PC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJpY29uLWZhdiBpY29uLWZhdi1vZmYiIGRhdGEtb3JpZ2luYWwtdGl0bGU9IkFqb3V0ZXIgYXV4IGZhdm9yaXMiIGRhdGEtcG9zdGlkPSIyMTA2ODMwIj48L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJjb21wYXJlLWFjdGlvbiIgZGF0YS1vcmlnaW5hbC10aXRsZT0iQ29tcGFyZXIiIGRhdGEtcGltYWdlPSIiIGRhdGEtcGlkPSIyMTA2ODMwIj48L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgPC9kaXY+ICAgICAgICAgICAKICAgICAgICA8L2Rpdj4gICAgICAgICAgCiAgICA8L2Rpdj4KCiAgICAgICAgICAgIAogICAgICAgICAgCiAgICAgICAKICAgICAgICAgCgoKCjxkaXYgY2xhc3M9ImNvbC1tZC00IGxpc3Rpbmdfd3JhcHBlciIgZGF0YS1vcmc9IjQiIGRhdGEtbGlzdGlkPSIyMTA2NDQ0IiA+IAogICAgPGRpdiBjbGFzcz0icHJvcGVydHlfbGlzdGluZyIgZGF0YS1saW5rPSJodHRwOi8vd3d3LmFnZW5jZXNzYWludGZlcmRpbmFuZC5jb20vcHJvcGVydGllcy92aWxsYWdlLWRhdXRldWlsLTItcGllY2VzLyI+CiAgICAgICAgPGRpdiBjbGFzcz0ibGlzdGluZy11bml0LWltZy13cmFwcGVyIj48YSBocmVmPSJodHRwOi8vd3d3LmFnZW5jZXNzYWludGZlcmRpbmFuZC5jb20vcHJvcGVydGllcy92aWxsYWdlLWRhdXRldWlsLTItcGllY2VzLyI+PGltZyB3aWR0aD0iNDgwIiBoZWlnaHQ9IjI5OCIgc3JjPSJodHRwOi8vd3d3LmFnZW5jZXNzYWludGZlcmRpbmFuZC5jb20vd3AtY29udGVudC91cGxvYWRzLzIwMjAvMDYvMjAzMTNfMS00ODB4Mjk4LmpwZyIgY2xhc3M9Imxhenlsb2FkIGltZy1yZXNwb25zaXZlIHdwLXBvc3QtaW1hZ2UiIGFsdD0iIiBkYXRhLW9yaWdpbmFsPSIiIC8+PC9hPjxkaXYgY2xhc3M9Imxpc3RpbmctY292ZXIiPjwvZGl2PgogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHA6Ly93d3cuYWdlbmNlc3NhaW50ZmVyZGluYW5kLmNvbS9wcm9wZXJ0aWVzL3ZpbGxhZ2UtZGF1dGV1aWwtMi1waWVjZXMvIj4gPHNwYW4gY2xhc3M9Imxpc3RpbmctY292ZXItcGx1cyI+Kzwvc3Bhbj48L2E+PC9kaXY+PGEgaHJlZj0iaHR0cDovL3d3dy5hZ2VuY2Vzc2FpbnRmZXJkaW5hbmQuY29tL3Byb3BlcnRpZXMvdmlsbGFnZS1kYXV0ZXVpbC0yLXBpZWNlcy8iPjxkaXYgY2xhc3M9InJpYmJvbi13cmFwcGVyLWRlZmF1bHQgcmliYm9uLXdyYXBwZXItRGlzcG9uaWJsZSI+PGRpdiBjbGFzcz0icmliYm9uLWluc2lkZSBEaXNwb25pYmxlIj5EaXNwb25pYmxlPC9kaXY+PC9kaXY+PC9hPgogIAogICAgICAgIDxoND48YSBocmVmPSJodHRwOi8vd3d3LmFnZW5jZXNzYWludGZlcmRpbmFuZC5jb20vcHJvcGVydGllcy92aWxsYWdlLWRhdXRldWlsLTItcGllY2VzLyI+CiAgICAgICAgICAgIFZJTExBR0UgRCZyc3F1bztBVVRFVUlMICYjODIxMTsgMiBwacOoY2UocykgICAgICAgICAgICA8L2E+IAogICAgICAgIDwvaDQ+IAogICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9wZXJ0eV9sb2NhdGlvbiI+ICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iaW5mb3Jvb20iPjE8L3NwYW4+PHNwYW4gY2xhc3M9ImluZm9iYXRoIj41PC9zcGFuPiA8c3BhbiBjbGFzcz0iaW5mb3NpemUiPjUzIG08c3VwPjI8L3N1cD48L3NwYW4+ICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ibGlzdGluZ19kZXRhaWxzIHRoZV9ncmlkX3ZpZXciPgogICAgICAgICAgICAgICAgICAgIFBBUklTIFhWSSAmIzgyMTE7IEF1IGNvZXVyIGR1IFZpbGxhZ2UgZCZyc3F1bztBdXRldWlsLCBkYW5zIHVuIGltbWV1YmxlIGRlIDE4ODAsIGNoYXJtYW50IC4uLiAgICAgICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJsaXN0aW5nX2RldGFpbHMgdGhlX2xpc3RfdmlldyI+CiAgICAgICAgICAgICAgICAgICAgUEFSSVMgWFZJICYjODIxMTsgQXUgY29ldXIgZHUgVmlsbGFnZSBkJnJzcXVvO0F1dGV1aWwsIGRhbnMgdW4gaW1tZXVibGUgZGUgMTg4MCwgY2hhcm1hbnQgMiBwacOoY2VzIHRyYXZlcnNhbnQgZGUgNTEsNDBtwrIgZW4gLi4uICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAKICAgICAgIAogICAgICAgICAgICA8ZGl2IGNsYXNzPSJsaXN0aW5nX3Byb3BfZGV0YWlscyI+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIAogICAgICAgICAgICA8ZGl2IGNsYXNzPSJsaXN0aW5nX3VuaXRfcHJpY2Vfd3JhcHBlciI+Nzg1LjAwMCDigqwgPHNwYW4gY2xhc3M9InByaWNlX2xhYmVsIj4qPC9zcGFuPiAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Imxpc3RpbmdfYWN0aW9ucyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJzaGFyZV91bml0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cDovL3d3dy5mYWNlYm9vay5jb20vc2hhcmVyLnBocD91PWh0dHA6Ly93d3cuYWdlbmNlc3NhaW50ZmVyZGluYW5kLmNvbS9wcm9wZXJ0aWVzL3ZpbGxhZ2UtZGF1dGV1aWwtMi1waWVjZXMvJmFtcDt0PVZJTExBR0UrRCUyNnJzcXVvJTNCQVVURVVJTCslMjYlMjM4MjExJTNCKzIrcGklQzMlQThjZSUyOHMlMjkiIHRhcmdldD0iX2JsYW5rIiBjbGFzcz0ic29jaWFsX2ZhY2Vib29rIj48L2E+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHA6Ly90d2l0dGVyLmNvbS9ob21lP3N0YXR1cz1WSUxMQUdFK0QlMjZyc3F1byUzQkFVVEVVSUwrJTI2JTIzODIxMSUzQisyK3BpJUMzJUE4Y2UlMjhzJTI5K2h0dHAlM0ElMkYlMkZ3d3cuYWdlbmNlc3NhaW50ZmVyZGluYW5kLmNvbSUyRnByb3BlcnRpZXMlMkZ2aWxsYWdlLWRhdXRldWlsLTItcGllY2VzJTJGIiBjbGFzcz0ic29jaWFsX3R3ZWV0IiB0YXJnZXQ9Il9ibGFuayI+PC9hPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL3BsdXMuZ29vZ2xlLmNvbS9zaGFyZT91cmw9aHR0cDovL3d3dy5hZ2VuY2Vzc2FpbnRmZXJkaW5hbmQuY29tL3Byb3BlcnRpZXMvdmlsbGFnZS1kYXV0ZXVpbC0yLXBpZWNlcy8iIG9uY2xpY2s9ImphdmFzY3JpcHQ6d2luZG93Lm9wZW4odGhpcy5ocmVmLCcnLCAnbWVudWJhcj1ubyx0b29sYmFyPW5vLHJlc2l6YWJsZT15ZXMsc2Nyb2xsYmFycz15ZXMsaGVpZ2h0PTYwMCx3aWR0aD02MDAnKTtyZXR1cm4gZmFsc2U7IiB0YXJnZXQ9Il9ibGFuayIgY2xhc3M9InNvY2lhbF9nb29nbGUiPjwvYT4gCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHA6Ly9waW50ZXJlc3QuY29tL3Bpbi9jcmVhdGUvYnV0dG9uLz91cmw9aHR0cDovL3d3dy5hZ2VuY2Vzc2FpbnRmZXJkaW5hbmQuY29tL3Byb3BlcnRpZXMvdmlsbGFnZS1kYXV0ZXVpbC0yLXBpZWNlcy8mYW1wO21lZGlhPSZhbXA7ZGVzY3JpcHRpb249VklMTEFHRStEJTI2cnNxdW8lM0JBVVRFVUlMKyUyNiUyMzgyMTElM0IrMitwaSVDMyVBOGNlJTI4cyUyOSIgdGFyZ2V0PSJfYmxhbmsiIGNsYXNzPSJzb2NpYWxfcGludGVyZXN0Ij48L2E+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InNoYXJlX2xpc3QiICBkYXRhLW9yaWdpbmFsLXRpdGxlPSJQYXJ0YWdlciIgPjwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iaWNvbi1mYXYgaWNvbi1mYXYtb2ZmIiBkYXRhLW9yaWdpbmFsLXRpdGxlPSJBam91dGVyIGF1eCBmYXZvcmlzIiBkYXRhLXBvc3RpZD0iMjEwNjQ0NCI+PC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iY29tcGFyZS1hY3Rpb24iIGRhdGEtb3JpZ2luYWwtdGl0bGU9IkNvbXBhcmVyIiBkYXRhLXBpbWFnZT0iIiBkYXRhLXBpZD0iMjEwNjQ0NCI+PC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgIDwvZGl2PiAgICAgICAgICAgCiAgICAgICAgPC9kaXY+ICAgICAgICAgIAogICAgPC9kaXY+CgogICAgICAgICAgICAKICAgICAgICAgIAogICAgICAgCiAgICAgICAgIAoKCgo8ZGl2IGNsYXNzPSJjb2wtbWQtNCBsaXN0aW5nX3dyYXBwZXIiIGRhdGEtb3JnPSI0IiBkYXRhLWxpc3RpZD0iMjEwNTE1MCIgPiAKICAgIDxkaXYgY2xhc3M9InByb3BlcnR5X2xpc3RpbmciIGRhdGEtbGluaz0iaHR0cDovL3d3dy5hZ2VuY2Vzc2FpbnRmZXJkaW5hbmQuY29tL3Byb3BlcnRpZXMvZXhlbG1hbnMtNC1waWVjZXMtMi8iPgogICAgICAgIDxkaXYgY2xhc3M9Imxpc3RpbmctdW5pdC1pbWctd3JhcHBlciI+PGEgaHJlZj0iaHR0cDovL3d3dy5hZ2VuY2Vzc2FpbnRmZXJkaW5hbmQuY29tL3Byb3BlcnRpZXMvZXhlbG1hbnMtNC1waWVjZXMtMi8iPjxpbWcgd2lkdGg9IjQ4MCIgaGVpZ2h0PSIyOTgiIHNyYz0iaHR0cDovL3d3dy5hZ2VuY2Vzc2FpbnRmZXJkaW5hbmQuY29tL3dwLWNvbnRlbnQvdXBsb2Fkcy8yMDIwLzA2LzIwMjQzXzEtNDgweDI5OC5qcGciIGNsYXNzPSJsYXp5bG9hZCBpbWctcmVzcG9uc2l2ZSB3cC1wb3N0LWltYWdlIiBhbHQ9IiIgZGF0YS1vcmlnaW5hbD0iIiAvPjwvYT48ZGl2IGNsYXNzPSJsaXN0aW5nLWNvdmVyIj48L2Rpdj4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwOi8vd3d3LmFnZW5jZXNzYWludGZlcmRpbmFuZC5jb20vcHJvcGVydGllcy9leGVsbWFucy00LXBpZWNlcy0yLyI+IDxzcGFuIGNsYXNzPSJsaXN0aW5nLWNvdmVyLXBsdXMiPis8L3NwYW4+PC9hPjwvZGl2PjxhIGhyZWY9Imh0dHA6Ly93d3cuYWdlbmNlc3NhaW50ZmVyZGluYW5kLmNvbS9wcm9wZXJ0aWVzL2V4ZWxtYW5zLTQtcGllY2VzLTIvIj48ZGl2IGNsYXNzPSJyaWJib24td3JhcHBlci1kZWZhdWx0IHJpYmJvbi13cmFwcGVyLURpc3BvbmlibGUiPjxkaXYgY2xhc3M9InJpYmJvbi1pbnNpZGUgRGlzcG9uaWJsZSI+RGlzcG9uaWJsZTwvZGl2PjwvZGl2PjwvYT4KICAKICAgICAgICA8aDQ+PGEgaHJlZj0iaHR0cDovL3d3dy5hZ2VuY2Vzc2FpbnRmZXJkaW5hbmQuY29tL3Byb3BlcnRpZXMvZXhlbG1hbnMtNC1waWVjZXMtMi8iPgogICAgICAgICAgICBFeGVsbWFucyAmIzgyMTE7IDQgcGnDqGNlKHMpICAgICAgICAgICAgPC9hPiAKICAgICAgICA8L2g0PiAKICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvcGVydHlfbG9jYXRpb24iPiAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImluZm9yb29tIj4yPC9zcGFuPjxzcGFuIGNsYXNzPSJpbmZvYmF0aCI+NDwvc3Bhbj4gPHNwYW4gY2xhc3M9ImluZm9zaXplIj43NiBtPHN1cD4yPC9zdXA+PC9zcGFuPiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Imxpc3RpbmdfZGV0YWlscyB0aGVfZ3JpZF92aWV3Ij4KICAgICAgICAgICAgICAgICAgICBQQVJJUyAxNiAmIzgyMTE7IE1pY2hlbCBBbmdlIC8gRXhlbG1hbnMgRGFucyB1biBiZWwgaW1tZXVibGUgZW4gUGllcnJlIGRlIC4uLiAgICAgICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJsaXN0aW5nX2RldGFpbHMgdGhlX2xpc3RfdmlldyI+CiAgICAgICAgICAgICAgICAgICAgUEFSSVMgMTYgJiM4MjExOyBNaWNoZWwgQW5nZSAvIEV4ZWxtYW5zIERhbnMgdW4gYmVsIGltbWV1YmxlIGVuIFBpZXJyZSBkZSB0YWlsbGUgMTkzMCwgY2hhcm1hbnQgYXBwYXJ0ZW1lbnQgNCBwacOoY2VzIC4uLiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgCiAgICAgICAKICAgICAgICAgICAgPGRpdiBjbGFzcz0ibGlzdGluZ19wcm9wX2RldGFpbHMiPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAKICAgICAgICAgICAgPGRpdiBjbGFzcz0ibGlzdGluZ191bml0X3ByaWNlX3dyYXBwZXIiPjc5Ni4wMDAg4oKsIDxzcGFuIGNsYXNzPSJwcmljZV9sYWJlbCI+Kjwvc3Bhbj4gICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJsaXN0aW5nX2FjdGlvbnMiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ic2hhcmVfdW5pdCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHA6Ly93d3cuZmFjZWJvb2suY29tL3NoYXJlci5waHA/dT1odHRwOi8vd3d3LmFnZW5jZXNzYWludGZlcmRpbmFuZC5jb20vcHJvcGVydGllcy9leGVsbWFucy00LXBpZWNlcy0yLyZhbXA7dD1FeGVsbWFucyslMjYlMjM4MjExJTNCKzQrcGklQzMlQThjZSUyOHMlMjkiIHRhcmdldD0iX2JsYW5rIiBjbGFzcz0ic29jaWFsX2ZhY2Vib29rIj48L2E+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHA6Ly90d2l0dGVyLmNvbS9ob21lP3N0YXR1cz1FeGVsbWFucyslMjYlMjM4MjExJTNCKzQrcGklQzMlQThjZSUyOHMlMjkraHR0cCUzQSUyRiUyRnd3dy5hZ2VuY2Vzc2FpbnRmZXJkaW5hbmQuY29tJTJGcHJvcGVydGllcyUyRmV4ZWxtYW5zLTQtcGllY2VzLTIlMkYiIGNsYXNzPSJzb2NpYWxfdHdlZXQiIHRhcmdldD0iX2JsYW5rIj48L2E+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vcGx1cy5nb29nbGUuY29tL3NoYXJlP3VybD1odHRwOi8vd3d3LmFnZW5jZXNzYWludGZlcmRpbmFuZC5jb20vcHJvcGVydGllcy9leGVsbWFucy00LXBpZWNlcy0yLyIgb25jbGljaz0iamF2YXNjcmlwdDp3aW5kb3cub3Blbih0aGlzLmhyZWYsJycsICdtZW51YmFyPW5vLHRvb2xiYXI9bm8scmVzaXphYmxlPXllcyxzY3JvbGxiYXJzPXllcyxoZWlnaHQ9NjAwLHdpZHRoPTYwMCcpO3JldHVybiBmYWxzZTsiIHRhcmdldD0iX2JsYW5rIiBjbGFzcz0ic29jaWFsX2dvb2dsZSI+PC9hPiAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cDovL3BpbnRlcmVzdC5jb20vcGluL2NyZWF0ZS9idXR0b24vP3VybD1odHRwOi8vd3d3LmFnZW5jZXNzYWludGZlcmRpbmFuZC5jb20vcHJvcGVydGllcy9leGVsbWFucy00LXBpZWNlcy0yLyZhbXA7bWVkaWE9JmFtcDtkZXNjcmlwdGlvbj1FeGVsbWFucyslMjYlMjM4MjExJTNCKzQrcGklQzMlQThjZSUyOHMlMjkiIHRhcmdldD0iX2JsYW5rIiBjbGFzcz0ic29jaWFsX3BpbnRlcmVzdCI+PC9hPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJzaGFyZV9saXN0IiAgZGF0YS1vcmlnaW5hbC10aXRsZT0iUGFydGFnZXIiID48L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9Imljb24tZmF2IGljb24tZmF2LW9mZiIgZGF0YS1vcmlnaW5hbC10aXRsZT0iQWpvdXRlciBhdXggZmF2b3JpcyIgZGF0YS1wb3N0aWQ9IjIxMDUxNTAiPjwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImNvbXBhcmUtYWN0aW9uIiBkYXRhLW9yaWdpbmFsLXRpdGxlPSJDb21wYXJlciIgZGF0YS1waW1hZ2U9IiIgZGF0YS1waWQ9IjIxMDUxNTAiPjwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4gICAgICAgICAgIAogICAgICAgIDwvZGl2PiAgICAgICAgICAKICAgIDwvZGl2PgoKICAgICAgICAgICAgCiAgICAgICAgICAKICAgICAgIAogICAgICAgICAgICAgICA8L2Rpdj4JCiAgICAKCiAKICAgICAgICA8L2Rpdj48IS0tIGVuZCBzaW5nbGUgY29udGVudCAtLT4KICAgIDwvZGl2PjwhLS0gZW5kIDljb2wgY29udGFpbmVyLS0+CiAgICAKPCEtLSBiZWdpbiBzaWRlYmFyIC0tPgo8ZGl2IGNsYXNzPSJjbGVhcmZpeCB2aXNpYmxlLXhzIj48L2Rpdj4KICAgIAogICAgPGRpdiBjbGFzcz0iY29sLXhzLTEyIGNvbC1tZC0zIHdpZGdldC1hcmVhLXNpZGViYXIiIGlkPSJwcmltYXJ5IiA+CiAgICAgICAgCgo8ZGl2IGNsYXNzPSJhZ2VudF9jb250YW5jdF9mb3JtX3NpZGViYXIiPgogICAgCgoKCjwhLS0gPGRpdiBjbGFzcz0iY29sLW1kLSBsaXN0aW5nX3dyYXBwZXIiPiAtLT4KICAgIDxkaXYgY2xhc3M9ImFnZW50X3VuaXQiIGRhdGEtbGluaz0iaHR0cDovL3d3dy5hZ2VuY2Vzc2FpbnRmZXJkaW5hbmQuY29tL2FnZW50cy92aWN0b3ItaHVnby8iPgogICAgICAgIDxkaXYgY2xhc3M9ImFnZW50LXVuaXQtaW1nLXdyYXBwZXIiPgogICAgICAgICAgICA8aW1nIHdpZHRoPSI0ODAiIGhlaWdodD0iMjk4IiBzcmM9Imh0dHA6Ly93d3cuYWdlbmNlc3NhaW50ZmVyZGluYW5kLmNvbS93cC1jb250ZW50L3VwbG9hZHMvMjAxNS8xMC9WSUNUT1ItSFVHTy1mYWNhZGUtNDgweDI5OC5qcGciIGNsYXNzPSJsYXp5bG9hZCBpbWctcmVzcG9uc2l2ZSB3cC1wb3N0LWltYWdlIiBhbHQ9IiIgZGF0YS1vcmlnaW5hbD0iaHR0cDovL3d3dy5hZ2VuY2Vzc2FpbnRmZXJkaW5hbmQuY29tL3dwLWNvbnRlbnQvdXBsb2Fkcy8yMDE1LzEwL1ZJQ1RPUi1IVUdPLWZhY2FkZS00ODB4Mjk4LmpwZyIgLz48ZGl2IGNsYXNzPSJsaXN0aW5nLWNvdmVyIj48L2Rpdj4KICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHA6Ly93d3cuYWdlbmNlc3NhaW50ZmVyZGluYW5kLmNvbS9hZ2VudHMvdmljdG9yLWh1Z28vIj4gPHNwYW4gY2xhc3M9Imxpc3RpbmctY292ZXItcGx1cyI+Kzwvc3Bhbj48L2E+ICAgICAgICA8L2Rpdj4gICAgCiAgICAgICAgICAgIAogICAgICAgIDxkaXYgY2xhc3M9IiI+CiAgICAgICAgICAgIDxoND4gPGEgaHJlZj0iaHR0cDovL3d3dy5hZ2VuY2Vzc2FpbnRmZXJkaW5hbmQuY29tL2FnZW50cy92aWN0b3ItaHVnby8iPlZJQ1RPUiBIVUdPPC9hPjwvaDQ+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImFnZW50X3Bvc2l0aW9uIj40LCBhdmVudWUgQnVnZWF1ZCAtIDc1MTE2IFBhcmlzPC9kaXY+PGRpdiBjbGFzcz0iYWdlbnRfZGV0YWlsIj48aSBjbGFzcz0iZmEgZmEtcGhvbmUiPjwvaT4wMSA0NCAxMSAwMSAwMDwvZGl2PjxkaXYgY2xhc3M9ImFnZW50X2RldGFpbCI+PGkgY2xhc3M9ImZhIGZhLWVudmVsb3BlLW8iPjwvaT52aWN0b3JodWdvQHNhaW50ZmVyZGluYW5kLmZyPC9kaXY+PGRpdiBjbGFzcz0iYWdlbnRfZGV0YWlsIj48aSBjbGFzcz0iZmEgZmEtc2t5cGUiPjwvaT5TdMOpcGhhbmUgVHJpaGFuPC9kaXY+ICAgICAgICA8L2Rpdj4gCiAgICAKICAgICAgICAKICAgICAgICA8ZGl2IGNsYXNzPSJhZ2VudF91bml0X3NvY2lhbCI+CiAgICAgICAgICAgPGRpdiBjbGFzcz0ic29jaWFsLXdyYXBwZXIiPiAKICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL3d3dy5mYWNlYm9vay5jb20vQWdlbmNlcy5TYWludC5GZXJkaW5hbmQiPjxpIGNsYXNzPSJmYSBmYS1mYWNlYm9vayI+PC9pPjwvYT4gPGEgaHJlZj0iaHR0cHM6Ly90d2l0dGVyLmNvbS9TYWludF9GZXJkaW5hbmQiPjxpIGNsYXNzPSJmYSBmYS10d2l0dGVyIj48L2k+PC9hPiAgICAgICAgICAgICAgCiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgogICAgPC9kaXY+CjwhLS0gPC9kaXY+ICAgIC0tPiAgCjxkaXYgY2xhc3M9ImFnZW50X2NvbnRhbmN0X2Zvcm0iPgogICAgICAgICAgICAgICAgIDxoNCBpZD0ic2hvd19jb250YWN0Ij5Db250YWN0ZXotbm91czwvaDQ+CiAgICAgICAgICAgICAgICAgICAgIAogICAgCgogICAgICAgIDxkaXYgY2xhc3M9ImFsZXJ0LWJveCBlcnJvciI+CiAgICAgICAgICA8ZGl2IGNsYXNzPSJhbGVydC1tZXNzYWdlIiBpZD0iYWxlcnQtYWdlbnQtY29udGFjdCI+PC9kaXY+CiAgICAgICAgPC9kaXY+IAoKCiAgICAgICAgPGlucHV0IG5hbWU9ImNvbnRhY3RfbmFtZSIgaWQ9ImFnZW50X2NvbnRhY3RfbmFtZSIgdHlwZT0idGV4dCIgIHBsYWNlaG9sZGVyPSJWb3RyZSBub20iIAogICAgICAgICAgICAgICBhcmlhLXJlcXVpcmVkPSJ0cnVlIiBjbGFzcz0iZm9ybS1jb250cm9sIj4KICAgICAgICA8aW5wdXQgdHlwZT0idGV4dCIgbmFtZT0iZW1haWwiIGNsYXNzPSJmb3JtLWNvbnRyb2wiIGlkPSJhZ2VudF91c2VyX2VtYWlsIiBhcmlhLXJlcXVpcmVkPSJ0cnVlIiBwbGFjZWhvbGRlcj0iVm90cmUgYWRyZXNzZSBFbWFpbCIgPgogICAgICAgIDxpbnB1dCB0eXBlPSJ0ZXh0IiBuYW1lPSJwaG9uZSIgIGNsYXNzPSJmb3JtLWNvbnRyb2wiIGlkPSJhZ2VudF9waG9uZSIgcGxhY2Vob2xkZXI9IlZvdHJlIHTDqWzDqXBob25lIiA+CgogICAgICAgIDx0ZXh0YXJlYSBpZD0iYWdlbnRfY29tbWVudCIgbmFtZT0iY29tbWVudCIgY2xhc3M9ImZvcm0tY29udHJvbCIgY29scz0iNDUiIHJvd3M9IjgiIGFyaWEtcmVxdWlyZWQ9InRydWUiIHBsYWNlaG9sZGVyPSJWb3RyZSBNZXNzYWdlIiA+PC90ZXh0YXJlYT4JCgogICAgICAgIDxpbnB1dCB0eXBlPSJzdWJtaXQiIGNsYXNzPSJ3cGJfYnV0dG9uICB3cGJfYnRuLWluZm8gd3BiX2J0bi1sYXJnZSIgIGlkPSJhZ2VudF9zdWJtaXQiIHZhbHVlPSJFbnZveWVyIE1lc3NhZ2UiPgoKICAgICAgICA8aW5wdXQgbmFtZT0icHJvcF9pZCIgdHlwZT0iaGlkZGVuIiAgaWQ9ImFnZW50X3Byb3BlcnR5X2lkIiB2YWx1ZT0iMjA4OTY2NiI+CiAgICAgICAgPGlucHV0IG5hbWU9ImFnZW50X2VtYWlsIiB0eXBlPSJoaWRkZW4iICBpZD0iYWdlbnRfZW1haWwiIHZhbHVlPSJ2aWN0b3JodWdvQHNhaW50ZmVyZGluYW5kLmZyIj4KICAgICAgICA8aW5wdXQgdHlwZT0iaGlkZGVuIiBuYW1lPSJjb250YWN0X2FqYXhfbm9uY2UiIGlkPSJhZ2VudF9wcm9wZXJ0eV9hamF4X25vbmNlIiAgdmFsdWU9IjljYzdkZTZiNzIiIC8+CgoKCiAgICA8L2Rpdj48L2Rpdj4gICAgICAgIAogICAgICAgIDx1bCBjbGFzcz0ieG94byI+CiAgICAgICAgICAgIDxsaSBpZD0iZXhlY3BocC0yIiBjbGFzcz0id2lkZ2V0LWNvbnRhaW5lciB3aWRnZXRfZXhlY3BocCI+PGgzIGNsYXNzPSJ3aWRnZXQtdGl0bGUtc2lkZWJhciI+RFBFPC9oMz4JCQk8ZGl2IGNsYXNzPSJleGVjcGhwd2lkZ2V0Ij48aW1nIHNyYz0iaHR0cDovL3d3dy5hZ2VuY2UtY2hhaWxsb3QuY29tL3dwLWNvbnRlbnQvdXBsb2Fkcy8yMDE1LzA1L1ZpZGUuanBnIj48L2Rpdj4KCQk8L2xpPjxsaSBpZD0iYWR2YW5jZWRfc2VhcmNoX3dpZGdldC0yIiBjbGFzcz0id2lkZ2V0LWNvbnRhaW5lciBhZHZhbmNlZF9zZWFyY2hfc2lkZWJhciI+PGgzIGNsYXNzPSJ3aWRnZXQtdGl0bGUtc2lkZWJhciI+Tm9zIGFubm9uY2VzPC9oMz48Zm9ybSByb2xlPSJzZWFyY2giIG1ldGhvZD0iZ2V0IiAgIGFjdGlvbj0iaHR0cDovL3d3dy5hZ2VuY2Vzc2FpbnRmZXJkaW5hbmQuY29tL2FkdmFuY2VkLXNlYXJjaC8iID48ZGl2IGNsYXNzPSJkcm9wZG93biBmb3JtLWNvbnRyb2wgIj4KICAgICAgICAgICAgICAgIDxkaXYgZGF0YS10b2dnbGU9ImRyb3Bkb3duIiBpZD0ic2lkZWJhci1hZHZfYWN0aW9ucyIgY2xhc3M9IiBzaWRlYmFyX2ZpbHRlcl9tZW51ICAiIGRhdGEtdmFsdWU9ImFsbCI+VHJhbnNhY3Rpb25zCiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImNhcmV0ICBjYXJldF9zaWRlYmFyICI+PC9zcGFuPgogICAgICAgICAgICAgICAgICAgIDwvZGl2PiA8aW5wdXQgdHlwZT0iaGlkZGVuIiBuYW1lPSJmaWx0ZXJfc2VhcmNoX2FjdGlvbltdIiB2YWx1ZT0iIj4KCiAgICAgICAgICAgICAgICAgICAgPHVsICBpZD0ic2lkZWJhci1hY3Rpb25zbGlzdCIgY2xhc3M9ImRyb3Bkb3duLW1lbnUgZmlsdGVyX21lbnUiIHJvbGU9Im1lbnUiIGFyaWEtbGFiZWxsZWRieT0ic2lkZWJhci1hZHZfYWN0aW9ucyI+CiAgICAgICAgICAgICAgICAgICAgICAgICA8bGkgcm9sZT0icHJlc2VudGF0aW9uIiBkYXRhLXZhbHVlPSJhbGwiPlRyYW5zYWN0aW9uczwvbGk+PGxpICByb2xlPSJwcmVzZW50YXRpb24iIGRhdGEtdmFsdWU9ImxvYy1tZXVibGUiPkxvYy5NZXVibMOpICg0KTwvbGk+PGxpICByb2xlPSJwcmVzZW50YXRpb24iIGRhdGEtdmFsdWU9ImxvY2F0aW9uIj5Mb2NhdGlvbiAoNik8L2xpPjxsaSAgcm9sZT0icHJlc2VudGF0aW9uIiBkYXRhLXZhbHVlPSJzb3VzLW9mZnJlIj5Tb3VzIE9mZnJlICgzKTwvbGk+PGxpICByb2xlPSJwcmVzZW50YXRpb24iIGRhdGEtdmFsdWU9InNvdXMtcHJvbWVzc2UiPlNvdXMgUHJvbWVzc2UgKDQpPC9saT48bGkgIHJvbGU9InByZXNlbnRhdGlvbiIgZGF0YS12YWx1ZT0idmVuZHUiPlZFTkRVICgyKTwvbGk+PGxpICByb2xlPSJwcmVzZW50YXRpb24iIGRhdGEtdmFsdWU9InZlbnRlIj5WZW50ZSAoMTI3KTwvbGk+CiAgICAgICAgICAgICAgICAgICAgPC91bD4gICAgICAgIAogICAgICAgICAgICAgICAgPC9kaXY+PGRpdiBjbGFzcz0iZHJvcGRvd24gZm9ybS1jb250cm9sICI+CiAgICAgICAgICAgICAgICA8ZGl2IGRhdGEtdG9nZ2xlPSJkcm9wZG93biIgaWQ9InNpZGViYXItYWR2YW5jZWRfY2l0eSIgY2xhc3M9IiBzaWRlYmFyX2ZpbHRlcl9tZW51ICAiIGRhdGEtdmFsdWU9ImFsbCI+VG91dGVzIGxlcyB2aWxsZXMKICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iY2FyZXQgIGNhcmV0X3NpZGViYXIgIj48L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgPC9kaXY+IDxpbnB1dCB0eXBlPSJoaWRkZW4iIG5hbWU9ImFkdmFuY2VkX2NpdHkiIHZhbHVlPSIiPgoKICAgICAgICAgICAgICAgICAgICA8dWwgIGlkPSJzaWRlYmFyLWFkdi1zZWFyY2gtY2l0eSIgY2xhc3M9ImRyb3Bkb3duLW1lbnUgZmlsdGVyX21lbnUiIHJvbGU9Im1lbnUiIGFyaWEtbGFiZWxsZWRieT0ic2lkZWJhci1hZHZhbmNlZF9jaXR5Ij4KICAgICAgICAgICAgICAgICAgICAgICAgPGxpIHJvbGU9InByZXNlbnRhdGlvbiIgZGF0YS12YWx1ZT0iYWxsIiBkYXRhLXZhbHVlMj0iYWxsIj5Ub3V0ZXMgbGVzIHZpbGxlczwvbGk+PGxpIHJvbGU9InByZXNlbnRhdGlvbiIgZGF0YS12YWx1ZT0iYm91bG9nbmUtYmlsbGFuY291cnQiIGRhdGEtdmFsdWUyPSJib3Vsb2duZS1iaWxsYW5jb3VydCI+Qm91bG9nbmUtQmlsbGFuY291cnQgKDcpPC9saT48bGkgcm9sZT0icHJlc2VudGF0aW9uIiBkYXRhLXZhbHVlPSJjbGljaHkiIGRhdGEtdmFsdWUyPSJjbGljaHkiPkNMSUNIWSAoMSk8L2xpPjxsaSByb2xlPSJwcmVzZW50YXRpb24iIGRhdGEtdmFsdWU9Imlzc3ktbGVzLW1vdWxpbmVhdXgiIGRhdGEtdmFsdWUyPSJpc3N5LWxlcy1tb3VsaW5lYXV4Ij5JU1NZIExFUyBNT1VMSU5FQVVYICgyKTwvbGk+PGxpIHJvbGU9InByZXNlbnRhdGlvbiIgZGF0YS12YWx1ZT0ibGV2YWxsb2lzLXBlcnJldCIgZGF0YS12YWx1ZTI9ImxldmFsbG9pcy1wZXJyZXQiPkxldmFsbG9pcy1QZXJyZXQgKDcpPC9saT48bGkgcm9sZT0icHJlc2VudGF0aW9uIiBkYXRhLXZhbHVlPSJtYWlzb25zLWFsZm9ydCIgZGF0YS12YWx1ZTI9Im1haXNvbnMtYWxmb3J0Ij5NYWlzb25zLUFsZm9ydCAoMSk8L2xpPjxsaSByb2xlPSJwcmVzZW50YXRpb24iIGRhdGEtdmFsdWU9Im1ldWRvbiIgZGF0YS12YWx1ZTI9Im1ldWRvbiI+TUVVRE9OICgxKTwvbGk+PGxpIHJvbGU9InByZXNlbnRhdGlvbiIgZGF0YS12YWx1ZT0ibmV1aWxseS1zdXItc2VpbmUiIGRhdGEtdmFsdWUyPSJuZXVpbGx5LXN1ci1zZWluZSI+TmV1aWxseS1zdXItU2VpbmUgKDM2KTwvbGk+PGxpIHJvbGU9InByZXNlbnRhdGlvbiIgZGF0YS12YWx1ZT0icGFyaXMiIGRhdGEtdmFsdWUyPSJwYXJpcyI+UEFSSVMgKDMpPC9saT48bGkgcm9sZT0icHJlc2VudGF0aW9uIiBkYXRhLXZhbHVlPSJwYXJpcy0wMSIgZGF0YS12YWx1ZTI9InBhcmlzLTAxIj5QYXJpcyAwMSAoMSk8L2xpPjxsaSByb2xlPSJwcmVzZW50YXRpb24iIGRhdGEtdmFsdWU9InBhcmlzLTA0IiBkYXRhLXZhbHVlMj0icGFyaXMtMDQiPlBhcmlzIDA0ICgyKTwvbGk+PGxpIHJvbGU9InByZXNlbnRhdGlvbiIgZGF0YS12YWx1ZT0icGFyaXMtMDciIGRhdGEtdmFsdWUyPSJwYXJpcy0wNyI+UGFyaXMgMDcgKDQpPC9saT48bGkgcm9sZT0icHJlc2VudGF0aW9uIiBkYXRhLXZhbHVlPSJwYXJpcy0wOCIgZGF0YS12YWx1ZTI9InBhcmlzLTA4Ij5QYXJpcyAwOCAoNSk8L2xpPjxsaSByb2xlPSJwcmVzZW50YXRpb24iIGRhdGEtdmFsdWU9InBhcmlzLTE1IiBkYXRhLXZhbHVlMj0icGFyaXMtMTUiPlBhcmlzIDE1ICg3KTwvbGk+PGxpIHJvbGU9InByZXNlbnRhdGlvbiIgZGF0YS12YWx1ZT0icGFyaXMtMTYiIGRhdGEtdmFsdWUyPSJwYXJpcy0xNiI+UGFyaXMgMTYgKDMyKTwvbGk+PGxpIHJvbGU9InByZXNlbnRhdGlvbiIgZGF0YS12YWx1ZT0icGFyaXMtMTciIGRhdGEtdmFsdWUyPSJwYXJpcy0xNyI+UGFyaXMgMTcgKDI5KTwvbGk+PGxpIHJvbGU9InByZXNlbnRhdGlvbiIgZGF0YS12YWx1ZT0icGFyaXMtMTgiIGRhdGEtdmFsdWUyPSJwYXJpcy0xOCI+UGFyaXMgMTggKDMpPC9saT48bGkgcm9sZT0icHJlc2VudGF0aW9uIiBkYXRhLXZhbHVlPSJzYWludC1vdWVuIiBkYXRhLXZhbHVlMj0ic2FpbnQtb3VlbiI+U0FJTlQgT1VFTiAoMik8L2xpPjxsaSByb2xlPSJwcmVzZW50YXRpb24iIGRhdGEtdmFsdWU9InNwZXJvbmUiIGRhdGEtdmFsdWUyPSJzcGVyb25lIj5TUEVST05FICgxKTwvbGk+PGxpIHJvbGU9InByZXNlbnRhdGlvbiIgZGF0YS12YWx1ZT0idGhlb3VsZS1zdXItbWVyIiBkYXRhLXZhbHVlMj0idGhlb3VsZS1zdXItbWVyIj5USEVPVUxFIFNVUiBNRVIgKDEpPC9saT48bGkgcm9sZT0icHJlc2VudGF0aW9uIiBkYXRhLXZhbHVlPSJ2YXVjcmVzc29uIiBkYXRhLXZhbHVlMj0idmF1Y3Jlc3NvbiI+VkFVQ1JFU1NPTiAoMSk8L2xpPgogICAgICAgICAgICAgICAgICAgIDwvdWw+ICAgICAgICAKICAgICAgICAgICAgICAgIDwvZGl2PjxpbnB1dCB0eXBlPSJ0ZXh0IiBpZD0ic2lkZWJhci1tb3QtY2xlIiAgbmFtZT0ibW90LWNsZSIgcGxhY2Vob2xkZXI9Ik1vdCBjbMOpIiB2YWx1ZT0iIiBjbGFzcz0iYWR2YW5jZWRfc2VsZWN0IGZvcm0tY29udHJvbCIgLz48ZGl2IGNsYXNzPSJkcm9wZG93biBmb3JtLWNvbnRyb2wgIj4KICAgICAgICAgICAgICAgIDxkaXYgZGF0YS10b2dnbGU9ImRyb3Bkb3duIiBpZD0ic2lkZWJhci1jaGFtYnJlcy1taW4iIGNsYXNzPSIgc2lkZWJhcl9maWx0ZXJfbWVudSAgIiBkYXRhLXZhbHVlPSJhbGwiPkNoYW1icmVzIG1pbgogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJjYXJldCAgY2FyZXRfc2lkZWJhciAiPjwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4gPGlucHV0IHR5cGU9ImhpZGRlbiIgbmFtZT0iY2hhbWJyZXMtbWluIiB2YWx1ZT0iIj4KCiAgICAgICAgICAgICAgICAgICAgPHVsICBpZD0ic2lkZWJhci1zZWFyY2gtY2hhbWJyZXMtbWluIiBjbGFzcz0iZHJvcGRvd24tbWVudSBmaWx0ZXJfbWVudSIgcm9sZT0ibWVudSIgYXJpYS1sYWJlbGxlZGJ5PSJzaWRlYmFyLWNoYW1icmVzLW1pbiI+CiAgICAgICAgICAgICAgICAgICAgICAgICA8bGkgcm9sZT0icHJlc2VudGF0aW9uIiBkYXRhLXZhbHVlPSJhbGwiPkNoYW1icmVzIG1pbjwvbGk+PGxpIGRhdGEtdmFsdWU9IjEiICB2YWx1ZT0iMSI+MTwvbGk+PGxpIGRhdGEtdmFsdWU9IjIiICB2YWx1ZT0iMiI+MjwvbGk+PGxpIGRhdGEtdmFsdWU9IjMiICB2YWx1ZT0iMyI+MzwvbGk+PGxpIGRhdGEtdmFsdWU9IjQiICB2YWx1ZT0iNCI+NDwvbGk+PGxpIGRhdGEtdmFsdWU9IjUiICB2YWx1ZT0iNSI+NTwvbGk+PGxpIGRhdGEtdmFsdWU9IjYiICB2YWx1ZT0iNiI+NjwvbGk+PGxpIGRhdGEtdmFsdWU9IjciICB2YWx1ZT0iNyI+NzwvbGk+PGxpIGRhdGEtdmFsdWU9IjgiICB2YWx1ZT0iOCI+ODwvbGk+PGxpIGRhdGEtdmFsdWU9IjkiICB2YWx1ZT0iOSI+OTwvbGk+PGxpIGRhdGEtdmFsdWU9IjEwIiAgdmFsdWU9IjEwIj4xMDwvbGk+CiAgICAgICAgICAgICAgICAgICAgPC91bD4gICAgICAgIAogICAgICAgICAgICAgICAgPC9kaXY+PGRpdiBjbGFzcz0iYWR2X3NlYXJjaF9zbGlkZXIiPiAKICAgICAgICAgICAgICAgICAgICA8cD4KICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGZvcj0iYW1vdW50Ij5CdWRnZXQgOjwvbGFiZWw+CiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGlkPSJhbW91bnRfd2QiICBzdHlsZT0iYm9yZGVyOjA7IGNvbG9yOiNmNjkzMWY7IGZvbnQtd2VpZ2h0OmJvbGQ7Ij4wIOKCrCBqdXNxdSfDoCA0LjAwMC4wMDAg4oKsPC9zcGFuPgogICAgICAgICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGlkPSJzbGlkZXJfcHJpY2Vfd2lkZ2V0Ij48L2Rpdj4KICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0iaGlkZGVuIiBpZD0icHJpY2VfbG93X3dpZGdldCIgIG5hbWU9InByaWNlX2xvdyIgIHZhbHVlPSIwIi8+CiAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9ImhpZGRlbiIgaWQ9InByaWNlX21heF93aWRnZXQiICBuYW1lPSJwcmljZV9tYXgiICB2YWx1ZT0iNDAwMDAwMCIvPgogICAgICAgICAgICAgICAgPC9kaXY+PGRpdiBjbGFzcz0iYWR2X2V4dGVuZGVkX29wdGlvbnNfdGV4dCIgaWQ9ImFkdl9leHRlbmRlZF9vcHRpb25zX3RleHRfd2lkZ2V0Ij5QbHVzIGRlIGNyaXTDqHJlczwvZGl2PjxkaXYgY2xhc3M9ImV4dGVuZGVkX3NlYXJjaF9jaGVja193cmFwcGVyIj48c3BhbiBpZD0iYWR2X2V4dGVuZGVkX2Nsb3NlX3dpZGdldCI+PGkgY2xhc3M9ImZhIGZhLXRpbWVzIj48L2k+PC9zcGFuPjxkaXYgY2xhc3M9ImV4dGVuZGVkX3NlYXJjaF9jaGVja2VyIj48aW5wdXQgdHlwZT0iY2hlY2tib3giIGlkPSJwYXJraW5nd2lkZ2V0IiBuYW1lPSJwYXJraW5nIiB2YWx1ZT0iMSIgPjxsYWJlbCBmb3I9InBhcmtpbmd3aWRnZXQiPlBhcmtpbmc8L2xhYmVsPjwvZGl2PjxkaXYgY2xhc3M9ImV4dGVuZGVkX3NlYXJjaF9jaGVja2VyIj48aW5wdXQgdHlwZT0iY2hlY2tib3giIGlkPSJhc2NlbnNldXJ3aWRnZXQiIG5hbWU9ImFzY2Vuc2V1ciIgdmFsdWU9IjEiID48bGFiZWwgZm9yPSJhc2NlbnNldXJ3aWRnZXQiPkFzY2Vuc2V1cjwvbGFiZWw+PC9kaXY+PGRpdiBjbGFzcz0iZXh0ZW5kZWRfc2VhcmNoX2NoZWNrZXIiPjxpbnB1dCB0eXBlPSJjaGVja2JveCIgaWQ9InRlcnJhc3Nld2lkZ2V0IiBuYW1lPSJ0ZXJyYXNzZSIgdmFsdWU9IjEiID48bGFiZWwgZm9yPSJ0ZXJyYXNzZXdpZGdldCI+VGVycmFzc2U8L2xhYmVsPjwvZGl2PjxkaXYgY2xhc3M9ImV4dGVuZGVkX3NlYXJjaF9jaGVja2VyIj48aW5wdXQgdHlwZT0iY2hlY2tib3giIGlkPSJqYXJkaW53aWRnZXQiIG5hbWU9ImphcmRpbiIgdmFsdWU9IjEiID48bGFiZWwgZm9yPSJqYXJkaW53aWRnZXQiPkphcmRpbjwvbGFiZWw+PC9kaXY+PC9kaXY+PGJ1dHRvbiBjbGFzcz0id3BiX2J1dHRvbiAgd3BiX2J0bi1pbmZvIHdwYl9idG4tbGFyZ2UiIGlkPSJhZHZhbmNlZF9zdWJtaXRfd2lkZ2V0Ij5SZWNoZXJjaGVyPC9idXR0b24+CiAgICAgICAgICAgICAgICA8L2Zvcm0+ICAKICAgICAgICAgICAgICAgIDwvbGk+PGxpIGlkPSJ0ZXh0LTYiIGNsYXNzPSJ3aWRnZXQtY29udGFpbmVyIHdpZGdldF90ZXh0Ij48aDMgY2xhc3M9IndpZGdldC10aXRsZS1zaWRlYmFyIj5BdmlzIGNsaWVudHM8L2gzPgkJCTxkaXYgY2xhc3M9InRleHR3aWRnZXQiPjxwPjxpZnJhbWUgc3JjPSJodHRwOi8vd3d3Lm9waW5pb25zeXN0ZW0uZnIvY29tcGFueV9yYXRpbmcucGhwP2dyb3VwX2lkPTYxNyYjMDM4O3JhdGluZ19rZXk9JiMwMzg7bGFuZ3VhZ2U9ZnJlJiMwMzg7dGV4dF9jb2xvcj0wMDAwMDAiIHNjcm9sbGluZz0ibm8iIGZyYW1lYm9yZGVyPSIwIiBzdHlsZT0iYm9yZGVyOiBub25lOyBvdmVyZmxvdzogaGlkZGVuOyB3aWR0aDoxMDAlOyBoZWlnaHQ6IDIycHg7IiBhbGxvd1RyYW5zcGFyZW5jeT0idHJ1ZSI+PC9pZnJhbWU+PC9wPgo8L2Rpdj4KCQk8L2xpPiAgICAgICAgPC91bD4KCiAgICA8L2Rpdj4gICAKCjwhLS0gZW5kIHNpZGViYXIgLS0+PC9kaXY+ICAgCgo8L2Rpdj48IS0tIGVuZCBjb250ZW50X3dyYXBwZXIgc3RhcnRlZCBpbiBoZWFkZXIgLS0+CiAgICAKICAgIDxmb290ZXIgaWQ9ImNvbG9waG9uIiByb2xlPSJjb250ZW50aW5mbyIgIGNsYXNzPSIgIGZvb3Rlcl9iYWNrX3JlcGVhdCAgIj4gICAgCiAgICAgICAgPGRpdiBpZD0iZm9vdGVyLXdpZGdldC1hcmVhIiBjbGFzcz0icm93Ij4KICAgICAgICAgICAKCgogICAgPGRpdiBpZD0iZmlyc3QiIGNsYXNzPSJ3aWRnZXQtYXJlYSBjb2wtbWQtMyI+CiAgICAgICAgPHVsIGNsYXNzPSJ4b3hvIj4KICAgICAgICAgICAgPGxpIGlkPSJmb290ZXJfbGF0ZXN0X3dpZGdldC0yIiBjbGFzcz0id2lkZ2V0LWNvbnRhaW5lciBsYXRlc3RfbGlzdGluZ3MiPjxoMyBjbGFzcz0id2lkZ2V0LXRpdGxlLWZvb3RlciI+Tm9zIGRlcm5pw6hyZXMgYW5ub25jZXM8L2gzPjxkaXYgY2xhc3M9ImxhdGVzdF9saXN0aW5ncyI+PGRpdiBjbGFzcz0id2lkZ2V0X2xhdGVzdF9pbnRlcm5hbCIgZGF0YS1saW5rPSJodHRwOi8vd3d3LmFnZW5jZXNzYWludGZlcmRpbmFuZC5jb20vcHJvcGVydGllcy9tdWV0dGUtNS1waWVjZXMvIj48ZGl2IGNsYXNzPSJ3aWRnZXRfbGF0ZXN0X2xpc3RpbmdfaW1hZ2UiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHA6Ly93d3cuYWdlbmNlc3NhaW50ZmVyZGluYW5kLmNvbS9wcm9wZXJ0aWVzL211ZXR0ZS01LXBpZWNlcy8iPjxpbWcgIHNyYz0iaHR0cDovL3d3dy5hZ2VuY2Vzc2FpbnRmZXJkaW5hbmQuY29tL3dwLWNvbnRlbnQvdXBsb2Fkcy8yMDIwLzA2LzIwMzY3XzEtMTA1eDcwLmpwZyIgIGFsdD0ic2xpZGVyLXRodW1iIiBkYXRhLW9yaWdpbmFsPSJodHRwOi8vd3d3LmFnZW5jZXNzYWludGZlcmRpbmFuZC5jb20vd3AtY29udGVudC91cGxvYWRzLzIwMjAvMDYvMjAzNjdfMS0xMDV4NzAuanBnIiBjbGFzcz0ibGF6eWxvYWQgaW1nX3Jlc3BvbnNpdmUiIGhlaWdodD0iNzAiIHdpZHRoPSIxMDUiIC8+PC9hPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Imxpc3RpbmctY292ZXIiPjwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHA6Ly93d3cuYWdlbmNlc3NhaW50ZmVyZGluYW5kLmNvbS9wcm9wZXJ0aWVzL211ZXR0ZS01LXBpZWNlcy8iPiA8c3BhbiBjbGFzcz0ibGlzdGluZy1jb3Zlci1wbHVzIj4rPC9zcGFuPjwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PjxkaXYgY2xhc3M9Imxpc3RpbmdfbmFtZSAgIj48c3BhbiBjbGFzcz13aWRnZXRfbGF0ZXN0X3RpdGxlPjxhIGhyZWY9Imh0dHA6Ly93d3cuYWdlbmNlc3NhaW50ZmVyZGluYW5kLmNvbS9wcm9wZXJ0aWVzL211ZXR0ZS01LXBpZWNlcy8iPk1VRVRURSAmIzgyMTE7IDUgcGnDqGNlKHMpPC9hPjwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPXdpZGdldF9sYXRlc3RfcHJpY2U+MS43NjAuMDAwIOKCrCA8c3BhbiBjbGFzcz0icHJpY2VfbGFiZWwiPio8L3NwYW4+PC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PjwvZGl2PjxkaXYgY2xhc3M9IndpZGdldF9sYXRlc3RfaW50ZXJuYWwiIGRhdGEtbGluaz0iaHR0cDovL3d3dy5hZ2VuY2Vzc2FpbnRmZXJkaW5hbmQuY29tL3Byb3BlcnRpZXMvbGV2YWxsb2lzLXBlcnJldC02LXBpZWNlcy0yLyI+PGRpdiBjbGFzcz0id2lkZ2V0X2xhdGVzdF9saXN0aW5nX2ltYWdlIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwOi8vd3d3LmFnZW5jZXNzYWludGZlcmRpbmFuZC5jb20vcHJvcGVydGllcy9sZXZhbGxvaXMtcGVycmV0LTYtcGllY2VzLTIvIj48aW1nICBzcmM9Imh0dHA6Ly93d3cuYWdlbmNlc3NhaW50ZmVyZGluYW5kLmNvbS93cC1jb250ZW50L3VwbG9hZHMvMjAyMC8wNi8yMDM3Ml8xLTEwNXg3MC5qcGciICBhbHQ9InNsaWRlci10aHVtYiIgZGF0YS1vcmlnaW5hbD0iaHR0cDovL3d3dy5hZ2VuY2Vzc2FpbnRmZXJkaW5hbmQuY29tL3dwLWNvbnRlbnQvdXBsb2Fkcy8yMDIwLzA2LzIwMzcyXzEtMTA1eDcwLmpwZyIgY2xhc3M9Imxhenlsb2FkIGltZ19yZXNwb25zaXZlIiBoZWlnaHQ9IjcwIiB3aWR0aD0iMTA1IiAvPjwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJsaXN0aW5nLWNvdmVyIj48L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwOi8vd3d3LmFnZW5jZXNzYWludGZlcmRpbmFuZC5jb20vcHJvcGVydGllcy9sZXZhbGxvaXMtcGVycmV0LTYtcGllY2VzLTIvIj4gPHNwYW4gY2xhc3M9Imxpc3RpbmctY292ZXItcGx1cyI+Kzwvc3Bhbj48L2E+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj48ZGl2IGNsYXNzPSJsaXN0aW5nX25hbWUgICI+PHNwYW4gY2xhc3M9d2lkZ2V0X2xhdGVzdF90aXRsZT48YSBocmVmPSJodHRwOi8vd3d3LmFnZW5jZXNzYWludGZlcmRpbmFuZC5jb20vcHJvcGVydGllcy9sZXZhbGxvaXMtcGVycmV0LTYtcGllY2VzLTIvIj5sZXZhbGxvaXMtcGVycmV0ICYjODIxMTsgNiBwacOoY2Uocy4uLjwvYT48L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz13aWRnZXRfbGF0ZXN0X3ByaWNlPjIuMzIwLjAwMCDigqwgPHNwYW4gY2xhc3M9InByaWNlX2xhYmVsIj4qPC9zcGFuPjwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj48L2Rpdj48ZGl2IGNsYXNzPSJ3aWRnZXRfbGF0ZXN0X2ludGVybmFsIiBkYXRhLWxpbms9Imh0dHA6Ly93d3cuYWdlbmNlc3NhaW50ZmVyZGluYW5kLmNvbS9wcm9wZXJ0aWVzL2xldmFsbG9pcy1wZXJyZXQtMi1waWVjZXMvIj48ZGl2IGNsYXNzPSJ3aWRnZXRfbGF0ZXN0X2xpc3RpbmdfaW1hZ2UiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHA6Ly93d3cuYWdlbmNlc3NhaW50ZmVyZGluYW5kLmNvbS9wcm9wZXJ0aWVzL2xldmFsbG9pcy1wZXJyZXQtMi1waWVjZXMvIj48aW1nICBzcmM9Imh0dHA6Ly93d3cuYWdlbmNlc3NhaW50ZmVyZGluYW5kLmNvbS93cC1jb250ZW50L3VwbG9hZHMvMjAyMC8wNi8xOTgyNV8xLTEwNXg3MC5qcGciICBhbHQ9InNsaWRlci10aHVtYiIgZGF0YS1vcmlnaW5hbD0iaHR0cDovL3d3dy5hZ2VuY2Vzc2FpbnRmZXJkaW5hbmQuY29tL3dwLWNvbnRlbnQvdXBsb2Fkcy8yMDIwLzA2LzE5ODI1XzEtMTA1eDcwLmpwZyIgY2xhc3M9Imxhenlsb2FkIGltZ19yZXNwb25zaXZlIiBoZWlnaHQ9IjcwIiB3aWR0aD0iMTA1IiAvPjwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJsaXN0aW5nLWNvdmVyIj48L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwOi8vd3d3LmFnZW5jZXNzYWludGZlcmRpbmFuZC5jb20vcHJvcGVydGllcy9sZXZhbGxvaXMtcGVycmV0LTItcGllY2VzLyI+IDxzcGFuIGNsYXNzPSJsaXN0aW5nLWNvdmVyLXBsdXMiPis8L3NwYW4+PC9hPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+PGRpdiBjbGFzcz0ibGlzdGluZ19uYW1lICAiPjxzcGFuIGNsYXNzPXdpZGdldF9sYXRlc3RfdGl0bGU+PGEgaHJlZj0iaHR0cDovL3d3dy5hZ2VuY2Vzc2FpbnRmZXJkaW5hbmQuY29tL3Byb3BlcnRpZXMvbGV2YWxsb2lzLXBlcnJldC0yLXBpZWNlcy8iPmxldmFsbG9pcy1wZXJyZXQgJiM4MjExOyAyIHBpw6hjZShzLi4uPC9hPjwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPXdpZGdldF9sYXRlc3RfcHJpY2U+NzY1LjAwMCDigqwgPHNwYW4gY2xhc3M9InByaWNlX2xhYmVsIj4qPC9zcGFuPjwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj48L2Rpdj48ZGl2IGNsYXNzPSJ3aWRnZXRfbGF0ZXN0X2ludGVybmFsIiBkYXRhLWxpbms9Imh0dHA6Ly93d3cuYWdlbmNlc3NhaW50ZmVyZGluYW5kLmNvbS9wcm9wZXJ0aWVzL2xldmFsbG9pcy1wZXJyZXQtNi1waWVjZXMvIj48ZGl2IGNsYXNzPSJ3aWRnZXRfbGF0ZXN0X2xpc3RpbmdfaW1hZ2UiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHA6Ly93d3cuYWdlbmNlc3NhaW50ZmVyZGluYW5kLmNvbS9wcm9wZXJ0aWVzL2xldmFsbG9pcy1wZXJyZXQtNi1waWVjZXMvIj48aW1nICBzcmM9Imh0dHA6Ly93d3cuYWdlbmNlc3NhaW50ZmVyZGluYW5kLmNvbS93cC1jb250ZW50L3VwbG9hZHMvMjAyMC8wNi8xOTgyM18xLTEwNXg3MC5qcGciICBhbHQ9InNsaWRlci10aHVtYiIgZGF0YS1vcmlnaW5hbD0iaHR0cDovL3d3dy5hZ2VuY2Vzc2FpbnRmZXJkaW5hbmQuY29tL3dwLWNvbnRlbnQvdXBsb2Fkcy8yMDIwLzA2LzE5ODIzXzEtMTA1eDcwLmpwZyIgY2xhc3M9Imxhenlsb2FkIGltZ19yZXNwb25zaXZlIiBoZWlnaHQ9IjcwIiB3aWR0aD0iMTA1IiAvPjwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJsaXN0aW5nLWNvdmVyIj48L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwOi8vd3d3LmFnZW5jZXNzYWludGZlcmRpbmFuZC5jb20vcHJvcGVydGllcy9sZXZhbGxvaXMtcGVycmV0LTYtcGllY2VzLyI+IDxzcGFuIGNsYXNzPSJsaXN0aW5nLWNvdmVyLXBsdXMiPis8L3NwYW4+PC9hPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+PGRpdiBjbGFzcz0ibGlzdGluZ19uYW1lICAiPjxzcGFuIGNsYXNzPXdpZGdldF9sYXRlc3RfdGl0bGU+PGEgaHJlZj0iaHR0cDovL3d3dy5hZ2VuY2Vzc2FpbnRmZXJkaW5hbmQuY29tL3Byb3BlcnRpZXMvbGV2YWxsb2lzLXBlcnJldC02LXBpZWNlcy8iPmxldmFsbG9pcy1wZXJyZXQgJiM4MjExOyA2IHBpw6hjZShzLi4uPC9hPjwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPXdpZGdldF9sYXRlc3RfcHJpY2U+MS42MjAuMDAwIOKCrCA8c3BhbiBjbGFzcz0icHJpY2VfbGFiZWwiPio8L3NwYW4+PC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PjwvZGl2PjwvZGl2PjwvbGk+ICAgICAgICA8L3VsPgogICAgPC9kaXY+PCEtLSAjZmlyc3QgLndpZGdldC1hcmVhIC0tPgoKICAgIAogICAgCiAgICA8ZGl2IGlkPSJzZWNvbmQiIGNsYXNzPSJ3aWRnZXQtYXJlYSBjb2wtbWQtMyI+CiAgICAgICAgPHVsIGNsYXNzPSJ4b3hvIj4KICAgICAgICA8bGkgaWQ9InRleHQtMyIgY2xhc3M9IndpZGdldC1jb250YWluZXIgd2lkZ2V0X3RleHQiPjxoMyBjbGFzcz0id2lkZ2V0LXRpdGxlLWZvb3RlciI+Tm90cmUgbWFnYXppbmU8L2gzPgkJCTxkaXYgY2xhc3M9InRleHR3aWRnZXQiPjxhIGhyZWY9Imh0dHA6Ly93d3cuYWdlbmNlc3NhaW50ZmVyZGluYW5kLmNvbS93cC1jb250ZW50L3VwbG9hZHMvMjAxOS8wNi9NQUctU0YtTjQtREVGLWJhc3NlLWRlZmluaXRpb24ucGRmIiB0YXJnZXQ9Il9ibGFuayIgcmVsPSJub29wZW5lciBub3JlZmVycmVyIj48aW1nIHNyYz0iaHR0cDovL3d3dy5hZ2VuY2Vzc2FpbnRmZXJkaW5hbmQuY29tL3dwLWNvbnRlbnQvdXBsb2Fkcy8yMDE5LzA2L2NvdmVyLnBuZyIgd2lkdGg9IjE2MHB4IiAvPjxiciAvPjxiciAvPlByaW50ZW1wcyAtIEV0w6kgMjAxOTwvYT48L2Rpdj4KCQk8L2xpPiAgICAgICAgPC91bD4KICAgIDwvZGl2PjwhLS0gI3NlY29uZCAud2lkZ2V0LWFyZWEgLS0+CgogICAgCiAgICAKICAgIAogICAgPGRpdiBpZD0idGhpcmQiIGNsYXNzPSJ3aWRnZXQtYXJlYSBjb2wtbWQtMyI+CiAgICAgICAgPHVsIGNsYXNzPSJ4b3hvIj4KICAgICAgICA8bGkgaWQ9InRleHQtOCIgY2xhc3M9IndpZGdldC1jb250YWluZXIgd2lkZ2V0X3RleHQiPjxoMyBjbGFzcz0id2lkZ2V0LXRpdGxlLWZvb3RlciI+T24gcmVjcnV0ZSAhPC9oMz4JCQk8ZGl2IGNsYXNzPSJ0ZXh0d2lkZ2V0Ij48ZGl2IGNsYXNzPSJmcm1fZm9ybXMgIHdpdGhfZnJtX3N0eWxlIGZybV9zdHlsZV9mb3JtaWRhYmxlLXN0eWxlIiBpZD0iZnJtX2Zvcm1fOF9jb250YWluZXIiID4KPGZvcm0gZW5jdHlwZT0ibXVsdGlwYXJ0L2Zvcm0tZGF0YSIgbWV0aG9kPSJwb3N0IiBjbGFzcz0iZnJtLXNob3ctZm9ybSAgZnJtX3Byb19mb3JtICIgaWQ9ImZvcm1fY29udGFjdDIiICA+CjxkaXYgY2xhc3M9ImZybV9mb3JtX2ZpZWxkcyAiPgo8ZmllbGRzZXQ+CjxsZWdlbmQgY2xhc3M9ImZybV9oaWRkZW4iPk9uIHJlY3J1dGU8L2xlZ2VuZD4NCg0KPGRpdiBjbGFzcz0iZnJtX2ZpZWxkc19jb250YWluZXIiPgo8aW5wdXQgdHlwZT0iaGlkZGVuIiBuYW1lPSJmcm1fYWN0aW9uIiB2YWx1ZT0iY3JlYXRlIiAvPgo8aW5wdXQgdHlwZT0iaGlkZGVuIiBuYW1lPSJmb3JtX2lkIiB2YWx1ZT0iOCIgLz4KPGlucHV0IHR5cGU9ImhpZGRlbiIgbmFtZT0iZnJtX2hpZGVfZmllbGRzXzgiIGlkPSJmcm1faGlkZV9maWVsZHNfOCIgdmFsdWU9IiIgLz4KPGlucHV0IHR5cGU9ImhpZGRlbiIgbmFtZT0iZm9ybV9rZXkiIHZhbHVlPSJjb250YWN0MiIgLz4KPGlucHV0IHR5cGU9ImhpZGRlbiIgbmFtZT0iaXRlbV9tZXRhWzBdIiB2YWx1ZT0iIiAvPgo8aW5wdXQgdHlwZT0iaGlkZGVuIiBpZD0iZnJtX3N1Ym1pdF9lbnRyeV84IiBuYW1lPSJmcm1fc3VibWl0X2VudHJ5XzgiIHZhbHVlPSJlYTc5YWNiM2EzIiAvPjxpbnB1dCB0eXBlPSJoaWRkZW4iIG5hbWU9Il93cF9odHRwX3JlZmVyZXIiIHZhbHVlPSIvcHJvcGVydGllcy92aWN0b3ItaHVnby01LXBpZWNlcy8iIC8+PGxhYmVsIGZvcj0iZnJtX3ZlcmlmeV84IiBjbGFzcz0iZnJtX3NjcmVlbl9yZWFkZXIgZnJtX2hpZGRlbiI+SWYgeW91IGFyZSBodW1hbiwgbGVhdmUgdGhpcyBmaWVsZCBibGFuay48L2xhYmVsPgo8aW5wdXQgdHlwZT0idGV4dCIgY2xhc3M9ImZybV9oaWRkZW4gZnJtX3ZlcmlmeSIgaWQ9ImZybV92ZXJpZnlfOCIgbmFtZT0iZnJtX3ZlcmlmeSIgdmFsdWU9IiIgIC8+CjxkaXYgaWQ9ImZybV9maWVsZF8xMDRfY29udGFpbmVyIiBjbGFzcz0iZnJtX2Zvcm1fZmllbGQgZm9ybS1maWVsZCAgZnJtX3JlcXVpcmVkX2ZpZWxkIGZybV9ub25lX2NvbnRhaW5lciI+DQogICAgPGxhYmVsIGZvcj0iZmllbGRfb2NmdXAxMiIgY2xhc3M9ImZybV9wcmltYXJ5X2xhYmVsIj5Ob20NCiAgICAgICAgPHNwYW4gY2xhc3M9ImZybV9yZXF1aXJlZCI+Kjwvc3Bhbj4NCiAgICA8L2xhYmVsPg0KICAgIDxpbnB1dCB0eXBlPSJ0ZXh0IiBpZD0iZmllbGRfb2NmdXAxMiIgbmFtZT0iaXRlbV9tZXRhWzEwNF0iIHZhbHVlPSIiICBwbGFjZWhvbGRlcj0iTm9tIGNvbXBsZXQiIGRhdGEtcmVxbXNnPSJDZSBjaGFtcCBuZSBwZXV0IHBhcyDDqnRyZSB2aWRlIiBhcmlhLXJlcXVpcmVkPSJ0cnVlIiBkYXRhLWludm1zZz0iTm9tIGVzdCBub24gdmFsaWRlIiAgLz4NCiAgICANCiAgICANCjwvZGl2Pgo8ZGl2IGlkPSJmcm1fZmllbGRfMTA1X2NvbnRhaW5lciIgY2xhc3M9ImZybV9mb3JtX2ZpZWxkIGZvcm0tZmllbGQgIGZybV9yZXF1aXJlZF9maWVsZCBmcm1fbm9uZV9jb250YWluZXIiPg0KICAgIDxsYWJlbCBmb3I9ImZpZWxkXzI5eWY0ZDIiIGNsYXNzPSJmcm1fcHJpbWFyeV9sYWJlbCI+RW1haWwNCiAgICAgICAgPHNwYW4gY2xhc3M9ImZybV9yZXF1aXJlZCI+Kjwvc3Bhbj4NCiAgICA8L2xhYmVsPg0KICAgIDxpbnB1dCB0eXBlPSJlbWFpbCIgaWQ9ImZpZWxkXzI5eWY0ZDIiIG5hbWU9Iml0ZW1fbWV0YVsxMDVdIiB2YWx1ZT0iIiAgcGxhY2Vob2xkZXI9IkUtbWFpbCIgZGF0YS1yZXFtc2c9IkNlIGNoYW1wIG5lIHBldXQgcGFzIMOqdHJlIHZpZGUiIGFyaWEtcmVxdWlyZWQ9InRydWUiIGRhdGEtaW52bXNnPSJQbGVhc2UgZW50ZXIgYSB2YWxpZCBlbWFpbCBhZGRyZXNzIiAgLz4NCiAgICANCiAgICANCjwvZGl2Pgo8ZGl2IGlkPSJmcm1fZmllbGRfMTEwX2NvbnRhaW5lciIgY2xhc3M9ImZybV9mb3JtX2ZpZWxkIGZvcm0tZmllbGQgIGZybV9yZXF1aXJlZF9maWVsZCBmcm1fbm9uZV9jb250YWluZXIiPg0KICAgIDxsYWJlbCBmb3I9ImZpZWxkX3Jwajk0ZCIgY2xhc3M9ImZybV9wcmltYXJ5X2xhYmVsIj5OdW3DqXJvIGRlIHTDqWzDqXBob25lDQogICAgICAgIDxzcGFuIGNsYXNzPSJmcm1fcmVxdWlyZWQiPio8L3NwYW4+DQogICAgPC9sYWJlbD4NCiAgICA8aW5wdXQgdHlwZT0idGVsIiBpZD0iZmllbGRfcnBqOTRkIiBuYW1lPSJpdGVtX21ldGFbMTEwXSIgdmFsdWU9IiIgIHBsYWNlaG9sZGVyPSJUw6lsw6lwaG9uZSIgZGF0YS1yZXFtc2c9IkNlIGNoYW1wIG5lIHBldXQgcGFzIMOqdHJlIHZpZGUiIGFyaWEtcmVxdWlyZWQ9InRydWUiIGRhdGEtaW52bXNnPSJOdW3DqXJvIGRlIHTDqWzDqXBob25lIGVzdCBub24gdmFsaWRlIiBwYXR0ZXJuPSIoKFwrXGR7MSwzfSgtfC58ICk/XCg/XGRcKT8oLXwgfC4pP1xkezEsNX0pfChcKD9cZHsyLDZ9XCk/KSkoLXwufCApPyhcZHszLDR9KSgtfC58ICk/KFxkezR9KSgoIHh8IGV4dClcZHsxLDV9KXswLDF9JCIgIC8+DQogICAgDQogICAgDQo8L2Rpdj4KPGRpdiBpZD0iZnJtX2ZpZWxkXzE4NF9jb250YWluZXIiIGNsYXNzPSJmcm1fZm9ybV9maWVsZCBmb3JtLWZpZWxkICBmcm1fcmVxdWlyZWRfZmllbGQgZnJtX3RvcF9jb250YWluZXIiPgogICAgPGxhYmVsIGZvcj0iZmllbGRfcTI3MXQiIGNsYXNzPSJmcm1fcHJpbWFyeV9sYWJlbCI+Vm90cmUgQ1YKICAgICAgICA8c3BhbiBjbGFzcz0iZnJtX3JlcXVpcmVkIj4qPC9zcGFuPgogICAgPC9sYWJlbD4KICAgIDxpbnB1dCB0eXBlPSJoaWRkZW4iIG5hbWU9Iml0ZW1fbWV0YVsxODRdIiB2YWx1ZT0iIiBkYXRhLWZybWZpbGU9IjE4NCIgLz4KCjxkaXYgY2xhc3M9ImZybV9kcm9wem9uZSBmcm1fc2luZ2xlX3VwbG9hZCBmcm1fY2xlYXJmaXgiIGlkPSJmaWxlMTg0X2Ryb3B6b25lIiBhcmlhLWxhYmVsbGVkYnk9ImZpZWxkX3EyNzF0X2xhYmVsIiByb2xlPSJncm91cCI+Cgk8ZGl2IGNsYXNzPSJmYWxsYmFjayI+CgkJPGlucHV0IHR5cGU9ImZpbGUiIG5hbWU9ImZpbGUxODQiIGlkPSJmaWVsZF9xMjcxdCIgIGRhdGEtcmVxbXNnPSJDZSBjaGFtcCBuZSBwZXV0IHBhcyDDqnRyZSB2aWRlIiBkYXRhLWludm1zZz0iVMOpbMOpdmVyc2VtZW50IGRlIGZpY2hpZXIgZXN0IG5vbiB2YWxpZGUiIGNsYXNzPSJhdXRvX3dpZHRoIiAgIC8+CgkJCQk8ZGl2IGNsYXNzPSJmcm1fY2xlYXJmaXggIj48L2Rpdj4KCTwvZGl2PgoJPGRpdiBjbGFzcz0iZHotbWVzc2FnZSBuZWVkc2NsaWNrIj4KCQk8c3BhbiBjbGFzcz0iZnJtX2ljb25fZm9udCBmcm1fdXBsb2FkX2ljb24iPjwvc3Bhbj4KCQk8c3BhbiBjbGFzcz0iZnJtX3VwbG9hZF90ZXh0Ij5Ew6lwb3NlciB1biBmaWNoaWVyIGljaSBvdSBjbGlxdWVyIHBvdXIgdMOpbMOpY2hhcmdlcjwvc3Bhbj4KCQk8c3BhbiBjbGFzcz0iZnJtX2NvbXBhY3RfdGV4dCI+Q2hvaXNpciB1biBmaWNoaWVyPC9zcGFuPgoJCTxkaXYgY2xhc3M9ImZybV9zbWFsbF90ZXh0Ij4KCQkJVGFpbGxlIGRlIHTDqWzDqWNoYXJnZW1lbnQgbWF4aW11bSA6IDVNbwkJPC9kaXY+Cgk8L2Rpdj4KPC9kaXY+CgogICAgCiAgICAKPC9kaXY+CjxkaXYgaWQ9ImZybV9maWVsZF8xNzlfY29udGFpbmVyIiBjbGFzcz0iZnJtX2Zvcm1fZmllbGQgZm9ybS1maWVsZCAgZnJtX3JlcXVpcmVkX2ZpZWxkIGZybV9ub25lX2NvbnRhaW5lciB2ZXJ0aWNhbF9yYWRpbyI+CiAgICA8bGFiZWwgZm9yPSJmaWVsZF95a2s2MCIgY2xhc3M9ImZybV9wcmltYXJ5X2xhYmVsIj5DYXNlIMOgIGNvY2hlcgogICAgICAgIDxzcGFuIGNsYXNzPSJmcm1fcmVxdWlyZWQiPio8L3NwYW4+CiAgICA8L2xhYmVsPgogICAgPGRpdiBjbGFzcz0iZnJtX29wdF9jb250YWluZXIiPgkJPGRpdiBjbGFzcz0iZnJtX2NoZWNrYm94IiBpZD0iZnJtX2NoZWNrYm94XzE3OS0wIj48bGFiZWwgZm9yPSJmaWVsZF95a2s2MC0wIj48aW5wdXQgdHlwZT0iY2hlY2tib3giIG5hbWU9Iml0ZW1fbWV0YVsxNzldW10iIGlkPSJmaWVsZF95a2s2MC0wIiB2YWx1ZT0iRW4gc291bWV0dGFudCBjZSBmb3JtdWxhaXJlLCBqJiMwMzk7YWNjZXB0ZSBxdWUgbGVzIGluZm9ybWF0aW9ucyBzYWlzaWVzIHNvaWVudCBleHBsb2l0w6llcyBkYW5zIGxlIGNhZHJlIGRlIGxhIGRlbWFuZGUgZGUgcmVjcnV0ZW1lbnQgZXQgZGUgbGEgcmVsYXRpb24gY29tbWVyY2lhbGUgcXVpIHBldXQgZW4gZMOpY291bGVyLiIgIGRhdGEtcmVxbXNnPSJDZSBjaGFtcCBuZSBwZXV0IHBhcyDDqnRyZSB2aWRlIiBkYXRhLWludm1zZz0iQ2FzZSDDoCBjb2NoZXIgZXN0IG5vbiB2YWxpZGUiICAgLz4gRW4gc291bWV0dGFudCBjZSBmb3JtdWxhaXJlLCBqJ2FjY2VwdGUgcXVlIGxlcyBpbmZvcm1hdGlvbnMgc2Fpc2llcyBzb2llbnQgZXhwbG9pdMOpZXMgZGFucyBsZSBjYWRyZSBkZSBsYSBkZW1hbmRlIGRlIHJlY3J1dGVtZW50IGV0IGRlIGxhIHJlbGF0aW9uIGNvbW1lcmNpYWxlIHF1aSBwZXV0IGVuIGTDqWNvdWxlci48L2xhYmVsPjwvZGl2Pgo8L2Rpdj4KICAgIAogICAgCjwvZGl2Pgo8ZGl2IGlkPSJmcm1fZmllbGRfMTgwX2NvbnRhaW5lciIgY2xhc3M9ImZybV9mb3JtX2ZpZWxkICBmcm1faHRtbF9jb250YWluZXIgZm9ybS1maWVsZCI+UG91ciBjb25uYcOudHJlIGV0IGV4ZXJjZXIgdm9zIGRyb2l0cywgbm90YW1tZW50IGRlIHJldHJhaXQgZGUgdm90cmUgY29uc2VudGVtZW50IMOgIGwndXRpbGlzYXRpb24gZGVzIGRvbm7DqWVzIGNvbGxlY3TDqWVzIHBhciBjZSBmb3JtdWxhaXJlLCB2ZXVpbGxleiBjb25zdWx0ZXIgbm90cmUgPGEgaHJlZj0iaHR0cDovL3d3dy5hZ2VuY2Vzc2FpbnRmZXJkaW5hbmQuY29tL3BvbGl0aXF1ZS1kZS1jb25maWRlbnRpYWxpdGUvIj5wb2xpdGlxdWUgZGUgY29uZmlkZW50aWFsaXTDqTwvYT4uPC9kaXY+CjxpbnB1dCB0eXBlPSJoaWRkZW4iIG5hbWU9Iml0ZW1fa2V5IiB2YWx1ZT0iIiAvPgoJPGRpdiBjbGFzcz0iZnJtX3N1Ym1pdCI+DQoNCjxpbnB1dCB0eXBlPSJzdWJtaXQiIHZhbHVlPSJTb3VtZXR0cmUiICBjbGFzcz0iZnJtX2ZpbmFsX3N1Ym1pdCIgZm9ybW5vdmFsaWRhdGU9ImZvcm1ub3ZhbGlkYXRlIiAvPg0KPGltZyBjbGFzcz0iZnJtX2FqYXhfbG9hZGluZyIgc3JjPSJodHRwOi8vd3d3LmFnZW5jZXNzYWludGZlcmRpbmFuZC5jb20vd3AtY29udGVudC9wbHVnaW5zL2Zvcm1pZGFibGUvaW1hZ2VzL2FqYXhfbG9hZGVyLmdpZiIgYWx0PSJFbnZvaSIvPg0KDQo8L2Rpdj48L2Rpdj4KPC9maWVsZHNldD4KPC9kaXY+CjwvZm9ybT4KPC9kaXY+Cgo8L2Rpdj4KCQk8L2xpPiAgICAgICAgPC91bD4KICAgIDwvZGl2PjwhLS0gI3RoaXJkIC53aWRnZXQtYXJlYSAtLT4KICAgIAogICAgCiAgICAKCiAgICA8ZGl2IGlkPSJmb3VydGgiIGNsYXNzPSJ3aWRnZXQtYXJlYSBjb2wtbWQtMyI+CiAgICAgICAgPHVsIGNsYXNzPSJ4b3hvIj4KICAgICAgICA8bGkgaWQ9ImNvbnRhY3Rfd2lkZ2V0LTMiIGNsYXNzPSJ3aWRnZXQtY29udGFpbmVyIGNvbnRhY3Rfc2lkZWJhciI+PGgzIGNsYXNzPSJ3aWRnZXQtdGl0bGUtZm9vdGVyIj5Db250YWN0ZXotbm91czwvaDM+PGRpdiBjbGFzcz0iY29udGFjdF9zaWRlYmFyX3dyYXAiPjxwIGNsYXNzPSJ3aWRnZXRfY29udGFjdF9lbWFpbCI+PGkgY2xhc3M9ImZhIGZhLWVudmVsb3BlLW8iPjwvaT48YSBocmVmPSJtYWlsdG86Y29udGFjdEBzYWludGZlcmRpbmFuZC5mciI+Y29udGFjdEBzYWludGZlcmRpbmFuZC5mcjwvYT48L3A+PHAgY2xhc3M9IndpZGdldF9jb250YWN0X3VybCI+PGkgY2xhc3M9ImZhIGZhLWRlc2t0b3AiPjwvaT48YSBocmVmPSJ3d3cuYWdlbmNlc3NhaW50ZmVyZGluYW5kLmNvbSI+d3d3LmFnZW5jZXNzYWludGZlcmRpbmFuZC5jb208L2E+PC9wPjwvZGl2PjwvbGk+PGxpIGlkPSJzb2NpYWxfd2lkZ2V0LTIiIGNsYXNzPSJ3aWRnZXQtY29udGFpbmVyIHNvY2lhbF9zaWRlYmFyIj48aDMgY2xhc3M9IndpZGdldC10aXRsZS1mb290ZXIiPlN1aXZlei1ub3VzICE8L2gzPjxkaXYgY2xhc3M9InNvY2lhbF9zaWRlYmFyX2ludGVybmFsIj48YSBocmVmPSJodHRwczovL3d3dy5mYWNlYm9vay5jb20vQWdlbmNlcy5TYWludC5GZXJkaW5hbmQiIHRhcmdldD0iX2JsYW5rIj48aSBjbGFzcz0iZmEgZmEtZmFjZWJvb2sgIGZhLWZ3Ij48L2k+PC9hPjxhIGhyZWY9Imh0dHBzOi8vdHdpdHRlci5jb20vU2FpbnRfRmVyZGluYW5kIiB0YXJnZXQ9Il9ibGFuayI+PGkgY2xhc3M9ImZhIGZhLXR3aXR0ZXIgIGZhLWZ3Ij48L2k+PC9hPjwvZGl2PjwvbGk+PGxpIGlkPSJ0ZXh0LTUiIGNsYXNzPSJ3aWRnZXQtY29udGFpbmVyIHdpZGdldF90ZXh0Ij48aDMgY2xhc3M9IndpZGdldC10aXRsZS1mb290ZXIiPkF2aXMgY2xpZW50czwvaDM+CQkJPGRpdiBjbGFzcz0idGV4dHdpZGdldCI+PHA+PGlmcmFtZSBzcmM9Imh0dHA6Ly93d3cub3BpbmlvbnN5c3RlbS5mci9jb21wYW55X3JhdGluZy5waHA/Z3JvdXBfaWQ9NjE3JiMwMzg7cmF0aW5nX2tleT0mIzAzODtsYW5ndWFnZT1mcmUmIzAzODt0ZXh0X2NvbG9yPTAwMDAwMCIgc2Nyb2xsaW5nPSJubyIgZnJhbWVib3JkZXI9IjAiIHN0eWxlPSJib3JkZXI6IG5vbmU7IG92ZXJmbG93OiBoaWRkZW47IHdpZHRoOjEwMCU7IGhlaWdodDogMjJweDsiIGFsbG93VHJhbnNwYXJlbmN5PSJ0cnVlIj48L2lmcmFtZT48L3A+CjwvZGl2PgoJCTwvbGk+ICAgICAgICA8L3VsPgogICAgPC9kaXY+PCEtLSAjZm91cnRoIC53aWRnZXQtYXJlYSAtLT4KCgogICAgICAgIDwvZGl2PjwhLS0gI2Zvb3Rlci13aWRnZXQtYXJlYSAtLT4KCiAgICAgICAgPGRpdiBjbGFzcz0ic3ViX2Zvb3RlciI+ICAKICAgICAgICAgICAgPGRpdiBjbGFzcz0ic3ViX2Zvb3Rlcl9jb250ZW50Ij4KICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJjb3B5cmlnaHQiPgogICAgICAgICAgICAgICAgICAgIFNhaW50IEZlcmRpbmFuZCBJbW1vYmlsaWVyIC0gVG91cyBkcm9pdHMgcsOpc2VydsOpcyAgICAgICAgICAgICAgICA8L3NwYW4+CgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ic3ViZm9vdGVyX21lbnUiPgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Im1lbnUtZm9vdGVyLWNvbnRhaW5lciI+PHVsIGlkPSJtZW51LWZvb3RlciIgY2xhc3M9Im1lbnUiPjxsaSBpZD0ibWVudS1pdGVtLTIwODQ2MDgiIGNsYXNzPSJtZW51LWl0ZW0gbWVudS1pdGVtLXR5cGUtY3VzdG9tIG1lbnUtaXRlbS1vYmplY3QtY3VzdG9tIG1lbnUtaXRlbS0yMDg0NjA4Ij48YSBocmVmPSJodHRwOi8vd3d3LmFnZW5jZXNzYWludGZlcmRpbmFuZC5jb20vd3AtY29udGVudC91cGxvYWRzLzIwMTkvMTEvQmFyZW1lLUFnZW5jZXMtU2FpbnQtRmVyZGluYW5kLWltbW9iaWxpZXIucGRmIj5CYXLDqG1lIGhvbm9yYWlyZXM8L2E+PC9saT4KPGxpIGlkPSJtZW51LWl0ZW0tMTc3MjEiIGNsYXNzPSJtZW51LWl0ZW0gbWVudS1pdGVtLXR5cGUtcG9zdF90eXBlIG1lbnUtaXRlbS1vYmplY3QtcGFnZSBtZW51LWl0ZW0tMTc3MjEiPjxhIGhyZWY9Imh0dHA6Ly93d3cuYWdlbmNlc3NhaW50ZmVyZGluYW5kLmNvbS90ZXJtcy1vZi11c2VyLyI+TWVudGlvbnMgbMOpZ2FsZXM8L2E+PC9saT4KPGxpIGlkPSJtZW51LWl0ZW0tMTk0MDY4MCIgY2xhc3M9Im1lbnUtaXRlbSBtZW51LWl0ZW0tdHlwZS1wb3N0X3R5cGUgbWVudS1pdGVtLW9iamVjdC1wYWdlIG1lbnUtaXRlbS0xOTQwNjgwIj48YSBocmVmPSJodHRwOi8vd3d3LmFnZW5jZXNzYWludGZlcmRpbmFuZC5jb20vcG9saXRpcXVlLWRlLWNvbmZpZGVudGlhbGl0ZS8iPlBvbGl0aXF1ZSBkZSBjb25maWRlbnRpYWxpdMOpPC9hPjwvbGk+CjwvdWw+PC9kaXY+ICAgICAgICAgICAgICAgIDwvZGl2PiAgCiAgICAgICAgICAgIDwvZGl2PiAgCiAgICAgICAgPC9kaXY+CiAgICA8L2Zvb3Rlcj48IS0tICNjb2xvcGhvbiAtLT4KCjxhIGhyZWY9IiMiIGNsYXNzPSJiYWNrdG9wICI+PGkgY2xhc3M9ImZhIGZhLWNoZXZyb24tdXAiPjwvaT48L2E+CjxhIGhyZWY9IiMiIGNsYXNzPSJjb250YWN0LWJveCAiIHN0eWxlPSJiYWNrZ3JvdW5kOiB1cmwoaHR0cDovL3d3dy5hZ2VuY2Vzc2FpbnRmZXJkaW5hbmQuY29tL3dwLWNvbnRlbnQvdXBsb2Fkcy8yMDE3LzAxL0JPVVRPTi1hc3Npc3RhbnQtdmlydHVlbC0yLnBuZykgY2VudGVyIG5vLXJlcGVhdDsgaGVpZ2h0OiA4MnB4OyB3aWR0aDogNjVweDsgYmFja2dyb3VuZC1zaXplOiAxMDAlIDEwMCU7Ij48L2E+CiAKPGRpdiBjbGFzcz0iY29udGFjdGZvcm13cmFwcGVyIGhpZGRlbiIgc3R5bGU9ImhlaWdodDogNTAlOyBwYWRkaW5nOiAwcHg7Ij4gCgk8aWZyYW1lIHNyYz0iaHR0cDovL3d3dy5hZ2VuY2Vzc2FpbnRmZXJkaW5hbmQuY29tL3dwLWNvbnRlbnQvdGhlbWVzL3dwcmVzaWRlbmNlL2JlYm90LWlmcmFtZS5odG1sIiBpZD0iaWZyYW1lLWJlYm90Ij48L2lmcmFtZT4KPC9kaXY+CjxkaXYgY2xhc3M9Im5hdmlnYXRpb25hbF9saW5rcyI+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJuYXYtcHJldi13cmFwcGVyIj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Im5hdi1wcmV2Ij4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwOi8vd3d3LmFnZW5jZXNzYWludGZlcmRpbmFuZC5jb20vcHJvcGVydGllcy9jaGFpbGxvdC00LXBpZWNlcy8iIHJlbD0icHJldiI+Q2hhaWxsb3QgJiM4MjExOyA0IHBpw6hjZShzKTwvYT4gICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJmYSBmYS1hbmdsZS1sZWZ0Ij48L2k+ICAgICAgICAgICAKICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgCiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJuYXYtbmV4dC13cmFwcGVyIj4KICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJuYXYtbmV4dCI+ICAgIAogICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZmEgZmEtYW5nbGUtcmlnaHQiPjwvaT4KICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cDovL3d3dy5hZ2VuY2Vzc2FpbnRmZXJkaW5hbmQuY29tL3Byb3BlcnRpZXMvdmljdG9yLWh1Z28tMi1waWVjZXMvIiByZWw9Im5leHQiPiBWaWN0b3IgSHVnbyAmIzgyMTE7IDIgcGnDqGNlKHMpPC9hPiAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PiAgCiAgICA8L2Rpdj4gCiAgCgoKPGxpbmsgcmVsPSdzdHlsZXNoZWV0JyBpZD0nanF1ZXJ5LXRoZW1lLWNzcycgIGhyZWY9J2h0dHA6Ly93d3cuYWdlbmNlc3NhaW50ZmVyZGluYW5kLmNvbS93cC1jb250ZW50L3BsdWdpbnMvZm9ybWlkYWJsZS1wcm8vY3NzL3VpLWxpZ2h0bmVzcy9qcXVlcnktdWkuY3NzP3Zlcj00LjAzJyB0eXBlPSd0ZXh0L2NzcycgbWVkaWE9J2FsbCcgLz4KPHNjcmlwdCB0eXBlPSd0ZXh0L2phdmFzY3JpcHQnIHNyYz0naHR0cDovL3d3dy5hZ2VuY2Vzc2FpbnRmZXJkaW5hbmQuY29tL3dwLWluY2x1ZGVzL2pzL2pxdWVyeS91aS9jb3JlLm1pbi5qcz92ZXI9MS4xMS40Jz48L3NjcmlwdD4KPHNjcmlwdCB0eXBlPSd0ZXh0L2phdmFzY3JpcHQnIHNyYz0naHR0cDovL3d3dy5hZ2VuY2Vzc2FpbnRmZXJkaW5hbmQuY29tL3dwLWluY2x1ZGVzL2pzL2pxdWVyeS91aS93aWRnZXQubWluLmpzP3Zlcj0xLjExLjQnPjwvc2NyaXB0Pgo8c2NyaXB0IHR5cGU9J3RleHQvamF2YXNjcmlwdCcgc3JjPSdodHRwOi8vd3d3LmFnZW5jZXNzYWludGZlcmRpbmFuZC5jb20vd3AtaW5jbHVkZXMvanMvanF1ZXJ5L3VpL21vdXNlLm1pbi5qcz92ZXI9MS4xMS40Jz48L3NjcmlwdD4KPHNjcmlwdCB0eXBlPSd0ZXh0L2phdmFzY3JpcHQnIHNyYz0naHR0cDovL3d3dy5hZ2VuY2Vzc2FpbnRmZXJkaW5hbmQuY29tL3dwLWluY2x1ZGVzL2pzL2pxdWVyeS91aS9kcmFnZ2FibGUubWluLmpzP3Zlcj0xLjExLjQnPjwvc2NyaXB0Pgo8c2NyaXB0IHR5cGU9J3RleHQvamF2YXNjcmlwdCcgc3JjPSdodHRwOi8vd3d3LmFnZW5jZXNzYWludGZlcmRpbmFuZC5jb20vd3AtaW5jbHVkZXMvanMvanF1ZXJ5L3VpL3Bvc2l0aW9uLm1pbi5qcz92ZXI9MS4xMS40Jz48L3NjcmlwdD4KPHNjcmlwdCB0eXBlPSd0ZXh0L2phdmFzY3JpcHQnIHNyYz0naHR0cDovL3d3dy5hZ2VuY2Vzc2FpbnRmZXJkaW5hbmQuY29tL3dwLWluY2x1ZGVzL2pzL2pxdWVyeS91aS9tZW51Lm1pbi5qcz92ZXI9MS4xMS40Jz48L3NjcmlwdD4KPHNjcmlwdCB0eXBlPSd0ZXh0L2phdmFzY3JpcHQnIHNyYz0naHR0cDovL3d3dy5hZ2VuY2Vzc2FpbnRmZXJkaW5hbmQuY29tL3dwLWluY2x1ZGVzL2pzL3dwLXNhbml0aXplLm1pbi5qcz92ZXI9NS4yLjcnPjwvc2NyaXB0Pgo8c2NyaXB0IHR5cGU9J3RleHQvamF2YXNjcmlwdCcgc3JjPSdodHRwOi8vd3d3LmFnZW5jZXNzYWludGZlcmRpbmFuZC5jb20vd3AtaW5jbHVkZXMvanMvd3AtYTExeS5taW4uanM/dmVyPTUuMi43Jz48L3NjcmlwdD4KPHNjcmlwdCB0eXBlPSd0ZXh0L2phdmFzY3JpcHQnPgovKiA8IVtDREFUQVsgKi8KdmFyIHVpQXV0b2NvbXBsZXRlTDEwbiA9IHsibm9SZXN1bHRzIjoiQXVjdW4gclx1MDBlOXN1bHRhdC4iLCJvbmVSZXN1bHQiOiJVbiByXHUwMGU5c3VsdGF0IHRyb3V2XHUwMGU5LiBVdGlsaXNleiBsZXMgZmxcdTAwZThjaGVzIGhhdXQgZXQgYmFzIGR1IGNsYXZpZXIgcG91ciBsZXMgcGFyY291cmlyLiAiLCJtYW55UmVzdWx0cyI6IiVkIHJcdTAwZTlzdWx0YXRzIHRyb3V2XHUwMGU5cy4gVXRpbGlzZXogbGVzIGZsXHUwMGU4Y2hlcyBoYXV0IGV0IGJhcyBkdSBjbGF2aWVyIHBvdXIgbGVzIHBhcmNvdXJpci4iLCJpdGVtU2VsZWN0ZWQiOiJcdTAwYzlsXHUwMGU5bWVudCBzXHUwMGU5bGVjdGlvbm5cdTAwZTkuIn07Ci8qIF1dPiAqLwo8L3NjcmlwdD4KPHNjcmlwdCB0eXBlPSd0ZXh0L2phdmFzY3JpcHQnIHNyYz0naHR0cDovL3d3dy5hZ2VuY2Vzc2FpbnRmZXJkaW5hbmQuY29tL3dwLWluY2x1ZGVzL2pzL2pxdWVyeS91aS9hdXRvY29tcGxldGUubWluLmpzP3Zlcj0xLjExLjQnPjwvc2NyaXB0Pgo8c2NyaXB0IHR5cGU9J3RleHQvamF2YXNjcmlwdCcgc3JjPSdodHRwOi8vd3d3LmFnZW5jZXNzYWludGZlcmRpbmFuZC5jb20vd3AtaW5jbHVkZXMvanMvanF1ZXJ5L3VpL3NsaWRlci5taW4uanM/dmVyPTEuMTEuNCc+PC9zY3JpcHQ+CjxzY3JpcHQgdHlwZT0ndGV4dC9qYXZhc2NyaXB0JyBzcmM9J2h0dHA6Ly93d3cuYWdlbmNlc3NhaW50ZmVyZGluYW5kLmNvbS93cC1jb250ZW50L3RoZW1lcy93cHJlc2lkZW5jZS9qcy9qcXVlcnkucHJldHR5cGhvdG8uanM/dmVyPTEuMCc+PC9zY3JpcHQ+CjxzY3JpcHQgdHlwZT0ndGV4dC9qYXZhc2NyaXB0JyBzcmM9J2h0dHA6Ly93d3cuYWdlbmNlc3NhaW50ZmVyZGluYW5kLmNvbS93cC1jb250ZW50L3RoZW1lcy93cHJlc2lkZW5jZS9qcy9wbGFjZWhvbGRlcnMubWluLmpzP3Zlcj0xLjAnPjwvc2NyaXB0Pgo8c2NyaXB0IHR5cGU9J3RleHQvamF2YXNjcmlwdCcgc3JjPSdodHRwOi8vd3d3LmFnZW5jZXNzYWludGZlcmRpbmFuZC5jb20vd3AtY29udGVudC90aGVtZXMvd3ByZXNpZGVuY2UvanMvZW5jb2Rlci5qcz92ZXI9MS4wJz48L3NjcmlwdD4KPHNjcmlwdCB0eXBlPSd0ZXh0L2phdmFzY3JpcHQnIHNyYz0naHR0cDovL3d3dy5hZ2VuY2Vzc2FpbnRmZXJkaW5hbmQuY29tL3dwLWNvbnRlbnQvdGhlbWVzL3dwcmVzaWRlbmNlL2pzL2RlbnNlLmpzP3Zlcj0xLjAnPjwvc2NyaXB0Pgo8c2NyaXB0IHR5cGU9J3RleHQvamF2YXNjcmlwdCcgc3JjPSdodHRwOi8vd3d3LmFnZW5jZXNzYWludGZlcmRpbmFuZC5jb20vd3AtaW5jbHVkZXMvanMvanF1ZXJ5L3VpL2RhdGVwaWNrZXIubWluLmpzP3Zlcj0xLjExLjQnPjwvc2NyaXB0Pgo8c2NyaXB0IHR5cGU9J3RleHQvamF2YXNjcmlwdCc+CmpRdWVyeShkb2N1bWVudCkucmVhZHkoZnVuY3Rpb24oalF1ZXJ5KXtqUXVlcnkuZGF0ZXBpY2tlci5zZXREZWZhdWx0cyh7ImNsb3NlVGV4dCI6IkZlcm1lciIsImN1cnJlbnRUZXh0IjoiQXVqb3VyZFx1MjAxOWh1aSIsIm1vbnRoTmFtZXMiOlsiamFudmllciIsImZcdTAwZTl2cmllciIsIm1hcnMiLCJhdnJpbCIsIm1haSIsImp1aW4iLCJqdWlsbGV0IiwiYW9cdTAwZmJ0Iiwic2VwdGVtYnJlIiwib2N0b2JyZSIsIm5vdmVtYnJlIiwiZFx1MDBlOWNlbWJyZSJdLCJtb250aE5hbWVzU2hvcnQiOlsiSmFuIiwiRlx1MDBlOXYiLCJNYXIiLCJBdnIiLCJNYWkiLCJKdWluIiwiSnVpbCIsIkFvXHUwMGZidCIsIlNlcCIsIk9jdCIsIk5vdiIsIkRcdTAwZTljIl0sIm5leHRUZXh0IjoiU3VpdmFudCIsInByZXZUZXh0IjoiUHJcdTAwZTljXHUwMGU5ZGVudCIsImRheU5hbWVzIjpbImRpbWFuY2hlIiwibHVuZGkiLCJtYXJkaSIsIm1lcmNyZWRpIiwiamV1ZGkiLCJ2ZW5kcmVkaSIsInNhbWVkaSJdLCJkYXlOYW1lc1Nob3J0IjpbImRpbSIsImx1biIsIm1hciIsIm1lciIsImpldSIsInZlbiIsInNhbSJdLCJkYXlOYW1lc01pbiI6WyJEIiwiTCIsIk0iLCJNIiwiSiIsIlYiLCJTIl0sImRhdGVGb3JtYXQiOiJkIE1NIHl5IiwiZmlyc3REYXkiOjEsImlzUlRMIjpmYWxzZX0pO30pOwo8L3NjcmlwdD4KPHNjcmlwdCB0eXBlPSd0ZXh0L2phdmFzY3JpcHQnIHNyYz0naHR0cDovL3d3dy5hZ2VuY2Vzc2FpbnRmZXJkaW5hbmQuY29tL3dwLWNvbnRlbnQvdGhlbWVzL3dwcmVzaWRlbmNlL2pzL2kxOG4vZGF0ZXBpY2tlci1mci5qcz92ZXI9MS4wJz48L3NjcmlwdD4KPHNjcmlwdCB0eXBlPSd0ZXh0L2phdmFzY3JpcHQnIHNyYz0naHR0cDovL3d3dy5hZ2VuY2Vzc2FpbnRmZXJkaW5hbmQuY29tL3dwLWNvbnRlbnQvdGhlbWVzL3dwcmVzaWRlbmNlL2pzL2pxdWVyeS51aS50b3VjaC1wdW5jaC5taW4uanM/dmVyPTEuMCc+PC9zY3JpcHQ+CjxzY3JpcHQgdHlwZT0ndGV4dC9qYXZhc2NyaXB0JyBzcmM9J2h0dHA6Ly93d3cuYWdlbmNlc3NhaW50ZmVyZGluYW5kLmNvbS93cC1jb250ZW50L3RoZW1lcy93cHJlc2lkZW5jZS9qcy9pbmZvYm94LmpzP3Zlcj0xLjAnPjwvc2NyaXB0Pgo8c2NyaXB0IHR5cGU9J3RleHQvamF2YXNjcmlwdCc+Ci8qIDwhW0NEQVRBWyAqLwp2YXIgZ29vZ2xlY29kZV9wcm9wZXJ0eV92YXJzID0geyJnZW5lcmFsX2xhdGl0dWRlIjoiNDguODgyMDIwNyIsImdlbmVyYWxfbG9uZ2l0dWRlIjoiMi4yOTk4NTI4MDAwMDAwNTMzIiwicGF0aCI6Imh0dHA6XC9cL3d3dy5hZ2VuY2Vzc2FpbnRmZXJkaW5hbmQuY29tXC93cC1jb250ZW50XC90aGVtZXNcL3dwcmVzaWRlbmNlXC9jc3NcL2Nzcy1pbWFnZXMiLCJtYXJrZXJzIjoiW1tcIkJBVElHTk9MTEVTJTIwJTI2JTIzODIxMSUzQiUyMDIlMjBwaSVDMyVBOGNlJTI4cyUyOVwiLFwiXCIsXCJcIiwxLFwiJTNDaW1nJTIwd2lkdGglM0QlMjI0MDAlMjIlMjBoZWlnaHQlM0QlMjIxNjElMjIlMjBzcmMlM0QlMjJodHRwJTNBJTJGJTJGd3d3LmFnZW5jZXNzYWludGZlcmRpbmFuZC5jb20lMkZ3cC1jb250ZW50JTJGdXBsb2FkcyUyRjIwMjAlMkYwNiUyRjIwMjU5XzEtNDAweDE2MS5qcGclMjIlMjBjbGFzcyUzRCUyMmF0dGFjaG1lbnQtcHJvcGVydHlfbWFwMSUyMHNpemUtcHJvcGVydHlfbWFwMSUyMHdwLXBvc3QtaW1hZ2UlMjIlMjBhbHQlM0QlMjIlMjIlMjAlMkYlM0VcIixcIjQ4OC4wMDAlMjAlRTIlODIlQUMlM0NzcGFuJTIwY2xhc3MlM0QlMjJpbmZvY3VyJTIyJTNFJTJBJTNDJTJGc3BhbiUzRVwiLFwiYXBwYXJ0ZW1lbnRcIixcInZlbnRlXCIsXCJhcHBhcnRlbWVudHZlbnRlXCIsXCJodHRwJTNBJTJGJTJGd3d3LmFnZW5jZXNzYWludGZlcmRpbmFuZC5jb20lMkZwcm9wZXJ0aWVzJTJGYmF0aWdub2xsZXMtMi1waWVjZXMlMkZcIiwyMTAzNjMwLFwicGFyaXMtMTdcIixcImJhdGlnbm9sbGVzXCIsNDg4MDAwLFwiMVwiLFwiMFwiLFwiMzlcIixcIkFwcGFydGVtZW50XCIsXCJWZW50ZVwiLDE5Mjc5LFwidHlwZXNcIixcInZlbnRlXCIsXCJlcXVhbFwiLFwiY2l0aWVzXCIsXCJwYXJpcy0xN1wiLFwiZ3JlYXRlclwiLFwia2V5d29yZFwiLFwiQkFUSUdOT0xMRVMlMjAlMjYlMjM4MjExJTNCJTIwMiUyMHBpJUMzJUE4Y2UlMjhzJTI5XCIsXCJlcXVhbFwiLFwibm9uZVwiLFwiXCIsXCJlcXVhbFwiLFwicHJvcGVydHktYmVkcm9vbXNcIixcIjFcIixcImdyZWF0ZXJcIixcIm5vbmVcIixcIlwiLFwiZXF1YWxcIixcInByb3BlcnR5LXByaWNlXCIsXCI0ODgwMDBcIixcImdyZWF0ZXJcIixcInByb3BlcnR5LXByaWNlXCIsXCI0ODgwMDBcIixcInNtYWxsZXJcIixcIm5vbmVcIixcIlwiLFwiZXF1YWxcIl0sW1wiRVRPSUxFJTIwJTI2JTIzODIxMSUzQiUyMDAlMjBwaSVDMyVBOGNlJTI4cyUyOVwiLFwiXCIsXCJcIiwyLFwiJTNDaW1nJTIwd2lkdGglM0QlMjI0MDAlMjIlMjBoZWlnaHQlM0QlMjIxNjElMjIlMjBzcmMlM0QlMjJodHRwJTNBJTJGJTJGd3d3LmFnZW5jZXNzYWludGZlcmRpbmFuZC5jb20lMkZ3cC1jb250ZW50JTJGdXBsb2FkcyUyRjIwMTklMkYxMSUyRjE5NDI5XzEtNDAweDE2MS5qcGclMjIlMjBjbGFzcyUzRCUyMmF0dGFjaG1lbnQtcHJvcGVydHlfbWFwMSUyMHNpemUtcHJvcGVydHlfbWFwMSUyMHdwLXBvc3QtaW1hZ2UlMjIlMjBhbHQlM0QlMjIlMjIlMjAlMkYlM0VcIixcIjQ1LjAwMCUyMCVFMiU4MiVBQyUzQ3NwYW4lMjBjbGFzcyUzRCUyMmluZm9jdXIlMjIlM0UlMkElM0MlMkZzcGFuJTNFXCIsXCJwYXJraW5nXCIsXCJ2ZW50ZVwiLFwicGFya2luZ3ZlbnRlXCIsXCJodHRwJTNBJTJGJTJGd3d3LmFnZW5jZXNzYWludGZlcmRpbmFuZC5jb20lMkZwcm9wZXJ0aWVzJTJGZXRvaWxlLTAtcGllY2VzLTIlMkZcIiwyMDgyNzEyLFwicGFyaXMtMTdcIixcImV0b2lsZVwiLDQ1MDAwLFwiMFwiLFwiLTNcIixcIjEzXCIsXCJQYXJraW5nXCIsXCJWZW50ZVwiLDIwNzc2NDUsXCJ0eXBlc1wiLFwidmVudGVcIixcImVxdWFsXCIsXCJjaXRpZXNcIixcInBhcmlzLTE3XCIsXCJncmVhdGVyXCIsXCJrZXl3b3JkXCIsXCJFVE9JTEUlMjAlMjYlMjM4MjExJTNCJTIwMCUyMHBpJUMzJUE4Y2UlMjhzJTI5XCIsXCJlcXVhbFwiLFwibm9uZVwiLFwiXCIsXCJlcXVhbFwiLFwicHJvcGVydHktYmVkcm9vbXNcIixcIjBcIixcImdyZWF0ZXJcIixcIm5vbmVcIixcIlwiLFwiZXF1YWxcIixcInByb3BlcnR5LXByaWNlXCIsXCI0NTAwMFwiLFwiZ3JlYXRlclwiLFwicHJvcGVydHktcHJpY2VcIixcIjQ1MDAwXCIsXCJzbWFsbGVyXCIsXCJub25lXCIsXCJcIixcImVxdWFsXCJdLFtcIkNPVVJDRUxMRVMlMjAlMjYlMjM4MjExJTNCJTIwMSUyMHBpJUMzJUE4Y2UlMjhzJTI5XCIsXCJcIixcIlwiLDMsXCIlM0NpbWclMjB3aWR0aCUzRCUyMjQwMCUyMiUyMGhlaWdodCUzRCUyMjE2MSUyMiUyMHNyYyUzRCUyMmh0dHAlM0ElMkYlMkZ3d3cuYWdlbmNlc3NhaW50ZmVyZGluYW5kLmNvbSUyRndwLWNvbnRlbnQlMkZ1cGxvYWRzJTJGMjAyMCUyRjA2JTJGMjAzMzRfMS00MDB4MTYxLmpwZyUyMiUyMGNsYXNzJTNEJTIyYXR0YWNobWVudC1wcm9wZXJ0eV9tYXAxJTIwc2l6ZS1wcm9wZXJ0eV9tYXAxJTIwd3AtcG9zdC1pbWFnZSUyMiUyMGFsdCUzRCUyMiUyMiUyMCUyRiUzRVwiLFwiMTczLjI1MCUyMCVFMiU4MiVBQyUzQ3NwYW4lMjBjbGFzcyUzRCUyMmluZm9jdXIlMjIlM0UlMkElM0MlMkZzcGFuJTNFXCIsXCJhcHBhcnRlbWVudFwiLFwidmVudGVcIixcImFwcGFydGVtZW50dmVudGVcIixcImh0dHAlM0ElMkYlMkZ3d3cuYWdlbmNlc3NhaW50ZmVyZGluYW5kLmNvbSUyRnByb3BlcnRpZXMlMkZjb3VyY2VsbGVzLTEtcGllY2VzJTJGXCIsMjEwNjAwMixcInBhcmlzLTE3XCIsXCJjb3VyY2VsbGVzXCIsMTczMjUwLFwiMVwiLFwiNVwiLFwiMTFcIixcIkFwcGFydGVtZW50XCIsXCJWZW50ZVwiLDE3OTQ1LFwidHlwZXNcIixcInZlbnRlXCIsXCJlcXVhbFwiLFwiY2l0aWVzXCIsXCJwYXJpcy0xN1wiLFwiZ3JlYXRlclwiLFwia2V5d29yZFwiLFwiQ09VUkNFTExFUyUyMCUyNiUyMzgyMTElM0IlMjAxJTIwcGklQzMlQThjZSUyOHMlMjlcIixcImVxdWFsXCIsXCJub25lXCIsXCJcIixcImVxdWFsXCIsXCJwcm9wZXJ0eS1iZWRyb29tc1wiLFwiMVwiLFwiZ3JlYXRlclwiLFwibm9uZVwiLFwiXCIsXCJlcXVhbFwiLFwicHJvcGVydHktcHJpY2VcIixcIjE3MzI1MFwiLFwiZ3JlYXRlclwiLFwicHJvcGVydHktcHJpY2VcIixcIjE3MzI1MFwiLFwic21hbGxlclwiLFwibm9uZVwiLFwiXCIsXCJlcXVhbFwiXSxbXCJCQVRJR05PTExFUyUyMCUyNiUyMzgyMTElM0IlMjAyJTIwcGklQzMlQThjZSUyOHMlMjlcIixcIlwiLFwiXCIsNCxcIiUzQ2ltZyUyMHdpZHRoJTNEJTIyNDAwJTIyJTIwaGVpZ2h0JTNEJTIyMTYxJTIyJTIwc3JjJTNEJTIyaHR0cCUzQSUyRiUyRnd3dy5hZ2VuY2Vzc2FpbnRmZXJkaW5hbmQuY29tJTJGd3AtY29udGVudCUyRnVwbG9hZHMlMkYyMDIwJTJGMDYlMkYyMDM0Ml8xLTQwMHgxNjEuanBnJTIyJTIwY2xhc3MlM0QlMjJhdHRhY2htZW50LXByb3BlcnR5X21hcDElMjBzaXplLXByb3BlcnR5X21hcDElMjB3cC1wb3N0LWltYWdlJTIyJTIwYWx0JTNEJTIyJTIyJTIwJTJGJTNFXCIsXCI0ODkuMDAwJTIwJUUyJTgyJUFDJTNDc3BhbiUyMGNsYXNzJTNEJTIyaW5mb2N1ciUyMiUzRSUyQSUzQyUyRnNwYW4lM0VcIixcImFwcGFydGVtZW50XCIsXCJ2ZW50ZVwiLFwiYXBwYXJ0ZW1lbnR2ZW50ZVwiLFwiaHR0cCUzQSUyRiUyRnd3dy5hZ2VuY2Vzc2FpbnRmZXJkaW5hbmQuY29tJTJGcHJvcGVydGllcyUyRmJhdGlnbm9sbGVzLTItcGllY2VzLTIlMkZcIiwyMTA2MTk0LFwicGFyaXMtMTdcIixcImJhdGlnbm9sbGVzXCIsNDg5MDAwLFwiMVwiLFwiMVwiLFwiMzhcIixcIkFwcGFydGVtZW50XCIsXCJWZW50ZVwiLDE5Mjc5LFwidHlwZXNcIixcInZlbnRlXCIsXCJlcXVhbFwiLFwiY2l0aWVzXCIsXCJwYXJpcy0xN1wiLFwiZ3JlYXRlclwiLFwia2V5d29yZFwiLFwiQkFUSUdOT0xMRVMlMjAlMjYlMjM4MjExJTNCJTIwMiUyMHBpJUMzJUE4Y2UlMjhzJTI5XCIsXCJlcXVhbFwiLFwibm9uZVwiLFwiXCIsXCJlcXVhbFwiLFwicHJvcGVydHktYmVkcm9vbXNcIixcIjFcIixcImdyZWF0ZXJcIixcIm5vbmVcIixcIlwiLFwiZXF1YWxcIixcInByb3BlcnR5LXByaWNlXCIsXCI0ODkwMDBcIixcImdyZWF0ZXJcIixcInByb3BlcnR5LXByaWNlXCIsXCI0ODkwMDBcIixcInNtYWxsZXJcIixcIm5vbmVcIixcIlwiLFwiZXF1YWxcIl0sW1wiVEVSTkVTJTIwJTI2JTIzODIxMSUzQiUyMDIlMjBwaSVDMyVBOGNlJTI4cyUyOVwiLFwiXCIsXCJcIiw1LFwiJTNDaW1nJTIwd2lkdGglM0QlMjI0MDAlMjIlMjBoZWlnaHQlM0QlMjIxNjElMjIlMjBzcmMlM0QlMjJodHRwJTNBJTJGJTJGd3d3LmFnZW5jZXNzYWludGZlcmRpbmFuZC5jb20lMkZ3cC1jb250ZW50JTJGdXBsb2FkcyUyRjIwMjAlMkYwNiUyRjIwMzE5XzEtNDAweDE2MS5qcGclMjIlMjBjbGFzcyUzRCUyMmF0dGFjaG1lbnQtcHJvcGVydHlfbWFwMSUyMHNpemUtcHJvcGVydHlfbWFwMSUyMHdwLXBvc3QtaW1hZ2UlMjIlMjBhbHQlM0QlMjIlMjIlMjAlMkYlM0VcIixcIjM4MC4wMDAlMjAlRTIlODIlQUMlM0NzcGFuJTIwY2xhc3MlM0QlMjJpbmZvY3VyJTIyJTNFJTJBJTNDJTJGc3BhbiUzRVwiLFwiYXBwYXJ0ZW1lbnRcIixcInZlbnRlXCIsXCJhcHBhcnRlbWVudHZlbnRlXCIsXCJodHRwJTNBJTJGJTJGd3d3LmFnZW5jZXNzYWludGZlcmRpbmFuZC5jb20lMkZwcm9wZXJ0aWVzJTJGdGVybmVzLTItcGllY2VzLTIlMkZcIiwyMTA1NjgyLFwicGFyaXMtMTdcIixcInRlcm5lc1wiLDM4MDAwMCxcIjFcIixcIjFcIixcIjMxXCIsXCJBcHBhcnRlbWVudFwiLFwiVmVudGVcIiwxNzk0NyxcInR5cGVzXCIsXCJ2ZW50ZVwiLFwiZXF1YWxcIixcImNpdGllc1wiLFwicGFyaXMtMTdcIixcImdyZWF0ZXJcIixcImtleXdvcmRcIixcIlRFUk5FUyUyMCUyNiUyMzgyMTElM0IlMjAyJTIwcGklQzMlQThjZSUyOHMlMjlcIixcImVxdWFsXCIsXCJub25lXCIsXCJcIixcImVxdWFsXCIsXCJwcm9wZXJ0eS1iZWRyb29tc1wiLFwiMVwiLFwiZ3JlYXRlclwiLFwibm9uZVwiLFwiXCIsXCJlcXVhbFwiLFwicHJvcGVydHktcHJpY2VcIixcIjM4MDAwMFwiLFwiZ3JlYXRlclwiLFwicHJvcGVydHktcHJpY2VcIixcIjM4MDAwMFwiLFwic21hbGxlclwiLFwibm9uZVwiLFwiXCIsXCJlcXVhbFwiXSxbXCJFVE9JTEUlMjAlMjYlMjM4MjExJTNCJTIwMCUyMHBpJUMzJUE4Y2UlMjhzJTI5XCIsXCJcIixcIlwiLDYsXCIlM0NpbWclMjB3aWR0aCUzRCUyMjQwMCUyMiUyMGhlaWdodCUzRCUyMjE2MSUyMiUyMHNyYyUzRCUyMmh0dHAlM0ElMkYlMkZ3d3cuYWdlbmNlc3NhaW50ZmVyZGluYW5kLmNvbSUyRndwLWNvbnRlbnQlMkZ1cGxvYWRzJTJGMjAxOSUyRjExJTJGMTk1MjlfMS00MDB4MTYxLmpwZyUyMiUyMGNsYXNzJTNEJTIyYXR0YWNobWVudC1wcm9wZXJ0eV9tYXAxJTIwc2l6ZS1wcm9wZXJ0eV9tYXAxJTIwd3AtcG9zdC1pbWFnZSUyMiUyMGFsdCUzRCUyMiUyMiUyMCUyRiUzRVwiLFwiNDUuMDAwJTIwJUUyJTgyJUFDJTNDc3BhbiUyMGNsYXNzJTNEJTIyaW5mb2N1ciUyMiUzRSUyQSUzQyUyRnNwYW4lM0VcIixcInBhcmtpbmdcIixcInZlbnRlXCIsXCJwYXJraW5ndmVudGVcIixcImh0dHAlM0ElMkYlMkZ3d3cuYWdlbmNlc3NhaW50ZmVyZGluYW5kLmNvbSUyRnByb3BlcnRpZXMlMkZldG9pbGUtMC1waWVjZXMlMkZcIiwyMDgzNDg0LFwicGFyaXMtMTdcIixcImV0b2lsZVwiLDQ1MDAwLFwiMFwiLFwiLTNcIixcIjFcIixcIlBhcmtpbmdcIixcIlZlbnRlXCIsMTc5NDcsXCJ0eXBlc1wiLFwidmVudGVcIixcImVxdWFsXCIsXCJjaXRpZXNcIixcInBhcmlzLTE3XCIsXCJncmVhdGVyXCIsXCJrZXl3b3JkXCIsXCJFVE9JTEUlMjAlMjYlMjM4MjExJTNCJTIwMCUyMHBpJUMzJUE4Y2UlMjhzJTI5XCIsXCJlcXVhbFwiLFwibm9uZVwiLFwiXCIsXCJlcXVhbFwiLFwicHJvcGVydHktYmVkcm9vbXNcIixcIjBcIixcImdyZWF0ZXJcIixcIm5vbmVcIixcIlwiLFwiZXF1YWxcIixcInByb3BlcnR5LXByaWNlXCIsXCI0NTAwMFwiLFwiZ3JlYXRlclwiLFwicHJvcGVydHktcHJpY2VcIixcIjQ1MDAwXCIsXCJzbWFsbGVyXCIsXCJub25lXCIsXCJcIixcImVxdWFsXCJdXSIsImNhbWVyYV9hbmdsZSI6IjAiLCJpZHhfc3RhdHVzIjoiMCIsInBhZ2VfY3VzdG9tX3pvb20iOiIxNSIsImN1cnJlbnRfaWQiOiIyMDg5NjY2IiwiZ2VuZXJhdGVkX3BpbnMiOiIwIiwic21hbGxfbWFwIjoiMSIsInR5cGUiOiJST0FETUFQIn07Ci8qIF1dPiAqLwo8L3NjcmlwdD4KPHNjcmlwdCB0eXBlPSd0ZXh0L2phdmFzY3JpcHQnIHNyYz0naHR0cDovL3d3dy5hZ2VuY2Vzc2FpbnRmZXJkaW5hbmQuY29tL3dwLWNvbnRlbnQvdGhlbWVzL3dwcmVzaWRlbmNlL2pzL2dvb2dsZV9qcy9nb29nbGVfbWFwX2NvZGVfbGlzdGluZy5qcz92ZXI9MS4wJz48L3NjcmlwdD4KPHNjcmlwdCB0eXBlPSd0ZXh0L2phdmFzY3JpcHQnPgovKiA8IVtDREFUQVsgKi8KdmFyIG1hcGZ1bmN0aW9uc192YXJzID0geyJwYXRoIjoiaHR0cDpcL1wvd3d3LmFnZW5jZXNzYWludGZlcmRpbmFuZC5jb21cL3dwLWNvbnRlbnRcL3RoZW1lc1wvd3ByZXNpZGVuY2VcL2Nzc1wvY3NzLWltYWdlcyIsInBpbl9pbWFnZXMiOiJ7XCJsb2MtbWV1YmxlXCI6XCJodHRwOlxcXC9cXFwvd3d3LmFnZW5jZXNzYWludGZlcmRpbmFuZC5jb21cXFwvd3AtY29udGVudFxcXC91cGxvYWRzXFxcLzIwMThcXFwvMDNcXFwvcGluc2ZpLnBuZ1wiLFwibG9jYXRpb25cIjpcImh0dHA6XFxcL1xcXC93d3cuYWdlbmNlc3NhaW50ZmVyZGluYW5kLmNvbVxcXC93cC1jb250ZW50XFxcL3VwbG9hZHNcXFwvMjAxOFxcXC8wM1xcXC9waW5zZmkucG5nXCIsXCJzb3VzLW9mZnJlXCI6XCJodHRwOlxcXC9cXFwvd3d3LmFnZW5jZXNzYWludGZlcmRpbmFuZC5jb21cXFwvd3AtY29udGVudFxcXC91cGxvYWRzXFxcLzIwMThcXFwvMDNcXFwvcGluc2ZpLnBuZ1wiLFwic291cy1wcm9tZXNzZVwiOlwiaHR0cDpcXFwvXFxcL3d3dy5hZ2VuY2Vzc2FpbnRmZXJkaW5hbmQuY29tXFxcL3dwLWNvbnRlbnRcXFwvdXBsb2Fkc1xcXC8yMDE4XFxcLzAzXFxcL3BpbnNmaS5wbmdcIixcInZlbmR1XCI6XCJodHRwOlxcXC9cXFwvd3d3LmFnZW5jZXNzYWludGZlcmRpbmFuZC5jb21cXFwvd3AtY29udGVudFxcXC91cGxvYWRzXFxcLzIwMThcXFwvMDNcXFwvcGluc2ZpLnBuZ1wiLFwidmVudGVcIjpcImh0dHA6XFxcL1xcXC93d3cuYWdlbmNlc3NhaW50ZmVyZGluYW5kLmNvbVxcXC93cC1jb250ZW50XFxcL3VwbG9hZHNcXFwvMjAxOFxcXC8wM1xcXC9waW5zZmkucG5nXCIsXCJhcHBhcnRlbWVudFwiOlwiaHR0cDpcXFwvXFxcL3d3dy5hZ2VuY2Vzc2FpbnRmZXJkaW5hbmQuY29tXFxcL3dwLWNvbnRlbnRcXFwvdXBsb2Fkc1xcXC8yMDE4XFxcLzAzXFxcL3BpbnNmaS5wbmdcIixcImJ1cmVhdS1sb2NhbC1wcm9mZXNzaW9ubmVsXCI6XCJodHRwOlxcXC9cXFwvd3d3LmFnZW5jZXNzYWludGZlcmRpbmFuZC5jb21cXFwvd3AtY29udGVudFxcXC91cGxvYWRzXFxcLzIwMThcXFwvMDNcXFwvcGluc2ZpLnBuZ1wiLFwibG9jYWwtY29tbWVyY2lhbFwiOlwiaHR0cDpcXFwvXFxcL3d3dy5hZ2VuY2Vzc2FpbnRmZXJkaW5hbmQuY29tXFxcL3dwLWNvbnRlbnRcXFwvdXBsb2Fkc1xcXC8yMDE4XFxcLzAzXFxcL3BpbnNmaS5wbmdcIixcImxvZnRhdGVsaWVyXCI6XCJodHRwOlxcXC9cXFwvd3d3LmFnZW5jZXNzYWludGZlcmRpbmFuZC5jb21cXFwvd3AtY29udGVudFxcXC91cGxvYWRzXFxcLzIwMThcXFwvMDNcXFwvcGluc2ZpLnBuZ1wiLFwibWFpc29uXCI6XCJodHRwOlxcXC9cXFwvd3d3LmFnZW5jZXNzYWludGZlcmRpbmFuZC5jb21cXFwvd3AtY29udGVudFxcXC91cGxvYWRzXFxcLzIwMThcXFwvMDNcXFwvcGluc2ZpLnBuZ1wiLFwicGFya2luZ1wiOlwiaHR0cDpcXFwvXFxcL3d3dy5hZ2VuY2Vzc2FpbnRmZXJkaW5hbmQuY29tXFxcL3dwLWNvbnRlbnRcXFwvdXBsb2Fkc1xcXC8yMDE4XFxcLzAzXFxcL3BpbnNmaS5wbmdcIixcInBhcmtpbmctYm94XCI6XCJcIixcInByb3ByaWV0ZVwiOlwiaHR0cDpcXFwvXFxcL3d3dy5hZ2VuY2Vzc2FpbnRmZXJkaW5hbmQuY29tXFxcL3dwLWNvbnRlbnRcXFwvdXBsb2Fkc1xcXC8yMDE4XFxcLzAzXFxcL3BpbnNmaS5wbmdcIixcInZpbGxhXCI6XCJodHRwOlxcXC9cXFwvd3d3LmFnZW5jZXNzYWludGZlcmRpbmFuZC5jb21cXFwvd3AtY29udGVudFxcXC91cGxvYWRzXFxcLzIwMThcXFwvMDNcXFwvcGluc2ZpLnBuZ1wiLFwiYXBwYXJ0ZW1lbnRsb2MtbWV1YmxlXCI6XCJodHRwOlxcXC9cXFwvd3d3LmFnZW5jZXNzYWludGZlcmRpbmFuZC5jb21cXFwvd3AtY29udGVudFxcXC91cGxvYWRzXFxcLzIwMThcXFwvMDNcXFwvcGluc2ZpLnBuZ1wiLFwiYnVyZWF1LWxvY2FsLXByb2Zlc3Npb25uZWxsb2MtbWV1YmxlXCI6XCJodHRwOlxcXC9cXFwvd3d3LmFnZW5jZXNzYWludGZlcmRpbmFuZC5jb21cXFwvd3AtY29udGVudFxcXC91cGxvYWRzXFxcLzIwMThcXFwvMDNcXFwvcGluc2ZpLnBuZ1wiLFwibG9jYWwtY29tbWVyY2lhbGxvYy1tZXVibGVcIjpcImh0dHA6XFxcL1xcXC93d3cuYWdlbmNlc3NhaW50ZmVyZGluYW5kLmNvbVxcXC93cC1jb250ZW50XFxcL3VwbG9hZHNcXFwvMjAxOFxcXC8wM1xcXC9waW5zZmkucG5nXCIsXCJsb2Z0YXRlbGllcmxvYy1tZXVibGVcIjpcImh0dHA6XFxcL1xcXC93d3cuYWdlbmNlc3NhaW50ZmVyZGluYW5kLmNvbVxcXC93cC1jb250ZW50XFxcL3VwbG9hZHNcXFwvMjAxOFxcXC8wM1xcXC9waW5zZmkucG5nXCIsXCJtYWlzb25sb2MtbWV1YmxlXCI6XCJodHRwOlxcXC9cXFwvd3d3LmFnZW5jZXNzYWludGZlcmRpbmFuZC5jb21cXFwvd3AtY29udGVudFxcXC91cGxvYWRzXFxcLzIwMThcXFwvMDNcXFwvcGluc2ZpLnBuZ1wiLFwicGFya2luZ2xvYy1tZXVibGVcIjpcImh0dHA6XFxcL1xcXC93d3cuYWdlbmNlc3NhaW50ZmVyZGluYW5kLmNvbVxcXC93cC1jb250ZW50XFxcL3VwbG9hZHNcXFwvMjAxOFxcXC8wM1xcXC9waW5zZmkucG5nXCIsXCJwYXJraW5nLWJveGxvYy1tZXVibGVcIjpcIlwiLFwicHJvcHJpZXRlbG9jLW1ldWJsZVwiOlwiaHR0cDpcXFwvXFxcL3d3dy5hZ2VuY2Vzc2FpbnRmZXJkaW5hbmQuY29tXFxcL3dwLWNvbnRlbnRcXFwvdXBsb2Fkc1xcXC8yMDE4XFxcLzAzXFxcL3BpbnNmaS5wbmdcIixcInZpbGxhbG9jLW1ldWJsZVwiOlwiaHR0cDpcXFwvXFxcL3d3dy5hZ2VuY2Vzc2FpbnRmZXJkaW5hbmQuY29tXFxcL3dwLWNvbnRlbnRcXFwvdXBsb2Fkc1xcXC8yMDE4XFxcLzAzXFxcL3BpbnNmaS5wbmdcIixcImFwcGFydGVtZW50bG9jYXRpb25cIjpcImh0dHA6XFxcL1xcXC93d3cuYWdlbmNlc3NhaW50ZmVyZGluYW5kLmNvbVxcXC93cC1jb250ZW50XFxcL3VwbG9hZHNcXFwvMjAxOFxcXC8wM1xcXC9waW5zZmkucG5nXCIsXCJidXJlYXUtbG9jYWwtcHJvZmVzc2lvbm5lbGxvY2F0aW9uXCI6XCJodHRwOlxcXC9cXFwvd3d3LmFnZW5jZXNzYWludGZlcmRpbmFuZC5jb21cXFwvd3AtY29udGVudFxcXC91cGxvYWRzXFxcLzIwMThcXFwvMDNcXFwvcGluc2ZpLnBuZ1wiLFwibG9jYWwtY29tbWVyY2lhbGxvY2F0aW9uXCI6XCJodHRwOlxcXC9cXFwvd3d3LmFnZW5jZXNzYWludGZlcmRpbmFuZC5jb21cXFwvd3AtY29udGVudFxcXC91cGxvYWRzXFxcLzIwMThcXFwvMDNcXFwvcGluc2ZpLnBuZ1wiLFwibG9mdGF0ZWxpZXJsb2NhdGlvblwiOlwiaHR0cDpcXFwvXFxcL3d3dy5hZ2VuY2Vzc2FpbnRmZXJkaW5hbmQuY29tXFxcL3dwLWNvbnRlbnRcXFwvdXBsb2Fkc1xcXC8yMDE4XFxcLzAzXFxcL3BpbnNmaS5wbmdcIixcIm1haXNvbmxvY2F0aW9uXCI6XCJodHRwOlxcXC9cXFwvd3d3LmFnZW5jZXNzYWludGZlcmRpbmFuZC5jb21cXFwvd3AtY29udGVudFxcXC91cGxvYWRzXFxcLzIwMThcXFwvMDNcXFwvcGluc2ZpLnBuZ1wiLFwicGFya2luZ2xvY2F0aW9uXCI6XCJodHRwOlxcXC9cXFwvd3d3LmFnZW5jZXNzYWludGZlcmRpbmFuZC5jb21cXFwvd3AtY29udGVudFxcXC91cGxvYWRzXFxcLzIwMThcXFwvMDNcXFwvcGluc2ZpLnBuZ1wiLFwicGFya2luZy1ib3hsb2NhdGlvblwiOlwiXCIsXCJwcm9wcmlldGVsb2NhdGlvblwiOlwiaHR0cDpcXFwvXFxcL3d3dy5hZ2VuY2Vzc2FpbnRmZXJkaW5hbmQuY29tXFxcL3dwLWNvbnRlbnRcXFwvdXBsb2Fkc1xcXC8yMDE4XFxcLzAzXFxcL3BpbnNmaS5wbmdcIixcInZpbGxhbG9jYXRpb25cIjpcImh0dHA6XFxcL1xcXC93d3cuYWdlbmNlc3NhaW50ZmVyZGluYW5kLmNvbVxcXC93cC1jb250ZW50XFxcL3VwbG9hZHNcXFwvMjAxOFxcXC8wM1xcXC9waW5zZmkucG5nXCIsXCJhcHBhcnRlbWVudHNvdXMtb2ZmcmVcIjpcImh0dHA6XFxcL1xcXC93d3cuYWdlbmNlc3NhaW50ZmVyZGluYW5kLmNvbVxcXC93cC1jb250ZW50XFxcL3VwbG9hZHNcXFwvMjAxOFxcXC8wM1xcXC9waW5zZmkucG5nXCIsXCJidXJlYXUtbG9jYWwtcHJvZmVzc2lvbm5lbHNvdXMtb2ZmcmVcIjpcImh0dHA6XFxcL1xcXC93d3cuYWdlbmNlc3NhaW50ZmVyZGluYW5kLmNvbVxcXC93cC1jb250ZW50XFxcL3VwbG9hZHNcXFwvMjAxOFxcXC8wM1xcXC9waW5zZmkucG5nXCIsXCJsb2NhbC1jb21tZXJjaWFsc291cy1vZmZyZVwiOlwiaHR0cDpcXFwvXFxcL3d3dy5hZ2VuY2Vzc2FpbnRmZXJkaW5hbmQuY29tXFxcL3dwLWNvbnRlbnRcXFwvdXBsb2Fkc1xcXC8yMDE4XFxcLzAzXFxcL3BpbnNmaS5wbmdcIixcImxvZnRhdGVsaWVyc291cy1vZmZyZVwiOlwiaHR0cDpcXFwvXFxcL3d3dy5hZ2VuY2Vzc2FpbnRmZXJkaW5hbmQuY29tXFxcL3dwLWNvbnRlbnRcXFwvdXBsb2Fkc1xcXC8yMDE4XFxcLzAzXFxcL3BpbnNmaS5wbmdcIixcIm1haXNvbnNvdXMtb2ZmcmVcIjpcImh0dHA6XFxcL1xcXC93d3cuYWdlbmNlc3NhaW50ZmVyZGluYW5kLmNvbVxcXC93cC1jb250ZW50XFxcL3VwbG9hZHNcXFwvMjAxOFxcXC8wM1xcXC9waW5zZmkucG5nXCIsXCJwYXJraW5nc291cy1vZmZyZVwiOlwiaHR0cDpcXFwvXFxcL3d3dy5hZ2VuY2Vzc2FpbnRmZXJkaW5hbmQuY29tXFxcL3dwLWNvbnRlbnRcXFwvdXBsb2Fkc1xcXC8yMDE4XFxcLzAzXFxcL3BpbnNmaS5wbmdcIixcInBhcmtpbmctYm94c291cy1vZmZyZVwiOlwiXCIsXCJwcm9wcmlldGVzb3VzLW9mZnJlXCI6XCJodHRwOlxcXC9cXFwvd3d3LmFnZW5jZXNzYWludGZlcmRpbmFuZC5jb21cXFwvd3AtY29udGVudFxcXC91cGxvYWRzXFxcLzIwMThcXFwvMDNcXFwvcGluc2ZpLnBuZ1wiLFwidmlsbGFzb3VzLW9mZnJlXCI6XCJodHRwOlxcXC9cXFwvd3d3LmFnZW5jZXNzYWludGZlcmRpbmFuZC5jb21cXFwvd3AtY29udGVudFxcXC91cGxvYWRzXFxcLzIwMThcXFwvMDNcXFwvcGluc2ZpLnBuZ1wiLFwiYXBwYXJ0ZW1lbnRzb3VzLXByb21lc3NlXCI6XCJodHRwOlxcXC9cXFwvd3d3LmFnZW5jZXNzYWludGZlcmRpbmFuZC5jb21cXFwvd3AtY29udGVudFxcXC91cGxvYWRzXFxcLzIwMThcXFwvMDNcXFwvcGluc2ZpLnBuZ1wiLFwiYnVyZWF1LWxvY2FsLXByb2Zlc3Npb25uZWxzb3VzLXByb21lc3NlXCI6XCJodHRwOlxcXC9cXFwvd3d3LmFnZW5jZXNzYWludGZlcmRpbmFuZC5jb21cXFwvd3AtY29udGVudFxcXC91cGxvYWRzXFxcLzIwMThcXFwvMDNcXFwvcGluc2ZpLnBuZ1wiLFwibG9jYWwtY29tbWVyY2lhbHNvdXMtcHJvbWVzc2VcIjpcImh0dHA6XFxcL1xcXC93d3cuYWdlbmNlc3NhaW50ZmVyZGluYW5kLmNvbVxcXC93cC1jb250ZW50XFxcL3VwbG9hZHNcXFwvMjAxOFxcXC8wM1xcXC9waW5zZmkucG5nXCIsXCJsb2Z0YXRlbGllcnNvdXMtcHJvbWVzc2VcIjpcImh0dHA6XFxcL1xcXC93d3cuYWdlbmNlc3NhaW50ZmVyZGluYW5kLmNvbVxcXC93cC1jb250ZW50XFxcL3VwbG9hZHNcXFwvMjAxOFxcXC8wM1xcXC9waW5zZmkucG5nXCIsXCJtYWlzb25zb3VzLXByb21lc3NlXCI6XCJodHRwOlxcXC9cXFwvd3d3LmFnZW5jZXNzYWludGZlcmRpbmFuZC5jb21cXFwvd3AtY29udGVudFxcXC91cGxvYWRzXFxcLzIwMThcXFwvMDNcXFwvcGluc2ZpLnBuZ1wiLFwicGFya2luZ3NvdXMtcHJvbWVzc2VcIjpcImh0dHA6XFxcL1xcXC93d3cuYWdlbmNlc3NhaW50ZmVyZGluYW5kLmNvbVxcXC93cC1jb250ZW50XFxcL3VwbG9hZHNcXFwvMjAxOFxcXC8wM1xcXC9waW5zZmkucG5nXCIsXCJwYXJraW5nLWJveHNvdXMtcHJvbWVzc2VcIjpcIlwiLFwicHJvcHJpZXRlc291cy1wcm9tZXNzZVwiOlwiaHR0cDpcXFwvXFxcL3d3dy5hZ2VuY2Vzc2FpbnRmZXJkaW5hbmQuY29tXFxcL3dwLWNvbnRlbnRcXFwvdXBsb2Fkc1xcXC8yMDE4XFxcLzAzXFxcL3BpbnNmaS5wbmdcIixcInZpbGxhc291cy1wcm9tZXNzZVwiOlwiaHR0cDpcXFwvXFxcL3d3dy5hZ2VuY2Vzc2FpbnRmZXJkaW5hbmQuY29tXFxcL3dwLWNvbnRlbnRcXFwvdXBsb2Fkc1xcXC8yMDE4XFxcLzAzXFxcL3BpbnNmaS5wbmdcIixcImFwcGFydGVtZW50dmVuZHVcIjpcImh0dHA6XFxcL1xcXC93d3cuYWdlbmNlc3NhaW50ZmVyZGluYW5kLmNvbVxcXC93cC1jb250ZW50XFxcL3VwbG9hZHNcXFwvMjAxOFxcXC8wM1xcXC9waW5zZmkucG5nXCIsXCJidXJlYXUtbG9jYWwtcHJvZmVzc2lvbm5lbHZlbmR1XCI6XCJodHRwOlxcXC9cXFwvd3d3LmFnZW5jZXNzYWludGZlcmRpbmFuZC5jb21cXFwvd3AtY29udGVudFxcXC91cGxvYWRzXFxcLzIwMThcXFwvMDNcXFwvcGluc2ZpLnBuZ1wiLFwibG9jYWwtY29tbWVyY2lhbHZlbmR1XCI6XCJodHRwOlxcXC9cXFwvd3d3LmFnZW5jZXNzYWludGZlcmRpbmFuZC5jb21cXFwvd3AtY29udGVudFxcXC91cGxvYWRzXFxcLzIwMThcXFwvMDNcXFwvcGluc2ZpLnBuZ1wiLFwibG9mdGF0ZWxpZXJ2ZW5kdVwiOlwiaHR0cDpcXFwvXFxcL3d3dy5hZ2VuY2Vzc2FpbnRmZXJkaW5hbmQuY29tXFxcL3dwLWNvbnRlbnRcXFwvdXBsb2Fkc1xcXC8yMDE4XFxcLzAzXFxcL3BpbnNmaS5wbmdcIixcIm1haXNvbnZlbmR1XCI6XCJodHRwOlxcXC9cXFwvd3d3LmFnZW5jZXNzYWludGZlcmRpbmFuZC5jb21cXFwvd3AtY29udGVudFxcXC91cGxvYWRzXFxcLzIwMThcXFwvMDNcXFwvcGluc2ZpLnBuZ1wiLFwicGFya2luZ3ZlbmR1XCI6XCJodHRwOlxcXC9cXFwvd3d3LmFnZW5jZXNzYWludGZlcmRpbmFuZC5jb21cXFwvd3AtY29udGVudFxcXC91cGxvYWRzXFxcLzIwMThcXFwvMDNcXFwvcGluc2ZpLnBuZ1wiLFwicGFya2luZy1ib3h2ZW5kdVwiOlwiXCIsXCJwcm9wcmlldGV2ZW5kdVwiOlwiaHR0cDpcXFwvXFxcL3d3dy5hZ2VuY2Vzc2FpbnRmZXJkaW5hbmQuY29tXFxcL3dwLWNvbnRlbnRcXFwvdXBsb2Fkc1xcXC8yMDE4XFxcLzAzXFxcL3BpbnNmaS5wbmdcIixcInZpbGxhdmVuZHVcIjpcImh0dHA6XFxcL1xcXC93d3cuYWdlbmNlc3NhaW50ZmVyZGluYW5kLmNvbVxcXC93cC1jb250ZW50XFxcL3VwbG9hZHNcXFwvMjAxOFxcXC8wM1xcXC9waW5zZmkucG5nXCIsXCJhcHBhcnRlbWVudHZlbnRlXCI6XCJodHRwOlxcXC9cXFwvd3d3LmFnZW5jZXNzYWludGZlcmRpbmFuZC5jb21cXFwvd3AtY29udGVudFxcXC91cGxvYWRzXFxcLzIwMThcXFwvMDNcXFwvcGluc2ZpLnBuZ1wiLFwiYnVyZWF1LWxvY2FsLXByb2Zlc3Npb25uZWx2ZW50ZVwiOlwiaHR0cDpcXFwvXFxcL3d3dy5hZ2VuY2Vzc2FpbnRmZXJkaW5hbmQuY29tXFxcL3dwLWNvbnRlbnRcXFwvdXBsb2Fkc1xcXC8yMDE4XFxcLzAzXFxcL3BpbnNmaS5wbmdcIixcImxvY2FsLWNvbW1lcmNpYWx2ZW50ZVwiOlwiaHR0cDpcXFwvXFxcL3d3dy5hZ2VuY2Vzc2FpbnRmZXJkaW5hbmQuY29tXFxcL3dwLWNvbnRlbnRcXFwvdXBsb2Fkc1xcXC8yMDE4XFxcLzAzXFxcL3BpbnNmaS5wbmdcIixcImxvZnRhdGVsaWVydmVudGVcIjpcImh0dHA6XFxcL1xcXC93d3cuYWdlbmNlc3NhaW50ZmVyZGluYW5kLmNvbVxcXC93cC1jb250ZW50XFxcL3VwbG9hZHNcXFwvMjAxOFxcXC8wM1xcXC9waW5zZmkucG5nXCIsXCJtYWlzb252ZW50ZVwiOlwiaHR0cDpcXFwvXFxcL3d3dy5hZ2VuY2Vzc2FpbnRmZXJkaW5hbmQuY29tXFxcL3dwLWNvbnRlbnRcXFwvdXBsb2Fkc1xcXC8yMDE4XFxcLzAzXFxcL3BpbnNmaS5wbmdcIixcInBhcmtpbmd2ZW50ZVwiOlwiaHR0cDpcXFwvXFxcL3d3dy5hZ2VuY2Vzc2FpbnRmZXJkaW5hbmQuY29tXFxcL3dwLWNvbnRlbnRcXFwvdXBsb2Fkc1xcXC8yMDE4XFxcLzAzXFxcL3BpbnNmaS5wbmdcIixcInBhcmtpbmctYm94dmVudGVcIjpcIlwiLFwicHJvcHJpZXRldmVudGVcIjpcImh0dHA6XFxcL1xcXC93d3cuYWdlbmNlc3NhaW50ZmVyZGluYW5kLmNvbVxcXC93cC1jb250ZW50XFxcL3VwbG9hZHNcXFwvMjAxOFxcXC8wM1xcXC9waW5zZmkucG5nXCIsXCJ2aWxsYXZlbnRlXCI6XCJodHRwOlxcXC9cXFwvd3d3LmFnZW5jZXNzYWludGZlcmRpbmFuZC5jb21cXFwvd3AtY29udGVudFxcXC91cGxvYWRzXFxcLzIwMThcXFwvMDNcXFwvcGluc2ZpLnBuZ1wiLFwiaWR4cGluXCI6XCJodHRwOlxcXC9cXFwvd3d3LmFnZW5jZXNzYWludGZlcmRpbmFuZC5jb21cXFwvd3AtY29udGVudFxcXC91cGxvYWRzXFxcLzIwMThcXFwvMDNcXFwvcGluc2ZpLnBuZ1wiLFwidXNlcnBpblwiOlwiaHR0cDpcXFwvXFxcL3d3dy5hZ2VuY2Vzc2FpbnRmZXJkaW5hbmQuY29tXFxcL3dwLWNvbnRlbnRcXFwvdXBsb2Fkc1xcXC8yMDE4XFxcLzAzXFxcL3BpbnNmaS5wbmdcIn0iLCJnZW9sb2NhdGlvbl9yYWRpdXMiOiIxMDAwIiwiYWR2X3NlYXJjaCI6IjEiLCJpbl90ZXh0IjoiIGRhbnMgIiwiem9vbV9jbHVzdGVyIjoiMjAiLCJ1c2VyX2NsdXN0ZXIiOiJ5ZXMiLCJvcGVuX2Nsb3NlX3N0YXR1cyI6IjAiLCJvcGVuX2hlaWdodCI6IjQ1MCIsImNsb3NlZF9oZWlnaHQiOiI0NTAiLCJnZW5lcmF0ZWRfcGlucyI6IjAiLCJnZW9fbm9fcG9zIjoiTGUgbmF2aWdhdGV1ciBuJ2EgcGFzIHB1IGRcdTAwZTl0ZWN0ZXIgdm90cmUgcG9zaXRpb24gISIsImdlb19ub19icm93IjoiR1x1MDBlOW9sb2NhbGlzYXRpb24gbidlc3QgcGFzIHN1cHBvcnRcdTAwZTllIHBhciBjZSBuYXZpZ2F0ZXVyLiIsImdlb19tZXNzYWdlIjoibSBkZSByYXlvbiIsInNob3dfYWR2X3NlYXJjaCI6InllcyIsImN1c3RvbV9zZWFyY2giOiJ5ZXMiLCJsaXN0aW5nX21hcCI6ImludGVybmFsIiwic2x1Z3MiOlsiYWR2X2FjdGlvbnMiLCJhZHZhbmNlZF9jaXR5IiwibW90LWNsZSIsIm1vdC1jbGUiLCJjaGFtYnJlcy1taW4iLCJzdXJmIiwicHJvcGVydHlfcHJpY2UiLCJwcm9wZXJ0eV9wcmljZSIsInp6eiJdLCJob3dzIjpbImVxdWFsIiwiZ3JlYXRlciIsImVxdWFsIiwiZXF1YWwiLCJncmVhdGVyIiwiZXF1YWwiLCJlcXVhbCIsImVxdWFsIl0sIm1lYXN1cmVfc3lzIjoibSIsImNsb3NlX21hcCI6ImZlcm1lciBsYSBjYXJ0ZSIsInNob3dfZ19zZWFyY2hfc3RhdHVzIjoibm8iLCJzbGlkZXJfcHJpY2UiOiJ5ZXMiLCJzbGlkZXJfcHJpY2VfcG9zaXRpb24iOiI3IiwiYWR2X3NlYXJjaF90eXBlIjoiMSIsImlzX2hhbGYiOiIwIiwibWFwX3N0eWxlIjoiW1xyXG4gICAge1xyXG4gICAgICAgIFwiZmVhdHVyZVR5cGVcIjogXCJhZG1pbmlzdHJhdGl2ZVwiLFxyXG4gICAgICAgIFwiZWxlbWVudFR5cGVcIjogXCJsYWJlbHMudGV4dC5maWxsXCIsXHJcbiAgICAgICAgXCJzdHlsZXJzXCI6IFtcclxuICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgXCJjb2xvclwiOiBcIiM0NDQ0NDRcIlxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgXVxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgICBcImZlYXR1cmVUeXBlXCI6IFwibGFuZHNjYXBlXCIsXHJcbiAgICAgICAgXCJlbGVtZW50VHlwZVwiOiBcImFsbFwiLFxyXG4gICAgICAgIFwic3R5bGVyc1wiOiBbXHJcbiAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgIFwiY29sb3JcIjogXCIjZjJmMmYyXCJcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIF1cclxuICAgIH0sXHJcbiAgICB7XHJcbiAgICAgICAgXCJmZWF0dXJlVHlwZVwiOiBcInBvaVwiLFxyXG4gICAgICAgIFwiZWxlbWVudFR5cGVcIjogXCJhbGxcIixcclxuICAgICAgICBcInN0eWxlcnNcIjogW1xyXG4gICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICBcInZpc2liaWxpdHlcIjogXCJvZmZcIlxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgXVxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgICBcImZlYXR1cmVUeXBlXCI6IFwicm9hZFwiLFxyXG4gICAgICAgIFwiZWxlbWVudFR5cGVcIjogXCJhbGxcIixcclxuICAgICAgICBcInN0eWxlcnNcIjogW1xyXG4gICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICBcInNhdHVyYXRpb25cIjogLTEwMFxyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICBcImxpZ2h0bmVzc1wiOiA0NVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgXVxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgICBcImZlYXR1cmVUeXBlXCI6IFwicm9hZC5oaWdod2F5XCIsXHJcbiAgICAgICAgXCJlbGVtZW50VHlwZVwiOiBcImFsbFwiLFxyXG4gICAgICAgIFwic3R5bGVyc1wiOiBbXHJcbiAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgIFwidmlzaWJpbGl0eVwiOiBcInNpbXBsaWZpZWRcIlxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgXVxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgICBcImZlYXR1cmVUeXBlXCI6IFwicm9hZC5hcnRlcmlhbFwiLFxyXG4gICAgICAgIFwiZWxlbWVudFR5cGVcIjogXCJsYWJlbHMuaWNvblwiLFxyXG4gICAgICAgIFwic3R5bGVyc1wiOiBbXHJcbiAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgIFwidmlzaWJpbGl0eVwiOiBcIm9mZlwiXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICBdXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICAgIFwiZmVhdHVyZVR5cGVcIjogXCJ0cmFuc2l0XCIsXHJcbiAgICAgICAgXCJlbGVtZW50VHlwZVwiOiBcImFsbFwiLFxyXG4gICAgICAgIFwic3R5bGVyc1wiOiBbXHJcbiAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgIFwidmlzaWJpbGl0eVwiOiBcIm9mZlwiXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICBdXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICAgIFwiZmVhdHVyZVR5cGVcIjogXCJ3YXRlclwiLFxyXG4gICAgICAgIFwiZWxlbWVudFR5cGVcIjogXCJhbGxcIixcclxuICAgICAgICBcInN0eWxlcnNcIjogW1xyXG4gICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICBcImNvbG9yXCI6IFwiIzllOTQ4M1wiXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgIFwidmlzaWJpbGl0eVwiOiBcIm9uXCJcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIF1cclxuICAgIH1cclxuXSIsInNtYWxsX3NsaWRlcl90IjoiaG9yaXpvbnRhbCIsImlzX3Byb3BfbGlzdCI6IjAiLCJpc190YXgiOiIwIn07Ci8qIF1dPiAqLwo8L3NjcmlwdD4KPHNjcmlwdCB0eXBlPSd0ZXh0L2phdmFzY3JpcHQnIHNyYz0naHR0cDovL3d3dy5hZ2VuY2Vzc2FpbnRmZXJkaW5hbmQuY29tL3dwLWNvbnRlbnQvdGhlbWVzL3dwcmVzaWRlbmNlL2pzL2dvb2dsZV9qcy9tYXBmdW5jdGlvbnMuanM/dmVyPTEuMCc+PC9zY3JpcHQ+CjxzY3JpcHQgdHlwZT0ndGV4dC9qYXZhc2NyaXB0JyBzcmM9J2h0dHA6Ly93d3cuYWdlbmNlc3NhaW50ZmVyZGluYW5kLmNvbS93cC1jb250ZW50L3RoZW1lcy93cHJlc2lkZW5jZS9qcy9nb29nbGVfanMvbWFya2VyY2x1c3RlcmVyLmpzP3Zlcj0xLjAnPjwvc2NyaXB0Pgo8c2NyaXB0IHR5cGU9J3RleHQvamF2YXNjcmlwdCcgc3JjPSdodHRwOi8vd3d3LmFnZW5jZXNzYWludGZlcmRpbmFuZC5jb20vd3AtY29udGVudC90aGVtZXMvd3ByZXNpZGVuY2UvanMvZ29vZ2xlX2pzL29tcy5taW4uanM/dmVyPTEuMCc+PC9zY3JpcHQ+CjxzY3JpcHQgdHlwZT0ndGV4dC9qYXZhc2NyaXB0Jz4KLyogPCFbQ0RBVEFbICovCnZhciBjb250cm9sX3ZhcnMgPSB7Im1vcmcxIjoiTW9udGFudCBmaW5hbmNcdTAwZTkgOiIsIm1vcmcyIjoiVmVyc2VtZW50cyBoeXBvdGhcdTAwZTljYWlyZXMgOiIsIm1vcmczIjoiQ29cdTAwZmJ0IGFubnVlbCBkdSBwclx1MDBlYXQgOiIsInNlYXJjaHRleHQiOiJSRUNIRVJDSEVSIiwic2VhcmNodGV4dDIiOiJSZWNoZXJjaGV6IGljaS4uLiIsImljb25zIjoie1wibG9jLW1ldWJsZVwiOlwiaHR0cDpcXFwvXFxcL3d3dy5hZ2VuY2Vzc2FpbnRmZXJkaW5hbmQuY29tXFxcL3dwLWNvbnRlbnRcXFwvdGhlbWVzXFxcL3dwcmVzaWRlbmNlXFxcL2Nzc1xcXC9jc3MtaW1hZ2VzXFxcL2xvYy1tZXVibGVpY29uLnBuZ1wiLFwibG9jYXRpb25cIjpcImh0dHA6XFxcL1xcXC93d3cuYWdlbmNlc3NhaW50ZmVyZGluYW5kLmNvbVxcXC93cC1jb250ZW50XFxcL3RoZW1lc1xcXC93cHJlc2lkZW5jZVxcXC9jc3NcXFwvY3NzLWltYWdlc1xcXC9sb2NhdGlvbmljb24ucG5nXCIsXCJzb3VzLW9mZnJlXCI6XCJodHRwOlxcXC9cXFwvd3d3LmFnZW5jZXNzYWludGZlcmRpbmFuZC5jb21cXFwvd3AtY29udGVudFxcXC90aGVtZXNcXFwvd3ByZXNpZGVuY2VcXFwvY3NzXFxcL2Nzcy1pbWFnZXNcXFwvc291cy1vZmZyZWljb24ucG5nXCIsXCJzb3VzLXByb21lc3NlXCI6XCJodHRwOlxcXC9cXFwvd3d3LmFnZW5jZXNzYWludGZlcmRpbmFuZC5jb21cXFwvd3AtY29udGVudFxcXC90aGVtZXNcXFwvd3ByZXNpZGVuY2VcXFwvY3NzXFxcL2Nzcy1pbWFnZXNcXFwvc291cy1wcm9tZXNzZWljb24ucG5nXCIsXCJ2ZW5kdVwiOlwiaHR0cDpcXFwvXFxcL3d3dy5hZ2VuY2Vzc2FpbnRmZXJkaW5hbmQuY29tXFxcL3dwLWNvbnRlbnRcXFwvdGhlbWVzXFxcL3dwcmVzaWRlbmNlXFxcL2Nzc1xcXC9jc3MtaW1hZ2VzXFxcL3ZlbmR1aWNvbi5wbmdcIixcInZlbnRlXCI6XCJodHRwOlxcXC9cXFwvd3d3LmFnZW5jZXNzYWludGZlcmRpbmFuZC5jb21cXFwvd3AtY29udGVudFxcXC90aGVtZXNcXFwvd3ByZXNpZGVuY2VcXFwvY3NzXFxcL2Nzcy1pbWFnZXNcXFwvdmVudGVpY29uLnBuZ1wiLFwiYXBwYXJ0ZW1lbnRcIjpcImh0dHA6XFxcL1xcXC93d3cuYWdlbmNlc3NhaW50ZmVyZGluYW5kLmNvbVxcXC93cC1jb250ZW50XFxcL3RoZW1lc1xcXC93cHJlc2lkZW5jZVxcXC9jc3NcXFwvY3NzLWltYWdlc1xcXC9hcHBhcnRlbWVudGljb24ucG5nXCIsXCJidXJlYXUtbG9jYWwtcHJvZmVzc2lvbm5lbFwiOlwiaHR0cDpcXFwvXFxcL3d3dy5hZ2VuY2Vzc2FpbnRmZXJkaW5hbmQuY29tXFxcL3dwLWNvbnRlbnRcXFwvdGhlbWVzXFxcL3dwcmVzaWRlbmNlXFxcL2Nzc1xcXC9jc3MtaW1hZ2VzXFxcL2J1cmVhdS1sb2NhbC1wcm9mZXNzaW9ubmVsaWNvbi5wbmdcIixcImxvY2FsLWNvbW1lcmNpYWxcIjpcImh0dHA6XFxcL1xcXC93d3cuYWdlbmNlc3NhaW50ZmVyZGluYW5kLmNvbVxcXC93cC1jb250ZW50XFxcL3RoZW1lc1xcXC93cHJlc2lkZW5jZVxcXC9jc3NcXFwvY3NzLWltYWdlc1xcXC9sb2NhbC1jb21tZXJjaWFsaWNvbi5wbmdcIixcImxvZnRhdGVsaWVyXCI6XCJodHRwOlxcXC9cXFwvd3d3LmFnZW5jZXNzYWludGZlcmRpbmFuZC5jb21cXFwvd3AtY29udGVudFxcXC90aGVtZXNcXFwvd3ByZXNpZGVuY2VcXFwvY3NzXFxcL2Nzcy1pbWFnZXNcXFwvbG9mdGF0ZWxpZXJpY29uLnBuZ1wiLFwibWFpc29uXCI6XCJodHRwOlxcXC9cXFwvd3d3LmFnZW5jZXNzYWludGZlcmRpbmFuZC5jb21cXFwvd3AtY29udGVudFxcXC90aGVtZXNcXFwvd3ByZXNpZGVuY2VcXFwvY3NzXFxcL2Nzcy1pbWFnZXNcXFwvbWFpc29uaWNvbi5wbmdcIixcInBhcmtpbmdcIjpcImh0dHA6XFxcL1xcXC93d3cuYWdlbmNlc3NhaW50ZmVyZGluYW5kLmNvbVxcXC93cC1jb250ZW50XFxcL3RoZW1lc1xcXC93cHJlc2lkZW5jZVxcXC9jc3NcXFwvY3NzLWltYWdlc1xcXC9wYXJraW5naWNvbi5wbmdcIixcInBhcmtpbmctYm94XCI6XCJodHRwOlxcXC9cXFwvd3d3LmFnZW5jZXNzYWludGZlcmRpbmFuZC5jb21cXFwvd3AtY29udGVudFxcXC90aGVtZXNcXFwvd3ByZXNpZGVuY2VcXFwvY3NzXFxcL2Nzcy1pbWFnZXNcXFwvcGFya2luZy1ib3hpY29uLnBuZ1wiLFwicHJvcHJpZXRlXCI6XCJodHRwOlxcXC9cXFwvd3d3LmFnZW5jZXNzYWludGZlcmRpbmFuZC5jb21cXFwvd3AtY29udGVudFxcXC90aGVtZXNcXFwvd3ByZXNpZGVuY2VcXFwvY3NzXFxcL2Nzcy1pbWFnZXNcXFwvcHJvcHJpZXRlaWNvbi5wbmdcIixcInZpbGxhXCI6XCJodHRwOlxcXC9cXFwvd3d3LmFnZW5jZXNzYWludGZlcmRpbmFuZC5jb21cXFwvd3AtY29udGVudFxcXC90aGVtZXNcXFwvd3ByZXNpZGVuY2VcXFwvY3NzXFxcL2Nzcy1pbWFnZXNcXFwvdmlsbGFpY29uLnBuZ1wifSIsImhvdmVyaWNvbnMiOiJ7XCJsb2MtbWV1YmxlXCI6XCJodHRwOlxcXC9cXFwvd3d3LmFnZW5jZXNzYWludGZlcmRpbmFuZC5jb21cXFwvd3AtY29udGVudFxcXC90aGVtZXNcXFwvd3ByZXNpZGVuY2VcXFwvY3NzXFxcL2Nzcy1pbWFnZXNcXFwvbG9jLW1ldWJsZWljb25ob3Zlci5wbmdcIixcImxvY2F0aW9uXCI6XCJodHRwOlxcXC9cXFwvd3d3LmFnZW5jZXNzYWludGZlcmRpbmFuZC5jb21cXFwvd3AtY29udGVudFxcXC90aGVtZXNcXFwvd3ByZXNpZGVuY2VcXFwvY3NzXFxcL2Nzcy1pbWFnZXNcXFwvbG9jYXRpb25pY29uaG92ZXIucG5nXCIsXCJzb3VzLW9mZnJlXCI6XCJodHRwOlxcXC9cXFwvd3d3LmFnZW5jZXNzYWludGZlcmRpbmFuZC5jb21cXFwvd3AtY29udGVudFxcXC90aGVtZXNcXFwvd3ByZXNpZGVuY2VcXFwvY3NzXFxcL2Nzcy1pbWFnZXNcXFwvc291cy1vZmZyZWljb25ob3Zlci5wbmdcIixcInNvdXMtcHJvbWVzc2VcIjpcImh0dHA6XFxcL1xcXC93d3cuYWdlbmNlc3NhaW50ZmVyZGluYW5kLmNvbVxcXC93cC1jb250ZW50XFxcL3RoZW1lc1xcXC93cHJlc2lkZW5jZVxcXC9jc3NcXFwvY3NzLWltYWdlc1xcXC9zb3VzLXByb21lc3NlaWNvbmhvdmVyLnBuZ1wiLFwidmVuZHVcIjpcImh0dHA6XFxcL1xcXC93d3cuYWdlbmNlc3NhaW50ZmVyZGluYW5kLmNvbVxcXC93cC1jb250ZW50XFxcL3RoZW1lc1xcXC93cHJlc2lkZW5jZVxcXC9jc3NcXFwvY3NzLWltYWdlc1xcXC92ZW5kdWljb25ob3Zlci5wbmdcIixcInZlbnRlXCI6XCJodHRwOlxcXC9cXFwvd3d3LmFnZW5jZXNzYWludGZlcmRpbmFuZC5jb21cXFwvd3AtY29udGVudFxcXC90aGVtZXNcXFwvd3ByZXNpZGVuY2VcXFwvY3NzXFxcL2Nzcy1pbWFnZXNcXFwvdmVudGVpY29uaG92ZXIucG5nXCIsXCJhcHBhcnRlbWVudFwiOlwiaHR0cDpcXFwvXFxcL3d3dy5hZ2VuY2Vzc2FpbnRmZXJkaW5hbmQuY29tXFxcL3dwLWNvbnRlbnRcXFwvdGhlbWVzXFxcL3dwcmVzaWRlbmNlXFxcL2Nzc1xcXC9jc3MtaW1hZ2VzXFxcL2FwcGFydGVtZW50aWNvbmhvdmVyLnBuZ1wiLFwiYnVyZWF1LWxvY2FsLXByb2Zlc3Npb25uZWxcIjpcImh0dHA6XFxcL1xcXC93d3cuYWdlbmNlc3NhaW50ZmVyZGluYW5kLmNvbVxcXC93cC1jb250ZW50XFxcL3RoZW1lc1xcXC93cHJlc2lkZW5jZVxcXC9jc3NcXFwvY3NzLWltYWdlc1xcXC9idXJlYXUtbG9jYWwtcHJvZmVzc2lvbm5lbGljb25ob3Zlci5wbmdcIixcImxvY2FsLWNvbW1lcmNpYWxcIjpcImh0dHA6XFxcL1xcXC93d3cuYWdlbmNlc3NhaW50ZmVyZGluYW5kLmNvbVxcXC93cC1jb250ZW50XFxcL3RoZW1lc1xcXC93cHJlc2lkZW5jZVxcXC9jc3NcXFwvY3NzLWltYWdlc1xcXC9sb2NhbC1jb21tZXJjaWFsaWNvbmhvdmVyLnBuZ1wiLFwibG9mdGF0ZWxpZXJcIjpcImh0dHA6XFxcL1xcXC93d3cuYWdlbmNlc3NhaW50ZmVyZGluYW5kLmNvbVxcXC93cC1jb250ZW50XFxcL3RoZW1lc1xcXC93cHJlc2lkZW5jZVxcXC9jc3NcXFwvY3NzLWltYWdlc1xcXC9sb2Z0YXRlbGllcmljb25ob3Zlci5wbmdcIixcIm1haXNvblwiOlwiaHR0cDpcXFwvXFxcL3d3dy5hZ2VuY2Vzc2FpbnRmZXJkaW5hbmQuY29tXFxcL3dwLWNvbnRlbnRcXFwvdGhlbWVzXFxcL3dwcmVzaWRlbmNlXFxcL2Nzc1xcXC9jc3MtaW1hZ2VzXFxcL21haXNvbmljb25ob3Zlci5wbmdcIixcInBhcmtpbmdcIjpcImh0dHA6XFxcL1xcXC93d3cuYWdlbmNlc3NhaW50ZmVyZGluYW5kLmNvbVxcXC93cC1jb250ZW50XFxcL3RoZW1lc1xcXC93cHJlc2lkZW5jZVxcXC9jc3NcXFwvY3NzLWltYWdlc1xcXC9wYXJraW5naWNvbmhvdmVyLnBuZ1wiLFwicGFya2luZy1ib3hcIjpcImh0dHA6XFxcL1xcXC93d3cuYWdlbmNlc3NhaW50ZmVyZGluYW5kLmNvbVxcXC93cC1jb250ZW50XFxcL3RoZW1lc1xcXC93cHJlc2lkZW5jZVxcXC9jc3NcXFwvY3NzLWltYWdlc1xcXC9wYXJraW5nLWJveGljb25ob3Zlci5wbmdcIixcInByb3ByaWV0ZVwiOlwiaHR0cDpcXFwvXFxcL3d3dy5hZ2VuY2Vzc2FpbnRmZXJkaW5hbmQuY29tXFxcL3dwLWNvbnRlbnRcXFwvdGhlbWVzXFxcL3dwcmVzaWRlbmNlXFxcL2Nzc1xcXC9jc3MtaW1hZ2VzXFxcL3Byb3ByaWV0ZWljb25ob3Zlci5wbmdcIixcInZpbGxhXCI6XCJodHRwOlxcXC9cXFwvd3d3LmFnZW5jZXNzYWludGZlcmRpbmFuZC5jb21cXFwvd3AtY29udGVudFxcXC90aGVtZXNcXFwvd3ByZXNpZGVuY2VcXFwvY3NzXFxcL2Nzcy1pbWFnZXNcXFwvdmlsbGFpY29uaG92ZXIucG5nXCJ9IiwicGF0aCI6Imh0dHA6XC9cL3d3dy5hZ2VuY2Vzc2FpbnRmZXJkaW5hbmQuY29tXC93cC1jb250ZW50XC90aGVtZXNcL3dwcmVzaWRlbmNlIiwic2VhcmNoX3Jvb20iOiJOYnIgZGUgY2hhbWJyZXMiLCJzZWFyY2hfYmF0aCI6Ik5iciBkZSBzYWxsZSBkZSBiYWlucy4iLCJzZWFyY2hfbWluX3ByaWNlIjoiUHJpeCBtaW5pbXVtIiwic2VhcmNoX21heF9wcmljZSI6IlByaXggTWF4aW11bSIsImNvbnRhY3RfbmFtZSI6IlZvdHJlIG5vbSIsImNvbnRhY3RfZW1haWwiOiJWb3RyZSBhZHJlc3NlIEVtYWlsIiwiY29udGFjdF9waG9uZSI6IlZvdHJlIHRcdTAwZTlsXHUwMGU5cGhvbmUiLCJjb250YWN0X2NvbW1lbnQiOiJWb3RyZSBNZXNzYWdlIiwiemlsbG93X2FkZHJlcyI6IlZvdHJlIGFkcmVzc2UiLCJ6aWxsb3dfY2l0eSI6IlZvdHJlIHZpbGxlIiwiemlsbG93X3N0YXRlIjoiVm90cmUgQ29kZSBkJ1x1MDBjOXRhdCAoZXggQ0EpIiwiYWR2X2NvbnRhY3RfbmFtZSI6IlZvdHJlIG5vbSIsImFkdl9lbWFpbCI6IlZvdHJlIGFkcmVzc2UgRW1haWwiLCJhZHZfcGhvbmUiOiJWb3RyZSB0XHUwMGU5bFx1MDBlOXBob25lIiwiYWR2X2NvbW1lbnQiOiJWb3RyZSBNZXNzYWdlIiwiYWR2X3NlYXJjaCI6IkVudm95ZXIgTWVzc2FnZSIsImFkbWluX3VybCI6Imh0dHA6XC9cL3d3dy5hZ2VuY2Vzc2FpbnRmZXJkaW5hbmQuY29tXC93cC1hZG1pblwvIiwibG9naW5fcmVkaXJlY3QiOiJodHRwOlwvXC93d3cuYWdlbmNlc3NhaW50ZmVyZGluYW5kLmNvbVwvbW9uLXByb2ZpbFwvIiwibG9naW5fbG9hZGluZyI6IkVudm9pIGRlcyBpbmZvcm1hdGlvbnMgdXRpbGlzYXRldXIsIHZldWlsbGV6IHBhdGllbnRlci4uLiIsInN0cmVldF92aWV3X29uIjoiU3RyZWV0IFZpZXciLCJzdHJlZXRfdmlld19vZmYiOiJGZXJtZXIgU3RyZWV0IFZpZXciLCJ1c2VyaWQiOiIwIiwic2hvd19hZHZfc2VhcmNoX21hcF9jbG9zZSI6InllcyIsImNsb3NlX21hcCI6ImZlcm1lciBsYSBjYXJ0ZSIsIm9wZW5fbWFwIjoib3V2cmlyIGxhIGNhcnRlIiwiZnVsbHNjcmVlbiI6IlBsZWluIFx1MDBlOWNyYW4iLCJkZWZhdWx0IjoiUGFyIGRcdTAwZTlmYXV0IiwiYWRkcHJvcCI6IlZldWlsbGV6IHBhdGllbnRlciwgbm91cyB0cmFpdG9ucyB2b3RyZSBzb3VtaXNzaW9uICEiLCJkZWxldGVjb25maXJtIjoiQXJlIHlvdSBzdXJlIHlvdSB3aXNoIHRvIGRlbGV0ZT8iLCJ0ZXJtc19jb25kIjoiWW91IG5lZWQgdG8gYWdyZWUgd2l0aCB0ZXJtcyBhbmQgY29uZGl0aW9ucyAhIiwicHJvY2VzaW5nIjoiUHJvY2Vzc2luZy4uLiIsInNsaWRlcl9taW4iOiIwIiwic2xpZGVyX21heCI6IjQwMDAwMDAiLCJjdXJlbmN5IjoiXHUyMGFjIiwid2hlcmVfY3VyZW5jeSI6ImFmdGVyIiwic3VibWlzc2lvbl9jdXJlbmN5IjoiRVVSIiwidG8iOiJqdXNxdSdcdTAwZTAiLCJkaXJlY3RfcGF5IjoiIiwic2VuZF9pbnZvaWNlIjoiU2VuZCBtZSB0aGUgaW52b2ljZSIsImRpcmVjdF90aXRsZSI6IkRpcmVjdCBwYXltZW50IGluc3RydWN0aW9ucyIsImRpcmVjdF90aHgiOiJUaGFuayB5b3UuIFBsZWFzZSBjaGVjayB5b3VyIGVtYWlsIGZvciBwYXltZW50IGluc3RydWN0aW9ucy4iLCJkaXJlY3RfcHJpY2UiOiJUbyBiZSBwYWlkIiwicHJpY2Vfc2VwYXJhdG9yIjoiLiIsInBsYW5fdGl0bGUiOiJQbGFuIFRpdGxlIiwicGxhbl9pbWFnZSI6IlBsYW4gSW1hZ2UiLCJwbGFuX2Rlc2MiOiJQbGFuIERlc2NyaXB0aW9uIiwicGxhbl9zaXplIjoiUGxhbiBTaXplIiwicGxhbl9yb29tcyI6IlBsYW4gUm9vbXMiLCJwbGFuX2JhdGhyb29tcyI6IlBsYW4gQmF0aHJvb21zIiwicGxhbl9wcmljZSI6IlBsYW4gUHJpY2UiLCJyZWFkc3lzIjoieWVzIiwiZGF0ZXBpY2tfbGFuZyI6ImZyIn07Ci8qIF1dPiAqLwo8L3NjcmlwdD4KPHNjcmlwdCB0eXBlPSd0ZXh0L2phdmFzY3JpcHQnIHNyYz0naHR0cDovL3d3dy5hZ2VuY2Vzc2FpbnRmZXJkaW5hbmQuY29tL3dwLWNvbnRlbnQvdGhlbWVzL3dwcmVzaWRlbmNlL2pzL2NvbnRyb2wuanM/dmVyPTEuMCc+PC9zY3JpcHQ+CjxzY3JpcHQgdHlwZT0ndGV4dC9qYXZhc2NyaXB0Jz4KLyogPCFbQ0RBVEFbICovCnZhciBhamF4Y2FsbHNfdmFycyA9IHsiY29udGFjdF9uYW1lIjoiVm90cmUgbm9tIiwiY29udGFjdF9lbWFpbCI6IlZvdHJlIGFkcmVzc2UgRW1haWwiLCJjb250YWN0X3Bob25lIjoiVm90cmUgdFx1MDBlOWxcdTAwZTlwaG9uZSIsImNvbnRhY3RfY29tbWVudCI6IlZvdHJlIE1lc3NhZ2UiLCJhZHZfY29udGFjdF9uYW1lIjoiVm90cmUgbm9tIiwiYWR2X2VtYWlsIjoiVm90cmUgYWRyZXNzZSBFbWFpbCIsImFkdl9waG9uZSI6IlZvdHJlIHRcdTAwZTlsXHUwMGU5cGhvbmUiLCJhZHZfY29tbWVudCI6IlZvdHJlIE1lc3NhZ2UiLCJhZHZfc2VhcmNoIjoiRW52b3llciBNZXNzYWdlIiwiYWRtaW5fdXJsIjoiaHR0cDpcL1wvd3d3LmFnZW5jZXNzYWludGZlcmRpbmFuZC5jb21cL3dwLWFkbWluXC8iLCJsb2dpbl9yZWRpcmVjdCI6Imh0dHA6XC9cL3d3dy5hZ2VuY2Vzc2FpbnRmZXJkaW5hbmQuY29tXC9tb24tcHJvZmlsXC8iLCJsb2dpbl9sb2FkaW5nIjoiRW52b2kgZGVzIGluZm9ybWF0aW9ucyB1dGlsaXNhdGV1ciwgdmV1aWxsZXogcGF0aWVudGVyLi4uIiwidXNlcmlkIjoiMCIsInByb3BfZmVhdHVyZWQiOiJMYSBwcm9wcmlcdTAwZTl0XHUwMGU5IGVzdCBlbiB2ZWRldHRlIiwibm9fcHJvcF9mZWF0dXJlZCI6IlZvdXMgYXZleiB1dGlsaXNcdTAwZTkgdG91dGUgbGVzIFwiRmVhdHVyZWRcIiBwclx1MDBlOXNlbnQgZGFucyB2b3RyZSBhYm9ubmVtZW50LiIsImZhdm9yaXRlIjoiRW4gRmF2b3JpcyIsImFkZF9mYXZvcml0ZSI6IkFqb3V0ZXIgYXV4IGZhdm9yaXMiLCJzYXZpbmciOiJzYXV2ZWdhcmRlLi4uIiwic2VuZGluZyI6InNlbmRpbmcgbWVzc2FnZS4uIiwicGF5cGFsIjoiQ29ubmVjdGluZyB0byBQYXlwYWwhIFBsZWFzZSB3YWl0Li4uIiwic3RyaXBlY2FuY2VsIjoic3Vic2NyaXB0aW9uIHdpbGwgYmUgY2FuY2VsbGVkIGF0IHRoZSBlbmQgb2YgY3VycmVudCBwZXJpb2QiLCJ1c2VycGFzcyI6InllcyJ9OwovKiBdXT4gKi8KPC9zY3JpcHQ+CjxzY3JpcHQgdHlwZT0ndGV4dC9qYXZhc2NyaXB0JyBzcmM9J2h0dHA6Ly93d3cuYWdlbmNlc3NhaW50ZmVyZGluYW5kLmNvbS93cC1jb250ZW50L3RoZW1lcy93cHJlc2lkZW5jZS9qcy9hamF4Y2FsbHMuanM/dmVyPTEuMCc+PC9zY3JpcHQ+CjxzY3JpcHQgdHlwZT0ndGV4dC9qYXZhc2NyaXB0JyBzcmM9J2h0dHA6Ly93d3cuYWdlbmNlc3NhaW50ZmVyZGluYW5kLmNvbS93cC1pbmNsdWRlcy9qcy9jb21tZW50LXJlcGx5Lm1pbi5qcz92ZXI9NS4yLjcnPjwvc2NyaXB0Pgo8c2NyaXB0IHR5cGU9J3RleHQvamF2YXNjcmlwdCcgc3JjPSdodHRwOi8vd3d3LmFnZW5jZXNzYWludGZlcmRpbmFuZC5jb20vd3AtY29udGVudC90aGVtZXMvd3ByZXNpZGVuY2UvanMvcHJvcGVydHkuanM/dmVyPTEuMCc+PC9zY3JpcHQ+CjxzY3JpcHQgdHlwZT0ndGV4dC9qYXZhc2NyaXB0JyBzcmM9J2h0dHA6Ly93d3cuYWdlbmNlc3NhaW50ZmVyZGluYW5kLmNvbS93cC1pbmNsdWRlcy9qcy93cC1lbWJlZC5taW4uanM/dmVyPTUuMi43Jz48L3NjcmlwdD4KPHNjcmlwdCB0eXBlPSd0ZXh0L2phdmFzY3JpcHQnPgovKiA8IVtDREFUQVsgKi8KdmFyIGZybV9qcyA9IHsiYWpheF91cmwiOiJodHRwOlwvXC93d3cuYWdlbmNlc3NhaW50ZmVyZGluYW5kLmNvbVwvd3AtYWRtaW5cL2FkbWluLWFqYXgucGhwIiwiaW1hZ2VzX3VybCI6Imh0dHA6XC9cL3d3dy5hZ2VuY2Vzc2FpbnRmZXJkaW5hbmQuY29tXC93cC1jb250ZW50XC9wbHVnaW5zXC9mb3JtaWRhYmxlXC9pbWFnZXMiLCJsb2FkaW5nIjoiQ2hhcmdlbWVudFx1MjAyNiIsInJlbW92ZSI6IlN1cHByaW1lciIsIm9mZnNldCI6IjQiLCJub25jZSI6IjFkNjA0Y2IzNmMiLCJpZCI6IklEIiwibm9fcmVzdWx0cyI6IkF1Y3VuIHJcdTAwZTlzdWx0YXQgY29ycmVzcG9uZGFudCIsImZpbGVfc3BhbSI6IkNlIGZpY2hpZXIgcmVzc2VtYmxlIFx1MDBlMCBkdSBzcGFtLiIsImNhbGNfZXJyb3IiOiJUaGVyZSBpcyBhbiBlcnJvciBpbiB0aGUgY2FsY3VsYXRpb24gaW4gdGhlIGZpZWxkIHdpdGgga2V5IiwiZW1wdHlfZmllbGRzIjoiVmV1aWxsZXogcmVtcGxpciBsZXMgY2hhbXBzIG9ibGlnYXRvaXJlcyBwclx1MDBlOWNcdTAwZTlkZW50cyBhdmFudCBkZSBtZXR0cmUgdW4gZmljaGllciBlbiBsaWduZS4ifTsKdmFyIGZybV9qcyA9IHsiYWpheF91cmwiOiJodHRwOlwvXC93d3cuYWdlbmNlc3NhaW50ZmVyZGluYW5kLmNvbVwvd3AtYWRtaW5cL2FkbWluLWFqYXgucGhwIiwiaW1hZ2VzX3VybCI6Imh0dHA6XC9cL3d3dy5hZ2VuY2Vzc2FpbnRmZXJkaW5hbmQuY29tXC93cC1jb250ZW50XC9wbHVnaW5zXC9mb3JtaWRhYmxlXC9pbWFnZXMiLCJsb2FkaW5nIjoiQ2hhcmdlbWVudFx1MjAyNiIsInJlbW92ZSI6IlN1cHByaW1lciIsIm9mZnNldCI6IjQiLCJub25jZSI6IjFkNjA0Y2IzNmMiLCJpZCI6IklEIiwibm9fcmVzdWx0cyI6IkF1Y3VuIHJcdTAwZTlzdWx0YXQgY29ycmVzcG9uZGFudCIsImZpbGVfc3BhbSI6IkNlIGZpY2hpZXIgcmVzc2VtYmxlIFx1MDBlMCBkdSBzcGFtLiIsImNhbGNfZXJyb3IiOiJUaGVyZSBpcyBhbiBlcnJvciBpbiB0aGUgY2FsY3VsYXRpb24gaW4gdGhlIGZpZWxkIHdpdGgga2V5IiwiZW1wdHlfZmllbGRzIjoiVmV1aWxsZXogcmVtcGxpciBsZXMgY2hhbXBzIG9ibGlnYXRvaXJlcyBwclx1MDBlOWNcdTAwZTlkZW50cyBhdmFudCBkZSBtZXR0cmUgdW4gZmljaGllciBlbiBsaWduZS4ifTsKdmFyIGZybV9qcyA9IHsiYWpheF91cmwiOiJodHRwOlwvXC93d3cuYWdlbmNlc3NhaW50ZmVyZGluYW5kLmNvbVwvd3AtYWRtaW5cL2FkbWluLWFqYXgucGhwIiwiaW1hZ2VzX3VybCI6Imh0dHA6XC9cL3d3dy5hZ2VuY2Vzc2FpbnRmZXJkaW5hbmQuY29tXC93cC1jb250ZW50XC9wbHVnaW5zXC9mb3JtaWRhYmxlXC9pbWFnZXMiLCJsb2FkaW5nIjoiQ2hhcmdlbWVudFx1MjAyNiIsInJlbW92ZSI6IlN1cHByaW1lciIsIm9mZnNldCI6IjQiLCJub25jZSI6IjFkNjA0Y2IzNmMiLCJpZCI6IklEIiwibm9fcmVzdWx0cyI6IkF1Y3VuIHJcdTAwZTlzdWx0YXQgY29ycmVzcG9uZGFudCIsImZpbGVfc3BhbSI6IkNlIGZpY2hpZXIgcmVzc2VtYmxlIFx1MDBlMCBkdSBzcGFtLiIsImNhbGNfZXJyb3IiOiJUaGVyZSBpcyBhbiBlcnJvciBpbiB0aGUgY2FsY3VsYXRpb24gaW4gdGhlIGZpZWxkIHdpdGgga2V5IiwiZW1wdHlfZmllbGRzIjoiVmV1aWxsZXogcmVtcGxpciBsZXMgY2hhbXBzIG9ibGlnYXRvaXJlcyBwclx1MDBlOWNcdTAwZTlkZW50cyBhdmFudCBkZSBtZXR0cmUgdW4gZmljaGllciBlbiBsaWduZS4ifTsKdmFyIGZybV9qcyA9IHsiYWpheF91cmwiOiJodHRwOlwvXC93d3cuYWdlbmNlc3NhaW50ZmVyZGluYW5kLmNvbVwvd3AtYWRtaW5cL2FkbWluLWFqYXgucGhwIiwiaW1hZ2VzX3VybCI6Imh0dHA6XC9cL3d3dy5hZ2VuY2Vzc2FpbnRmZXJkaW5hbmQuY29tXC93cC1jb250ZW50XC9wbHVnaW5zXC9mb3JtaWRhYmxlXC9pbWFnZXMiLCJsb2FkaW5nIjoiQ2hhcmdlbWVudFx1MjAyNiIsInJlbW92ZSI6IlN1cHByaW1lciIsIm9mZnNldCI6IjQiLCJub25jZSI6IjFkNjA0Y2IzNmMiLCJpZCI6IklEIiwibm9fcmVzdWx0cyI6IkF1Y3VuIHJcdTAwZTlzdWx0YXQgY29ycmVzcG9uZGFudCIsImZpbGVfc3BhbSI6IkNlIGZpY2hpZXIgcmVzc2VtYmxlIFx1MDBlMCBkdSBzcGFtLiIsImNhbGNfZXJyb3IiOiJUaGVyZSBpcyBhbiBlcnJvciBpbiB0aGUgY2FsY3VsYXRpb24gaW4gdGhlIGZpZWxkIHdpdGgga2V5IiwiZW1wdHlfZmllbGRzIjoiVmV1aWxsZXogcmVtcGxpciBsZXMgY2hhbXBzIG9ibGlnYXRvaXJlcyBwclx1MDBlOWNcdTAwZTlkZW50cyBhdmFudCBkZSBtZXR0cmUgdW4gZmljaGllciBlbiBsaWduZS4ifTsKLyogXV0+ICovCjwvc2NyaXB0Pgo8c2NyaXB0IHR5cGU9J3RleHQvamF2YXNjcmlwdCcgc3JjPSdodHRwOi8vd3d3LmFnZW5jZXNzYWludGZlcmRpbmFuZC5jb20vd3AtY29udGVudC9wbHVnaW5zL2Zvcm1pZGFibGUvanMvZm9ybWlkYWJsZS5taW4uanM/dmVyPTQuMDMnPjwvc2NyaXB0Pgo8c2NyaXB0IHR5cGU9J3RleHQvamF2YXNjcmlwdCcgc3JjPSdodHRwOi8vd3d3LmFnZW5jZXNzYWludGZlcmRpbmFuZC5jb20vd3AtY29udGVudC9wbHVnaW5zL2Zvcm1pZGFibGUtcHJvL2pzL2Zvcm1pZGFibGVwcm8ubWluLmpzP3Zlcj00LjAzJz48L3NjcmlwdD4KPHNjcmlwdCB0eXBlPSd0ZXh0L2phdmFzY3JpcHQnIHNyYz0naHR0cDovL3d3dy5hZ2VuY2Vzc2FpbnRmZXJkaW5hbmQuY29tL3dwLWluY2x1ZGVzL2pzL2pxdWVyeS91aS9hY2NvcmRpb24ubWluLmpzP3Zlcj0xLjExLjQnPjwvc2NyaXB0Pgo8c2NyaXB0IHR5cGU9J3RleHQvamF2YXNjcmlwdCcgc3JjPSdodHRwOi8vd3d3LmFnZW5jZXNzYWludGZlcmRpbmFuZC5jb20vd3AtY29udGVudC9wbHVnaW5zL2Zvcm1pZGFibGUtcHJvL2pzL2Ryb3B6b25lLm1pbi5qcz92ZXI9NS41LjAnPjwvc2NyaXB0PgoKPHNjcmlwdD4KLyo8IVtDREFUQVsqLwpfX2ZybURyb3B6b25lPVt7Im1heEZpbGVzaXplIjo1LCJtYXhGaWxlcyI6MSwiaHRtbElEIjoiZmlsZTE4NCIsInVwbG9hZE11bHRpcGxlIjpmYWxzZSwiZmllbGRJRCI6IjE4NCIsImZvcm1JRCI6IjgiLCJwYXJlbnRGb3JtSUQiOiI4IiwiZmllbGROYW1lIjoiaXRlbV9tZXRhWzE4NF0iLCJtb2NrRmlsZXMiOltdLCJkZWZhdWx0TWVzc2FnZSI6IkRyb3AgZmlsZXMgaGVyZSB0byB1cGxvYWQiLCJmYWxsYmFja01lc3NhZ2UiOiJZb3VyIGJyb3dzZXIgZG9lcyBub3Qgc3VwcG9ydCBkcmFnIGFuZCBkcm9wIGZpbGUgdXBsb2Fkcy4iLCJmYWxsYmFja1RleHQiOiJQbGVhc2UgdXNlIHRoZSBmYWxsYmFjayBmb3JtIGJlbG93IHRvIHVwbG9hZCB5b3VyIGZpbGVzIGxpa2UgaW4gdGhlIG9sZGVuIGRheXMuIiwiZmlsZVRvb0JpZyI6IkNlIGZpY2hpZXIgZXN0IHRyb3Agdm9sdW1pbmV1eC4gU2EgdGFpbGxlIGRvaXQgXHUwMGVhdHJlIGluZlx1MDBlOXJpZXVyZSBcdTAwZTAge3ttYXhGaWxlc2l6ZX19TW8uIiwiaW52YWxpZEZpbGVUeXBlIjoiVFx1MDBlOWxcdTAwZTl2ZXJzZW1lbnQgZGUgZmljaGllciBlc3Qgbm9uIHZhbGlkZSIsInJlc3BvbnNlRXJyb3IiOiJTZXJ2ZXIgcmVzcG9uZGVkIHdpdGgge3tzdGF0dXNDb2RlfX0gY29kZS4iLCJjYW5jZWwiOiJBbm51bGVyIGwnZW52b2kiLCJjYW5jZWxDb25maXJtIjoiXHUwMGNhdGVzLXZvdXMgc1x1MDBmYnIgZGUgdm91bG9pciBhbm51bGVyIGNldCBlbnZvaSA/IiwicmVtb3ZlIjoiU3VwcHJpbWVyIGxlIGZpY2hpZXIiLCJtYXhGaWxlc0V4Y2VlZGVkIjoiWW91IGhhdmUgdXBsb2FkZWQgbW9yZSB0aGFuIDEgZmlsZShzKS4iLCJyZXNpemVIZWlnaHQiOm51bGwsInJlc2l6ZVdpZHRoIjpudWxsLCJ0aW1lb3V0IjozNjAwMDAsImFjY2VwdGVkRmlsZXMiOiJhcHBsaWNhdGlvblwvcGRmLGFwcGxpY2F0aW9uXC9tc3dvcmQsYXBwbGljYXRpb25cL3ZuZC5vcGVueG1sZm9ybWF0cy1vZmZpY2Vkb2N1bWVudC53b3JkcHJvY2Vzc2luZ21sLmRvY3VtZW50LC5wZGYsLmRvYywuZG9jeCJ9XTsvKl1dPiovCjwvc2NyaXB0PgoKCjxzY3JpcHQ+CiAgICAvLzwhW0NEQVRBWwogIChmdW5jdGlvbihpLHMsbyxnLHIsYSxtKXtpWydHb29nbGVBbmFseXRpY3NPYmplY3QnXT1yO2lbcl09aVtyXXx8ZnVuY3Rpb24oKXsKICAoaVtyXS5xPWlbcl0ucXx8W10pLnB1c2goYXJndW1lbnRzKX0saVtyXS5sPTEqbmV3IERhdGUoKTthPXMuY3JlYXRlRWxlbWVudChvKSwKICBtPXMuZ2V0RWxlbWVudHNCeVRhZ05hbWUobylbMF07YS5hc3luYz0xO2Euc3JjPWc7bS5wYXJlbnROb2RlLmluc2VydEJlZm9yZShhLG0pCiAgfSkod2luZG93LGRvY3VtZW50LCdzY3JpcHQnLCcvL3d3dy5nb29nbGUtYW5hbHl0aWNzLmNvbS9hbmFseXRpY3MuanMnLCdnYScpOwoKICBnYSgnY3JlYXRlJywgJ1VBLTQzNzE4NjA4LTIyJywgJ3d3dy5hZ2VuY2Vzc2FpbnRmZXJkaW5hbmQuY29tJyk7CiAgZ2EoJ3NlbmQnLCAncGFnZXZpZXcnKTsKLy9dXT4KPC9zY3JpcHQ+CgoKCgo8L2Rpdj4gPCEtLSBlbmQgY2xhc3MgY29udGFpbmVyIC0tPgo8L2Rpdj4gPCEtLSBlbmQgd2Vic2l0ZSB3cmFwcGVyIC0tPgo8L2JvZHk+CjwvaHRtbD4=
    http_version:
  recorded_at: Tue, 16 Jun 2020 14:43:29 GMT
- request:
    method: get
    uri: http://www.agencessaintferdinand.com/properties/argentine-5-pieces/
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Tue, 16 Jun 2020 14:31:50 GMT
      Server:
      - Apache/2.4.7 (Ubuntu)
      X-Pingback:
      - http://www.agencessaintferdinand.com/xmlrpc.php
      Link:
      - "<http://www.agencessaintferdinand.com/?p=2106674>; rel=shortlink"
      - <http://www.agencessaintferdinand.com/wp-json/>; rel="https://api.w.org/"
      Vary:
      - Accept-Encoding
      Content-Length:
      - '20707'
      Content-Type:
      - text/html; charset=UTF-8
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version:
  recorded_at: Tue, 16 Jun 2020 14:43:30 GMT
- request:
    method: get
    uri: http://www.agencessaintferdinand.com/properties/rome-batignolles-7-pieces/
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Tue, 16 Jun 2020 14:31:51 GMT
      Server:
      - Apache/2.4.7 (Ubuntu)
      X-Pingback:
      - http://www.agencessaintferdinand.com/xmlrpc.php
      Link:
      - "<http://www.agencessaintferdinand.com/?p=2085855>; rel=shortlink"
      - <http://www.agencessaintferdinand.com/wp-json/>; rel="https://api.w.org/"
      Vary:
      - Accept-Encoding
      Content-Length:
      - '20490'
      Content-Type:
      - text/html; charset=UTF-8
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version:
  recorded_at: Tue, 16 Jun 2020 14:43:30 GMT
- request:
    method: get
    uri: http://www.agencessaintferdinand.com/properties/cortambert-5-pieces/
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Tue, 16 Jun 2020 14:31:52 GMT
      Server:
      - Apache/2.4.7 (Ubuntu)
      X-Pingback:
      - http://www.agencessaintferdinand.com/xmlrpc.php
      Link:
      - "<http://www.agencessaintferdinand.com/?p=2094099>; rel=shortlink"
      - <http://www.agencessaintferdinand.com/wp-json/>; rel="https://api.w.org/"
      Vary:
      - Accept-Encoding
      Content-Length:
      - '20567'
      Content-Type:
      - text/html; charset=UTF-8
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version:
  recorded_at: Tue, 16 Jun 2020 14:43:31 GMT
recorded_with: VCR 5.1.0
