---
http_interactions:
- request:
    method: get
    uri: https://fr.foncia.com/achat/paris-75/appartement--maison/(params)/on/(tri)/date/(ordre)/desc
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Wed, 29 Apr 2020 10:39:28 GMT
      Set-Cookie:
      - current_property_search_url=%2Fachat%2Fparis-75%2Fappartement--maison%2F%28params%29%2Fon%2F%28tri%29%2Fdate%2F%28ordre%29%2Fdesc;
        path=/
      - eZSESSID=fucf4gfa133ejemjbekgfv2mq6; path=/; secure; HttpOnly
      Cache-Control:
      - public, s-maxage=86400
      Content-Type:
      - text/html; charset=UTF-8
      Vary:
      - Accept-Encoding,Origin
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: null
  recorded_at: Wed, 29 Apr 2020 10:39:28 GMT
- request:
    method: get
    uri: https://fr.foncia.com/achat/paris-75016/appartement/1374813.htm
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Wed, 29 Apr 2020 01:15:26 GMT
      Cache-Control:
      - public, s-maxage=31536000
      Content-Type:
      - text/html; charset=UTF-8
      Vary:
      - Accept-Encoding,Origin
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: null
  recorded_at: Wed, 29 Apr 2020 10:39:29 GMT
- request:
    method: get
    uri: https://fr.foncia.com/achat/paris-75008/appartement/1380696.htm
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Wed, 29 Apr 2020 10:39:29 GMT
      Set-Cookie:
      - eZSESSID=ttbgf1oi5520li2iclgqj0o423; path=/; secure; HttpOnly
      Cache-Control:
      - public, s-maxage=31536000
      Content-Type:
      - text/html; charset=UTF-8
      Vary:
      - Accept-Encoding,Origin
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: null
  recorded_at: Wed, 29 Apr 2020 10:39:29 GMT
- request:
    method: get
    uri: https://fr.foncia.com/achat/paris-75006/appartement/1329134.htm
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Wed, 29 Apr 2020 10:39:29 GMT
      Set-Cookie:
      - eZSESSID=2e19hruhpp4419h7pr8d6fqrm4; path=/; secure; HttpOnly
      Cache-Control:
      - public, s-maxage=31536000
      Content-Type:
      - text/html; charset=UTF-8
      Vary:
      - Accept-Encoding,Origin
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: null
  recorded_at: Wed, 29 Apr 2020 10:39:29 GMT
- request:
    method: get
    uri: https://fr.foncia.com/achat/paris-75006/appartement/1354666.htm
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Wed, 29 Apr 2020 10:39:30 GMT
      Set-Cookie:
      - eZSESSID=a2jtgj27jr7c9c2utcb4orr6r6; path=/; secure; HttpOnly
      Cache-Control:
      - public, s-maxage=31536000
      Content-Type:
      - text/html; charset=UTF-8
      Vary:
      - Accept-Encoding,Origin
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: null
  recorded_at: Wed, 29 Apr 2020 10:39:30 GMT
- request:
    method: get
    uri: https://fr.foncia.com/achat/paris-75015/appartement/1375137.htm
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Wed, 29 Apr 2020 10:39:30 GMT
      Set-Cookie:
      - eZSESSID=idvbamuhlg9ubk6ef6j8cqqlp3; path=/; secure; HttpOnly
      Cache-Control:
      - public, s-maxage=31536000
      Content-Type:
      - text/html; charset=UTF-8
      Vary:
      - Accept-Encoding,Origin
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: null
  recorded_at: Wed, 29 Apr 2020 10:39:30 GMT
- request:
    method: get
    uri: https://fr.foncia.com/achat/paris-75015/appartement/1377669.htm
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Wed, 29 Apr 2020 10:39:30 GMT
      Set-Cookie:
      - eZSESSID=t2dglqui9065nejo9acq4m8fq1; path=/; secure; HttpOnly
      Cache-Control:
      - public, s-maxage=31536000
      Content-Type:
      - text/html; charset=UTF-8
      Vary:
      - Accept-Encoding,Origin
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: null
  recorded_at: Wed, 29 Apr 2020 10:39:30 GMT
- request:
    method: get
    uri: https://fr.foncia.com/achat/paris-75015/appartement/1377924.htm
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Wed, 29 Apr 2020 10:39:31 GMT
      Set-Cookie:
      - eZSESSID=mkudki235k5p3uog38gsih2s15; path=/; secure; HttpOnly
      Cache-Control:
      - public, s-maxage=31536000
      Content-Type:
      - text/html; charset=UTF-8
      Vary:
      - Accept-Encoding,Origin
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: null
  recorded_at: Wed, 29 Apr 2020 10:39:31 GMT
- request:
    method: get
    uri: https://fr.foncia.com/achat/paris-75014/appartement/1380008.htm
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Wed, 29 Apr 2020 10:39:31 GMT
      Set-Cookie:
      - eZSESSID=frh9rp6bmc8f2tmkd1c3n86ll6; path=/; secure; HttpOnly
      Cache-Control:
      - public, s-maxage=31536000
      Content-Type:
      - text/html; charset=UTF-8
      Vary:
      - Accept-Encoding,Origin
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: null
  recorded_at: Wed, 29 Apr 2020 10:39:31 GMT
- request:
    method: get
    uri: https://fr.foncia.com/achat/paris-75006/appartement/1384167.htm
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Wed, 29 Apr 2020 10:39:31 GMT
      Set-Cookie:
      - eZSESSID=3fn398a07f50h1e0bbvlf4ob64; path=/; secure; HttpOnly
      Cache-Control:
      - public, s-maxage=31536000
      Content-Type:
      - text/html; charset=UTF-8
      Vary:
      - Accept-Encoding,Origin
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: null
  recorded_at: Wed, 29 Apr 2020 10:39:32 GMT
- request:
    method: get
    uri: https://fr.foncia.com/achat/paris-75006/appartement/1391116.htm
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Wed, 29 Apr 2020 10:39:32 GMT
      Set-Cookie:
      - eZSESSID=pheq8b9rls4e0t7q67oililp13; path=/; secure; HttpOnly
      Cache-Control:
      - public, s-maxage=31536000
      Content-Type:
      - text/html; charset=UTF-8
      Vary:
      - Accept-Encoding,Origin
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: null
  recorded_at: Wed, 29 Apr 2020 10:39:32 GMT
- request:
    method: get
    uri: https://fr.foncia.com/achat/paris-75007/appartement/1395907.htm
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Wed, 29 Apr 2020 10:39:32 GMT
      Set-Cookie:
      - eZSESSID=e4s622rtj0128fjcj8dgj9ek33; path=/; secure; HttpOnly
      Cache-Control:
      - public, s-maxage=31536000
      Content-Type:
      - text/html; charset=UTF-8
      Vary:
      - Accept-Encoding,Origin
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        PCFET0NUWVBFIGh0bWw+CjxodG1sIGxhbmc9ImZyIj4KPGhlYWQ+CiAgICA8bWV0YSBjaGFyc2V0PSJVVEYtOCI+CiAgICA8bWV0YSBodHRwLWVxdWl2PSJYLVVBLUNvbXBhdGlibGUiIGNvbnRlbnQ9IklFPUVkZ2UiPgogICAgPG1ldGEgbmFtZT0idmlld3BvcnQiIGNvbnRlbnQ9IndpZHRoPWRldmljZS13aWR0aCxpbml0aWFsLXNjYWxlPTEsbWluaW11bS1zY2FsZT0xIj4KCiAgICAKICAgIDx0aXRsZT5BcHBhcnRlbWVudCAxIHBpw6hjZSDDoCB2ZW5kcmUgLSBQYXJpcyA3w6htZSAoNzUwMDcpIC0gMTkgbTIgLSBGb25jaWE8L3RpdGxlPgoKICAgICAgICAgICAgICAgICAgICA8bWV0YSBuYW1lPSJkZXNjcmlwdGlvbiIgY29udGVudD0iQXBwYXJ0ZW1lbnQgMSBwacOoY2UgKDE5IG0yKSDDoCB2ZW5kcmUgLSBQYXJpcyA3w6htZSAoNzUwMDcpIDogUEFSSVMgVklJIC0gVE9VUiBNQVVCT1VSRyAtIFNUVURJTy4KUnVlIEFtw6lsaWUsIHByb2NoZSBFY29sZSBNaWxpdGFpcmUuIEF1IHByZW1pZXIgw6l0YWdlIGF2ZWMgYXNjZW5zZXVyLCBzdHVkaW8gZW4gdHLDqHMgYm9uIMOpdGF0IGRlIDE5IG3CsiwgYXZlYyBiZWxsZSBwacOoY2UuLi4iPgoKICAgICAgICAgICAgICAgICAgICAgICAgPGxpbmsgcmVsPSJpY29uIiB0eXBlPSJpbWFnZS94LWljb24iIGhyZWY9Ii9mYXZpY29uLmljbz92ZXJzaW9uPTE1ODgwOTc1NTkiPgogICAgICAgIDxsaW5rIHJlbD0iYXBwbGUtdG91Y2gtaWNvbi1yZXRpbmEiIGhyZWY9Ii9idW5kbGVzL2ZvbmNpYWludGVybmV0L2ltYWdlcy9lbnZpcm9ubWVudC90b3VjaC1pY29uLWlwaG9uZS1yZXRpbmEucG5nP3ZlcnNpb249MTU4ODA5NzU1OSI+CgogICAgICAgICAgICAgICAgPG1ldGEgbmFtZT0iYXBwbGljYXRpb24tbmFtZSIgY29udGVudD0iRm9uY2lhLmNvbSI+CiAgICAgICAgPG1ldGEgbmFtZT0ibXNhcHBsaWNhdGlvbi1UaWxlQ29sb3IiIGNvbnRlbnQ9IiMwMDllYjkiPgogICAgICAgIDxtZXRhIG5hbWU9Im1zYXBwbGljYXRpb24tc3F1YXJlNzB4NzBsb2dvIiBjb250ZW50PSJ0aW55LnBuZyI+CiAgICAgICAgPG1ldGEgbmFtZT0ibXNhcHBsaWNhdGlvbi1zcXVhcmUxNTB4MTUwbG9nbyIgY29udGVudD0ic3F1YXJlLnBuZyI+CiAgICAgICAgPG1ldGEgbmFtZT0ibXNhcHBsaWNhdGlvbi13aWRlMzEweDE1MGxvZ28iIGNvbnRlbnQ9IndpZGUucG5nIj4KICAgICAgICA8bWV0YSBuYW1lPSJtc2FwcGxpY2F0aW9uLXNxdWFyZTMxMHgzMTBsb2dvIiBjb250ZW50PSJsYXJnZS5wbmciPgoKICAgICAgICAgICAgICAgIDxtZXRhIHByb3BlcnR5PSJvZzp0aXRsZSIgY29udGVudD0iQXBwYXJ0ZW1lbnQgMSBwacOoY2Ugw6AgdmVuZHJlIC0gUGFyaXMgN8OobWUgKDc1MDA3KSAtIDE5IG0yIC0gRm9uY2lhIj4KICAgICAgICA8bWV0YSBwcm9wZXJ0eT0ib2c6c2l0ZV9uYW1lIiBjb250ZW50PSJGT05DSUEiPgogICAgICAgIDxtZXRhIHByb3BlcnR5PSJvZzpkZXNjcmlwdGlvbiIgY29udGVudD0iQXBwYXJ0ZW1lbnQgMSBwacOoY2UgKDE5IG0yKSDDoCB2ZW5kcmUgLSBQYXJpcyA3w6htZSAoNzUwMDcpIDogUEFSSVMgVklJIC0gVE9VUiBNQVVCT1VSRyAtIFNUVURJTy4KUnVlIEFtw6lsaWUsIHByb2NoZSBFY29sZSBNaWxpdGFpcmUuIEF1IHByZW1pZXIgw6l0YWdlIGF2ZWMgYXNjZW5zZXVyLCBzdHVkaW8gZW4gdHLDqHMgYm9uIMOpdGF0IGRlIDE5IG3CsiwgYXZlYyBiZWxsZSBwacOoY2UuLi4iPgogICAgICAgIDxtZXRhIHByb3BlcnR5PSJvZzp1cmwiIGNvbnRlbnQ9Imh0dHBzOi8vZnIuZm9uY2lhLmNvbS9hY2hhdC9wYXJpcy03NTAwNy9hcHBhcnRlbWVudC8xMzk1OTA3Lmh0bSI+CiAgICAgICAgPG1ldGEgcHJvcGVydHk9Im9nOmltYWdlIiBjb250ZW50PSJodHRwOi8vcGhvdG9zLmZyLmZvbmNpYS5jb20vbWluaWNwLzY0MC80ODAvcGhvdG9zLzEzOTUvOTA3LzEzOTU5MDcvZ3JhbmQvMTM5NTkwN180MDk0MjE1MjJlNWUyZjZkMWE0ZjZhZjJjYmEzNTdjOTVlNjEwNGJlMDg4ODMuanBnP2RhdGVtYWo9MjAyMC0wMy0xMSAxMToxMzowNC40NTciPgoKICAgICAgICA8bWV0YSBuYW1lPSJ0d2l0dGVyOnRpdGxlIiBjb250ZW50PSJBcHBhcnRlbWVudCAxIHBpw6hjZSDDoCB2ZW5kcmUgLSBQYXJpcyA3w6htZSAoNzUwMDcpIC0gMTkgbTIgLSBGb25jaWEiPgogICAgICAgIDxtZXRhIG5hbWU9InR3aXR0ZXI6aW1hZ2U6c3JjIiBjb250ZW50PSJodHRwOi8vcGhvdG9zLmZyLmZvbmNpYS5jb20vbWluaWNwLzY0MC80ODAvcGhvdG9zLzEzOTUvOTA3LzEzOTU5MDcvZ3JhbmQvMTM5NTkwN180MDk0MjE1MjJlNWUyZjZkMWE0ZjZhZjJjYmEzNTdjOTVlNjEwNGJlMDg4ODMuanBnP2RhdGVtYWo9MjAyMC0wMy0xMSAxMToxMzowNC40NTciPgogICAgICAgIDxtZXRhIG5hbWU9InR3aXR0ZXI6ZGVzY3JpcHRpb24iIGNvbnRlbnQ9IkFwcGFydGVtZW50IDEgcGnDqGNlICgxOSBtMikgw6AgdmVuZHJlIC0gUGFyaXMgN8OobWUgKDc1MDA3KSA6IFBBUklTIFZJSSAtIFRPVVIgTUFVQk9VUkcgLSBTVFVESU8uClJ1ZSBBbcOpbGllLCBwcm9jaGUgRWNvbGUgTWlsaXRhaXJlLiBBdSBwcmVtaWVyIMOpdGFnZSBhdmVjIGFzY2Vuc2V1ciwgc3R1ZGlvIGVuIHRyw6hzIGJvbiDDqXRhdCBkZSAxOSBtwrIsIGF2ZWMgYmVsbGUgcGnDqGNlLi4uIj4KICAgICAgICA8bWV0YSBuYW1lPSJ0d2l0dGVyOmNhcmQiIGNvbnRlbnQ9InN1bW1hcnkiPgogICAgICAgIDxtZXRhIG5hbWU9InR3aXR0ZXI6c2l0ZSIgY29udGVudD0iQGZvbmNpYSI+CiAgICAKICAgICAgICAgICAgICAgIDxsaW5rIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0iL2NvbXBpbGVkL3N0eWxlcy5jc3M/dmVyc2lvbj0xNTg4MDk3NTU5Ij4KICAgIAogICAgPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPgogICAgdmFyIHRhcnRlYXVjaXRyb25Gb3JjZUNETiA9ICIvYnVuZGxlcy9mb25jaWFpbnRlcm5ldC9qcy90YXJ0ZWF1Y2l0cm9uLyI7Cjwvc2NyaXB0PgoKICAgIDxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0IiBzcmM9Ii9jb21waWxlZC90YXJ0ZWF1Y2l0cm9uLmpzP3ZlcnNpb249MTU4ODA5NzU1OSI+PC9zY3JpcHQ+CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNjcmlwdD53aW5kb3cuZm9uY2lhX2ludGVybmV0PXtwYXJhbXM6e319PC9zY3JpcHQ+CiAgICAgICAgPCEtLVtpZiBJRSA5XT48c2NyaXB0PmRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5jbGFzc05hbWUrPScgSUU5Jzs8L3NjcmlwdD48IVtlbmRpZl0tLT4KPCEtLVtpZiBJRSAxMF0+PHNjcmlwdD5kb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuY2xhc3NOYW1lKz0nIElFMTAnOzwvc2NyaXB0PjwhW2VuZGlmXS0tPgoKPHNjcmlwdD4KIWZ1bmN0aW9uKGEsYil7ImZ1bmN0aW9uIj09dHlwZW9mIGRlZmluZSYmZGVmaW5lLmFtZD9kZWZpbmUoW10sZnVuY3Rpb24oKXtyZXR1cm4gYS5zdmc0ZXZlcnlib2R5PWIoKX0pOiJvYmplY3QiPT10eXBlb2YgZXhwb3J0cz9tb2R1bGUuZXhwb3J0cz1iKCk6YS5zdmc0ZXZlcnlib2R5PWIoKX0odGhpcyxmdW5jdGlvbigpe2Z1bmN0aW9uIGEoYSxiKXtpZihiKXt2YXIgYz1kb2N1bWVudC5jcmVhdGVEb2N1bWVudEZyYWdtZW50KCksZD0hYS5nZXRBdHRyaWJ1dGUoInZpZXdCb3giKSYmYi5nZXRBdHRyaWJ1dGUoInZpZXdCb3giKTtkJiZhLnNldEF0dHJpYnV0ZSgidmlld0JveCIsZCk7Zm9yKHZhciBlPWIuY2xvbmVOb2RlKCEwKTtlLmNoaWxkTm9kZXMubGVuZ3RoOyljLmFwcGVuZENoaWxkKGUuZmlyc3RDaGlsZCk7YS5hcHBlbmRDaGlsZChjKX19ZnVuY3Rpb24gYihiKXtiLm9ucmVhZHlzdGF0ZWNoYW5nZT1mdW5jdGlvbigpe2lmKDQ9PT1iLnJlYWR5U3RhdGUpe3ZhciBjPWIuX2NhY2hlZERvY3VtZW50O2N8fChjPWIuX2NhY2hlZERvY3VtZW50PWRvY3VtZW50LmltcGxlbWVudGF0aW9uLmNyZWF0ZUhUTUxEb2N1bWVudCgiIiksYy5ib2R5LmlubmVySFRNTD1iLnJlc3BvbnNlVGV4dCxiLl9jYWNoZWRUYXJnZXQ9e30pLGIuX2VtYmVkcy5zcGxpY2UoMCkubWFwKGZ1bmN0aW9uKGQpe3ZhciBlPWIuX2NhY2hlZFRhcmdldFtkLmlkXTtlfHwoZT1iLl9jYWNoZWRUYXJnZXRbZC5pZF09Yy5nZXRFbGVtZW50QnlJZChkLmlkKSksYShkLnN2ZyxlKX0pfX0sYi5vbnJlYWR5c3RhdGVjaGFuZ2UoKX1mdW5jdGlvbiBjKGMpe2Z1bmN0aW9uIGQoKXtmb3IodmFyIGM9MDtjPGwubGVuZ3RoOyl7dmFyIGc9bFtjXSxoPWcucGFyZW50Tm9kZTtpZihoJiYvc3ZnL2kudGVzdChoLm5vZGVOYW1lKSl7dmFyIGk9Zy5nZXRBdHRyaWJ1dGUoInhsaW5rOmhyZWYiKTtpZihlJiYoIWYudmFsaWRhdGV8fGYudmFsaWRhdGUoaSxoLGcpKSl7aC5yZW1vdmVDaGlsZChnKTt2YXIgbT1pLnNwbGl0KCIjIiksbj1tLnNoaWZ0KCksbz1tLmpvaW4oIiMiKTtpZihuLmxlbmd0aCl7dmFyIHA9altuXTtwfHwocD1qW25dPW5ldyBYTUxIdHRwUmVxdWVzdCxwLm9wZW4oIkdFVCIsbikscC5zZW5kKCkscC5fZW1iZWRzPVtdKSxwLl9lbWJlZHMucHVzaCh7c3ZnOmgsaWQ6b30pLGIocCl9ZWxzZSBhKGgsZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQobykpfX1lbHNlKytjfWsoZCw2Nyl9dmFyIGUsZj1PYmplY3QoYyksZz0vXGJUcmlkZW50XC9bNTY3XVxifFxiTVNJRSAoPzo5fDEwKVwuMFxiLyxoPS9cYkFwcGxlV2ViS2l0XC8oXGQrKVxiLyxpPS9cYkVkZ2VcLzEyXC4oXGQrKVxiLztlPSJwb2x5ZmlsbCJpbiBmP2YucG9seWZpbGw6Zy50ZXN0KG5hdmlnYXRvci51c2VyQWdlbnQpfHwobmF2aWdhdG9yLnVzZXJBZ2VudC5tYXRjaChpKXx8W10pWzFdPDEwNTQ3fHwobmF2aWdhdG9yLnVzZXJBZ2VudC5tYXRjaChoKXx8W10pWzFdPDUzNzt2YXIgaj17fSxrPXdpbmRvdy5yZXF1ZXN0QW5pbWF0aW9uRnJhbWV8fHNldFRpbWVvdXQsbD1kb2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZSgidXNlIik7ZSYmZCgpfXJldHVybiBjfSk7Cjwvc2NyaXB0Pgo8c2NyaXB0PnN2ZzRldmVyeWJvZHkoKTwvc2NyaXB0PgogICAgCiAgICAgICAgPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiIHNyYz0iaHR0cHM6Ly93d3cuY2l0eXNjYW4uZnIvYXNzZXRzL2J1aWxkL2pzL2xpYi9jaXR5c2Nhbi13aWRnZXQuanMiPjwvc2NyaXB0Pgo8L2hlYWQ+CgoKPGJvZHk+CgogICAgPHNjcmlwdD4KICAgICAgICBkYXRhTGF5ZXIgPSB3aW5kb3cuZGF0YUxheWVyIHx8IHt9OwogICAgICAgIHZhciBvYmplY3QgPSB7CiAgICAgICAgICAgICJ0eXBlU2l0ZSI6ICJnw6luw6lyaXF1ZSIsCiAgICAgICAgICAgICJlc3BhY2UiOiAiZ2VuZXJhbCIsCiAgICAgICAgICAgICJ0eXBlUGFnZSI6ICJjbGFzc2lxdWUiLAogICAgICAgICAgICAidGVtcGxhdGUiOiAicHJvZHVpdCIsCiAgICAgICAgICAgICJ0aGVtZSI6ICJhY2hhdCIKICAgICAgICB9OwoKICAgICAgICBkYXRhTGF5ZXIgPSBbb2JqZWN0XTsKICAgIDwvc2NyaXB0PgoKPHNjcmlwdD4KICAgIGRhdGFMYXllciA9IHdpbmRvdy5kYXRhTGF5ZXIgfHwgW107CgogICAgdmFyIGN1cnJlbnRQYXRoID0gd2luZG93LmxvY2F0aW9uLnBhdGhuYW1lOwoKICAgICAgICAgICAgdmFyIGNvbW1vblVwdGlsYWJWYWx1ZXMgPSB7CiAgICAgICAgInR5cGVTaXRlIjogImfDqW7DqXJpcXVlIiwgLy8gRmV0Y2hlZCBmcm9tIGxheW91dCBnbG9iYWxzCiAgICAgICAgImVzcGFjZSI6ICJnZW5lcmFsIiwKICAgICAgICAidHlwZVBhZ2UiOiAiY2xhc3NpcXVlIiwKICAgICAgICAidGVtcGxhdGUiOiAiYXV0cmVzIgogICAgfTsKCiAgICAvLyBEZXBlbmRpbmcgb24gY3VycmVudCBwYXRobmFtZSwgd2UgZGlzcGF0Y2ggYW4gZXZlbnQsIHVzZWQgZm9yIEJhY2stT2ZmaWNlIHBhZ2VzCiAgICBzd2l0Y2ggKHRydWUpIHsKICAgICAgICBjYXNlIGN1cnJlbnRQYXRoLmluZGV4T2YoIi9hY2hhdC8iKSA9PT0gMDogLy8gUGFnZSBhY2hhdCAoYXZlYyByZWNoZXJjaGUgZW4gY291cnMpCiAgICAgICAgICAgIC8vIEV2ZW50CiAgICAgICAgICAgIGRhdGFMYXllci5wdXNoKHsiY3VzdG9tQ2F0ZWdvcmllIjogImVuZ2FnZW1lbnQiLCAiY3VzdG9tQWN0aW9uIjogImludGVyZXQiLCAiY3VzdG9tTGFiZWwiOiAiQWNoZXRlciIsICJldmVudCI6ICJjdXN0b21FdmVudCJ9KTsKICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgY2FzZSBjdXJyZW50UGF0aC5pbmRleE9mKCIvbG9jYXRpb24vIikgPT09IDA6IC8vIFBhZ2UgbG9jYXRpb24gKGF2ZWMgcmVjaGVyY2hlIGVuIGNvdXJzKQogICAgICAgICAgICAvLyBFdmVudAogICAgICAgICAgICBkYXRhTGF5ZXIucHVzaCh7ImN1c3RvbUNhdGVnb3JpZSI6ICJlbmdhZ2VtZW50IiwgImN1c3RvbUFjdGlvbiI6ICJpbnRlcmV0IiwgImN1c3RvbUxhYmVsIjogIkxvdWVyIiwgImV2ZW50IjogImN1c3RvbUV2ZW50In0pOwogICAgICAgICAgICBicmVhazsKICAgICAgICBjYXNlIGN1cnJlbnRQYXRoLmluZGV4T2YoIi9yZWNoZXJjaGUvcGFjay1lYXN5bG9jIikgPT09IDA6IC8vIExhIHBhZ2UgcGFjay1lYXN5bG9jCiAgICAgICAgICAgIGNvbW1vblVwdGlsYWJWYWx1ZXMudGhlbWUgPSAibG9jYXRpb24iOwogICAgICAgICAgICBkYXRhTGF5ZXIucHVzaChjb21tb25VcHRpbGFiVmFsdWVzKTsKICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgY2FzZSBjdXJyZW50UGF0aC5pbmRleE9mKCIvcmVjaGVyY2hlL2FjaGV0ZXItdW4tYmllbiIpID09PSAwOiAvLyBMYSBwYWdlIGFjaGV0ZXIgdW4gYmllbgogICAgICAgICAgICBjb21tb25VcHRpbGFiVmFsdWVzLnRoZW1lID0gImFjaGF0IjsKICAgICAgICAgICAgZGF0YUxheWVyLnB1c2goY29tbW9uVXB0aWxhYlZhbHVlcyk7CiAgICAgICAgICAgIGJyZWFrOwogICAgICAgIGNhc2UgY3VycmVudFBhdGguaW5kZXhPZigiL2xlLWdyb3VwZSIpID09PSAwOiAvLyBQYWdlIG91IHNvdXMtcGFnZXMgIkxlIGdyb3VwZSIKICAgICAgICAgICAgY29tbW9uVXB0aWxhYlZhbHVlcy50aGVtZSA9ICJncm91cGUiOwogICAgICAgICAgICBkYXRhTGF5ZXIucHVzaChjb21tb25VcHRpbGFiVmFsdWVzKTsKICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgY2FzZSBjdXJyZW50UGF0aC5pbmRleE9mKCIvbC1pbnZlc3Rpc3NlbWVudC1pbW1vYmlsaWVyIikgPT09IDA6IC8vIFBhZ2Ugb3Ugc291cy1wYWdlcyAiTCdpbnZlc3Rpc3NlbWVudCBpbW1vYmlsaWVyIgogICAgICAgICAgICBjb21tb25VcHRpbGFiVmFsdWVzLnRoZW1lID0gImludmVzdGlzc2VtZW50IjsKICAgICAgICAgICAgZGF0YUxheWVyLnB1c2goY29tbW9uVXB0aWxhYlZhbHVlcyk7CiAgICAgICAgICAgIGJyZWFrOwogICAgICAgIGNhc2UgY3VycmVudFBhdGguaW5kZXhPZigiL2ZhaXJlLWdlcmVyLW1hLWxvY2F0aW9uLXBhci1mb25jaWEiKSA9PT0gMDogLy8gUGFnZSBvdSBzb3VzLXBhZ2VzICJGYWlyZSBnw6lyZXIgbWEgbG9jYXRpb24iCiAgICAgICAgICAgIGNvbW1vblVwdGlsYWJWYWx1ZXMudGhlbWUgPSAiZ2VzdGlvbkxvY2F0aXZlIjsKICAgICAgICAgICAgZGF0YUxheWVyLnB1c2goY29tbW9uVXB0aWxhYlZhbHVlcyk7CiAgICAgICAgICAgIGJyZWFrOwogICAgICAgIGNhc2UgY3VycmVudFBhdGguaW5kZXhPZigiL2ZhaXJlLWdlcmVyLXVuZS1jb3Byb3ByaWV0ZSIpID09PSAwOiAvLyBQYWdlIG91IHNvdXMtcGFnZXMgIkZhaXJlIGfDqXJlciB1bmUgY29wcm9wcmnDqXTDqSIKICAgICAgICAgICAgY29tbW9uVXB0aWxhYlZhbHVlcy50aGVtZSA9ICJjb3Byb3ByaWV0ZSI7CiAgICAgICAgICAgIGRhdGFMYXllci5wdXNoKGNvbW1vblVwdGlsYWJWYWx1ZXMpOwogICAgICAgICAgICBicmVhazsKICAgICAgICBjYXNlIGN1cnJlbnRQYXRoLmluZGV4T2YoIi9zZXJ2aWNlcyIpID09PSAwOiAvLyBQYWdlIG91IHNvdXMtcGFnZXMgIkZhaXJlIGfDqXJlciB1bmUgY29wcm9wcmnDqXTDqSIKICAgICAgICAgICAgY29tbW9uVXB0aWxhYlZhbHVlcy50aGVtZSA9ICJzZXJ2aWNlcyI7CiAgICAgICAgICAgIGRhdGFMYXllci5wdXNoKGNvbW1vblVwdGlsYWJWYWx1ZXMpOwogICAgICAgICAgICBicmVhazsKICAgICAgICBjYXNlIGN1cnJlbnRQYXRoID09PSAnL21vdC1kZS1wYXNzZS1vdWJsaWUnOgogICAgICAgICAgICBjb21tb25VcHRpbGFiVmFsdWVzLnRlbXBsYXRlID0gImhvbWVwYWdlIjsKICAgICAgICAgICAgZGF0YUxheWVyLnB1c2goY29tbW9uVXB0aWxhYlZhbHVlcyk7CiAgICAgICAgICAgIGJyZWFrOwogICAgICAgIGNhc2UgY3VycmVudFBhdGggPT09ICcvJzoKICAgICAgICAgICAgY29tbW9uVXB0aWxhYlZhbHVlcy50ZW1wbGF0ZSA9ICJob21lcGFnZSI7CiAgICAgICAgICAgIGRhdGFMYXllci5wdXNoKGNvbW1vblVwdGlsYWJWYWx1ZXMpOwogICAgICAgICAgICBicmVhazsKICAgIH0KICAgIAogICAgPC9zY3JpcHQ+Cjxub3NjcmlwdD48aWZyYW1lIHNyYz0iLy93d3cuZ29vZ2xldGFnbWFuYWdlci5jb20vbnMuaHRtbD9pZD1HVE0tUEJCWldEIiBoZWlnaHQ9IjAiIHdpZHRoPSIwIiBzdHlsZT0iZGlzcGxheTpub25lO3Zpc2liaWxpdHk6aGlkZGVuIj48L2lmcmFtZT48L25vc2NyaXB0Pgo8c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCI+CiAgICB0YXJ0ZWF1Y2l0cm9uLnVzZXIuZ29vZ2xldGFnbWFuYWdlcklkID0gJ0dUTS1QQkJaV0QnOwogICAgKHRhcnRlYXVjaXRyb24uam9iID0gdGFydGVhdWNpdHJvbi5qb2IgfHwgW10pLnB1c2goJ2dvb2dsZXRhZ21hbmFnZXJfZm9uY2lhJyk7CgogICAgdGFydGVhdWNpdHJvbi51c2VyLkFCVGFzdHlJZCA9ICIwZTZkOWVhMjQ3MjgyMDcyY2UzYTg0MTMwZmM4ZTcxMiI7CiAgICAodGFydGVhdWNpdHJvbi5qb2IgPSB0YXJ0ZWF1Y2l0cm9uLmpvYiB8fCBbXSkucHVzaCgnYWJ0YXN0eV9mb25jaWEnKTsKPC9zY3JpcHQ+Cgo8c2NyaXB0PgogICAgICAgIGRhdGFMYXllciA9IHdpbmRvdy5kYXRhTGF5ZXIgfHwgW107CgogICAgICAgIGZ1bmN0aW9uIGRlZmVyKG1ldGhvZCkgewogICAgICAgIGlmICh3aW5kb3cualF1ZXJ5KQogICAgICAgICAgICBtZXRob2QoKTsKICAgICAgICBlbHNlCiAgICAgICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkgewogICAgICAgICAgICAgICAgZGVmZXIobWV0aG9kKQogICAgICAgICAgICB9LCA1MCk7CiAgICB9CgogICAgCiAgICAKPC9zY3JpcHQ+Cgo8ZGl2IGNsYXNzPSJCb2R5V3JhcHBlciI+CgogICAgPGhlYWRlciBjbGFzcz0iSGVhZGVyIiByb2xlPSJiYW5uZXIiPgoKICAgIAogICAgPGRpdiBjbGFzcz0iSGVhZGVyLXRvcCI+CgogICAgICAgICAgICA8dWwgY2xhc3M9IkhlYWRlci10b3BOYXYgSGVhZGVyLXRvcC1sZWZ0Ij4KCiAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL2ZyLmZvbmNpYS5jb20vbm90cmUtYW1iaXRpb24iCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtYmVoYXQ9IkxlZ3JvdXBlIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgTGUgZ3JvdXBlCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cDovL2NhcnJpZXJlLmZvbmNpYS5jb20vIgogICAgICAgICAgICAgICAgICAgICAgICB0YXJnZXQ9Il9ibGFuayIgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtYmVoYXQ9IkNhcnJpw6hyZSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIENhcnJpw6hyZQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHA6Ly9mb25jaWEtcmVjcnV0ZS50YWxlbnQtc29mdC5jb20vYWNjdWVpbC5hc3B4IgogICAgICAgICAgICAgICAgICAgICAgICB0YXJnZXQ9Il9ibGFuayIgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtYmVoYXQ9Ik5vc29mZnJlc2TigJllbXBsb2kiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBOb3Mgb2ZmcmVzIGTigJllbXBsb2kKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL2ZyLmZvbmNpYS5jb20vbW9uLWd1aWRlLWltbW8iCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtYmVoYXQ9Ik1vbkd1aWRlSW1tbyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIE1vbiBHdWlkZSBJbW1vCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cDovL2JlbGxlc3BlcnNvbm5lcy5mb25jaWEuY29tLyIKICAgICAgICAgICAgICAgICAgICAgICAgdGFyZ2V0PSJfYmxhbmsiICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkYXRhLWJlaGF0PSJCZWxsZXNwZXJzb25uZXMiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBCZWxsZXMgcGVyc29ubmVzCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZnIuZm9uY2lhLmNvbS9hY3R1YWxpdGVzLWVuLXBlcmlvZGUtZGUtY29uZmluZW1lbnQiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU9ImNvbG9yOiAjRkE4QTAwO2ZvbnQtd2VpZ2h0OiBib2xkOyIgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtYmVoYXQ9IkFjdHVhbGl0w6lzIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgQWN0dWFsaXTDqXMKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgIDwvdWw+CiAgICAKICAgIDx1bCBjbGFzcz0iSGVhZGVyLXRvcE5hdiBIZWFkZXItdG9wLXJpZ2h0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgIDxhICBjbGFzcz0iSWNvbi0tcG9pbnRlciIgaHJlZj0iaHR0cDovL2FnZW5jZS5mb25jaWEuY29tIiBkYXRhLWJlaGF0PSJoZWFkZXJUcm91dmVyQWdlbmNlTGllbiI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBUcm91dmVyIHVuZSBhZ2VuY2UKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdWw+CjwvZGl2PgoKCiAgICA8cCBjbGFzcz0iSGVhZGVyLXNraXBsaW5rIj4KICAgICAgICA8YSBjbGFzcz0iSGVhZGVyLWxvZ28iIGhyZWY9Ii8iPgogICAgICAgICAgICA8aW1nIGNsYXNzPSJIZWFkZXItbG9nby0tZGVza3RvcCIgd2lkdGg9IjY0cHgiIGhlaWdodD0iNjRweCIgc3JjPSJodHRwczovL3Bob3Rvcy5mb25jaWEubmV0L2ltYWdlcy9Gb25jaWFfbG9nb2hfNjZfNjYucG5nIiBhbHQ9IkZvbmNpYSI+CiAgICAgICAgICAgIDxpbWcgY2xhc3M9IkhlYWRlci1sb2dvLS1tb2JpbGUiIHdpZHRoPSIxMDhweCIgaGVpZ2h0PSIzMHB4IiBzcmM9Imh0dHBzOi8vcGhvdG9zLmZvbmNpYS5uZXQvaW1hZ2VzL0ZvbmNpYV9ob21lcGFnZXZfMTA4XzMwLnBuZyIgYWx0PSJGb25jaWEiPgogICAgICAgIDwvYT4KICAgICAgICA8YnV0dG9uIGNsYXNzPSJIZWFkZXItc2tpcGxpbmstbWVudSBJY29uLS1tZW51IiBkYXRhLXdpZGdldD0iUGFuZWxTbGlkZS10cmlnZXIiIGRhdGEtd2lkZ2V0LXNpZGU9ImxlZnQiPk1lbnU8L2J1dHRvbj4KICAgICAgICA8YSBocmVmPSIvbG9naW4iIGNsYXNzPSJIZWFkZXItc2tpcGxpbmstdXNlciBJY29uLS11c2VyLW1hbGUyIj5NeUZPTkNJQTwvYT4KICAgIDwvcD4KCiAgICA8bmF2IGNsYXNzPSJNYWluTmF2IiByb2xlPSJuYXZpZ2F0aW9uIj4KICAgICAgICA8dWwgY2xhc3M9Ik1haW5OYXYtbGlzdCBIZWFkZXItdG9wTmF2Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGkgY2xhc3M9Ik1haW5OYXYtaXRlbSBNYWluTmF2LWl0ZW0tLWxvY2F0aW9uIGZpcnN0Ij4gICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZnIuZm9uY2lhLmNvbS9hY2hhdCIgICAgPkFjaGV0ZXIgPHNwYW4+b3UgbG91ZXI8L3NwYW4+PC9hPiAgICAgICAgICAgIAogICAgPC9saT4KCiAgICAgICAgPGxpIGNsYXNzPSJNYWluTmF2LWl0ZW0gTWFpbk5hdi1pdGVtLS1nZXN0aW9uIj4gICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZnIuZm9uY2lhLmNvbS9mYWlyZS1nZXJlci1tYS1sb2NhdGlvbi1wYXItZm9uY2lhIiAgICA+RmFpcmUgZ8OpcmVyIDxzcGFuPm1hIGxvY2F0aW9uPC9zcGFuPjwvYT4gICAgICAgICAgICAKICAgIDwvbGk+CgogICAgICAgIDxsaSBjbGFzcz0iTWFpbk5hdi1pdGVtIE1haW5OYXYtaXRlbS0tY29wcm8iPiAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9mci5mb25jaWEuY29tL2ZhaXJlLWdlcmVyLXVuZS1jb3Byb3ByaWV0ZSIgICAgPkZhaXJlIGfDqXJlciA8c3Bhbj51bmUgY29wcm9wcmnDqXTDqTwvc3Bhbj48L2E+ICAgICAgICAgICAgCiAgICA8L2xpPgoKICAgICAgICA8bGkgY2xhc3M9Ik1haW5OYXYtaXRlbSBNYWluTmF2LWl0ZW0tLXZlbnRlIj4gICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZnIuZm9uY2lhLmNvbS9lc3RpbWVyLWV0LXZlbmRyZSIgICAgPkVzdGltZXIgPHNwYW4+ZXQgdmVuZHJlPC9zcGFuPjwvYT4gICAgICAgICAgICAKICAgIDwvbGk+CgogICAgICAgIDxsaSBjbGFzcz0iTWFpbk5hdi1pdGVtIE1haW5OYXYtaXRlbS0taW52ZXN0aXNzZW1lbnQiPiAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9mci5mb25jaWEuY29tL2wtaW52ZXN0aXNzZW1lbnQtaW1tb2JpbGllciIgICAgPkludmVzdGlyIDxzcGFuPmRhbnMgbCYjMDM5O2ltbW9iaWxpZXI8L3NwYW4+PC9hPiAgICAgICAgICAgIAogICAgPC9saT4KCiAgICAgICAgPGxpIGNsYXNzPSJNYWluTmF2LWl0ZW0gTWFpbk5hdi1pdGVtLS1sb2NhdGlvbnZhY2FuY2VzIGxhc3QiPiAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly93d3cuZm9uY2lhLWxvY2F0aW9uLXZhY2FuY2VzLmZyLyN1dG1fc291cmNlPWZvbmNpYS5jb20mYW1wO3V0bV9tZWRpdW09bGllbiZhbXA7dXRtX2NhbXBhaWduPWZvbmNpYS5jb20iICAgICB0YXJnZXQ9Il9ibGFuayI+TG9jYXRpb24gPHNwYW4+VmFjYW5jZXM8L3NwYW4+PC9hPiAgICAgICAgICAgIAogICAgPC9saT4KCgogICAgCgoKICAgICAgICAgICAgPGxpIGNsYXNzPSJNYWluTmF2LWl0ZW0gTWFpbk5hdi1pdGVtLS11c2VyIGxhc3QiPgogICAgICAgICAgICAgICAgPGEgaHJlZj0iL2xvZ2luIj5NeUZPTkNJQSA8c3Bhbj5FU1BBQ0UgQ0xJRU5UPC9zcGFuPjwvYT4KICAgICAgICAgICAgPC9saT4KICAgICAgICA8L3VsPgogICAgPC9uYXY+CgogICAgPGRpdiBjbGFzcz0iVXNlck5hdiIgaWQ9Ik15Rm9uY2lhTWVudSI+CgogICAgPGRpdiBjbGFzcz0iVXNlck5hdi1vdmVyZmxvdyAiPgogICAgICAgIAogICAgICAgIDxkaXYgY2xhc3M9IlVzZXJMb2dpbiI+CiAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICA8ZGl2IGNsYXNzPSJVc2VyTG9naW4taW5mbyI+CiAgICAgICAgICAgIDxwIGNsYXNzPSJVc2VyTG9naW4tdGl0bGUiPlByZW1pw6hyZSBjb25uZXhpb24gPzwvcD4KICAgIAoKICAgIAogICAgICAgIDxwIGNsYXNzPSJVc2VyTG9naW4taWxsIj4KICAgICAgICAgICAgICAgIDxpbWcgc3JjPSJodHRwczovL2ZyLmZvbmNpYS5jb20vdmFyL2ZvbmNpYS9zdG9yYWdlL2ltYWdlcy9fYWxpYXNlcy90aHVtYl8yMDVfMjA1L21lZGlhL2ltYWdlcy9haWRlLzM1NzAtMi1mcmUtRlIvQWlkZS5wbmciICBhbHQ9IiIgLz4KICAgICAgICA8L3A+CgogICAgCiAgICAKICAgICAgICAgICAgPHAgY2xhc3M9IlVzZXJMb2dpbi10ZXh0Ij5Mb3JzIGRlIHZvdHJlIHByZW1pw6hyZSBjb25uZXhpb24gw6Agdm90cmUgZXNwYWNlIGNsaWVudCBNeUZvbmNpYSwgdm91cyBkZXZleiBzYWlzaXIgdm90cmUgaWRlbnRpZmlhbnQgZXQgbGUgbW90IGRlIHBhc3NlIHByb3Zpc29pcmUgcXVpIHZvdXMgb250IMOpdMOpIHRyYW5zbWlzIHBhciB2b3RyZSBhZ2VuY2Ugb3Ugc3VyIHZvcyBkb2N1bWVudHMgY29tcHRhYmxlcy48L3A+CiAgICAKCiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pgo8cCBjbGFzcz0iVXNlckxvZ2luLWNyZWF0ZSI+UHJlbWnDqHJlIGNvbm5leGlvbiA/IDxhCiAgICAgICAgICAgICAgICBocmVmPSIvcHJlbWllcmUtY29ubmV4aW9uLWEtbW9uLWVzcGFjZS1jbGllbnQtZm9uY2lhIj5Ew6ljb3V2cmV6IGNvbW1lbnQgdm91cyBjb25uZWN0ZXI8L2E+PC9wPgoKCiAgICAgICAgCiAgICAgICAgPC9kaXY+CgogICAgPC9kaXY+Cgo8L2Rpdj4KCiAgICAgICAgICAgICAgICAgICAgICAgIDwvaGVhZGVyPgogICAgCjwhLS1baWYgbHRlIElFIDkgXT4KPGRpdiBjbGFzcz0iQnJvd3NlckFsZXJ0IEJyb3dzZXJBbGVydC0tdmlzaWJsZSI+CiAgICA8ZGl2IGNsYXNzPSJCcm93c2VyQWxlcnQtaW5uZXIiPgogICAgICAgIDxzcGFuIGNsYXNzPSJCcm93c2VyQWxlcnQtaWNvbiI+CiAgICAgICAgICAgIDxzdmcgY2xhc3M9Imljb24iIHdpZHRoPSIzMiIgaGVpZ2h0PSIzMiIgYXJpYS1oaWRkZW49InRydWUiPjx1c2UgeGxpbms6aHJlZj0iL2J1bmRsZXMvZm9uY2lhaW50ZXJuZXQvc3ZnL2ljb25zLnN2ZyNJY29uLS1pbmZvIj48L3VzZT48L3N2Zz4KICAgICAgICA8L3NwYW4+CiAgICAgICAgPHAgY2xhc3M9IkJyb3dzZXJBbGVydC1tZXNzYWdlIj4KICAgICAgICAgICAgQXR0ZW50aW9uLCB2b3RyZSBuYXZpZ2F0ZXVyIG7igJllc3QgcGFzIMOgIGpvdXIgISBBZmluIGQnYW3DqWxpb3JlciB2b3RyZSBleHDDqXJpZW5jZSBzdXIgY2Ugc2l0ZSBub3VzIHZvdXMgY29uc2VpbGxvbnMgZGUgbWV0dHJlIMOgIGpvdXIgdm90cmUgbmF2aWdhdGV1ciB2ZXJzIHVuZSB2ZXJzaW9uIHBsdXMgcsOpY2VudGUKICAgICAgICA8L3A+CiAgICAgICAgPHNwYW4gY2xhc3M9IkJyb3dzZXJBbGVydC1jbG9zZSI+CiAgICAgICAgICAgIDxidXR0b24gY2xhc3M9IkJyb3dzZXJBbGVydC1jbG9zZUJ0biIgYXJpYS1sYWJlbD0iTWFzcXVlciBjZSBtZXNzYWdlIj4KICAgICAgICAgICAgICAgIDxzdmcgY2xhc3M9Imljb24iIHdpZHRoPSIxMiIgaGVpZ2h0PSIxMiIgYXJpYS1oaWRkZW49InRydWUiPjx1c2UgeGxpbms6aHJlZj0iL2J1bmRsZXMvZm9uY2lhaW50ZXJuZXQvc3ZnL2ljb25zLnN2ZyNJY29uLS1jbG9zZTIiPjwvdXNlPjwvc3ZnPgogICAgICAgICAgICA8L2J1dHRvbj4KICAgICAgICA8L3NwYW4+CiAgICA8L2Rpdj4KPC9kaXY+CjwhW2VuZGlmXS0tPgoKCgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJCcmVhZGNydW1icyI+CiAgICAgICAgICAgIDxwICAgICBjbGFzcz0iQnJlYWRjcnVtYnMtaW5uZXIiIGRhdGEtdHlwZT0ieW9sbyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4+Rm9uY2lhPC9zcGFuPiAgICAgICAgICAgICAgICAgICAgICAgICAgICAKCiAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Ii9hY2hhdCIgICAgIGNsYXNzPSJCcmVhZGNydW1icy1saW5rIj5BY2hhdDwvYT4gICAgICAgICAgICAgICAgICAgICAgICAgICAgCgogICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIvYWNoYXQvcGFyaXMtNzUwMDciICAgICBjbGFzcz0iQnJlYWRjcnVtYnMtbGluayI+UGFyaXMgKDc1MDA3KTwvYT4gICAgICAgICAgICAgICAgICAgICAgICAgICAgCgogICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3Bhbj5BcHBhcnRlbWVudDwvc3Bhbj4gICAgICAgICAgICAgICAgICAgICAgICAgICAgCgogICAgCgogICAgICAgICAgICA8L3A+CiAgICAgICAgPC9kaXY+CiAgICAKCgogICAgICAgICAgICAgICAgICAgICAgICAKICAgIAogICAgCiAgICA8ZGl2IGNsYXNzPSJDb250ZW50Ij4KCiAgICAgICAgPGRpdiBjbGFzcz0iQ29udGVudC1iYW5kbyBDb250ZW50LWJhbmRvLS1ncmFkaWVudCI+PC9kaXY+CgogICAgICAgIDxkaXYgY2xhc3M9IlJlc3VsdHNOYXYiIGRhdGEtcHJvcGVydHktcmVmZXJlbmNlPSIxMzk1OTA3Ij4KCiAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgPHNlY3Rpb24gY2xhc3M9IkNvbnRlbnQtcm93IENvbnRlbnQtcm93LS1ibGVlZCI+CiAgICAgICAgICAgICAgICA8ZGl2IGlkPSJjaXR5c2Nhbi13aWRnZXQiCiAgICAgZGF0YS1jbGllbnQta2V5PSJOdjFDOTJnUERiZjRPSjh5dzIiCiAgICAgZGF0YS1leHQtYWRkcmVzcy1pZD0iVDEzOTU5MDciCiAgICAgZGF0YS1sYW5ndWFnZT0iZnItRlIiCiAgICAgICAgICBjbGFzcz0iT2ZmZXJNYXAiPjwvZGl2PiAgICAgICAgICAgIDwvc2VjdGlvbj4KICAgICAgICAgICAgICAgIDxzZWN0aW9uIGNsYXNzPSJDb250ZW50LXJvdyBDb250ZW50LXJvdy0tZ3JheSI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9IkNvbnRlbnQtb3ZlcmZsb3ciPgoKICAgICAgICAgICAgICAgIDxtYWluIGNsYXNzPSJDb250ZW50LW1haW4iIHJvbGU9Im1haW4iPgoKICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJPZmZlclRvcCI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Ik9mZmVyVG9wLWhlYWQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0iT2ZmZXJUb3AtYmFkZ2UiPkV4Y2x1c2lmPC9wPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxoMSBjbGFzcz0iT2ZmZXJUb3AtdGl0bGUiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEFwcGFydGVtZW50CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgMSBwacOoY2UgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIMOgIHZlbmRyZQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9oMT4KICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJPZmZlclRvcC1mYXYiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz0iRmF2QnRuIEZhdkJ0bi0taW5hY3RpdmUiIGFyaWEtbGFiZWw9IkFqb3V0ZXIgYXV4IGZhdm9yaXMiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzdmcgY2xhc3M9Imljb24iIHN0eWxlPSJ3aWR0aDoxNXB4O2hlaWdodDoxNXB4IiBhcmlhLWhpZGRlbj0idHJ1ZSI+PHVzZSB4bGluazpocmVmPSIvYnVuZGxlcy9mb25jaWFpbnRlcm5ldC9zdmcvaWNvbnMuc3ZnI0ljb24tLXN0YXIyIj48L3VzZT48L3N2Zz4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYnV0dG9uPgogICAgICAgICAgICAgICAgICAgICAgICA8L3A+CgogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJPZmZlclRvcC1jb2xzIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Ik9mZmVyVG9wLWNvbCBPZmZlclRvcC1jb2wtLWxlZnQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJPZmZlclRvcC1wcmljZSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAzNTUgMDAwJm5ic3A74oKsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9wPgoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0iT2ZmZXJUb3AtaW5mbyI+SG9ub3JhaXJlcyBkJ2FnZW5jZSDDoCBsYSBjaGFyZ2UgZHUgdmVuZGV1cjwvcD4KCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9Ik9mZmVyVG9wLWxvYyIgZGF0YS1ndG0temlwY29kZT0iNzUwMDciPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3ZnIGNsYXNzPSJpY29uIiBzdHlsZT0id2lkdGg6MTZweDtoZWlnaHQ6MTZweCIgYXJpYS1oaWRkZW49InRydWUiPjx1c2UgeGxpbms6aHJlZj0iL2J1bmRsZXMvZm9uY2lhaW50ZXJuZXQvc3ZnL2ljb25zLnN2ZyNJY29uLS1wb2ludGVyMyI+PC91c2U+PC9zdmc+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDc1MDA3IFBhcmlzICg3NTAwNykKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3A+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Ik9mZmVyVG9wLWNvbCBPZmZlclRvcC1jb2wtLXJpZ2h0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJNaW5pRGF0YSBNaW5pRGF0YS0tZmxleCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Ik1pbmlEYXRhLXJvdyBNaW5pRGF0YS1yb3ctLWJnIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9Ik1pbmlEYXRhLWl0ZW0iPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAxOSBtPHN1cD4yPC9zdXA+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9Ik1pbmlEYXRhLWl0ZW0iPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAxIHBpw6hjZSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJPZmZlclNsaWRlciI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iT2ZmZXJTbGlkZXItbWFpbiIgaWQ9Ik9mZmVyU2xpZGVyTWFpbiI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx1bCBjbGFzcz0iT2ZmZXJTbGlkZXItbWFpbi1zbGlkZXMiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGkgY2xhc3M9Ik9mZmVyU2xpZGVyLW1haW4taXRlbSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgc3JjPSJodHRwOi8vcGhvdG9zLmZyLmZvbmNpYS5jb20vbWluaWNwLzY0MC80ODAvcGhvdG9zLzEzOTUvOTA3LzEzOTU5MDcvZ3JhbmQvMTM5NTkwN180MDk0MjE1MjJlNWUyZjZkMWE0ZjZhZjJjYmEzNTdjOTVlNjEwNGJlMDg4ODMuanBnP2RhdGVtYWo9MjAyMC0wMy0xMSAxMToxMzowNC40NTciIHdpZHRoPSI2MDAiIGhlaWdodD0iNDUwIiBhbHQ9IkFwcGFydGVtZW50IMOgIHZlbmRyZSwgUGFyaXMgKDc1MDA3KSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpIGNsYXNzPSJPZmZlclNsaWRlci1tYWluLWl0ZW0iPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW1nIHNyYz0iaHR0cDovL3Bob3Rvcy5mci5mb25jaWEuY29tL21pbmljcC82NDAvNDgwL3Bob3Rvcy8xMzk1LzkwNy8xMzk1OTA3L2dyYW5kLzEzOTU5MDdfZTE5NDBjYzkwMTBmNzhmNjc4MjUyZjE1OGI2MjM5YmY1ZTYxMDRiYjA3ZjkzLmpwZz9kYXRlbWFqPTIwMjAtMDMtMTEgMTE6MTM6MDQuNTE5IiB3aWR0aD0iNjAwIiBoZWlnaHQ9IjQ1MCIgYWx0PSJBcHBhcnRlbWVudCDDoCB2ZW5kcmUsIFBhcmlzICg3NTAwNykiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaSBjbGFzcz0iT2ZmZXJTbGlkZXItbWFpbi1pdGVtIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBzcmM9Imh0dHA6Ly9waG90b3MuZnIuZm9uY2lhLmNvbS9taW5pY3AvNjQwLzQ4MC9waG90b3MvMTM5NS85MDcvMTM5NTkwNy9ncmFuZC8xMzk1OTA3XzA0NzE0NGM5MjdiZjQ2ZGJjNWRjOGZjMmU3YzE2NmRhNWU2MTA0YmI1ZjE1Zi5qcGc/ZGF0ZW1haj0yMDIwLTAzLTExIDExOjEzOjA0LjU2NiIgd2lkdGg9IjYwMCIgaGVpZ2h0PSI0NTAiIGFsdD0iQXBwYXJ0ZW1lbnQgw6AgdmVuZHJlLCBQYXJpcyAoNzUwMDcpIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGkgY2xhc3M9Ik9mZmVyU2xpZGVyLW1haW4taXRlbSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgc3JjPSJodHRwOi8vcGhvdG9zLmZyLmZvbmNpYS5jb20vbWluaWNwLzY0MC80ODAvcGhvdG9zLzEzOTUvOTA3LzEzOTU5MDcvZ3JhbmQvMTM5NTkwN19hM2M1MWQ4MGVhZDExNTVhMDkwNGM2MjVjYzk4MGZhYjVlNjEwNGJkM2VmNjMuanBnP2RhdGVtYWo9MjAyMC0wMy0xMSAxMToxMzowNC41OTciIHdpZHRoPSI2MDAiIGhlaWdodD0iNDUwIiBhbHQ9IkFwcGFydGVtZW50IMOgIHZlbmRyZSwgUGFyaXMgKDc1MDA3KSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpIGNsYXNzPSJPZmZlclNsaWRlci1tYWluLWl0ZW0iPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW1nIHNyYz0iaHR0cDovL3Bob3Rvcy5mci5mb25jaWEuY29tL21pbmljcC82NDAvNDgwL3Bob3Rvcy8xMzk1LzkwNy8xMzk1OTA3L2dyYW5kLzEzOTU5MDdfODJkNTk0OTFkYmIxMDFjYjNkZmU1MzYyNzFhMTY5ZmY1ZTYxMDRiZDljMzI3LmpwZz9kYXRlbWFqPTIwMjAtMDMtMTEgMTE6MTM6MDQuOTU2IiB3aWR0aD0iNjAwIiBoZWlnaHQ9IjQ1MCIgYWx0PSJBcHBhcnRlbWVudCDDoCB2ZW5kcmUsIFBhcmlzICg3NTAwNykiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3VsPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0iT2ZmZXJTbGlkZXItbWFpbi1jb3VudCI+PC9wPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJPZmZlclNsaWRlci1jb250YWluZXIiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJPZmZlclNsaWRlci10aHVtYnMgT2ZmZXJTbGlkZXItdGh1bWJzLS1taW5pIiBpZD0iT2ZmZXJTbGlkZXJUaHVtYnMiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHVsIGNsYXNzPSJPZmZlclNsaWRlci10aHVtYnMtc2xpZGVzIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGkgY2xhc3M9Ik9mZmVyU2xpZGVyLXRodW1icy1pdGVtIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgc3JjPSJodHRwOi8vcGhvdG9zLmZyLmZvbmNpYS5jb20vbWluaWNwLzY0MC80ODAvcGhvdG9zLzEzOTUvOTA3LzEzOTU5MDcvZ3JhbmQvMTM5NTkwN180MDk0MjE1MjJlNWUyZjZkMWE0ZjZhZjJjYmEzNTdjOTVlNjEwNGJlMDg4ODMuanBnP2RhdGVtYWo9MjAyMC0wMy0xMSAxMToxMzowNC40NTciIHdpZHRoPSI2MDAiIGhlaWdodD0iNDUwIiBhbHQ9IkFwcGFydGVtZW50IMOgIHZlbmRyZSwgUGFyaXMgKDc1MDA3KSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpIGNsYXNzPSJPZmZlclNsaWRlci10aHVtYnMtaXRlbSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW1nIHNyYz0iaHR0cDovL3Bob3Rvcy5mci5mb25jaWEuY29tL21pbmljcC82NDAvNDgwL3Bob3Rvcy8xMzk1LzkwNy8xMzk1OTA3L2dyYW5kLzEzOTU5MDdfZTE5NDBjYzkwMTBmNzhmNjc4MjUyZjE1OGI2MjM5YmY1ZTYxMDRiYjA3ZjkzLmpwZz9kYXRlbWFqPTIwMjAtMDMtMTEgMTE6MTM6MDQuNTE5IiB3aWR0aD0iNjAwIiBoZWlnaHQ9IjQ1MCIgYWx0PSJBcHBhcnRlbWVudCDDoCB2ZW5kcmUsIFBhcmlzICg3NTAwNykiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaSBjbGFzcz0iT2ZmZXJTbGlkZXItdGh1bWJzLWl0ZW0iPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBzcmM9Imh0dHA6Ly9waG90b3MuZnIuZm9uY2lhLmNvbS9taW5pY3AvNjQwLzQ4MC9waG90b3MvMTM5NS85MDcvMTM5NTkwNy9ncmFuZC8xMzk1OTA3XzA0NzE0NGM5MjdiZjQ2ZGJjNWRjOGZjMmU3YzE2NmRhNWU2MTA0YmI1ZjE1Zi5qcGc/ZGF0ZW1haj0yMDIwLTAzLTExIDExOjEzOjA0LjU2NiIgd2lkdGg9IjYwMCIgaGVpZ2h0PSI0NTAiIGFsdD0iQXBwYXJ0ZW1lbnQgw6AgdmVuZHJlLCBQYXJpcyAoNzUwMDcpIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGkgY2xhc3M9Ik9mZmVyU2xpZGVyLXRodW1icy1pdGVtIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgc3JjPSJodHRwOi8vcGhvdG9zLmZyLmZvbmNpYS5jb20vbWluaWNwLzY0MC80ODAvcGhvdG9zLzEzOTUvOTA3LzEzOTU5MDcvZ3JhbmQvMTM5NTkwN19hM2M1MWQ4MGVhZDExNTVhMDkwNGM2MjVjYzk4MGZhYjVlNjEwNGJkM2VmNjMuanBnP2RhdGVtYWo9MjAyMC0wMy0xMSAxMToxMzowNC41OTciIHdpZHRoPSI2MDAiIGhlaWdodD0iNDUwIiBhbHQ9IkFwcGFydGVtZW50IMOgIHZlbmRyZSwgUGFyaXMgKDc1MDA3KSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpIGNsYXNzPSJPZmZlclNsaWRlci10aHVtYnMtaXRlbSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW1nIHNyYz0iaHR0cDovL3Bob3Rvcy5mci5mb25jaWEuY29tL21pbmljcC82NDAvNDgwL3Bob3Rvcy8xMzk1LzkwNy8xMzk1OTA3L2dyYW5kLzEzOTU5MDdfODJkNTk0OTFkYmIxMDFjYjNkZmU1MzYyNzFhMTY5ZmY1ZTYxMDRiZDljMzI3LmpwZz9kYXRlbWFqPTIwMjAtMDMtMTEgMTE6MTM6MDQuOTU2IiB3aWR0aD0iNjAwIiBoZWlnaHQ9IjQ1MCIgYWx0PSJBcHBhcnRlbWVudCDDoCB2ZW5kcmUsIFBhcmlzICg3NTAwNykiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3VsPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9Ik9mZmVyU2xpZGVyLWV4dHJhIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3A+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KCgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Ik9mZmVyRGV0YWlscyI+CgogICAgICAgICAgICAgICAgICAgICAgICA8c2VjdGlvbiBjbGFzcz0iT2ZmZXJEZXRhaWxzLXNlY3Rpb24iPgoKICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJPZmZlckRldGFpbHMtcmVmIj5Sw6lmLiAxMzk1OTA3PC9wPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGgyIGNsYXNzPSJPZmZlckRldGFpbHMtdGl0bGUiPkRlc2NyaXB0aW9uIGTDqXRhaWxsw6llPC9oMj4KCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJPZmZlckRldGFpbHMtY29udGVudCI+CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwPlBBUklTIFZJSSAtIFRPVVIgTUFVQk9VUkcgLSBTVFVESU8uClJ1ZSBBbcOpbGllLCBwcm9jaGUgRWNvbGUgTWlsaXRhaXJlLiBBdSBwcmVtaWVyIMOpdGFnZSBhdmVjIGFzY2Vuc2V1ciwgc3R1ZGlvIGVuIHRyw6hzIGJvbiDDqXRhdCBkZSAxOSBtwrIsIGF2ZWMgYmVsbGUgcGnDqGNlIGRlIHZpZSwgY3Vpc2luZSBhbcOpcmljYWluZSwgc2FsbGUgZCdlYXUgYXZlYyBXQy4gSW5mb3JtYXRpb25zIGV0L291IHZpc2l0ZXMgYXUgMDYuNDcuOTIuMDguNjAgb3UgZmFiaWVuLnZhbmRlY2FuQGZvbmNpYS5mcjwvcD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJPZmZlckRldGFpbHMtY29sdW1uaXplIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgZGF0YS13aWRnZXQ9IlRvZ2dsZUJsb2NrTW9iaWxlIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aDMgY2xhc3M9Ik9mZmVyRGV0YWlscy10aXRsZS0tMiIgZGF0YS13aWRnZXQ9IlRvZ2dsZUJsb2NrTW9iaWxlLXRyaWdnZXIiIGRhdGEtYmVoYXQ9ImNhcmFjdER1QmllbiI+Q2FyYWN0w6lyaXN0aXF1ZXMgZHUgYmllbjwvaDM+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBkYXRhLXdpZGdldD0iVG9nZ2xlQmxvY2tNb2JpbGUtY29udGVudCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dWwgY2xhc3M9Ikxpc3QgTGlzdC0tZGF0YSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpPjxzcGFuIGNsYXNzPSJMaXN0LWRhdGEiPk5vbWJyZSBkZSBwacOoY2VzPC9zcGFuPiA8c3Ryb25nIGNsYXNzPSJMaXN0LXZhbHVlIj4xPC9zdHJvbmc+PC9saT48bGk+PHNwYW4gY2xhc3M9Ikxpc3QtZGF0YSI+Q29uc3RydWN0aW9uPC9zcGFuPiA8c3Ryb25nIGNsYXNzPSJMaXN0LXZhbHVlIj4xOTcwPC9zdHJvbmc+PC9saT48bGk+PHNwYW4gY2xhc3M9Ikxpc3QtZGF0YSI+w4l0YWdlPC9zcGFuPiA8c3Ryb25nIGNsYXNzPSJMaXN0LXZhbHVlIj4xPC9zdHJvbmc+PC9saT48bGk+PHNwYW4gY2xhc3M9Ikxpc3QtZGF0YSI+Tm9tYnJlIGQnw6l0YWdlczwvc3Bhbj4gPHN0cm9uZyBjbGFzcz0iTGlzdC12YWx1ZSI+Nzwvc3Ryb25nPjwvbGk+PGxpPjxzcGFuIGNsYXNzPSJMaXN0LWRhdGEiPlR5cGUgZGUgY3Vpc2luZTwvc3Bhbj4gPHN0cm9uZyBjbGFzcz0iTGlzdC12YWx1ZSI+Q29pbiBjdWlzaW5lPC9zdHJvbmc+PC9saT48bGk+PHNwYW4gY2xhc3M9Ikxpc3QtZGF0YSI+w4l0YXQgY3Vpc2luZTwvc3Bhbj4gPHN0cm9uZyBjbGFzcz0iTGlzdC12YWx1ZSI+QW3DqW5hZ8OpZSBldCDDqXF1aXDDqWU8L3N0cm9uZz48L2xpPjxsaT48c3BhbiBjbGFzcz0iTGlzdC1kYXRhIj5Nb2RlIGNoYXVmZmFnZTwvc3Bhbj4gPHN0cm9uZyBjbGFzcz0iTGlzdC12YWx1ZSI+Q29sbGVjdGlmPC9zdHJvbmc+PC9saT48bGk+PHNwYW4gY2xhc3M9Ikxpc3QtZGF0YSI+TmF0dXJlIGNoYXVmZmFnZTwvc3Bhbj4gPHN0cm9uZyBjbGFzcz0iTGlzdC12YWx1ZSI+VXJiYWluPC9zdHJvbmc+PC9saT48bGk+PHNwYW4gY2xhc3M9J0xpc3QtZGF0YSc+TmIuIFNhbGxlcyBkJ2VhdTwvc3Bhbj4gPHN0cm9uZyBjbGFzcz0nTGlzdC12YWx1ZSc+MTwvc3Ryb25nPjwvbGk+PGxpPjxzcGFuIGNsYXNzPSJMaXN0LWRhdGEiPk5iLiBXQzwvc3Bhbj4gPHN0cm9uZyBjbGFzcz0iTGlzdC12YWx1ZSI+MTwvc3Ryb25nPjwvbGk+PGxpPjxzcGFuIGNsYXNzPSJMaXN0LWRhdGEiPkNhdMOpZ29yaWU8L3NwYW4+IDxzdHJvbmcgY2xhc3M9Ikxpc3QtdmFsdWUiPlLDqWNlbnQ8L3N0cm9uZz48L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC91bD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGRhdGEtd2lkZ2V0PSJUb2dnbGVCbG9ja01vYmlsZSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxoMyBjbGFzcz0iT2ZmZXJEZXRhaWxzLXRpdGxlLS0yIiBkYXRhLXdpZGdldD0iVG9nZ2xlQmxvY2tNb2JpbGUtdHJpZ2dlciI+SW5mb3JtYXRpb24gY29wcm9wcmnDqXTDqTwvaDM+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgZGF0YS13aWRnZXQ9IlRvZ2dsZUJsb2NrTW9iaWxlLWNvbnRlbnQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dWwgY2xhc3M9Ikxpc3QgTGlzdC0tZGF0YSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaT48c3BhbiBjbGFzcz0iTGlzdC1kYXRhIj5Ob21icmUgZGUgbG90czwvc3Bhbj4gPHN0cm9uZyBjbGFzcz0iTGlzdC12YWx1ZSI+Njg8L3N0cm9uZz48L2xpPjxsaT48c3BhbiBjbGFzcz0iTGlzdC1kYXRhIj5DaGFyZ2VzIGFubnVlbGxlczwvc3Bhbj4gPHN0cm9uZyBjbGFzcz0iTGlzdC12YWx1ZSI+MTIwMCDigqw8L3N0cm9uZz48L2xpPjxsaT48c3BhbiBjbGFzcz0iTGlzdC1kYXRhIj5Db3Byb3ByaWV0w6kgZW4gZGlmZmljdWx0w6k8L3NwYW4+IDxzdHJvbmcgY2xhc3M9Ikxpc3QtdmFsdWUiPm5vbjwvc3Ryb25nPjwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC91bD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBkYXRhLXdpZGdldD0iVG9nZ2xlQmxvY2tNb2JpbGUiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxoMyBjbGFzcz0iT2ZmZXJEZXRhaWxzLXRpdGxlLS0yIiBkYXRhLXdpZGdldD0iVG9nZ2xlQmxvY2tNb2JpbGUtdHJpZ2dlciIgZGF0YS1iZWhhdD0ic3VyZmFjZUJpZW4iPlN1cmZhY2VzPC9oMz4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGRhdGEtd2lkZ2V0PSJUb2dnbGVCbG9ja01vYmlsZS1jb250ZW50Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHVsIGNsYXNzPSJMaXN0IExpc3QtLWRhdGEiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpPjxzcGFuIGNsYXNzPSJMaXN0LWRhdGEiPlN1cmZhY2UgaGFiaXRhYmxlPC9zcGFuPiA8c3Ryb25nIGNsYXNzPSJMaXN0LXZhbHVlIj4xOSBtwrI8L3N0cm9uZz48L2xpPjxsaT48c3BhbiBjbGFzcz0iTGlzdC1kYXRhIj5TdXJmYWNlIENhcnJlejwvc3Bhbj4gPHN0cm9uZyBjbGFzcz0iTGlzdC12YWx1ZSI+MTkgbcKyPC9zdHJvbmc+PC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC91bD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKCgoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBkYXRhLXdpZGdldD0iVG9nZ2xlQmxvY2tNb2JpbGUiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxoMyBjbGFzcz0iT2ZmZXJEZXRhaWxzLXRpdGxlLS0yIiBkYXRhLXdpZGdldD0iVG9nZ2xlQmxvY2tNb2JpbGUtdHJpZ2dlciIgZGF0YS1iZWhhdD0iY29tbW9kaXRlc0JpZW4iPkNvbW1vZGl0w6lzPC9oMz4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGRhdGEtd2lkZ2V0PSJUb2dnbGVCbG9ja01vYmlsZS1jb250ZW50Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHVsIGNsYXNzPSJMaXN0IExpc3QtLWJ1bGxldCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGk+QXNjZW5zZXVyPC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC91bD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKCgoKCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBkYXRhLXdpZGdldD0iVG9nZ2xlQmxvY2tNb2JpbGUiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxoMyBjbGFzcz0iT2ZmZXJEZXRhaWxzLXRpdGxlLS0yIiBkYXRhLXdpZGdldD0iVG9nZ2xlQmxvY2tNb2JpbGUtdHJpZ2dlciIgZGF0YS1iZWhhdD0iZGl2ZXJzQmllbiI+RGl2ZXJzPC9oMz4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGRhdGEtd2lkZ2V0PSJUb2dnbGVCbG9ja01vYmlsZS1jb250ZW50Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx1bCBjbGFzcz0iTGlzdCBMaXN0LS1idWxsZXQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaT5JbnRlcnBob25lPC9saT48bGk+RGlnaWNvZGU8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC91bD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9Ik9mZmVyRGV0YWlscy1iYXJlbWUiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwOi8vYWdlbmNlLmZvbmNpYS5jb20vcGFyaXMtNzUwMDYvYWdlbmNlLWltbW9iaWxpZXJlL2ZvbmNpYS10cmFuc2FjdGlvbi1wYXJpcy1tb250cGFybmFzc2UtMTEyOCIgcmVsPSJub2ZvbGxvdyIgdGFyZ2V0PSJfYmxhbmsiPlZvaXIgbGUgYmFyw6htZSBkZSBsJ2FnZW5jZTwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3A+CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9IkxlZ2FsTWVudGlvbnMgTGVnYWxNZW50aW9ucy0tc21hbGwiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICAgICAgICAgICAgICA8L3NlY3Rpb24+CgogICAgICAgICAgICAgICAgICAgICAgICAKCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgICAgICAgICAKPHAgY2xhc3M9IlNoYXJlIj4KICAgIDxhIGlkPSJGYWNlYm9vayIgaHJlZj0iaHR0cHM6Ly93d3cuZmFjZWJvb2suY29tL3NoYXJlci9zaGFyZXIucGhwP3U9aHR0cHM6Ly9mci5mb25jaWEuY29tL2FjaGF0L3BhcmlzLTc1MDA3L2FwcGFydGVtZW50LzEzOTU5MDcuaHRtIiB0YXJnZXQ9Il9ibGFuayIgY2xhc3M9IlNoYXJlLWl0ZW0gU2hhcmUtRmFjZWJvb2siPgogICAgICAgIDxzdmcgY2xhc3M9Imljb24iIHN0eWxlPSJ3aWR0aDoyNHB4O2hlaWdodDoyNHB4IiBhcmlhLWhpZGRlbj0idHJ1ZSI+PHVzZSB4bGluazpocmVmPSIvYnVuZGxlcy9mb25jaWFpbnRlcm5ldC9zdmcvaWNvbnMuc3ZnI0ljb24tLWZhY2Vib29rIj48L3VzZT48L3N2Zz4KICAgICAgICA8c3BhbiBjbGFzcz0iU2hhcmUtbGFiZWwiPlBhcnRhZ2VyIGNlIGNvbnRlbnUgc3VyIEZhY2Vib29rPC9zcGFuPgogICAgPC9hPgoKICAgIDxhIGlkPSJUd2l0dGVyIiBjbGFzcz0iU2hhcmUtaXRlbSIKICAgICAgIGhyZWY9Imh0dHBzOi8vdHdpdHRlci5jb20vaW50ZW50L3R3ZWV0P3RleHQ9QXBwYXJ0ZW1lbnQgMSBwacOoY2Ugw6AgdmVuZHJlJnVybD1odHRwcyUzQSUyRiUyRmZyLmZvbmNpYS5jb20lMkZhY2hhdCUyRnBhcmlzLTc1MDA3JTJGYXBwYXJ0ZW1lbnQlMkYxMzk1OTA3Lmh0bSZ2aWE9Zm9uY2lhIgogICAgICAgICAgICAgIGRhdGEtc2l6ZT0ibGFyZ2UiCiAgICAgICB0YXJnZXQ9Il9ibGFuayIgPgogICAgICAgIDxzdmcgY2xhc3M9Imljb24iIHN0eWxlPSJ3aWR0aDoyNHB4O2hlaWdodDoyNHB4IiBhcmlhLWhpZGRlbj0idHJ1ZSI+PHVzZSB4bGluazpocmVmPSIvYnVuZGxlcy9mb25jaWFpbnRlcm5ldC9zdmcvaWNvbnMuc3ZnI0ljb24tLXR3aXR0ZXIiPjwvdXNlPjwvc3ZnPgogICAgICAgIDxzcGFuIGNsYXNzPSJTaGFyZS1sYWJlbCI+UGFydGFnZXIgY2UgY29udGVudSBzdXIgVHdpdHRlcjwvc3Bhbj4KICAgIDwvYT4KCiAgICA8YSBpZD0iR29vZ2xlKyIgY2xhc3M9IlNoYXJlLWl0ZW0iIGhyZWY9Imh0dHBzOi8vcGx1cy5nb29nbGUuY29tL3NoYXJlP3VybD1odHRwcyUzQSUyRiUyRmZyLmZvbmNpYS5jb20lMkZhY2hhdCUyRnBhcmlzLTc1MDA3JTJGYXBwYXJ0ZW1lbnQlMkYxMzk1OTA3Lmh0bSIgb25jbGljaz0iamF2YXNjcmlwdDp3aW5kb3cub3Blbih0aGlzLmhyZWYsJycsICdtZW51YmFyPW5vLHRvb2xiYXI9bm8scmVzaXphYmxlPXllcyxzY3JvbGxiYXJzPXllcyxoZWlnaHQ9NjAwLHdpZHRoPTYwMCcpO3JldHVybiBmYWxzZTsiPgogICAgICAgIDxzdmcgY2xhc3M9Imljb24iIHN0eWxlPSJ3aWR0aDoyNHB4O2hlaWdodDoyNHB4IiBhcmlhLWhpZGRlbj0idHJ1ZSI+PHVzZSB4bGluazpocmVmPSIvYnVuZGxlcy9mb25jaWFpbnRlcm5ldC9zdmcvaWNvbnMuc3ZnI0ljb24tLWdvb2dsZSI+PC91c2U+PC9zdmc+CiAgICAgICAgPHNwYW4gY2xhc3M9IlNoYXJlLWxhYmVsIj5QYXJ0YWdlciBjZSBjb250ZW51IHN1ciBHb29nbGUgKzwvc3Bhbj4KICAgIDwvYT4KCiAgICA8YSBjbGFzcz0iU2hhcmUtaXRlbSBNb2RhbC1saW5rLS1hamF4IiBocmVmPSIvc2hhcmUtY29udGVudC1wb3Bpbi9odHRwcyUyNTNBJTI1MkYlMjUyRmZyLmZvbmNpYS5jb20lMjUyRmFjaGF0JTI1MkZwYXJpcy03NTAwNyUyNTJGYXBwYXJ0ZW1lbnQlMjUyRjEzOTU5MDcuaHRtIj4KICAgICAgICA8c3ZnIGNsYXNzPSJpY29uIiBzdHlsZT0id2lkdGg6MjRweDtoZWlnaHQ6MjRweCIgYXJpYS1oaWRkZW49InRydWUiPjx1c2UgeGxpbms6aHJlZj0iL2J1bmRsZXMvZm9uY2lhaW50ZXJuZXQvc3ZnL2ljb25zLnN2ZyNJY29uLS1lbnZlbG9wZSI+PC91c2U+PC9zdmc+CiAgICAgICAgPHNwYW4gY2xhc3M9IlNoYXJlLWxhYmVsIj5FbnZveWVyIGNlIGNvbnRlbnUgw6AgdW4gYW1pPC9zcGFuPgogICAgPC9hPgoKICAgIDxidXR0b24gb25jbGljaz0iamF2YXNjcmlwdDp3aW5kb3cucHJpbnQoKSIgY2xhc3M9IlNoYXJlLWl0ZW0iPgogICAgICAgIDxzdmcgY2xhc3M9Imljb24iIHN0eWxlPSJ3aWR0aDoyNHB4O2hlaWdodDoyNHB4IiBhcmlhLWhpZGRlbj0idHJ1ZSI+PHVzZSB4bGluazpocmVmPSIvYnVuZGxlcy9mb25jaWFpbnRlcm5ldC9zdmcvaWNvbnMuc3ZnI0ljb24tLXByaW50ZXIiPjwvdXNlPjwvc3ZnPgogICAgICAgIDxzcGFuIGNsYXNzPSJTaGFyZS1sYWJlbCI+SW1wcmltZXIgY2UgY29udGVudTwvc3Bhbj4KICAgIDwvYnV0dG9uPgo8L3A+CgoKICAgICAgICAgICAgICAgIDwvbWFpbj4KCgoKICAgICAgICAgICAgICAgIDxhc2lkZSBjbGFzcz0iQ29udGVudC1zaWRlYmFyIFNpZGViYXIiPgogICAgICAgICAgICAgICAgICAgIAogICAgCgoKPHNlY3Rpb24gY2xhc3M9Ik9mZmVyQ29udGFjdCI+CiAgICA8aDIgY2xhc3M9Ik9mZmVyQ29udGFjdC10aXRsZSI+Q29udGFjdGVyIGwnYWdlbmNlPC9oMj4KICAgIDxzcGFuIGNsYXNzPSJoaWRkZW4iIGRhdGEtaW5mbz0iaWQtYWdlbmNlIj4xMTI4PC9zcGFuPgoKICAgIDxkaXYgY2xhc3M9Ik9mZmVyQ29udGFjdC1jb250ZW50Ij4KICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0iT2ZmZXJDb250YWN0LXJlZmVyZW50Ij5Wb3RyZSBjb25zZWlsbGVyIDogPHN0cm9uZz5GYWJpZW4mbmJzcDtWQU5ERUNBTkRFTEFFUkU8L3N0cm9uZz48L3A+CiAgICAgICAgICAgICAgICA8cCBjbGFzcz0iT2ZmZXJDb250YWN0LWFkZHJlc3MgT2ZmZXJDb250YWN0LWFkZHJlc3MtLWNlbnRlciByd2QtLW5vTW9iaWxlIHJ3ZC0tbm9UYWJsZXQiPgogICAgICAgICAgICA8YSBocmVmPSJodHRwOi8vYWdlbmNlLmZvbmNpYS5jb20vcGFyaXMtNzUwMDYvYWdlbmNlLWltbW9iaWxpZXJlL2ZvbmNpYS10cmFuc2FjdGlvbi1wYXJpcy1tb250cGFybmFzc2UtMTEyOCIgdGFyZ2V0PSJfYmxhbmsiIGNsYXNzPSJPZmZlckNvbnRhY3QtYWRkcmVzcy0tbGFyZ2UiPgogICAgICAgICAgICAgICAgPHN0cm9uZz5Gb25jaWEgVHJhbnNhY3Rpb24gUGFyaXMgTW9udHBhcm5hc3NlICA8L3N0cm9uZz4KICAgICAgICAgICAgICAgIDI3IGJvdWxldmFyZCBkdSBNb250cGFybmFzc2U8YnIvPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDc1MDA2IC0gUGFyaXMKICAgICAgICAgICAgPC9hPgogICAgICAgIDwvcD4KCiAgICAgICAgPHAgY2xhc3M9Ik9mZmVyQ29udGFjdC1jYWxsMmFjdGlvbiI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBjbGFzcz0iT2ZmZXJDb250YWN0LWJ0biBPZmZlckNvbnRhY3QtYnRuLS10ZWwgaWNvbi1DYWxsb3V0IiBkYXRhLXdpZGdldD0iU2hvd1RlbCIgZGF0YS1hbmFseXRpY3M9IjExMjggLSBGT05DSUEgdHJhbnNhY3Rpb24tcGFyaXMtbW9udHBhcm5hc3NlIiBocmVmPSJ0ZWw6MDE0OTU0Nzc4OCI+PHNwYW4gY2xhc3M9Ik9mZmVyQ29udGFjdC10ZWxMYWJlbCI+QXBwZWxlciBsJ2FnZW5jZTwvc3Bhbj4gPHNwYW4gY2xhc3M9Ik9mZmVyQ29udGFjdC10ZWxOdW0iIGRhdGEtYmVoYXQ9InRlbEFnZW5jZSI+MDEuNDkuNTQuNzcuODg8L3NwYW4+PC9hPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgY2xhc3M9Ik9mZmVyQ29udGFjdC1idG4gT2ZmZXJDb250YWN0LWJ0bi0tbWFpbCBpY29uLU9wZW5lbnZlbG9wZSBNb2RhbC1saW5rIiBocmVmPSIjUG9wdXBDb250YWN0IiBkYXRhLWFuYWx5dGljcz0ibWFpbHRvYWdlbmN5LWJ0biI+w4ljcmlyZSDDoCBsJ2FnZW5jZTwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgPGEgY2xhc3M9Ik9mZmVyQ29udGFjdC1idG4gT2ZmZXJDb250YWN0LWJ0bi0tcGxhbiBpY29uLVBvaW50ZXIiIGhyZWY9Imh0dHA6Ly9hZ2VuY2UuZm9uY2lhLmNvbS9wYXJpcy03NTAwNi9hZ2VuY2UtaW1tb2JpbGllcmUvZm9uY2lhLXRyYW5zYWN0aW9uLXBhcmlzLW1vbnRwYXJuYXNzZS0xMTI4IiB0YXJnZXQ9Il9ibGFuayI+CiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJPZmZlckNvbnRhY3QtYnRuLWxhYmVsLS1tb2JpbGUiPlRyb3V2ZXIgbCdhZ2VuY2U8L3NwYW4+CiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJPZmZlckNvbnRhY3QtYnRuLWxhYmVsLS1kZXNrdG9wIiBkYXRhLWJlaGF0PSJwbGFuQWdlbmNlIj5QbGFuIGQnYWNjw6hzIGRlIGwnYWdlbmNlPC9zcGFuPgogICAgICAgICAgICA8L2E+CiAgICAgICAgPC9wPgoKICAgIDwvZGl2PgoKPC9zZWN0aW9uPgoKICAgIAoKCgoKPHNlY3Rpb24gaWQ9IlBvcHVwQ29udGFjdCIgY2xhc3M9Ik1vZGFsIG1mcC1oaWRlIj4KCiAgICA8aDMgY2xhc3M9Ik1vZGFsLXRpdGxlIj7DiWNyaXJlIMOgIGwnYWdlbmNlPC9oMz4KCiAgICA8ZGl2IGNsYXNzPSJmb3JtX2NvbnRlbnRfbW9kYWwiPgogICAgICAgIDxwIGNsYXNzPSJPZmZlckNvbnRhY3QtYWRkcmVzcyBPZmZlckNvbnRhY3QtYWRkcmVzcy0tbGVmdCI+CiAgICAgICAgICAgIDxzdHJvbmcgaWQ9Im5vbUFnZW5jZUNvbnRhY3QiPkZvbmNpYSBUcmFuc2FjdGlvbiBQYXJpcyBNb250cGFybmFzc2UgIDwvc3Ryb25nPgogICAgICAgICAgICA8c3BhbiBpZD0iYWRkckFnZW5jZUNvbnRhY3QiPjI3IGJvdWxldmFyZCBkdSBNb250cGFybmFzc2U8L3NwYW4+PGJyLz4KICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gaWQ9InZpbGxlQ1BBZ2VuY2VDb250YWN0Ij43NTAwNiAtIFBhcmlzPC9zcGFuPjxici8+CgogICAgICAgICAgICBUw6lsLiAwMS40OS41NC43Ny44OCAmbmJzcDsmbmJzcDsmbmJzcDsgRmF4LiAwMS40NS40NC44My42OSAgICAgICAgPC9wPgoKICAgICAgICA8Zm9ybSBuYW1lPSJmb25jaWFfYWdlbmN5X2NvbnRhY3QiIG1ldGhvZD0icG9zdCIgYWN0aW9uPSJmb25jaWFfaW50ZXJuZXRfYWdlbmN5X2NvbnRhY3QiIGlkPSJmb25jaWFfYWdlbmN5X2NvbnRhY3QiIGNsYXNzPSJGb3JtIiBkYXRhLWZvcm09ImFqYXhfZm9ybSI+CgogICAgICAgIDxoNCBjbGFzcz0iRm9ybS1zdWJ0aXRsZSI+Vm91cyDDqnRlcyBpbnTDqXJlc3PDqShlKSBwYXIgY2UgYmllbiDDoCB2ZW5kcmU8L2g0PgoKICAgICAgICA8cCBkYXRhLWJlaGF0PSJjYXJhY3RlcmlzdGlxdWVCaWVuQ29udGFjdEFnZW5jZSI+CiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJUYWciPkFwcGFydGVtZW50PC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9IlRhZyI+MSBwacOoY2U8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJUYWciPlLDqWYuIDEzOTU5MDc8L3NwYW4+CiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJUYWciPlBhcmlzPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9IlRhZyI+MTltwrI8L3NwYW4+CiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iVGFnIj4zNTUwMDAgJmV1cm87PC9zcGFuPgogICAgICAgICAgICAgICAgICAgIDwvcD4KCiAgICAgICAgPGRpdiBjbGFzcz0iZXJyb3JzX2NvbnRhaW5lciI+PC9kaXY+CiAgICAgICAgCiAgICAgICAgPGg0IGNsYXNzPSJGb3JtLXN1YnRpdGxlIj5Wb3MgaW5mb3JtYXRpb25zPC9oND4KCiAgICAgICAgPGZpZWxkc2V0IGNsYXNzPSJGb3JtLWZpZWxkc2V0IEZvcm0tZmllbGRzZXQtLWlubGluZSI+CiAgICAgICAgICAgIDxsZWdlbmQgY2xhc3M9IkZvcm0tbGFiZWwgRm9ybS1sYWJlbC0taGlkZGVuIj5DaXZpbGl0w6k8L2xlZ2VuZD4KICAgICAgICAgICAgICAgIDx1bD48bGkgY2xhc3M9IkZvcm0tZmllbGQgRm9ybS1maWVsZC0tcmFkaW8iPjxpbnB1dCB0eXBlPSJyYWRpbyIgaWQ9ImZvbmNpYV9hZ2VuY3lfY29udGFjdF9jaXZpbGl0ZV8wIiBuYW1lPSJmb25jaWFfYWdlbmN5X2NvbnRhY3RbY2l2aWxpdGVdIiB2YWx1ZT0iTSIgLz48bGFiZWwgZm9yPSJmb25jaWFfYWdlbmN5X2NvbnRhY3RfY2l2aWxpdGVfMCI+TTwvbGFiZWw+PC9saT48bGkgY2xhc3M9IkZvcm0tZmllbGQgRm9ybS1maWVsZC0tcmFkaW8iPjxpbnB1dCB0eXBlPSJyYWRpbyIgaWQ9ImZvbmNpYV9hZ2VuY3lfY29udGFjdF9jaXZpbGl0ZV8xIiBuYW1lPSJmb25jaWFfYWdlbmN5X2NvbnRhY3RbY2l2aWxpdGVdIiB2YWx1ZT0iTW1lIiAvPjxsYWJlbCBmb3I9ImZvbmNpYV9hZ2VuY3lfY29udGFjdF9jaXZpbGl0ZV8xIj5NbWU8L2xhYmVsPjwvbGk+PGxpIGNsYXNzPSJGb3JtLWZpZWxkIEZvcm0tZmllbGQtLXJhZGlvIj48aW5wdXQgdHlwZT0icmFkaW8iIGlkPSJmb25jaWFfYWdlbmN5X2NvbnRhY3RfY2l2aWxpdGVfMiIgbmFtZT0iZm9uY2lhX2FnZW5jeV9jb250YWN0W2NpdmlsaXRlXSIgdmFsdWU9Ik1sbGUiIC8+PGxhYmVsIGZvcj0iZm9uY2lhX2FnZW5jeV9jb250YWN0X2NpdmlsaXRlXzIiPk1sbGU8L2xhYmVsPjwvbGk+PC91bD4KICAgICAgICA8L2ZpZWxkc2V0PgoKICAgICAgICA8cCBjbGFzcz0iRm9ybS1maWVsZCBGb3JtLWZpZWxkLS10ZXh0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBjbGFzcz0iRm9ybS1sYWJlbCBGb3JtLWxhYmVsLS1oaWRkZW4gcmVxdWlyZWQiIGZvcj0iZm9uY2lhX2FnZW5jeV9jb250YWN0X2xhc3RfbmFtZSI+Tm9tPC9sYWJlbD4KICAgICAgICAgICAgPGlucHV0IHR5cGU9InRleHQiIGlkPSJmb25jaWFfYWdlbmN5X2NvbnRhY3RfbGFzdF9uYW1lIiBuYW1lPSJmb25jaWFfYWdlbmN5X2NvbnRhY3RbbGFzdF9uYW1lXSIgcmVxdWlyZWQ9InJlcXVpcmVkIiBwbGFjZWhvbGRlcj0iTm9tICoiIC8+CiAgICAgICAgPC9wPgoKICAgICAgICA8cCBjbGFzcz0iRm9ybS1maWVsZCBGb3JtLWZpZWxkLS10ZXh0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBjbGFzcz0iRm9ybS1sYWJlbCBGb3JtLWxhYmVsLS1oaWRkZW4gcmVxdWlyZWQiIGZvcj0iZm9uY2lhX2FnZW5jeV9jb250YWN0X2ZpcnN0X25hbWUiPlByw6lub208L2xhYmVsPgogICAgICAgICAgICA8aW5wdXQgdHlwZT0idGV4dCIgaWQ9ImZvbmNpYV9hZ2VuY3lfY29udGFjdF9maXJzdF9uYW1lIiBuYW1lPSJmb25jaWFfYWdlbmN5X2NvbnRhY3RbZmlyc3RfbmFtZV0iIHJlcXVpcmVkPSJyZXF1aXJlZCIgcGxhY2Vob2xkZXI9IlByw6lub20gKiIgLz4KICAgICAgICA8L3A+CgogICAgICAgIDxwIGNsYXNzPSJGb3JtLWZpZWxkIEZvcm0tZmllbGQtLXRleHQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGNsYXNzPSJGb3JtLWxhYmVsIEZvcm0tbGFiZWwtLWhpZGRlbiByZXF1aXJlZCIgZm9yPSJmb25jaWFfYWdlbmN5X2NvbnRhY3RfZW1haWwiPkVtYWlsPC9sYWJlbD4KICAgICAgICAgICAgPGlucHV0IHR5cGU9ImVtYWlsIiBpZD0iZm9uY2lhX2FnZW5jeV9jb250YWN0X2VtYWlsIiBuYW1lPSJmb25jaWFfYWdlbmN5X2NvbnRhY3RbZW1haWxdIiByZXF1aXJlZD0icmVxdWlyZWQiIHBsYWNlaG9sZGVyPSJFbWFpbCAqIiAvPgogICAgICAgIDwvcD4KCiAgICAgICAgPHAgY2xhc3M9IkZvcm0tZmllbGQgRm9ybS1maWVsZC0tdGV4dCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgY2xhc3M9IkZvcm0tbGFiZWwgRm9ybS1sYWJlbC0taGlkZGVuIHJlcXVpcmVkIiBmb3I9ImZvbmNpYV9hZ2VuY3lfY29udGFjdF9waG9uZSI+VMOpbMOpcGhvbmU8L2xhYmVsPgogICAgICAgICAgICA8aW5wdXQgdHlwZT0idGV4dCIgaWQ9ImZvbmNpYV9hZ2VuY3lfY29udGFjdF9waG9uZSIgbmFtZT0iZm9uY2lhX2FnZW5jeV9jb250YWN0W3Bob25lXSIgcmVxdWlyZWQ9InJlcXVpcmVkIiBwbGFjZWhvbGRlcj0iVMOpbMOpcGhvbmUgKiIgLz4KICAgICAgICA8L3A+CgogICAgICAgIDxwIGNsYXNzPSJGb3JtLWZpZWxkIEZvcm0tZmllbGQtLWNoZWNrYm94Ij4KICAgICAgICAgICAgPGlucHV0IHR5cGU9ImNoZWNrYm94IiBpZD0iZm9uY2lhX2FnZW5jeV9jb250YWN0X2ZvbmNpYV9jdXN0b21lciIgbmFtZT0iZm9uY2lhX2FnZW5jeV9jb250YWN0W2ZvbmNpYV9jdXN0b21lcl0iIHZhbHVlPSIxIiAvPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGNsYXNzPSJGb3JtLWxhYmVsIiBmb3I9ImZvbmNpYV9hZ2VuY3lfY29udGFjdF9mb25jaWFfY3VzdG9tZXIiPkplIHN1aXMgZMOpasOgIGNsaWVudCBGT05DSUE8L2xhYmVsPgogICAgICAgIDwvcD4KCiAgICAgICAgPGZpZWxkc2V0IGNsYXNzPSJGb3JtLWZpZWxkc2V0Ij4KICAgICAgICAgICAgPGxlZ2VuZCBjbGFzcz0iRm9ybS1sZWdlbmQiPsOJY2jDqWFuY2UgZGUgdm90cmUgcHJvamV0PC9sZWdlbmQ+CiAgICAgICAgICAgICAgICA8dWw+PGxpIGNsYXNzPSJGb3JtLWZpZWxkIEZvcm0tZmllbGQtLXJhZGlvIj48aW5wdXQgdHlwZT0icmFkaW8iIGlkPSJmb25jaWFfYWdlbmN5X2NvbnRhY3RfZWNoZWFuY2VfMCIgbmFtZT0iZm9uY2lhX2FnZW5jeV9jb250YWN0W2VjaGVhbmNlXSIgdmFsdWU9IkltbcOpZGlhdGUiIC8+PGxhYmVsIGZvcj0iZm9uY2lhX2FnZW5jeV9jb250YWN0X2VjaGVhbmNlXzAiPkltbcOpZGlhdGU8L2xhYmVsPjwvbGk+PGxpIGNsYXNzPSJGb3JtLWZpZWxkIEZvcm0tZmllbGQtLXJhZGlvIj48aW5wdXQgdHlwZT0icmFkaW8iIGlkPSJmb25jaWFfYWdlbmN5X2NvbnRhY3RfZWNoZWFuY2VfMSIgbmFtZT0iZm9uY2lhX2FnZW5jeV9jb250YWN0W2VjaGVhbmNlXSIgdmFsdWU9IjEgbW9pcyIgLz48bGFiZWwgZm9yPSJmb25jaWFfYWdlbmN5X2NvbnRhY3RfZWNoZWFuY2VfMSI+MSBtb2lzPC9sYWJlbD48L2xpPjxsaSBjbGFzcz0iRm9ybS1maWVsZCBGb3JtLWZpZWxkLS1yYWRpbyI+PGlucHV0IHR5cGU9InJhZGlvIiBpZD0iZm9uY2lhX2FnZW5jeV9jb250YWN0X2VjaGVhbmNlXzIiIG5hbWU9ImZvbmNpYV9hZ2VuY3lfY29udGFjdFtlY2hlYW5jZV0iIHZhbHVlPSIzIG1vaXMgZXQgcGx1cyIgLz48bGFiZWwgZm9yPSJmb25jaWFfYWdlbmN5X2NvbnRhY3RfZWNoZWFuY2VfMiI+MyBtb2lzIGV0IHBsdXM8L2xhYmVsPjwvbGk+PC91bD4KICAgICAgICA8L2ZpZWxkc2V0PgoKICAgICAgICA8ZmllbGRzZXQgY2xhc3M9IkZvcm0tZmllbGRzZXQiPgogICAgICAgICAgICA8bGVnZW5kIGNsYXNzPSJGb3JtLWxlZ2VuZCI+Vm91cyBzb3VoYWl0ZXogw6p0cmUgY29udGFjdMOpKGUpIDo8L2xlZ2VuZD4KICAgICAgICAgICAgICAgIDx1bD48bGkgY2xhc3M9IkZvcm0tZmllbGQgRm9ybS1maWVsZC0tcmFkaW8iPjxpbnB1dCB0eXBlPSJyYWRpbyIgaWQ9ImZvbmNpYV9hZ2VuY3lfY29udGFjdF9jb250YWN0X21ldGhvZF8wIiBuYW1lPSJmb25jaWFfYWdlbmN5X2NvbnRhY3RbY29udGFjdF9tZXRob2RdIiB2YWx1ZT0iUGFyIHTDqWzDqXBob25lIiAvPjxsYWJlbCBmb3I9ImZvbmNpYV9hZ2VuY3lfY29udGFjdF9jb250YWN0X21ldGhvZF8wIj5QYXIgdMOpbMOpcGhvbmU8L2xhYmVsPjwvbGk+PGxpIGNsYXNzPSJGb3JtLWZpZWxkIEZvcm0tZmllbGQtLXJhZGlvIj48aW5wdXQgdHlwZT0icmFkaW8iIGlkPSJmb25jaWFfYWdlbmN5X2NvbnRhY3RfY29udGFjdF9tZXRob2RfMSIgbmFtZT0iZm9uY2lhX2FnZW5jeV9jb250YWN0W2NvbnRhY3RfbWV0aG9kXSIgdmFsdWU9IlBhciBFbWFpbCIgLz48bGFiZWwgZm9yPSJmb25jaWFfYWdlbmN5X2NvbnRhY3RfY29udGFjdF9tZXRob2RfMSI+UGFyIEVtYWlsPC9sYWJlbD48L2xpPjwvdWw+CiAgICAgICAgPC9maWVsZHNldD4KCiAgICAgICAgPHAgY2xhc3M9IkZvcm0tZmllbGQgRm9ybS1maWVsZC0tdGV4dCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgY2xhc3M9IkZvcm0tbGFiZWwiIGZvcj0iZm9uY2lhX2FnZW5jeV9jb250YWN0X21lc3NhZ2UiPlZvdHJlIG1lc3NhZ2U8L2xhYmVsPgogICAgICAgICAgICA8dGV4dGFyZWEgaWQ9ImZvbmNpYV9hZ2VuY3lfY29udGFjdF9tZXNzYWdlIiBuYW1lPSJmb25jaWFfYWdlbmN5X2NvbnRhY3RbbWVzc2FnZV0iPjwvdGV4dGFyZWE+CiAgICAgICAgPC9wPgoKICAgICAgICA8ZGl2IGNsYXNzPSJNb2RhbC1mb290ZXIiPgogICAgICAgICAgICA8cCBjbGFzcz0iRm9ybS1pbmZvIj4qIGNoYW1wcyBvYmxpZ2F0b2lyZXM8L3A+CgogICAgICAgICAgICA8cCBjbGFzcz0iRm9ybS1maWVsZCBGb3JtLWZpZWxkLS1zdWJtaXQgRm9ybS1maWVsZC0tY2VudGVyIj4KICAgICAgICAgICAgICAgIDxidXR0b24gdHlwZT0ic3VibWl0IiBpZD0iZm9uY2lhX2FnZW5jeV9jb250YWN0X3N1Ym1pdCIgbmFtZT0iZm9uY2lhX2FnZW5jeV9jb250YWN0W3N1Ym1pdF0iIGNsYXNzPSJCdG4gQnRuLS12YWxpZCIgZGF0YS1hY3Rpb249InN1Ym1pdF9mb3JtIiBkYXRhLWFuYWx5dGljcy12YWx1ZT0iMTEyOCAtIEZPTkNJQSB0cmFuc2FjdGlvbi1wYXJpcy1tb250cGFybmFzc2UiPkVudm95ZXI8L2J1dHRvbj4KICAgICAgICAgICAgPC9wPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJMZWdhbE1lbnRpb25zIExlZ2FsTWVudGlvbnMtLXNtYWxsIj4KICAgICAgICAgICAgICAgICAgICA8cD5DZXMgaW5mb3JtYXRpb25zIHNvbnQgbsOpY2Vzc2FpcmVzIGF1IHRyYWl0ZW1lbnQgZGUgdm90cmUgZGVtYW5kZSBldCDDoCBsYSBnZXN0aW9uIGRlIG5vcyByZWxhdGlvbnMgY29tbWVyY2lhbGVzLiBMZXMgZG9ubsOpZXMgw6AgY2FyYWN0w6hyZSBwZXJzb25uZWwgcmVjdWVpbGxpZXMgcGFyIEZPTkNJQSBmb250IGwnb2JqZXQgZCd1biB0cmFpdGVtZW50IGF1dG9tYXRpc8OpIGRlc3RpbsOpIMOgIGxhIGdlc3Rpb24gZXQgYXV4IG7DqWdvY2lhdGlvbnMgZGUgYmllbnMgaW1tb2JpbGllcnMsIMOgIGxhIGdlc3Rpb24gZGVzIGNsaWVudHMgZXQgw6AgbGEgcsOpYWxpc2F0aW9uIGQnb3DDqXJhdGlvbnMgcmVsYXRpdmVzIMOgIGxhIHByb3NwZWN0aW9uLiBMYSBjb21tdW5pY2F0aW9uIGRlIHZvcyBjb29yZG9ubsOpZXMgw6lsZWN0cm9uaXF1ZXMgaW1wbGlxdWUgdm90cmUgY29uc2VudGVtZW50IMOgIHJlY2V2b2lyLCBwYXIgdm9pZSDDqWxlY3Ryb25pcXVlLCBkZXMgb2ZmcmVzIGNvbW1lcmNpYWxlcyBkZSBsYSBwYXJ0IGRlIEZPTkNJQSBldCBkZSBzZXMgcGFydGVuYWlyZXMgY29tbWVyY2lhdXggYXV4cXVlbHMgRk9OQ0lBIHBldXQgw6p0cmUgYW1lbsOpZSDDoCBjb21tdW5pcXVlciB2b3MgZG9ubsOpZXMgw6AgY2FyYWN0w6hyZSBwZXJzb25uZWwuIFRvdXRlZm9pcywgdm91cyBwb3V2ZXogdm91cyBvcHBvc2VyIHNhbnMgZnJhaXMgKGhvcm1pcyBjZXV4IGxpw6lzIMOgIGxhIHRyYW5zbWlzc2lvbiBkdSByZWZ1cykgZXQgc2FucyBqdXN0aWZpY2F0aW9uIMOgIGwndXRpbGlzYXRpb24gZGUgdm9zIGRvbm7DqWVzIMOgIGRlcyBmaW5zIGRlIHByb3NwZWN0aW9uIGNvbW1lcmNpYWxlLiBDb25mb3Jtw6ltZW50IMOgIGxhIExvaSBuwrAgNzgtMTcgZHUgNiBqYW52aWVyIDE5NzggbW9kaWZpw6llLCB2b3VzIGRpc3Bvc2V6IGQndW4gZHJvaXQgZCdhY2PDqHMsIGRlIHJlY3RpZmljYXRpb24gZXQgZCdvcHBvc2l0aW9uLCBwb3VyIGRlcyBtb3RpZnMgbMOpZ2l0aW1lcywgYXUgdHJhaXRlbWVudCBkZSB2b3MgZG9ubsOpZXMgw6AgY2FyYWN0w6hyZSBwZXJzb25uZWwgcXVlIHZvdXMgcG91dmV6IGV4ZXJjZXIgZW4gdm91cyBhZHJlc3NhbnQgYXUgcmVzcG9uc2FibGUgZHUgdHJhaXRlbWVudCwgRk9OQ0lBIC0gU2VydmljZSBUcmFuc2FjdGlvbiAxMywgYXZlbnVlIExlYnJ1biAtIDkyMTYwIEFOVE9OWS48L3A+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgoKICAgICAgICA8aW5wdXQgdHlwZT0iaGlkZGVuIiBpZD0iZm9uY2lhX2FnZW5jeV9jb250YWN0X3Byb3BlcnR5X2RhdGEiIG5hbWU9ImZvbmNpYV9hZ2VuY3lfY29udGFjdFtwcm9wZXJ0eV9kYXRhXSIgdmFsdWU9InsmcXVvdDtwcml4VmVudGUmcXVvdDs6MzU1MDAwLCZxdW90O3N1cmZhY2UmcXVvdDs6MTksJnF1b3Q7cmVmZXJlbmNlJnF1b3Q7OiZxdW90OzEzOTU5MDcmcXVvdDssJnF1b3Q7cHJvcGVydHlUeXBlJnF1b3Q7OiZxdW90O3B1cmNoYXNlJnF1b3Q7LCZxdW90O25iUGllY2VzJnF1b3Q7OjEsJnF1b3Q7bmVnb2NpYXRldXJQcmVub20mcXVvdDs6JnF1b3Q7RmFiaWVuJnF1b3Q7LCZxdW90O3ZpbGxlJnF1b3Q7OiZxdW90O3BhcmlzJnF1b3Q7LCZxdW90O2NvZGVQb3N0YWwmcXVvdDs6JnF1b3Q7NzUwMDcmcXVvdDssJnF1b3Q7dHlwZUJpZW4mcXVvdDs6JnF1b3Q7YXBwYXJ0ZW1lbnQmcXVvdDssJnF1b3Q7bmVnb2NpYXRldXJOb20mcXVvdDs6JnF1b3Q7VkFOREVDQU5ERUxBRVJFJnF1b3Q7LCZxdW90O3Njb3JlJnF1b3Q7OjF9IiAvPgogICAgICAgIDxpbnB1dCB0eXBlPSJoaWRkZW4iIGlkPSJmb25jaWFfYWdlbmN5X2NvbnRhY3RfYWdlbmN5X21haWwiIG5hbWU9ImZvbmNpYV9hZ2VuY3lfY29udGFjdFthZ2VuY3lfbWFpbF0iIHZhbHVlPSJmdGwtcGFyaXM2IyNmb25jaWEuZnIiIC8+CgogICAgICAgICAgICAKCiAgICAgICAgPC9mb3JtPgoKICAgIDwvZGl2PgoKPC9zZWN0aW9uPgoKICAgICAgICAgICAgICAgIDwvYXNpZGU+CgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L3NlY3Rpb24+CiAgICAgICAgCiAgICA8L2Rpdj4KCgoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9IkJyZWFkY3J1bWJzIj4KICAgICAgICAgICAgPHAgICAgIGNsYXNzPSJCcmVhZGNydW1icy1pbm5lciIgZGF0YS10eXBlPSJ5b2xvIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3Bhbj5Gb25jaWE8L3NwYW4+ICAgICAgICAgICAgICAgICAgICAgICAgICAgIAoKICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iL2FjaGF0IiAgICAgY2xhc3M9IkJyZWFkY3J1bWJzLWxpbmsiPkFjaGF0PC9hPiAgICAgICAgICAgICAgICAgICAgICAgICAgICAKCiAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Ii9hY2hhdC9wYXJpcy03NTAwNyIgICAgIGNsYXNzPSJCcmVhZGNydW1icy1saW5rIj5QYXJpcyA3NTAwNzwvYT4gICAgICAgICAgICAgICAgICAgICAgICAgICAgCgogICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3Bhbj5BcHBhcnRlbWVudDwvc3Bhbj4gICAgICAgICAgICAgICAgICAgICAgICAgICAgCgogICAgCgogICAgICAgICAgICA8L3A+CiAgICAgICAgPC9kaXY+CiAgICAKCgogICAgICAgICAgICAKICAgICAgICAKPGZvb3RlciBjbGFzcz0iRm9vdGVyIiByb2xlPSJjb250ZW50aW5mbyI+CgogICAgPGRpdiBjbGFzcz0iRm9vdGVyLXJvdyBGb290ZXItcm93LS1pZGVudGl0eSBGb290ZXItcm93LS1pZGVudGl0eS1tb2JpbGUiPgogICAgICAgIDxkaXYgY2xhc3M9IkZvb3Rlci0ycGFydCI+CiAgICAgICAgICAgIDxwIGNsYXNzPSJGb290ZXItcGFydDEgRm9vdGVyLXBhcnQxLS1sb2dvIj4KICAgICAgICAgICAgICAgIDxpbWcgd2lkdGg9IjE1NCIgaGVpZ2h0PSI1NiIgc3JjPSJodHRwczovL3Bob3Rvcy5mb25jaWEubmV0L2ltYWdlcy9Gb25jaWFfbG9nb3ZfMzA4Xzg2LnBuZyIgYWx0PSJGb25jaWEiPgogICAgICAgICAgICA8L3A+CiAgICAgICAgICAgIDx1bCBjbGFzcz0iRm9vdGVyLXBhcnQyIEZvb3Rlci1wYXJ0Mi0tbGlua3MiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICAgIDxhICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaHJlZj0iL21lbnRpb25zLWxlZ2FsZXMiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1iZWhhdD0ibGluay1NZW50aW9uc19sw6lnYWxlcyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIE1lbnRpb25zIGzDqWdhbGVzCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgICA8YSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhyZWY9Imh0dHBzOi8vZnIuZm9uY2lhLmNvbS9wbGFuLWR1LXNpdGUiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1iZWhhdD0ibGluay1QbGFuX2R1X3NpdGUiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBQbGFuIGR1IHNpdGUKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICAgIDxhICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaHJlZj0iLyNmb25jaWFfY29uc2VudGVtZW50cyIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkYXRhLWJlaGF0PSJsaW5rLUdlc3Rpb25fZGVzX2Nvb2tpZXMiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBHZXN0aW9uIGRlcyBjb29raWVzCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgICA8YSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhyZWY9Ii9jaGFydGUtZGUtcHJvdGVjdGlvbi1kZXMtZG9ubmVlcyIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkYXRhLWJlaGF0PSJsaW5rLUNoYXJ0ZV9kZV9wcm90ZWN0aW9uX2Rlc19kb25uw6llc18iPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBDaGFydGUgZGUgcHJvdGVjdGlvbiBkZXMgZG9ubsOpZXMgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgICA8YSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhyZWY9Ii9ub3RyZS1wcmVvY2N1cGF0aW9uLWxhLXNlY3VyaXRlLWRlLXZvcy1kb25uZWVzIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtYmVoYXQ9ImxpbmstU8OpY3VyaXTDqV9JbmZvcm1hdGlxdWUiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBTw6ljdXJpdMOpIEluZm9ybWF0aXF1ZQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgICAgPGEgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBocmVmPSIvc2VydmljZXMiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1iZWhhdD0ibGluay1TZXJ2aWNlcyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFNlcnZpY2VzCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgICA8YSAgdGFyZ2V0PSJfYmxhbmsiICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaHJlZj0iaHR0cDovL3ByZXNzcm9vbS5mb25jaWEuY29tLyIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkYXRhLWJlaGF0PSJsaW5rLUVzcGFjZV9QcmVzc2UiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBFc3BhY2UgUHJlc3NlCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgICA8YSAgdGFyZ2V0PSJfYmxhbmsiICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaHJlZj0iaHR0cDovL2ZvbmNpYS1yZWNydXRlLnRhbGVudC1zb2Z0LmNvbS9hY2N1ZWlsLmFzcHgiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1iZWhhdD0ibGluay1Ob3Nfb2ZmcmVzX2TigJllbXBsb2kiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBOb3Mgb2ZmcmVzIGTigJllbXBsb2kKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICAgIDxhICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaHJlZj0iL2FjaGF0L2F2aXMtY2xpZW50cyIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkYXRhLWJlaGF0PSJsaW5rLUF2aXNfY2xpZW50cyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEF2aXMgY2xpZW50cwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3VsPgogICAgICAgIDwvZGl2PgogICAgPC9kaXY+CgogICAgPGRpdiBjbGFzcz0iRm9vdGVyLXBhcnQxIEZvb3Rlci1wYXJ0MS0tc29jaWFsIj4KICAgICAgICAgICAgICAgICAgICA8YSBjbGFzcz0iRm9vdGVyLS1oYXV0LWRlLXBhZ2UtLWRlc2t0b3AiICB0YXJnZXQ9Il9ibGFuayIgIGhyZWY9Imh0dHBzOi8vd3d3LmZhY2Vib29rLmNvbS9Gb25jaWEiIGRhdGEtYmVoYXQ9InNvY2lhbExpbmstRmFjZWJvb2sgbWVudSBkcm9pdCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzdmcgY2xhc3M9Imljb24iIHN0eWxlPSJ3aWR0aDozOHB4O2hlaWdodDozOHB4IiBhcmlhLWhpZGRlbj0idHJ1ZSI+PHVzZSB4bGluazpocmVmPSIvYnVuZGxlcy9mb25jaWFpbnRlcm5ldC9zdmcvaWNvbnMuc3ZnI0ljb24tLWZhY2Vib29rLXJlc3BvbnNpdmUiPjwvdXNlPjwvc3ZnPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICA8YSBjbGFzcz0iRm9vdGVyLS1oYXV0LWRlLXBhZ2UiICB0YXJnZXQ9Il9ibGFuayIgIGhyZWY9Imh0dHBzOi8vd3d3LmZhY2Vib29rLmNvbS9Gb25jaWEiIGRhdGEtYmVoYXQ9InNvY2lhbExpbmstRmFjZWJvb2sgbWVudSBkcm9pdCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzdmcgY2xhc3M9Imljb24iIHN0eWxlPSJ3aWR0aDozOHB4O2hlaWdodDozOHB4IiBhcmlhLWhpZGRlbj0idHJ1ZSI+PHVzZSB4bGluazpocmVmPSIvYnVuZGxlcy9mb25jaWFpbnRlcm5ldC9zdmcvaWNvbnMuc3ZnI0ljb24tLWZhY2Vib29rMiI+PC91c2U+PC9zdmc+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgICAgPGEgY2xhc3M9IkZvb3Rlci0taGF1dC1kZS1wYWdlLS1kZXNrdG9wIiAgdGFyZ2V0PSJfYmxhbmsiICBocmVmPSJodHRwczovL3R3aXR0ZXIuY29tL2ZvbmNpYSIgZGF0YS1iZWhhdD0ic29jaWFsTGluay10d2l0dGVyIG1lbnUgZHJvaXQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3ZnIGNsYXNzPSJpY29uIiBzdHlsZT0id2lkdGg6MzhweDtoZWlnaHQ6MzhweCIgYXJpYS1oaWRkZW49InRydWUiPjx1c2UgeGxpbms6aHJlZj0iL2J1bmRsZXMvZm9uY2lhaW50ZXJuZXQvc3ZnL2ljb25zLnN2ZyNJY29uLS10d2l0dGVyLXJlcG9uc2l2ZSI+PC91c2U+PC9zdmc+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgIDxhIGNsYXNzPSJGb290ZXItLWhhdXQtZGUtcGFnZSIgIHRhcmdldD0iX2JsYW5rIiAgaHJlZj0iaHR0cHM6Ly90d2l0dGVyLmNvbS9mb25jaWEiIGRhdGEtYmVoYXQ9InNvY2lhbExpbmstdHdpdHRlciBtZW51IGRyb2l0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHN2ZyBjbGFzcz0iaWNvbiIgc3R5bGU9IndpZHRoOjM4cHg7aGVpZ2h0OjM4cHgiIGFyaWEtaGlkZGVuPSJ0cnVlIj48dXNlIHhsaW5rOmhyZWY9Ii9idW5kbGVzL2ZvbmNpYWludGVybmV0L3N2Zy9pY29ucy5zdmcjSWNvbi0tdHdpdHRlcjIiPjwvdXNlPjwvc3ZnPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICAgIDxhIGNsYXNzPSJGb290ZXItLWhhdXQtZGUtcGFnZS0tZGVza3RvcCIgIHRhcmdldD0iX2JsYW5rIiAgaHJlZj0iaHR0cHM6Ly93d3cueW91dHViZS5jb20vdXNlci9mb25jaWEiIGRhdGEtYmVoYXQ9InNvY2lhbExpbmsteW91dHViZSBtZW51IGRyb2l0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHN2ZyBjbGFzcz0iaWNvbiIgc3R5bGU9IndpZHRoOjM4cHg7aGVpZ2h0OjM4cHgiIGFyaWEtaGlkZGVuPSJ0cnVlIj48dXNlIHhsaW5rOmhyZWY9Ii9idW5kbGVzL2ZvbmNpYWludGVybmV0L3N2Zy9pY29ucy5zdmcjSWNvbi0teW91dHViZS1yZXNwb25zaXZlIj48L3VzZT48L3N2Zz4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgPGEgY2xhc3M9IkZvb3Rlci0taGF1dC1kZS1wYWdlIiAgdGFyZ2V0PSJfYmxhbmsiICBocmVmPSJodHRwczovL3d3dy55b3V0dWJlLmNvbS91c2VyL2ZvbmNpYSIgZGF0YS1iZWhhdD0ic29jaWFsTGluay15b3V0dWJlIG1lbnUgZHJvaXQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3ZnIGNsYXNzPSJpY29uIiBzdHlsZT0id2lkdGg6MzhweDtoZWlnaHQ6MzhweCIgYXJpYS1oaWRkZW49InRydWUiPjx1c2UgeGxpbms6aHJlZj0iL2J1bmRsZXMvZm9uY2lhaW50ZXJuZXQvc3ZnL2ljb25zLnN2ZyNJY29uLS15b3V0dWJlMiI+PC91c2U+PC9zdmc+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgICAgPGEgY2xhc3M9IkZvb3Rlci0taGF1dC1kZS1wYWdlLS1kZXNrdG9wIiAgdGFyZ2V0PSJfYmxhbmsiICBocmVmPSJodHRwczovL3d3dy5saW5rZWRpbi5jb20vY29tcGFueS83NzI5MTcvIiBkYXRhLWJlaGF0PSJzb2NpYWxMaW5rLWxpbmtlZGluIG1lbnUgZHJvaXQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3ZnIGNsYXNzPSJpY29uIiBzdHlsZT0id2lkdGg6MzhweDtoZWlnaHQ6MzhweCIgYXJpYS1oaWRkZW49InRydWUiPjx1c2UgeGxpbms6aHJlZj0iL2J1bmRsZXMvZm9uY2lhaW50ZXJuZXQvc3ZnL2ljb25zLnN2ZyNJY29uLS1saW5rZWRpbi1yZXNwb25zaXZlIj48L3VzZT48L3N2Zz4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgPGEgY2xhc3M9IkZvb3Rlci0taGF1dC1kZS1wYWdlIiAgdGFyZ2V0PSJfYmxhbmsiICBocmVmPSJodHRwczovL3d3dy5saW5rZWRpbi5jb20vY29tcGFueS83NzI5MTcvIiBkYXRhLWJlaGF0PSJzb2NpYWxMaW5rLWxpbmtlZGluIG1lbnUgZHJvaXQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3ZnIGNsYXNzPSJpY29uIiBzdHlsZT0id2lkdGg6MzhweDtoZWlnaHQ6MzhweCIgYXJpYS1oaWRkZW49InRydWUiPjx1c2UgeGxpbms6aHJlZj0iL2J1bmRsZXMvZm9uY2lhaW50ZXJuZXQvc3ZnL2ljb25zLnN2ZyNJY29uLS1saW5rZWRpbiI+PC91c2U+PC9zdmc+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgCiAgICAgICAgPGEgY2xhc3M9IkZvb3Rlci0taGF1dC1kZS1wYWdlIiBocmVmPSIjIiBvbkNsaWNrPSIkKCdodG1sLCBib2R5JykuYW5pbWF0ZSh7c2Nyb2xsVG9wOjB9LCAnc2xvdycpOyByZXR1cm4gZmFsc2U7Ij4KICAgICAgICAgICAgPHN2ZyBjbGFzcz0iaWNvbiIgc3R5bGU9IndpZHRoOjM4cHg7aGVpZ2h0OjM4cHgiIGFyaWEtaGlkZGVuPSJ0cnVlIj48dXNlIHhsaW5rOmhyZWY9Ii9idW5kbGVzL2ZvbmNpYWludGVybmV0L3N2Zy9pY29ucy5zdmcjSWNvbi0taGF1dF9kZV9wYWdlX2dyaXMiPjwvdXNlPjwvc3ZnPgogICAgICAgIDwvYT4KICAgIDwvZGl2PgoKICAgIDxkaXYgY2xhc3M9IkZvb3Rlci1yb3cgRm9vdGVyLXJvdy0tbGlua3MxIj4KICAgICAgICA8ZGl2IGNsYXNzPSJGb290ZXItY29scyI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9IkZvb3Rlci1jb2wgRm9vdGVyLWNvbC0tbGVmdCI+CiAgICAgICAgICAgICAgICA8dWwgY2xhc3M9IkZvb3Rlci1tYWluTGlua3MiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhICBocmVmPSJodHRwczovL2ZyLmZvbmNpYS5jb20vYWNoYXQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEFjaGV0ZXIgdW4gYmllbgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgIGhyZWY9Ii9mYWlyZS1nZXJlci1tYS1sb2NhdGlvbi1wYXItZm9uY2lhIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBGYWlyZSBnw6lyZXIgbWEgbG9jYXRpb24KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhICBocmVmPSJodHRwczovL2ZyLmZvbmNpYS5jb20vZXN0aW1lci1zb24tYmllbiI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgRXN0aW1hdGlvbiBiaWVuIGltbW9iaWxpZXIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhICBocmVmPSIvbC1pbnZlc3Rpc3NlbWVudC1pbW1vYmlsaWVyIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBJbnZlc3RpcgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgIGhyZWY9Ii92b3RyZS1hY2hhdC1kYW5zLWwtaW1tb2JpbGllci1uZXVmLWF2ZWMtZm9uY2lhIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBBY2hhdCBpbW1vYmlsaWVyIG5ldWYgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC91bD4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9IkZvb3Rlci1jb2wgRm9vdGVyLWNvbC0tcmlnaHQiPgogICAgICAgICAgICAgICAgPHVsIGNsYXNzPSJGb290ZXItbWFpbkxpbmtzIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSAgdGFyZ2V0PSJfYmxhbmsiICBocmVmPSJodHRwczovL2ZyLmZvbmNpYS5jb20vbG9jYXRpb24iPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIExvdWVyIHVuIGJpZW4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhICBocmVmPSIvZmFpcmUtZ2VyZXItdW5lLWNvcHJvcHJpZXRlIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBGYWlyZSBnw6lyZXIgdW5lIGNvcHJvcHJpw6l0w6kKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhICBocmVmPSJodHRwczovL2ZyLmZvbmNpYS5jb20vZXN0aW1hdGlvbi1sb3llciI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgRXN0aW1hdGlvbiBsb3llcgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgIGhyZWY9Ii9sb2dpbiI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgTXlGb25jaWEKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhICBocmVmPSJodHRwczovL2ZyLmZvbmNpYS5jb20vYWN0dWFsaXRlcy1lbi1wZXJpb2RlLWRlLWNvbmZpbmVtZW50I2ZhcWFjdHVhbGl0ZXMiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEZBUQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdWw+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgPC9kaXY+CgogICAgPGRpdiBjbGFzcz0iRm9vdGVyLXJvdyBGb290ZXItcm93LS1pZGVudGl0eSBGb290ZXItcm93LS1pZGVudGl0eS1yZWYiPgogICAgICAgIDxkaXYgY2xhc3M9IkZvb3Rlci0ycGFydCI+CiAgICAgICAgICAgIDxwIGNsYXNzPSJGb290ZXItcGFydDEgRm9vdGVyLXBhcnQxLS1sb2dvIj4KICAgICAgICAgICAgICAgIDxpbWcgd2lkdGg9IjE1NCIgaGVpZ2h0PSI0MyIgc3JjPSJodHRwczovL3Bob3Rvcy5mb25jaWEubmV0L2ltYWdlcy9Gb25jaWFfbG9nb3ZfMzA4Xzg2LnBuZyIgYWx0PSJGb25jaWEiPgogICAgICAgICAgICA8L3A+CiAgICAgICAgICAgIDx1bCBjbGFzcz0iRm9vdGVyLXBhcnQyIEZvb3Rlci1wYXJ0Mi0tbGlua3MiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICA8YSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaHJlZj0iL21lbnRpb25zLWxlZ2FsZXMiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkYXRhLWJlaGF0PSJsaW5rLU1lbnRpb25zX2zDqWdhbGVzIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIE1lbnRpb25zIGzDqWdhbGVzCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgPGEgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhyZWY9Imh0dHBzOi8vZnIuZm9uY2lhLmNvbS9wbGFuLWR1LXNpdGUiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkYXRhLWJlaGF0PSJsaW5rLVBsYW5fZHVfc2l0ZSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBQbGFuIGR1IHNpdGUKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICA8YSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaHJlZj0iLyNmb25jaWFfY29uc2VudGVtZW50cyIKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtYmVoYXQ9ImxpbmstR2VzdGlvbl9kZXNfY29va2llcyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBHZXN0aW9uIGRlcyBjb29raWVzCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgPGEgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhyZWY9Ii9jaGFydGUtZGUtcHJvdGVjdGlvbi1kZXMtZG9ubmVlcyIKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtYmVoYXQ9ImxpbmstQ2hhcnRlX2RlX3Byb3RlY3Rpb25fZGVzX2Rvbm7DqWVzXyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBDaGFydGUgZGUgcHJvdGVjdGlvbiBkZXMgZG9ubsOpZXMgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgPGEgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhyZWY9Ii9ub3RyZS1wcmVvY2N1cGF0aW9uLWxhLXNlY3VyaXRlLWRlLXZvcy1kb25uZWVzIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1iZWhhdD0ibGluay1Tw6ljdXJpdMOpX0luZm9ybWF0aXF1ZSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBTw6ljdXJpdMOpIEluZm9ybWF0aXF1ZQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgIDxhICAgICAgICAgICAgICAgICAgICAgICAgICAgICBocmVmPSIvc2VydmljZXMiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkYXRhLWJlaGF0PSJsaW5rLVNlcnZpY2VzIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFNlcnZpY2VzCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgPGEgIHRhcmdldD0iX2JsYW5rIiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaHJlZj0iaHR0cDovL3ByZXNzcm9vbS5mb25jaWEuY29tLyIKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtYmVoYXQ9ImxpbmstRXNwYWNlX1ByZXNzZSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBFc3BhY2UgUHJlc3NlCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgPGEgIHRhcmdldD0iX2JsYW5rIiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaHJlZj0iaHR0cDovL2ZvbmNpYS1yZWNydXRlLnRhbGVudC1zb2Z0LmNvbS9hY2N1ZWlsLmFzcHgiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkYXRhLWJlaGF0PSJsaW5rLU5vc19vZmZyZXNfZOKAmWVtcGxvaSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBOb3Mgb2ZmcmVzIGTigJllbXBsb2kKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICA8YSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaHJlZj0iL2FjaGF0L2F2aXMtY2xpZW50cyIKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtYmVoYXQ9ImxpbmstQXZpc19jbGllbnRzIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEF2aXMgY2xpZW50cwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3VsPgogICAgICAgIDwvZGl2PgogICAgPC9kaXY+CgogICAgPGRpdiBjbGFzcz0iRm9vdGVyLXJvdyBGb290ZXItcm93LS1lbmQiPgogICAgICAgIDxkaXYgY2xhc3M9IkZvb3Rlci0ycGFydCI+CiAgICAgICAgICAgIDxwIGNsYXNzPSJGb290ZXItcGFydDIgRm9vdGVyLXBhcnQyLS1jb3B5Ij4KICAgICAgICAgICAgICAgICZjb3B5OzIwMjAgRm9uY2lhIEdyb3VwZQogICAgICAgICAgICA8L3A+CiAgICAgICAgPC9kaXY+CiAgICA8L2Rpdj4KCjwvZm9vdGVyPgo8L2Rpdj48IS0tQm9keVdyYXBwZXItLT4KCiAgICA8c2NyaXB0IHNyYz0iL2NvbXBpbGVkL2NvbW1vbi5qcz92ZXJzaW9uPTE1ODgwOTc1NTkiPjwvc2NyaXB0Pgo8c2NyaXB0PgogICAgZm9uY2lhLnNlc3Npb25zLmluaXQoOTAwMDAwLCAxODAwMDApOwo8L3NjcmlwdD4KCjwhLS1baWYgbHRlIElFIDldPjxzY3JpcHQgc3JjPSIvY29tcGlsZWQvc2NyaXB0cy1pZTkuanM/dmVyc2lvbj0xNTg4MDk3NTU5Ij48L3NjcmlwdD48IVtlbmRpZl0tLT4KCgogICAgCjwvYm9keT4KPC9odG1sPgo=
    http_version: null
  recorded_at: Wed, 29 Apr 2020 10:39:33 GMT
- request:
    method: get
    uri: https://fr.foncia.com/achat/paris-75015/appartement/1400263.htm
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Wed, 29 Apr 2020 10:39:33 GMT
      Set-Cookie:
      - eZSESSID=mjqbpmm29lnln2trp377qiq7t6; path=/; secure; HttpOnly
      Cache-Control:
      - public, s-maxage=31536000
      Content-Type:
      - text/html; charset=UTF-8
      Vary:
      - Accept-Encoding,Origin
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: null
  recorded_at: Wed, 29 Apr 2020 10:39:33 GMT
- request:
    method: get
    uri: https://fr.foncia.com/achat/paris-75011/appartement/1185816.htm
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Tue, 28 Apr 2020 20:29:16 GMT
      Cache-Control:
      - public, s-maxage=31536000
      Content-Type:
      - text/html; charset=UTF-8
      Vary:
      - Accept-Encoding,Origin
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: null
  recorded_at: Wed, 29 Apr 2020 10:39:33 GMT
- request:
    method: get
    uri: https://fr.foncia.com/achat/paris-75011/appartement/1366087.htm
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Tue, 28 Apr 2020 18:30:19 GMT
      Cache-Control:
      - public, s-maxage=31536000
      Content-Type:
      - text/html; charset=UTF-8
      Vary:
      - Accept-Encoding,Origin
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: null
  recorded_at: Wed, 29 Apr 2020 10:39:33 GMT
- request:
    method: get
    uri: https://fr.foncia.com/achat/chatou-78400--saint-germain-en-laye-78100--fourqueux-78112--le-vesinet-78110--chambourcy-78240--maisons-laffitte-78600--mareil-marly-78750--marly-le-roi-78160--l-etang-la-ville-78620--croissy-sur-seine-78290--montesson-78360--houilles-78800--sartrouville-78500--carrieres-sur-seine-78420--rueil-malmaison-92500/appartement--maison/(params)/on/(tri)/date/(ordre)/desc
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Wed, 29 Apr 2020 10:39:33 GMT
      Set-Cookie:
      - current_property_search_url=%2Fachat%2Fchatou-78400--saint-germain-en-laye-78100--fourqueux-78112--le-vesinet-78110--chambourcy-78240--maisons-laffitte-78600--mareil-marly-78750--marly-le-roi-78160--l-etang-la-ville-78620--croissy-sur-seine-78290--montesson-78360--houilles-78800--sartrouville-78500--carrieres-sur-seine-78420--rueil-malmaison-92500%2Fappartement--maison%2F%28params%29%2Fon%2F%28tri%29%2Fdate%2F%28ordre%29%2Fdesc;
        path=/
      - eZSESSID=t5oqvvkqehckd37vqsjbeua4q7; path=/; secure; HttpOnly
      Cache-Control:
      - public, s-maxage=86400
      Content-Type:
      - text/html; charset=UTF-8
      Vary:
      - Accept-Encoding,Origin
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: null
  recorded_at: Wed, 29 Apr 2020 10:39:34 GMT
- request:
    method: get
    uri: https://fr.foncia.com/achat/sartrouville-78500/appartement/1290179.htm
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Tue, 28 Apr 2020 20:10:21 GMT
      Cache-Control:
      - public, s-maxage=31536000
      Content-Type:
      - text/html; charset=UTF-8
      Vary:
      - Accept-Encoding,Origin
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: null
  recorded_at: Wed, 29 Apr 2020 10:39:34 GMT
- request:
    method: get
    uri: https://fr.foncia.com/achat/houilles-78800/maison/1337944.htm
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Wed, 29 Apr 2020 10:39:34 GMT
      Set-Cookie:
      - eZSESSID=k0i153039lbh7aotpl62ks48o5; path=/; secure; HttpOnly
      Cache-Control:
      - public, s-maxage=31536000
      Content-Type:
      - text/html; charset=UTF-8
      Vary:
      - Accept-Encoding,Origin
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: null
  recorded_at: Wed, 29 Apr 2020 10:39:34 GMT
- request:
    method: get
    uri: https://fr.foncia.com/achat/sartrouville-78500/appartement/1386023.htm
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Tue, 28 Apr 2020 20:07:29 GMT
      Cache-Control:
      - public, s-maxage=31536000
      Content-Type:
      - text/html; charset=UTF-8
      Vary:
      - Accept-Encoding,Origin
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: null
  recorded_at: Wed, 29 Apr 2020 10:39:34 GMT
- request:
    method: get
    uri: https://fr.foncia.com/achat/houilles-78800/maison/1389793.htm
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Wed, 29 Apr 2020 10:39:34 GMT
      Set-Cookie:
      - eZSESSID=dka5b6424gmn8oinepra91a036; path=/; secure; HttpOnly
      Cache-Control:
      - public, s-maxage=31536000
      Content-Type:
      - text/html; charset=UTF-8
      Vary:
      - Accept-Encoding,Origin
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: null
  recorded_at: Wed, 29 Apr 2020 10:39:35 GMT
- request:
    method: get
    uri: https://fr.foncia.com/achat/sartrouville-78500/appartement/1400743.htm
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Wed, 29 Apr 2020 10:39:35 GMT
      Set-Cookie:
      - eZSESSID=2mt80brqv22nm58ef2s4darqh2; path=/; secure; HttpOnly
      Cache-Control:
      - public, s-maxage=31536000
      Content-Type:
      - text/html; charset=UTF-8
      Vary:
      - Accept-Encoding,Origin
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: null
  recorded_at: Wed, 29 Apr 2020 10:39:35 GMT
- request:
    method: get
    uri: https://fr.foncia.com/achat/rueil-malmaison-92500/appartement/1394552.htm
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Wed, 29 Apr 2020 10:39:35 GMT
      Set-Cookie:
      - eZSESSID=lhq9ae0ogqs8ihm08hij257cv5; path=/; secure; HttpOnly
      Cache-Control:
      - public, s-maxage=31536000
      Content-Type:
      - text/html; charset=UTF-8
      Vary:
      - Accept-Encoding,Origin
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: null
  recorded_at: Wed, 29 Apr 2020 10:39:35 GMT
recorded_with: VCR 5.1.0
