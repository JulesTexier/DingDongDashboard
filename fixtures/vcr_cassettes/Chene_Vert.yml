---
http_interactions:
- request:
    method: get
    uri: http://www.le-chene-vert.com/annonces-liste.asp?tri=nouveaute&typeliste=
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Cache-Control:
      - private
      Content-Length:
      - '28095'
      Content-Type:
      - text/html
      Server:
      - Microsoft-IIS/7.5
      Set-Cookie:
      - ASPSESSIONIDCCRDCCQQ=IFEKDICACPCLBIDAGLLJKBDB; path=/
      X-Powered-By:
      - ASP.NET
      Date:
      - Fri, 10 Apr 2020 13:09:27 GMT
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: null
  recorded_at: Fri, 10 Apr 2020 13:08:48 GMT
recorded_with: VCR 5.1.0
