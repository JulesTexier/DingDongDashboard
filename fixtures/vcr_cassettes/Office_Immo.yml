---
http_interactions:
- request:
    method: get
    uri: http://office-immo.com/resultat-recherche/?budget=&localisation=%7C75&nature=%7C1&nbPiece=&surface=&type=%7CAppartement%7CMaison%7CLoft
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 16 Apr 2020 09:55:03 GMT
      Content-Type:
      - text/html; charset=UTF-8
      Transfer-Encoding:
      - chunked
      Server:
      - Apache
      X-Powered-By:
      - PHP/7.1
      Set-Cookie:
      - PHPSESSID=63155d078c5855951f94406f3ecc104f; path=/; HttpOnly
      - SERVERID68971=262185|Xpgre|Xpgre; path=/
      Cache-Control:
      - max-age=0, must-revalidate, private
      Vary:
      - Accept-Encoding
      X-Iplb-Instance:
      - '17102'
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: null
  recorded_at: Thu, 16 Apr 2020 09:55:04 GMT
- request:
    method: get
    uri: http://office-immo.com/details-offre-residentiel/81027
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 16 Apr 2020 09:55:05 GMT
      Content-Type:
      - text/html; charset=UTF-8
      Transfer-Encoding:
      - chunked
      Server:
      - Apache
      X-Powered-By:
      - PHP/7.1
      Cache-Control:
      - no-cache, private
      Vary:
      - Accept-Encoding
      Set-Cookie:
      - SERVERID68971=262185|Xpgrf|Xpgrf; path=/
      X-Iplb-Instance:
      - '17097'
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: null
  recorded_at: Thu, 16 Apr 2020 09:55:05 GMT
- request:
    method: get
    uri: http://office-immo.com/details-offre-residentiel/81028
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 16 Apr 2020 09:55:05 GMT
      Content-Type:
      - text/html; charset=UTF-8
      Transfer-Encoding:
      - chunked
      Server:
      - Apache
      X-Powered-By:
      - PHP/7.1
      Cache-Control:
      - no-cache, private
      Vary:
      - Accept-Encoding
      Set-Cookie:
      - SERVERID68971=262185|Xpgrf|Xpgrf; path=/
      X-Iplb-Instance:
      - '17102'
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: null
  recorded_at: Thu, 16 Apr 2020 09:55:05 GMT
- request:
    method: get
    uri: http://office-immo.com/details-offre-residentiel/81032
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 16 Apr 2020 09:55:05 GMT
      Content-Type:
      - text/html; charset=UTF-8
      Transfer-Encoding:
      - chunked
      Server:
      - Apache
      X-Powered-By:
      - PHP/7.1
      Cache-Control:
      - no-cache, private
      Vary:
      - Accept-Encoding
      Set-Cookie:
      - SERVERID68971=262185|Xpgrf|Xpgrf; path=/
      X-Iplb-Instance:
      - '17097'
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: null
  recorded_at: Thu, 16 Apr 2020 09:55:05 GMT
- request:
    method: get
    uri: http://office-immo.com/details-offre-residentiel/81033
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 16 Apr 2020 09:55:05 GMT
      Content-Type:
      - text/html; charset=UTF-8
      Transfer-Encoding:
      - chunked
      Server:
      - Apache
      X-Powered-By:
      - PHP/7.1
      Cache-Control:
      - no-cache, private
      Vary:
      - Accept-Encoding
      Set-Cookie:
      - SERVERID68971=262185|Xpgrf|Xpgrf; path=/
      X-Iplb-Instance:
      - '17097'
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: null
  recorded_at: Thu, 16 Apr 2020 09:55:05 GMT
recorded_with: VCR 5.1.0
