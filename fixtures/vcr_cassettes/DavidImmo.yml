---
http_interactions:
- request:
    method: get
    uri: https://www.davidimmo.com/index.php?budget_max=&budget_min=&contr=biens_liste&hidden-localisation=Paris%20-%2075&localisation=Paris%20-%2075&nb_piece=&page=0&submit_search_0=&surface=&tri_lots=date&type_lot%5B%5D=appartement&type_lot%5B%5D=maison&type_transaction=0&vendus=0
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Wed, 08 Apr 2020 16:11:01 GMT
      Server:
      - Apache/2.4.6 (CentOS) OpenSSL/1.0.2k-fips PHP/5.4.16
      X-Powered-By:
      - PHP/5.4.16
      Set-Cookie:
      - PHPSESSID=t4gj2bfojfvukv4pho5sdt3kd5; path=/
      Expires:
      - Thu, 19 Nov 1981 08:52:00 GMT
      Cache-Control:
      - no-store, no-cache, must-revalidate, post-check=0, pre-check=0
      Pragma:
      - no-cache
      Transfer-Encoding:
      - chunked
      Content-Type:
      - text/html
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: null
  recorded_at: Wed, 08 Apr 2020 16:11:02 GMT
- request:
    method: get
    uri: https://www.davidimmo.com/cdt2246-vente-appartement-5-pieces-paris-75017/appartement-16143.html
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Wed, 08 Apr 2020 16:11:02 GMT
      Server:
      - Apache/2.4.6 (CentOS) OpenSSL/1.0.2k-fips PHP/5.4.16
      X-Powered-By:
      - PHP/5.4.16
      Expires:
      - Thu, 19 Nov 1981 08:52:00 GMT
      Cache-Control:
      - no-store, no-cache, must-revalidate, post-check=0, pre-check=0
      Pragma:
      - no-cache
      Content-Type:
      - text/html
      Set-Cookie:
      - PHPSESSID=a6t7vmibdhpvffpi9ufhs44633; path=/
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: null
  recorded_at: Wed, 08 Apr 2020 16:11:02 GMT
- request:
    method: get
    uri: https://www.davidimmo.com/cdt2242-vente-appartement-1-piece-paris-75008/appartement-16140.html
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Wed, 08 Apr 2020 16:11:02 GMT
      Server:
      - Apache/2.4.6 (CentOS) OpenSSL/1.0.2k-fips PHP/5.4.16
      X-Powered-By:
      - PHP/5.4.16
      Expires:
      - Thu, 19 Nov 1981 08:52:00 GMT
      Cache-Control:
      - no-store, no-cache, must-revalidate, post-check=0, pre-check=0
      Pragma:
      - no-cache
      Content-Type:
      - text/html
      Set-Cookie:
      - PHPSESSID=mdfkri8rimlue7e6ehujqrqdl4; path=/
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: null
  recorded_at: Wed, 08 Apr 2020 16:11:03 GMT
- request:
    method: get
    uri: https://www.davidimmo.com/cds2508-vente-appartement-2-pieces-paris-75019/appartement-16133.html
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Wed, 08 Apr 2020 16:11:03 GMT
      Server:
      - Apache/2.4.6 (CentOS) OpenSSL/1.0.2k-fips PHP/5.4.16
      X-Powered-By:
      - PHP/5.4.16
      Expires:
      - Thu, 19 Nov 1981 08:52:00 GMT
      Cache-Control:
      - no-store, no-cache, must-revalidate, post-check=0, pre-check=0
      Pragma:
      - no-cache
      Content-Type:
      - text/html
      Set-Cookie:
      - PHPSESSID=42utji9hpd048ocam3e2kg7lm6; path=/
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: null
  recorded_at: Wed, 08 Apr 2020 16:11:08 GMT
- request:
    method: get
    uri: https://www.davidimmo.com/cdc2247-vente-appartement-1-piece-paris-75018/appartement-16132.html
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Wed, 08 Apr 2020 16:11:08 GMT
      Server:
      - Apache/2.4.6 (CentOS) OpenSSL/1.0.2k-fips PHP/5.4.16
      X-Powered-By:
      - PHP/5.4.16
      Expires:
      - Thu, 19 Nov 1981 08:52:00 GMT
      Cache-Control:
      - no-store, no-cache, must-revalidate, post-check=0, pre-check=0
      Pragma:
      - no-cache
      Content-Type:
      - text/html
      Set-Cookie:
      - PHPSESSID=8kkucvde9e7vf5mqj500vjb3n6; path=/
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: null
  recorded_at: Wed, 08 Apr 2020 16:11:09 GMT
- request:
    method: get
    uri: https://www.davidimmo.com/cdc2246-vente-appartement-1-piece-paris-75018/appartement-16126.html
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Wed, 08 Apr 2020 16:11:09 GMT
      Server:
      - Apache/2.4.6 (CentOS) OpenSSL/1.0.2k-fips PHP/5.4.16
      X-Powered-By:
      - PHP/5.4.16
      Expires:
      - Thu, 19 Nov 1981 08:52:00 GMT
      Cache-Control:
      - no-store, no-cache, must-revalidate, post-check=0, pre-check=0
      Pragma:
      - no-cache
      Content-Type:
      - text/html
      Set-Cookie:
      - PHPSESSID=bjvmojtktu4tclnnbid8tc15n3; path=/
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: null
  recorded_at: Wed, 08 Apr 2020 16:11:09 GMT
- request:
    method: get
    uri: https://www.davidimmo.com/cdc2245-vente-appartement-1-piece-paris-75018/appartement-16125.html
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Wed, 08 Apr 2020 16:11:09 GMT
      Server:
      - Apache/2.4.6 (CentOS) OpenSSL/1.0.2k-fips PHP/5.4.16
      X-Powered-By:
      - PHP/5.4.16
      Expires:
      - Thu, 19 Nov 1981 08:52:00 GMT
      Cache-Control:
      - no-store, no-cache, must-revalidate, post-check=0, pre-check=0
      Pragma:
      - no-cache
      Content-Type:
      - text/html
      Set-Cookie:
      - PHPSESSID=tdnp67j04ume7ip8hq598q9dc1; path=/
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: null
  recorded_at: Wed, 08 Apr 2020 16:11:09 GMT
- request:
    method: get
    uri: https://www.davidimmo.com/cdt2236-vente-appartement-1-piece-paris-75008/appartement-16123.html
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Wed, 08 Apr 2020 16:11:10 GMT
      Server:
      - Apache/2.4.6 (CentOS) OpenSSL/1.0.2k-fips PHP/5.4.16
      X-Powered-By:
      - PHP/5.4.16
      Expires:
      - Thu, 19 Nov 1981 08:52:00 GMT
      Cache-Control:
      - no-store, no-cache, must-revalidate, post-check=0, pre-check=0
      Pragma:
      - no-cache
      Content-Type:
      - text/html
      Set-Cookie:
      - PHPSESSID=nb6songfvi57dngrocvlsuufb0; path=/
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: null
  recorded_at: Wed, 08 Apr 2020 16:11:14 GMT
- request:
    method: get
    uri: https://www.davidimmo.com/cdd2094-vente-appartement-2-pieces-paris-75018/appartement-16116.html
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Wed, 08 Apr 2020 16:11:14 GMT
      Server:
      - Apache/2.4.6 (CentOS) OpenSSL/1.0.2k-fips PHP/5.4.16
      X-Powered-By:
      - PHP/5.4.16
      Expires:
      - Thu, 19 Nov 1981 08:52:00 GMT
      Cache-Control:
      - no-store, no-cache, must-revalidate, post-check=0, pre-check=0
      Pragma:
      - no-cache
      Content-Type:
      - text/html
      Set-Cookie:
      - PHPSESSID=62kv31li5h783u7cmr900glak5; path=/
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: null
  recorded_at: Wed, 08 Apr 2020 16:11:40 GMT
- request:
    method: get
    uri: https://www.davidimmo.com/cdc2237-vente-appartement-2-pieces-paris-75018/appartement-16107.html
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Wed, 08 Apr 2020 16:11:40 GMT
      Server:
      - Apache/2.4.6 (CentOS) OpenSSL/1.0.2k-fips PHP/5.4.16
      X-Powered-By:
      - PHP/5.4.16
      Expires:
      - Thu, 19 Nov 1981 08:52:00 GMT
      Cache-Control:
      - no-store, no-cache, must-revalidate, post-check=0, pre-check=0
      Pragma:
      - no-cache
      Content-Type:
      - text/html
      Set-Cookie:
      - PHPSESSID=pcmk3skuphc9efb1dhs0e5cr35; path=/
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: null
  recorded_at: Wed, 08 Apr 2020 16:11:56 GMT
- request:
    method: get
    uri: https://www.davidimmo.com/cdt2217-vente-appartement-3-pieces-paris-75008/appartement-16077.html
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Wed, 08 Apr 2020 16:11:56 GMT
      Server:
      - Apache/2.4.6 (CentOS) OpenSSL/1.0.2k-fips PHP/5.4.16
      X-Powered-By:
      - PHP/5.4.16
      Expires:
      - Thu, 19 Nov 1981 08:52:00 GMT
      Cache-Control:
      - no-store, no-cache, must-revalidate, post-check=0, pre-check=0
      Pragma:
      - no-cache
      Content-Type:
      - text/html
      Set-Cookie:
      - PHPSESSID=f7epgcvm0j991uubg86g869b94; path=/
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: null
  recorded_at: Wed, 08 Apr 2020 16:11:57 GMT
recorded_with: VCR 5.1.0
