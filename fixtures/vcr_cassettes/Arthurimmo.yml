---
http_interactions:
- request:
    method: get
    uri: https://www.arthurimmo.com/recherche,incl_recherche_prestige_ajax.htm?_=1587115724817&ci=750056&idpays=250&idqfix=1&idtt=2&idtypebien=1,2&lang=fr&pres=prestige&surf_terrainmax=Max&surf_terrainmin=Min&surfacemax=Max&surfacemin=Min&tri=d_dt_crea
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Cache-Control:
      - private
      Content-Type:
      - text/html; charset=utf-8
      Server:
      - Microsoft-IIS/10.0
      X-Aspnet-Version:
      - 4.0.30319
      X-S:
      - PRD-IIS-ID3X-03
      Cache:
      - max-age=10
      Set-Cookie:
      - ASP.NET_SessionId=vax0yowfbico0nym1drpcx5r; path=/; HttpOnly; SameSite=Lax
      X-Powered-By:
      - ASP.NET
      Access-Control-Allow-Origin:
      - "*"
      Date:
      - Fri, 17 Apr 2020 10:05:43 GMT
      Content-Length:
      - '31502'
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: null
  recorded_at: Fri, 17 Apr 2020 10:05:44 GMT
- request:
    method: get
    uri: https://www.arthurimmo.com/annonces/achat/appartement/paris-20eme-75/28400.htm
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Cache-Control:
      - private
      Content-Type:
      - text/html; charset=utf-8
      Vary:
      - User-Agent
      Server:
      - Microsoft-IIS/10.0
      X-Aspnet-Version:
      - 4.0.30319
      X-S:
      - PRD-IIS-ID3X-03
      - PRD-IIS-ID3X-03
      Cache:
      - max-age=10
      - max-age=10
      Set-Cookie:
      - ASP.NET_SessionId=uxkzcmuyew542x3rz0huou5z; path=/; HttpOnly; SameSite=Lax
      X-Powered-By:
      - ASP.NET
      Access-Control-Allow-Origin:
      - "*"
      Date:
      - Fri, 17 Apr 2020 10:05:46 GMT
      Content-Length:
      - '86120'
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: null
  recorded_at: Fri, 17 Apr 2020 10:05:46 GMT
- request:
    method: get
    uri: https://www.arthurimmo.com/annonces/achat/appartement/paris-18eme-75/29941.htm
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Cache-Control:
      - private
      Content-Type:
      - text/html; charset=utf-8
      Vary:
      - User-Agent
      Server:
      - Microsoft-IIS/10.0
      X-Aspnet-Version:
      - 4.0.30319
      X-S:
      - PRD-IIS-ID3X-03
      - PRD-IIS-ID3X-03
      Cache:
      - max-age=10
      - max-age=10
      Set-Cookie:
      - ASP.NET_SessionId=i2xaqp32mrhx0wu5kvwuvpvz; path=/; HttpOnly; SameSite=Lax
      X-Powered-By:
      - ASP.NET
      Access-Control-Allow-Origin:
      - "*"
      Date:
      - Fri, 17 Apr 2020 10:05:47 GMT
      Content-Length:
      - '79405'
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: null
  recorded_at: Fri, 17 Apr 2020 10:05:47 GMT
- request:
    method: get
    uri: https://www.arthurimmo.com/annonces/achat/appartement/paris-19eme-75/29942.htm
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Cache-Control:
      - private
      Content-Type:
      - text/html; charset=utf-8
      Vary:
      - User-Agent
      Server:
      - Microsoft-IIS/10.0
      X-Aspnet-Version:
      - 4.0.30319
      X-S:
      - PRD-IIS-ID3X-03
      - PRD-IIS-ID3X-03
      Cache:
      - max-age=10
      - max-age=10
      Set-Cookie:
      - ASP.NET_SessionId=n1xdgynfjwnpcsk1i3kq24yz; path=/; HttpOnly; SameSite=Lax
      X-Powered-By:
      - ASP.NET
      Access-Control-Allow-Origin:
      - "*"
      Date:
      - Fri, 17 Apr 2020 10:05:47 GMT
      Content-Length:
      - '79939'
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: null
  recorded_at: Fri, 17 Apr 2020 10:05:48 GMT
- request:
    method: get
    uri: https://www.arthurimmo.com/annonces/achat/appartement/paris-18eme-75/29943.htm
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Cache-Control:
      - private
      Content-Type:
      - text/html; charset=utf-8
      Vary:
      - User-Agent
      Server:
      - Microsoft-IIS/10.0
      X-Aspnet-Version:
      - 4.0.30319
      X-S:
      - PRD-IIS-ID3X-03
      - PRD-IIS-ID3X-03
      Cache:
      - max-age=10
      - max-age=10
      Set-Cookie:
      - ASP.NET_SessionId=otn3gb53ryt1vt5izazrqwqs; path=/; HttpOnly; SameSite=Lax
      X-Powered-By:
      - ASP.NET
      Access-Control-Allow-Origin:
      - "*"
      Date:
      - Fri, 17 Apr 2020 10:05:48 GMT
      Content-Length:
      - '81025'
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: null
  recorded_at: Fri, 17 Apr 2020 10:05:49 GMT
- request:
    method: get
    uri: https://www.arthurimmo.com/annonces/achat/appartement/paris-20eme-75/35909.htm
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Cache-Control:
      - private
      Content-Type:
      - text/html; charset=utf-8
      Vary:
      - User-Agent
      Server:
      - Microsoft-IIS/10.0
      X-Aspnet-Version:
      - 4.0.30319
      X-S:
      - PRD-IIS-ID3X-03
      - PRD-IIS-ID3X-03
      Cache:
      - max-age=10
      - max-age=10
      Set-Cookie:
      - ASP.NET_SessionId=keuozskf3c21kfdka0itnjm0; path=/; HttpOnly; SameSite=Lax
      X-Powered-By:
      - ASP.NET
      Access-Control-Allow-Origin:
      - "*"
      Date:
      - Fri, 17 Apr 2020 10:05:49 GMT
      Content-Length:
      - '82666'
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: null
  recorded_at: Fri, 17 Apr 2020 10:05:50 GMT
- request:
    method: get
    uri: https://www.arthurimmo.com/annonces/achat/appartement/paris-19eme-75/19834.htm
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Cache-Control:
      - private
      Content-Type:
      - text/html; charset=utf-8
      Vary:
      - User-Agent
      Server:
      - Microsoft-IIS/10.0
      X-Aspnet-Version:
      - 4.0.30319
      X-S:
      - PRD-IIS-ID3X-03
      - PRD-IIS-ID3X-03
      Cache:
      - max-age=10
      - max-age=10
      Set-Cookie:
      - ASP.NET_SessionId=m4gnycikgjrstbuibl4untsm; path=/; HttpOnly; SameSite=Lax
      X-Powered-By:
      - ASP.NET
      Access-Control-Allow-Origin:
      - "*"
      Date:
      - Fri, 17 Apr 2020 10:05:51 GMT
      Content-Length:
      - '86044'
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: null
  recorded_at: Fri, 17 Apr 2020 10:05:51 GMT
recorded_with: VCR 5.1.0
