---
http_interactions:
- request:
    method: get
    uri: https://fr.foncia.com/achat/paris-75/appartement--maison/(params)/on/(tri)/date/(ordre)/desc
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Fri, 29 May 2020 14:31:53 GMT
      Set-Cookie:
      - current_property_search_url=%2Fachat%2Fparis-75%2Fappartement--maison%2F%28params%29%2Fon%2F%28tri%29%2Fdate%2F%28ordre%29%2Fdesc;
        path=/
      - eZSESSID=i16gnd0vjtikvedd1md4rtv5a0; path=/; secure; HttpOnly
      Cache-Control:
      - public, s-maxage=86400
      Content-Type:
      - text/html; charset=UTF-8
      Vary:
      - Accept-Encoding,Origin
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: null
  recorded_at: Fri, 29 May 2020 14:31:54 GMT
- request:
    method: get
    uri: https://fr.foncia.com/achat/paris-75013/appartement/1401753.htm
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 28 May 2020 16:38:28 GMT
      Cache-Control:
      - public, s-maxage=31536000
      Content-Type:
      - text/html; charset=UTF-8
      Vary:
      - Accept-Encoding,Origin
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: null
  recorded_at: Fri, 29 May 2020 14:31:54 GMT
- request:
    method: get
    uri: https://fr.foncia.com/achat/paris-75015/appartement/1375137.htm
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Wed, 27 May 2020 17:16:40 GMT
      Cache-Control:
      - public, s-maxage=31536000
      Content-Type:
      - text/html; charset=UTF-8
      Vary:
      - Accept-Encoding,Origin
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: null
  recorded_at: Fri, 29 May 2020 14:31:54 GMT
- request:
    method: get
    uri: https://fr.foncia.com/achat/paris-75015/appartement/1377669.htm
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Wed, 27 May 2020 17:16:40 GMT
      Cache-Control:
      - public, s-maxage=31536000
      Content-Type:
      - text/html; charset=UTF-8
      Vary:
      - Accept-Encoding,Origin
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: null
  recorded_at: Fri, 29 May 2020 14:31:54 GMT
- request:
    method: get
    uri: https://fr.foncia.com/achat/paris-75015/appartement/1377924.htm
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Wed, 27 May 2020 17:16:40 GMT
      Cache-Control:
      - public, s-maxage=31536000
      Content-Type:
      - text/html; charset=UTF-8
      Vary:
      - Accept-Encoding,Origin
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: null
  recorded_at: Fri, 29 May 2020 14:31:54 GMT
- request:
    method: get
    uri: https://fr.foncia.com/achat/paris-75014/appartement/1380008.htm
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Wed, 27 May 2020 17:16:37 GMT
      Cache-Control:
      - public, s-maxage=31536000
      Content-Type:
      - text/html; charset=UTF-8
      Vary:
      - Accept-Encoding,Origin
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: null
  recorded_at: Fri, 29 May 2020 14:31:55 GMT
- request:
    method: get
    uri: https://fr.foncia.com/achat/paris-75006/appartement/1384167.htm
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Fri, 29 May 2020 13:33:43 GMT
      Cache-Control:
      - public, s-maxage=31536000
      Content-Type:
      - text/html; charset=UTF-8
      Vary:
      - Accept-Encoding,Origin
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: null
  recorded_at: Fri, 29 May 2020 14:31:55 GMT
- request:
    method: get
    uri: https://fr.foncia.com/achat/paris-75015/appartement/1384196.htm
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Wed, 27 May 2020 17:16:46 GMT
      Cache-Control:
      - public, s-maxage=31536000
      Content-Type:
      - text/html; charset=UTF-8
      Vary:
      - Accept-Encoding,Origin
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: null
  recorded_at: Fri, 29 May 2020 14:31:55 GMT
- request:
    method: get
    uri: https://fr.foncia.com/achat/paris-75006/appartement/1387987.htm
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 28 May 2020 08:22:16 GMT
      Cache-Control:
      - public, s-maxage=31536000
      Content-Type:
      - text/html; charset=UTF-8
      Vary:
      - Accept-Encoding,Origin
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: null
  recorded_at: Fri, 29 May 2020 14:31:56 GMT
- request:
    method: get
    uri: https://fr.foncia.com/achat/paris-75012/appartement/1392724.htm
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 28 May 2020 08:17:03 GMT
      Cache-Control:
      - public, s-maxage=31536000
      Content-Type:
      - text/html; charset=UTF-8
      Vary:
      - Accept-Encoding,Origin
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: null
  recorded_at: Fri, 29 May 2020 14:31:56 GMT
- request:
    method: get
    uri: https://fr.foncia.com/achat/paris-75012/appartement/1393250.htm
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 28 May 2020 07:55:17 GMT
      Cache-Control:
      - public, s-maxage=31536000
      Content-Type:
      - text/html; charset=UTF-8
      Vary:
      - Accept-Encoding,Origin
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: null
  recorded_at: Fri, 29 May 2020 14:31:56 GMT
- request:
    method: get
    uri: https://fr.foncia.com/achat/paris-75007/appartement/1395907.htm
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Wed, 27 May 2020 18:00:14 GMT
      Cache-Control:
      - public, s-maxage=31536000
      Content-Type:
      - text/html; charset=UTF-8
      Vary:
      - Accept-Encoding,Origin
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: null
  recorded_at: Fri, 29 May 2020 14:31:56 GMT
- request:
    method: get
    uri: https://fr.foncia.com/achat/paris-75007/appartement/1401566.htm
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 28 May 2020 16:05:55 GMT
      Cache-Control:
      - public, s-maxage=31536000
      Content-Type:
      - text/html; charset=UTF-8
      Vary:
      - Accept-Encoding,Origin
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: null
  recorded_at: Fri, 29 May 2020 14:31:57 GMT
- request:
    method: get
    uri: https://fr.foncia.com/achat/paris-75002/appartement/1353503.htm
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Wed, 27 May 2020 19:14:19 GMT
      Cache-Control:
      - public, s-maxage=31536000
      Content-Type:
      - text/html; charset=UTF-8
      Vary:
      - Accept-Encoding,Origin
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: null
  recorded_at: Fri, 29 May 2020 14:31:57 GMT
- request:
    method: get
    uri: https://fr.foncia.com/achat/paris-75003/appartement/1371210.htm
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Fri, 29 May 2020 10:33:03 GMT
      Cache-Control:
      - public, s-maxage=31536000
      Content-Type:
      - text/html; charset=UTF-8
      Vary:
      - Accept-Encoding,Origin
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: null
  recorded_at: Fri, 29 May 2020 14:31:57 GMT
- request:
    method: get
    uri: https://fr.foncia.com/achat/chatou-78400--saint-germain-en-laye-78100--fourqueux-78112--le-vesinet-78110--chambourcy-78240--maisons-laffitte-78600--mareil-marly-78750--marly-le-roi-78160--l-etang-la-ville-78620--croissy-sur-seine-78290--montesson-78360--houilles-78800--sartrouville-78500--carrieres-sur-seine-78420--rueil-malmaison-92500/appartement--maison/(params)/on/(tri)/date/(ordre)/desc
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Fri, 29 May 2020 14:31:57 GMT
      Set-Cookie:
      - current_property_search_url=%2Fachat%2Fchatou-78400--saint-germain-en-laye-78100--fourqueux-78112--le-vesinet-78110--chambourcy-78240--maisons-laffitte-78600--mareil-marly-78750--marly-le-roi-78160--l-etang-la-ville-78620--croissy-sur-seine-78290--montesson-78360--houilles-78800--sartrouville-78500--carrieres-sur-seine-78420--rueil-malmaison-92500%2Fappartement--maison%2F%28params%29%2Fon%2F%28tri%29%2Fdate%2F%28ordre%29%2Fdesc;
        path=/
      - eZSESSID=e0d2qcta4t1kiklogpchbfbv03; path=/; secure; HttpOnly
      Cache-Control:
      - public, s-maxage=86400
      Content-Type:
      - text/html; charset=UTF-8
      Vary:
      - Accept-Encoding,Origin
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        PCFET0NUWVBFIGh0bWw+CjxodG1sIGxhbmc9ImZyIj4KPGhlYWQ+CiAgICA8bWV0YSBjaGFyc2V0PSJVVEYtOCI+CiAgICA8bWV0YSBodHRwLWVxdWl2PSJYLVVBLUNvbXBhdGlibGUiIGNvbnRlbnQ9IklFPUVkZ2UiPgogICAgPG1ldGEgbmFtZT0idmlld3BvcnQiIGNvbnRlbnQ9IndpZHRoPWRldmljZS13aWR0aCxpbml0aWFsLXNjYWxlPTEsbWluaW11bS1zY2FsZT0xIj4KCiAgICAgICAgICAgIDxtZXRhIG5hbWU9InJvYm90cyIgY29udGVudD0ibm9pbmRleCwgbm9mb2xsb3ciPgogICAgCiAgICA8dGl0bGU+QWNoYXQgaW1tb2JpbGllciBldCBlc3RpbWF0aW9uPC90aXRsZT4KCiAgICAgICAgICAgICAgICAgICAgICAgIDxtZXRhIG5hbWU9ImRlc2NyaXB0aW9uIiBjb250ZW50PSJBbm5vbmNlcyBhY2hhdCBpbW1vYmlsaWVyIGF2ZWMgRm9uY2lhIGV0IGVzdGltYXRpb24gZ3JhdHVpdGUgZCd1biBhcHBhcnRlbWVudCBvdSBtYWlzb24uIj4KCiAgICAgICAgICAgICAgICAgICAgICAgIDxsaW5rIHJlbD0iaWNvbiIgdHlwZT0iaW1hZ2UveC1pY29uIiBocmVmPSIvZmF2aWNvbi5pY28/dmVyc2lvbj0xNTg4MDk3NTU5Ij4KICAgICAgICA8bGluayByZWw9ImFwcGxlLXRvdWNoLWljb24tcmV0aW5hIiBocmVmPSIvYnVuZGxlcy9mb25jaWFpbnRlcm5ldC9pbWFnZXMvZW52aXJvbm1lbnQvdG91Y2gtaWNvbi1pcGhvbmUtcmV0aW5hLnBuZz92ZXJzaW9uPTE1ODgwOTc1NTkiPgoKICAgICAgICAgICAgICAgIDxtZXRhIG5hbWU9ImFwcGxpY2F0aW9uLW5hbWUiIGNvbnRlbnQ9IkZvbmNpYS5jb20iPgogICAgICAgIDxtZXRhIG5hbWU9Im1zYXBwbGljYXRpb24tVGlsZUNvbG9yIiBjb250ZW50PSIjMDA5ZWI5Ij4KICAgICAgICA8bWV0YSBuYW1lPSJtc2FwcGxpY2F0aW9uLXNxdWFyZTcweDcwbG9nbyIgY29udGVudD0idGlueS5wbmciPgogICAgICAgIDxtZXRhIG5hbWU9Im1zYXBwbGljYXRpb24tc3F1YXJlMTUweDE1MGxvZ28iIGNvbnRlbnQ9InNxdWFyZS5wbmciPgogICAgICAgIDxtZXRhIG5hbWU9Im1zYXBwbGljYXRpb24td2lkZTMxMHgxNTBsb2dvIiBjb250ZW50PSJ3aWRlLnBuZyI+CiAgICAgICAgPG1ldGEgbmFtZT0ibXNhcHBsaWNhdGlvbi1zcXVhcmUzMTB4MzEwbG9nbyIgY29udGVudD0ibGFyZ2UucG5nIj4KCiAgICAgICAgICAgICAgICA8bWV0YSBwcm9wZXJ0eT0ib2c6dGl0bGUiIGNvbnRlbnQ9IkFjaGF0IGltbW9iaWxpZXIgZXQgZXN0aW1hdGlvbiAtIEZPTkNJQSI+CiAgICAgICAgPG1ldGEgcHJvcGVydHk9Im9nOnNpdGVfbmFtZSIgY29udGVudD0iRk9OQ0lBIj4KICAgICAgICA8bWV0YSBwcm9wZXJ0eT0ib2c6ZGVzY3JpcHRpb24iIGNvbnRlbnQ9IkFubm9uY2VzIGFjaGF0IGltbW9iaWxpZXIgYXZlYyBGb25jaWEgZXQgZXN0aW1hdGlvbiBncmF0dWl0ZSBkJ3VuIGFwcGFydGVtZW50IG91IG1haXNvbi4iPgogICAgICAgIDxtZXRhIHByb3BlcnR5PSJvZzp1cmwiIGNvbnRlbnQ9Imh0dHBzOi8vZnIuZm9uY2lhLmNvbS9hY2hhdC9jaGF0b3UtNzg0MDAtLXNhaW50LWdlcm1haW4tZW4tbGF5ZS03ODEwMC0tZm91cnF1ZXV4LTc4MTEyLS1sZS12ZXNpbmV0LTc4MTEwLS1jaGFtYm91cmN5LTc4MjQwLS1tYWlzb25zLWxhZmZpdHRlLTc4NjAwLS1tYXJlaWwtbWFybHktNzg3NTAtLW1hcmx5LWxlLXJvaS03ODE2MC0tbC1ldGFuZy1sYS12aWxsZS03ODYyMC0tY3JvaXNzeS1zdXItc2VpbmUtNzgyOTAtLW1vbnRlc3Nvbi03ODM2MC0taG91aWxsZXMtNzg4MDAtLXNhcnRyb3V2aWxsZS03ODUwMC0tY2FycmllcmVzLXN1ci1zZWluZS03ODQyMC0tcnVlaWwtbWFsbWFpc29uLTkyNTAwL2FwcGFydGVtZW50LS1tYWlzb24vKHBhcmFtcykvb24vKHRyaSkvZGF0ZS8ob3JkcmUpL2Rlc2MiPgogICAgICAgIDxtZXRhIHByb3BlcnR5PSJvZzppbWFnZSIgY29udGVudD0iaHR0cHM6Ly9mci5mb25jaWEuY29tL3Zhci9mb25jaWEvc3RvcmFnZS9pbWFnZXMvbWVkaWEvaW1hZ2VzL2dyb3VwZS9yZXNlYXV4LXNvY2lhdXgvNTcyNC0yLWZyZS1GUi9yZXNlYXV4LXNvY2lhdXguanBnIj4KCiAgICAgICAgPG1ldGEgbmFtZT0idHdpdHRlcjp0aXRsZSIgY29udGVudD0iQWNoYXQgaW1tb2JpbGllciBldCBlc3RpbWF0aW9uIC0gRk9OQ0lBIj4KICAgICAgICA8bWV0YSBuYW1lPSJ0d2l0dGVyOmltYWdlOnNyYyIgY29udGVudD0iaHR0cHM6Ly9mci5mb25jaWEuY29tL3Zhci9mb25jaWEvc3RvcmFnZS9pbWFnZXMvbWVkaWEvaW1hZ2VzL2dyb3VwZS9yZXNlYXV4LXNvY2lhdXgvNTcyNC0yLWZyZS1GUi9yZXNlYXV4LXNvY2lhdXguanBnIj4KICAgICAgICA8bWV0YSBuYW1lPSJ0d2l0dGVyOmRlc2NyaXB0aW9uIiBjb250ZW50PSJBbm5vbmNlcyBhY2hhdCBpbW1vYmlsaWVyIGF2ZWMgRm9uY2lhIGV0IGVzdGltYXRpb24gZ3JhdHVpdGUgZCd1biBhcHBhcnRlbWVudCBvdSBtYWlzb24uIj4KICAgICAgICA8bWV0YSBuYW1lPSJ0d2l0dGVyOmNhcmQiIGNvbnRlbnQ9InN1bW1hcnkiPgogICAgICAgIDxtZXRhIG5hbWU9InR3aXR0ZXI6c2l0ZSIgY29udGVudD0iQGZvbmNpYSI+CiAgICAKICAgICAgICAKICAgICAgICAgICAgICAgIDxsaW5rIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0iL2NvbXBpbGVkL3N0eWxlcy5jc3M/dmVyc2lvbj0xNTg4MDk3NTU5Ij4KICAgIAogICAgPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPgogICAgdmFyIHRhcnRlYXVjaXRyb25Gb3JjZUNETiA9ICIvYnVuZGxlcy9mb25jaWFpbnRlcm5ldC9qcy90YXJ0ZWF1Y2l0cm9uLyI7Cjwvc2NyaXB0PgoKICAgIDxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0IiBzcmM9Ii9jb21waWxlZC90YXJ0ZWF1Y2l0cm9uLmpzP3ZlcnNpb249MTU4ODA5NzU1OSI+PC9zY3JpcHQ+CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNjcmlwdD53aW5kb3cuZm9uY2lhX2ludGVybmV0PXtwYXJhbXM6e319PC9zY3JpcHQ+CiAgICAgICAgPCEtLVtpZiBJRSA5XT48c2NyaXB0PmRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5jbGFzc05hbWUrPScgSUU5Jzs8L3NjcmlwdD48IVtlbmRpZl0tLT4KPCEtLVtpZiBJRSAxMF0+PHNjcmlwdD5kb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuY2xhc3NOYW1lKz0nIElFMTAnOzwvc2NyaXB0PjwhW2VuZGlmXS0tPgoKPHNjcmlwdD4KIWZ1bmN0aW9uKGEsYil7ImZ1bmN0aW9uIj09dHlwZW9mIGRlZmluZSYmZGVmaW5lLmFtZD9kZWZpbmUoW10sZnVuY3Rpb24oKXtyZXR1cm4gYS5zdmc0ZXZlcnlib2R5PWIoKX0pOiJvYmplY3QiPT10eXBlb2YgZXhwb3J0cz9tb2R1bGUuZXhwb3J0cz1iKCk6YS5zdmc0ZXZlcnlib2R5PWIoKX0odGhpcyxmdW5jdGlvbigpe2Z1bmN0aW9uIGEoYSxiKXtpZihiKXt2YXIgYz1kb2N1bWVudC5jcmVhdGVEb2N1bWVudEZyYWdtZW50KCksZD0hYS5nZXRBdHRyaWJ1dGUoInZpZXdCb3giKSYmYi5nZXRBdHRyaWJ1dGUoInZpZXdCb3giKTtkJiZhLnNldEF0dHJpYnV0ZSgidmlld0JveCIsZCk7Zm9yKHZhciBlPWIuY2xvbmVOb2RlKCEwKTtlLmNoaWxkTm9kZXMubGVuZ3RoOyljLmFwcGVuZENoaWxkKGUuZmlyc3RDaGlsZCk7YS5hcHBlbmRDaGlsZChjKX19ZnVuY3Rpb24gYihiKXtiLm9ucmVhZHlzdGF0ZWNoYW5nZT1mdW5jdGlvbigpe2lmKDQ9PT1iLnJlYWR5U3RhdGUpe3ZhciBjPWIuX2NhY2hlZERvY3VtZW50O2N8fChjPWIuX2NhY2hlZERvY3VtZW50PWRvY3VtZW50LmltcGxlbWVudGF0aW9uLmNyZWF0ZUhUTUxEb2N1bWVudCgiIiksYy5ib2R5LmlubmVySFRNTD1iLnJlc3BvbnNlVGV4dCxiLl9jYWNoZWRUYXJnZXQ9e30pLGIuX2VtYmVkcy5zcGxpY2UoMCkubWFwKGZ1bmN0aW9uKGQpe3ZhciBlPWIuX2NhY2hlZFRhcmdldFtkLmlkXTtlfHwoZT1iLl9jYWNoZWRUYXJnZXRbZC5pZF09Yy5nZXRFbGVtZW50QnlJZChkLmlkKSksYShkLnN2ZyxlKX0pfX0sYi5vbnJlYWR5c3RhdGVjaGFuZ2UoKX1mdW5jdGlvbiBjKGMpe2Z1bmN0aW9uIGQoKXtmb3IodmFyIGM9MDtjPGwubGVuZ3RoOyl7dmFyIGc9bFtjXSxoPWcucGFyZW50Tm9kZTtpZihoJiYvc3ZnL2kudGVzdChoLm5vZGVOYW1lKSl7dmFyIGk9Zy5nZXRBdHRyaWJ1dGUoInhsaW5rOmhyZWYiKTtpZihlJiYoIWYudmFsaWRhdGV8fGYudmFsaWRhdGUoaSxoLGcpKSl7aC5yZW1vdmVDaGlsZChnKTt2YXIgbT1pLnNwbGl0KCIjIiksbj1tLnNoaWZ0KCksbz1tLmpvaW4oIiMiKTtpZihuLmxlbmd0aCl7dmFyIHA9altuXTtwfHwocD1qW25dPW5ldyBYTUxIdHRwUmVxdWVzdCxwLm9wZW4oIkdFVCIsbikscC5zZW5kKCkscC5fZW1iZWRzPVtdKSxwLl9lbWJlZHMucHVzaCh7c3ZnOmgsaWQ6b30pLGIocCl9ZWxzZSBhKGgsZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQobykpfX1lbHNlKytjfWsoZCw2Nyl9dmFyIGUsZj1PYmplY3QoYyksZz0vXGJUcmlkZW50XC9bNTY3XVxifFxiTVNJRSAoPzo5fDEwKVwuMFxiLyxoPS9cYkFwcGxlV2ViS2l0XC8oXGQrKVxiLyxpPS9cYkVkZ2VcLzEyXC4oXGQrKVxiLztlPSJwb2x5ZmlsbCJpbiBmP2YucG9seWZpbGw6Zy50ZXN0KG5hdmlnYXRvci51c2VyQWdlbnQpfHwobmF2aWdhdG9yLnVzZXJBZ2VudC5tYXRjaChpKXx8W10pWzFdPDEwNTQ3fHwobmF2aWdhdG9yLnVzZXJBZ2VudC5tYXRjaChoKXx8W10pWzFdPDUzNzt2YXIgaj17fSxrPXdpbmRvdy5yZXF1ZXN0QW5pbWF0aW9uRnJhbWV8fHNldFRpbWVvdXQsbD1kb2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZSgidXNlIik7ZSYmZCgpfXJldHVybiBjfSk7Cjwvc2NyaXB0Pgo8c2NyaXB0PnN2ZzRldmVyeWJvZHkoKTwvc2NyaXB0PgogICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaW5rIHJlbD0ibmV4dCIgaHJlZj0iL2FjaGF0L2NoYXRvdS03ODQwMC0tc2FpbnQtZ2VybWFpbi1lbi1sYXllLTc4MTAwLS1mb3VycXVldXgtNzgxMTItLWxlLXZlc2luZXQtNzgxMTAtLWNoYW1ib3VyY3ktNzgyNDAtLW1haXNvbnMtbGFmZml0dGUtNzg2MDAtLW1hcmVpbC1tYXJseS03ODc1MC0tbWFybHktbGUtcm9pLTc4MTYwLS1sLWV0YW5nLWxhLXZpbGxlLTc4NjIwLS1jcm9pc3N5LXN1ci1zZWluZS03ODI5MC0tbW9udGVzc29uLTc4MzYwLS1ob3VpbGxlcy03ODgwMC0tc2FydHJvdXZpbGxlLTc4NTAwLS1jYXJyaWVyZXMtc3VyLXNlaW5lLTc4NDIwLS1ydWVpbC1tYWxtYWlzb24tOTI1MDAvYXBwYXJ0ZW1lbnQtLW1haXNvbi9wYWdlLTIvKHBhcmFtcykvb24vKHRyaSkvZGF0ZS8ob3JkcmUpL2Rlc2MiIC8+CiAgICAgICAgICAgIDwvaGVhZD4KCgo8Ym9keT4KCiAgICA8c2NyaXB0PgogICAgICAgIHZhciBvYmplY3QgPSB7CiAgICAgICAgICAgICJ0eXBlU2l0ZSI6ICJnw6luw6lyaXF1ZSIsCiAgICAgICAgICAgICJlc3BhY2UiOiAiZ2VuZXJhbCIsCiAgICAgICAgICAgICJ0eXBlUGFnZSI6ICJjbGFzc2lxdWUiLAogICAgICAgICAgICAidGhlbWUiOiAiYWNoYXQiCiAgICAgICAgfTsKCiAgICAgICAgICAgICAgICAgICAgb2JqZWN0LnRlbXBsYXRlID0gImNhdGFsb2d1ZSI7CiAgICAgICAgCgogICAgICAgIGRhdGFMYXllciA9IFtvYmplY3RdOwoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkYXRhTGF5ZXIucHVzaCh7ImN1c3RvbUNhdGVnb3JpZSI6ICJuYXZpZ2F0aW9uIiwgImN1c3RvbUFjdGlvbiI6ICJub21icmVSZXN1bHRhdHNSZWNoZXJjaGUiLCAiY3VzdG9tTGFiZWwiOiA3OSwgImV2ZW50IjogImN1c3RvbUV2ZW50In0pOwogICAgICAgICAgICAgICAgICAgICAgICA8L3NjcmlwdD4KCjxzY3JpcHQ+CiAgICBkYXRhTGF5ZXIgPSB3aW5kb3cuZGF0YUxheWVyIHx8IFtdOwoKICAgIHZhciBjdXJyZW50UGF0aCA9IHdpbmRvdy5sb2NhdGlvbi5wYXRobmFtZTsKCiAgICAgICAgICAgIHZhciBjb21tb25VcHRpbGFiVmFsdWVzID0gewogICAgICAgICJ0eXBlU2l0ZSI6ICJnw6luw6lyaXF1ZSIsIC8vIEZldGNoZWQgZnJvbSBsYXlvdXQgZ2xvYmFscwogICAgICAgICJlc3BhY2UiOiAiZ2VuZXJhbCIsCiAgICAgICAgInR5cGVQYWdlIjogImNsYXNzaXF1ZSIsCiAgICAgICAgInRlbXBsYXRlIjogImF1dHJlcyIKICAgIH07CgogICAgLy8gRGVwZW5kaW5nIG9uIGN1cnJlbnQgcGF0aG5hbWUsIHdlIGRpc3BhdGNoIGFuIGV2ZW50LCB1c2VkIGZvciBCYWNrLU9mZmljZSBwYWdlcwogICAgc3dpdGNoICh0cnVlKSB7CiAgICAgICAgY2FzZSBjdXJyZW50UGF0aC5pbmRleE9mKCIvYWNoYXQvIikgPT09IDA6IC8vIFBhZ2UgYWNoYXQgKGF2ZWMgcmVjaGVyY2hlIGVuIGNvdXJzKQogICAgICAgICAgICAvLyBFdmVudAogICAgICAgICAgICBkYXRhTGF5ZXIucHVzaCh7ImN1c3RvbUNhdGVnb3JpZSI6ICJlbmdhZ2VtZW50IiwgImN1c3RvbUFjdGlvbiI6ICJpbnRlcmV0IiwgImN1c3RvbUxhYmVsIjogIkFjaGV0ZXIiLCAiZXZlbnQiOiAiY3VzdG9tRXZlbnQifSk7CiAgICAgICAgICAgIGJyZWFrOwogICAgICAgIGNhc2UgY3VycmVudFBhdGguaW5kZXhPZigiL2xvY2F0aW9uLyIpID09PSAwOiAvLyBQYWdlIGxvY2F0aW9uIChhdmVjIHJlY2hlcmNoZSBlbiBjb3VycykKICAgICAgICAgICAgLy8gRXZlbnQKICAgICAgICAgICAgZGF0YUxheWVyLnB1c2goeyJjdXN0b21DYXRlZ29yaWUiOiAiZW5nYWdlbWVudCIsICJjdXN0b21BY3Rpb24iOiAiaW50ZXJldCIsICJjdXN0b21MYWJlbCI6ICJMb3VlciIsICJldmVudCI6ICJjdXN0b21FdmVudCJ9KTsKICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgY2FzZSBjdXJyZW50UGF0aC5pbmRleE9mKCIvcmVjaGVyY2hlL3BhY2stZWFzeWxvYyIpID09PSAwOiAvLyBMYSBwYWdlIHBhY2stZWFzeWxvYwogICAgICAgICAgICBjb21tb25VcHRpbGFiVmFsdWVzLnRoZW1lID0gImxvY2F0aW9uIjsKICAgICAgICAgICAgZGF0YUxheWVyLnB1c2goY29tbW9uVXB0aWxhYlZhbHVlcyk7CiAgICAgICAgICAgIGJyZWFrOwogICAgICAgIGNhc2UgY3VycmVudFBhdGguaW5kZXhPZigiL3JlY2hlcmNoZS9hY2hldGVyLXVuLWJpZW4iKSA9PT0gMDogLy8gTGEgcGFnZSBhY2hldGVyIHVuIGJpZW4KICAgICAgICAgICAgY29tbW9uVXB0aWxhYlZhbHVlcy50aGVtZSA9ICJhY2hhdCI7CiAgICAgICAgICAgIGRhdGFMYXllci5wdXNoKGNvbW1vblVwdGlsYWJWYWx1ZXMpOwogICAgICAgICAgICBicmVhazsKICAgICAgICBjYXNlIGN1cnJlbnRQYXRoLmluZGV4T2YoIi9sZS1ncm91cGUiKSA9PT0gMDogLy8gUGFnZSBvdSBzb3VzLXBhZ2VzICJMZSBncm91cGUiCiAgICAgICAgICAgIGNvbW1vblVwdGlsYWJWYWx1ZXMudGhlbWUgPSAiZ3JvdXBlIjsKICAgICAgICAgICAgZGF0YUxheWVyLnB1c2goY29tbW9uVXB0aWxhYlZhbHVlcyk7CiAgICAgICAgICAgIGJyZWFrOwogICAgICAgIGNhc2UgY3VycmVudFBhdGguaW5kZXhPZigiL2wtaW52ZXN0aXNzZW1lbnQtaW1tb2JpbGllciIpID09PSAwOiAvLyBQYWdlIG91IHNvdXMtcGFnZXMgIkwnaW52ZXN0aXNzZW1lbnQgaW1tb2JpbGllciIKICAgICAgICAgICAgY29tbW9uVXB0aWxhYlZhbHVlcy50aGVtZSA9ICJpbnZlc3Rpc3NlbWVudCI7CiAgICAgICAgICAgIGRhdGFMYXllci5wdXNoKGNvbW1vblVwdGlsYWJWYWx1ZXMpOwogICAgICAgICAgICBicmVhazsKICAgICAgICBjYXNlIGN1cnJlbnRQYXRoLmluZGV4T2YoIi9mYWlyZS1nZXJlci1tYS1sb2NhdGlvbi1wYXItZm9uY2lhIikgPT09IDA6IC8vIFBhZ2Ugb3Ugc291cy1wYWdlcyAiRmFpcmUgZ8OpcmVyIG1hIGxvY2F0aW9uIgogICAgICAgICAgICBjb21tb25VcHRpbGFiVmFsdWVzLnRoZW1lID0gImdlc3Rpb25Mb2NhdGl2ZSI7CiAgICAgICAgICAgIGRhdGFMYXllci5wdXNoKGNvbW1vblVwdGlsYWJWYWx1ZXMpOwogICAgICAgICAgICBicmVhazsKICAgICAgICBjYXNlIGN1cnJlbnRQYXRoLmluZGV4T2YoIi9mYWlyZS1nZXJlci11bmUtY29wcm9wcmlldGUiKSA9PT0gMDogLy8gUGFnZSBvdSBzb3VzLXBhZ2VzICJGYWlyZSBnw6lyZXIgdW5lIGNvcHJvcHJpw6l0w6kiCiAgICAgICAgICAgIGNvbW1vblVwdGlsYWJWYWx1ZXMudGhlbWUgPSAiY29wcm9wcmlldGUiOwogICAgICAgICAgICBkYXRhTGF5ZXIucHVzaChjb21tb25VcHRpbGFiVmFsdWVzKTsKICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgY2FzZSBjdXJyZW50UGF0aC5pbmRleE9mKCIvc2VydmljZXMiKSA9PT0gMDogLy8gUGFnZSBvdSBzb3VzLXBhZ2VzICJGYWlyZSBnw6lyZXIgdW5lIGNvcHJvcHJpw6l0w6kiCiAgICAgICAgICAgIGNvbW1vblVwdGlsYWJWYWx1ZXMudGhlbWUgPSAic2VydmljZXMiOwogICAgICAgICAgICBkYXRhTGF5ZXIucHVzaChjb21tb25VcHRpbGFiVmFsdWVzKTsKICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgY2FzZSBjdXJyZW50UGF0aCA9PT0gJy9tb3QtZGUtcGFzc2Utb3VibGllJzoKICAgICAgICAgICAgY29tbW9uVXB0aWxhYlZhbHVlcy50ZW1wbGF0ZSA9ICJob21lcGFnZSI7CiAgICAgICAgICAgIGRhdGFMYXllci5wdXNoKGNvbW1vblVwdGlsYWJWYWx1ZXMpOwogICAgICAgICAgICBicmVhazsKICAgICAgICBjYXNlIGN1cnJlbnRQYXRoID09PSAnLyc6CiAgICAgICAgICAgIGNvbW1vblVwdGlsYWJWYWx1ZXMudGVtcGxhdGUgPSAiaG9tZXBhZ2UiOwogICAgICAgICAgICBkYXRhTGF5ZXIucHVzaChjb21tb25VcHRpbGFiVmFsdWVzKTsKICAgICAgICAgICAgYnJlYWs7CiAgICB9CiAgICAKICAgIDwvc2NyaXB0Pgo8bm9zY3JpcHQ+PGlmcmFtZSBzcmM9Ii8vd3d3Lmdvb2dsZXRhZ21hbmFnZXIuY29tL25zLmh0bWw/aWQ9R1RNLVBCQlpXRCIgaGVpZ2h0PSIwIiB3aWR0aD0iMCIgc3R5bGU9ImRpc3BsYXk6bm9uZTt2aXNpYmlsaXR5OmhpZGRlbiI+PC9pZnJhbWU+PC9ub3NjcmlwdD4KPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPgogICAgdGFydGVhdWNpdHJvbi51c2VyLmdvb2dsZXRhZ21hbmFnZXJJZCA9ICdHVE0tUEJCWldEJzsKICAgICh0YXJ0ZWF1Y2l0cm9uLmpvYiA9IHRhcnRlYXVjaXRyb24uam9iIHx8IFtdKS5wdXNoKCdnb29nbGV0YWdtYW5hZ2VyX2ZvbmNpYScpOwoKICAgIHRhcnRlYXVjaXRyb24udXNlci5BQlRhc3R5SWQgPSAiMGU2ZDllYTI0NzI4MjA3MmNlM2E4NDEzMGZjOGU3MTIiOwogICAgKHRhcnRlYXVjaXRyb24uam9iID0gdGFydGVhdWNpdHJvbi5qb2IgfHwgW10pLnB1c2goJ2FidGFzdHlfZm9uY2lhJyk7Cjwvc2NyaXB0PgoKPHNjcmlwdD4KICAgICAgICBkYXRhTGF5ZXIgPSB3aW5kb3cuZGF0YUxheWVyIHx8IFtdOwoKICAgICAgICBmdW5jdGlvbiBkZWZlcihtZXRob2QpIHsKICAgICAgICBpZiAod2luZG93LmpRdWVyeSkKICAgICAgICAgICAgbWV0aG9kKCk7CiAgICAgICAgZWxzZQogICAgICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgICAgIGRlZmVyKG1ldGhvZCkKICAgICAgICAgICAgfSwgNTApOwogICAgfQoKICAgIAogICAgCjwvc2NyaXB0PgoKPGRpdiBjbGFzcz0iQm9keVdyYXBwZXIiPgoKICAgIDxoZWFkZXIgY2xhc3M9IkhlYWRlciIgcm9sZT0iYmFubmVyIj4KCiAgICAKICAgIDxkaXYgY2xhc3M9IkhlYWRlci10b3AiPgoKICAgICAgICAgICAgPHVsIGNsYXNzPSJIZWFkZXItdG9wTmF2IEhlYWRlci10b3AtbGVmdCI+CgogICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9mci5mb25jaWEuY29tL25vdHJlLWFtYml0aW9uIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkYXRhLWJlaGF0PSJMZWdyb3VwZSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIExlIGdyb3VwZQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHA6Ly9jYXJyaWVyZS5mb25jaWEuY29tLyIKICAgICAgICAgICAgICAgICAgICAgICAgdGFyZ2V0PSJfYmxhbmsiICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkYXRhLWJlaGF0PSJDYXJyacOocmUiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBDYXJyacOocmUKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwOi8vZm9uY2lhLXJlY3J1dGUudGFsZW50LXNvZnQuY29tL2FjY3VlaWwuYXNweCIKICAgICAgICAgICAgICAgICAgICAgICAgdGFyZ2V0PSJfYmxhbmsiICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkYXRhLWJlaGF0PSJOb3NvZmZyZXNk4oCZZW1wbG9pIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgTm9zIG9mZnJlcyBk4oCZZW1wbG9pCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9mci5mb25jaWEuY29tL21vbi1ndWlkZS1pbW1vIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkYXRhLWJlaGF0PSJNb25HdWlkZUltbW8iPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBNb24gR3VpZGUgSW1tbwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHA6Ly9iZWxsZXNwZXJzb25uZXMuZm9uY2lhLmNvbS8iCiAgICAgICAgICAgICAgICAgICAgICAgIHRhcmdldD0iX2JsYW5rIiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1iZWhhdD0iQmVsbGVzcGVyc29ubmVzIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgQmVsbGVzIHBlcnNvbm5lcwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL2ZyLmZvbmNpYS5jb20vYWN0dWFsaXRlcy1lbi1wZXJpb2RlLWRlLWRlY29uZmluZW1lbnQiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU9ImNvbG9yOiAjRkE4QTAwO2ZvbnQtd2VpZ2h0OiBib2xkOyIgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtYmVoYXQ9IkFjdHVhbGl0w6lzIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgQWN0dWFsaXTDqXMKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgIDwvdWw+CiAgICAKICAgIDx1bCBjbGFzcz0iSGVhZGVyLXRvcE5hdiBIZWFkZXItdG9wLXJpZ2h0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgIDxhICBjbGFzcz0iSWNvbi0tcG9pbnRlciIgaHJlZj0iaHR0cDovL2FnZW5jZS5mb25jaWEuY29tIiBkYXRhLWJlaGF0PSJoZWFkZXJUcm91dmVyQWdlbmNlTGllbiI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBUcm91dmVyIHVuZSBhZ2VuY2UKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdWw+CjwvZGl2PgoKCiAgICA8cCBjbGFzcz0iSGVhZGVyLXNraXBsaW5rIj4KICAgICAgICA8YSBjbGFzcz0iSGVhZGVyLWxvZ28iIGhyZWY9Ii8iPgogICAgICAgICAgICA8aW1nIGNsYXNzPSJIZWFkZXItbG9nby0tZGVza3RvcCIgd2lkdGg9IjY0cHgiIGhlaWdodD0iNjRweCIgc3JjPSJodHRwczovL3Bob3Rvcy5mb25jaWEubmV0L2ltYWdlcy9Gb25jaWFfbG9nb2hfNjZfNjYucG5nIiBhbHQ9IkZvbmNpYSI+CiAgICAgICAgICAgIDxpbWcgY2xhc3M9IkhlYWRlci1sb2dvLS1tb2JpbGUiIHdpZHRoPSIxMDhweCIgaGVpZ2h0PSIzMHB4IiBzcmM9Imh0dHBzOi8vcGhvdG9zLmZvbmNpYS5uZXQvaW1hZ2VzL0ZvbmNpYV9ob21lcGFnZXZfMTA4XzMwLnBuZyIgYWx0PSJGb25jaWEiPgogICAgICAgIDwvYT4KICAgICAgICA8YnV0dG9uIGNsYXNzPSJIZWFkZXItc2tpcGxpbmstbWVudSBJY29uLS1tZW51IiBkYXRhLXdpZGdldD0iUGFuZWxTbGlkZS10cmlnZXIiIGRhdGEtd2lkZ2V0LXNpZGU9ImxlZnQiPk1lbnU8L2J1dHRvbj4KICAgICAgICA8YSBocmVmPSIvbG9naW4iIGNsYXNzPSJIZWFkZXItc2tpcGxpbmstdXNlciBJY29uLS11c2VyLW1hbGUyIj5NeUZPTkNJQTwvYT4KICAgIDwvcD4KCiAgICA8bmF2IGNsYXNzPSJNYWluTmF2IiByb2xlPSJuYXZpZ2F0aW9uIj4KICAgICAgICA8dWwgY2xhc3M9Ik1haW5OYXYtbGlzdCBIZWFkZXItdG9wTmF2Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGkgY2xhc3M9Ik1haW5OYXYtaXRlbSBNYWluTmF2LWl0ZW0tLWxvY2F0aW9uIGZpcnN0Ij4gICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZnIuZm9uY2lhLmNvbS9hY2hhdCIgICAgPkFjaGV0ZXIgPHNwYW4+b3UgbG91ZXI8L3NwYW4+PC9hPiAgICAgICAgICAgIAogICAgPC9saT4KCiAgICAgICAgPGxpIGNsYXNzPSJNYWluTmF2LWl0ZW0gTWFpbk5hdi1pdGVtLS1nZXN0aW9uIj4gICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZnIuZm9uY2lhLmNvbS9mYWlyZS1nZXJlci1tYS1sb2NhdGlvbi1wYXItZm9uY2lhIiAgICA+RmFpcmUgZ8OpcmVyIDxzcGFuPm1hIGxvY2F0aW9uPC9zcGFuPjwvYT4gICAgICAgICAgICAKICAgIDwvbGk+CgogICAgICAgIDxsaSBjbGFzcz0iTWFpbk5hdi1pdGVtIE1haW5OYXYtaXRlbS0tY29wcm8iPiAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9mci5mb25jaWEuY29tL2ZhaXJlLWdlcmVyLXVuZS1jb3Byb3ByaWV0ZSIgICAgPkZhaXJlIGfDqXJlciA8c3Bhbj51bmUgY29wcm9wcmnDqXTDqTwvc3Bhbj48L2E+ICAgICAgICAgICAgCiAgICA8L2xpPgoKICAgICAgICA8bGkgY2xhc3M9Ik1haW5OYXYtaXRlbSBNYWluTmF2LWl0ZW0tLXZlbnRlIj4gICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZnIuZm9uY2lhLmNvbS9lc3RpbWVyLWV0LXZlbmRyZSIgICAgPkVzdGltZXIgPHNwYW4+ZXQgdmVuZHJlPC9zcGFuPjwvYT4gICAgICAgICAgICAKICAgIDwvbGk+CgogICAgICAgIDxsaSBjbGFzcz0iTWFpbk5hdi1pdGVtIE1haW5OYXYtaXRlbS0taW52ZXN0aXNzZW1lbnQiPiAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9mci5mb25jaWEuY29tL2wtaW52ZXN0aXNzZW1lbnQtaW1tb2JpbGllciIgICAgPkludmVzdGlyIDxzcGFuPmRhbnMgbCYjMDM5O2ltbW9iaWxpZXI8L3NwYW4+PC9hPiAgICAgICAgICAgIAogICAgPC9saT4KCiAgICAgICAgPGxpIGNsYXNzPSJNYWluTmF2LWl0ZW0gTWFpbk5hdi1pdGVtLS1sb2NhdGlvbnZhY2FuY2VzIGxhc3QiPiAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly93d3cuZm9uY2lhLWxvY2F0aW9uLXZhY2FuY2VzLmZyLyN1dG1fc291cmNlPWZvbmNpYS5jb20mYW1wO3V0bV9tZWRpdW09bGllbiZhbXA7dXRtX2NhbXBhaWduPWZvbmNpYS5jb20iICAgICB0YXJnZXQ9Il9ibGFuayI+TG9jYXRpb24gPHNwYW4+VmFjYW5jZXM8L3NwYW4+PC9hPiAgICAgICAgICAgIAogICAgPC9saT4KCgogICAgCgoKICAgICAgICAgICAgPGxpIGNsYXNzPSJNYWluTmF2LWl0ZW0gTWFpbk5hdi1pdGVtLS11c2VyIGxhc3QiPgogICAgICAgICAgICAgICAgPGEgaHJlZj0iL2xvZ2luIj5NeUZPTkNJQSA8c3Bhbj5FU1BBQ0UgQ0xJRU5UPC9zcGFuPjwvYT4KICAgICAgICAgICAgPC9saT4KICAgICAgICA8L3VsPgogICAgPC9uYXY+CgogICAgPGRpdiBjbGFzcz0iVXNlck5hdiIgaWQ9Ik15Rm9uY2lhTWVudSI+CgogICAgPGRpdiBjbGFzcz0iVXNlck5hdi1vdmVyZmxvdyAiPgogICAgICAgIAogICAgICAgIDxkaXYgY2xhc3M9IlVzZXJMb2dpbiI+CiAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICA8ZGl2IGNsYXNzPSJVc2VyTG9naW4taW5mbyI+CiAgICAgICAgICAgIDxwIGNsYXNzPSJVc2VyTG9naW4tdGl0bGUiPlByZW1pw6hyZSBjb25uZXhpb24gPzwvcD4KICAgIAoKICAgIAogICAgICAgIDxwIGNsYXNzPSJVc2VyTG9naW4taWxsIj4KICAgICAgICAgICAgICAgIDxpbWcgc3JjPSJodHRwczovL2ZyLmZvbmNpYS5jb20vdmFyL2ZvbmNpYS9zdG9yYWdlL2ltYWdlcy9fYWxpYXNlcy90aHVtYl8yMDVfMjA1L21lZGlhL2ltYWdlcy9haWRlLzM1NzAtMi1mcmUtRlIvQWlkZS5wbmciICBhbHQ9IiIgLz4KICAgICAgICA8L3A+CgogICAgCiAgICAKICAgICAgICAgICAgPHAgY2xhc3M9IlVzZXJMb2dpbi10ZXh0Ij5Mb3JzIGRlIHZvdHJlIHByZW1pw6hyZSBjb25uZXhpb24gw6Agdm90cmUgZXNwYWNlIGNsaWVudCBNeUZvbmNpYSwgdm91cyBkZXZleiBzYWlzaXIgdm90cmUgaWRlbnRpZmlhbnQgZXQgbGUgbW90IGRlIHBhc3NlIHByb3Zpc29pcmUgcXVpIHZvdXMgb250IMOpdMOpIHRyYW5zbWlzIHBhciB2b3RyZSBhZ2VuY2Ugb3Ugc3VyIHZvcyBkb2N1bWVudHMgY29tcHRhYmxlcy48L3A+CiAgICAKCiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pgo8cCBjbGFzcz0iVXNlckxvZ2luLWNyZWF0ZSI+UHJlbWnDqHJlIGNvbm5leGlvbiA/IDxhCiAgICAgICAgICAgICAgICBocmVmPSIvcHJlbWllcmUtY29ubmV4aW9uLWEtbW9uLWVzcGFjZS1jbGllbnQtZm9uY2lhIj5Ew6ljb3V2cmV6IGNvbW1lbnQgdm91cyBjb25uZWN0ZXI8L2E+PC9wPgoKCiAgICAgICAgCiAgICAgICAgPC9kaXY+CgogICAgPC9kaXY+Cgo8L2Rpdj4KCiAgICAgICAgICAgICAgICAgICAgICAgIDwvaGVhZGVyPgogICAgCjwhLS1baWYgbHRlIElFIDkgXT4KPGRpdiBjbGFzcz0iQnJvd3NlckFsZXJ0IEJyb3dzZXJBbGVydC0tdmlzaWJsZSI+CiAgICA8ZGl2IGNsYXNzPSJCcm93c2VyQWxlcnQtaW5uZXIiPgogICAgICAgIDxzcGFuIGNsYXNzPSJCcm93c2VyQWxlcnQtaWNvbiI+CiAgICAgICAgICAgIDxzdmcgY2xhc3M9Imljb24iIHdpZHRoPSIzMiIgaGVpZ2h0PSIzMiIgYXJpYS1oaWRkZW49InRydWUiPjx1c2UgeGxpbms6aHJlZj0iL2J1bmRsZXMvZm9uY2lhaW50ZXJuZXQvc3ZnL2ljb25zLnN2ZyNJY29uLS1pbmZvIj48L3VzZT48L3N2Zz4KICAgICAgICA8L3NwYW4+CiAgICAgICAgPHAgY2xhc3M9IkJyb3dzZXJBbGVydC1tZXNzYWdlIj4KICAgICAgICAgICAgQXR0ZW50aW9uLCB2b3RyZSBuYXZpZ2F0ZXVyIG7igJllc3QgcGFzIMOgIGpvdXIgISBBZmluIGQnYW3DqWxpb3JlciB2b3RyZSBleHDDqXJpZW5jZSBzdXIgY2Ugc2l0ZSBub3VzIHZvdXMgY29uc2VpbGxvbnMgZGUgbWV0dHJlIMOgIGpvdXIgdm90cmUgbmF2aWdhdGV1ciB2ZXJzIHVuZSB2ZXJzaW9uIHBsdXMgcsOpY2VudGUKICAgICAgICA8L3A+CiAgICAgICAgPHNwYW4gY2xhc3M9IkJyb3dzZXJBbGVydC1jbG9zZSI+CiAgICAgICAgICAgIDxidXR0b24gY2xhc3M9IkJyb3dzZXJBbGVydC1jbG9zZUJ0biIgYXJpYS1sYWJlbD0iTWFzcXVlciBjZSBtZXNzYWdlIj4KICAgICAgICAgICAgICAgIDxzdmcgY2xhc3M9Imljb24iIHdpZHRoPSIxMiIgaGVpZ2h0PSIxMiIgYXJpYS1oaWRkZW49InRydWUiPjx1c2UgeGxpbms6aHJlZj0iL2J1bmRsZXMvZm9uY2lhaW50ZXJuZXQvc3ZnL2ljb25zLnN2ZyNJY29uLS1jbG9zZTIiPjwvdXNlPjwvc3ZnPgogICAgICAgICAgICA8L2J1dHRvbj4KICAgICAgICA8L3NwYW4+CiAgICA8L2Rpdj4KPC9kaXY+CjwhW2VuZGlmXS0tPgoKCgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9IkJyZWFkY3J1bWJzIj4KICAgICAgICAgICAgPHAgICAgIGNsYXNzPSJCcmVhZGNydW1icy1pbm5lciIgZGF0YS10eXBlPSJ5b2xvIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3Bhbj5Gb25jaWE8L3NwYW4+ICAgICAgICAgICAgICAgICAgICAgICAgICAgIAoKICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iL2FjaGF0IiAgICAgY2xhc3M9IkJyZWFkY3J1bWJzLWxpbmsiPkFjaGF0PC9hPiAgICAgICAgICAgICAgICAgICAgICAgICAgICAKCiAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Ii9hY2hhdC9jaGF0b3UtNzg0MDAtLXNhaW50LWdlcm1haW4tZW4tbGF5ZS03ODEwMC0tZm91cnF1ZXV4LTc4MTEyLS1sZS12ZXNpbmV0LTc4MTEwLS1jaGFtYm91cmN5LTc4MjQwLS1tYWlzb25zLWxhZmZpdHRlLTc4NjAwLS1tYXJlaWwtbWFybHktNzg3NTAtLW1hcmx5LWxlLXJvaS03ODE2MC0tbC1ldGFuZy1sYS12aWxsZS03ODYyMC0tY3JvaXNzeS1zdXItc2VpbmUtNzgyOTAtLW1vbnRlc3Nvbi03ODM2MC0taG91aWxsZXMtNzg4MDAtLXNhcnRyb3V2aWxsZS03ODUwMC0tY2FycmllcmVzLXN1ci1zZWluZS03ODQyMC0tcnVlaWwtbWFsbWFpc29uLTkyNTAwIiAgICAgY2xhc3M9IkJyZWFkY3J1bWJzLWxpbmsiPkNoYXRvdSA3ODQwMCDigKIgU2FpbnQgR2VybWFpbiBFbiBMYXllIDc4MTAwIOKAoiBGb3VycXVldXggNzgxMTIg4oCiIExlIFZlc2luZXQgNzgxMTAg4oCiIENoYW1ib3VyY3kgNzgyNDAg4oCiIE1haXNvbnMgTGFmZml0dGUgNzg2MDAg4oCiIE1hcmVpbCBNYXJseSA3ODc1MCDigKIgTWFybHkgTGUgUm9pIDc4MTYwIOKAoiBMIEV0YW5nIExhIFZpbGxlIDc4NjIwIOKAoiBDcm9pc3N5IFN1ciBTZWluZSA3ODI5MCDigKIgTW9udGVzc29uIDc4MzYwIOKAoiBIb3VpbGxlcyA3ODgwMCDigKIgU2FydHJvdXZpbGxlIDc4NTAwIOKAoiBDYXJyaWVyZXMgU3VyIFNlaW5lIDc4NDIwIOKAoiBSdWVpbCBNYWxtYWlzb24gOTI1MDA8L2E+ICAgICAgICAgICAgICAgICAgICAgICAgICAgIAoKICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4+QXBwYXJ0ZW1lbnQg4oCiIE1haXNvbjwvc3Bhbj4gICAgICAgICAgICAgICAgICAgICAgICAgICAgCgogICAgCgogICAgICAgICAgICA8L3A+CiAgICAgICAgPC9kaXY+CiAgICAKCgogICAgICAgICAgICAgICAgICAgICAgICAKICAgIAogICAgCiAgICA8ZGl2IGNsYXNzPSJDb250ZW50Ij4KCiAgICAgICAgPGRpdiBjbGFzcz0iQ29udGVudC1iYW5kbyBDb250ZW50LWJhbmRvLS1ncmFkaWVudCI+PC9kaXY+CgogICAgICAgIDxzZWN0aW9uIGNsYXNzPSJDb250ZW50LXJvdyBDb250ZW50LXJvdy0tZ3JheSI+CiAgICAgICAgICAgIAo8Zm9ybSBuYW1lPSJzZWFyY2hGb3JtIiBtZXRob2Q9InBvc3QiIGFjdGlvbj0iL3JlY2hlcmNoZS9wcm9jZXNzIiBjbGFzcz0iU2VhcmNoT2ZmZXIiIGlkPSJmb3JtX3NlYXJjaF9vZmZlciI+Cgo8ZGl2IGNsYXNzPSJTZWFyY2hPZmZlci1vdmVyZmxvdyI+CgoKICAgIDxkaXYgY2xhc3M9IlNlYXJjaE9mZmVyLWVuZ2luZSIgZGF0YS1mb3JtPSJtYWluX3Byb3BlcnRpZXNfc2VhcmNoIj4KICAgICAgICAgICAgICAgICAgICAKPHAgY2xhc3M9IlNlYXJjaE9mZmVyLXN3aXRjaCI+CiAgICA8bGFiZWwgY2xhc3M9IlNlYXJjaE9mZmVyLXN3aXRjaC1vcHRpb24gU2VhcmNoT2ZmZXItc3dpdGNoLW9wdGlvbi0tYWNoYXQgU2VhcmNoT2ZmZXItc3dpdGNoLW9wdGlvbi0tc2VsZWN0ZWQiIGZvcj0ic2VhcmNoT2ZmZXIiPkFjaGV0ZXI8L2xhYmVsPgogICAgPGEgY2xhc3M9IlNlYXJjaE9mZmVyLXN3aXRjaC1vcHRpb24gU2VhcmNoT2ZmZXItc3dpdGNoLW9wdGlvbi0tbG9jYXRpb24iCiAgICAgICBocmVmPSIvbG9jYXRpb24vY2hhdG91LTc4NDAwLS1zYWludC1nZXJtYWluLWVuLWxheWUtNzgxMDAtLWZvdXJxdWV1eC03ODExMi0tbGUtdmVzaW5ldC03ODExMC0tY2hhbWJvdXJjeS03ODI0MC0tbWFpc29ucy1sYWZmaXR0ZS03ODYwMC0tbWFyZWlsLW1hcmx5LTc4NzUwLS1tYXJseS1sZS1yb2ktNzgxNjAtLWwtZXRhbmctbGEtdmlsbGUtNzg2MjAtLWNyb2lzc3ktc3VyLXNlaW5lLTc4MjkwLS1tb250ZXNzb24tNzgzNjAtLWhvdWlsbGVzLTc4ODAwLS1zYXJ0cm91dmlsbGUtNzg1MDAtLWNhcnJpZXJlcy1zdXItc2VpbmUtNzg0MjAtLXJ1ZWlsLW1hbG1haXNvbi05MjUwMCI+CiAgICAgICAgTG91ZXIKICAgIDwvYT4KPC9wPgogICAgICAgIAogICAgICAgIDxkaXYgY2xhc3M9IlNlYXJjaE9mZmVyLWVuZ2luZS1pbnB1dHMganMtVGFnc0lucHV0Ij4KICAgICAgICAgICAgPGlucHV0IHR5cGU9InRleHQiIGlkPSJzZWFyY2hGb3JtX2xvY2FsaXNhdGlvbiIgbmFtZT0ic2VhcmNoRm9ybVtsb2NhbGlzYXRpb25dIiBvbmludmFsaWQ9InNldEN1c3RvbVZhbGlkaXR5KCYjMDM5O01lcmNpIGRlIHJlbnNlaWduZXIgdW4gbGlldSBkZSByZWNoZXJjaGUmIzAzOTspIiBvbmlucHV0PSJzZXRDdXN0b21WYWxpZGl0eSgmIzAzOTsmIzAzOTspOyIgY2xhc3M9IlNlYXJjaE9mZmVyLWVuZ2luZS1pbnB1dCBqcy1UYWdzSW5wdXQtb3JpZ2luYWwiIGlkPSJzZWFyY2hPZmZlciIgcGxhY2Vob2xkZXI9IlZpbGxlLCBEw6lwYXJ0ZW1lbnQsIENvZGUgcG9zdGFsIiB0eXBlPSJzZWFyY2giIHZhbHVlPSJjaGF0b3UgKDc4NDAwKSxzYWludC1nZXJtYWluLWVuLWxheWUgKDc4MTAwKSxmb3VycXVldXggKDc4MTEyKSxsZS12ZXNpbmV0ICg3ODExMCksY2hhbWJvdXJjeSAoNzgyNDApLG1haXNvbnMtbGFmZml0dGUgKDc4NjAwKSxtYXJlaWwtbWFybHkgKDc4NzUwKSxtYXJseS1sZS1yb2kgKDc4MTYwKSxsLWV0YW5nLWxhLXZpbGxlICg3ODYyMCksY3JvaXNzeS1zdXItc2VpbmUgKDc4MjkwKSxtb250ZXNzb24gKDc4MzYwKSxob3VpbGxlcyAoNzg4MDApLHNhcnRyb3V2aWxsZSAoNzg1MDApLGNhcnJpZXJlcy1zdXItc2VpbmUgKDc4NDIwKSxydWVpbC1tYWxtYWlzb24gKDkyNTAwKSIgLz4KICAgICAgICAgICAgPGJ1dHRvbiBuYW1lPSJyZWNoZXJjaGVyX2xvY2FsaXNhdGlvbiIgY2xhc3M9IlNlYXJjaE9mZmVyLWVuZ2luZS1zdWJtaXQiIHR5cGU9InN1Ym1pdCIgYXJpYS1sYWJlbD0iVHJvdXZlciB1biBiaWVuIMOgIGFjaGV0ZXIiPgogICAgICAgICAgICAgICAgPHN2ZyBjbGFzcz0iaWNvbiIgc3R5bGU9IndpZHRoOjI1cHg7aGVpZ2h0OjI1cHgiIGFyaWEtaGlkZGVuPSJ0cnVlIj48dXNlIHhsaW5rOmhyZWY9Ii9idW5kbGVzL2ZvbmNpYWludGVybmV0L3N2Zy9pY29ucy5zdmcjSWNvbi0tc2VhcmNoMiI+PC91c2U+PC9zdmc+CiAgICAgICAgICAgIDwvYnV0dG9uPgogICAgICAgIDwvZGl2PgoKICAgICAgICA8cCBjbGFzcz0iU2VhcmNoT2ZmZXItZW5naW5lLWttIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBmb3I9InNlYXJjaEZvcm1fZGlzdGFuY2UiPsOJdGVuZHJlIGxhIHpvbmUgZGUgcmVjaGVyY2hlIGRlPC9sYWJlbD4KICAgICAgICAgICAgPHNlbGVjdCBpZD0ic2VhcmNoRm9ybV9kaXN0YW5jZSIgbmFtZT0ic2VhcmNoRm9ybVtkaXN0YW5jZV0iPjxvcHRpb24gdmFsdWU9IiI+PC9vcHRpb24+ICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT0iNSIgPjVrbTwvb3B0aW9uPiAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9IjEwIiA+MTBrbTwvb3B0aW9uPiAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9IjIwIiA+MjBrbTwvb3B0aW9uPiAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9IjMwIiA+MzBrbTwvb3B0aW9uPjwvc2VsZWN0PgogICAgICAgIDwvcD4KCiAgICAgICAgPGRpdiBjbGFzcz0iU2VhcmNoT2ZmZXItcmVmIj4KICAgICAgICAgICAgPGxhYmVsIGNsYXNzPSJTZWFyY2hPZmZlci1yZWYtbGFiZWwiIGZvcj0ic2VhcmNoT2ZmZXJSZWYiPlNhaXNpciB1bmUgcsOpZsOpcmVuY2U8L2xhYmVsPgogICAgICAgICAgICA8cCBjbGFzcz0iU2VhcmNoT2ZmZXItcmVmLWlucHV0cyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9InRleHQiIGlkPSJzZWFyY2hGb3JtX3JlZmVyZW5jZSIgbmFtZT0ic2VhcmNoRm9ybVtyZWZlcmVuY2VdIiBhdXRvY29tcGxldGU9Im9mZiIgdHlwZT0ibnVtYmVyIiBtaW49IjAiIGlkPSJzZWFyY2hPZmZlclJlZiIgcGxhY2Vob2xkZXI9IlLDqWbDqXJlbmNlIGR1IGJpZW4gw6AgYWNoZXRlciIgdmFsdWU9IiIgbm92YWxpZGF0ZT0iIiAvPgogICAgICAgICAgICAgICAgPGJ1dHRvbiB0eXBlPSJzdWJtaXQiIGFyaWEtbGFiZWw9IlRyb3V2ZXIgdW4gYmllbiBwYXIgc2EgcsOpZsOpcmVuY2UiIGRhdGEtYnRuPSJyZWNoZXJjaGVfcmVmZXJlbmNlX2J0biI+PHNwYW4gYXJpYS1oaWRkZW49InRydWUiPjxzdmcgY2xhc3M9Imljb24iIHN0eWxlPSJ3aWR0aDoyMHB4O2hlaWdodDoyMHB4IiBhcmlhLWhpZGRlbj0idHJ1ZSI+PHVzZSB4bGluazpocmVmPSIvYnVuZGxlcy9mb25jaWFpbnRlcm5ldC9zdmcvaWNvbnMuc3ZnI0ljb24tLXNlYXJjaDIiPjwvdXNlPjwvc3ZnPjwvc3Bhbj48L2J1dHRvbj4KICAgICAgICAgICAgPC9wPgogICAgICAgIDwvZGl2PgogICAgPC9kaXY+CgogICAgPGRpdiBjbGFzcz0iU2VhcmNoT2ZmZXItY3JpdGVyaWEiPgogICAgICAgIDxmaWVsZHNldCBjbGFzcz0iU2VhcmNoT2ZmZXItY3JpdGVyaWEtaXRlbSIgZGF0YS13aWRnZXQ9IkRyb3Bkb3duIiBkYXRhLWJlaGF0PSJjcml0ZXJlLXR5cGVEZUJpZW4tY29udGFpbmVyIj4KICAgICAgICAgICAgPGxlZ2VuZCBjbGFzcz0iU2VhcmNoT2ZmZXItY3JpdGVyaWEtbGFiZWwiIGRhdGEtd2lkZ2V0PSJEcm9wZG93bi10cmlnZ2VyIiBkYXRhLWJlaGF0PSJjcml0ZXJlLXR5cGVEZUJpZW4iPlR5cGUgZGUgYmllbjwvbGVnZW5kPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJTZWFyY2hPZmZlci1jcml0ZXJpYS1ib3giIGRhdGEtd2lkZ2V0PSJEcm9wZG93bi1jb250ZW50Ij4KCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJTZWFyY2hPZmZlci1jaGVja2JveCBTZWFyY2hPZmZlci1jaGVja2JveC0tMW9uMiIgZGF0YS1iZWhhdD0iZmlsdHJlLUFwcGFydGVtZW50Ij4KICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9ImNoZWNrYm94IiBpZD0ic2VhcmNoRm9ybV90eXBlX2JpZW5fMCIgbmFtZT0ic2VhcmNoRm9ybVt0eXBlX2JpZW5dW10iIGRhdGEtbGFiZWw9IkFwcGFydGVtZW50IiB2YWx1ZT0iYXBwYXJ0ZW1lbnQiIGNoZWNrZWQ9ImNoZWNrZWQiIC8+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgZm9yPSJzZWFyY2hGb3JtX3R5cGVfYmllbl8wIj5BcHBhcnRlbWVudDwvbGFiZWw+CiAgICAgICAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0iU2VhcmNoT2ZmZXItY2hlY2tib3ggU2VhcmNoT2ZmZXItY2hlY2tib3gtLTFvbjIiIGRhdGEtYmVoYXQ9ImZpbHRyZS1NYWlzb24iPgogICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0iY2hlY2tib3giIGlkPSJzZWFyY2hGb3JtX3R5cGVfYmllbl8xIiBuYW1lPSJzZWFyY2hGb3JtW3R5cGVfYmllbl1bXSIgZGF0YS1sYWJlbD0iTWFpc29uIiB2YWx1ZT0ibWFpc29uIiBjaGVja2VkPSJjaGVja2VkIiAvPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGZvcj0ic2VhcmNoRm9ybV90eXBlX2JpZW5fMSI+TWFpc29uPC9sYWJlbD4KICAgICAgICAgICAgICAgICAgICA8L3A+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJTZWFyY2hPZmZlci1jaGVja2JveCBTZWFyY2hPZmZlci1jaGVja2JveC0tMW9uMiIgZGF0YS1iZWhhdD0iZmlsdHJlLVRlcnJhaW4iPgogICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0iY2hlY2tib3giIGlkPSJzZWFyY2hGb3JtX3R5cGVfYmllbl8yIiBuYW1lPSJzZWFyY2hGb3JtW3R5cGVfYmllbl1bXSIgZGF0YS1sYWJlbD0iVGVycmFpbiIgdmFsdWU9InRlcnJhaW4iIC8+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgZm9yPSJzZWFyY2hGb3JtX3R5cGVfYmllbl8yIj5UZXJyYWluPC9sYWJlbD4KICAgICAgICAgICAgICAgICAgICA8L3A+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJTZWFyY2hPZmZlci1jaGVja2JveCBTZWFyY2hPZmZlci1jaGVja2JveC0tMW9uMiIgZGF0YS1iZWhhdD0iZmlsdHJlLUltbWV1YmxlIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9ImNoZWNrYm94IiBpZD0ic2VhcmNoRm9ybV90eXBlX2JpZW5fMyIgbmFtZT0ic2VhcmNoRm9ybVt0eXBlX2JpZW5dW10iIGRhdGEtbGFiZWw9IkltbWV1YmxlIiB2YWx1ZT0iaW1tZXVibGUiIC8+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgZm9yPSJzZWFyY2hGb3JtX3R5cGVfYmllbl8zIj5JbW1ldWJsZTwvbGFiZWw+CiAgICAgICAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0iU2VhcmNoT2ZmZXItY2hlY2tib3ggU2VhcmNoT2ZmZXItY2hlY2tib3gtLTFvbjIiIGRhdGEtYmVoYXQ9ImZpbHRyZS1Mb2NhbCAtIEJ1cmVhdSI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJjaGVja2JveCIgaWQ9InNlYXJjaEZvcm1fdHlwZV9iaWVuXzQiIG5hbWU9InNlYXJjaEZvcm1bdHlwZV9iaWVuXVtdIiBkYXRhLWxhYmVsPSJMb2NhbCAtIEJ1cmVhdSIgdmFsdWU9ImxvY2FsLWNvbW1lcmNpYWwiIC8+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgZm9yPSJzZWFyY2hGb3JtX3R5cGVfYmllbl80Ij5Mb2NhbCAtIEJ1cmVhdTwvbGFiZWw+CiAgICAgICAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0iU2VhcmNoT2ZmZXItY2hlY2tib3ggU2VhcmNoT2ZmZXItY2hlY2tib3gtLTFvbjIiIGRhdGEtYmVoYXQ9ImZpbHRyZS1TdGF0aW9ubmVtZW50Ij4KICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9ImNoZWNrYm94IiBpZD0ic2VhcmNoRm9ybV90eXBlX2JpZW5fNSIgbmFtZT0ic2VhcmNoRm9ybVt0eXBlX2JpZW5dW10iIGRhdGEtbGFiZWw9IlN0YXRpb25uZW1lbnQiIHZhbHVlPSJwYXJraW5nIiAvPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGZvcj0ic2VhcmNoRm9ybV90eXBlX2JpZW5fNSI+U3RhdGlvbm5lbWVudDwvbGFiZWw+CiAgICAgICAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0iU2VhcmNoT2ZmZXItY2hlY2tib3ggU2VhcmNoT2ZmZXItY2hlY2tib3gtLTFvbjIiIGRhdGEtYmVoYXQ9ImZpbHRyZS1Qcm9ncmFtbWUgTmV1ZiI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJjaGVja2JveCIgaWQ9InNlYXJjaEZvcm1fdHlwZV9iaWVuXzYiIG5hbWU9InNlYXJjaEZvcm1bdHlwZV9iaWVuXVtdIiBkYXRhLWxhYmVsPSJQcm9ncmFtbWUgTmV1ZiIgdmFsdWU9InByb2dyYW1tZS1uZXVmIiAvPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGZvcj0ic2VhcmNoRm9ybV90eXBlX2JpZW5fNiI+UHJvZ3JhbW1lIE5ldWY8L2xhYmVsPgogICAgICAgICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0iU2VhcmNoT2ZmZXItcmVsb2FkIj48YnV0dG9uIGRhdGEtYmVoYXQ9ImZpbHRyZUFjdHVhbGlzZS1jcml0ZXJlLXR5cGVEZUJpZW4iIHR5cGU9InN1Ym1pdCI+QWN0dWFsaXNlcjwvYnV0dG9uPjwvcD4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9maWVsZHNldD4KCiAgICAgICAgPGRpdiBjbGFzcz0iU2VhcmNoT2ZmZXItY3JpdGVyaWEtaXRlbSIgZGF0YS13aWRnZXQ9IkRyb3Bkb3duIiBkYXRhLWJlaGF0PSJjcml0ZXJlLXN1cmZhY2UtY29udGFpbmVyIj4KICAgICAgICAgICAgPHAgY2xhc3M9IlNlYXJjaE9mZmVyLWNyaXRlcmlhLWxhYmVsIiBkYXRhLXdpZGdldD0iRHJvcGRvd24tdHJpZ2dlciIgZGF0YS1iZWhhdD0iY3JpdGVyZS1zdXJmYWNlIj5TdXJmYWNlPC9wPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJTZWFyY2hPZmZlci1jcml0ZXJpYS1ib3giIGRhdGEtd2lkZ2V0PSJEcm9wZG93bi1jb250ZW50Ij4KICAgICAgICAgICAgICAgIDxmaWVsZHNldD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGVnZW5kPlN1cmZhY2UgZHUgYmllbjwvbGVnZW5kPgogICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJTZWFyY2hPZmZlci10ZXh0IiBkYXRhLWJlaGF0PSJmaWx0cmUtc3VyZmFjZU1pbiI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgZm9yPSJzZWFyY2hGb3JtX3N1cmZhY2VfbWluIj5NwrI8L2xhYmVsPgogICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0ibnVtYmVyIiBpZD0ic2VhcmNoRm9ybV9zdXJmYWNlX21pbiIgbmFtZT0ic2VhcmNoRm9ybVtzdXJmYWNlX21pbl0iIG1pbj0iMCIgcGxhY2Vob2xkZXI9Ik1pbiIgLz4KICAgICAgICAgICAgICAgICAgICA8L3A+CiAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9IlNlYXJjaE9mZmVyLXRleHQiIGRhdGEtYmVoYXQ9ImZpbHRyZS1zdXJmYWNlTWF4Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBmb3I9InNlYXJjaEZvcm1fc3VyZmFjZV9tYXgiPk3CsjwvbGFiZWw+CiAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJudW1iZXIiIGlkPSJzZWFyY2hGb3JtX3N1cmZhY2VfbWF4IiBuYW1lPSJzZWFyY2hGb3JtW3N1cmZhY2VfbWF4XSIgcGxhY2Vob2xkZXI9Ik1heCIgLz4KICAgICAgICAgICAgICAgICAgICA8L3A+CiAgICAgICAgICAgICAgICA8L2ZpZWxkc2V0PgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICA8ZmllbGRzZXQ+CiAgICAgICAgICAgICAgICAgICAgPGxlZ2VuZD5TdXJmYWNlIGR1IHRlcnJhaW48L2xlZ2VuZD4KICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0iU2VhcmNoT2ZmZXItdGV4dCIgZGF0YS1iZWhhdD0iZmlsdHJlLXN1cmZhY2VNaW5UZXJyYWluIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBmb3I9InNlYXJjaEZvcm1fc3VyZmFjZV90ZXJyYWluX21pbiI+TcKyPC9sYWJlbD4KICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9Im51bWJlciIgaWQ9InN1cmZhY2VUZXJyYWluTWluIiBuYW1lPSJzZWFyY2hGb3JtW3N1cmZhY2VfdGVycmFpbl9taW5dIiBwbGFjZWhvbGRlcj0iTWluIiAvPgogICAgICAgICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0iU2VhcmNoT2ZmZXItdGV4dCIgZGF0YS1iZWhhdD0iZmlsdHJlLXN1cmZhY2VNYXhUZXJyYWluIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBmb3I9InNlYXJjaEZvcm1fc3VyZmFjZV90ZXJyYWluX21heCI+TcKyPC9sYWJlbD4KICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9Im51bWJlciIgaWQ9InN1cmZhY2VUZXJyYWluTWF4IiBuYW1lPSJzZWFyY2hGb3JtW3N1cmZhY2VfdGVycmFpbl9tYXhdIiBwbGFjZWhvbGRlcj0iTWF4IiAvPgogICAgICAgICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgICAgIDwvZmllbGRzZXQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9IlNlYXJjaE9mZmVyLXJlbG9hZCI+PGJ1dHRvbiBkYXRhLWJlaGF0PSJmaWx0cmVBY3R1YWxpc2UtY3JpdGVyZS1zdXJmYWNlIiB0eXBlPSJzdWJtaXQiPkFjdHVhbGlzZXI8L2J1dHRvbj48L3A+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgoKICAgICAgICA8ZmllbGRzZXQgY2xhc3M9IlNlYXJjaE9mZmVyLWNyaXRlcmlhLWl0ZW0iIGRhdGEtd2lkZ2V0PSJEcm9wZG93biIgZGF0YS1iZWhhdD0iY3JpdGVyZS1wcml4LWNvbnRhaW5lciI+CiAgICAgICAgICAgIDxsZWdlbmQgY2xhc3M9IlNlYXJjaE9mZmVyLWNyaXRlcmlhLWxhYmVsIiBkYXRhLXdpZGdldD0iRHJvcGRvd24tdHJpZ2dlciIgZGF0YS1iZWhhdD0iY3JpdGVyZS1wcml4Ij5Qcml4PC9sZWdlbmQ+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9IlNlYXJjaE9mZmVyLWNyaXRlcmlhLWJveCIgZGF0YS13aWRnZXQ9IkRyb3Bkb3duLWNvbnRlbnQiPgogICAgICAgICAgICAgICAgPHAgY2xhc3M9IlNlYXJjaE9mZmVyLXRleHQiIGRhdGEtYmVoYXQ9ImZpbHRyZS1wcml4TWluIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGZvcj0ic2VhcmNoRm9ybV9wcml4X21pbiI+4oKsPC9sYWJlbD4KICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0ibnVtYmVyIiBpZD0ic2VhcmNoRm9ybV9wcml4X21pbiIgbmFtZT0ic2VhcmNoRm9ybVtwcml4X21pbl0iIHBsYWNlaG9sZGVyPSJNaW4iIG1pbj0iMCIgLz4KICAgICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJTZWFyY2hPZmZlci10ZXh0IiBkYXRhLWJlaGF0PSJmaWx0cmUtcHJpeE1heCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBmb3I9InNlYXJjaEZvcm1fcHJpeF9tYXgiPuKCrDwvbGFiZWw+CiAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9Im51bWJlciIgaWQ9InNlYXJjaEZvcm1fcHJpeF9tYXgiIG5hbWU9InNlYXJjaEZvcm1bcHJpeF9tYXhdIiBwbGFjZWhvbGRlcj0iTWF4IiBtaW49IjAiIC8+CiAgICAgICAgICAgICAgICA8L3A+CiAgICAgICAgICAgICAgICA8cCBjbGFzcz0iU2VhcmNoT2ZmZXItcmVsb2FkIj48YnV0dG9uIHR5cGU9InN1Ym1pdCIgZGF0YS1iZWhhdD0iZmlsdHJlQWN0dWFsaXNlLWNyaXRlcmUtcHJpeCI+QWN0dWFsaXNlcjwvYnV0dG9uPjwvcD4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9maWVsZHNldD4KCiAgICAgICAgPGRpdiBjbGFzcz0iU2VhcmNoT2ZmZXItY3JpdGVyaWEtaXRlbSIgZGF0YS13aWRnZXQ9IkRyb3Bkb3duIiBkYXRhLWJlaGF0PSJjcml0ZXJlLXBpZWNlcy1jb250YWluZXIiPgogICAgICAgICAgICA8cCBjbGFzcz0iU2VhcmNoT2ZmZXItY3JpdGVyaWEtbGFiZWwiIGRhdGEtd2lkZ2V0PSJEcm9wZG93bi10cmlnZ2VyIiBkYXRhLWJlaGF0PSJjcml0ZXJlLXBpZWNlcyI+UGnDqGNlczwvcD4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iU2VhcmNoT2ZmZXItY3JpdGVyaWEtYm94IFNlYXJjaE9mZmVyLWNyaXRlcmlhLWJveC0tY29scyIgZGF0YS13aWRnZXQ9IkRyb3Bkb3duLWNvbnRlbnQiPgogICAgICAgICAgICAgICAgPGZpZWxkc2V0PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsZWdlbmQ+Tm9tYnJlIGRlIHBpw6hjZXM8L2xlZ2VuZD4KICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0iU2VhcmNoT2ZmZXItY2hlY2tib3giIGRhdGEtYmVoYXQ9ImZpbHRyZS0xIHBpw6hjZSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0iY2hlY2tib3giIGlkPSJzZWFyY2hGb3JtX3BpZWNlc18wIiBuYW1lPSJzZWFyY2hGb3JtW3BpZWNlc11bXSIgZGF0YS1sYWJlbD0iMSBwacOoY2UiIHZhbHVlPSIxIiAvPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBmb3I9InNlYXJjaEZvcm1fcGllY2VzXzAiPjEgcGnDqGNlPC9sYWJlbD4KICAgICAgICAgICAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJTZWFyY2hPZmZlci1jaGVja2JveCIgZGF0YS1iZWhhdD0iZmlsdHJlLTIgcGnDqGNlcyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0iY2hlY2tib3giIGlkPSJzZWFyY2hGb3JtX3BpZWNlc18xIiBuYW1lPSJzZWFyY2hGb3JtW3BpZWNlc11bXSIgZGF0YS1sYWJlbD0iMiBwacOoY2VzIiB2YWx1ZT0iMiIgLz4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgZm9yPSJzZWFyY2hGb3JtX3BpZWNlc18xIj4yIHBpw6hjZXM8L2xhYmVsPgogICAgICAgICAgICAgICAgICAgICAgICA8L3A+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9IlNlYXJjaE9mZmVyLWNoZWNrYm94IiBkYXRhLWJlaGF0PSJmaWx0cmUtMyBwacOoY2VzIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJjaGVja2JveCIgaWQ9InNlYXJjaEZvcm1fcGllY2VzXzIiIG5hbWU9InNlYXJjaEZvcm1bcGllY2VzXVtdIiBkYXRhLWxhYmVsPSIzIHBpw6hjZXMiIHZhbHVlPSIzIiAvPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBmb3I9InNlYXJjaEZvcm1fcGllY2VzXzIiPjMgcGnDqGNlczwvbGFiZWw+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0iU2VhcmNoT2ZmZXItY2hlY2tib3giIGRhdGEtYmVoYXQ9ImZpbHRyZS00IHBpw6hjZXMiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9ImNoZWNrYm94IiBpZD0ic2VhcmNoRm9ybV9waWVjZXNfMyIgbmFtZT0ic2VhcmNoRm9ybVtwaWVjZXNdW10iIGRhdGEtbGFiZWw9IjQgcGnDqGNlcyIgdmFsdWU9IjQiIC8+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGZvcj0ic2VhcmNoRm9ybV9waWVjZXNfMyI+NCBwacOoY2VzPC9sYWJlbD4KICAgICAgICAgICAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJTZWFyY2hPZmZlci1jaGVja2JveCIgZGF0YS1iZWhhdD0iZmlsdHJlLTUgcGnDqGNlcyBvdSBwbHVzIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJjaGVja2JveCIgaWQ9InNlYXJjaEZvcm1fcGllY2VzXzQiIG5hbWU9InNlYXJjaEZvcm1bcGllY2VzXVtdIiBkYXRhLWxhYmVsPSI1IHBpw6hjZXMgb3UgcGx1cyIgdmFsdWU9IjUiIC8+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGZvcj0ic2VhcmNoRm9ybV9waWVjZXNfNCI+NSBwacOoY2VzIG91IHBsdXM8L2xhYmVsPgogICAgICAgICAgICAgICAgICAgICAgICA8L3A+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZmllbGRzZXQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGZpZWxkc2V0PgogICAgICAgICAgICAgICAgICAgIDxsZWdlbmQ+Tm9tYnJlIGRlIGNoYW1icmVzPC9sZWdlbmQ+CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJTZWFyY2hPZmZlci1jaGVja2JveCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0iY2hlY2tib3giIGlkPSJzZWFyY2hGb3JtX2NoYW1icmVzXzAiIG5hbWU9InNlYXJjaEZvcm1bY2hhbWJyZXNdW10iIGRhdGEtbGFiZWw9IjEgY2hhbWJyZSIgdmFsdWU9IjEiIC8+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGZvcj0ic2VhcmNoRm9ybV9jaGFtYnJlc18wIj4xIGNoYW1icmU8L2xhYmVsPgogICAgICAgICAgICAgICAgICAgICAgICA8L3A+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9IlNlYXJjaE9mZmVyLWNoZWNrYm94Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJjaGVja2JveCIgaWQ9InNlYXJjaEZvcm1fY2hhbWJyZXNfMSIgbmFtZT0ic2VhcmNoRm9ybVtjaGFtYnJlc11bXSIgZGF0YS1sYWJlbD0iMiBjaGFtYnJlcyIgdmFsdWU9IjIiIC8+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGZvcj0ic2VhcmNoRm9ybV9jaGFtYnJlc18xIj4yIGNoYW1icmVzPC9sYWJlbD4KICAgICAgICAgICAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJTZWFyY2hPZmZlci1jaGVja2JveCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0iY2hlY2tib3giIGlkPSJzZWFyY2hGb3JtX2NoYW1icmVzXzIiIG5hbWU9InNlYXJjaEZvcm1bY2hhbWJyZXNdW10iIGRhdGEtbGFiZWw9IjMgY2hhbWJyZXMiIHZhbHVlPSIzIiAvPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBmb3I9InNlYXJjaEZvcm1fY2hhbWJyZXNfMiI+MyBjaGFtYnJlczwvbGFiZWw+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0iU2VhcmNoT2ZmZXItY2hlY2tib3giPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9ImNoZWNrYm94IiBpZD0ic2VhcmNoRm9ybV9jaGFtYnJlc18zIiBuYW1lPSJzZWFyY2hGb3JtW2NoYW1icmVzXVtdIiBkYXRhLWxhYmVsPSI0IGNoYW1icmVzIiB2YWx1ZT0iNCIgLz4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgZm9yPSJzZWFyY2hGb3JtX2NoYW1icmVzXzMiPjQgY2hhbWJyZXM8L2xhYmVsPgogICAgICAgICAgICAgICAgICAgICAgICA8L3A+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9IlNlYXJjaE9mZmVyLWNoZWNrYm94Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJjaGVja2JveCIgaWQ9InNlYXJjaEZvcm1fY2hhbWJyZXNfNCIgbmFtZT0ic2VhcmNoRm9ybVtjaGFtYnJlc11bXSIgZGF0YS1sYWJlbD0iNSBjaGFtYnJlcyBvdSBwbHVzIiB2YWx1ZT0iNSIgLz4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgZm9yPSJzZWFyY2hGb3JtX2NoYW1icmVzXzQiPjUgY2hhbWJyZXMgb3UgcGx1czwvbGFiZWw+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIDwvZmllbGRzZXQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9IlNlYXJjaE9mZmVyLXJlbG9hZCI+PGJ1dHRvbiBkYXRhLWJlaGF0PSJmaWx0cmVBY3R1YWxpc2UtY3JpdGVyZS1waWVjZXMiIHR5cGU9InN1Ym1pdCI+QWN0dWFsaXNlcjwvYnV0dG9uPjwvcD4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9kaXY+CgogICAgICAgIDxkaXYgY2xhc3M9IlNlYXJjaE9mZmVyLWNyaXRlcmlhLWl0ZW0iIGRhdGEtd2lkZ2V0PSJEcm9wZG93biIgZGF0YS1iZWhhdD0iY3JpdGVyZS1zdXBwbGVtZW50YWlyZXMtY29udGFpbmVyIj4KICAgICAgICAgICAgPHAgY2xhc3M9IlNlYXJjaE9mZmVyLWNyaXRlcmlhLWxhYmVsIiBkYXRhLXdpZGdldD0iRHJvcGRvd24tdHJpZ2dlciIgZGF0YS1iZWhhdD0iY3JpdGVyZS1zdXBwbGVtZW50YWlyZXMiPkNyaXTDqHJlcyBzdXBwbMOpbWVudGFpcmVzPC9wPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJTZWFyY2hPZmZlci1jcml0ZXJpYS1ib3ggU2VhcmNoT2ZmZXItY3JpdGVyaWEtYm94LS1jb2xzMi0zIFNlYXJjaE9mZmVyLWNyaXRlcmlhLWJveC0tZnVsbHNjcmVlbiIgZGF0YS13aWRnZXQ9IkRyb3Bkb3duLWNvbnRlbnQiPgogICAgICAgICAgICAgICAgPGZpZWxkc2V0PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsZWdlbmQ+Q2FyYWN0w6lyaXN0aXF1ZXM8L2xlZ2VuZD4KICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJTZWFyY2hPZmZlci1jaGVja2JveCBTZWFyY2hPZmZlci1jaGVja2JveC0tMW9uMyIgZGF0YS1iZWhhdD0iZmlsdHJlLVBhcmtpbmcgLyBnYXJhZ2UgLyBib3giPgogICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0iY2hlY2tib3giIGlkPSJzZWFyY2hGb3JtX3BhcmtpbmciIG5hbWU9InNlYXJjaEZvcm1bcGFya2luZ10iIGRhdGEtbGFiZWw9IlBhcmtpbmcgLyBnYXJhZ2UgLyBib3giIHZhbHVlPSIxIiAvPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGZvcj0ic2VhcmNoRm9ybV9wYXJraW5nIj5QYXJraW5nIC8gZ2FyYWdlIC8gYm94PC9sYWJlbD4KICAgICAgICAgICAgICAgICAgICA8L3A+CiAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9IlNlYXJjaE9mZmVyLWNoZWNrYm94IFNlYXJjaE9mZmVyLWNoZWNrYm94LS0xb24zIiBkYXRhLWJlaGF0PSJmaWx0cmUtQXNjZW5zZXVyIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9ImNoZWNrYm94IiBpZD0ic2VhcmNoRm9ybV9hc2NlbnNldXIiIG5hbWU9InNlYXJjaEZvcm1bYXNjZW5zZXVyXSIgZGF0YS1sYWJlbD0iQXNjZW5zZXVyIiB2YWx1ZT0iMSIgLz4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBmb3I9InNlYXJjaEZvcm1fYXNjZW5zZXVyIj5Bc2NlbnNldXI8L2xhYmVsPgogICAgICAgICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0iU2VhcmNoT2ZmZXItY2hlY2tib3ggU2VhcmNoT2ZmZXItY2hlY2tib3gtLTFvbjMiIGRhdGEtYmVoYXQ9ImZpbHRyZS1Tb3VzLXNvbCAvIGNhdmUiPgogICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0iY2hlY2tib3giIGlkPSJzZWFyY2hGb3JtX2NhdmUiIG5hbWU9InNlYXJjaEZvcm1bY2F2ZV0iIGRhdGEtbGFiZWw9IlNvdXMtc29sIC8gY2F2ZSIgdmFsdWU9IjEiIC8+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgZm9yPSJzZWFyY2hGb3JtX2NhdmUiPlNvdXMtc29sIC8gY2F2ZTwvbGFiZWw+CiAgICAgICAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJTZWFyY2hPZmZlci1jaGVja2JveCBTZWFyY2hPZmZlci1jaGVja2JveC0tMW9uMyIgZGF0YS1iZWhhdD0iZmlsdHJlLVRlcnJhaW4gLyBqYXJkaW4iPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9ImNoZWNrYm94IiBpZD0ic2VhcmNoRm9ybV9qYXJkaW4iIG5hbWU9InNlYXJjaEZvcm1bamFyZGluXSIgZGF0YS1sYWJlbD0iVGVycmFpbiAvIGphcmRpbiIgdmFsdWU9IjEiIC8+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGZvcj0ic2VhcmNoRm9ybV9qYXJkaW4iPlRlcnJhaW4gLyBqYXJkaW48L2xhYmVsPgogICAgICAgICAgICAgICAgICAgICAgICA8L3A+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0iU2VhcmNoT2ZmZXItY2hlY2tib3ggU2VhcmNoT2ZmZXItY2hlY2tib3gtLTFvbjMiIGRhdGEtYmVoYXQ9ImZpbHRyZS1CYWxjb24gLyB0ZXJyYXNzZSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0iY2hlY2tib3giIGlkPSJzZWFyY2hGb3JtX2JhbGNvbiIgbmFtZT0ic2VhcmNoRm9ybVtiYWxjb25dIiBkYXRhLWxhYmVsPSJCYWxjb24gLyB0ZXJyYXNzZSIgdmFsdWU9IjEiIC8+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGZvcj0ic2VhcmNoRm9ybV9iYWxjb24iPkJhbGNvbiAvIHRlcnJhc3NlPC9sYWJlbD4KICAgICAgICAgICAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9IlNlYXJjaE9mZmVyLWNoZWNrYm94IFNlYXJjaE9mZmVyLWNoZWNrYm94LS0xb24zIiBkYXRhLWJlaGF0PSJmaWx0cmUtUGlzY2luZSI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJjaGVja2JveCIgaWQ9InNlYXJjaEZvcm1fcGlzY2luZSIgbmFtZT0ic2VhcmNoRm9ybVtwaXNjaW5lXSIgZGF0YS1sYWJlbD0iUGlzY2luZSIgdmFsdWU9IjEiIC8+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgZm9yPSJzZWFyY2hGb3JtX3Bpc2NpbmUiPlBpc2NpbmU8L2xhYmVsPgogICAgICAgICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0iU2VhcmNoT2ZmZXItY2hlY2tib3ggU2VhcmNoT2ZmZXItY2hlY2tib3gtLTFvbjMiIGRhdGEtYmVoYXQ9ImZpbHRyZS1DbGltYXRpc2F0aW9uIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJjaGVja2JveCIgaWQ9InNlYXJjaEZvcm1fY2xpbWF0aXNhdGlvbiIgbmFtZT0ic2VhcmNoRm9ybVtjbGltYXRpc2F0aW9uXSIgZGF0YS1sYWJlbD0iQ2xpbWF0aXNhdGlvbiIgdmFsdWU9IjEiIC8+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGZvcj0ic2VhcmNoRm9ybV9jbGltYXRpc2F0aW9uIj5DbGltYXRpc2F0aW9uPC9sYWJlbD4KICAgICAgICAgICAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9IlNlYXJjaE9mZmVyLWNoZWNrYm94IFNlYXJjaE9mZmVyLWNoZWNrYm94LS0xb24zIiBkYXRhLWJlaGF0PSJmaWx0cmUtQWNjw6hzIGhhbmRpY2Fww6lzIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9ImNoZWNrYm94IiBpZD0ic2VhcmNoRm9ybV9hY2Nlc19oYW5kaSIgbmFtZT0ic2VhcmNoRm9ybVthY2Nlc19oYW5kaV0iIGRhdGEtbGFiZWw9IkFjY8OocyBoYW5kaWNhcMOpcyIgdmFsdWU9IjEiIC8+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgZm9yPSJzZWFyY2hGb3JtX2FjY2VzX2hhbmRpIj5BY2PDqHMgaGFuZGljYXDDqXM8L2xhYmVsPgogICAgICAgICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgICAgIDwvZmllbGRzZXQ+CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZmllbGRzZXQ+CiAgICAgICAgICAgICAgICAgICAgICAgIDxsZWdlbmQ+Q3JpdMOocmVzIGNvbXBsw6ltZW50YWlyZXM8L2xlZ2VuZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJTZWFyY2hPZmZlci1jaGVja2JveCIgZGF0YS1iZWhhdD0iZmlsdHJlLU5ldWYgdW5pcXVlbWVudCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9ImNoZWNrYm94IiBpZD0ic2VhcmNoRm9ybV9uZXVmIiBuYW1lPSJzZWFyY2hGb3JtW25ldWZdIiBkYXRhLWxhYmVsPSJOZXVmIHVuaXF1ZW1lbnQiIHZhbHVlPSIxIiAvPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgZm9yPSJzZWFyY2hGb3JtX25ldWYiPk5ldWYgdW5pcXVlbWVudDwvbGFiZWw+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3A+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0iU2VhcmNoT2ZmZXItY2hlY2tib3giIGRhdGEtYmVoYXQ9ImZpbHRyZS1WZW5kdSBsb3XDqSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9ImNoZWNrYm94IiBpZD0ic2VhcmNoRm9ybV9iaWVuX2xvdWUiIG5hbWU9InNlYXJjaEZvcm1bYmllbl9sb3VlXSIgZGF0YS1sYWJlbD0iVmVuZHUgbG91w6kiIHZhbHVlPSIxIiAvPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgZm9yPSJzZWFyY2hGb3JtX2JpZW5fbG91ZSI+VmVuZHUgbG91w6k8L2xhYmVsPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZmllbGRzZXQ+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJTZWFyY2hPZmZlci1yZWxvYWQiPjxidXR0b24gdHlwZT0ic3VibWl0IiBkYXRhLWJlaGF0PSJmaWx0cmVBY3R1YWxpc2UtY3JpdGVyZS1zdXBwbGVtZW50YWlyZXMiPkFjdHVhbGlzZXI8L2J1dHRvbj48L3A+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgogICAgPC9kaXY+Cgo8L2Rpdj4KCjxpbnB1dCB0eXBlPSJoaWRkZW4iIGlkPSJzZWFyY2hGb3JtX3R5cGUiIG5hbWU9InNlYXJjaEZvcm1bdHlwZV0iIHZhbHVlPSJhY2hhdCIgLz48L2Zvcm0+CgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJDb250ZW50LW92ZXJmbG93Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iU2VhcmNoQ3JpdGVyaWEiPgogICAgICAgICAgICAgICAgICAgICAgICA8dWwgY2xhc3M9IlNlYXJjaENyaXRlcmlhLXRhZ3MiIGRhdGEtYW5hbHl0aWNzPSJkZXNrdG9wLXRhZ3MtbGlzdCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBjbGFzcz0iVGFnIiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtYW5hbHl0aWNzPSJ0eXBlX2RlX2JpZW4iIGRhdGEtYW5hbHl0aWNzLXZhbHVlPSJhcHBhcnRlbWVudCIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaHJlZj0iL2FjaGF0L2NoYXRvdS03ODQwMC0tc2FpbnQtZ2VybWFpbi1lbi1sYXllLTc4MTAwLS1mb3VycXVldXgtNzgxMTItLWxlLXZlc2luZXQtNzgxMTAtLWNoYW1ib3VyY3ktNzgyNDAtLW1haXNvbnMtbGFmZml0dGUtNzg2MDAtLW1hcmVpbC1tYXJseS03ODc1MC0tbWFybHktbGUtcm9pLTc4MTYwLS1sLWV0YW5nLWxhLXZpbGxlLTc4NjIwLS1jcm9pc3N5LXN1ci1zZWluZS03ODI5MC0tbW9udGVzc29uLTc4MzYwLS1ob3VpbGxlcy03ODgwMC0tc2FydHJvdXZpbGxlLTc4NTAwLS1jYXJyaWVyZXMtc3VyLXNlaW5lLTc4NDIwLS1ydWVpbC1tYWxtYWlzb24tOTI1MDAvbWFpc29uLyhwYXJhbXMpL29uLyh0cmkpL2RhdGUvKG9yZHJlKS9kZXNjIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEFwcGFydGVtZW50CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iVGFnLWRlbGV0ZSIgYXJpYS1sYWJlbD0iKHN1cHByaW1lcikiPjxzcGFuIGFyaWEtaGlkZGVuPSJ0cnVlIj48c3ZnIGNsYXNzPSJpY29uIiBzdHlsZT0id2lkdGg6MTJweDtoZWlnaHQ6MTJweCIgYXJpYS1oaWRkZW49InRydWUiPjx1c2UgeGxpbms6aHJlZj0iL2J1bmRsZXMvZm9uY2lhaW50ZXJuZXQvc3ZnL2ljb25zLnN2ZyNJY29uLS1jbG9zZTIiPjwvdXNlPjwvc3ZnPjwvc3Bhbj48L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgY2xhc3M9IlRhZyIgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkYXRhLWFuYWx5dGljcz0idHlwZV9kZV9iaWVuIiBkYXRhLWFuYWx5dGljcy12YWx1ZT0ibWFpc29uIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBocmVmPSIvYWNoYXQvY2hhdG91LTc4NDAwLS1zYWludC1nZXJtYWluLWVuLWxheWUtNzgxMDAtLWZvdXJxdWV1eC03ODExMi0tbGUtdmVzaW5ldC03ODExMC0tY2hhbWJvdXJjeS03ODI0MC0tbWFpc29ucy1sYWZmaXR0ZS03ODYwMC0tbWFyZWlsLW1hcmx5LTc4NzUwLS1tYXJseS1sZS1yb2ktNzgxNjAtLWwtZXRhbmctbGEtdmlsbGUtNzg2MjAtLWNyb2lzc3ktc3VyLXNlaW5lLTc4MjkwLS1tb250ZXNzb24tNzgzNjAtLWhvdWlsbGVzLTc4ODAwLS1zYXJ0cm91dmlsbGUtNzg1MDAtLWNhcnJpZXJlcy1zdXItc2VpbmUtNzg0MjAtLXJ1ZWlsLW1hbG1haXNvbi05MjUwMC9hcHBhcnRlbWVudC8ocGFyYW1zKS9vbi8odHJpKS9kYXRlLyhvcmRyZSkvZGVzYyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBNYWlzb24KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJUYWctZGVsZXRlIiBhcmlhLWxhYmVsPSIoc3VwcHJpbWVyKSI+PHNwYW4gYXJpYS1oaWRkZW49InRydWUiPjxzdmcgY2xhc3M9Imljb24iIHN0eWxlPSJ3aWR0aDoxMnB4O2hlaWdodDoxMnB4IiBhcmlhLWhpZGRlbj0idHJ1ZSI+PHVzZSB4bGluazpocmVmPSIvYnVuZGxlcy9mb25jaWFpbnRlcm5ldC9zdmcvaWNvbnMuc3ZnI0ljb24tLWNsb3NlMiI+PC91c2U+PC9zdmc+PC9zcGFuPjwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBjbGFzcz0iVGFnIiBkYXRhLWFuYWx5dGljcy1sb2NhdGlvbi10eXBlPSJ2aWxsZSIgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkYXRhLWFuYWx5dGljcz0ibG9jYWxpc2F0aW9uIiBkYXRhLWFuYWx5dGljcy12YWx1ZT0iNzgxNDYgLSBjaGF0b3UiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhyZWY9Ii9hY2hhdC9zYWludC1nZXJtYWluLWVuLWxheWUtNzgxMDAtLWZvdXJxdWV1eC03ODExMi0tbGUtdmVzaW5ldC03ODExMC0tY2hhbWJvdXJjeS03ODI0MC0tbWFpc29ucy1sYWZmaXR0ZS03ODYwMC0tbWFyZWlsLW1hcmx5LTc4NzUwLS1tYXJseS1sZS1yb2ktNzgxNjAtLWwtZXRhbmctbGEtdmlsbGUtNzg2MjAtLWNyb2lzc3ktc3VyLXNlaW5lLTc4MjkwLS1tb250ZXNzb24tNzgzNjAtLWhvdWlsbGVzLTc4ODAwLS1zYXJ0cm91dmlsbGUtNzg1MDAtLWNhcnJpZXJlcy1zdXItc2VpbmUtNzg0MjAtLXJ1ZWlsLW1hbG1haXNvbi05MjUwMC9hcHBhcnRlbWVudC0tbWFpc29uLyhwYXJhbXMpL29uLyh0cmkpL2RhdGUvKG9yZHJlKS9kZXNjIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIENIQVRPVSAoNzg0MDApCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iVGFnLWRlbGV0ZSIgYXJpYS1sYWJlbD0iKHN1cHByaW1lcikiPjxzcGFuIGFyaWEtaGlkZGVuPSJ0cnVlIj48c3ZnIGNsYXNzPSJpY29uIiBzdHlsZT0id2lkdGg6MTJweDtoZWlnaHQ6MTJweCIgYXJpYS1oaWRkZW49InRydWUiPjx1c2UgeGxpbms6aHJlZj0iL2J1bmRsZXMvZm9uY2lhaW50ZXJuZXQvc3ZnL2ljb25zLnN2ZyNJY29uLS1jbG9zZTIiPjwvdXNlPjwvc3ZnPjwvc3Bhbj48L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgY2xhc3M9IlRhZyIgZGF0YS1hbmFseXRpY3MtbG9jYXRpb24tdHlwZT0idmlsbGUiICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1hbmFseXRpY3M9ImxvY2FsaXNhdGlvbiIgZGF0YS1hbmFseXRpY3MtdmFsdWU9Ijc4NTUxIC0gc2FpbnQtZ2VybWFpbi1lbi1sYXllIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBocmVmPSIvYWNoYXQvY2hhdG91LTc4NDAwLS1mb3VycXVldXgtNzgxMTItLWxlLXZlc2luZXQtNzgxMTAtLWNoYW1ib3VyY3ktNzgyNDAtLW1haXNvbnMtbGFmZml0dGUtNzg2MDAtLW1hcmVpbC1tYXJseS03ODc1MC0tbWFybHktbGUtcm9pLTc4MTYwLS1sLWV0YW5nLWxhLXZpbGxlLTc4NjIwLS1jcm9pc3N5LXN1ci1zZWluZS03ODI5MC0tbW9udGVzc29uLTc4MzYwLS1ob3VpbGxlcy03ODgwMC0tc2FydHJvdXZpbGxlLTc4NTAwLS1jYXJyaWVyZXMtc3VyLXNlaW5lLTc4NDIwLS1ydWVpbC1tYWxtYWlzb24tOTI1MDAvYXBwYXJ0ZW1lbnQtLW1haXNvbi8ocGFyYW1zKS9vbi8odHJpKS9kYXRlLyhvcmRyZSkvZGVzYyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBTQUlOVC1HRVJNQUlOLUVOLUxBWUUgKDc4MTAwKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9IlRhZy1kZWxldGUiIGFyaWEtbGFiZWw9IihzdXBwcmltZXIpIj48c3BhbiBhcmlhLWhpZGRlbj0idHJ1ZSI+PHN2ZyBjbGFzcz0iaWNvbiIgc3R5bGU9IndpZHRoOjEycHg7aGVpZ2h0OjEycHgiIGFyaWEtaGlkZGVuPSJ0cnVlIj48dXNlIHhsaW5rOmhyZWY9Ii9idW5kbGVzL2ZvbmNpYWludGVybmV0L3N2Zy9pY29ucy5zdmcjSWNvbi0tY2xvc2UyIj48L3VzZT48L3N2Zz48L3NwYW4+PC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGNsYXNzPSJUYWciIGRhdGEtYW5hbHl0aWNzLWxvY2F0aW9uLXR5cGU9InZpbGxlIiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtYW5hbHl0aWNzPSJsb2NhbGlzYXRpb24iIGRhdGEtYW5hbHl0aWNzLXZhbHVlPSI3ODI1MSAtIGZvdXJxdWV1eCIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaHJlZj0iL2FjaGF0L2NoYXRvdS03ODQwMC0tc2FpbnQtZ2VybWFpbi1lbi1sYXllLTc4MTAwLS1sZS12ZXNpbmV0LTc4MTEwLS1jaGFtYm91cmN5LTc4MjQwLS1tYWlzb25zLWxhZmZpdHRlLTc4NjAwLS1tYXJlaWwtbWFybHktNzg3NTAtLW1hcmx5LWxlLXJvaS03ODE2MC0tbC1ldGFuZy1sYS12aWxsZS03ODYyMC0tY3JvaXNzeS1zdXItc2VpbmUtNzgyOTAtLW1vbnRlc3Nvbi03ODM2MC0taG91aWxsZXMtNzg4MDAtLXNhcnRyb3V2aWxsZS03ODUwMC0tY2FycmllcmVzLXN1ci1zZWluZS03ODQyMC0tcnVlaWwtbWFsbWFpc29uLTkyNTAwL2FwcGFydGVtZW50LS1tYWlzb24vKHBhcmFtcykvb24vKHRyaSkvZGF0ZS8ob3JkcmUpL2Rlc2MiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgRk9VUlFVRVVYICg3ODExMikKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJUYWctZGVsZXRlIiBhcmlhLWxhYmVsPSIoc3VwcHJpbWVyKSI+PHNwYW4gYXJpYS1oaWRkZW49InRydWUiPjxzdmcgY2xhc3M9Imljb24iIHN0eWxlPSJ3aWR0aDoxMnB4O2hlaWdodDoxMnB4IiBhcmlhLWhpZGRlbj0idHJ1ZSI+PHVzZSB4bGluazpocmVmPSIvYnVuZGxlcy9mb25jaWFpbnRlcm5ldC9zdmcvaWNvbnMuc3ZnI0ljb24tLWNsb3NlMiI+PC91c2U+PC9zdmc+PC9zcGFuPjwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBjbGFzcz0iVGFnIiBkYXRhLWFuYWx5dGljcy1sb2NhdGlvbi10eXBlPSJ2aWxsZSIgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkYXRhLWFuYWx5dGljcz0ibG9jYWxpc2F0aW9uIiBkYXRhLWFuYWx5dGljcy12YWx1ZT0iNzg2NTAgLSBsZS12ZXNpbmV0IgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBocmVmPSIvYWNoYXQvY2hhdG91LTc4NDAwLS1zYWludC1nZXJtYWluLWVuLWxheWUtNzgxMDAtLWZvdXJxdWV1eC03ODExMi0tY2hhbWJvdXJjeS03ODI0MC0tbWFpc29ucy1sYWZmaXR0ZS03ODYwMC0tbWFyZWlsLW1hcmx5LTc4NzUwLS1tYXJseS1sZS1yb2ktNzgxNjAtLWwtZXRhbmctbGEtdmlsbGUtNzg2MjAtLWNyb2lzc3ktc3VyLXNlaW5lLTc4MjkwLS1tb250ZXNzb24tNzgzNjAtLWhvdWlsbGVzLTc4ODAwLS1zYXJ0cm91dmlsbGUtNzg1MDAtLWNhcnJpZXJlcy1zdXItc2VpbmUtNzg0MjAtLXJ1ZWlsLW1hbG1haXNvbi05MjUwMC9hcHBhcnRlbWVudC0tbWFpc29uLyhwYXJhbXMpL29uLyh0cmkpL2RhdGUvKG9yZHJlKS9kZXNjIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIExFLVZFU0lORVQgKDc4MTEwKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9IlRhZy1kZWxldGUiIGFyaWEtbGFiZWw9IihzdXBwcmltZXIpIj48c3BhbiBhcmlhLWhpZGRlbj0idHJ1ZSI+PHN2ZyBjbGFzcz0iaWNvbiIgc3R5bGU9IndpZHRoOjEycHg7aGVpZ2h0OjEycHgiIGFyaWEtaGlkZGVuPSJ0cnVlIj48dXNlIHhsaW5rOmhyZWY9Ii9idW5kbGVzL2ZvbmNpYWludGVybmV0L3N2Zy9pY29ucy5zdmcjSWNvbi0tY2xvc2UyIj48L3VzZT48L3N2Zz48L3NwYW4+PC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGNsYXNzPSJUYWciIGRhdGEtYW5hbHl0aWNzLWxvY2F0aW9uLXR5cGU9InZpbGxlIiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtYW5hbHl0aWNzPSJsb2NhbGlzYXRpb24iIGRhdGEtYW5hbHl0aWNzLXZhbHVlPSI3ODEzMyAtIGNoYW1ib3VyY3kiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhyZWY9Ii9hY2hhdC9jaGF0b3UtNzg0MDAtLXNhaW50LWdlcm1haW4tZW4tbGF5ZS03ODEwMC0tZm91cnF1ZXV4LTc4MTEyLS1sZS12ZXNpbmV0LTc4MTEwLS1tYWlzb25zLWxhZmZpdHRlLTc4NjAwLS1tYXJlaWwtbWFybHktNzg3NTAtLW1hcmx5LWxlLXJvaS03ODE2MC0tbC1ldGFuZy1sYS12aWxsZS03ODYyMC0tY3JvaXNzeS1zdXItc2VpbmUtNzgyOTAtLW1vbnRlc3Nvbi03ODM2MC0taG91aWxsZXMtNzg4MDAtLXNhcnRyb3V2aWxsZS03ODUwMC0tY2FycmllcmVzLXN1ci1zZWluZS03ODQyMC0tcnVlaWwtbWFsbWFpc29uLTkyNTAwL2FwcGFydGVtZW50LS1tYWlzb24vKHBhcmFtcykvb24vKHRyaSkvZGF0ZS8ob3JkcmUpL2Rlc2MiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgQ0hBTUJPVVJDWSAoNzgyNDApCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iVGFnLWRlbGV0ZSIgYXJpYS1sYWJlbD0iKHN1cHByaW1lcikiPjxzcGFuIGFyaWEtaGlkZGVuPSJ0cnVlIj48c3ZnIGNsYXNzPSJpY29uIiBzdHlsZT0id2lkdGg6MTJweDtoZWlnaHQ6MTJweCIgYXJpYS1oaWRkZW49InRydWUiPjx1c2UgeGxpbms6aHJlZj0iL2J1bmRsZXMvZm9uY2lhaW50ZXJuZXQvc3ZnL2ljb25zLnN2ZyNJY29uLS1jbG9zZTIiPjwvdXNlPjwvc3ZnPjwvc3Bhbj48L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgY2xhc3M9IlRhZyIgZGF0YS1hbmFseXRpY3MtbG9jYXRpb24tdHlwZT0idmlsbGUiICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1hbmFseXRpY3M9ImxvY2FsaXNhdGlvbiIgZGF0YS1hbmFseXRpY3MtdmFsdWU9Ijc4MzU4IC0gbWFpc29ucy1sYWZmaXR0ZSIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaHJlZj0iL2FjaGF0L2NoYXRvdS03ODQwMC0tc2FpbnQtZ2VybWFpbi1lbi1sYXllLTc4MTAwLS1mb3VycXVldXgtNzgxMTItLWxlLXZlc2luZXQtNzgxMTAtLWNoYW1ib3VyY3ktNzgyNDAtLW1hcmVpbC1tYXJseS03ODc1MC0tbWFybHktbGUtcm9pLTc4MTYwLS1sLWV0YW5nLWxhLXZpbGxlLTc4NjIwLS1jcm9pc3N5LXN1ci1zZWluZS03ODI5MC0tbW9udGVzc29uLTc4MzYwLS1ob3VpbGxlcy03ODgwMC0tc2FydHJvdXZpbGxlLTc4NTAwLS1jYXJyaWVyZXMtc3VyLXNlaW5lLTc4NDIwLS1ydWVpbC1tYWxtYWlzb24tOTI1MDAvYXBwYXJ0ZW1lbnQtLW1haXNvbi8ocGFyYW1zKS9vbi8odHJpKS9kYXRlLyhvcmRyZSkvZGVzYyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBNQUlTT05TLUxBRkZJVFRFICg3ODYwMCkKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJUYWctZGVsZXRlIiBhcmlhLWxhYmVsPSIoc3VwcHJpbWVyKSI+PHNwYW4gYXJpYS1oaWRkZW49InRydWUiPjxzdmcgY2xhc3M9Imljb24iIHN0eWxlPSJ3aWR0aDoxMnB4O2hlaWdodDoxMnB4IiBhcmlhLWhpZGRlbj0idHJ1ZSI+PHVzZSB4bGluazpocmVmPSIvYnVuZGxlcy9mb25jaWFpbnRlcm5ldC9zdmcvaWNvbnMuc3ZnI0ljb24tLWNsb3NlMiI+PC91c2U+PC9zdmc+PC9zcGFuPjwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBjbGFzcz0iVGFnIiBkYXRhLWFuYWx5dGljcy1sb2NhdGlvbi10eXBlPSJ2aWxsZSIgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkYXRhLWFuYWx5dGljcz0ibG9jYWxpc2F0aW9uIiBkYXRhLWFuYWx5dGljcy12YWx1ZT0iNzgzNjcgLSBtYXJlaWwtbWFybHkiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhyZWY9Ii9hY2hhdC9jaGF0b3UtNzg0MDAtLXNhaW50LWdlcm1haW4tZW4tbGF5ZS03ODEwMC0tZm91cnF1ZXV4LTc4MTEyLS1sZS12ZXNpbmV0LTc4MTEwLS1jaGFtYm91cmN5LTc4MjQwLS1tYWlzb25zLWxhZmZpdHRlLTc4NjAwLS1tYXJseS1sZS1yb2ktNzgxNjAtLWwtZXRhbmctbGEtdmlsbGUtNzg2MjAtLWNyb2lzc3ktc3VyLXNlaW5lLTc4MjkwLS1tb250ZXNzb24tNzgzNjAtLWhvdWlsbGVzLTc4ODAwLS1zYXJ0cm91dmlsbGUtNzg1MDAtLWNhcnJpZXJlcy1zdXItc2VpbmUtNzg0MjAtLXJ1ZWlsLW1hbG1haXNvbi05MjUwMC9hcHBhcnRlbWVudC0tbWFpc29uLyhwYXJhbXMpL29uLyh0cmkpL2RhdGUvKG9yZHJlKS9kZXNjIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIE1BUkVJTC1NQVJMWSAoNzg3NTApCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iVGFnLWRlbGV0ZSIgYXJpYS1sYWJlbD0iKHN1cHByaW1lcikiPjxzcGFuIGFyaWEtaGlkZGVuPSJ0cnVlIj48c3ZnIGNsYXNzPSJpY29uIiBzdHlsZT0id2lkdGg6MTJweDtoZWlnaHQ6MTJweCIgYXJpYS1oaWRkZW49InRydWUiPjx1c2UgeGxpbms6aHJlZj0iL2J1bmRsZXMvZm9uY2lhaW50ZXJuZXQvc3ZnL2ljb25zLnN2ZyNJY29uLS1jbG9zZTIiPjwvdXNlPjwvc3ZnPjwvc3Bhbj48L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgY2xhc3M9IlRhZyIgZGF0YS1hbmFseXRpY3MtbG9jYXRpb24tdHlwZT0idmlsbGUiICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1hbmFseXRpY3M9ImxvY2FsaXNhdGlvbiIgZGF0YS1hbmFseXRpY3MtdmFsdWU9Ijc4MzcyIC0gbWFybHktbGUtcm9pIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBocmVmPSIvYWNoYXQvY2hhdG91LTc4NDAwLS1zYWludC1nZXJtYWluLWVuLWxheWUtNzgxMDAtLWZvdXJxdWV1eC03ODExMi0tbGUtdmVzaW5ldC03ODExMC0tY2hhbWJvdXJjeS03ODI0MC0tbWFpc29ucy1sYWZmaXR0ZS03ODYwMC0tbWFyZWlsLW1hcmx5LTc4NzUwLS1sLWV0YW5nLWxhLXZpbGxlLTc4NjIwLS1jcm9pc3N5LXN1ci1zZWluZS03ODI5MC0tbW9udGVzc29uLTc4MzYwLS1ob3VpbGxlcy03ODgwMC0tc2FydHJvdXZpbGxlLTc4NTAwLS1jYXJyaWVyZXMtc3VyLXNlaW5lLTc4NDIwLS1ydWVpbC1tYWxtYWlzb24tOTI1MDAvYXBwYXJ0ZW1lbnQtLW1haXNvbi8ocGFyYW1zKS9vbi8odHJpKS9kYXRlLyhvcmRyZSkvZGVzYyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBNQVJMWS1MRS1ST0kgKDc4MTYwKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9IlRhZy1kZWxldGUiIGFyaWEtbGFiZWw9IihzdXBwcmltZXIpIj48c3BhbiBhcmlhLWhpZGRlbj0idHJ1ZSI+PHN2ZyBjbGFzcz0iaWNvbiIgc3R5bGU9IndpZHRoOjEycHg7aGVpZ2h0OjEycHgiIGFyaWEtaGlkZGVuPSJ0cnVlIj48dXNlIHhsaW5rOmhyZWY9Ii9idW5kbGVzL2ZvbmNpYWludGVybmV0L3N2Zy9pY29ucy5zdmcjSWNvbi0tY2xvc2UyIj48L3VzZT48L3N2Zz48L3NwYW4+PC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGNsYXNzPSJUYWciIGRhdGEtYW5hbHl0aWNzLWxvY2F0aW9uLXR5cGU9InZpbGxlIiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtYW5hbHl0aWNzPSJsb2NhbGlzYXRpb24iIGRhdGEtYW5hbHl0aWNzLXZhbHVlPSI3ODIyNCAtIGwtZXRhbmctbGEtdmlsbGUiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhyZWY9Ii9hY2hhdC9jaGF0b3UtNzg0MDAtLXNhaW50LWdlcm1haW4tZW4tbGF5ZS03ODEwMC0tZm91cnF1ZXV4LTc4MTEyLS1sZS12ZXNpbmV0LTc4MTEwLS1jaGFtYm91cmN5LTc4MjQwLS1tYWlzb25zLWxhZmZpdHRlLTc4NjAwLS1tYXJlaWwtbWFybHktNzg3NTAtLW1hcmx5LWxlLXJvaS03ODE2MC0tY3JvaXNzeS1zdXItc2VpbmUtNzgyOTAtLW1vbnRlc3Nvbi03ODM2MC0taG91aWxsZXMtNzg4MDAtLXNhcnRyb3V2aWxsZS03ODUwMC0tY2FycmllcmVzLXN1ci1zZWluZS03ODQyMC0tcnVlaWwtbWFsbWFpc29uLTkyNTAwL2FwcGFydGVtZW50LS1tYWlzb24vKHBhcmFtcykvb24vKHRyaSkvZGF0ZS8ob3JkcmUpL2Rlc2MiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgTC1FVEFORy1MQS1WSUxMRSAoNzg2MjApCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iVGFnLWRlbGV0ZSIgYXJpYS1sYWJlbD0iKHN1cHByaW1lcikiPjxzcGFuIGFyaWEtaGlkZGVuPSJ0cnVlIj48c3ZnIGNsYXNzPSJpY29uIiBzdHlsZT0id2lkdGg6MTJweDtoZWlnaHQ6MTJweCIgYXJpYS1oaWRkZW49InRydWUiPjx1c2UgeGxpbms6aHJlZj0iL2J1bmRsZXMvZm9uY2lhaW50ZXJuZXQvc3ZnL2ljb25zLnN2ZyNJY29uLS1jbG9zZTIiPjwvdXNlPjwvc3ZnPjwvc3Bhbj48L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgY2xhc3M9IlRhZyIgZGF0YS1hbmFseXRpY3MtbG9jYXRpb24tdHlwZT0idmlsbGUiICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1hbmFseXRpY3M9ImxvY2FsaXNhdGlvbiIgZGF0YS1hbmFseXRpY3MtdmFsdWU9Ijc4MTkwIC0gY3JvaXNzeS1zdXItc2VpbmUiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhyZWY9Ii9hY2hhdC9jaGF0b3UtNzg0MDAtLXNhaW50LWdlcm1haW4tZW4tbGF5ZS03ODEwMC0tZm91cnF1ZXV4LTc4MTEyLS1sZS12ZXNpbmV0LTc4MTEwLS1jaGFtYm91cmN5LTc4MjQwLS1tYWlzb25zLWxhZmZpdHRlLTc4NjAwLS1tYXJlaWwtbWFybHktNzg3NTAtLW1hcmx5LWxlLXJvaS03ODE2MC0tbC1ldGFuZy1sYS12aWxsZS03ODYyMC0tbW9udGVzc29uLTc4MzYwLS1ob3VpbGxlcy03ODgwMC0tc2FydHJvdXZpbGxlLTc4NTAwLS1jYXJyaWVyZXMtc3VyLXNlaW5lLTc4NDIwLS1ydWVpbC1tYWxtYWlzb24tOTI1MDAvYXBwYXJ0ZW1lbnQtLW1haXNvbi8ocGFyYW1zKS9vbi8odHJpKS9kYXRlLyhvcmRyZSkvZGVzYyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBDUk9JU1NZLVNVUi1TRUlORSAoNzgyOTApCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iVGFnLWRlbGV0ZSIgYXJpYS1sYWJlbD0iKHN1cHByaW1lcikiPjxzcGFuIGFyaWEtaGlkZGVuPSJ0cnVlIj48c3ZnIGNsYXNzPSJpY29uIiBzdHlsZT0id2lkdGg6MTJweDtoZWlnaHQ6MTJweCIgYXJpYS1oaWRkZW49InRydWUiPjx1c2UgeGxpbms6aHJlZj0iL2J1bmRsZXMvZm9uY2lhaW50ZXJuZXQvc3ZnL2ljb25zLnN2ZyNJY29uLS1jbG9zZTIiPjwvdXNlPjwvc3ZnPjwvc3Bhbj48L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgY2xhc3M9IlRhZyIgZGF0YS1hbmFseXRpY3MtbG9jYXRpb24tdHlwZT0idmlsbGUiICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1hbmFseXRpY3M9ImxvY2FsaXNhdGlvbiIgZGF0YS1hbmFseXRpY3MtdmFsdWU9Ijc4NDE4IC0gbW9udGVzc29uIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBocmVmPSIvYWNoYXQvY2hhdG91LTc4NDAwLS1zYWludC1nZXJtYWluLWVuLWxheWUtNzgxMDAtLWZvdXJxdWV1eC03ODExMi0tbGUtdmVzaW5ldC03ODExMC0tY2hhbWJvdXJjeS03ODI0MC0tbWFpc29ucy1sYWZmaXR0ZS03ODYwMC0tbWFyZWlsLW1hcmx5LTc4NzUwLS1tYXJseS1sZS1yb2ktNzgxNjAtLWwtZXRhbmctbGEtdmlsbGUtNzg2MjAtLWNyb2lzc3ktc3VyLXNlaW5lLTc4MjkwLS1ob3VpbGxlcy03ODgwMC0tc2FydHJvdXZpbGxlLTc4NTAwLS1jYXJyaWVyZXMtc3VyLXNlaW5lLTc4NDIwLS1ydWVpbC1tYWxtYWlzb24tOTI1MDAvYXBwYXJ0ZW1lbnQtLW1haXNvbi8ocGFyYW1zKS9vbi8odHJpKS9kYXRlLyhvcmRyZSkvZGVzYyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBNT05URVNTT04gKDc4MzYwKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9IlRhZy1kZWxldGUiIGFyaWEtbGFiZWw9IihzdXBwcmltZXIpIj48c3BhbiBhcmlhLWhpZGRlbj0idHJ1ZSI+PHN2ZyBjbGFzcz0iaWNvbiIgc3R5bGU9IndpZHRoOjEycHg7aGVpZ2h0OjEycHgiIGFyaWEtaGlkZGVuPSJ0cnVlIj48dXNlIHhsaW5rOmhyZWY9Ii9idW5kbGVzL2ZvbmNpYWludGVybmV0L3N2Zy9pY29ucy5zdmcjSWNvbi0tY2xvc2UyIj48L3VzZT48L3N2Zz48L3NwYW4+PC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGNsYXNzPSJUYWciIGRhdGEtYW5hbHl0aWNzLWxvY2F0aW9uLXR5cGU9InZpbGxlIiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtYW5hbHl0aWNzPSJsb2NhbGlzYXRpb24iIGRhdGEtYW5hbHl0aWNzLXZhbHVlPSI3ODMxMSAtIGhvdWlsbGVzIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBocmVmPSIvYWNoYXQvY2hhdG91LTc4NDAwLS1zYWludC1nZXJtYWluLWVuLWxheWUtNzgxMDAtLWZvdXJxdWV1eC03ODExMi0tbGUtdmVzaW5ldC03ODExMC0tY2hhbWJvdXJjeS03ODI0MC0tbWFpc29ucy1sYWZmaXR0ZS03ODYwMC0tbWFyZWlsLW1hcmx5LTc4NzUwLS1tYXJseS1sZS1yb2ktNzgxNjAtLWwtZXRhbmctbGEtdmlsbGUtNzg2MjAtLWNyb2lzc3ktc3VyLXNlaW5lLTc4MjkwLS1tb250ZXNzb24tNzgzNjAtLXNhcnRyb3V2aWxsZS03ODUwMC0tY2FycmllcmVzLXN1ci1zZWluZS03ODQyMC0tcnVlaWwtbWFsbWFpc29uLTkyNTAwL2FwcGFydGVtZW50LS1tYWlzb24vKHBhcmFtcykvb24vKHRyaSkvZGF0ZS8ob3JkcmUpL2Rlc2MiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgSE9VSUxMRVMgKDc4ODAwKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9IlRhZy1kZWxldGUiIGFyaWEtbGFiZWw9IihzdXBwcmltZXIpIj48c3BhbiBhcmlhLWhpZGRlbj0idHJ1ZSI+PHN2ZyBjbGFzcz0iaWNvbiIgc3R5bGU9IndpZHRoOjEycHg7aGVpZ2h0OjEycHgiIGFyaWEtaGlkZGVuPSJ0cnVlIj48dXNlIHhsaW5rOmhyZWY9Ii9idW5kbGVzL2ZvbmNpYWludGVybmV0L3N2Zy9pY29ucy5zdmcjSWNvbi0tY2xvc2UyIj48L3VzZT48L3N2Zz48L3NwYW4+PC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGNsYXNzPSJUYWciIGRhdGEtYW5hbHl0aWNzLWxvY2F0aW9uLXR5cGU9InZpbGxlIiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtYW5hbHl0aWNzPSJsb2NhbGlzYXRpb24iIGRhdGEtYW5hbHl0aWNzLXZhbHVlPSI3ODU4NiAtIHNhcnRyb3V2aWxsZSIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaHJlZj0iL2FjaGF0L2NoYXRvdS03ODQwMC0tc2FpbnQtZ2VybWFpbi1lbi1sYXllLTc4MTAwLS1mb3VycXVldXgtNzgxMTItLWxlLXZlc2luZXQtNzgxMTAtLWNoYW1ib3VyY3ktNzgyNDAtLW1haXNvbnMtbGFmZml0dGUtNzg2MDAtLW1hcmVpbC1tYXJseS03ODc1MC0tbWFybHktbGUtcm9pLTc4MTYwLS1sLWV0YW5nLWxhLXZpbGxlLTc4NjIwLS1jcm9pc3N5LXN1ci1zZWluZS03ODI5MC0tbW9udGVzc29uLTc4MzYwLS1ob3VpbGxlcy03ODgwMC0tY2FycmllcmVzLXN1ci1zZWluZS03ODQyMC0tcnVlaWwtbWFsbWFpc29uLTkyNTAwL2FwcGFydGVtZW50LS1tYWlzb24vKHBhcmFtcykvb24vKHRyaSkvZGF0ZS8ob3JkcmUpL2Rlc2MiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgU0FSVFJPVVZJTExFICg3ODUwMCkKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJUYWctZGVsZXRlIiBhcmlhLWxhYmVsPSIoc3VwcHJpbWVyKSI+PHNwYW4gYXJpYS1oaWRkZW49InRydWUiPjxzdmcgY2xhc3M9Imljb24iIHN0eWxlPSJ3aWR0aDoxMnB4O2hlaWdodDoxMnB4IiBhcmlhLWhpZGRlbj0idHJ1ZSI+PHVzZSB4bGluazpocmVmPSIvYnVuZGxlcy9mb25jaWFpbnRlcm5ldC9zdmcvaWNvbnMuc3ZnI0ljb24tLWNsb3NlMiI+PC91c2U+PC9zdmc+PC9zcGFuPjwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBjbGFzcz0iVGFnIiBkYXRhLWFuYWx5dGljcy1sb2NhdGlvbi10eXBlPSJ2aWxsZSIgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkYXRhLWFuYWx5dGljcz0ibG9jYWxpc2F0aW9uIiBkYXRhLWFuYWx5dGljcy12YWx1ZT0iNzgxMjQgLSBjYXJyaWVyZXMtc3VyLXNlaW5lIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBocmVmPSIvYWNoYXQvY2hhdG91LTc4NDAwLS1zYWludC1nZXJtYWluLWVuLWxheWUtNzgxMDAtLWZvdXJxdWV1eC03ODExMi0tbGUtdmVzaW5ldC03ODExMC0tY2hhbWJvdXJjeS03ODI0MC0tbWFpc29ucy1sYWZmaXR0ZS03ODYwMC0tbWFyZWlsLW1hcmx5LTc4NzUwLS1tYXJseS1sZS1yb2ktNzgxNjAtLWwtZXRhbmctbGEtdmlsbGUtNzg2MjAtLWNyb2lzc3ktc3VyLXNlaW5lLTc4MjkwLS1tb250ZXNzb24tNzgzNjAtLWhvdWlsbGVzLTc4ODAwLS1zYXJ0cm91dmlsbGUtNzg1MDAtLXJ1ZWlsLW1hbG1haXNvbi05MjUwMC9hcHBhcnRlbWVudC0tbWFpc29uLyhwYXJhbXMpL29uLyh0cmkpL2RhdGUvKG9yZHJlKS9kZXNjIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIENBUlJJRVJFUy1TVVItU0VJTkUgKDc4NDIwKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9IlRhZy1kZWxldGUiIGFyaWEtbGFiZWw9IihzdXBwcmltZXIpIj48c3BhbiBhcmlhLWhpZGRlbj0idHJ1ZSI+PHN2ZyBjbGFzcz0iaWNvbiIgc3R5bGU9IndpZHRoOjEycHg7aGVpZ2h0OjEycHgiIGFyaWEtaGlkZGVuPSJ0cnVlIj48dXNlIHhsaW5rOmhyZWY9Ii9idW5kbGVzL2ZvbmNpYWludGVybmV0L3N2Zy9pY29ucy5zdmcjSWNvbi0tY2xvc2UyIj48L3VzZT48L3N2Zz48L3NwYW4+PC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGNsYXNzPSJUYWciIGRhdGEtYW5hbHl0aWNzLWxvY2F0aW9uLXR5cGU9InZpbGxlIiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtYW5hbHl0aWNzPSJsb2NhbGlzYXRpb24iIGRhdGEtYW5hbHl0aWNzLXZhbHVlPSI5MjA2MyAtIHJ1ZWlsLW1hbG1haXNvbiIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaHJlZj0iL2FjaGF0L2NoYXRvdS03ODQwMC0tc2FpbnQtZ2VybWFpbi1lbi1sYXllLTc4MTAwLS1mb3VycXVldXgtNzgxMTItLWxlLXZlc2luZXQtNzgxMTAtLWNoYW1ib3VyY3ktNzgyNDAtLW1haXNvbnMtbGFmZml0dGUtNzg2MDAtLW1hcmVpbC1tYXJseS03ODc1MC0tbWFybHktbGUtcm9pLTc4MTYwLS1sLWV0YW5nLWxhLXZpbGxlLTc4NjIwLS1jcm9pc3N5LXN1ci1zZWluZS03ODI5MC0tbW9udGVzc29uLTc4MzYwLS1ob3VpbGxlcy03ODgwMC0tc2FydHJvdXZpbGxlLTc4NTAwLS1jYXJyaWVyZXMtc3VyLXNlaW5lLTc4NDIwL2FwcGFydGVtZW50LS1tYWlzb24vKHBhcmFtcykvb24vKHRyaSkvZGF0ZS8ob3JkcmUpL2Rlc2MiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgUlVFSUwtTUFMTUFJU09OICg5MjUwMCkKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJUYWctZGVsZXRlIiBhcmlhLWxhYmVsPSIoc3VwcHJpbWVyKSI+PHNwYW4gYXJpYS1oaWRkZW49InRydWUiPjxzdmcgY2xhc3M9Imljb24iIHN0eWxlPSJ3aWR0aDoxMnB4O2hlaWdodDoxMnB4IiBhcmlhLWhpZGRlbj0idHJ1ZSI+PHVzZSB4bGluazpocmVmPSIvYnVuZGxlcy9mb25jaWFpbnRlcm5ldC9zdmcvaWNvbnMuc3ZnI0ljb24tLWNsb3NlMiI+PC91c2U+PC9zdmc+PC9zcGFuPjwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3VsPgoKICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJTZWFyY2hDcml0ZXJpYS1hbGVydCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHA+UmVjZXZvaXIgcGFyIGUtbWFpbCBsZXMgbm91dmVhdXggYmllbnMgY29ycmVzcG9uZGFudCDDoCB2b3RyZSByZWNoZXJjaGUuPC9wPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwPjxhIGNsYXNzPSJCdG4gQnRuLS1zbWFsbCBJY29uLS1iZWxsIE1vZGFsLWxpbmstLWFqYXgiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaHJlZj0iL2VtYWlsX2FsZXJ0X3BvcGluL2FjaGF0LyU3QiUyMnElMjI6JTIyKjoqJTIyLCUyMmZxJTIyOiUyMiUyOGF0dHJfdHlwZV9zOnByb3BlcnR5JTIwQU5EJTIwYXR0cl9wcm9wZXJ0eV90eXBlX3M6cHVyY2hhc2UlMjBBTkQlMjAlMjhhdHRyX3R5cGVfYmllbl9tczolNUMlMjJhcHBhcnRlbWVudCU1QyUyMiUyME9SJTIwYXR0cl9sb2dlbWVudHNfdHlwZV9fX19tczolNUMlMjJUJTVDJTIyJTIwT1IlMjBhdHRyX3R5cGVfYmllbl9tczolNUMlMjJtYWlzb24lNUMlMjIlMjBPUiUyMGF0dHJfbG9nZW1lbnRzX3R5cGVfX19fbXM6JTVDJTIyTSU1QyUyMiUyOSUyMEFORCUyMCUyOGF0dHJfcHJpeF92ZW50ZV90ZjolNUIwJTIwVE8lMjAqJTVEJTIwT1IlMjBhdHRyX2xvZ2VtZW50c19wcml4X19fX2Y6JTVCMCUyMFRPJTIwKiU1RCUyOSUyMEFORCUyMCUyOGF0dHJfY2Fub25pY2FsX25hbWVfczpjaGF0b3UtNzg0MDAqJTIwT1IlMjBhdHRyX2Nhbm9uaWNhbF9uYW1lX3M6c2FpbnQtZ2VybWFpbi1lbi1sYXllLTc4MTAwKiUyME9SJTIwYXR0cl9jYW5vbmljYWxfbmFtZV9zOmZvdXJxdWV1eC03ODExMiolMjBPUiUyMGF0dHJfY2Fub25pY2FsX25hbWVfczpsZS12ZXNpbmV0LTc4MTEwKiUyME9SJTIwYXR0cl9jYW5vbmljYWxfbmFtZV9zOmNoYW1ib3VyY3ktNzgyNDAqJTIwT1IlMjBhdHRyX2Nhbm9uaWNhbF9uYW1lX3M6bWFpc29ucy1sYWZmaXR0ZS03ODYwMColMjBPUiUyMGF0dHJfY2Fub25pY2FsX25hbWVfczptYXJlaWwtbWFybHktNzg3NTAqJTIwT1IlMjBhdHRyX2Nhbm9uaWNhbF9uYW1lX3M6bWFybHktbGUtcm9pLTc4MTYwKiUyME9SJTIwYXR0cl9jYW5vbmljYWxfbmFtZV9zOmwtZXRhbmctbGEtdmlsbGUtNzg2MjAqJTIwT1IlMjBhdHRyX2Nhbm9uaWNhbF9uYW1lX3M6Y3JvaXNzeS1zdXItc2VpbmUtNzgyOTAqJTIwT1IlMjBhdHRyX2Nhbm9uaWNhbF9uYW1lX3M6bW9udGVzc29uLTc4MzYwKiUyME9SJTIwYXR0cl9jYW5vbmljYWxfbmFtZV9zOmhvdWlsbGVzLTc4ODAwKiUyME9SJTIwYXR0cl9jYW5vbmljYWxfbmFtZV9zOnNhcnRyb3V2aWxsZS03ODUwMColMjBPUiUyMGF0dHJfY2Fub25pY2FsX25hbWVfczpjYXJyaWVyZXMtc3VyLXNlaW5lLTc4NDIwKiUyME9SJTIwYXR0cl9jYW5vbmljYWxfbmFtZV9zOnJ1ZWlsLW1hbG1haXNvbi05MjUwMColMjklMjBBTkQlMjBtZXRhX2luc3RhbGxhdGlvbl9pZF9tczo4Y2M4YTBiYmJhODVjNWFmMDYxZjIxMGM4NTBhMjg5ZiUyMEFORCUyMG1ldGFfaXNfaW52aXNpYmxlX2I6ZmFsc2UlMjBBTkQlMjAlMjhtZXRhX3NlY3Rpb25faWRfc2k6MSUyME9SJTIwbWV0YV9zZWN0aW9uX2lkX3NpOjMlMjklMjBBTkQlMjBtZXRhX2xhbmd1YWdlX2NvZGVfbXM6ZnJlLUZSJTIwQU5EJTIwbWV0YV9pbnN0YWxsYXRpb25faWRfbXM6OGNjOGEwYmJiYTg1YzVhZjA2MWYyMTBjODUwYTI4OWYlMjBBTkQlMjBtZXRhX2lzX2ludmlzaWJsZV9iOmZhbHNlJTIwQU5EJTIwJTI4bWV0YV9zZWN0aW9uX2lkX3NpOjElMjBPUiUyMG1ldGFfc2VjdGlvbl9pZF9zaTozJTI5JTIwQU5EJTIwbWV0YV9sYW5ndWFnZV9jb2RlX21zOmZyZS1GUiUyOSUyMiwlMjJxZiUyMjolMjJhdHRyX25hbWVfcyU1RTIuMCUyMG1ldGFfbmFtZV90JTVFMy4wJTIwZXpmX2RmX3RleHQlMjIsJTIycXQlMjI6JTIyZXpwdWJsaXNoJTIyLCUyMmRlZlR5cGUlMjI6JTIyZWRpc21heCUyMiwlMjJzdGFydCUyMjowLCUyMnJvd3MlMjI6MTUsJTIyc29ydCUyMjolMjIlMjIsJTIyZmwlMjI6bnVsbCwlMjJmYWNldCUyMjolMjJmYWxzZSUyMiU3RCIgZGF0YS1hbmFseXRpY3M9ImNyZWF0ZS1hbGVydC1idG4iIGRhdGEtYmVoYXQ9Im1haWxBbGVydEJ1dHRvbiI+Q3LDqWVyCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB1bmUgYWxlcnRlPC9hPjwvcD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJoaWRkZW4iIHZhbHVlPSJ7fSIvPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9ImhpZGRlbiIgdmFsdWU9InsmcXVvdDtMb2NhbGlzYXRpb24mcXVvdDs6JnF1b3Q7Y2hhdG91ICg3ODQwMCksc2FpbnQtZ2VybWFpbi1lbi1sYXllICg3ODEwMCksZm91cnF1ZXV4ICg3ODExMiksbGUtdmVzaW5ldCAoNzgxMTApLGNoYW1ib3VyY3kgKDc4MjQwKSxtYWlzb25zLWxhZmZpdHRlICg3ODYwMCksbWFyZWlsLW1hcmx5ICg3ODc1MCksbWFybHktbGUtcm9pICg3ODE2MCksbC1ldGFuZy1sYS12aWxsZSAoNzg2MjApLGNyb2lzc3ktc3VyLXNlaW5lICg3ODI5MCksbW9udGVzc29uICg3ODM2MCksaG91aWxsZXMgKDc4ODAwKSxzYXJ0cm91dmlsbGUgKDc4NTAwKSxjYXJyaWVyZXMtc3VyLXNlaW5lICg3ODQyMCkscnVlaWwtbWFsbWFpc29uICg5MjUwMCkmcXVvdDssJnF1b3Q7VHlwZSZxdW90OzomcXVvdDthY2hhdCZxdW90OywmcXVvdDtEaXN0YW5jZSZxdW90OzpudWxsLCZxdW90O1R5cGUgZGUgYmllbiZxdW90OzpbJnF1b3Q7YXBwYXJ0ZW1lbnQmcXVvdDssJnF1b3Q7bWFpc29uJnF1b3Q7XSwmcXVvdDtTdXJmYWNlIG1pbiZxdW90OzpudWxsLCZxdW90O1N1cmZhY2UgbWF4JnF1b3Q7Om51bGwsJnF1b3Q7U3VyZmFjZSB0ZXJyYWluIG1pbiZxdW90OzpudWxsLCZxdW90O1N1cmZhY2UgdGVycmFpbiBtYXgmcXVvdDs6bnVsbCwmcXVvdDtQcml4IG1pbiZxdW90OzpudWxsLCZxdW90O1ByaXggbWF4JnF1b3Q7Om51bGwsJnF1b3Q7UGlcdTAwZThjZXMmcXVvdDs6bnVsbCwmcXVvdDtQYXJraW5nIFwvIGdhcmFnZSBcLyBib3gmcXVvdDs6ZmFsc2UsJnF1b3Q7QXNjZW5zZXVyJnF1b3Q7OmZhbHNlLCZxdW90O1NvdXMtc29sIFwvIGNhdmUmcXVvdDs6ZmFsc2UsJnF1b3Q7UGlzY2luZSZxdW90OzpmYWxzZSwmcXVvdDtBY2NcdTAwZThzIGhhbmRpY2FwXHUwMGU5cyZxdW90OzpmYWxzZSwmcXVvdDtCYWxjb24gXC8gdGVycmFzc2UmcXVvdDs6ZmFsc2UsJnF1b3Q7Q2xpbWF0aXNhdGlvbiZxdW90OzpmYWxzZSwmcXVvdDtUZXJyYWluIFwvIGphcmRpbiZxdW90OzpmYWxzZSwmcXVvdDtOZXVmIHVuaXF1ZW1lbnQmcXVvdDs6ZmFsc2UsJnF1b3Q7VmVuZHUgbG91XHUwMGU5JnF1b3Q7OmZhbHNlLCZxdW90O0NoYW1icmVzJnF1b3Q7Om51bGwsJnF1b3Q7Ulx1MDBlOWZcdTAwZTlyZW5jZSZxdW90OzpudWxsfSIvPgoKICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgCgogICAgICAgICAgICAgICAgPG1haW4gY2xhc3M9IkNvbnRlbnQtbWFpbiBzZWFyY2gtcGFnZSIgcm9sZT0ibWFpbiI+CiAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9IlNlYXJjaFNvcnQiIGRhdGEtd2lkZ2V0PSJNaW5pZnlNb2JpbGUiIGRhdGEtd2lkZ2V0LXRpdGxlPSJUcmllciIgZGF0YS13aWRnZXQtc3RhdGU9ImNsb3NlIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxoMiBjbGFzcz0iU2VhcmNoU29ydC10b3RhbCI+NzkgcsOpc3VsdGF0cyA8L2gyPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9IlNlYXJjaFNvcnQtaW5uZXIiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJTZWFyY2hTb3J0LWxhYmVsIj5UcmllciBwYXIgOjwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBkYXRhLWJlaGF0PSJmaWx0cmVQcml4IiBocmVmPSJodHRwczovL2ZyLmZvbmNpYS5jb20vYWNoYXQvY2hhdG91LTc4NDAwLS1zYWludC1nZXJtYWluLWVuLWxheWUtNzgxMDAtLWZvdXJxdWV1eC03ODExMi0tbGUtdmVzaW5ldC03ODExMC0tY2hhbWJvdXJjeS03ODI0MC0tbWFpc29ucy1sYWZmaXR0ZS03ODYwMC0tbWFyZWlsLW1hcmx5LTc4NzUwLS1tYXJseS1sZS1yb2ktNzgxNjAtLWwtZXRhbmctbGEtdmlsbGUtNzg2MjAtLWNyb2lzc3ktc3VyLXNlaW5lLTc4MjkwLS1tb250ZXNzb24tNzgzNjAtLWhvdWlsbGVzLTc4ODAwLS1zYXJ0cm91dmlsbGUtNzg1MDAtLWNhcnJpZXJlcy1zdXItc2VpbmUtNzg0MjAtLXJ1ZWlsLW1hbG1haXNvbi05MjUwMC9hcHBhcnRlbWVudC0tbWFpc29uLyhwYXJhbXMpL29uLyh0cmkpL3ByaXgvKG9yZHJlKS9kZXNjIiBjbGFzcz0iU2VhcmNoU29ydC1vcHRpb24gU2VhcmNoU29ydC1vcHRpb24tLXVwIj5Qcml4IDxzcGFuCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzPSJTZWFyY2hTb3J0LW9wdGlvbi1kZXRhaWwiPmR1IHBsdXMgZ3JhbmQgYXUgcGx1cyBwZXRpdDwvc3Bhbj48L2E+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgZGF0YS1iZWhhdD0iZmlsdHJlU3VyZmFjZSIgaHJlZj0iaHR0cHM6Ly9mci5mb25jaWEuY29tL2FjaGF0L2NoYXRvdS03ODQwMC0tc2FpbnQtZ2VybWFpbi1lbi1sYXllLTc4MTAwLS1mb3VycXVldXgtNzgxMTItLWxlLXZlc2luZXQtNzgxMTAtLWNoYW1ib3VyY3ktNzgyNDAtLW1haXNvbnMtbGFmZml0dGUtNzg2MDAtLW1hcmVpbC1tYXJseS03ODc1MC0tbWFybHktbGUtcm9pLTc4MTYwLS1sLWV0YW5nLWxhLXZpbGxlLTc4NjIwLS1jcm9pc3N5LXN1ci1zZWluZS03ODI5MC0tbW9udGVzc29uLTc4MzYwLS1ob3VpbGxlcy03ODgwMC0tc2FydHJvdXZpbGxlLTc4NTAwLS1jYXJyaWVyZXMtc3VyLXNlaW5lLTc4NDIwLS1ydWVpbC1tYWxtYWlzb24tOTI1MDAvYXBwYXJ0ZW1lbnQtLW1haXNvbi8ocGFyYW1zKS9vbi8odHJpKS9zdXJmYWNlLyhvcmRyZSkvZGVzYyIgY2xhc3M9IlNlYXJjaFNvcnQtb3B0aW9uIFNlYXJjaFNvcnQtb3B0aW9uLS11cCI+U3VyZmFjZQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9IlNlYXJjaFNvcnQtb3B0aW9uLWRldGFpbCI+ZHUgcGx1cyBwZXRpdCBhdSBwbHVzIGdyYW5kPC9zcGFuPjwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBkYXRhLWJlaGF0PSJmaWx0cmVQaWVjZXMiIGhyZWY9Imh0dHBzOi8vZnIuZm9uY2lhLmNvbS9hY2hhdC9jaGF0b3UtNzg0MDAtLXNhaW50LWdlcm1haW4tZW4tbGF5ZS03ODEwMC0tZm91cnF1ZXV4LTc4MTEyLS1sZS12ZXNpbmV0LTc4MTEwLS1jaGFtYm91cmN5LTc4MjQwLS1tYWlzb25zLWxhZmZpdHRlLTc4NjAwLS1tYXJlaWwtbWFybHktNzg3NTAtLW1hcmx5LWxlLXJvaS03ODE2MC0tbC1ldGFuZy1sYS12aWxsZS03ODYyMC0tY3JvaXNzeS1zdXItc2VpbmUtNzgyOTAtLW1vbnRlc3Nvbi03ODM2MC0taG91aWxsZXMtNzg4MDAtLXNhcnRyb3V2aWxsZS03ODUwMC0tY2FycmllcmVzLXN1ci1zZWluZS03ODQyMC0tcnVlaWwtbWFsbWFpc29uLTkyNTAwL2FwcGFydGVtZW50LS1tYWlzb24vKHBhcmFtcykvb24vKHRyaSkvcGllY2VzLyhvcmRyZSkvZGVzYyIgY2xhc3M9IlNlYXJjaFNvcnQtb3B0aW9uIFNlYXJjaFNvcnQtb3B0aW9uLS11cCI+Tm9tYnJlCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkZSBwacOoY2VzIDxzcGFuIGNsYXNzPSJTZWFyY2hTb3J0LW9wdGlvbi1kZXRhaWwiPmR1IHBsdXMgcGV0aXQgYXUgcGx1cyBncmFuZDwvc3Bhbj48L2E+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJBamF4Q29udGFpbmVyIiBkYXRhLWNvbnRlbnQ9InNlYXJjaF9yZXN1bHRzX2NvbnRhaW5lciI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAKCiAgICAKICAgIAogICAgCgo8YXJ0aWNsZSBjbGFzcz0iVGVhc2VyT2ZmZXIgIj4KICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJoaWRkZW4iIGRhdGEtcmVmZXJlbmNlPSJuX280MTAyIj4mbmJzcDs8L3NwYW4+CgogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJoaWRkZW4iIGRhdGEtbWFuZGF0PSIiPjwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImhpZGRlbiIgZGF0YS1wcml4PSIwIj48L3NwYW4+CiAgICAgICAgCiAgICA8YSBocmVmPSIvYWNoYXQvaG91aWxsZXMtNzg4MDAvcHJvZ3JhbW1lLW5ldWYvbl9vNDEwMi5odG0iIGNsYXNzPSJUZWFzZXJPZmZlci1pbGwiIGFyaWEtaGlkZGVuPSJ0cnVlIiB0YWJpbmRleD0iLTEiIHN0eWxlPSJiYWNrZ3JvdW5kLWltYWdlOiB1cmwoJ2h0dHBzOi8vd3d3Mi5sZWVtby5mci92YXIvY2FjaGUvbGlpcC9kb2N1bWVudF90aHVtYm5haWxfbGFyZ2UvaHR0cC0tLW1lZGlhLmxlZW1vLmZyOjgwNDcvZjIxNTc2OTM1ODg2ZWQyMGFhOGUzZjgwZTZjOTRmZjMucG5nJykiPgogICAgICAgIDxpbWcgc3JjPSJodHRwczovL3d3dzIubGVlbW8uZnIvdmFyL2NhY2hlL2xpaXAvZG9jdW1lbnRfdGh1bWJuYWlsX2xhcmdlL2h0dHAtLS1tZWRpYS5sZWVtby5mcjo4MDQ3L2YyMTU3NjkzNTg4NmVkMjBhYThlM2Y4MGU2Yzk0ZmYzLnBuZyIgYWx0PSJQcm9ncmFtbWUgbmV1ZiIgLz4KICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iVGVhc2VyT2ZmZXItaWxsLWNvdW50Ij4yPC9zcGFuPgogICAgICAgICAgICA8L2E+CgogICAgPGRpdiBjbGFzcz0iVGVhc2VyT2ZmZXItY29udGVudCI+CgogICAgICAgIAogICAgICAgIDxoMyBjbGFzcz0iVGVhc2VyT2ZmZXItdGl0bGUiPjxhIGhyZWY9Ii9hY2hhdC9ob3VpbGxlcy03ODgwMC9wcm9ncmFtbWUtbmV1Zi9uX280MTAyLmh0bSI+UHJvZ3JhbW1lIG5ldWY8L2E+PC9oMz4KICAgICAgICA8cCBjbGFzcz0iVGVhc2VyT2ZmZXItZmF2Ij4KICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz0iRmF2QnRuIEZhdkJ0bi0taW5hY3RpdmUiIGFyaWEtbGFiZWw9IkFqb3V0ZXIgYXV4IGZhdm9yaXMiPgogICAgICAgICAgICAgICAgPHN2ZyBjbGFzcz0iaWNvbiIgc3R5bGU9IndpZHRoOjE1cHg7aGVpZ2h0OjE1cHgiIGFyaWEtaGlkZGVuPSJ0cnVlIj48dXNlIHhsaW5rOmhyZWY9Ii9idW5kbGVzL2ZvbmNpYWludGVybmV0L3N2Zy9pY29ucy5zdmcjSWNvbi0tc3RhcjIiPjwvdXNlPjwvc3ZnPgogICAgICAgICAgICA8L2J1dHRvbj4KICAgICAgICA8L3A+CiAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9IlRlYXNlck9mZmVyLWxvYyI+PHN2ZyBjbGFzcz0iaWNvbiIgc3R5bGU9IndpZHRoOjE2cHg7aGVpZ2h0OjE2cHgiIGFyaWEtaGlkZGVuPSJ0cnVlIj48dXNlIHhsaW5rOmhyZWY9Ii9idW5kbGVzL2ZvbmNpYWludGVybmV0L3N2Zy9pY29ucy5zdmcjSWNvbi0tcG9pbnRlcjMiPjwvdXNlPjwvc3ZnPkhvdWlsbGVzICg3ODgwMCk8L3A+CiAgICAgICAgCiAgICAgICAgPHAgY2xhc3M9IlRlYXNlck9mZmVyLXByaWNlIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJkFncmF2ZTsgcGFydGlyIGRlCiAgICAgICAgICAgICAgICAgICAgPHN0cm9uZyBjbGFzcz0iVGVhc2VyT2ZmZXItcHJpY2UtbnVtICBUZWFzZXJPZmZlci1uZXVmIiBkYXRhLWJlaGF0PSJwcml4VmVudGVEZXNCaWVucyI+CiAgICAgICAgICAgICAgICAgICAgICAgIDExMyZuYnNwOzMxNiZuYnNwO+KCrAogICAgICAgICAgICAgICAgICAgIDwvc3Ryb25nPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJUZWFzZXJPZmZlci1wcmljZS1tZW50aW9ucyI+SG9ub3JhaXJlcyBkJ2FnZW5jZSDDoCBsYSBjaGFyZ2UgZHUgdmVuZGV1cjwvc3Bhbj4KICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgPC9wPgoKICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0iVGVhc2VyT2ZmZXItZGVzY3JpcHRpb24iPgogICAgICAgICAgICAgICAgCVLDqXNpZGVuY2Ugw6l0dWRpYW50ZSBkZSA4NSBsb2dlbWVudHMgVDEgZXQgVDIJw4AgMTQgbW4gZW4gUkVSIGR1IHF1YXJ0aWVyIGQmIzAzOTthZmZhaXJlcyBMYSBEw6lmZW5zZSA/IMOAIDE4Li4uCiAgICAgICAgICAgIDwvcD4KICAgICAgICAKICAgICAgICA8ZGl2IGNsYXNzPSJNaW5pRGF0YSBNaW5pRGF0YS0tZmxleCI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9Ik1pbmlEYXRhLXJvdyBNaW5pRGF0YS1yb3ctLWJnIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9Ik1pbmlEYXRhLWl0ZW0iIGRhdGEtYmVoYXQ9Im5iUGllY2VzRGVzQmllbnMiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgMSBwacOoY2UgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0iTWluaURhdGEtaXRlbSIgZGF0YS1iZWhhdD0iZGF0ZUxpdnJhaXNvbkRlc0JpZW5zIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbGl2csOpIGxlIDQ8c3VwPsOobWU8L3N1cD4gdHJpbWVzdHJlIDIwMjAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAKICAgICAgICA8cCBjbGFzcz0iVGVhc2VyT2ZmZXItYmFyZW1lIj4KICAgICAgICAgICAgPGEgaHJlZj0iaHR0cDovL2FnZW5jZS5mb25jaWEuY29tL3NhcnRyb3V2aWxsZS03ODUwMC9hZ2VuY2UtaW1tb2JpbGllcmUvZm9uY2lhLXRyYW5zYWN0aW9uLXNhcnRyb3V2aWxsZS0xMDI0IiByZWw9Im5vZm9sbG93IiB0YXJnZXQ9Il9ibGFuayI+Vm9pciBsZSBiYXLDqG1lIGRlIGwnYWdlbmNlPC9hPgogICAgICAgIDwvcD4KICAgIDwvZGl2PgoKICAgIAo8L2FydGljbGU+CiAgICAKCiAgICAKICAgIAogICAgCgo8YXJ0aWNsZSBjbGFzcz0iVGVhc2VyT2ZmZXIgIj4KICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJoaWRkZW4iIGRhdGEtcmVmZXJlbmNlPSJuX284MzkwIj4mbmJzcDs8L3NwYW4+CgogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJoaWRkZW4iIGRhdGEtbWFuZGF0PSIiPjwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImhpZGRlbiIgZGF0YS1wcml4PSIwIj48L3NwYW4+CiAgICAgICAgCiAgICA8YSBocmVmPSIvYWNoYXQvc2FydHJvdXZpbGxlLTc4NTAwL3Byb2dyYW1tZS1uZXVmL25fbzgzOTAuaHRtIiBjbGFzcz0iVGVhc2VyT2ZmZXItaWxsIiBhcmlhLWhpZGRlbj0idHJ1ZSIgdGFiaW5kZXg9Ii0xIiBzdHlsZT0iYmFja2dyb3VuZC1pbWFnZTogdXJsKCdodHRwczovL3d3dzIubGVlbW8uZnIvdmFyL2NhY2hlL2xpaXAvZG9jdW1lbnRfdGh1bWJuYWlsX2xhcmdlL2h0dHAtLS1tZWRpYS5sZWVtby5mcjo4MDQ3LzRhZmFkMGEyMGRiZWE0ZWY1NTNmZmRjM2I2Mjg2MTM1LnBuZycpIj4KICAgICAgICA8aW1nIHNyYz0iaHR0cHM6Ly93d3cyLmxlZW1vLmZyL3Zhci9jYWNoZS9saWlwL2RvY3VtZW50X3RodW1ibmFpbF9sYXJnZS9odHRwLS0tbWVkaWEubGVlbW8uZnI6ODA0Ny80YWZhZDBhMjBkYmVhNGVmNTUzZmZkYzNiNjI4NjEzNS5wbmciIGFsdD0iUHJvZ3JhbW1lIG5ldWYiIC8+CiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9IlRlYXNlck9mZmVyLWlsbC1jb3VudCI+MTwvc3Bhbj4KICAgICAgICAgICAgPC9hPgoKICAgIDxkaXYgY2xhc3M9IlRlYXNlck9mZmVyLWNvbnRlbnQiPgoKICAgICAgICAKICAgICAgICA8aDMgY2xhc3M9IlRlYXNlck9mZmVyLXRpdGxlIj48YSBocmVmPSIvYWNoYXQvc2FydHJvdXZpbGxlLTc4NTAwL3Byb2dyYW1tZS1uZXVmL25fbzgzOTAuaHRtIj5Qcm9ncmFtbWUgbmV1ZjwvYT48L2gzPgogICAgICAgIDxwIGNsYXNzPSJUZWFzZXJPZmZlci1mYXYiPgogICAgICAgICAgICA8YnV0dG9uIGNsYXNzPSJGYXZCdG4gRmF2QnRuLS1pbmFjdGl2ZSIgYXJpYS1sYWJlbD0iQWpvdXRlciBhdXggZmF2b3JpcyI+CiAgICAgICAgICAgICAgICA8c3ZnIGNsYXNzPSJpY29uIiBzdHlsZT0id2lkdGg6MTVweDtoZWlnaHQ6MTVweCIgYXJpYS1oaWRkZW49InRydWUiPjx1c2UgeGxpbms6aHJlZj0iL2J1bmRsZXMvZm9uY2lhaW50ZXJuZXQvc3ZnL2ljb25zLnN2ZyNJY29uLS1zdGFyMiI+PC91c2U+PC9zdmc+CiAgICAgICAgICAgIDwvYnV0dG9uPgogICAgICAgIDwvcD4KICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0iVGVhc2VyT2ZmZXItbG9jIj48c3ZnIGNsYXNzPSJpY29uIiBzdHlsZT0id2lkdGg6MTZweDtoZWlnaHQ6MTZweCIgYXJpYS1oaWRkZW49InRydWUiPjx1c2UgeGxpbms6aHJlZj0iL2J1bmRsZXMvZm9uY2lhaW50ZXJuZXQvc3ZnL2ljb25zLnN2ZyNJY29uLS1wb2ludGVyMyI+PC91c2U+PC9zdmc+U2FydHJvdXZpbGxlICg3ODUwMCk8L3A+CiAgICAgICAgCiAgICAgICAgPHAgY2xhc3M9IlRlYXNlck9mZmVyLXByaWNlIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJkFncmF2ZTsgcGFydGlyIGRlCiAgICAgICAgICAgICAgICAgICAgPHN0cm9uZyBjbGFzcz0iVGVhc2VyT2ZmZXItcHJpY2UtbnVtICBUZWFzZXJPZmZlci1uZXVmIiBkYXRhLWJlaGF0PSJwcml4VmVudGVEZXNCaWVucyI+CiAgICAgICAgICAgICAgICAgICAgICAgIDQ0NSZuYnNwOzAwMCZuYnNwO+KCrAogICAgICAgICAgICAgICAgICAgIDwvc3Ryb25nPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJUZWFzZXJPZmZlci1wcmljZS1tZW50aW9ucyI+SG9ub3JhaXJlcyBkJ2FnZW5jZSDDoCBsYSBjaGFyZ2UgZHUgdmVuZGV1cjwvc3Bhbj4KICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgPC9wPgoKICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0iVGVhc2VyT2ZmZXItZGVzY3JpcHRpb24iPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgIDwvcD4KICAgICAgICAKICAgICAgICA8ZGl2IGNsYXNzPSJNaW5pRGF0YSBNaW5pRGF0YS0tZmxleCI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9Ik1pbmlEYXRhLXJvdyBNaW5pRGF0YS1yb3ctLWJnIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9Ik1pbmlEYXRhLWl0ZW0iIGRhdGEtYmVoYXQ9Im5iUGllY2VzRGVzQmllbnMiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgNSBwacOoY2VzICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3A+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9Ik1pbmlEYXRhLWl0ZW0iIGRhdGEtYmVoYXQ9ImRhdGVMaXZyYWlzb25EZXNCaWVucyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxpdnLDqSBsZSA0PHN1cD7DqG1lPC9zdXA+IHRyaW1lc3RyZSAyMDIxCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3A+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgCiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgCiAgICAgICAgPHAgY2xhc3M9IlRlYXNlck9mZmVyLWJhcmVtZSI+CiAgICAgICAgICAgIDxhIGhyZWY9Imh0dHA6Ly9hZ2VuY2UuZm9uY2lhLmNvbS9zYXJ0cm91dmlsbGUtNzg1MDAvYWdlbmNlLWltbW9iaWxpZXJlL2ZvbmNpYS10cmFuc2FjdGlvbi1zYXJ0cm91dmlsbGUtMTAyNCIgcmVsPSJub2ZvbGxvdyIgdGFyZ2V0PSJfYmxhbmsiPlZvaXIgbGUgYmFyw6htZSBkZSBsJ2FnZW5jZTwvYT4KICAgICAgICA8L3A+CiAgICA8L2Rpdj4KCiAgICAKPC9hcnRpY2xlPgogICAgCgogICAgCiAgICAKICAgIAoKPGFydGljbGUgY2xhc3M9IlRlYXNlck9mZmVyICI+CiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iaGlkZGVuIiBkYXRhLXJlZmVyZW5jZT0ibl9vODM5MiI+Jm5ic3A7PC9zcGFuPgoKICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iaGlkZGVuIiBkYXRhLW1hbmRhdD0iIj48L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJoaWRkZW4iIGRhdGEtcHJpeD0iMCI+PC9zcGFuPgogICAgICAgIAogICAgPGEgaHJlZj0iL2FjaGF0L3NhcnRyb3V2aWxsZS03ODUwMC9wcm9ncmFtbWUtbmV1Zi9uX284MzkyLmh0bSIgY2xhc3M9IlRlYXNlck9mZmVyLWlsbCIgYXJpYS1oaWRkZW49InRydWUiIHRhYmluZGV4PSItMSIgc3R5bGU9ImJhY2tncm91bmQtaW1hZ2U6IHVybCgnaHR0cHM6Ly93d3cyLmxlZW1vLmZyL3Zhci9jYWNoZS9saWlwL2RvY3VtZW50X3RodW1ibmFpbF9sYXJnZS9odHRwLS0tbWVkaWEubGVlbW8uZnI6ODA0Ny81Zjc5NWYzM2ZmMzkwNmQ4OWY1MjQxMDJhY2QxMTdkYy5wbmcnKSI+CiAgICAgICAgPGltZyBzcmM9Imh0dHBzOi8vd3d3Mi5sZWVtby5mci92YXIvY2FjaGUvbGlpcC9kb2N1bWVudF90aHVtYm5haWxfbGFyZ2UvaHR0cC0tLW1lZGlhLmxlZW1vLmZyOjgwNDcvNWY3OTVmMzNmZjM5MDZkODlmNTI0MTAyYWNkMTE3ZGMucG5nIiBhbHQ9IlByb2dyYW1tZSBuZXVmIiAvPgogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJUZWFzZXJPZmZlci1pbGwtY291bnQiPjE8L3NwYW4+CiAgICAgICAgICAgIDwvYT4KCiAgICA8ZGl2IGNsYXNzPSJUZWFzZXJPZmZlci1jb250ZW50Ij4KCiAgICAgICAgCiAgICAgICAgPGgzIGNsYXNzPSJUZWFzZXJPZmZlci10aXRsZSI+PGEgaHJlZj0iL2FjaGF0L3NhcnRyb3V2aWxsZS03ODUwMC9wcm9ncmFtbWUtbmV1Zi9uX284MzkyLmh0bSI+UHJvZ3JhbW1lIG5ldWY8L2E+PC9oMz4KICAgICAgICA8cCBjbGFzcz0iVGVhc2VyT2ZmZXItZmF2Ij4KICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz0iRmF2QnRuIEZhdkJ0bi0taW5hY3RpdmUiIGFyaWEtbGFiZWw9IkFqb3V0ZXIgYXV4IGZhdm9yaXMiPgogICAgICAgICAgICAgICAgPHN2ZyBjbGFzcz0iaWNvbiIgc3R5bGU9IndpZHRoOjE1cHg7aGVpZ2h0OjE1cHgiIGFyaWEtaGlkZGVuPSJ0cnVlIj48dXNlIHhsaW5rOmhyZWY9Ii9idW5kbGVzL2ZvbmNpYWludGVybmV0L3N2Zy9pY29ucy5zdmcjSWNvbi0tc3RhcjIiPjwvdXNlPjwvc3ZnPgogICAgICAgICAgICA8L2J1dHRvbj4KICAgICAgICA8L3A+CiAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9IlRlYXNlck9mZmVyLWxvYyI+PHN2ZyBjbGFzcz0iaWNvbiIgc3R5bGU9IndpZHRoOjE2cHg7aGVpZ2h0OjE2cHgiIGFyaWEtaGlkZGVuPSJ0cnVlIj48dXNlIHhsaW5rOmhyZWY9Ii9idW5kbGVzL2ZvbmNpYWludGVybmV0L3N2Zy9pY29ucy5zdmcjSWNvbi0tcG9pbnRlcjMiPjwvdXNlPjwvc3ZnPlNhcnRyb3V2aWxsZSAoNzg1MDApPC9wPgogICAgICAgIAogICAgICAgIDxwIGNsYXNzPSJUZWFzZXJPZmZlci1wcmljZSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICZBZ3JhdmU7IHBhcnRpciBkZQogICAgICAgICAgICAgICAgICAgIDxzdHJvbmcgY2xhc3M9IlRlYXNlck9mZmVyLXByaWNlLW51bSAgVGVhc2VyT2ZmZXItbmV1ZiIgZGF0YS1iZWhhdD0icHJpeFZlbnRlRGVzQmllbnMiPgogICAgICAgICAgICAgICAgICAgICAgICAyODkmbmJzcDswMDAmbmJzcDvigqwKICAgICAgICAgICAgICAgICAgICA8L3N0cm9uZz4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iVGVhc2VyT2ZmZXItcHJpY2UtbWVudGlvbnMiPkhvbm9yYWlyZXMgZCdhZ2VuY2Ugw6AgbGEgY2hhcmdlIGR1IHZlbmRldXI8L3NwYW4+CiAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIDwvcD4KCiAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9IlRlYXNlck9mZmVyLWRlc2NyaXB0aW9uIj4KICAgICAgICAgICAgICAgIEF2ZWMgc29uIGNhZHJlIHBhaXNpYmxlIGVtcHJlaW50IGRlIG5hdHVyZSwgbGEgcmljaGVzc2UgZGUgc2VzIGluZnJhc3RydWN0dXJlcyBjdWx0dXJlbGxlcyBldCBzcG9ydGl2ZXMsLi4uCiAgICAgICAgICAgIDwvcD4KICAgICAgICAKICAgICAgICA8ZGl2IGNsYXNzPSJNaW5pRGF0YSBNaW5pRGF0YS0tZmxleCI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9Ik1pbmlEYXRhLXJvdyBNaW5pRGF0YS1yb3ctLWJnIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9Ik1pbmlEYXRhLWl0ZW0iIGRhdGEtYmVoYXQ9Im5iUGllY2VzRGVzQmllbnMiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgMiBwacOoY2VzICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3A+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9Ik1pbmlEYXRhLWl0ZW0iIGRhdGEtYmVoYXQ9ImRhdGVMaXZyYWlzb25EZXNCaWVucyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxpdnLDqSBsZSAxPHN1cD5lcjwvc3VwPiB0cmltZXN0cmUgMjAyMgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIAogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CgogICAgICAgIAogICAgICAgIDxwIGNsYXNzPSJUZWFzZXJPZmZlci1iYXJlbWUiPgogICAgICAgICAgICA8YSBocmVmPSJodHRwOi8vYWdlbmNlLmZvbmNpYS5jb20vc2FydHJvdXZpbGxlLTc4NTAwL2FnZW5jZS1pbW1vYmlsaWVyZS9mb25jaWEtdHJhbnNhY3Rpb24tc2FydHJvdXZpbGxlLTEwMjQiIHJlbD0ibm9mb2xsb3ciIHRhcmdldD0iX2JsYW5rIj5Wb2lyIGxlIGJhcsOobWUgZGUgbCdhZ2VuY2U8L2E+CiAgICAgICAgPC9wPgogICAgPC9kaXY+CgogICAgCjwvYXJ0aWNsZT4KICAgIAoKICAgIAogICAgCiAgICAKCjxhcnRpY2xlIGNsYXNzPSJUZWFzZXJPZmZlciAiPgogICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImhpZGRlbiIgZGF0YS1yZWZlcmVuY2U9Im5fbzg1MzkiPiZuYnNwOzwvc3Bhbj4KCiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImhpZGRlbiIgZGF0YS1tYW5kYXQ9IiI+PC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iaGlkZGVuIiBkYXRhLXByaXg9IjAiPjwvc3Bhbj4KICAgICAgICAKICAgIDxhIGhyZWY9Ii9hY2hhdC9tb250ZXNzb24tNzgzNjAvcHJvZ3JhbW1lLW5ldWYvbl9vODUzOS5odG0iIGNsYXNzPSJUZWFzZXJPZmZlci1pbGwiIGFyaWEtaGlkZGVuPSJ0cnVlIiB0YWJpbmRleD0iLTEiIHN0eWxlPSJiYWNrZ3JvdW5kLWltYWdlOiB1cmwoJ2h0dHBzOi8vd3d3Mi5sZWVtby5mci92YXIvY2FjaGUvbGlpcC9kb2N1bWVudF90aHVtYm5haWxfbGFyZ2UvaHR0cC0tLW1lZGlhLmxlZW1vLmZyOjgwNDcvNTQ0ZjBmMTYzMzIwMmYxZDc3ZWE0YjUwMzdiODRhOTEucG5nJykiPgogICAgICAgIDxpbWcgc3JjPSJodHRwczovL3d3dzIubGVlbW8uZnIvdmFyL2NhY2hlL2xpaXAvZG9jdW1lbnRfdGh1bWJuYWlsX2xhcmdlL2h0dHAtLS1tZWRpYS5sZWVtby5mcjo4MDQ3LzU0NGYwZjE2MzMyMDJmMWQ3N2VhNGI1MDM3Yjg0YTkxLnBuZyIgYWx0PSJQcm9ncmFtbWUgbmV1ZiIgLz4KICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iVGVhc2VyT2ZmZXItaWxsLWNvdW50Ij4yPC9zcGFuPgogICAgICAgICAgICA8L2E+CgogICAgPGRpdiBjbGFzcz0iVGVhc2VyT2ZmZXItY29udGVudCI+CgogICAgICAgIAogICAgICAgIDxoMyBjbGFzcz0iVGVhc2VyT2ZmZXItdGl0bGUiPjxhIGhyZWY9Ii9hY2hhdC9tb250ZXNzb24tNzgzNjAvcHJvZ3JhbW1lLW5ldWYvbl9vODUzOS5odG0iPlByb2dyYW1tZSBuZXVmPC9hPjwvaDM+CiAgICAgICAgPHAgY2xhc3M9IlRlYXNlck9mZmVyLWZhdiI+CiAgICAgICAgICAgIDxidXR0b24gY2xhc3M9IkZhdkJ0biBGYXZCdG4tLWluYWN0aXZlIiBhcmlhLWxhYmVsPSJBam91dGVyIGF1eCBmYXZvcmlzIj4KICAgICAgICAgICAgICAgIDxzdmcgY2xhc3M9Imljb24iIHN0eWxlPSJ3aWR0aDoxNXB4O2hlaWdodDoxNXB4IiBhcmlhLWhpZGRlbj0idHJ1ZSI+PHVzZSB4bGluazpocmVmPSIvYnVuZGxlcy9mb25jaWFpbnRlcm5ldC9zdmcvaWNvbnMuc3ZnI0ljb24tLXN0YXIyIj48L3VzZT48L3N2Zz4KICAgICAgICAgICAgPC9idXR0b24+CiAgICAgICAgPC9wPgogICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJUZWFzZXJPZmZlci1sb2MiPjxzdmcgY2xhc3M9Imljb24iIHN0eWxlPSJ3aWR0aDoxNnB4O2hlaWdodDoxNnB4IiBhcmlhLWhpZGRlbj0idHJ1ZSI+PHVzZSB4bGluazpocmVmPSIvYnVuZGxlcy9mb25jaWFpbnRlcm5ldC9zdmcvaWNvbnMuc3ZnI0ljb24tLXBvaW50ZXIzIj48L3VzZT48L3N2Zz5Nb250ZXNzb24gKDc4MzYwKTwvcD4KICAgICAgICAKICAgICAgICA8cCBjbGFzcz0iVGVhc2VyT2ZmZXItcHJpY2UiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAmQWdyYXZlOyBwYXJ0aXIgZGUKICAgICAgICAgICAgICAgICAgICA8c3Ryb25nIGNsYXNzPSJUZWFzZXJPZmZlci1wcmljZS1udW0gIFRlYXNlck9mZmVyLW5ldWYiIGRhdGEtYmVoYXQ9InByaXhWZW50ZURlc0JpZW5zIj4KICAgICAgICAgICAgICAgICAgICAgICAgMjM1Jm5ic3A7MDAwJm5ic3A74oKsCiAgICAgICAgICAgICAgICAgICAgPC9zdHJvbmc+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9IlRlYXNlck9mZmVyLXByaWNlLW1lbnRpb25zIj5Ib25vcmFpcmVzIGQnYWdlbmNlIMOgIGxhIGNoYXJnZSBkdSB2ZW5kZXVyPC9zcGFuPgogICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICA8L3A+CgogICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJUZWFzZXJPZmZlci1kZXNjcmlwdGlvbiI+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgPC9wPgogICAgICAgIAogICAgICAgIDxkaXYgY2xhc3M9Ik1pbmlEYXRhIE1pbmlEYXRhLS1mbGV4Ij4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iTWluaURhdGEtcm93IE1pbmlEYXRhLXJvdy0tYmciPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0iTWluaURhdGEtaXRlbSIgZGF0YS1iZWhhdD0ibmJQaWVjZXNEZXNCaWVucyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAyIHBpw6hjZXMgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0iTWluaURhdGEtaXRlbSIgZGF0YS1iZWhhdD0iZGF0ZUxpdnJhaXNvbkRlc0JpZW5zIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbGl2csOpIGxlIDQ8c3VwPsOobWU8L3N1cD4gdHJpbWVzdHJlIDIwMjAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAKICAgICAgICA8cCBjbGFzcz0iVGVhc2VyT2ZmZXItYmFyZW1lIj4KICAgICAgICAgICAgPGEgaHJlZj0iaHR0cDovL2FnZW5jZS5mb25jaWEuY29tL3NhcnRyb3V2aWxsZS03ODUwMC9hZ2VuY2UtaW1tb2JpbGllcmUvZm9uY2lhLXRyYW5zYWN0aW9uLXNhcnRyb3V2aWxsZS0xMDI0IiByZWw9Im5vZm9sbG93IiB0YXJnZXQ9Il9ibGFuayI+Vm9pciBsZSBiYXLDqG1lIGRlIGwnYWdlbmNlPC9hPgogICAgICAgIDwvcD4KICAgIDwvZGl2PgoKICAgIAo8L2FydGljbGU+CiAgICAKCiAgICAKICAgIAogICAgCgo8YXJ0aWNsZSBjbGFzcz0iVGVhc2VyT2ZmZXIgIj4KICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJoaWRkZW4iIGRhdGEtcmVmZXJlbmNlPSJuX284NTU4Ij4mbmJzcDs8L3NwYW4+CgogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJoaWRkZW4iIGRhdGEtbWFuZGF0PSIiPjwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImhpZGRlbiIgZGF0YS1wcml4PSIwIj48L3NwYW4+CiAgICAgICAgCiAgICA8YSBocmVmPSIvYWNoYXQvbW9udGVzc29uLTc4MzYwL3Byb2dyYW1tZS1uZXVmL25fbzg1NTguaHRtIiBjbGFzcz0iVGVhc2VyT2ZmZXItaWxsIiBhcmlhLWhpZGRlbj0idHJ1ZSIgdGFiaW5kZXg9Ii0xIiBzdHlsZT0iYmFja2dyb3VuZC1pbWFnZTogdXJsKCdodHRwczovL3d3dzIubGVlbW8uZnIvdmFyL2NhY2hlL2xpaXAvZG9jdW1lbnRfdGh1bWJuYWlsX2xhcmdlL2h0dHAtLS1tZWRpYS5sZWVtby5mcjo4MDQ3L2E0MWQxYzgyMzAyMDdlNDAzODQzNDllNGI0OWFkYjFiLnBuZycpIj4KICAgICAgICA8aW1nIHNyYz0iaHR0cHM6Ly93d3cyLmxlZW1vLmZyL3Zhci9jYWNoZS9saWlwL2RvY3VtZW50X3RodW1ibmFpbF9sYXJnZS9odHRwLS0tbWVkaWEubGVlbW8uZnI6ODA0Ny9hNDFkMWM4MjMwMjA3ZTQwMzg0MzQ5ZTRiNDlhZGIxYi5wbmciIGFsdD0iUHJvZ3JhbW1lIG5ldWYiIC8+CiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9IlRlYXNlck9mZmVyLWlsbC1jb3VudCI+NDwvc3Bhbj4KICAgICAgICAgICAgPC9hPgoKICAgIDxkaXYgY2xhc3M9IlRlYXNlck9mZmVyLWNvbnRlbnQiPgoKICAgICAgICAKICAgICAgICA8aDMgY2xhc3M9IlRlYXNlck9mZmVyLXRpdGxlIj48YSBocmVmPSIvYWNoYXQvbW9udGVzc29uLTc4MzYwL3Byb2dyYW1tZS1uZXVmL25fbzg1NTguaHRtIj5Qcm9ncmFtbWUgbmV1ZjwvYT48L2gzPgogICAgICAgIDxwIGNsYXNzPSJUZWFzZXJPZmZlci1mYXYiPgogICAgICAgICAgICA8YnV0dG9uIGNsYXNzPSJGYXZCdG4gRmF2QnRuLS1pbmFjdGl2ZSIgYXJpYS1sYWJlbD0iQWpvdXRlciBhdXggZmF2b3JpcyI+CiAgICAgICAgICAgICAgICA8c3ZnIGNsYXNzPSJpY29uIiBzdHlsZT0id2lkdGg6MTVweDtoZWlnaHQ6MTVweCIgYXJpYS1oaWRkZW49InRydWUiPjx1c2UgeGxpbms6aHJlZj0iL2J1bmRsZXMvZm9uY2lhaW50ZXJuZXQvc3ZnL2ljb25zLnN2ZyNJY29uLS1zdGFyMiI+PC91c2U+PC9zdmc+CiAgICAgICAgICAgIDwvYnV0dG9uPgogICAgICAgIDwvcD4KICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0iVGVhc2VyT2ZmZXItbG9jIj48c3ZnIGNsYXNzPSJpY29uIiBzdHlsZT0id2lkdGg6MTZweDtoZWlnaHQ6MTZweCIgYXJpYS1oaWRkZW49InRydWUiPjx1c2UgeGxpbms6aHJlZj0iL2J1bmRsZXMvZm9uY2lhaW50ZXJuZXQvc3ZnL2ljb25zLnN2ZyNJY29uLS1wb2ludGVyMyI+PC91c2U+PC9zdmc+TW9udGVzc29uICg3ODM2MCk8L3A+CiAgICAgICAgCiAgICAgICAgPHAgY2xhc3M9IlRlYXNlck9mZmVyLXByaWNlIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJkFncmF2ZTsgcGFydGlyIGRlCiAgICAgICAgICAgICAgICAgICAgPHN0cm9uZyBjbGFzcz0iVGVhc2VyT2ZmZXItcHJpY2UtbnVtICBUZWFzZXJPZmZlci1uZXVmIiBkYXRhLWJlaGF0PSJwcml4VmVudGVEZXNCaWVucyI+CiAgICAgICAgICAgICAgICAgICAgICAgIDIzNSZuYnNwOzAwMCZuYnNwO+KCrAogICAgICAgICAgICAgICAgICAgIDwvc3Ryb25nPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJUZWFzZXJPZmZlci1wcmljZS1tZW50aW9ucyI+SG9ub3JhaXJlcyBkJ2FnZW5jZSDDoCBsYSBjaGFyZ2UgZHUgdmVuZGV1cjwvc3Bhbj4KICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgPC9wPgoKICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0iVGVhc2VyT2ZmZXItZGVzY3JpcHRpb24iPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgIDwvcD4KICAgICAgICAKICAgICAgICA8ZGl2IGNsYXNzPSJNaW5pRGF0YSBNaW5pRGF0YS0tZmxleCI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9Ik1pbmlEYXRhLXJvdyBNaW5pRGF0YS1yb3ctLWJnIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9Ik1pbmlEYXRhLWl0ZW0iIGRhdGEtYmVoYXQ9Im5iUGllY2VzRGVzQmllbnMiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgMiBwacOoY2VzICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3A+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9Ik1pbmlEYXRhLWl0ZW0iIGRhdGEtYmVoYXQ9ImRhdGVMaXZyYWlzb25EZXNCaWVucyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIExpdnLDqQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIAogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CgogICAgICAgIAogICAgICAgIDxwIGNsYXNzPSJUZWFzZXJPZmZlci1iYXJlbWUiPgogICAgICAgICAgICA8YSBocmVmPSJodHRwOi8vYWdlbmNlLmZvbmNpYS5jb20vc2FydHJvdXZpbGxlLTc4NTAwL2FnZW5jZS1pbW1vYmlsaWVyZS9mb25jaWEtdHJhbnNhY3Rpb24tc2FydHJvdXZpbGxlLTEwMjQiIHJlbD0ibm9mb2xsb3ciIHRhcmdldD0iX2JsYW5rIj5Wb2lyIGxlIGJhcsOobWUgZGUgbCdhZ2VuY2U8L2E+CiAgICAgICAgPC9wPgogICAgPC9kaXY+CgogICAgCjwvYXJ0aWNsZT4KICAgIAoKICAgIAogICAgCiAgICAKCjxhcnRpY2xlIGNsYXNzPSJUZWFzZXJPZmZlciAiPgogICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImhpZGRlbiIgZGF0YS1yZWZlcmVuY2U9Im5fbzkzOTkiPiZuYnNwOzwvc3Bhbj4KCiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImhpZGRlbiIgZGF0YS1tYW5kYXQ9IiI+PC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iaGlkZGVuIiBkYXRhLXByaXg9IjAiPjwvc3Bhbj4KICAgICAgICAKICAgIDxhIGhyZWY9Ii9hY2hhdC9zYXJ0cm91dmlsbGUtNzg1MDAvcHJvZ3JhbW1lLW5ldWYvbl9vOTM5OS5odG0iIGNsYXNzPSJUZWFzZXJPZmZlci1pbGwiIGFyaWEtaGlkZGVuPSJ0cnVlIiB0YWJpbmRleD0iLTEiIHN0eWxlPSJiYWNrZ3JvdW5kLWltYWdlOiB1cmwoJ2h0dHBzOi8vd3d3Mi5sZWVtby5mci92YXIvY2FjaGUvbGlpcC9kb2N1bWVudF90aHVtYm5haWxfbGFyZ2UvaHR0cC0tLW1lZGlhLmxlZW1vLmZyOjgwNDcvZTMzMmE3ODk5OWY2N2E3ZTNmY2JmYzdmZmQ2NzQ0ZDkucG5nJykiPgogICAgICAgIDxpbWcgc3JjPSJodHRwczovL3d3dzIubGVlbW8uZnIvdmFyL2NhY2hlL2xpaXAvZG9jdW1lbnRfdGh1bWJuYWlsX2xhcmdlL2h0dHAtLS1tZWRpYS5sZWVtby5mcjo4MDQ3L2UzMzJhNzg5OTlmNjdhN2UzZmNiZmM3ZmZkNjc0NGQ5LnBuZyIgYWx0PSJQcm9ncmFtbWUgbmV1ZiIgLz4KICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iVGVhc2VyT2ZmZXItaWxsLWNvdW50Ij4yPC9zcGFuPgogICAgICAgICAgICA8L2E+CgogICAgPGRpdiBjbGFzcz0iVGVhc2VyT2ZmZXItY29udGVudCI+CgogICAgICAgIAogICAgICAgIDxoMyBjbGFzcz0iVGVhc2VyT2ZmZXItdGl0bGUiPjxhIGhyZWY9Ii9hY2hhdC9zYXJ0cm91dmlsbGUtNzg1MDAvcHJvZ3JhbW1lLW5ldWYvbl9vOTM5OS5odG0iPlByb2dyYW1tZSBuZXVmPC9hPjwvaDM+CiAgICAgICAgPHAgY2xhc3M9IlRlYXNlck9mZmVyLWZhdiI+CiAgICAgICAgICAgIDxidXR0b24gY2xhc3M9IkZhdkJ0biBGYXZCdG4tLWluYWN0aXZlIiBhcmlhLWxhYmVsPSJBam91dGVyIGF1eCBmYXZvcmlzIj4KICAgICAgICAgICAgICAgIDxzdmcgY2xhc3M9Imljb24iIHN0eWxlPSJ3aWR0aDoxNXB4O2hlaWdodDoxNXB4IiBhcmlhLWhpZGRlbj0idHJ1ZSI+PHVzZSB4bGluazpocmVmPSIvYnVuZGxlcy9mb25jaWFpbnRlcm5ldC9zdmcvaWNvbnMuc3ZnI0ljb24tLXN0YXIyIj48L3VzZT48L3N2Zz4KICAgICAgICAgICAgPC9idXR0b24+CiAgICAgICAgPC9wPgogICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJUZWFzZXJPZmZlci1sb2MiPjxzdmcgY2xhc3M9Imljb24iIHN0eWxlPSJ3aWR0aDoxNnB4O2hlaWdodDoxNnB4IiBhcmlhLWhpZGRlbj0idHJ1ZSI+PHVzZSB4bGluazpocmVmPSIvYnVuZGxlcy9mb25jaWFpbnRlcm5ldC9zdmcvaWNvbnMuc3ZnI0ljb24tLXBvaW50ZXIzIj48L3VzZT48L3N2Zz5TYXJ0cm91dmlsbGUgKDc4NTAwKTwvcD4KICAgICAgICAKICAgICAgICA8cCBjbGFzcz0iVGVhc2VyT2ZmZXItcHJpY2UiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAmQWdyYXZlOyBwYXJ0aXIgZGUKICAgICAgICAgICAgICAgICAgICA8c3Ryb25nIGNsYXNzPSJUZWFzZXJPZmZlci1wcmljZS1udW0gIFRlYXNlck9mZmVyLW5ldWYiIGRhdGEtYmVoYXQ9InByaXhWZW50ZURlc0JpZW5zIj4KICAgICAgICAgICAgICAgICAgICAgICAgMzI4Jm5ic3A7MDAwJm5ic3A74oKsCiAgICAgICAgICAgICAgICAgICAgPC9zdHJvbmc+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9IlRlYXNlck9mZmVyLXByaWNlLW1lbnRpb25zIj5Ib25vcmFpcmVzIGQnYWdlbmNlIMOgIGxhIGNoYXJnZSBkdSB2ZW5kZXVyPC9zcGFuPgogICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICA8L3A+CgogICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJUZWFzZXJPZmZlci1kZXNjcmlwdGlvbiI+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgPC9wPgogICAgICAgIAogICAgICAgIDxkaXYgY2xhc3M9Ik1pbmlEYXRhIE1pbmlEYXRhLS1mbGV4Ij4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iTWluaURhdGEtcm93IE1pbmlEYXRhLXJvdy0tYmciPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0iTWluaURhdGEtaXRlbSIgZGF0YS1iZWhhdD0ibmJQaWVjZXNEZXNCaWVucyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAzIHBpw6hjZXMgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0iTWluaURhdGEtaXRlbSIgZGF0YS1iZWhhdD0iZGF0ZUxpdnJhaXNvbkRlc0JpZW5zIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbGl2csOpIGxlIDI8c3VwPsOobWU8L3N1cD4gdHJpbWVzdHJlIDIwMjIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAKICAgICAgICA8cCBjbGFzcz0iVGVhc2VyT2ZmZXItYmFyZW1lIj4KICAgICAgICAgICAgPGEgaHJlZj0iaHR0cDovL2FnZW5jZS5mb25jaWEuY29tL3NhcnRyb3V2aWxsZS03ODUwMC9hZ2VuY2UtaW1tb2JpbGllcmUvZm9uY2lhLXRyYW5zYWN0aW9uLXNhcnRyb3V2aWxsZS0xMDI0IiByZWw9Im5vZm9sbG93IiB0YXJnZXQ9Il9ibGFuayI+Vm9pciBsZSBiYXLDqG1lIGRlIGwnYWdlbmNlPC9hPgogICAgICAgIDwvcD4KICAgIDwvZGl2PgoKICAgIAo8L2FydGljbGU+CiAgICAKCiAgICAKICAgIAogICAgCgo8YXJ0aWNsZSBjbGFzcz0iVGVhc2VyT2ZmZXIgIj4KICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJoaWRkZW4iIGRhdGEtcmVmZXJlbmNlPSJuX285NjM3Ij4mbmJzcDs8L3NwYW4+CgogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJoaWRkZW4iIGRhdGEtbWFuZGF0PSIiPjwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImhpZGRlbiIgZGF0YS1wcml4PSIwIj48L3NwYW4+CiAgICAgICAgCiAgICA8YSBocmVmPSIvYWNoYXQvc2FydHJvdXZpbGxlLTc4NTAwL3Byb2dyYW1tZS1uZXVmL25fbzk2MzcuaHRtIiBjbGFzcz0iVGVhc2VyT2ZmZXItaWxsIiBhcmlhLWhpZGRlbj0idHJ1ZSIgdGFiaW5kZXg9Ii0xIiBzdHlsZT0iYmFja2dyb3VuZC1pbWFnZTogdXJsKCdodHRwczovL3d3dzIubGVlbW8uZnIvdmFyL2NhY2hlL2xpaXAvZG9jdW1lbnRfdGh1bWJuYWlsX2xhcmdlL2h0dHAtLS1tZWRpYS5sZWVtby5mcjo4MDQ3LzU0NTIyZWNiODA2MWM1MmNiNTBlZTExMTVmMjZlMDdhLnBuZycpIj4KICAgICAgICA8aW1nIHNyYz0iaHR0cHM6Ly93d3cyLmxlZW1vLmZyL3Zhci9jYWNoZS9saWlwL2RvY3VtZW50X3RodW1ibmFpbF9sYXJnZS9odHRwLS0tbWVkaWEubGVlbW8uZnI6ODA0Ny81NDUyMmVjYjgwNjFjNTJjYjUwZWUxMTE1ZjI2ZTA3YS5wbmciIGFsdD0iUHJvZ3JhbW1lIG5ldWYiIC8+CiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9IlRlYXNlck9mZmVyLWlsbC1jb3VudCI+Mjwvc3Bhbj4KICAgICAgICAgICAgPC9hPgoKICAgIDxkaXYgY2xhc3M9IlRlYXNlck9mZmVyLWNvbnRlbnQiPgoKICAgICAgICAKICAgICAgICA8aDMgY2xhc3M9IlRlYXNlck9mZmVyLXRpdGxlIj48YSBocmVmPSIvYWNoYXQvc2FydHJvdXZpbGxlLTc4NTAwL3Byb2dyYW1tZS1uZXVmL25fbzk2MzcuaHRtIj5Qcm9ncmFtbWUgbmV1ZjwvYT48L2gzPgogICAgICAgIDxwIGNsYXNzPSJUZWFzZXJPZmZlci1mYXYiPgogICAgICAgICAgICA8YnV0dG9uIGNsYXNzPSJGYXZCdG4gRmF2QnRuLS1pbmFjdGl2ZSIgYXJpYS1sYWJlbD0iQWpvdXRlciBhdXggZmF2b3JpcyI+CiAgICAgICAgICAgICAgICA8c3ZnIGNsYXNzPSJpY29uIiBzdHlsZT0id2lkdGg6MTVweDtoZWlnaHQ6MTVweCIgYXJpYS1oaWRkZW49InRydWUiPjx1c2UgeGxpbms6aHJlZj0iL2J1bmRsZXMvZm9uY2lhaW50ZXJuZXQvc3ZnL2ljb25zLnN2ZyNJY29uLS1zdGFyMiI+PC91c2U+PC9zdmc+CiAgICAgICAgICAgIDwvYnV0dG9uPgogICAgICAgIDwvcD4KICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0iVGVhc2VyT2ZmZXItbG9jIj48c3ZnIGNsYXNzPSJpY29uIiBzdHlsZT0id2lkdGg6MTZweDtoZWlnaHQ6MTZweCIgYXJpYS1oaWRkZW49InRydWUiPjx1c2UgeGxpbms6aHJlZj0iL2J1bmRsZXMvZm9uY2lhaW50ZXJuZXQvc3ZnL2ljb25zLnN2ZyNJY29uLS1wb2ludGVyMyI+PC91c2U+PC9zdmc+U2FydHJvdXZpbGxlICg3ODUwMCk8L3A+CiAgICAgICAgCiAgICAgICAgPHAgY2xhc3M9IlRlYXNlck9mZmVyLXByaWNlIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJkFncmF2ZTsgcGFydGlyIGRlCiAgICAgICAgICAgICAgICAgICAgPHN0cm9uZyBjbGFzcz0iVGVhc2VyT2ZmZXItcHJpY2UtbnVtICBUZWFzZXJPZmZlci1uZXVmIiBkYXRhLWJlaGF0PSJwcml4VmVudGVEZXNCaWVucyI+CiAgICAgICAgICAgICAgICAgICAgICAgIDMxOSZuYnNwOzAwMCZuYnNwO+KCrAogICAgICAgICAgICAgICAgICAgIDwvc3Ryb25nPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJUZWFzZXJPZmZlci1wcmljZS1tZW50aW9ucyI+SG9ub3JhaXJlcyBkJ2FnZW5jZSDDoCBsYSBjaGFyZ2UgZHUgdmVuZGV1cjwvc3Bhbj4KICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgPC9wPgoKICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0iVGVhc2VyT2ZmZXItZGVzY3JpcHRpb24iPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgIDwvcD4KICAgICAgICAKICAgICAgICA8ZGl2IGNsYXNzPSJNaW5pRGF0YSBNaW5pRGF0YS0tZmxleCI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9Ik1pbmlEYXRhLXJvdyBNaW5pRGF0YS1yb3ctLWJnIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9Ik1pbmlEYXRhLWl0ZW0iIGRhdGEtYmVoYXQ9Im5iUGllY2VzRGVzQmllbnMiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgMyBwacOoY2VzICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3A+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9Ik1pbmlEYXRhLWl0ZW0iIGRhdGEtYmVoYXQ9ImRhdGVMaXZyYWlzb25EZXNCaWVucyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxpdnLDqSBsZSAyPHN1cD7DqG1lPC9zdXA+IHRyaW1lc3RyZSAyMDIyCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3A+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgCiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgCiAgICAgICAgPHAgY2xhc3M9IlRlYXNlck9mZmVyLWJhcmVtZSI+CiAgICAgICAgICAgIDxhIGhyZWY9Imh0dHA6Ly9hZ2VuY2UuZm9uY2lhLmNvbS9zYXJ0cm91dmlsbGUtNzg1MDAvYWdlbmNlLWltbW9iaWxpZXJlL2ZvbmNpYS10cmFuc2FjdGlvbi1zYXJ0cm91dmlsbGUtMTAyNCIgcmVsPSJub2ZvbGxvdyIgdGFyZ2V0PSJfYmxhbmsiPlZvaXIgbGUgYmFyw6htZSBkZSBsJ2FnZW5jZTwvYT4KICAgICAgICA8L3A+CiAgICA8L2Rpdj4KCiAgICAKPC9hcnRpY2xlPgogICAgCgogICAgCiAgICAKICAgIAoKPGFydGljbGUgY2xhc3M9IlRlYXNlck9mZmVyICI+CiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iaGlkZGVuIiBkYXRhLXJlZmVyZW5jZT0ibl9vOTY0MiI+Jm5ic3A7PC9zcGFuPgoKICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iaGlkZGVuIiBkYXRhLW1hbmRhdD0iIj48L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJoaWRkZW4iIGRhdGEtcHJpeD0iMCI+PC9zcGFuPgogICAgICAgIAogICAgPGEgaHJlZj0iL2FjaGF0L3NhcnRyb3V2aWxsZS03ODUwMC9wcm9ncmFtbWUtbmV1Zi9uX285NjQyLmh0bSIgY2xhc3M9IlRlYXNlck9mZmVyLWlsbCIgYXJpYS1oaWRkZW49InRydWUiIHRhYmluZGV4PSItMSIgc3R5bGU9ImJhY2tncm91bmQtaW1hZ2U6IHVybCgnaHR0cHM6Ly93d3cyLmxlZW1vLmZyL3Zhci9jYWNoZS9saWlwL2RvY3VtZW50X3RodW1ibmFpbF9sYXJnZS9odHRwLS0tbWVkaWEubGVlbW8uZnI6ODA0Ny9lMzMyYTc4OTk5ZjY3YTdlM2ZjYmZjN2ZmZDY3NDRkOS5wbmcnKSI+CiAgICAgICAgPGltZyBzcmM9Imh0dHBzOi8vd3d3Mi5sZWVtby5mci92YXIvY2FjaGUvbGlpcC9kb2N1bWVudF90aHVtYm5haWxfbGFyZ2UvaHR0cC0tLW1lZGlhLmxlZW1vLmZyOjgwNDcvZTMzMmE3ODk5OWY2N2E3ZTNmY2JmYzdmZmQ2NzQ0ZDkucG5nIiBhbHQ9IlByb2dyYW1tZSBuZXVmIiAvPgogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJUZWFzZXJPZmZlci1pbGwtY291bnQiPjI8L3NwYW4+CiAgICAgICAgICAgIDwvYT4KCiAgICA8ZGl2IGNsYXNzPSJUZWFzZXJPZmZlci1jb250ZW50Ij4KCiAgICAgICAgCiAgICAgICAgPGgzIGNsYXNzPSJUZWFzZXJPZmZlci10aXRsZSI+PGEgaHJlZj0iL2FjaGF0L3NhcnRyb3V2aWxsZS03ODUwMC9wcm9ncmFtbWUtbmV1Zi9uX285NjQyLmh0bSI+UHJvZ3JhbW1lIG5ldWY8L2E+PC9oMz4KICAgICAgICA8cCBjbGFzcz0iVGVhc2VyT2ZmZXItZmF2Ij4KICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz0iRmF2QnRuIEZhdkJ0bi0taW5hY3RpdmUiIGFyaWEtbGFiZWw9IkFqb3V0ZXIgYXV4IGZhdm9yaXMiPgogICAgICAgICAgICAgICAgPHN2ZyBjbGFzcz0iaWNvbiIgc3R5bGU9IndpZHRoOjE1cHg7aGVpZ2h0OjE1cHgiIGFyaWEtaGlkZGVuPSJ0cnVlIj48dXNlIHhsaW5rOmhyZWY9Ii9idW5kbGVzL2ZvbmNpYWludGVybmV0L3N2Zy9pY29ucy5zdmcjSWNvbi0tc3RhcjIiPjwvdXNlPjwvc3ZnPgogICAgICAgICAgICA8L2J1dHRvbj4KICAgICAgICA8L3A+CiAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9IlRlYXNlck9mZmVyLWxvYyI+PHN2ZyBjbGFzcz0iaWNvbiIgc3R5bGU9IndpZHRoOjE2cHg7aGVpZ2h0OjE2cHgiIGFyaWEtaGlkZGVuPSJ0cnVlIj48dXNlIHhsaW5rOmhyZWY9Ii9idW5kbGVzL2ZvbmNpYWludGVybmV0L3N2Zy9pY29ucy5zdmcjSWNvbi0tcG9pbnRlcjMiPjwvdXNlPjwvc3ZnPlNhcnRyb3V2aWxsZSAoNzg1MDApPC9wPgogICAgICAgIAogICAgICAgIDxwIGNsYXNzPSJUZWFzZXJPZmZlci1wcmljZSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICZBZ3JhdmU7IHBhcnRpciBkZQogICAgICAgICAgICAgICAgICAgIDxzdHJvbmcgY2xhc3M9IlRlYXNlck9mZmVyLXByaWNlLW51bSAgVGVhc2VyT2ZmZXItbmV1ZiIgZGF0YS1iZWhhdD0icHJpeFZlbnRlRGVzQmllbnMiPgogICAgICAgICAgICAgICAgICAgICAgICAyNjMmbmJzcDswMDAmbmJzcDvigqwKICAgICAgICAgICAgICAgICAgICA8L3N0cm9uZz4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iVGVhc2VyT2ZmZXItcHJpY2UtbWVudGlvbnMiPkhvbm9yYWlyZXMgZCdhZ2VuY2Ugw6AgbGEgY2hhcmdlIGR1IHZlbmRldXI8L3NwYW4+CiAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIDwvcD4KCiAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9IlRlYXNlck9mZmVyLWRlc2NyaXB0aW9uIj4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICA8L3A+CiAgICAgICAgCiAgICAgICAgPGRpdiBjbGFzcz0iTWluaURhdGEgTWluaURhdGEtLWZsZXgiPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJNaW5pRGF0YS1yb3cgTWluaURhdGEtcm93LS1iZyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJNaW5pRGF0YS1pdGVtIiBkYXRhLWJlaGF0PSJuYlBpZWNlc0Rlc0JpZW5zIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGR1IDIgcGnDqGNlcyAgICAgICAgICAgICAgICAgICAgICAgICAgICBhdSA0IHBpw6hjZXMgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0iTWluaURhdGEtaXRlbSIgZGF0YS1iZWhhdD0iZGF0ZUxpdnJhaXNvbkRlc0JpZW5zIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbGl2csOpIGxlIDI8c3VwPsOobWU8L3N1cD4gdHJpbWVzdHJlIDIwMjIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAKICAgICAgICA8cCBjbGFzcz0iVGVhc2VyT2ZmZXItYmFyZW1lIj4KICAgICAgICAgICAgPGEgaHJlZj0iaHR0cDovL2FnZW5jZS5mb25jaWEuY29tL3NhcnRyb3V2aWxsZS03ODUwMC9hZ2VuY2UtaW1tb2JpbGllcmUvZm9uY2lhLXRyYW5zYWN0aW9uLXNhcnRyb3V2aWxsZS0xMDI0IiByZWw9Im5vZm9sbG93IiB0YXJnZXQ9Il9ibGFuayI+Vm9pciBsZSBiYXLDqG1lIGRlIGwnYWdlbmNlPC9hPgogICAgICAgIDwvcD4KICAgIDwvZGl2PgoKICAgIAo8L2FydGljbGU+CiAgICAKCiAgICAKICAgIAogICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAKPGFydGljbGUgY2xhc3M9IlRlYXNlck9mZmVyICI+CiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iaGlkZGVuIiBkYXRhLXJlZmVyZW5jZT0iMTI5MDE3OSI+Jm5ic3A7PC9zcGFuPgoKICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iaGlkZGVuIiBkYXRhLW1hbmRhdD0iU2ltcGxlIj48L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iaGlkZGVuIiBkYXRhLWNyZWF0aW9uPSIyMDIwMDEwMyI+PC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iaGlkZGVuIiBkYXRhLXByaXg9IjI4NTAwMCI+PC9zcGFuPgogICAgICAgIAogICAgPGEgaHJlZj0iL2FjaGF0L3NhcnRyb3V2aWxsZS03ODUwMC9hcHBhcnRlbWVudC8xMjkwMTc5Lmh0bSIgY2xhc3M9IlRlYXNlck9mZmVyLWlsbCIgYXJpYS1oaWRkZW49InRydWUiIHRhYmluZGV4PSItMSIgc3R5bGU9ImJhY2tncm91bmQtaW1hZ2U6IHVybCgnaHR0cDovL3Bob3Rvcy5mci5mb25jaWEuY29tL21pbmljcC82NDAvNDgwL3Bob3Rvcy8xMjkwLzE3OS8xMjkwMTc5L2dyYW5kLzEyOTAxNzlfNzg4MGUzNGI4N2QyZmJkMTYzNTVjZmI0MDNiMzM1ZjI1ZTVlMjE2MGVlOWJjLmpwZz9kYXRlbWFqPTIwMjAtMDMtMDMgMTE6NTU6MzUuMTUzJykiPgogICAgICAgIDxpbWcgc3JjPSJodHRwOi8vcGhvdG9zLmZyLmZvbmNpYS5jb20vbWluaWNwLzY0MC80ODAvcGhvdG9zLzEyOTAvMTc5LzEyOTAxNzkvZ3JhbmQvMTI5MDE3OV83ODgwZTM0Yjg3ZDJmYmQxNjM1NWNmYjQwM2IzMzVmMjVlNWUyMTYwZWU5YmMuanBnP2RhdGVtYWo9MjAyMC0wMy0wMyAxMTo1NTozNS4xNTMiIGFsdD0iQXBwYXJ0ZW1lbnQgNCBwacOoY2VzIMOgIHZlbmRyZSIgLz4KICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iVGVhc2VyT2ZmZXItaWxsLWNvdW50Ij4xMjwvc3Bhbj4KICAgICAgICAgICAgPC9hPgoKICAgIDxkaXYgY2xhc3M9IlRlYXNlck9mZmVyLWNvbnRlbnQiPgoKICAgICAgICAKICAgICAgICA8aDMgY2xhc3M9IlRlYXNlck9mZmVyLXRpdGxlIj48YSBocmVmPSIvYWNoYXQvc2FydHJvdXZpbGxlLTc4NTAwL2FwcGFydGVtZW50LzEyOTAxNzkuaHRtIj5BcHBhcnRlbWVudCA0IHBpw6hjZXMgw6AgdmVuZHJlPC9hPjwvaDM+CiAgICAgICAgPHAgY2xhc3M9IlRlYXNlck9mZmVyLWZhdiI+CiAgICAgICAgICAgIDxidXR0b24gY2xhc3M9IkZhdkJ0biBGYXZCdG4tLWluYWN0aXZlIiBhcmlhLWxhYmVsPSJBam91dGVyIGF1eCBmYXZvcmlzIj4KICAgICAgICAgICAgICAgIDxzdmcgY2xhc3M9Imljb24iIHN0eWxlPSJ3aWR0aDoxNXB4O2hlaWdodDoxNXB4IiBhcmlhLWhpZGRlbj0idHJ1ZSI+PHVzZSB4bGluazpocmVmPSIvYnVuZGxlcy9mb25jaWFpbnRlcm5ldC9zdmcvaWNvbnMuc3ZnI0ljb24tLXN0YXIyIj48L3VzZT48L3N2Zz4KICAgICAgICAgICAgPC9idXR0b24+CiAgICAgICAgPC9wPgogICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJUZWFzZXJPZmZlci1sb2MiPjxzdmcgY2xhc3M9Imljb24iIHN0eWxlPSJ3aWR0aDoxNnB4O2hlaWdodDoxNnB4IiBhcmlhLWhpZGRlbj0idHJ1ZSI+PHVzZSB4bGluazpocmVmPSIvYnVuZGxlcy9mb25jaWFpbnRlcm5ldC9zdmcvaWNvbnMuc3ZnI0ljb24tLXBvaW50ZXIzIj48L3VzZT48L3N2Zz5TYXJ0cm91dmlsbGUgKDc4NTAwKTwvcD4KICAgICAgICAKICAgICAgICA8cCBjbGFzcz0iVGVhc2VyT2ZmZXItcHJpY2UiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHN0cm9uZyBjbGFzcz0iVGVhc2VyT2ZmZXItcHJpY2UtbnVtIiBkYXRhLWJlaGF0PSJwcml4VmVudGVEZXNCaWVucyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDI4NSZuYnNwOzAwMCZuYnNwO+KCrAogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJUZWFzZXJPZmZlci1wcmljZS1tZW50aW9ucyI+SG9ub3JhaXJlcyBkJ2FnZW5jZSDDoCBsYSBjaGFyZ2UgZHUgdmVuZGV1cjwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3N0cm9uZz4KICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgPC9wPgoKICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0iVGVhc2VyT2ZmZXItZGVzY3JpcHRpb24iPgogICAgICAgICAgICAgICAgQmllbiBzaXR1w6ksIGRhbnMgdW4gcXVhcnRpZXIgZW4gcGxlaW4gcmVub3V2ZWF1LCBwcm9jaGUgZGUgdG91dGVzIGNvbW1vZGl0w6lzLiBBY2PDqHMgw6AgbGEgZ2FyZSBSRVIgZW4uLi4KICAgICAgICAgICAgPC9wPgogICAgICAgIAogICAgICAgIDxkaXYgY2xhc3M9Ik1pbmlEYXRhIE1pbmlEYXRhLS1mbGV4Ij4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iTWluaURhdGEtcm93IE1pbmlEYXRhLXJvdy0tYmciPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0iTWluaURhdGEtaXRlbSIgZGF0YS1iZWhhdD0ic3VyZmFjZURlc0JpZW5zIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDcwIG08c3VwPjI8L3N1cD4KICAgICAgICAgICAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9Ik1pbmlEYXRhLWl0ZW0iIGRhdGEtYmVoYXQ9Im5iUGllY2VzRGVzQmllbnMiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgNCBwacOoY2VzICAgICAgICAgICAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJNaW5pRGF0YS1pdGVtIiBkYXRhLWJlaGF0PSJuYkNoYW1icmVzRGVzQmllbnMiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgMyBjaGFtYnJlcyAgICAgICAgICAgICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJNaW5pRGF0YS1pdGVtIE1pbmlEYXRhLWl0ZW0tLWNvbXBhY3QiPgogICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJNaW5pRGF0YS1pY29uIiB0YWJpbmRleD0iMCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHN2ZyBjbGFzcz0iaWNvbiIgc3R5bGU9IndpZHRoOjE1cHg7aGVpZ2h0OjE1cHgiIGFyaWEtaGlkZGVuPSJ0cnVlIj48dXNlIHhsaW5rOmhyZWY9Ii9idW5kbGVzL2ZvbmNpYWludGVybmV0L3N2Zy9pY29ucy5zdmcjSWNvbi0tYWNjZXNzIj48L3VzZT48L3N2Zz4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iTWluaURhdGEtaWNvbkxhYmVsIj5BY2PDqHMgaGFuZGljYXDDqXM8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CgogICAgICAgIAogICAgICAgIDxwIGNsYXNzPSJUZWFzZXJPZmZlci1iYXJlbWUiPgogICAgICAgICAgICA8YSBocmVmPSJodHRwOi8vYWdlbmNlLmZvbmNpYS5jb20vc2FydHJvdXZpbGxlLTc4NTAwL2FnZW5jZS1pbW1vYmlsaWVyZS9mb25jaWEtdHJhbnNhY3Rpb24tc2FydHJvdXZpbGxlLTEwMjQiIHJlbD0ibm9mb2xsb3ciIHRhcmdldD0iX2JsYW5rIj5Wb2lyIGxlIGJhcsOobWUgZGUgbCdhZ2VuY2U8L2E+CiAgICAgICAgPC9wPgogICAgPC9kaXY+CgogICAgCjwvYXJ0aWNsZT4KICAgIAogICAgCiAgICAKICAgIAogICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAKPGFydGljbGUgY2xhc3M9IlRlYXNlck9mZmVyIFRlYXNlck9mZmVyLS1oaWdobGlnaHQiPgogICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImhpZGRlbiIgZGF0YS1yZWZlcmVuY2U9IjEzMzUwODUiPiZuYnNwOzwvc3Bhbj4KCiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImhpZGRlbiIgZGF0YS1tYW5kYXQ9IkV4Y2x1c2lmIj48L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iaGlkZGVuIiBkYXRhLWNyZWF0aW9uPSIyMDIwMDExMSI+PC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iaGlkZGVuIiBkYXRhLXByaXg9IjI3NzAwMCI+PC9zcGFuPgogICAgICAgIAogICAgPGEgaHJlZj0iL2FjaGF0L3NhcnRyb3V2aWxsZS03ODUwMC9hcHBhcnRlbWVudC8xMzM1MDg1Lmh0bSIgY2xhc3M9IlRlYXNlck9mZmVyLWlsbCIgYXJpYS1oaWRkZW49InRydWUiIHRhYmluZGV4PSItMSIgc3R5bGU9ImJhY2tncm91bmQtaW1hZ2U6IHVybCgnaHR0cDovL3Bob3Rvcy5mci5mb25jaWEuY29tL21pbmljcC82NDAvNDgwL3Bob3Rvcy8xMzM1LzA4NS8xMzM1MDg1L2dyYW5kLzEzMzUwODVfNjgzZDIyMDBlNWU5ZTY5ODc5MTA2NDAyM2EwYzc0YjA1ZWJlM2VmMmM5MDUxLmpwZz9kYXRlbWFqPTIwMjAtMDUtMjMgMTQ6MDQ6NTIuMjYwJykiPgogICAgICAgIDxpbWcgc3JjPSJodHRwOi8vcGhvdG9zLmZyLmZvbmNpYS5jb20vbWluaWNwLzY0MC80ODAvcGhvdG9zLzEzMzUvMDg1LzEzMzUwODUvZ3JhbmQvMTMzNTA4NV82ODNkMjIwMGU1ZTllNjk4NzkxMDY0MDIzYTBjNzRiMDVlYmUzZWYyYzkwNTEuanBnP2RhdGVtYWo9MjAyMC0wNS0yMyAxNDowNDo1Mi4yNjAiIGFsdD0iQXBwYXJ0ZW1lbnQgMyBwacOoY2VzIMOgIHZlbmRyZSIgLz4KICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iVGVhc2VyT2ZmZXItaWxsLWNvdW50Ij4xMDwvc3Bhbj4KICAgICAgICAgICAgPC9hPgoKICAgIDxkaXYgY2xhc3M9IlRlYXNlck9mZmVyLWNvbnRlbnQiPgoKICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0iVGVhc2VyT2ZmZXItYmFkZ2UiPjxzcGFuPkV4Y2x1c2lmPC9zcGFuPjwvcD4KICAgICAgICAKICAgICAgICA8aDMgY2xhc3M9IlRlYXNlck9mZmVyLXRpdGxlIj48YSBocmVmPSIvYWNoYXQvc2FydHJvdXZpbGxlLTc4NTAwL2FwcGFydGVtZW50LzEzMzUwODUuaHRtIj5BcHBhcnRlbWVudCAzIHBpw6hjZXMgw6AgdmVuZHJlPC9hPjwvaDM+CiAgICAgICAgPHAgY2xhc3M9IlRlYXNlck9mZmVyLWZhdiI+CiAgICAgICAgICAgIDxidXR0b24gY2xhc3M9IkZhdkJ0biBGYXZCdG4tLWluYWN0aXZlIiBhcmlhLWxhYmVsPSJBam91dGVyIGF1eCBmYXZvcmlzIj4KICAgICAgICAgICAgICAgIDxzdmcgY2xhc3M9Imljb24iIHN0eWxlPSJ3aWR0aDoxNXB4O2hlaWdodDoxNXB4IiBhcmlhLWhpZGRlbj0idHJ1ZSI+PHVzZSB4bGluazpocmVmPSIvYnVuZGxlcy9mb25jaWFpbnRlcm5ldC9zdmcvaWNvbnMuc3ZnI0ljb24tLXN0YXIyIj48L3VzZT48L3N2Zz4KICAgICAgICAgICAgPC9idXR0b24+CiAgICAgICAgPC9wPgogICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJUZWFzZXJPZmZlci1sb2MiPjxzdmcgY2xhc3M9Imljb24iIHN0eWxlPSJ3aWR0aDoxNnB4O2hlaWdodDoxNnB4IiBhcmlhLWhpZGRlbj0idHJ1ZSI+PHVzZSB4bGluazpocmVmPSIvYnVuZGxlcy9mb25jaWFpbnRlcm5ldC9zdmcvaWNvbnMuc3ZnI0ljb24tLXBvaW50ZXIzIj48L3VzZT48L3N2Zz5TYXJ0cm91dmlsbGUgKDc4NTAwKTwvcD4KICAgICAgICAKICAgICAgICA8cCBjbGFzcz0iVGVhc2VyT2ZmZXItcHJpY2UiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHN0cm9uZyBjbGFzcz0iVGVhc2VyT2ZmZXItcHJpY2UtbnVtIiBkYXRhLWJlaGF0PSJwcml4VmVudGVEZXNCaWVucyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDI3NyZuYnNwOzAwMCZuYnNwO+KCrAogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJUZWFzZXJPZmZlci1wcmljZS1tZW50aW9ucyI+SG9ub3JhaXJlcyBkJ2FnZW5jZSDDoCBsYSBjaGFyZ2UgZHUgdmVuZGV1cjwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3N0cm9uZz4KICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgPC9wPgoKICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0iVGVhc2VyT2ZmZXItZGVzY3JpcHRpb24iPgogICAgICAgICAgICAgICAgU2l0dWF0aW9uIGlkw6lhbGUsIMOgIHNldWxlbWVudCAxNSBtaW4gw6AgcGllZCBkZSBsYSBnYXJlIGV0IHByb2NoZSBkZSB0b3V0ZXMgY29tbW9kaXTDqXMuIERhbnMgdW4gcXVhcnRpZXIuLi4KICAgICAgICAgICAgPC9wPgogICAgICAgIAogICAgICAgIDxkaXYgY2xhc3M9Ik1pbmlEYXRhIE1pbmlEYXRhLS1mbGV4Ij4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iTWluaURhdGEtcm93IE1pbmlEYXRhLXJvdy0tYmciPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0iTWluaURhdGEtaXRlbSIgZGF0YS1iZWhhdD0ic3VyZmFjZURlc0JpZW5zIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDY1IG08c3VwPjI8L3N1cD4KICAgICAgICAgICAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9Ik1pbmlEYXRhLWl0ZW0iIGRhdGEtYmVoYXQ9Im5iUGllY2VzRGVzQmllbnMiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgMyBwacOoY2VzICAgICAgICAgICAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJNaW5pRGF0YS1pdGVtIiBkYXRhLWJlaGF0PSJuYkNoYW1icmVzRGVzQmllbnMiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgMiBjaGFtYnJlcyAgICAgICAgICAgICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAKICAgICAgICA8cCBjbGFzcz0iVGVhc2VyT2ZmZXItYmFyZW1lIj4KICAgICAgICAgICAgPGEgaHJlZj0iaHR0cDovL2FnZW5jZS5mb25jaWEuY29tL3NhcnRyb3V2aWxsZS03ODUwMC9hZ2VuY2UtaW1tb2JpbGllcmUvZm9uY2lhLXRyYW5zYWN0aW9uLXNhcnRyb3V2aWxsZS0xMDI0IiByZWw9Im5vZm9sbG93IiB0YXJnZXQ9Il9ibGFuayI+Vm9pciBsZSBiYXLDqG1lIGRlIGwnYWdlbmNlPC9hPgogICAgICAgIDwvcD4KICAgIDwvZGl2PgoKICAgIAo8L2FydGljbGU+CiAgICAKCiAgICAKICAgIAogICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAKPGFydGljbGUgY2xhc3M9IlRlYXNlck9mZmVyICI+CiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iaGlkZGVuIiBkYXRhLXJlZmVyZW5jZT0iMTMzNzk0NCI+Jm5ic3A7PC9zcGFuPgoKICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iaGlkZGVuIiBkYXRhLW1hbmRhdD0iU2ltcGxlIj48L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iaGlkZGVuIiBkYXRhLWNyZWF0aW9uPSIyMDIwMDEwMSI+PC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iaGlkZGVuIiBkYXRhLXByaXg9IjU5ODAwMCI+PC9zcGFuPgogICAgICAgIAogICAgPGEgaHJlZj0iL2FjaGF0L2hvdWlsbGVzLTc4ODAwL21haXNvbi8xMzM3OTQ0Lmh0bSIgY2xhc3M9IlRlYXNlck9mZmVyLWlsbCIgYXJpYS1oaWRkZW49InRydWUiIHRhYmluZGV4PSItMSIgc3R5bGU9ImJhY2tncm91bmQtaW1hZ2U6IHVybCgnaHR0cDovL3Bob3Rvcy5mci5mb25jaWEuY29tL21pbmljcC82NDAvNDgwL3Bob3Rvcy8xMzM3Lzk0NC8xMzM3OTQ0L2dyYW5kLzEzMzc5NDRfYjAzYWY5YTg3ZDM0NmYwZjYwODdhZjgxNzU3ZWFhODg1ZTQ2ZDhiNjkyYjc5LmpwZz9kYXRlbWFqPTIwMjAtMDItMTQgMTg6MzA6NDEuMTI0JykiPgogICAgICAgIDxpbWcgc3JjPSJodHRwOi8vcGhvdG9zLmZyLmZvbmNpYS5jb20vbWluaWNwLzY0MC80ODAvcGhvdG9zLzEzMzcvOTQ0LzEzMzc5NDQvZ3JhbmQvMTMzNzk0NF9iMDNhZjlhODdkMzQ2ZjBmNjA4N2FmODE3NTdlYWE4ODVlNDZkOGI2OTJiNzkuanBnP2RhdGVtYWo9MjAyMC0wMi0xNCAxODozMDo0MS4xMjQiIGFsdD0iTWFpc29uIDUgcGnDqGNlcyDDoCB2ZW5kcmUiIC8+CiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9IlRlYXNlck9mZmVyLWlsbC1jb3VudCI+MTU8L3NwYW4+CiAgICAgICAgICAgIDwvYT4KCiAgICA8ZGl2IGNsYXNzPSJUZWFzZXJPZmZlci1jb250ZW50Ij4KCiAgICAgICAgCiAgICAgICAgPGgzIGNsYXNzPSJUZWFzZXJPZmZlci10aXRsZSI+PGEgaHJlZj0iL2FjaGF0L2hvdWlsbGVzLTc4ODAwL21haXNvbi8xMzM3OTQ0Lmh0bSI+TWFpc29uIDUgcGnDqGNlcyDDoCB2ZW5kcmU8L2E+PC9oMz4KICAgICAgICA8cCBjbGFzcz0iVGVhc2VyT2ZmZXItZmF2Ij4KICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz0iRmF2QnRuIEZhdkJ0bi0taW5hY3RpdmUiIGFyaWEtbGFiZWw9IkFqb3V0ZXIgYXV4IGZhdm9yaXMiPgogICAgICAgICAgICAgICAgPHN2ZyBjbGFzcz0iaWNvbiIgc3R5bGU9IndpZHRoOjE1cHg7aGVpZ2h0OjE1cHgiIGFyaWEtaGlkZGVuPSJ0cnVlIj48dXNlIHhsaW5rOmhyZWY9Ii9idW5kbGVzL2ZvbmNpYWludGVybmV0L3N2Zy9pY29ucy5zdmcjSWNvbi0tc3RhcjIiPjwvdXNlPjwvc3ZnPgogICAgICAgICAgICA8L2J1dHRvbj4KICAgICAgICA8L3A+CiAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9IlRlYXNlck9mZmVyLWxvYyI+PHN2ZyBjbGFzcz0iaWNvbiIgc3R5bGU9IndpZHRoOjE2cHg7aGVpZ2h0OjE2cHgiIGFyaWEtaGlkZGVuPSJ0cnVlIj48dXNlIHhsaW5rOmhyZWY9Ii9idW5kbGVzL2ZvbmNpYWludGVybmV0L3N2Zy9pY29ucy5zdmcjSWNvbi0tcG9pbnRlcjMiPjwvdXNlPjwvc3ZnPkhvdWlsbGVzICg3ODgwMCk8L3A+CiAgICAgICAgCiAgICAgICAgPHAgY2xhc3M9IlRlYXNlck9mZmVyLXByaWNlIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzdHJvbmcgY2xhc3M9IlRlYXNlck9mZmVyLXByaWNlLW51bSIgZGF0YS1iZWhhdD0icHJpeFZlbnRlRGVzQmllbnMiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA1OTgmbmJzcDswMDAmbmJzcDvigqwKICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iVGVhc2VyT2ZmZXItcHJpY2UtbWVudGlvbnMiPkhvbm9yYWlyZXMgZCdhZ2VuY2Ugw6AgbGEgY2hhcmdlIGR1IHZlbmRldXI8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9zdHJvbmc+CiAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIDwvcD4KCiAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9IlRlYXNlck9mZmVyLWRlc2NyaXB0aW9uIj4KICAgICAgICAgICAgICAgIEJpZW4gc2l0dcOpLCBkYW5zIHVuIHF1YXJ0aWVyIGNhbG1lIGV0IHLDqXNpZGVudGllbC4gTm91cyB2b3VzIHByb3Bvc29ucyBkZSB2aXNpdGVyIGNldHRlIGNoYXJtYW50ZSBtYWlzb24uLi4KICAgICAgICAgICAgPC9wPgogICAgICAgIAogICAgICAgIDxkaXYgY2xhc3M9Ik1pbmlEYXRhIE1pbmlEYXRhLS1mbGV4Ij4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iTWluaURhdGEtcm93IE1pbmlEYXRhLXJvdy0tYmciPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0iTWluaURhdGEtaXRlbSIgZGF0YS1iZWhhdD0ic3VyZmFjZURlc0JpZW5zIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDEwMCBtPHN1cD4yPC9zdXA+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJNaW5pRGF0YS1pdGVtIiBkYXRhLWJlaGF0PSJuYlBpZWNlc0Rlc0JpZW5zIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDUgcGnDqGNlcyAgICAgICAgICAgICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0iTWluaURhdGEtaXRlbSIgZGF0YS1iZWhhdD0ibmJDaGFtYnJlc0Rlc0JpZW5zIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDMgY2hhbWJyZXMgICAgICAgICAgICAgICAgICAgICAgICA8L3A+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgCiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgCiAgICAgICAgPHAgY2xhc3M9IlRlYXNlck9mZmVyLWJhcmVtZSI+CiAgICAgICAgICAgIDxhIGhyZWY9Imh0dHA6Ly9hZ2VuY2UuZm9uY2lhLmNvbS9zYXJ0cm91dmlsbGUtNzg1MDAvYWdlbmNlLWltbW9iaWxpZXJlL2ZvbmNpYS10cmFuc2FjdGlvbi1zYXJ0cm91dmlsbGUtMTAyNCIgcmVsPSJub2ZvbGxvdyIgdGFyZ2V0PSJfYmxhbmsiPlZvaXIgbGUgYmFyw6htZSBkZSBsJ2FnZW5jZTwvYT4KICAgICAgICA8L3A+CiAgICA8L2Rpdj4KCiAgICAKPC9hcnRpY2xlPgogICAgCiAgICAKICAgIAogICAgCiAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIAo8YXJ0aWNsZSBjbGFzcz0iVGVhc2VyT2ZmZXIgVGVhc2VyT2ZmZXItLWhpZ2hsaWdodCI+CiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iaGlkZGVuIiBkYXRhLXJlZmVyZW5jZT0iMTM3NTE1NSI+Jm5ic3A7PC9zcGFuPgoKICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iaGlkZGVuIiBkYXRhLW1hbmRhdD0iRXhjbHVzaWYiPjwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJoaWRkZW4iIGRhdGEtY3JlYXRpb249IjIwMjAwMTI3Ij48L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJoaWRkZW4iIGRhdGEtcHJpeD0iMjIwMDAwIj48L3NwYW4+CiAgICAgICAgCiAgICA8YSBocmVmPSIvYWNoYXQvc2FydHJvdXZpbGxlLTc4NTAwL2FwcGFydGVtZW50LzEzNzUxNTUuaHRtIiBjbGFzcz0iVGVhc2VyT2ZmZXItaWxsIiBhcmlhLWhpZGRlbj0idHJ1ZSIgdGFiaW5kZXg9Ii0xIiBzdHlsZT0iYmFja2dyb3VuZC1pbWFnZTogdXJsKCdodHRwOi8vcGhvdG9zLmZyLmZvbmNpYS5jb20vbWluaWNwLzY0MC80ODAvcGhvdG9zLzEzNzUvMTU1LzEzNzUxNTUvZ3JhbmQvMTM3NTE1NV9mYzJhMGRmMTQ3NTMzODIyMjcyM2ViNDZlMzQ2ZWE1ZDVlNDNlNTZlM2NiYzUuanBnP2RhdGVtYWo9MjAyMC0wNS0xNiAxMjo0MjoyMC45OTcnKSI+CiAgICAgICAgPGltZyBzcmM9Imh0dHA6Ly9waG90b3MuZnIuZm9uY2lhLmNvbS9taW5pY3AvNjQwLzQ4MC9waG90b3MvMTM3NS8xNTUvMTM3NTE1NS9ncmFuZC8xMzc1MTU1X2ZjMmEwZGYxNDc1MzM4MjIyNzIzZWI0NmUzNDZlYTVkNWU0M2U1NmUzY2JjNS5qcGc/ZGF0ZW1haj0yMDIwLTA1LTE2IDEyOjQyOjIwLjk5NyIgYWx0PSJBcHBhcnRlbWVudCA0IHBpw6hjZXMgw6AgdmVuZHJlIiAvPgogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJUZWFzZXJPZmZlci1pbGwtY291bnQiPjg8L3NwYW4+CiAgICAgICAgICAgIDwvYT4KCiAgICA8ZGl2IGNsYXNzPSJUZWFzZXJPZmZlci1jb250ZW50Ij4KCiAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9IlRlYXNlck9mZmVyLWJhZGdlIj48c3Bhbj5FeGNsdXNpZjwvc3Bhbj48L3A+CiAgICAgICAgCiAgICAgICAgPGgzIGNsYXNzPSJUZWFzZXJPZmZlci10aXRsZSI+PGEgaHJlZj0iL2FjaGF0L3NhcnRyb3V2aWxsZS03ODUwMC9hcHBhcnRlbWVudC8xMzc1MTU1Lmh0bSI+QXBwYXJ0ZW1lbnQgNCBwacOoY2VzIMOgIHZlbmRyZTwvYT48L2gzPgogICAgICAgIDxwIGNsYXNzPSJUZWFzZXJPZmZlci1mYXYiPgogICAgICAgICAgICA8YnV0dG9uIGNsYXNzPSJGYXZCdG4gRmF2QnRuLS1pbmFjdGl2ZSIgYXJpYS1sYWJlbD0iQWpvdXRlciBhdXggZmF2b3JpcyI+CiAgICAgICAgICAgICAgICA8c3ZnIGNsYXNzPSJpY29uIiBzdHlsZT0id2lkdGg6MTVweDtoZWlnaHQ6MTVweCIgYXJpYS1oaWRkZW49InRydWUiPjx1c2UgeGxpbms6aHJlZj0iL2J1bmRsZXMvZm9uY2lhaW50ZXJuZXQvc3ZnL2ljb25zLnN2ZyNJY29uLS1zdGFyMiI+PC91c2U+PC9zdmc+CiAgICAgICAgICAgIDwvYnV0dG9uPgogICAgICAgIDwvcD4KICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0iVGVhc2VyT2ZmZXItbG9jIj48c3ZnIGNsYXNzPSJpY29uIiBzdHlsZT0id2lkdGg6MTZweDtoZWlnaHQ6MTZweCIgYXJpYS1oaWRkZW49InRydWUiPjx1c2UgeGxpbms6aHJlZj0iL2J1bmRsZXMvZm9uY2lhaW50ZXJuZXQvc3ZnL2ljb25zLnN2ZyNJY29uLS1wb2ludGVyMyI+PC91c2U+PC9zdmc+U2FydHJvdXZpbGxlICg3ODUwMCk8L3A+CiAgICAgICAgCiAgICAgICAgPHAgY2xhc3M9IlRlYXNlck9mZmVyLXByaWNlIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzdHJvbmcgY2xhc3M9IlRlYXNlck9mZmVyLXByaWNlLW51bSIgZGF0YS1iZWhhdD0icHJpeFZlbnRlRGVzQmllbnMiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAyMjAmbmJzcDswMDAmbmJzcDvigqwKICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iVGVhc2VyT2ZmZXItcHJpY2UtbWVudGlvbnMiPkhvbm9yYWlyZXMgZCdhZ2VuY2Ugw6AgbGEgY2hhcmdlIGR1IHZlbmRldXI8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9zdHJvbmc+CiAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIDwvcD4KCiAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9IlRlYXNlck9mZmVyLWRlc2NyaXB0aW9uIj4KICAgICAgICAgICAgICAgIEEgc2V1bGVtZW50IDEwIG1pbiBhIHBpZWQgZHUgUkVSIGRhbnMgdW4gcXVhcnRpZXIgcsOpc2lkZW50aWVsLiBBcHBhcnRlbWVudCBkZSAzIHBpw6hjZXMgY29tcHJlbmFudCBlbnRyw6llLC4uLgogICAgICAgICAgICA8L3A+CiAgICAgICAgCiAgICAgICAgPGRpdiBjbGFzcz0iTWluaURhdGEgTWluaURhdGEtLWZsZXgiPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJNaW5pRGF0YS1yb3cgTWluaURhdGEtcm93LS1iZyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJNaW5pRGF0YS1pdGVtIiBkYXRhLWJlaGF0PSJzdXJmYWNlRGVzQmllbnMiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgNTkgbTxzdXA+Mjwvc3VwPgogICAgICAgICAgICAgICAgICAgICAgICA8L3A+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0iTWluaURhdGEtaXRlbSIgZGF0YS1iZWhhdD0ibmJQaWVjZXNEZXNCaWVucyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA0IHBpw6hjZXMgICAgICAgICAgICAgICAgICAgICAgICA8L3A+CiAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9Ik1pbmlEYXRhLWl0ZW0iIGRhdGEtYmVoYXQ9Im5iQ2hhbWJyZXNEZXNCaWVucyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAyIGNoYW1icmVzICAgICAgICAgICAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIAogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CgogICAgICAgIAogICAgICAgIDxwIGNsYXNzPSJUZWFzZXJPZmZlci1iYXJlbWUiPgogICAgICAgICAgICA8YSBocmVmPSJodHRwOi8vYWdlbmNlLmZvbmNpYS5jb20vc2FydHJvdXZpbGxlLTc4NTAwL2FnZW5jZS1pbW1vYmlsaWVyZS9mb25jaWEtdHJhbnNhY3Rpb24tc2FydHJvdXZpbGxlLTEwMjQiIHJlbD0ibm9mb2xsb3ciIHRhcmdldD0iX2JsYW5rIj5Wb2lyIGxlIGJhcsOobWUgZGUgbCdhZ2VuY2U8L2E+CiAgICAgICAgPC9wPgogICAgPC9kaXY+CgogICAgCjwvYXJ0aWNsZT4KICAgIAogICAgCiAgICAKICAgIAogICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAKPGFydGljbGUgY2xhc3M9IlRlYXNlck9mZmVyIFRlYXNlck9mZmVyLS1oaWdobGlnaHQiPgogICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImhpZGRlbiIgZGF0YS1yZWZlcmVuY2U9IjEzODIxODQiPiZuYnNwOzwvc3Bhbj4KCiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImhpZGRlbiIgZGF0YS1tYW5kYXQ9IkV4Y2x1c2lmIj48L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iaGlkZGVuIiBkYXRhLWNyZWF0aW9uPSIyMDIwMDEwNCI+PC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iaGlkZGVuIiBkYXRhLXByaXg9IjI0NTAwMCI+PC9zcGFuPgogICAgICAgIAogICAgPGEgaHJlZj0iL2FjaGF0L2hvdWlsbGVzLTc4ODAwL21haXNvbi8xMzgyMTg0Lmh0bSIgY2xhc3M9IlRlYXNlck9mZmVyLWlsbCIgYXJpYS1oaWRkZW49InRydWUiIHRhYmluZGV4PSItMSIgc3R5bGU9ImJhY2tncm91bmQtaW1hZ2U6IHVybCgnaHR0cDovL3Bob3Rvcy5mci5mb25jaWEuY29tL21pbmljcC82NDAvNDgwL3Bob3Rvcy8xMzgyLzE4NC8xMzgyMTg0L2dyYW5kLzEzODIxODRfZTIxMDNlY2MzMTU5MTMwNDc4NjI2Y2UyNTIyZmE5OTE1ZWNiNmU0OWE0ZDAyLmpwZz9kYXRlbWFqPTIwMjAtMDUtMjcgMDk6Mjg6MzEuNDM0JykiPgogICAgICAgIDxpbWcgc3JjPSJodHRwOi8vcGhvdG9zLmZyLmZvbmNpYS5jb20vbWluaWNwLzY0MC80ODAvcGhvdG9zLzEzODIvMTg0LzEzODIxODQvZ3JhbmQvMTM4MjE4NF9lMjEwM2VjYzMxNTkxMzA0Nzg2MjZjZTI1MjJmYTk5MTVlY2I2ZTQ5YTRkMDIuanBnP2RhdGVtYWo9MjAyMC0wNS0yNyAwOToyODozMS40MzQiIGFsdD0iTWFpc29uIDQgcGnDqGNlcyDDoCB2ZW5kcmUiIC8+CiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9IlRlYXNlck9mZmVyLWlsbC1jb3VudCI+ODwvc3Bhbj4KICAgICAgICAgICAgPC9hPgoKICAgIDxkaXYgY2xhc3M9IlRlYXNlck9mZmVyLWNvbnRlbnQiPgoKICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0iVGVhc2VyT2ZmZXItYmFkZ2UiPjxzcGFuPkV4Y2x1c2lmPC9zcGFuPjwvcD4KICAgICAgICAKICAgICAgICA8aDMgY2xhc3M9IlRlYXNlck9mZmVyLXRpdGxlIj48YSBocmVmPSIvYWNoYXQvaG91aWxsZXMtNzg4MDAvbWFpc29uLzEzODIxODQuaHRtIj5NYWlzb24gNCBwacOoY2VzIMOgIHZlbmRyZTwvYT48L2gzPgogICAgICAgIDxwIGNsYXNzPSJUZWFzZXJPZmZlci1mYXYiPgogICAgICAgICAgICA8YnV0dG9uIGNsYXNzPSJGYXZCdG4gRmF2QnRuLS1pbmFjdGl2ZSIgYXJpYS1sYWJlbD0iQWpvdXRlciBhdXggZmF2b3JpcyI+CiAgICAgICAgICAgICAgICA8c3ZnIGNsYXNzPSJpY29uIiBzdHlsZT0id2lkdGg6MTVweDtoZWlnaHQ6MTVweCIgYXJpYS1oaWRkZW49InRydWUiPjx1c2UgeGxpbms6aHJlZj0iL2J1bmRsZXMvZm9uY2lhaW50ZXJuZXQvc3ZnL2ljb25zLnN2ZyNJY29uLS1zdGFyMiI+PC91c2U+PC9zdmc+CiAgICAgICAgICAgIDwvYnV0dG9uPgogICAgICAgIDwvcD4KICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0iVGVhc2VyT2ZmZXItbG9jIj48c3ZnIGNsYXNzPSJpY29uIiBzdHlsZT0id2lkdGg6MTZweDtoZWlnaHQ6MTZweCIgYXJpYS1oaWRkZW49InRydWUiPjx1c2UgeGxpbms6aHJlZj0iL2J1bmRsZXMvZm9uY2lhaW50ZXJuZXQvc3ZnL2ljb25zLnN2ZyNJY29uLS1wb2ludGVyMyI+PC91c2U+PC9zdmc+SG91aWxsZXMgKDc4ODAwKTwvcD4KICAgICAgICAKICAgICAgICA8cCBjbGFzcz0iVGVhc2VyT2ZmZXItcHJpY2UiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHN0cm9uZyBjbGFzcz0iVGVhc2VyT2ZmZXItcHJpY2UtbnVtIiBkYXRhLWJlaGF0PSJwcml4VmVudGVEZXNCaWVucyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDI0NSZuYnNwOzAwMCZuYnNwO+KCrAogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJUZWFzZXJPZmZlci1wcmljZS1tZW50aW9ucyI+SG9ub3JhaXJlcyBkJ2FnZW5jZSDDoCBsYSBjaGFyZ2UgZHUgdmVuZGV1cjwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3N0cm9uZz4KICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgPC9wPgoKICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0iVGVhc2VyT2ZmZXItZGVzY3JpcHRpb24iPgogICAgICAgICAgICAgICAgQ2VudHJlLXZpbGxlIGRlIEhvdWlsbGVzLCBpZMOpYWxlbWVudCBzaXR1w6llLCBhY2PDqHMgw6AgbGEgZ2FyZSBlbiBzZXVsZW1lbnQgMTIgbWluIMOgIHBpZWRzLCBkYW5zIHVuIGVudmlyb25uZW1lbnQuLi4KICAgICAgICAgICAgPC9wPgogICAgICAgIAogICAgICAgIDxkaXYgY2xhc3M9Ik1pbmlEYXRhIE1pbmlEYXRhLS1mbGV4Ij4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iTWluaURhdGEtcm93IE1pbmlEYXRhLXJvdy0tYmciPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0iTWluaURhdGEtaXRlbSIgZGF0YS1iZWhhdD0ic3VyZmFjZURlc0JpZW5zIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDg1IG08c3VwPjI8L3N1cD4KICAgICAgICAgICAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9Ik1pbmlEYXRhLWl0ZW0iIGRhdGEtYmVoYXQ9Im5iUGllY2VzRGVzQmllbnMiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgNCBwacOoY2VzICAgICAgICAgICAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJNaW5pRGF0YS1pdGVtIiBkYXRhLWJlaGF0PSJuYkNoYW1icmVzRGVzQmllbnMiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgMiBjaGFtYnJlcyAgICAgICAgICAgICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAKICAgICAgICA8cCBjbGFzcz0iVGVhc2VyT2ZmZXItYmFyZW1lIj4KICAgICAgICAgICAgPGEgaHJlZj0iaHR0cDovL2FnZW5jZS5mb25jaWEuY29tL3NhcnRyb3V2aWxsZS03ODUwMC9hZ2VuY2UtaW1tb2JpbGllcmUvZm9uY2lhLXRyYW5zYWN0aW9uLXNhcnRyb3V2aWxsZS0xMDI0IiByZWw9Im5vZm9sbG93IiB0YXJnZXQ9Il9ibGFuayI+Vm9pciBsZSBiYXLDqG1lIGRlIGwnYWdlbmNlPC9hPgogICAgICAgIDwvcD4KICAgIDwvZGl2PgoKICAgIAo8L2FydGljbGU+CiAgICAKICAgIAogICAgCiAgICAKICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgCjxhcnRpY2xlIGNsYXNzPSJUZWFzZXJPZmZlciBUZWFzZXJPZmZlci0taGlnaGxpZ2h0Ij4KICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJoaWRkZW4iIGRhdGEtcmVmZXJlbmNlPSIxMzg2MDIzIj4mbmJzcDs8L3NwYW4+CgogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJoaWRkZW4iIGRhdGEtbWFuZGF0PSJFeGNsdXNpZiI+PC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImhpZGRlbiIgZGF0YS1jcmVhdGlvbj0iMjAyMDAxMjkiPjwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImhpZGRlbiIgZGF0YS1wcml4PSIyMjUwMDAiPjwvc3Bhbj4KICAgICAgICAKICAgIDxhIGhyZWY9Ii9hY2hhdC9zYXJ0cm91dmlsbGUtNzg1MDAvYXBwYXJ0ZW1lbnQvMTM4NjAyMy5odG0iIGNsYXNzPSJUZWFzZXJPZmZlci1pbGwiIGFyaWEtaGlkZGVuPSJ0cnVlIiB0YWJpbmRleD0iLTEiIHN0eWxlPSJiYWNrZ3JvdW5kLWltYWdlOiB1cmwoJ2h0dHA6Ly9waG90b3MuZnIuZm9uY2lhLmNvbS9taW5pY3AvNjQwLzQ4MC9waG90b3MvMTM4Ni8wMjMvMTM4NjAyMy9ncmFuZC8xMzg2MDIzXzUxMGY5NjhiYTYyZGMwMDE1ZDc4ODRhN2U3MjY5ZDg2NWUzOTJiMzU5MWJkNC5qcGc/ZGF0ZW1haj0yMDIwLTAzLTAzIDE4OjIyOjAwLjYyOCcpIj4KICAgICAgICA8aW1nIHNyYz0iaHR0cDovL3Bob3Rvcy5mci5mb25jaWEuY29tL21pbmljcC82NDAvNDgwL3Bob3Rvcy8xMzg2LzAyMy8xMzg2MDIzL2dyYW5kLzEzODYwMjNfNTEwZjk2OGJhNjJkYzAwMTVkNzg4NGE3ZTcyNjlkODY1ZTM5MmIzNTkxYmQ0LmpwZz9kYXRlbWFqPTIwMjAtMDMtMDMgMTg6MjI6MDAuNjI4IiBhbHQ9IkFwcGFydGVtZW50IDUgcGnDqGNlcyDDoCB2ZW5kcmUiIC8+CiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9IlRlYXNlck9mZmVyLWlsbC1jb3VudCI+MTE8L3NwYW4+CiAgICAgICAgICAgIDwvYT4KCiAgICA8ZGl2IGNsYXNzPSJUZWFzZXJPZmZlci1jb250ZW50Ij4KCiAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9IlRlYXNlck9mZmVyLWJhZGdlIj48c3Bhbj5FeGNsdXNpZjwvc3Bhbj48L3A+CiAgICAgICAgCiAgICAgICAgPGgzIGNsYXNzPSJUZWFzZXJPZmZlci10aXRsZSI+PGEgaHJlZj0iL2FjaGF0L3NhcnRyb3V2aWxsZS03ODUwMC9hcHBhcnRlbWVudC8xMzg2MDIzLmh0bSI+QXBwYXJ0ZW1lbnQgNSBwacOoY2VzIMOgIHZlbmRyZTwvYT48L2gzPgogICAgICAgIDxwIGNsYXNzPSJUZWFzZXJPZmZlci1mYXYiPgogICAgICAgICAgICA8YnV0dG9uIGNsYXNzPSJGYXZCdG4gRmF2QnRuLS1pbmFjdGl2ZSIgYXJpYS1sYWJlbD0iQWpvdXRlciBhdXggZmF2b3JpcyI+CiAgICAgICAgICAgICAgICA8c3ZnIGNsYXNzPSJpY29uIiBzdHlsZT0id2lkdGg6MTVweDtoZWlnaHQ6MTVweCIgYXJpYS1oaWRkZW49InRydWUiPjx1c2UgeGxpbms6aHJlZj0iL2J1bmRsZXMvZm9uY2lhaW50ZXJuZXQvc3ZnL2ljb25zLnN2ZyNJY29uLS1zdGFyMiI+PC91c2U+PC9zdmc+CiAgICAgICAgICAgIDwvYnV0dG9uPgogICAgICAgIDwvcD4KICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0iVGVhc2VyT2ZmZXItbG9jIj48c3ZnIGNsYXNzPSJpY29uIiBzdHlsZT0id2lkdGg6MTZweDtoZWlnaHQ6MTZweCIgYXJpYS1oaWRkZW49InRydWUiPjx1c2UgeGxpbms6aHJlZj0iL2J1bmRsZXMvZm9uY2lhaW50ZXJuZXQvc3ZnL2ljb25zLnN2ZyNJY29uLS1wb2ludGVyMyI+PC91c2U+PC9zdmc+U2FydHJvdXZpbGxlICg3ODUwMCk8L3A+CiAgICAgICAgCiAgICAgICAgPHAgY2xhc3M9IlRlYXNlck9mZmVyLXByaWNlIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzdHJvbmcgY2xhc3M9IlRlYXNlck9mZmVyLXByaWNlLW51bSIgZGF0YS1iZWhhdD0icHJpeFZlbnRlRGVzQmllbnMiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAyMjUmbmJzcDswMDAmbmJzcDvigqwKICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iVGVhc2VyT2ZmZXItcHJpY2UtbWVudGlvbnMiPkhvbm9yYWlyZXMgZCdhZ2VuY2Ugw6AgbGEgY2hhcmdlIGR1IHZlbmRldXI8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9zdHJvbmc+CiAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIDwvcD4KCiAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9IlRlYXNlck9mZmVyLWRlc2NyaXB0aW9uIj4KICAgICAgICAgICAgICAgIFNpdHXDqSBkYW5zIHVuZSByw6lzaWRlbmNlIGF1IGNhbG1lIGV0IHPDqWN1cmlzw6llIHByb2NoZSBkZSB0b3V0ZXMgY29tbW9kaXTDqXMgKMOpY29sZXMsIGNvbW1lcmNlcywgdHJhbnNwb3J0cy4uKS4uLi4KICAgICAgICAgICAgPC9wPgogICAgICAgIAogICAgICAgIDxkaXYgY2xhc3M9Ik1pbmlEYXRhIE1pbmlEYXRhLS1mbGV4Ij4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iTWluaURhdGEtcm93IE1pbmlEYXRhLXJvdy0tYmciPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0iTWluaURhdGEtaXRlbSIgZGF0YS1iZWhhdD0ic3VyZmFjZURlc0JpZW5zIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDEwNCBtPHN1cD4yPC9zdXA+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJNaW5pRGF0YS1pdGVtIiBkYXRhLWJlaGF0PSJuYlBpZWNlc0Rlc0JpZW5zIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDUgcGnDqGNlcyAgICAgICAgICAgICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0iTWluaURhdGEtaXRlbSIgZGF0YS1iZWhhdD0ibmJDaGFtYnJlc0Rlc0JpZW5zIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDQgY2hhbWJyZXMgICAgICAgICAgICAgICAgICAgICAgICA8L3A+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgCiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgCiAgICAgICAgPHAgY2xhc3M9IlRlYXNlck9mZmVyLWJhcmVtZSI+CiAgICAgICAgICAgIDxhIGhyZWY9Imh0dHA6Ly9hZ2VuY2UuZm9uY2lhLmNvbS9zYXJ0cm91dmlsbGUtNzg1MDAvYWdlbmNlLWltbW9iaWxpZXJlL2ZvbmNpYS10cmFuc2FjdGlvbi1zYXJ0cm91dmlsbGUtMTAyNCIgcmVsPSJub2ZvbGxvdyIgdGFyZ2V0PSJfYmxhbmsiPlZvaXIgbGUgYmFyw6htZSBkZSBsJ2FnZW5jZTwvYT4KICAgICAgICA8L3A+CiAgICA8L2Rpdj4KCiAgICAKPC9hcnRpY2xlPgogICAgCiAgICAKICAgIAogICAgCiAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIAo8YXJ0aWNsZSBjbGFzcz0iVGVhc2VyT2ZmZXIgVGVhc2VyT2ZmZXItLWhpZ2hsaWdodCI+CiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iaGlkZGVuIiBkYXRhLXJlZmVyZW5jZT0iMTM4OTc5MyI+Jm5ic3A7PC9zcGFuPgoKICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iaGlkZGVuIiBkYXRhLW1hbmRhdD0iRXhjbHVzaWYiPjwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJoaWRkZW4iIGRhdGEtY3JlYXRpb249IjIwMjAwMTExIj48L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJoaWRkZW4iIGRhdGEtcHJpeD0iNTIwMDAwIj48L3NwYW4+CiAgICAgICAgCiAgICA8YSBocmVmPSIvYWNoYXQvaG91aWxsZXMtNzg4MDAvbWFpc29uLzEzODk3OTMuaHRtIiBjbGFzcz0iVGVhc2VyT2ZmZXItaWxsIiBhcmlhLWhpZGRlbj0idHJ1ZSIgdGFiaW5kZXg9Ii0xIiBzdHlsZT0iYmFja2dyb3VuZC1pbWFnZTogdXJsKCdodHRwOi8vcGhvdG9zLmZyLmZvbmNpYS5jb20vbWluaWNwLzY0MC80ODAvcGhvdG9zLzEzODkvNzkzLzEzODk3OTMvZ3JhbmQvMTM4OTc5M19iZTkyNDJiN2U0MTY1YzlkNWE1ZmY5MmFhN2NiZTU5ZjVlYmUzZWU4MTZhMzcuanBnP2RhdGVtYWo9MjAyMC0wNS0yNSAxNTozMzozMC45NDEnKSI+CiAgICAgICAgPGltZyBzcmM9Imh0dHA6Ly9waG90b3MuZnIuZm9uY2lhLmNvbS9taW5pY3AvNjQwLzQ4MC9waG90b3MvMTM4OS83OTMvMTM4OTc5My9ncmFuZC8xMzg5NzkzX2JlOTI0MmI3ZTQxNjVjOWQ1YTVmZjkyYWE3Y2JlNTlmNWViZTNlZTgxNmEzNy5qcGc/ZGF0ZW1haj0yMDIwLTA1LTI1IDE1OjMzOjMwLjk0MSIgYWx0PSJNYWlzb24gNSBwacOoY2VzIMOgIHZlbmRyZSIgLz4KICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iVGVhc2VyT2ZmZXItaWxsLWNvdW50Ij4xMzwvc3Bhbj4KICAgICAgICAgICAgPC9hPgoKICAgIDxkaXYgY2xhc3M9IlRlYXNlck9mZmVyLWNvbnRlbnQiPgoKICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0iVGVhc2VyT2ZmZXItYmFkZ2UiPjxzcGFuPkV4Y2x1c2lmPC9zcGFuPjwvcD4KICAgICAgICAKICAgICAgICA8aDMgY2xhc3M9IlRlYXNlck9mZmVyLXRpdGxlIj48YSBocmVmPSIvYWNoYXQvaG91aWxsZXMtNzg4MDAvbWFpc29uLzEzODk3OTMuaHRtIj5NYWlzb24gNSBwacOoY2VzIMOgIHZlbmRyZTwvYT48L2gzPgogICAgICAgIDxwIGNsYXNzPSJUZWFzZXJPZmZlci1mYXYiPgogICAgICAgICAgICA8YnV0dG9uIGNsYXNzPSJGYXZCdG4gRmF2QnRuLS1pbmFjdGl2ZSIgYXJpYS1sYWJlbD0iQWpvdXRlciBhdXggZmF2b3JpcyI+CiAgICAgICAgICAgICAgICA8c3ZnIGNsYXNzPSJpY29uIiBzdHlsZT0id2lkdGg6MTVweDtoZWlnaHQ6MTVweCIgYXJpYS1oaWRkZW49InRydWUiPjx1c2UgeGxpbms6aHJlZj0iL2J1bmRsZXMvZm9uY2lhaW50ZXJuZXQvc3ZnL2ljb25zLnN2ZyNJY29uLS1zdGFyMiI+PC91c2U+PC9zdmc+CiAgICAgICAgICAgIDwvYnV0dG9uPgogICAgICAgIDwvcD4KICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0iVGVhc2VyT2ZmZXItbG9jIj48c3ZnIGNsYXNzPSJpY29uIiBzdHlsZT0id2lkdGg6MTZweDtoZWlnaHQ6MTZweCIgYXJpYS1oaWRkZW49InRydWUiPjx1c2UgeGxpbms6aHJlZj0iL2J1bmRsZXMvZm9uY2lhaW50ZXJuZXQvc3ZnL2ljb25zLnN2ZyNJY29uLS1wb2ludGVyMyI+PC91c2U+PC9zdmc+SG91aWxsZXMgKDc4ODAwKTwvcD4KICAgICAgICAKICAgICAgICA8cCBjbGFzcz0iVGVhc2VyT2ZmZXItcHJpY2UiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHN0cm9uZyBjbGFzcz0iVGVhc2VyT2ZmZXItcHJpY2UtbnVtIiBkYXRhLWJlaGF0PSJwcml4VmVudGVEZXNCaWVucyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDUyMCZuYnNwOzAwMCZuYnNwO+KCrAogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJUZWFzZXJPZmZlci1wcmljZS1tZW50aW9ucyI+SG9ub3JhaXJlcyBkJ2FnZW5jZSDDoCBsYSBjaGFyZ2UgZHUgdmVuZGV1cjwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3N0cm9uZz4KICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgPC9wPgoKICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0iVGVhc2VyT2ZmZXItZGVzY3JpcHRpb24iPgogICAgICAgICAgICAgICAgSG91aWxsZXMsIHF1YXJ0aWVyIGRlIExhIE1haW4gZGUgRmVyLCBpZMOpYWxlbWVudCBzaXR1w6llLCBhY2PDqHMgw6AgbGEgZ2FyZSBlbiBzZXVsZW1lbnQgMTAgbWluLCB1biBlbnZpcm9ubmVtZW50Li4uCiAgICAgICAgICAgIDwvcD4KICAgICAgICAKICAgICAgICA8ZGl2IGNsYXNzPSJNaW5pRGF0YSBNaW5pRGF0YS0tZmxleCI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9Ik1pbmlEYXRhLXJvdyBNaW5pRGF0YS1yb3ctLWJnIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9Ik1pbmlEYXRhLWl0ZW0iIGRhdGEtYmVoYXQ9InN1cmZhY2VEZXNCaWVucyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAxMDAgbTxzdXA+Mjwvc3VwPgogICAgICAgICAgICAgICAgICAgICAgICA8L3A+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0iTWluaURhdGEtaXRlbSIgZGF0YS1iZWhhdD0ibmJQaWVjZXNEZXNCaWVucyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA1IHBpw6hjZXMgICAgICAgICAgICAgICAgICAgICAgICA8L3A+CiAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9Ik1pbmlEYXRhLWl0ZW0iIGRhdGEtYmVoYXQ9Im5iQ2hhbWJyZXNEZXNCaWVucyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAzIGNoYW1icmVzICAgICAgICAgICAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIAogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CgogICAgICAgIAogICAgICAgIDxwIGNsYXNzPSJUZWFzZXJPZmZlci1iYXJlbWUiPgogICAgICAgICAgICA8YSBocmVmPSJodHRwOi8vYWdlbmNlLmZvbmNpYS5jb20vc2FydHJvdXZpbGxlLTc4NTAwL2FnZW5jZS1pbW1vYmlsaWVyZS9mb25jaWEtdHJhbnNhY3Rpb24tc2FydHJvdXZpbGxlLTEwMjQiIHJlbD0ibm9mb2xsb3ciIHRhcmdldD0iX2JsYW5rIj5Wb2lyIGxlIGJhcsOobWUgZGUgbCdhZ2VuY2U8L2E+CiAgICAgICAgPC9wPgogICAgPC9kaXY+CgogICAgCjwvYXJ0aWNsZT4KICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iUGFnaW5hdGlvbiBQYWdpbmF0aW9uLS1tb3JlIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuPjE8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Ii9hY2hhdC9jaGF0b3UtNzg0MDAtLXNhaW50LWdlcm1haW4tZW4tbGF5ZS03ODEwMC0tZm91cnF1ZXV4LTc4MTEyLS1sZS12ZXNpbmV0LTc4MTEwLS1jaGFtYm91cmN5LTc4MjQwLS1tYWlzb25zLWxhZmZpdHRlLTc4NjAwLS1tYXJlaWwtbWFybHktNzg3NTAtLW1hcmx5LWxlLXJvaS03ODE2MC0tbC1ldGFuZy1sYS12aWxsZS03ODYyMC0tY3JvaXNzeS1zdXItc2VpbmUtNzgyOTAtLW1vbnRlc3Nvbi03ODM2MC0taG91aWxsZXMtNzg4MDAtLXNhcnRyb3V2aWxsZS03ODUwMC0tY2FycmllcmVzLXN1ci1zZWluZS03ODQyMC0tcnVlaWwtbWFsbWFpc29uLTkyNTAwL2FwcGFydGVtZW50LS1tYWlzb24vcGFnZS0yLyhwYXJhbXMpL29uLyh0cmkpL2RhdGUvKG9yZHJlKS9kZXNjIj4yPC9hPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Ii9hY2hhdC9jaGF0b3UtNzg0MDAtLXNhaW50LWdlcm1haW4tZW4tbGF5ZS03ODEwMC0tZm91cnF1ZXV4LTc4MTEyLS1sZS12ZXNpbmV0LTc4MTEwLS1jaGFtYm91cmN5LTc4MjQwLS1tYWlzb25zLWxhZmZpdHRlLTc4NjAwLS1tYXJlaWwtbWFybHktNzg3NTAtLW1hcmx5LWxlLXJvaS03ODE2MC0tbC1ldGFuZy1sYS12aWxsZS03ODYyMC0tY3JvaXNzeS1zdXItc2VpbmUtNzgyOTAtLW1vbnRlc3Nvbi03ODM2MC0taG91aWxsZXMtNzg4MDAtLXNhcnRyb3V2aWxsZS03ODUwMC0tY2FycmllcmVzLXN1ci1zZWluZS03ODQyMC0tcnVlaWwtbWFsbWFpc29uLTkyNTAwL2FwcGFydGVtZW50LS1tYWlzb24vcGFnZS0zLyhwYXJhbXMpL29uLyh0cmkpL2RhdGUvKG9yZHJlKS9kZXNjIj4zPC9hPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Ii9hY2hhdC9jaGF0b3UtNzg0MDAtLXNhaW50LWdlcm1haW4tZW4tbGF5ZS03ODEwMC0tZm91cnF1ZXV4LTc4MTEyLS1sZS12ZXNpbmV0LTc4MTEwLS1jaGFtYm91cmN5LTc4MjQwLS1tYWlzb25zLWxhZmZpdHRlLTc4NjAwLS1tYXJlaWwtbWFybHktNzg3NTAtLW1hcmx5LWxlLXJvaS03ODE2MC0tbC1ldGFuZy1sYS12aWxsZS03ODYyMC0tY3JvaXNzeS1zdXItc2VpbmUtNzgyOTAtLW1vbnRlc3Nvbi03ODM2MC0taG91aWxsZXMtNzg4MDAtLXNhcnRyb3V2aWxsZS03ODUwMC0tY2FycmllcmVzLXN1ci1zZWluZS03ODQyMC0tcnVlaWwtbWFsbWFpc29uLTkyNTAwL2FwcGFydGVtZW50LS1tYWlzb24vcGFnZS00LyhwYXJhbXMpL29uLyh0cmkpL2RhdGUvKG9yZHJlKS9kZXNjIj40PC9hPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Ii9hY2hhdC9jaGF0b3UtNzg0MDAtLXNhaW50LWdlcm1haW4tZW4tbGF5ZS03ODEwMC0tZm91cnF1ZXV4LTc4MTEyLS1sZS12ZXNpbmV0LTc4MTEwLS1jaGFtYm91cmN5LTc4MjQwLS1tYWlzb25zLWxhZmZpdHRlLTc4NjAwLS1tYXJlaWwtbWFybHktNzg3NTAtLW1hcmx5LWxlLXJvaS03ODE2MC0tbC1ldGFuZy1sYS12aWxsZS03ODYyMC0tY3JvaXNzeS1zdXItc2VpbmUtNzgyOTAtLW1vbnRlc3Nvbi03ODM2MC0taG91aWxsZXMtNzg4MDAtLXNhcnRyb3V2aWxsZS03ODUwMC0tY2FycmllcmVzLXN1ci1zZWluZS03ODQyMC0tcnVlaWwtbWFsbWFpc29uLTkyNTAwL2FwcGFydGVtZW50LS1tYWlzb24vcGFnZS01LyhwYXJhbXMpL29uLyh0cmkpL2RhdGUvKG9yZHJlKS9kZXNjIj41PC9hPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Ii9hY2hhdC9jaGF0b3UtNzg0MDAtLXNhaW50LWdlcm1haW4tZW4tbGF5ZS03ODEwMC0tZm91cnF1ZXV4LTc4MTEyLS1sZS12ZXNpbmV0LTc4MTEwLS1jaGFtYm91cmN5LTc4MjQwLS1tYWlzb25zLWxhZmZpdHRlLTc4NjAwLS1tYXJlaWwtbWFybHktNzg3NTAtLW1hcmx5LWxlLXJvaS03ODE2MC0tbC1ldGFuZy1sYS12aWxsZS03ODYyMC0tY3JvaXNzeS1zdXItc2VpbmUtNzgyOTAtLW1vbnRlc3Nvbi03ODM2MC0taG91aWxsZXMtNzg4MDAtLXNhcnRyb3V2aWxsZS03ODUwMC0tY2FycmllcmVzLXN1ci1zZWluZS03ODQyMC0tcnVlaWwtbWFsbWFpc29uLTkyNTAwL2FwcGFydGVtZW50LS1tYWlzb24vcGFnZS02LyhwYXJhbXMpL29uLyh0cmkpL2RhdGUvKG9yZHJlKS9kZXNjIj42PC9hPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iL2FjaGF0L2NoYXRvdS03ODQwMC0tc2FpbnQtZ2VybWFpbi1lbi1sYXllLTc4MTAwLS1mb3VycXVldXgtNzgxMTItLWxlLXZlc2luZXQtNzgxMTAtLWNoYW1ib3VyY3ktNzgyNDAtLW1haXNvbnMtbGFmZml0dGUtNzg2MDAtLW1hcmVpbC1tYXJseS03ODc1MC0tbWFybHktbGUtcm9pLTc4MTYwLS1sLWV0YW5nLWxhLXZpbGxlLTc4NjIwLS1jcm9pc3N5LXN1ci1zZWluZS03ODI5MC0tbW9udGVzc29uLTc4MzYwLS1ob3VpbGxlcy03ODgwMC0tc2FydHJvdXZpbGxlLTc4NTAwLS1jYXJyaWVyZXMtc3VyLXNlaW5lLTc4NDIwLS1ydWVpbC1tYWxtYWlzb24tOTI1MDAvYXBwYXJ0ZW1lbnQtLW1haXNvbi9wYWdlLTIvKHBhcmFtcykvb24vKHRyaSkvZGF0ZS8ob3JkcmUpL2Rlc2MiPlN1aXZhbnRlID48L2E+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9IkxlZ2FsTWVudGlvbnMgTGVnYWxNZW50aW9ucy0tc21hbGwiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgPC9tYWluPgoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGFzaWRlIGNsYXNzPSJDb250ZW50LXNpZGViYXIgU2lkZWJhciI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCjxzZWN0aW9uIGNsYXNzPSJTaWRlYmFyLWJsb2NrIFNpZGViYXItYmxvY2stLXBhZGRpbmcgU2lkZWJhci1ibG9jay0taW1tb2R2aXNvciI+CiAgICA8YXJ0aWNsZSBjbGFzcz0iUHVzaEFzaWRlIFB1c2hBc2lkZS0taW1tb2R2aXNvciI+CiAgICAgICAgPGltZyBzcmM9Ii9idW5kbGVzL2ZvbmNpYWludGVybmV0L2ltYWdlcy9pbW1vZHZpc29yL3NjZWF1LWRlLWNvbmZpYW5jZS0yMDB4MTcyLnBuZz92ZXJzaW9uPTE1ODgwOTc1NTkiCiAgICAgICAgICAgICBjbGFzcz0iYmxvY2staW1tb2R2aXNvcl9fbG9nbyIKICAgICAgICAgICAgIGFsdD0iSW1tb2R2aXNvciIKICAgICAgICAvPgogICAgICAgIDxkaXYgY2xhc3M9ImJsb2NrLWltbW9kdmlzb3JfX2FwcHJlY2lhdGlvbiB0ZXh0LWNlbnRlciI+CiAgICAgICAgICAgIEV4Y2VsbGVudAogICAgICAgIDwvZGl2PgogICAgICAgIDxkaXYgY2xhc3M9InJhdGluZy1jb250YWluZXIgcmF0aW5nLXhzIHRleHQtY2VudGVyIj4KICAgICAgICAgICAgCgogICAgICAgICAgICA8aW1nIHNyYz0iL2J1bmRsZXMvZm9uY2lhaW50ZXJuZXQvaW1hZ2VzL2ltbW9kdmlzb3IvcmF0aW5nLWZ1bGwucG5nP3ZlcnNpb249MTU4ODA5NzU1OSIgd2lkdGg9IjI1cHgiIGhlaWdodD0iMjVweCIgLz4KICAgICAgICAgICAgPGltZyBzcmM9Ii9idW5kbGVzL2ZvbmNpYWludGVybmV0L2ltYWdlcy9pbW1vZHZpc29yL3JhdGluZy1mdWxsLnBuZz92ZXJzaW9uPTE1ODgwOTc1NTkiIHdpZHRoPSIyNXB4IiBoZWlnaHQ9IjI1cHgiIC8+CiAgICAgICAgICAgIDxpbWcgc3JjPSIvYnVuZGxlcy9mb25jaWFpbnRlcm5ldC9pbWFnZXMvaW1tb2R2aXNvci9yYXRpbmctZnVsbC5wbmc/dmVyc2lvbj0xNTg4MDk3NTU5IiB3aWR0aD0iMjVweCIgaGVpZ2h0PSIyNXB4IiAvPgogICAgICAgICAgICA8aW1nIHNyYz0iL2J1bmRsZXMvZm9uY2lhaW50ZXJuZXQvaW1hZ2VzL2ltbW9kdmlzb3IvcmF0aW5nLWZ1bGwucG5nP3ZlcnNpb249MTU4ODA5NzU1OSIgd2lkdGg9IjI1cHgiIGhlaWdodD0iMjVweCIgLz4KICAgICAgICA8aW1nIHNyYz0iL2J1bmRsZXMvZm9uY2lhaW50ZXJuZXQvaW1hZ2VzL2ltbW9kdmlzb3IvcmF0aW5nLWhhbGYucG5nP3ZlcnNpb249MTU4ODA5NzU1OSIgd2lkdGg9IjI1cHgiIGhlaWdodD0iMjVweCIgLz4KICAgICAgICA8L2Rpdj4KICAgICAgICA8ZGl2IGNsYXNzPSJibG9jay1pbW1vZHZpc29yX19kYXRlIHRleHQtY2VudGVyIj4yOS8wNS8yMDIwPC9kaXY+CiAgICAgICAgPGRpdiBjbGFzcz0idGV4dC1jZW50ZXIiCiAgICAgICAgICAgICBpdGVtc2NvcGU9IiIKICAgICAgICAgICAgIGl0ZW10eXBlPSJodHRwOi8vZGF0YS12b2NhYnVsYXJ5Lm9yZy9SZXZpZXctYWdncmVnYXRlIgogICAgICAgID4KICAgICAgICAgICAgPGRpdj4KICAgICAgICAgICAgICAgIDxzcGFuIGl0ZW1wcm9wPSJpdGVtcmV2aWV3ZWQiPkZvbmNpYTwvc3Bhbj4KICAgICAgICAgICAgICAgIGVzdCBub3TDqQogICAgICAgICAgICAgICAgPHNwYW4gaXRlbXByb3A9InJhdGluZyIgaXRlbXNjb3BlPSIiIGl0ZW10eXBlPSJodHRwOi8vZGF0YS12b2NhYnVsYXJ5Lm9yZy9SYXRpbmciPgogICAgICAgICAgICAgICAgICAgIDxzcGFuIGl0ZW1wcm9wPSJhdmVyYWdlIj40LjU8L3NwYW4+LzxzcGFuIGl0ZW1wcm9wPSJiZXN0Ij41PC9zcGFuPgogICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iYmxvY2staW1tb2R2aXNvcl9fYXZpcyI+CiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0idGV4dC1zbWxsIj4KICAgICAgICAgICAgICAgICAgICBzZWxvbiA8c3BhbiBpdGVtcHJvcD0idm90ZXMiPjcxNTA8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgYXZpcyBjbGllbnRzIHN1cgogICAgICAgICAgICAgICAgICAgIDxzcGFuIGl0ZW1wcm9wPSJyZXZpZXdlciI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vd3d3LmltbW9kdmlzb3IuY29tL3Byby9mb25jaWEtdHJhbnNhY3Rpb24tYW50b255LTkyMTg4LTcuaHRtbCAiCiAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzPSJibG9jay1pbW1vZHZpc29yX19saWVuIgogICAgICAgICAgICAgICAgICAgICAgICAgICByZWw9Im5vZm9sbG93IgogICAgICAgICAgICAgICAgICAgICAgICAgICB0YXJnZXQ9Il9ibGFuayI+SW1tb2R2aXNvcjwvYT4KICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgoKICAgIDwvYXJ0aWNsZT4KPC9zZWN0aW9uPgoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgPHNlY3Rpb24gY2xhc3M9IlNpZGViYXItYmxvY2sgU2lkZWJhci1ibG9jay0tcGFkZGluZyBTaWRlYmFyLWJsb2NrLS1lc3RpbWF0aW9uIj4KICAgICAgICAgICAgICAgICAgICA8YXJ0aWNsZSBjbGFzcz0iUHVzaEFzaWRlIj4KCiAgICAgICAgICAgICAgICA8aDMgY2xhc3M9IlB1c2hBc2lkZS10aXRsZSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzdmcgY2xhc3M9Imljb24iIHN0eWxlPSJ3aWR0aDozMHB4O2hlaWdodDozMHB4IiBhcmlhLWhpZGRlbj0idHJ1ZSI+PHVzZSB4bGluazpocmVmPSIvYnVuZGxlcy9mb25jaWFpbnRlcm5ldC9zdmcvaWNvbnMuc3ZnI0ljb24tLWNhbGN1bGF0b3IiPjwvdXNlPjwvc3ZnPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBFc3RpbWVyIG1vbiBiaWVuCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvaDM+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJQdXNoQXNpZGUtZGVzYyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwPkLDqW7DqWZpY2lleiBkJ3VuZSBlc3RpbWF0aW9uIGdyYXR1aXRlIGRlIHZvdHJlIGFwcGFydGVtZW50IG91IG1haXNvbi48L3A+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPHAgY2xhc3M9IlB1c2hBc2lkZS1saW5rIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9wPgoKICAgICAgICAgICAgICAgIAogICAgICAgICAgICA8L2FydGljbGU+CiAgICAgICAgICAgICAgICAgICAgPGFydGljbGUgY2xhc3M9IlB1c2hBc2lkZSI+CgogICAgICAgICAgICAgICAgPGgzIGNsYXNzPSJQdXNoQXNpZGUtdGl0bGUiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhICB0YXJnZXQ9Il9ibGFuayIgIGhyZWY9Ii9lc3RpbWF0aW9uLWxveWVyIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHN2ZyBjbGFzcz0iaWNvbiIgc3R5bGU9IndpZHRoOjMwcHg7aGVpZ2h0OjMwcHgiIGFyaWEtaGlkZGVuPSJ0cnVlIj48dXNlIHhsaW5rOmhyZWY9Ii9idW5kbGVzL2ZvbmNpYWludGVybmV0L3N2Zy9pY29ucy5zdmcjSWNvbi0tY2FsY3VsYXRvciI+PC91c2U+PC9zdmc+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEVzdGltZXIgbW9uIGxveWVyCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2gzPgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iUHVzaEFzaWRlLWRlc2MiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cD5Cw6luw6lmaWNpZXogZCd1biBlc3RpbWF0aW9uIGdyYXR1aXRlIGR1IGxveWVyIGRlIHZvdHJlIGFwcGFydGVtZW50LjwvcD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8cCBjbGFzcz0iUHVzaEFzaWRlLWxpbmsiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhICB0YXJnZXQ9Il9ibGFuayIgIGNsYXNzPSJCdG4gQnRuLS1zbWFsbCIgaHJlZj0iL2VzdGltYXRpb24tbG95ZXIiPjxzcGFuIGNsYXNzPSJlenN0cmluZy1maWVsZCI+SiYjMDM5O2VzdGltZSBtb24gbG95ZXI8L3NwYW4+PC9hPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3A+CgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgIDwvYXJ0aWNsZT4KICAgICAgICAgICAgPC9zZWN0aW9uPgoKICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzZWN0aW9uIGNsYXNzPSJTaWRlYmFyLWJsb2NrIFNpZGViYXItYmxvY2stLXBhZGRpbmciPgogICAgICAgICAgICAgICAgICAgIDxhcnRpY2xlIGNsYXNzPSJQdXNoQXNpZGUiPgoKICAgICAgICAgICAgICAgIDxoMyBjbGFzcz0iUHVzaEFzaWRlLXRpdGxlIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSB0YXJnZXQ9Il9ibGFuayIgaHJlZj0iaHR0cDovL2RlbWVuYWdlci5mb25jaWEuY29tLyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzdmcgY2xhc3M9Imljb24iIHN0eWxlPSJ3aWR0aDozMHB4O2hlaWdodDozMHB4IiBhcmlhLWhpZGRlbj0idHJ1ZSI+PHVzZSB4bGluazpocmVmPSIvYnVuZGxlcy9mb25jaWFpbnRlcm5ldC9zdmcvaWNvbnMuc3ZnI0ljb24tLWhvbWUiPjwvdXNlPjwvc3ZnPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBEw6ltw6luYWdlciBzZXJlaW4gYXZlYyBGb25jaWEgISAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvaDM+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJQdXNoQXNpZGUtZGVzYyI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxwPkTDqWNvdXZyZXogbm9zIHNlcnZpY2VzIHByYXRpcXVlcyBwb3VyIHLDqXVzc2lyIHZvdHJlIGTDqW3DqW5hZ2VtZW50LjwvcD4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPHAgY2xhc3M9IlB1c2hBc2lkZS1saW5rIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSB0YXJnZXQ9Il9ibGFuayIgaHJlZj0iaHR0cDovL2RlbWVuYWdlci5mb25jaWEuY29tLyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iZXpzdHJpbmctZmllbGQiPkVuIHNhdm9pciBwbHVzPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgPC9hcnRpY2xlPgogICAgICAgICAgICA8L3NlY3Rpb24+CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgPC9hc2lkZT4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgPC9zZWN0aW9uPgoKICAgIDwvZGl2PgoKCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJCcmVhZGNydW1icyI+CiAgICAgICAgICAgIDxwICAgICBjbGFzcz0iQnJlYWRjcnVtYnMtaW5uZXIiIGRhdGEtdHlwZT0ieW9sbyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4+Rm9uY2lhPC9zcGFuPiAgICAgICAgICAgICAgICAgICAgICAgICAgICAKCiAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Ii9hY2hhdCIgICAgIGNsYXNzPSJCcmVhZGNydW1icy1saW5rIj5BY2hhdDwvYT4gICAgICAgICAgICAgICAgICAgICAgICAgICAgCgogICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIvYWNoYXQvY2hhdG91LTc4NDAwLS1zYWludC1nZXJtYWluLWVuLWxheWUtNzgxMDAtLWZvdXJxdWV1eC03ODExMi0tbGUtdmVzaW5ldC03ODExMC0tY2hhbWJvdXJjeS03ODI0MC0tbWFpc29ucy1sYWZmaXR0ZS03ODYwMC0tbWFyZWlsLW1hcmx5LTc4NzUwLS1tYXJseS1sZS1yb2ktNzgxNjAtLWwtZXRhbmctbGEtdmlsbGUtNzg2MjAtLWNyb2lzc3ktc3VyLXNlaW5lLTc4MjkwLS1tb250ZXNzb24tNzgzNjAtLWhvdWlsbGVzLTc4ODAwLS1zYXJ0cm91dmlsbGUtNzg1MDAtLWNhcnJpZXJlcy1zdXItc2VpbmUtNzg0MjAtLXJ1ZWlsLW1hbG1haXNvbi05MjUwMCIgICAgIGNsYXNzPSJCcmVhZGNydW1icy1saW5rIj5DaGF0b3UgNzg0MDAg4oCiIFNhaW50IEdlcm1haW4gRW4gTGF5ZSA3ODEwMCDigKIgRm91cnF1ZXV4IDc4MTEyIOKAoiBMZSBWZXNpbmV0IDc4MTEwIOKAoiBDaGFtYm91cmN5IDc4MjQwIOKAoiBNYWlzb25zIExhZmZpdHRlIDc4NjAwIOKAoiBNYXJlaWwgTWFybHkgNzg3NTAg4oCiIE1hcmx5IExlIFJvaSA3ODE2MCDigKIgTCBFdGFuZyBMYSBWaWxsZSA3ODYyMCDigKIgQ3JvaXNzeSBTdXIgU2VpbmUgNzgyOTAg4oCiIE1vbnRlc3NvbiA3ODM2MCDigKIgSG91aWxsZXMgNzg4MDAg4oCiIFNhcnRyb3V2aWxsZSA3ODUwMCDigKIgQ2FycmllcmVzIFN1ciBTZWluZSA3ODQyMCDigKIgUnVlaWwgTWFsbWFpc29uIDkyNTAwPC9hPiAgICAgICAgICAgICAgICAgICAgICAgICAgICAKCiAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuPkFwcGFydGVtZW50IOKAoiBNYWlzb248L3NwYW4+ICAgICAgICAgICAgICAgICAgICAgICAgICAgIAoKICAgIAoKICAgICAgICAgICAgPC9wPgogICAgICAgIDwvZGl2PgogICAgCgoKICAgICAgICAgICAgCiAgICAgICAgCjxmb290ZXIgY2xhc3M9IkZvb3RlciIgcm9sZT0iY29udGVudGluZm8iPgoKICAgIDxkaXYgY2xhc3M9IkZvb3Rlci1yb3cgRm9vdGVyLXJvdy0taWRlbnRpdHkgRm9vdGVyLXJvdy0taWRlbnRpdHktbW9iaWxlIj4KICAgICAgICA8ZGl2IGNsYXNzPSJGb290ZXItMnBhcnQiPgogICAgICAgICAgICA8cCBjbGFzcz0iRm9vdGVyLXBhcnQxIEZvb3Rlci1wYXJ0MS0tbG9nbyI+CiAgICAgICAgICAgICAgICA8aW1nIHdpZHRoPSIxNTQiIGhlaWdodD0iNTYiIHNyYz0iaHR0cHM6Ly9waG90b3MuZm9uY2lhLm5ldC9pbWFnZXMvRm9uY2lhX2xvZ292XzMwOF84Ni5wbmciIGFsdD0iRm9uY2lhIj4KICAgICAgICAgICAgPC9wPgogICAgICAgICAgICA8dWwgY2xhc3M9IkZvb3Rlci1wYXJ0MiBGb290ZXItcGFydDItLWxpbmtzIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgICA8YSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhyZWY9Ii9tZW50aW9ucy1sZWdhbGVzIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtYmVoYXQ9ImxpbmstTWVudGlvbnNfbMOpZ2FsZXMiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBNZW50aW9ucyBsw6lnYWxlcwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgICAgPGEgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBocmVmPSJodHRwczovL2ZyLmZvbmNpYS5jb20vcGxhbi1kdS1zaXRlIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtYmVoYXQ9ImxpbmstUGxhbl9kdV9zaXRlIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgUGxhbiBkdSBzaXRlCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgICA8YSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhyZWY9Ii8jZm9uY2lhX2NvbnNlbnRlbWVudHMiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1iZWhhdD0ibGluay1HZXN0aW9uX2Rlc19jb29raWVzIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgR2VzdGlvbiBkZXMgY29va2llcwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgICAgPGEgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBocmVmPSIvY2hhcnRlLWRlLXByb3RlY3Rpb24tZGVzLWRvbm5lZXMiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1iZWhhdD0ibGluay1DaGFydGVfZGVfcHJvdGVjdGlvbl9kZXNfZG9ubsOpZXNfIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgQ2hhcnRlIGRlIHByb3RlY3Rpb24gZGVzIGRvbm7DqWVzIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgICAgPGEgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBocmVmPSIvbm90cmUtcHJlb2NjdXBhdGlvbi1sYS1zZWN1cml0ZS1kZS12b3MtZG9ubmVlcyIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkYXRhLWJlaGF0PSJsaW5rLVPDqWN1cml0w6lfSW5mb3JtYXRpcXVlIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgU8OpY3VyaXTDqSBJbmZvcm1hdGlxdWUKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICAgIDxhICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaHJlZj0iL3NlcnZpY2VzIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtYmVoYXQ9ImxpbmstU2VydmljZXMiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBTZXJ2aWNlcwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgICAgPGEgIHRhcmdldD0iX2JsYW5rIiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhyZWY9Imh0dHA6Ly9wcmVzc3Jvb20uZm9uY2lhLmNvbS8iCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1iZWhhdD0ibGluay1Fc3BhY2VfUHJlc3NlIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgRXNwYWNlIFByZXNzZQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgICAgPGEgIHRhcmdldD0iX2JsYW5rIiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhyZWY9Imh0dHA6Ly9mb25jaWEtcmVjcnV0ZS50YWxlbnQtc29mdC5jb20vYWNjdWVpbC5hc3B4IgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtYmVoYXQ9ImxpbmstTm9zX29mZnJlc19k4oCZZW1wbG9pIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgTm9zIG9mZnJlcyBk4oCZZW1wbG9pCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgICA8YSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhyZWY9Ii9hY2hhdC9hdmlzLWNsaWVudHMiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1iZWhhdD0ibGluay1BdmlzX2NsaWVudHMiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBBdmlzIGNsaWVudHMKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC91bD4KICAgICAgICA8L2Rpdj4KICAgIDwvZGl2PgoKICAgIDxkaXYgY2xhc3M9IkZvb3Rlci1wYXJ0MSBGb290ZXItcGFydDEtLXNvY2lhbCI+CiAgICAgICAgICAgICAgICAgICAgPGEgY2xhc3M9IkZvb3Rlci0taGF1dC1kZS1wYWdlLS1kZXNrdG9wIiAgdGFyZ2V0PSJfYmxhbmsiICBocmVmPSJodHRwczovL3d3dy5mYWNlYm9vay5jb20vRm9uY2lhIiBkYXRhLWJlaGF0PSJzb2NpYWxMaW5rLUZhY2Vib29rIG1lbnUgZHJvaXQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3ZnIGNsYXNzPSJpY29uIiBzdHlsZT0id2lkdGg6MzhweDtoZWlnaHQ6MzhweCIgYXJpYS1oaWRkZW49InRydWUiPjx1c2UgeGxpbms6aHJlZj0iL2J1bmRsZXMvZm9uY2lhaW50ZXJuZXQvc3ZnL2ljb25zLnN2ZyNJY29uLS1mYWNlYm9vay1yZXNwb25zaXZlIj48L3VzZT48L3N2Zz4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgPGEgY2xhc3M9IkZvb3Rlci0taGF1dC1kZS1wYWdlIiAgdGFyZ2V0PSJfYmxhbmsiICBocmVmPSJodHRwczovL3d3dy5mYWNlYm9vay5jb20vRm9uY2lhIiBkYXRhLWJlaGF0PSJzb2NpYWxMaW5rLUZhY2Vib29rIG1lbnUgZHJvaXQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3ZnIGNsYXNzPSJpY29uIiBzdHlsZT0id2lkdGg6MzhweDtoZWlnaHQ6MzhweCIgYXJpYS1oaWRkZW49InRydWUiPjx1c2UgeGxpbms6aHJlZj0iL2J1bmRsZXMvZm9uY2lhaW50ZXJuZXQvc3ZnL2ljb25zLnN2ZyNJY29uLS1mYWNlYm9vazIiPjwvdXNlPjwvc3ZnPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICAgIDxhIGNsYXNzPSJGb290ZXItLWhhdXQtZGUtcGFnZS0tZGVza3RvcCIgIHRhcmdldD0iX2JsYW5rIiAgaHJlZj0iaHR0cHM6Ly90d2l0dGVyLmNvbS9mb25jaWEiIGRhdGEtYmVoYXQ9InNvY2lhbExpbmstdHdpdHRlciBtZW51IGRyb2l0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHN2ZyBjbGFzcz0iaWNvbiIgc3R5bGU9IndpZHRoOjM4cHg7aGVpZ2h0OjM4cHgiIGFyaWEtaGlkZGVuPSJ0cnVlIj48dXNlIHhsaW5rOmhyZWY9Ii9idW5kbGVzL2ZvbmNpYWludGVybmV0L3N2Zy9pY29ucy5zdmcjSWNvbi0tdHdpdHRlci1yZXBvbnNpdmUiPjwvdXNlPjwvc3ZnPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICA8YSBjbGFzcz0iRm9vdGVyLS1oYXV0LWRlLXBhZ2UiICB0YXJnZXQ9Il9ibGFuayIgIGhyZWY9Imh0dHBzOi8vdHdpdHRlci5jb20vZm9uY2lhIiBkYXRhLWJlaGF0PSJzb2NpYWxMaW5rLXR3aXR0ZXIgbWVudSBkcm9pdCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzdmcgY2xhc3M9Imljb24iIHN0eWxlPSJ3aWR0aDozOHB4O2hlaWdodDozOHB4IiBhcmlhLWhpZGRlbj0idHJ1ZSI+PHVzZSB4bGluazpocmVmPSIvYnVuZGxlcy9mb25jaWFpbnRlcm5ldC9zdmcvaWNvbnMuc3ZnI0ljb24tLXR3aXR0ZXIyIj48L3VzZT48L3N2Zz4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgICA8YSBjbGFzcz0iRm9vdGVyLS1oYXV0LWRlLXBhZ2UtLWRlc2t0b3AiICB0YXJnZXQ9Il9ibGFuayIgIGhyZWY9Imh0dHBzOi8vd3d3LnlvdXR1YmUuY29tL3VzZXIvZm9uY2lhIiBkYXRhLWJlaGF0PSJzb2NpYWxMaW5rLXlvdXR1YmUgbWVudSBkcm9pdCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzdmcgY2xhc3M9Imljb24iIHN0eWxlPSJ3aWR0aDozOHB4O2hlaWdodDozOHB4IiBhcmlhLWhpZGRlbj0idHJ1ZSI+PHVzZSB4bGluazpocmVmPSIvYnVuZGxlcy9mb25jaWFpbnRlcm5ldC9zdmcvaWNvbnMuc3ZnI0ljb24tLXlvdXR1YmUtcmVzcG9uc2l2ZSI+PC91c2U+PC9zdmc+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgIDxhIGNsYXNzPSJGb290ZXItLWhhdXQtZGUtcGFnZSIgIHRhcmdldD0iX2JsYW5rIiAgaHJlZj0iaHR0cHM6Ly93d3cueW91dHViZS5jb20vdXNlci9mb25jaWEiIGRhdGEtYmVoYXQ9InNvY2lhbExpbmsteW91dHViZSBtZW51IGRyb2l0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHN2ZyBjbGFzcz0iaWNvbiIgc3R5bGU9IndpZHRoOjM4cHg7aGVpZ2h0OjM4cHgiIGFyaWEtaGlkZGVuPSJ0cnVlIj48dXNlIHhsaW5rOmhyZWY9Ii9idW5kbGVzL2ZvbmNpYWludGVybmV0L3N2Zy9pY29ucy5zdmcjSWNvbi0teW91dHViZTIiPjwvdXNlPjwvc3ZnPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICAgIDxhIGNsYXNzPSJGb290ZXItLWhhdXQtZGUtcGFnZS0tZGVza3RvcCIgIHRhcmdldD0iX2JsYW5rIiAgaHJlZj0iaHR0cHM6Ly93d3cubGlua2VkaW4uY29tL2NvbXBhbnkvNzcyOTE3LyIgZGF0YS1iZWhhdD0ic29jaWFsTGluay1saW5rZWRpbiBtZW51IGRyb2l0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHN2ZyBjbGFzcz0iaWNvbiIgc3R5bGU9IndpZHRoOjM4cHg7aGVpZ2h0OjM4cHgiIGFyaWEtaGlkZGVuPSJ0cnVlIj48dXNlIHhsaW5rOmhyZWY9Ii9idW5kbGVzL2ZvbmNpYWludGVybmV0L3N2Zy9pY29ucy5zdmcjSWNvbi0tbGlua2VkaW4tcmVzcG9uc2l2ZSI+PC91c2U+PC9zdmc+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgIDxhIGNsYXNzPSJGb290ZXItLWhhdXQtZGUtcGFnZSIgIHRhcmdldD0iX2JsYW5rIiAgaHJlZj0iaHR0cHM6Ly93d3cubGlua2VkaW4uY29tL2NvbXBhbnkvNzcyOTE3LyIgZGF0YS1iZWhhdD0ic29jaWFsTGluay1saW5rZWRpbiBtZW51IGRyb2l0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHN2ZyBjbGFzcz0iaWNvbiIgc3R5bGU9IndpZHRoOjM4cHg7aGVpZ2h0OjM4cHgiIGFyaWEtaGlkZGVuPSJ0cnVlIj48dXNlIHhsaW5rOmhyZWY9Ii9idW5kbGVzL2ZvbmNpYWludGVybmV0L3N2Zy9pY29ucy5zdmcjSWNvbi0tbGlua2VkaW4iPjwvdXNlPjwvc3ZnPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgIAogICAgICAgIDxhIGNsYXNzPSJGb290ZXItLWhhdXQtZGUtcGFnZSIgaHJlZj0iIyIgb25DbGljaz0iJCgnaHRtbCwgYm9keScpLmFuaW1hdGUoe3Njcm9sbFRvcDowfSwgJ3Nsb3cnKTsgcmV0dXJuIGZhbHNlOyI+CiAgICAgICAgICAgIDxzdmcgY2xhc3M9Imljb24iIHN0eWxlPSJ3aWR0aDozOHB4O2hlaWdodDozOHB4IiBhcmlhLWhpZGRlbj0idHJ1ZSI+PHVzZSB4bGluazpocmVmPSIvYnVuZGxlcy9mb25jaWFpbnRlcm5ldC9zdmcvaWNvbnMuc3ZnI0ljb24tLWhhdXRfZGVfcGFnZV9ncmlzIj48L3VzZT48L3N2Zz4KICAgICAgICA8L2E+CiAgICA8L2Rpdj4KCiAgICA8ZGl2IGNsYXNzPSJGb290ZXItcm93IEZvb3Rlci1yb3ctLWxpbmtzMSI+CiAgICAgICAgPGRpdiBjbGFzcz0iRm9vdGVyLWNvbHMiPgogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJGb290ZXItY29sIEZvb3Rlci1jb2wtLWxlZnQiPgogICAgICAgICAgICAgICAgPHVsIGNsYXNzPSJGb290ZXItbWFpbkxpbmtzIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSAgaHJlZj0iaHR0cHM6Ly9mci5mb25jaWEuY29tL2FjaGF0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBBY2hldGVyIHVuIGJpZW4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhICBocmVmPSIvZmFpcmUtZ2VyZXItbWEtbG9jYXRpb24tcGFyLWZvbmNpYSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgRmFpcmUgZ8OpcmVyIG1hIGxvY2F0aW9uCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSAgaHJlZj0iaHR0cHM6Ly9mci5mb25jaWEuY29tL2VzdGltZXItc29uLWJpZW4iPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEVzdGltYXRpb24gYmllbiBpbW1vYmlsaWVyCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSAgaHJlZj0iL2wtaW52ZXN0aXNzZW1lbnQtaW1tb2JpbGllciI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgSW52ZXN0aXIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhICBocmVmPSIvdm90cmUtYWNoYXQtZGFucy1sLWltbW9iaWxpZXItbmV1Zi1hdmVjLWZvbmNpYSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgQWNoYXQgaW1tb2JpbGllciBuZXVmIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdWw+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJGb290ZXItY29sIEZvb3Rlci1jb2wtLXJpZ2h0Ij4KICAgICAgICAgICAgICAgIDx1bCBjbGFzcz0iRm9vdGVyLW1haW5MaW5rcyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgIHRhcmdldD0iX2JsYW5rIiAgaHJlZj0iaHR0cHM6Ly9mci5mb25jaWEuY29tL2xvY2F0aW9uIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBMb3VlciB1biBiaWVuCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSAgaHJlZj0iL2ZhaXJlLWdlcmVyLXVuZS1jb3Byb3ByaWV0ZSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgRmFpcmUgZ8OpcmVyIHVuZSBjb3Byb3ByacOpdMOpCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSAgaHJlZj0iaHR0cHM6Ly9mci5mb25jaWEuY29tL2VzdGltYXRpb24tbG95ZXIiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEVzdGltYXRpb24gbG95ZXIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhICBocmVmPSIvbG9naW4iPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIE15Rm9uY2lhCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSAgaHJlZj0iaHR0cHM6Ly9mci5mb25jaWEuY29tL2FjdHVhbGl0ZXMtZW4tcGVyaW9kZS1kZS1jb25maW5lbWVudCNmYXFhY3R1YWxpdGVzIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBGQVEKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3VsPgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgIDwvZGl2PgoKICAgIDxkaXYgY2xhc3M9IkZvb3Rlci1yb3cgRm9vdGVyLXJvdy0taWRlbnRpdHkgRm9vdGVyLXJvdy0taWRlbnRpdHktcmVmIj4KICAgICAgICA8ZGl2IGNsYXNzPSJGb290ZXItMnBhcnQiPgogICAgICAgICAgICA8cCBjbGFzcz0iRm9vdGVyLXBhcnQxIEZvb3Rlci1wYXJ0MS0tbG9nbyI+CiAgICAgICAgICAgICAgICA8aW1nIHdpZHRoPSIxNTQiIGhlaWdodD0iNDMiIHNyYz0iaHR0cHM6Ly9waG90b3MuZm9uY2lhLm5ldC9pbWFnZXMvRm9uY2lhX2xvZ292XzMwOF84Ni5wbmciIGFsdD0iRm9uY2lhIj4KICAgICAgICAgICAgPC9wPgogICAgICAgICAgICA8dWwgY2xhc3M9IkZvb3Rlci1wYXJ0MiBGb290ZXItcGFydDItLWxpbmtzIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgPGEgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhyZWY9Ii9tZW50aW9ucy1sZWdhbGVzIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1iZWhhdD0ibGluay1NZW50aW9uc19sw6lnYWxlcyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBNZW50aW9ucyBsw6lnYWxlcwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgIDxhICAgICAgICAgICAgICAgICAgICAgICAgICAgICBocmVmPSJodHRwczovL2ZyLmZvbmNpYS5jb20vcGxhbi1kdS1zaXRlIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1iZWhhdD0ibGluay1QbGFuX2R1X3NpdGUiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgUGxhbiBkdSBzaXRlCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgPGEgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhyZWY9Ii8jZm9uY2lhX2NvbnNlbnRlbWVudHMiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkYXRhLWJlaGF0PSJsaW5rLUdlc3Rpb25fZGVzX2Nvb2tpZXMiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgR2VzdGlvbiBkZXMgY29va2llcwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgIDxhICAgICAgICAgICAgICAgICAgICAgICAgICAgICBocmVmPSIvY2hhcnRlLWRlLXByb3RlY3Rpb24tZGVzLWRvbm5lZXMiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkYXRhLWJlaGF0PSJsaW5rLUNoYXJ0ZV9kZV9wcm90ZWN0aW9uX2Rlc19kb25uw6llc18iPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgQ2hhcnRlIGRlIHByb3RlY3Rpb24gZGVzIGRvbm7DqWVzIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgIDxhICAgICAgICAgICAgICAgICAgICAgICAgICAgICBocmVmPSIvbm90cmUtcHJlb2NjdXBhdGlvbi1sYS1zZWN1cml0ZS1kZS12b3MtZG9ubmVlcyIKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtYmVoYXQ9ImxpbmstU8OpY3VyaXTDqV9JbmZvcm1hdGlxdWUiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgU8OpY3VyaXTDqSBJbmZvcm1hdGlxdWUKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICA8YSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaHJlZj0iL3NlcnZpY2VzIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1iZWhhdD0ibGluay1TZXJ2aWNlcyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBTZXJ2aWNlcwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgIDxhICB0YXJnZXQ9Il9ibGFuayIgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhyZWY9Imh0dHA6Ly9wcmVzc3Jvb20uZm9uY2lhLmNvbS8iCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkYXRhLWJlaGF0PSJsaW5rLUVzcGFjZV9QcmVzc2UiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgRXNwYWNlIFByZXNzZQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgIDxhICB0YXJnZXQ9Il9ibGFuayIgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhyZWY9Imh0dHA6Ly9mb25jaWEtcmVjcnV0ZS50YWxlbnQtc29mdC5jb20vYWNjdWVpbC5hc3B4IgogICAgICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1iZWhhdD0ibGluay1Ob3Nfb2ZmcmVzX2TigJllbXBsb2kiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgTm9zIG9mZnJlcyBk4oCZZW1wbG9pCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgPGEgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhyZWY9Ii9hY2hhdC9hdmlzLWNsaWVudHMiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkYXRhLWJlaGF0PSJsaW5rLUF2aXNfY2xpZW50cyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBBdmlzIGNsaWVudHMKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC91bD4KICAgICAgICA8L2Rpdj4KICAgIDwvZGl2PgoKICAgIDxkaXYgY2xhc3M9IkZvb3Rlci1yb3cgRm9vdGVyLXJvdy0tZW5kIj4KICAgICAgICA8ZGl2IGNsYXNzPSJGb290ZXItMnBhcnQiPgogICAgICAgICAgICA8cCBjbGFzcz0iRm9vdGVyLXBhcnQyIEZvb3Rlci1wYXJ0Mi0tY29weSI+CiAgICAgICAgICAgICAgICAmY29weTsyMDIwIEZvbmNpYSBHcm91cGUKICAgICAgICAgICAgPC9wPgogICAgICAgIDwvZGl2PgogICAgPC9kaXY+Cgo8L2Zvb3Rlcj4KPC9kaXY+PCEtLUJvZHlXcmFwcGVyLS0+CgogICAgICAgIDxzY3JpcHQgc3JjPSIvY29tcGlsZWQvY29tbW9uLmpzP3ZlcnNpb249MTU4ODA5NzU1OSI+PC9zY3JpcHQ+CjxzY3JpcHQ+CiAgICBmb25jaWEuc2Vzc2lvbnMuaW5pdCg5MDAwMDAsIDE4MDAwMCk7Cjwvc2NyaXB0PgoKPCEtLVtpZiBsdGUgSUUgOV0+PHNjcmlwdCBzcmM9Ii9jb21waWxlZC9zY3JpcHRzLWllOS5qcz92ZXJzaW9uPTE1ODgwOTc1NTkiPjwvc2NyaXB0PjwhW2VuZGlmXS0tPgoKCiAgICAgICAgICAgICAgICAgICAgPHNjcmlwdD4KCiAgICAgICAgICAgIFN0cmluZy5wcm90b3R5cGUuY2FwaXRhbGl6ZUZpcnN0TGV0dGVyID0gZnVuY3Rpb24oKSB7CiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5jaGFyQXQoMCkudG9VcHBlckNhc2UoKSArIHRoaXMuc2xpY2UoMSk7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgICQoZG9jdW1lbnQpLnJlYWR5KGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgICAgIC8vIEZvciBzZWFyY2ggQ3JpdGVyaWFzCiAgICAgICAgICAgICAgICB2YXIgdmFsZXVyUmVjaGVyY2hlID0gZm9uY2lhX2ludGVybmV0LnVwdGlsYWJDcml0ZXJpYVBhcnNlcihqUXVlcnksICQoJy5TZWFyY2hDcml0ZXJpYTpub3QoLnJ3ZC0tbW9iaWxlKScpKTsKICAgICAgICAgICAgICAgIGlmICh2YWxldXJSZWNoZXJjaGUgIT09ICcnKSB7CiAgICAgICAgICAgICAgICAgICAgZGF0YUxheWVyLnB1c2goeyJjdXN0b21DYXRlZ29yaWUiOiAibmF2aWdhdGlvbiIsICJjdXN0b21BY3Rpb24iOiAicmVjaGVyY2hlQXZlY0NyaXRlcmUiLCAiY3VzdG9tTGFiZWwiOiB2YWxldXJSZWNoZXJjaGUsICJldmVudCI6ICJjdXN0b21FdmVudCJ9KTsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICAvLyBDaXR5IHNlYXJjaCB0eXBlCiAgICAgICAgICAgICAgICB2YXIgY2l0eVNlYXJjaFN0cmluZyA9IGZvbmNpYV9pbnRlcm5ldC51cHRpbGFiU2VhcmNoVHlwZVBhcnNlcihqUXVlcnksICQoJy5TZWFyY2hDcml0ZXJpYS5yd2QtLW5vTW9iaWxlIFtkYXRhLWFuYWx5dGljcy1sb2NhdGlvbi10eXBlPSJ2aWxsZSJdJykpOwogICAgICAgICAgICAgICAgaWYgKGNpdHlTZWFyY2hTdHJpbmcgIT09ICcnKSB7CgogICAgICAgICAgICAgICAgICAgIC8vIEFwcGx5IGNoYW5nZXMgdG8gbm9ybWFsaXplCiAgICAgICAgICAgICAgICAgICAgdmFyIGNpdHlTZWFyY2hBcnJheSA9IGNpdHlTZWFyY2hTdHJpbmcuc3BsaXQoJywnKTsKICAgICAgICAgICAgICAgICAgICAvLyBObyBsb25nZXIgdXNlZAovLyAgICAgICAgICAgICAgICAgICAgY2l0eVNlYXJjaEFycmF5LmZvckVhY2goZnVuY3Rpb24odmFsLCBpbmRleCwgdGhlQXJyYXkpewovLyAgICAgICAgICAgICAgICAgICAgICAgIHRoZUFycmF5W2luZGV4XSA9IHZhbC5yZXBsYWNlKC9cKD8oXGR7NX18XGR7Mn0pXCk/L2csICcnKS5yZXBsYWNlKC8tJC9nLCAnJykuY2FwaXRhbGl6ZUZpcnN0TGV0dGVyKCk7Ci8vICAgICAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgICAgICBjaXR5U2VhcmNoU3RyaW5nID0gY2l0eVNlYXJjaEFycmF5LmpvaW4oJywnKTsKICAgICAgICAgICAgICAgICAgICBkYXRhTGF5ZXIucHVzaCh7ImN1c3RvbUNhdGVnb3JpZSI6ICJuYXZpZ2F0aW9uIiwgImN1c3RvbUFjdGlvbiI6ICJ2aWxsZSIsICJjdXN0b21MYWJlbCI6IGNpdHlTZWFyY2hTdHJpbmcsICJldmVudCI6ICJjdXN0b21FdmVudCJ9KTsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICAvLyBEZXBhcnRtZW50IHNlYXJjaCB0eXBlCiAgICAgICAgICAgICAgICB2YXIgZGVwYXJ0bWVudFNlYXJjaFN0cmluZyA9IGZvbmNpYV9pbnRlcm5ldC51cHRpbGFiU2VhcmNoVHlwZVBhcnNlcihqUXVlcnksICQoJy5TZWFyY2hDcml0ZXJpYS5yd2QtLW5vTW9iaWxlIFtkYXRhLWFuYWx5dGljcy1sb2NhdGlvbi10eXBlPSJkZXBhcnRlbWVudCJdJykpOwogICAgICAgICAgICAgICAgaWYgKGRlcGFydG1lbnRTZWFyY2hTdHJpbmcgIT09ICcnKSB7CiAgICAgICAgICAgICAgICAgICAgdmFyIGRlcGFydG1lbnRTZWFyY2hBcnJheSA9IGRlcGFydG1lbnRTZWFyY2hTdHJpbmcuc3BsaXQoJywnKTsKICAgICAgICAgICAgICAgICAgICBkZXBhcnRtZW50U2VhcmNoQXJyYXkuZm9yRWFjaChmdW5jdGlvbih2YWwsIGluZGV4LCB0aGVBcnJheSl7CiAgICAgICAgICAgICAgICAgICAgICAgIHRoZUFycmF5W2luZGV4XSA9IHZhbC5yZXBsYWNlKC9bXlwvXGRdL2csJycpOwogICAgICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgICAgIGRlcGFydG1lbnRTZWFyY2hTdHJpbmcgPSBkZXBhcnRtZW50U2VhcmNoQXJyYXkuam9pbignLCcpOwogICAgICAgICAgICAgICAgICAgIGRhdGFMYXllci5wdXNoKHsiY3VzdG9tQ2F0ZWdvcmllIjogIm5hdmlnYXRpb24iLCAiY3VzdG9tQWN0aW9uIjogImRlcGFydGVtZW50IiwgImN1c3RvbUxhYmVsIjogZGVwYXJ0bWVudFNlYXJjaFN0cmluZywgImV2ZW50IjogImN1c3RvbUV2ZW50In0pOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9KTsKICAgICAgICA8L3NjcmlwdD4KICAgIAogICAgCjwvYm9keT4KPC9odG1sPgo=
    http_version: null
  recorded_at: Fri, 29 May 2020 14:31:57 GMT
- request:
    method: get
    uri: https://fr.foncia.com/achat/sartrouville-78500/appartement/1290179.htm
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 28 May 2020 11:40:47 GMT
      Cache-Control:
      - public, s-maxage=31536000
      Content-Type:
      - text/html; charset=UTF-8
      Vary:
      - Accept-Encoding,Origin
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: null
  recorded_at: Fri, 29 May 2020 14:31:58 GMT
- request:
    method: get
    uri: https://fr.foncia.com/achat/sartrouville-78500/appartement/1335085.htm
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 28 May 2020 18:48:49 GMT
      Cache-Control:
      - public, s-maxage=31536000
      Content-Type:
      - text/html; charset=UTF-8
      Vary:
      - Accept-Encoding,Origin
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: null
  recorded_at: Fri, 29 May 2020 14:31:58 GMT
- request:
    method: get
    uri: https://fr.foncia.com/achat/houilles-78800/maison/1337944.htm
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Fri, 29 May 2020 11:58:34 GMT
      Cache-Control:
      - public, s-maxage=31536000
      Content-Type:
      - text/html; charset=UTF-8
      Vary:
      - Accept-Encoding,Origin
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: null
  recorded_at: Fri, 29 May 2020 14:31:58 GMT
- request:
    method: get
    uri: https://fr.foncia.com/achat/sartrouville-78500/appartement/1375155.htm
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Wed, 27 May 2020 19:08:51 GMT
      Cache-Control:
      - public, s-maxage=31536000
      Content-Type:
      - text/html; charset=UTF-8
      Vary:
      - Accept-Encoding,Origin
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: null
  recorded_at: Fri, 29 May 2020 14:31:58 GMT
- request:
    method: get
    uri: https://fr.foncia.com/achat/houilles-78800/maison/1382184.htm
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 28 May 2020 08:39:46 GMT
      Cache-Control:
      - public, s-maxage=31536000
      Content-Type:
      - text/html; charset=UTF-8
      Vary:
      - Accept-Encoding,Origin
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: null
  recorded_at: Fri, 29 May 2020 14:31:58 GMT
- request:
    method: get
    uri: https://fr.foncia.com/achat/sartrouville-78500/appartement/1386023.htm
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 28 May 2020 11:48:12 GMT
      Cache-Control:
      - public, s-maxage=31536000
      Content-Type:
      - text/html; charset=UTF-8
      Vary:
      - Accept-Encoding,Origin
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: null
  recorded_at: Fri, 29 May 2020 14:31:59 GMT
- request:
    method: get
    uri: https://fr.foncia.com/achat/houilles-78800/maison/1389793.htm
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Fri, 29 May 2020 11:43:31 GMT
      Cache-Control:
      - public, s-maxage=31536000
      Content-Type:
      - text/html; charset=UTF-8
      Vary:
      - Accept-Encoding,Origin
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: null
  recorded_at: Fri, 29 May 2020 14:31:59 GMT
recorded_with: VCR 5.1.0
