---
http_interactions:
- request:
    method: post
    uri: https://www.cabinet-kmi.com/recherche-avancee/page/1?_wp_http_referer=/acheter/&advanced_city=paris-2&budget-max&chambres-min&submit=RECHERCHER&surface-min&wpestate_regular_search_nonce=0cc36da597
    body:
      encoding: UTF-8
      string: action=wpestate_advanced_search_filters&args=%7B%20%22cache_results%22%3A%20false%2C%20%22update_post_meta_cache%22%3A%20false%2C%20%22update_post_term_cache%22%3A%20false%2C%20%22post_type%22%3A%20%22estate_property%22%2C%20%22post_status%22%3A%20%22publish%22%2C%20%22paged%22%3A%201%2C%20%22posts_per_page%22%3A%2070%2C%20%22meta_key%22%3A%20%22prop_featured%22%2C%20%22orderby%22%3A%20%22meta_value%22%2C%20%22order%22%3A%20%22DESC%22%2C%20%22meta_query%22%3A%20%22%22%2C%20%22tax_query%22%3A%20%7B%20%22relation%22%3A%20%22AND%22%2C%20%220%22%3A%20%22%22%2C%20%221%22%3A%20%22%22%2C%20%222%22%3A%20%22%22%2C%20%223%22%3A%20%22%22%2C%20%224%22%3A%20%22%22%20%7D%2C%20%22post__inpage_id=5&value=3
    headers:
      User-Agent:
      - Typhoeus - https://github.com/typhoeus/typhoeus
      Expect:
      - ''
  response:
    status:
      code: 200
      message: ''
    headers:
      Date:
      - Wed, 01 Apr 2020 14:35:13 GMT
      Content-Type:
      - text/html; charset=UTF-8
      Server:
      - Apache
      X-Powered-By:
      - PHP/7.2
      Link:
      - "<https://www.cabinet-kmi.com/?p=5>; rel=shortlink"
      - <https://www.cabinet-kmi.com/wp-json/>; rel="https://api.w.org/"
      Vary:
      - Accept-Encoding
      X-Iplb-Instance:
      - '32871'
      Set-Cookie:
      - SERVERID87219=2720129|XoSmp|XoSmp; path=/
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        PCFET0NUWVBFIGh0bWw+CjxodG1sIGxhbmc9ImZyLUZSIj4KPGhlYWQ+CjxtZXRhIGNoYXJzZXQ9IlVURi04IiAvPgo8bWV0YSBuYW1lPSJ2aWV3cG9ydCIgY29udGVudD0id2lkdGg9ZGV2aWNlLXdpZHRoLCBpbml0aWFsLXNjYWxlPTEsdXNlci1zY2FsYWJsZT1ubyI+CjxsaW5rIHJlbD0icGluZ2JhY2siIGhyZWY9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS94bWxycGMucGhwIiAvPgogCjx0aXRsZT5SZWNoZXJjaGUgYXZhbmPDqWUgLSBDYWJpbmV0IEtNSTwvdGl0bGU+Cgo8IS0tIFRoaXMgc2l0ZSBpcyBvcHRpbWl6ZWQgd2l0aCB0aGUgWW9hc3QgU0VPIHBsdWdpbiB2MTEuNyAtIGh0dHBzOi8veW9hc3QuY29tL3dvcmRwcmVzcy9wbHVnaW5zL3Nlby8gLS0+CjxsaW5rIHJlbD0iY2Fub25pY2FsIiBocmVmPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vcmVjaGVyY2hlLWF2YW5jZWUvIiAvPgo8bWV0YSBwcm9wZXJ0eT0ib2c6bG9jYWxlIiBjb250ZW50PSJmcl9GUiIgLz4KPG1ldGEgcHJvcGVydHk9Im9nOnR5cGUiIGNvbnRlbnQ9ImFydGljbGUiIC8+CjxtZXRhIHByb3BlcnR5PSJvZzp0aXRsZSIgY29udGVudD0iUmVjaGVyY2hlIGF2YW5jw6llIC0gQ2FiaW5ldCBLTUkiIC8+CjxtZXRhIHByb3BlcnR5PSJvZzp1cmwiIGNvbnRlbnQ9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS9yZWNoZXJjaGUtYXZhbmNlZS8iIC8+CjxtZXRhIHByb3BlcnR5PSJvZzpzaXRlX25hbWUiIGNvbnRlbnQ9IkNhYmluZXQgS01JIiAvPgo8bWV0YSBuYW1lPSJ0d2l0dGVyOmNhcmQiIGNvbnRlbnQ9InN1bW1hcnlfbGFyZ2VfaW1hZ2UiIC8+CjxtZXRhIG5hbWU9InR3aXR0ZXI6dGl0bGUiIGNvbnRlbnQ9IlJlY2hlcmNoZSBhdmFuY8OpZSAtIENhYmluZXQgS01JIiAvPgo8c2NyaXB0IHR5cGU9J2FwcGxpY2F0aW9uL2xkK2pzb24nIGNsYXNzPSd5b2FzdC1zY2hlbWEtZ3JhcGggeW9hc3Qtc2NoZW1hLWdyYXBoLS1tYWluJz57IkBjb250ZXh0IjoiaHR0cHM6Ly9zY2hlbWEub3JnIiwiQGdyYXBoIjpbeyJAdHlwZSI6IldlYlNpdGUiLCJAaWQiOiJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vI3dlYnNpdGUiLCJ1cmwiOiJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vIiwibmFtZSI6IkNhYmluZXQgS01JIiwicG90ZW50aWFsQWN0aW9uIjp7IkB0eXBlIjoiU2VhcmNoQWN0aW9uIiwidGFyZ2V0IjoiaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tLz9zPXtzZWFyY2hfdGVybV9zdHJpbmd9IiwicXVlcnktaW5wdXQiOiJyZXF1aXJlZCBuYW1lPXNlYXJjaF90ZXJtX3N0cmluZyJ9fSx7IkB0eXBlIjoiV2ViUGFnZSIsIkBpZCI6Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS9yZWNoZXJjaGUtYXZhbmNlZS8jd2VicGFnZSIsInVybCI6Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS9yZWNoZXJjaGUtYXZhbmNlZS8iLCJpbkxhbmd1YWdlIjoiZnItRlIiLCJuYW1lIjoiUmVjaGVyY2hlIGF2YW5jXHUwMGU5ZSAtIENhYmluZXQgS01JIiwiaXNQYXJ0T2YiOnsiQGlkIjoiaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tLyN3ZWJzaXRlIn0sImRhdGVQdWJsaXNoZWQiOiIyMDE5LTA2LTA1VDEzOjMwOjA4KzAwOjAwIiwiZGF0ZU1vZGlmaWVkIjoiMjAxOS0wNi0yMlQyMDo1MToxOCswMDowMCJ9XX08L3NjcmlwdD4KPCEtLSAvIFlvYXN0IFNFTyBwbHVnaW4uIC0tPgoKPGxpbmsgcmVsPSdkbnMtcHJlZmV0Y2gnIGhyZWY9Jy8vZm9udHMuZ29vZ2xlYXBpcy5jb20nIC8+CjxsaW5rIHJlbD0nZG5zLXByZWZldGNoJyBocmVmPScvL3Mudy5vcmcnIC8+CjxsaW5rIHJlbD0iYWx0ZXJuYXRlIiB0eXBlPSJhcHBsaWNhdGlvbi9yc3MreG1sIiB0aXRsZT0iQ2FiaW5ldCBLTUkgJnJhcXVvOyBGbHV4IiBocmVmPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vZmVlZC8iIC8+CjxsaW5rIHJlbD0iYWx0ZXJuYXRlIiB0eXBlPSJhcHBsaWNhdGlvbi9yc3MreG1sIiB0aXRsZT0iQ2FiaW5ldCBLTUkgJnJhcXVvOyBGbHV4IGRlcyBjb21tZW50YWlyZXMiIGhyZWY9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS9jb21tZW50cy9mZWVkLyIgLz4KCQk8c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCI+CgkJCXdpbmRvdy5fd3BlbW9qaVNldHRpbmdzID0geyJiYXNlVXJsIjoiaHR0cHM6XC9cL3Mudy5vcmdcL2ltYWdlc1wvY29yZVwvZW1vamlcLzEyLjAuMC0xXC83Mng3MlwvIiwiZXh0IjoiLnBuZyIsInN2Z1VybCI6Imh0dHBzOlwvXC9zLncub3JnXC9pbWFnZXNcL2NvcmVcL2Vtb2ppXC8xMi4wLjAtMVwvc3ZnXC8iLCJzdmdFeHQiOiIuc3ZnIiwic291cmNlIjp7ImNvbmNhdGVtb2ppIjoiaHR0cHM6XC9cL3d3dy5jYWJpbmV0LWttaS5jb21cL3dwLWluY2x1ZGVzXC9qc1wvd3AtZW1vamktcmVsZWFzZS5taW4uanM/dmVyPTUuMi41In19OwoJCQkhZnVuY3Rpb24oYSxiLGMpe2Z1bmN0aW9uIGQoYSxiKXt2YXIgYz1TdHJpbmcuZnJvbUNoYXJDb2RlO2wuY2xlYXJSZWN0KDAsMCxrLndpZHRoLGsuaGVpZ2h0KSxsLmZpbGxUZXh0KGMuYXBwbHkodGhpcyxhKSwwLDApO3ZhciBkPWsudG9EYXRhVVJMKCk7bC5jbGVhclJlY3QoMCwwLGsud2lkdGgsay5oZWlnaHQpLGwuZmlsbFRleHQoYy5hcHBseSh0aGlzLGIpLDAsMCk7dmFyIGU9ay50b0RhdGFVUkwoKTtyZXR1cm4gZD09PWV9ZnVuY3Rpb24gZShhKXt2YXIgYjtpZighbHx8IWwuZmlsbFRleHQpcmV0dXJuITE7c3dpdGNoKGwudGV4dEJhc2VsaW5lPSJ0b3AiLGwuZm9udD0iNjAwIDMycHggQXJpYWwiLGEpe2Nhc2UiZmxhZyI6cmV0dXJuIShiPWQoWzU1MzU2LDU2ODI2LDU1MzU2LDU2ODE5XSxbNTUzNTYsNTY4MjYsODIwMyw1NTM1Niw1NjgxOV0pKSYmKGI9ZChbNTUzNTYsNTczMzIsNTYxMjgsNTY0MjMsNTYxMjgsNTY0MTgsNTYxMjgsNTY0MjEsNTYxMjgsNTY0MzAsNTYxMjgsNTY0MjMsNTYxMjgsNTY0NDddLFs1NTM1Niw1NzMzMiw4MjAzLDU2MTI4LDU2NDIzLDgyMDMsNTYxMjgsNTY0MTgsODIwMyw1NjEyOCw1NjQyMSw4MjAzLDU2MTI4LDU2NDMwLDgyMDMsNTYxMjgsNTY0MjMsODIwMyw1NjEyOCw1NjQ0N10pLCFiKTtjYXNlImVtb2ppIjpyZXR1cm4gYj1kKFs1NTM1Nyw1NjQyNCw1NTM1Niw1NzM0Miw4MjA1LDU1MzU4LDU2NjA1LDgyMDUsNTUzNTcsNTY0MjQsNTUzNTYsNTczNDBdLFs1NTM1Nyw1NjQyNCw1NTM1Niw1NzM0Miw4MjAzLDU1MzU4LDU2NjA1LDgyMDMsNTUzNTcsNTY0MjQsNTUzNTYsNTczNDBdKSwhYn1yZXR1cm4hMX1mdW5jdGlvbiBmKGEpe3ZhciBjPWIuY3JlYXRlRWxlbWVudCgic2NyaXB0Iik7Yy5zcmM9YSxjLmRlZmVyPWMudHlwZT0idGV4dC9qYXZhc2NyaXB0IixiLmdldEVsZW1lbnRzQnlUYWdOYW1lKCJoZWFkIilbMF0uYXBwZW5kQ2hpbGQoYyl9dmFyIGcsaCxpLGosaz1iLmNyZWF0ZUVsZW1lbnQoImNhbnZhcyIpLGw9ay5nZXRDb250ZXh0JiZrLmdldENvbnRleHQoIjJkIik7Zm9yKGo9QXJyYXkoImZsYWciLCJlbW9qaSIpLGMuc3VwcG9ydHM9e2V2ZXJ5dGhpbmc6ITAsZXZlcnl0aGluZ0V4Y2VwdEZsYWc6ITB9LGk9MDtpPGoubGVuZ3RoO2krKyljLnN1cHBvcnRzW2pbaV1dPWUoaltpXSksYy5zdXBwb3J0cy5ldmVyeXRoaW5nPWMuc3VwcG9ydHMuZXZlcnl0aGluZyYmYy5zdXBwb3J0c1tqW2ldXSwiZmxhZyIhPT1qW2ldJiYoYy5zdXBwb3J0cy5ldmVyeXRoaW5nRXhjZXB0RmxhZz1jLnN1cHBvcnRzLmV2ZXJ5dGhpbmdFeGNlcHRGbGFnJiZjLnN1cHBvcnRzW2pbaV1dKTtjLnN1cHBvcnRzLmV2ZXJ5dGhpbmdFeGNlcHRGbGFnPWMuc3VwcG9ydHMuZXZlcnl0aGluZ0V4Y2VwdEZsYWcmJiFjLnN1cHBvcnRzLmZsYWcsYy5ET01SZWFkeT0hMSxjLnJlYWR5Q2FsbGJhY2s9ZnVuY3Rpb24oKXtjLkRPTVJlYWR5PSEwfSxjLnN1cHBvcnRzLmV2ZXJ5dGhpbmd8fChoPWZ1bmN0aW9uKCl7Yy5yZWFkeUNhbGxiYWNrKCl9LGIuYWRkRXZlbnRMaXN0ZW5lcj8oYi5hZGRFdmVudExpc3RlbmVyKCJET01Db250ZW50TG9hZGVkIixoLCExKSxhLmFkZEV2ZW50TGlzdGVuZXIoImxvYWQiLGgsITEpKTooYS5hdHRhY2hFdmVudCgib25sb2FkIixoKSxiLmF0dGFjaEV2ZW50KCJvbnJlYWR5c3RhdGVjaGFuZ2UiLGZ1bmN0aW9uKCl7ImNvbXBsZXRlIj09PWIucmVhZHlTdGF0ZSYmYy5yZWFkeUNhbGxiYWNrKCl9KSksZz1jLnNvdXJjZXx8e30sZy5jb25jYXRlbW9qaT9mKGcuY29uY2F0ZW1vamkpOmcud3BlbW9qaSYmZy50d2Vtb2ppJiYoZihnLnR3ZW1vamkpLGYoZy53cGVtb2ppKSkpfSh3aW5kb3csZG9jdW1lbnQsd2luZG93Ll93cGVtb2ppU2V0dGluZ3MpOwoJCTwvc2NyaXB0PgoJCTxzdHlsZSB0eXBlPSJ0ZXh0L2NzcyI+CmltZy53cC1zbWlsZXksCmltZy5lbW9qaSB7CglkaXNwbGF5OiBpbmxpbmUgIWltcG9ydGFudDsKCWJvcmRlcjogbm9uZSAhaW1wb3J0YW50OwoJYm94LXNoYWRvdzogbm9uZSAhaW1wb3J0YW50OwoJaGVpZ2h0OiAxZW0gIWltcG9ydGFudDsKCXdpZHRoOiAxZW0gIWltcG9ydGFudDsKCW1hcmdpbjogMCAuMDdlbSAhaW1wb3J0YW50OwoJdmVydGljYWwtYWxpZ246IC0wLjFlbSAhaW1wb3J0YW50OwoJYmFja2dyb3VuZDogbm9uZSAhaW1wb3J0YW50OwoJcGFkZGluZzogMCAhaW1wb3J0YW50Owp9Cjwvc3R5bGU+Cgk8bGluayByZWw9J3N0eWxlc2hlZXQnIGlkPSdmb3JtaWRhYmxlLWNzcycgIGhyZWY9J2h0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS93cC1jb250ZW50L3BsdWdpbnMvZm9ybWlkYWJsZS9jc3MvZm9ybWlkYWJsZWZvcm1zLmNzcz92ZXI9NzMwNzUyJyB0eXBlPSd0ZXh0L2NzcycgbWVkaWE9J2FsbCcgLz4KPGxpbmsgcmVsPSdzdHlsZXNoZWV0JyBpZD0nd3AtYmxvY2stbGlicmFyeS1jc3MnICBocmVmPSdodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vd3AtaW5jbHVkZXMvY3NzL2Rpc3QvYmxvY2stbGlicmFyeS9zdHlsZS5taW4uY3NzP3Zlcj01LjIuNScgdHlwZT0ndGV4dC9jc3MnIG1lZGlhPSdhbGwnIC8+CjxsaW5rIHJlbD0nc3R5bGVzaGVldCcgaWQ9J3Jlc2lkZW5jZV9sYXRlc3RfaXRlbXMtY2diLXN0eWxlLWNzcy1jc3MnICBocmVmPSdodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vd3AtY29udGVudC9wbHVnaW5zL3Jlc2lkZW5jZS1ndXRlbmJlcmcvZGlzdC9ibG9ja3Muc3R5bGUuYnVpbGQuY3NzP3Zlcj01LjIuNScgdHlwZT0ndGV4dC9jc3MnIG1lZGlhPSdhbGwnIC8+CjxsaW5rIHJlbD0nc3R5bGVzaGVldCcgaWQ9J3JzLXBsdWdpbi1zZXR0aW5ncy1jc3MnICBocmVmPSdodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vd3AtY29udGVudC9wbHVnaW5zL3JldnNsaWRlci9wdWJsaWMvYXNzZXRzL2Nzcy9zZXR0aW5ncy5jc3M/dmVyPTUuNC44LjMnIHR5cGU9J3RleHQvY3NzJyBtZWRpYT0nYWxsJyAvPgo8c3R5bGUgaWQ9J3JzLXBsdWdpbi1zZXR0aW5ncy1pbmxpbmUtY3NzJyB0eXBlPSd0ZXh0L2Nzcyc+CiNycy1kZW1vLWlkIHt9Cjwvc3R5bGU+CjxsaW5rIHJlbD0nc3R5bGVzaGVldCcgaWQ9J2Jvb3RzdHJhcC5taW4tY3NzJyAgaHJlZj0naHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL3dwLWNvbnRlbnQvdGhlbWVzL3dwcmVzaWRlbmNlL2Nzcy9ib290c3RyYXAubWluLmNzcz92ZXI9MS4wJyB0eXBlPSd0ZXh0L2NzcycgbWVkaWE9J2FsbCcgLz4KPGxpbmsgcmVsPSdzdHlsZXNoZWV0JyBpZD0nYm9vdHN0cmFwLXRoZW1lLm1pbi1jc3MnICBocmVmPSdodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vd3AtY29udGVudC90aGVtZXMvd3ByZXNpZGVuY2UvY3NzL2Jvb3RzdHJhcC10aGVtZS5taW4uY3NzP3Zlcj0xLjAnIHR5cGU9J3RleHQvY3NzJyBtZWRpYT0nYWxsJyAvPgo8bGluayByZWw9J3N0eWxlc2hlZXQnIGlkPSd3cGVzdGF0ZV9zdHlsZS1jc3MnICBocmVmPSdodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vd3AtY29udGVudC90aGVtZXMvd3ByZXNpZGVuY2Uvc3R5bGUuY3NzP3Zlcj0xLjAnIHR5cGU9J3RleHQvY3NzJyBtZWRpYT0nYWxsJyAvPgo8bGluayByZWw9J3N0eWxlc2hlZXQnIGlkPSd3cGVzdGF0ZV9tZWRpYS1jc3MnICBocmVmPSdodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vd3AtY29udGVudC90aGVtZXMvd3ByZXNpZGVuY2UvY3NzL215X21lZGlhLmNzcz92ZXI9MS4wJyB0eXBlPSd0ZXh0L2NzcycgbWVkaWE9J2FsbCcgLz4KPGxpbmsgcmVsPSdzdHlsZXNoZWV0JyBpZD0nd3Blc3RhdGUtbnVuaXRvLWNzcycgIGhyZWY9J2h0dHBzOi8vZm9udHMuZ29vZ2xlYXBpcy5jb20vY3NzP2ZhbWlseT1OdW5pdG8rU2FucyUzQTMwMCUyQzQwMCUyQzYwMCUyQzcwMCUyQzgwMCUyQzkwMCYjMDM4O3N1YnNldD1sYXRpbiUyQ2xhdGluLWV4dCYjMDM4O3Zlcj01LjIuNScgdHlwZT0ndGV4dC9jc3MnIG1lZGlhPSdhbGwnIC8+CjxsaW5rIHJlbD0nc3R5bGVzaGVldCcgaWQ9J2ZvbnQtYXdlc29tZS5taW4tY3NzJyAgaHJlZj0naHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL3dwLWNvbnRlbnQvdGhlbWVzL3dwcmVzaWRlbmNlL2Nzcy9mb250YXdlc29tZS9jc3MvZm9udC1hd2Vzb21lLm1pbi5jc3M/dmVyPTUuMi41JyB0eXBlPSd0ZXh0L2NzcycgbWVkaWE9J2FsbCcgLz4KPGxpbmsgcmVsPSdzdHlsZXNoZWV0JyBpZD0nZm9udGVsbG8tY3NzJyAgaHJlZj0naHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL3dwLWNvbnRlbnQvdGhlbWVzL3dwcmVzaWRlbmNlL2Nzcy9mb250ZWxsby5taW4uY3NzP3Zlcj01LjIuNScgdHlwZT0ndGV4dC9jc3MnIG1lZGlhPSdhbGwnIC8+CjxsaW5rIHJlbD0nc3R5bGVzaGVldCcgaWQ9J2pxdWVyeS51aS50aGVtZS1jc3MnICBocmVmPSdodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vd3AtY29udGVudC90aGVtZXMvd3ByZXNpZGVuY2UvY3NzL2pxdWVyeS11aS5taW4uY3NzP3Zlcj01LjIuNScgdHlwZT0ndGV4dC9jc3MnIG1lZGlhPSdhbGwnIC8+CjxsaW5rIHJlbD0nc3R5bGVzaGVldCcgaWQ9J3dwZXN0YXRlX2xlYWZsZXRfY3NzLWNzcycgIGhyZWY9J2h0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS93cC1jb250ZW50L3RoZW1lcy93cHJlc2lkZW5jZS9qcy9vcGVuc3RyZWV0L2xlYWZsZXQuY3NzP3Zlcj0xLjAnIHR5cGU9J3RleHQvY3NzJyBtZWRpYT0nYWxsJyAvPgo8bGluayByZWw9J3N0eWxlc2hlZXQnIGlkPSd3cGVzdGF0ZV9sZWFmbGV0X2Nzc19tYXJrZXJDbHVzdGVyLWNzcycgIGhyZWY9J2h0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS93cC1jb250ZW50L3RoZW1lcy93cHJlc2lkZW5jZS9qcy9vcGVuc3RyZWV0L01hcmtlckNsdXN0ZXIuY3NzP3Zlcj0xLjAnIHR5cGU9J3RleHQvY3NzJyBtZWRpYT0nYWxsJyAvPgo8bGluayByZWw9J3N0eWxlc2hlZXQnIGlkPSd3cGVzdGF0ZV9sZWFmbGV0X2Nzc19tYXJrZXJDbHVzdGVyX2RlZmF1bHQtY3NzJyAgaHJlZj0naHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL3dwLWNvbnRlbnQvdGhlbWVzL3dwcmVzaWRlbmNlL2pzL29wZW5zdHJlZXQvTWFya2VyQ2x1c3Rlci5EZWZhdWx0LmNzcz92ZXI9MS4wJyB0eXBlPSd0ZXh0L2NzcycgbWVkaWE9J2FsbCcgLz4KPCEtLVtpZiBsdCBJRSA5XT4KPGxpbmsgcmVsPSdzdHlsZXNoZWV0JyBpZD0ndmNfbHRlX2llOS1jc3MnICBocmVmPSdodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vd3AtY29udGVudC9wbHVnaW5zL2pzX2NvbXBvc2VyL2Fzc2V0cy9jc3MvdmNfbHRlX2llOS5taW4uY3NzP3Zlcj02LjAuMicgdHlwZT0ndGV4dC9jc3MnIG1lZGlhPSdzY3JlZW4nIC8+CjwhW2VuZGlmXS0tPgo8bGluayByZWw9J3N0eWxlc2hlZXQnIGlkPSdic2YtRGVmYXVsdHMtY3NzJyAgaHJlZj0naHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL3dwLWNvbnRlbnQvdXBsb2Fkcy9zbWlsZV9mb250cy9EZWZhdWx0cy9EZWZhdWx0cy5jc3M/dmVyPTUuMi41JyB0eXBlPSd0ZXh0L2NzcycgbWVkaWE9J2FsbCcgLz4KPGxpbmsgcmVsPSdzdHlsZXNoZWV0JyBpZD0ncmVkdXgtZ29vZ2xlLWZvbnRzLXdwcmVzaWRlbmNlX2FkbWluLWNzcycgIGhyZWY9J2h0dHBzOi8vZm9udHMuZ29vZ2xlYXBpcy5jb20vY3NzP2ZhbWlseT1RdWlja3NhbmQlM0EzMDAlMkM0MDAlMkM1MDAlMkM3MDAmIzAzODt2ZXI9MTU3NDc4MTg5NycgdHlwZT0ndGV4dC9jc3MnIG1lZGlhPSdhbGwnIC8+CjxzY3JpcHQ+aWYgKGRvY3VtZW50LmxvY2F0aW9uLnByb3RvY29sICE9ICJodHRwczoiKSB7ZG9jdW1lbnQubG9jYXRpb24gPSBkb2N1bWVudC5VUkwucmVwbGFjZSgvXmh0dHA6L2ksICJodHRwczoiKTt9PC9zY3JpcHQ+PHNjcmlwdCB0eXBlPSd0ZXh0L2phdmFzY3JpcHQnIHNyYz0naHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL3dwLWluY2x1ZGVzL2pzL2pxdWVyeS9qcXVlcnkuanM/dmVyPTEuMTIuNC13cCc+PC9zY3JpcHQ+CjxzY3JpcHQgdHlwZT0ndGV4dC9qYXZhc2NyaXB0JyBzcmM9J2h0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS93cC1pbmNsdWRlcy9qcy9qcXVlcnkvanF1ZXJ5LW1pZ3JhdGUubWluLmpzP3Zlcj0xLjQuMSc+PC9zY3JpcHQ+CjxzY3JpcHQgdHlwZT0ndGV4dC9qYXZhc2NyaXB0JyBzcmM9J2h0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS93cC1jb250ZW50L3BsdWdpbnMvcmV2c2xpZGVyL3B1YmxpYy9hc3NldHMvanMvanF1ZXJ5LnRoZW1lcHVuY2gudG9vbHMubWluLmpzP3Zlcj01LjQuOC4zJz48L3NjcmlwdD4KPHNjcmlwdCB0eXBlPSd0ZXh0L2phdmFzY3JpcHQnIHNyYz0naHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL3dwLWNvbnRlbnQvcGx1Z2lucy9yZXZzbGlkZXIvcHVibGljL2Fzc2V0cy9qcy9qcXVlcnkudGhlbWVwdW5jaC5yZXZvbHV0aW9uLm1pbi5qcz92ZXI9NS40LjguMyc+PC9zY3JpcHQ+CjxzY3JpcHQgdHlwZT0ndGV4dC9qYXZhc2NyaXB0Jz4KLyogPCFbQ0RBVEFbICovCnZhciB3cGdtemFfZ29vZ2xlX2FwaV9zdGF0dXMgPSB7Im1lc3NhZ2UiOiJFbnF1ZXVlZCIsImNvZGUiOiJFTlFVRVVFRCJ9OwovKiBdXT4gKi8KPC9zY3JpcHQ+CjxzY3JpcHQgdHlwZT0ndGV4dC9qYXZhc2NyaXB0JyBzcmM9J2h0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS93cC1jb250ZW50L3BsdWdpbnMvd3AtZ29vZ2xlLW1hcHMvd3BnbXphX2RhdGEuanM/dmVyPTUuMi41Jz48L3NjcmlwdD4KPHNjcmlwdCB0eXBlPSd0ZXh0L2phdmFzY3JpcHQnIHNyYz0naHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL3dwLWNvbnRlbnQvdGhlbWVzL3dwcmVzaWRlbmNlL2pzL21vZGVybml6ci5jdXN0b20uNjI0NTYuanM/dmVyPTEuMCc+PC9zY3JpcHQ+CjxsaW5rIHJlbD0naHR0cHM6Ly9hcGkudy5vcmcvJyBocmVmPSdodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vd3AtanNvbi8nIC8+CjxsaW5rIHJlbD0iRWRpdFVSSSIgdHlwZT0iYXBwbGljYXRpb24vcnNkK3htbCIgdGl0bGU9IlJTRCIgaHJlZj0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL3htbHJwYy5waHA/cnNkIiAvPgo8bGluayByZWw9Indsd21hbmlmZXN0IiB0eXBlPSJhcHBsaWNhdGlvbi93bHdtYW5pZmVzdCt4bWwiIGhyZWY9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS93cC1pbmNsdWRlcy93bHdtYW5pZmVzdC54bWwiIC8+IAo8bWV0YSBuYW1lPSJnZW5lcmF0b3IiIGNvbnRlbnQ9IldvcmRQcmVzcyA1LjIuNSIgLz4KPGxpbmsgcmVsPSdzaG9ydGxpbmsnIGhyZWY9J2h0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS8/cD01JyAvPgo8bGluayByZWw9ImFsdGVybmF0ZSIgdHlwZT0iYXBwbGljYXRpb24vanNvbitvZW1iZWQiIGhyZWY9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS93cC1qc29uL29lbWJlZC8xLjAvZW1iZWQ/dXJsPWh0dHBzJTNBJTJGJTJGd3d3LmNhYmluZXQta21pLmNvbSUyRnJlY2hlcmNoZS1hdmFuY2VlJTJGIiAvPgo8bGluayByZWw9ImFsdGVybmF0ZSIgdHlwZT0idGV4dC94bWwrb2VtYmVkIiBocmVmPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vd3AtanNvbi9vZW1iZWQvMS4wL2VtYmVkP3VybD1odHRwcyUzQSUyRiUyRnd3dy5jYWJpbmV0LWttaS5jb20lMkZyZWNoZXJjaGUtYXZhbmNlZSUyRiYjMDM4O2Zvcm1hdD14bWwiIC8+CjxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij5kb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuY2xhc3NOYW1lICs9ICIganMiOzwvc2NyaXB0Pg0KPHN0eWxlIHR5cGU9J3RleHQvY3NzJz4uZmVhdHVyZWRfcHJvcGVydHlfdHlwZTEgLmZlYXR1cmVkX3Byb3BfcHJpY2UsLnRoZW1lX3NsaWRlcl93cmFwcGVyLnRoZW1lX3NsaWRlcl8yIC50aGVtZS1zbGlkZXItcHJpY2UsLnN1Ym1pdF9saXN0aW5nLC53cHJlc2lkZW5jZV9idXR0b24uYWdlbmN5X2NvbnRhY3RfYnV0LC5kZXZlbG9wZXJfY29udGFjdF9idXR0b24ud3ByZXNpZGVuY2VfYnV0dG9uLC5hZHZhbmNlZF9zZWFyY2hfc2lkZWJhciAuZmlsdGVyX21lbnUgbGk6aG92ZXIsLnRlcm1fYmFyX2l0ZW06aG92ZXI6YWZ0ZXIsLnRlcm1fYmFyX2l0ZW0uYWN0aXZlX3Rlcm06YWZ0ZXIsI3NjaGVkdWxlX21lZXRpbmcsLmFnZW50X3VuaXRfYnV0dG9uOmhvdmVyLC5hY2NfZ29vZ2xlX21hcHMsLmhlYWRlcjVfYm90dG9tX3Jvd193cmFwcGVyLC51bml0X3R5cGUzX2RldGFpbHMsI2NvbXBhcmVfY2xvc2VfbW9kYWwsICNjb21wYXJlX2Nsb3NlLC5hZHZfaGFuZGxlciwuYWdlbmN5X3RheG9ub215IGE6aG92ZXIsLnNoYXJlX3VuaXQsLnByb3BlcnR5X2xpc3RpbmcucHJvcGVydHlfdW5pdF90eXBlMyAubGlzdGluZ191bml0X3ByaWNlX3dyYXBwZXIsLmFjdGlvbl90YWdfd3JhcHBlciwubWVzc2FnZS1hY3Rpb24sLndwcmVzaWRlbmNlX2J1dHRvbi5hZ2VuY3lfY29udGFjdF9idXQsLmRldmVsb3Blcl9jb250YWN0X2J1dHRvbi53cHJlc2lkZW5jZV9idXR0b24sLnByb3BlcnR5X2xpc3RpbmcucHJvcGVydHlfdW5pdF90eXBlMSAuZmVhdHVyZWRfZGl2e2JhY2tncm91bmQtY29sb3I6ICMxMjEyM2I7fSN0YWJfcHJwZyBsaXtib3JkZXItcmlnaHQ6IDFweCBzb2xpZCAjMTIxMjNiOyB9LmNvbW1lbnQtZm9ybSAjc3VibWl0OmhvdmVyLCAuc2hvcnRjb2RlX2NvbnRhY3RfZm9ybS5zaF9mb3JtX2FsaWduX2NlbnRlciAjYnRuLWNvbnQtc3VibWl0X3NoOmhvdmVyLC5zaW5nbGUtY29udGVudCBpbnB1dFt0eXBlPSJzdWJtaXQiXTpob3ZlciwuYWdlbnRfY29udGFuY3RfZm9ybSBpbnB1dFt0eXBlPSJzdWJtaXQiXTpob3ZlciwjYWdlbnRfc3VibWl0OmhvdmVyLC53cHJlc2lkZW5jZV9idXR0b246aG92ZXJ7Ym9yZGVyLWNvbG9yOiAjMTIxMjNiIWltcG9ydGFudDtiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudCFpbXBvcnRhbnQ7fS5kZXZlbG9wZXJfdGF4b25vbXkgYTpob3Zlciwud3ByZXNpZGVuY2VfYnV0dG9uLmFnZW5jeV9jb250YWN0X2J1dCwuZGV2ZWxvcGVyX2NvbnRhY3RfYnV0dG9uLndwcmVzaWRlbmNlX2J1dHRvbiwud3ByZXNpZGVuY2VfYnV0dG9uLC5jb21tZW50LWZvcm0gI3N1Ym1pdCwuc2hvcnRjb2RlX2NvbnRhY3RfZm9ybS5zaF9mb3JtX2FsaWduX2NlbnRlciAjYnRuLWNvbnQtc3VibWl0X3NoOmhvdmVyLC5tZW51X3VzZXJfcGljdHVyZXtib3JkZXItY29sb3I6ICMxMjEyM2I7fS5zaGFyZV91bml0OmFmdGVyIHtjb250ZW50OiAiICI7Ym9yZGVyLXRvcDogOHB4IHNvbGlkICMxMjEyM2I7fWJsb2NrcXVvdGV7IGJvcmRlci1sZWZ0OiAycHggc29saWQgIzEyMTIzYjt9LmZvcm0tY29udHJvbDpmb2N1cywuZm9ybS1jb250cm9sLm9wZW57Ym9yZGVyOm5vbmU7fS5ub19tb3JlX2xpc3R7Y29sb3I6I2ZmZiFpbXBvcnRhbnQ7Ym9yZGVyOiAxcHggc29saWQgIzEyMTIzYjt9Lm1vYmlsZS10cmlnZ2VyLXVzZXIgLm1lbnVfdXNlcl9waWN0dXJle2JvcmRlcjogMnB4IHNvbGlkICMxMjEyM2I7fS5ob3Zlcl96X3BpbjpiZWZvcmV7Ym9yZGVyLXRvcDogNnB4IHNvbGlkICMxMjEyM2IhaW1wb3J0YW50O30uaG92ZXJfel9waW4sLnBhZ2luYXRpb24gPiAuYWN0aXZlID4gYSwgLnBhZ2luYXRpb24gPiAuYWN0aXZlID4gc3BhbiwgLnBhZ2luYXRpb24gPiAuYWN0aXZlID4gYTpob3ZlciwgLnBhZ2luYXRpb24gPiAuYWN0aXZlID4gc3Bhbjpob3ZlciwgLnBhZ2luYXRpb24gPiAuYWN0aXZlID4gYTpmb2N1cywgLnBhZ2luYXRpb24gPiAuYWN0aXZlID4gc3Bhbjpmb2N1cywuZGV2ZWxvcGVyX3RheG9ub215IGE6aG92ZXIsLmxpZ2hib3gtaW1hZ2UtY2xvc2UtZmxvb3IsLmxpZ2hib3gtaW1hZ2UtY2xvc2UsI2FkZF9mYXZvcml0ZXMuaXNmYXZvcml0ZSwudGF4X2FjdGl2ZSwucmVzdWx0c19oZWFkZXIsLmxsLXNraW4tbWVsb24gdGQgLnVpLXN0YXRlLWFjdGl2ZSwubGwtc2tpbi1tZWxvbiB0ZCAudWktc3RhdGUtaG92ZXIsLmFkdl9zZWFyY2hfdGFiX2l0ZW0uYWN0aXZlLGJ1dHRvbi5zbGljay1wcmV2LnNsaWNrLWFycm93LGJ1dHRvbi5zbGljay1uZXh0LnNsaWNrLWFycm93LC53cHJlc2lkZW5jZV9idXR0b24sLmNvbW1lbnQtZm9ybSAjc3VibWl0LCNhZHYtc2VhcmNoLWhlYWRlci0zLCN0YWJfcHJwZz51bCwud3BjZjctZm9ybSBpbnB1dFt0eXBlPSJzdWJtaXQiXSwuYWR2X3Jlc3VsdHNfd3JhcHBlciAjYWR2YW5jZWRfc3VibWl0XzIsLndwYl9idG4taW5mbywjc2xpZGVyX2VuYWJsZV9tYXA6aG92ZXIsI3NsaWRlcl9lbmFibGVfc3RyZWV0OmhvdmVyLCAjc2xpZGVyX2VuYWJsZV9zbGlkZXI6aG92ZXIsI2NvbG9waG9uIC5zb2NpYWxfc2lkZWJhcl9pbnRlcm5hbCBhOmhvdmVyLCNwcmltYXJ5IC5zb2NpYWxfc2lkZWJhcl9pbnRlcm5hbCBhOmhvdmVyLC51aS13aWRnZXQtaGVhZGVyLC5zbGlkZXJfY29udHJvbF9sZWZ0LC5zbGlkZXJfY29udHJvbF9yaWdodCwuc2luZ2xlLWNvbnRlbnQgaW5wdXRbdHlwZT0ic3VibWl0Il0sI3NsaWRlcl9lbmFibGVfc2xpZGVyLnNsaWRlcm9uLCNzbGlkZXJfZW5hYmxlX3N0cmVldC5zbGlkZXJvbiwjc2xpZGVyX2VuYWJsZV9tYXAuc2xpZGVyb24sLmNvbW1lbnQtZm9ybSAjc3VibWl0LCNhZGRfZmF2b3JpdGVzLmlzZmF2b3JpdGU6aG92ZXIsI2FkZF9mYXZvcml0ZXM6aG92ZXIsLmNhcm91c2VsLWNvbnRyb2wtdGhlbWUtcHJldiwuY2Fyb3VzZWwtY29udHJvbC10aGVtZS1uZXh0LCNwcmltYXJ5IC5zb2NpYWxfc2lkZWJhcl9pbnRlcm5hbCBhOmhvdmVyLCAjYWR2LXNlYXJjaC1oZWFkZXItbW9iaWxlLCNhZHYtc2VhcmNoLWhlYWRlci0xLC5mZWF0dXJlZF9zZWNvbmRfbGluZSwgLndwYl9idG4taW5mbywuYWdlbnRfY29udGFuY3RfZm9ybSBpbnB1dFt0eXBlPSJzdWJtaXQiXXtiYWNrZ3JvdW5kLWNvbG9yOiAjMTIxMjNiIWltcG9ydGFudDt9LmFnZW50X3VuaXRfYnV0dG9uOmhvdmVye2JhY2tncm91bmQtaW1hZ2U6IGxpbmVhci1ncmFkaWVudCh0byByaWdodCwgIzEyMTIzYiA1MCUsICNmZmYgNTAlKTt9LmFnZW50X3VuaXRfYnV0dG9uOmhvdmVye2JhY2tncm91bmQtaW1hZ2U6IC13ZWJraXQtZ3JhZGllbnQobGluZWFyLCBsZWZ0IHRvcCwgcmlnaHQgdG9wLCBjb2xvci1zdG9wKDUwJSwgIzEyMTIzYiApLCBjb2xvci1zdG9wKDUwJSwgI2ZmZikpO30uYWdlbnRfdW5pdF9idXR0b246aG92ZXJ7Y29sb3I6I2ZmZmZmZiFpbXBvcnRhbnQ7fS53cHJlc2lkZW5jZV9idXR0b24sLmNvbW1lbnQtZm9ybSAjc3VibWl0e2JhY2tncm91bmQtaW1hZ2U6bGluZWFyLWdyYWRpZW50KHRvIHJpZ2h0LCB0cmFuc3BhcmVudCA1MCUsICMxMjEyM2IgNTAlKTt9LndwcmVzaWRlbmNlX2J1dHRvbiwuY29tbWVudC1mb3JtICNzdWJtaXR7YmFja2dyb3VuZC1pbWFnZTogLXdlYmtpdC1ncmFkaWVudChsaW5lYXIsIGxlZnQgdG9wLCByaWdodCB0b3AsIGNvbG9yLXN0b3AoNTAlLCB0cmFuc3BhcmVudCksIGNvbG9yLXN0b3AoNTAlLCMxMjEyM2IgKSk7fS5ibG9nX3VuaXRfaW1hZ2UgaW1nLCAuYmxvZzJ2IGltZywuYWdlbnRwaWN0LC5mZWF0dXJlZF9wcm9wZXJ0eSBpbWcgLCAuYWdlbnRfdW5pdCBpbWcge2JvcmRlci1ib3R0b206IDNweCBzb2xpZCAjMTIxMjNiIWltcG9ydGFudDt9LmZvcm0tY29udHJvbC5vcGVuIC5zaWRlYmFyX2ZpbHRlcl9tZW51LCNhZHZhbmNlZF9zdWJtaXRfc2hvcmNvZGU6aG92ZXIsLmFjY19nb29nbGVfbWFwczpob3ZlciwgLndwcmVzaWRlbmNlX2J1dHRvbjpob3ZlciwudHdpdHRlcl93cmFwcGVyLCAuc2xpZGVyX2NvbnRyb2xfcmlnaHQ6aG92ZXIsIC5zbGlkZXJfY29udHJvbF9sZWZ0OmhvdmVyLCAuY29tbWVudC1mb3JtICNzdWJtaXQ6aG92ZXIsIC5jYXJvdXNlbC1jb250cm9sLXRoZW1lLXByZXY6aG92ZXIsIC5jYXJvdXNlbC1jb250cm9sLXRoZW1lLW5leHQ6aG92ZXIgLCAud3BiX2J0bi1pbmZvOmhvdmVyLCAjYWR2YW5jZWRfc3VibWl0XzI6aG92ZXIsICNhZ2VudF9zdWJtaXQ6aG92ZXIsLnN1Ym1pdF9hY3Rpb246aG92ZXIsLnVuaXRfdHlwZTNfZGV0YWlsczpob3ZlciwuZGlyZWN0b3J5X3NsaWRlciAjcHJvcGVydHlfc2l6ZSwgLmRpcmVjdG9yeV9zbGlkZXIgI3Byb3BlcnR5X2xvdF9zaXplLCAuZGlyZWN0b3J5X3NsaWRlciAjcHJvcGVydHlfcm9vbXMsIC5kaXJlY3Rvcnlfc2xpZGVyICNwcm9wZXJ0eV9iZWRyb29tcywgLmRpcmVjdG9yeV9zbGlkZXIgI3Byb3BlcnR5X2JhdGhyb29tcywuaGVhZGVyXzVfd2lkZ2V0X2ljb24saW5wdXRbdHlwZT0iY2hlY2tib3giXTpjaGVja2VkOmJlZm9yZSwudGVzdGltb25pYWwtc2xpZGVyLWNvbnRhaW5lciAuc2xpY2stcHJldi5zbGljay1hcnJvdzpob3ZlciwgLnRlc3RpbW9uaWFsLXNsaWRlci1jb250YWluZXIgLnNsaWNrLW5leHQuc2xpY2stYXJyb3c6aG92ZXIsLnRlc3RpbW9uaWFsLXNsaWRlci1jb250YWluZXIgLnNsaWNrLWRvdHMgbGkuc2xpY2stYWN0aXZlIGJ1dHRvbjpiZWZvcmUsLnNsaWRlcl9jb250YWluZXIgLnNsaWNrLWRvdHMgbGkgYnV0dG9uOjpiZWZvcmUsLnNsaWRlcl9jb250YWluZXIgLnNsaWNrLWRvdHMgbGkuc2xpY2stYWN0aXZlIGJ1dHRvbjpiZWZvcmUsLnNpbmdsZS1jb250ZW50IHAgYTpob3ZlciwuYWdlbnRfdW5pdF9zb2NpYWwgYTpob3ZlciwuZmVhdHVyZWRfcHJvcF9wcmljZSAucHJpY2VfbGFiZWwsLmZlYXR1cmVkX3Byb3BfcHJpY2UgLnByaWNlX2xhYmVsX2JlZm9yZSwuY29tcGFyZV9pdGVtX2hlYWQgLnByb3BlcnR5X3ByaWNlLCNncmlkX3ZpZXc6aG92ZXIsICNsaXN0X3ZpZXc6aG92ZXIsI3ByaW1hcnkgYTpob3ZlciwuZnJvbnRfcGxhbl9yb3c6aG92ZXIsLmFkdl9leHRlbmRlZF9vcHRpb25zX3RleHQsLnNsaWRlci1jb250ZW50IGgzIGE6aG92ZXIsLmFnZW50X3VuaXRfc29jaWFsX3NpbmdsZSBhOmhvdmVyICwuYWR2X2V4dGVuZGVkX29wdGlvbnNfdGV4dDpob3ZlciAsLmJyZWFkY3J1bWIgYTpob3ZlciAsIC5wcm9wZXJ0eS1wYW5lbCBoNDpob3ZlciwuZmVhdHVyZWRfYXJ0aWNsZTpob3ZlciAuZmVhdHVyZWRfYXJ0aWNsZV9yaWdodCwgLmluZm9fZGV0YWlscyAucHJvcF9wcmljZXgsLmluZm9fZGV0YWlscyAuaW5mb2N1ciwjY29udGFjdGluZm9ib3gsLmZlYXR1cmVkX3Byb3BlcnR5OmhvdmVyIGgyIGEsLmJsb2dfdW5pdDpob3ZlciBoMyBhLC5ibG9nX3VuaXRfbWV0YSAucmVhZF9tb3JlOmhvdmVyLC5ibG9nX3VuaXRfbWV0YSBhOmhvdmVyLC5hZ2VudF91bml0OmhvdmVyIGg0IGEsLmxpc3RpbmdfZmlsdGVyX3NlbGVjdC5vcGVuIC5maWx0ZXJfbWVudV90cmlnZ2VyLC53cGVzdGF0ZV9hY2NvcmRpb25fdGFiIC51aS1zdGF0ZS1hY3RpdmUgYSwud3Blc3RhdGVfYWNjb3JkaW9uX3RhYiAudWktc3RhdGUtYWN0aXZlIGE6bGluaywud3Blc3RhdGVfYWNjb3JkaW9uX3RhYiAudWktc3RhdGUtYWN0aXZlIGE6dmlzaXRlZCwudGhlbWUtc2xpZGVyLXByaWNlLCAuYWdlbnRfdW5pdDpob3ZlciBoNCBhLC5tZXRhLWluZm8gYTpob3Zlciwud2lkZ2V0X2xhdGVzdF9wcmljZSwjY29sb3Bob24gYTpob3ZlciwgI2NvbG9waG9uIGxpIGE6aG92ZXIsLnByaWNlX2FyZWEsIC5wcm9wZXJ0eV9saXN0aW5nOmhvdmVyIGg0IGEsIC5saXN0aW5nX3VuaXRfcHJpY2Vfd3JhcHBlcixhOmhvdmVyLCBhOmZvY3VzLCAudG9wX2JhciAuc29jaWFsX3NpZGViYXJfaW50ZXJuYWwgYTpob3ZlciwuZmVhdHVyZWRfcHJvcF9wcmljZSwudXNlcl9tZW51LC51c2VyX2xvZ2VkIGksICNhY2Nlc3MgLmN1cnJlbnQtbWVudS1pdGVtID5hLCAjYWNjZXNzIC5jdXJyZW50LW1lbnUtcGFyZW50PmEsICNhY2Nlc3MgLmN1cnJlbnQtbWVudS1hbmNlc3Rvcj5hLCNhY2Nlc3MgLm1lbnUgbGk6aG92ZXI+YTphY3RpdmUsICNhY2Nlc3MgLm1lbnUgbGk6aG92ZXI+YTpmb2N1cywuc29jaWFsLXdyYXBwZXIgYTpob3ZlciBpLC5hZ2VuY3lfdW5pdF93cmFwcGVyIC5zb2NpYWwtd3JhcHBlciBhIGk6aG92ZXIsLnByb3BlcnR5X3JhdGluZ3MgaSwubGlzdGluZy1yZXZpZXcgLnByb3BlcnR5X3JhdGluZ3MgaSwudGVybV9iYXJfaXRlbTpob3ZlciwuYWdlbmN5X3NvY2lhbCBpOmhvdmVyLC5pbmZvcm9vbV91bml0X3R5cGU0IHNwYW4sIC5pbmZvYmF0aF91bml0X3R5cGU0IHNwYW4sIC5pbmZvc2l6ZV91bml0X3R5cGU0IHNwYW4sLnByb3BlcnlfcHJpY2U0X2dyaWQsLnBhZ2luYXRpb24+bGk+YSwgLnBhZ2luYXRpb24+bGk+c3Bhbiwud3Blc3RhdGVfZXN0YXRlX3Byb3BlcnR5X2RldGFpbHNfc2VjdGlvbiBpLmZhLWNoZWNrLCAjdGFiX3BycGcgaS5mYS1jaGVjaywucHJvcGVydHktcGFuZWwgaS5mYS1jaGVjaywuc2luZ2xlLWVzdGF0ZV9hZ2VudCAuZGV2ZWxvcGVyX3RheG9ub215IGEsLnN0YXJzZWxlY3RlZF9jbGljaywgLnN0YXJzZWxlY3RlZCwuaWNvbi1mYXYtb2ZmOmhvdmVyLC5pY29uLWZhdi1vbiwucGFnZS10ZW1wbGF0ZS1mcm9udF9wcm9wZXJ0eV9zdWJtaXQgLm5hdmlnYXRpb25fY29udGFpbmVyIGEuYWN0aXZlLC5wcm9wZXJ0eV9saXN0aW5nLnByb3BlcnR5X3VuaXRfdHlwZTMgLmljb24tZmF2Lmljb24tZmF2LW9uOmJlZm9yZSwjaW5mb2JveF90aXRsZTpob3ZlciwgLmluZm9fZGV0YWlscyBhOmhvdmVyLC5jb21wYW55X2hlYWRsaW5lIGE6aG92ZXIgaSwuaGVhZGVyX3R5cGU1ICNhY2Nlc3MgLnN1Yi1tZW51IC5jdXJyZW50LW1lbnUtaXRlbSA+YSwuZW1wdHlfc3Rhcjpob3ZlcjpiZWZvcmUsLnByb3BlcnR5X2xpc3RpbmcucHJvcGVydHlfdW5pdF90eXBlNCAuY29tcGFyZS1hY3Rpb246aG92ZXIsIC5wcm9wZXJ0eV9saXN0aW5nLnByb3BlcnR5X3VuaXRfdHlwZTQgLmljb24tZmF2LW9uLCAucHJvcGVydHlfbGlzdGluZy5wcm9wZXJ0eV91bml0X3R5cGU0IC5zaGFyZV9saXN0OmhvdmVyLCAucHJvcGVydHlfbGlzdGluZy5wcm9wZXJ0eV91bml0X3R5cGUyIC5zaGFyZV9saXN0OmhvdmVyLC5jb21wYXJlLWFjdGlvbjpob3ZlciwucHJvcGVydHlfbGlzdGluZy5wcm9wZXJ0eV91bml0X3R5cGUyIC5jb21wYXJlLWFjdGlvbjpob3ZlciwucHJvcGVyeV9wcmljZTRfZ3JpZCBzcGFuLC5hZ2VudF91bml0IC5hZ2VudF9wb3NpdGlvbiwud3ByZXNpZGVuY2Vfc2xpZGVyX3ByaWNlLC5wcm9wZXJ0eV9hZGRyZXNzX3R5cGUxX3dyYXBwZXIgYSwucHJvcGVydHlfYWRkcmVzc190eXBlMV93cmFwcGVyLC5zZWN0aW9uc19fbmF2LWl0ZW0sLnNlY3Rpb25fcHJpY2V7Y29sb3I6ICMxMjEyM2I7fS5oZWFkZXJfdHlwZTUgI2FjY2VzcyAuY3VycmVudC1tZW51LWl0ZW0gPmEsLmhlYWRlcl90eXBlNSAjYWNjZXNzIC5jdXJyZW50LW1lbnUtcGFyZW50PmEsLmhlYWRlcl90eXBlNSAjYWNjZXNzIC5jdXJyZW50LW1lbnUtYW5jZXN0b3I+YXtjb2xvcjogI2ZmZiFpbXBvcnRhbnQ7fS5zb2NpYWxfZW1haWw6aG92ZXIsLnNoYXJlX2ZhY2Vib29rOmhvdmVyLCNwcmludF9wYWdlOmhvdmVyLCAucHJvcF9zb2NpYWwgYTpob3ZlciBpLC5zaGFyZV90d2VldDpob3ZlciwuYWdlbnRfdW5pdF9idXR0b24sI2Ftb3VudF93ZCwgI2Ftb3VudCwjYW1vdW50X21vYmlsZSwjYW1vdW50X3NoLC5tb2JpbGUtdHJpZ2dlci11c2VyOmhvdmVyIGksIC5tb2JpbGUtdHJpZ2dlcjpob3ZlciBpLC5tb2JpbGVtZW51LWNsb3NlLXVzZXI6aG92ZXIsIC5tb2JpbGVtZW51LWNsb3NlOmhvdmVyLC5oZWFkZXJfdHlwZTUgI2FjY2VzcyAuc3ViLW1lbnUgLmN1cnJlbnQtbWVudS1pdGVtID5hLC5jdXN0b21uYXYuaGVhZGVyX3R5cGU1ICNhY2Nlc3MgLmN1cnJlbnQtbWVudS1hbmNlc3Rvcj5hLC5pY29uLWZhdi1vbiwucHJvcGVydHlfbGlzdGluZy5wcm9wZXJ0eV91bml0X3R5cGUzIC5pY29uLWZhdi5pY29uLWZhdi1vbjpiZWZvcmUsLnByb3BlcnR5X2xpc3RpbmcucHJvcGVydHlfdW5pdF90eXBlMyAuc2hhcmVfbGlzdDpob3ZlcjpiZWZvcmUsLnByb3BlcnR5X2xpc3RpbmcucHJvcGVydHlfdW5pdF90eXBlMyAuY29tcGFyZS1hY3Rpb246aG92ZXI6YmVmb3JlLC5hZ2VuY3lfc29jaWFscGFnZV93cmFwcGVyIGk6aG92ZXIsLmFkdmFuY2VkX3NlYXJjaF9zaWRlYmFyICNhbW91bnRfd2R7Y29sb3I6ICMxMjEyM2IhaW1wb3J0YW50O30uZmVhdHVyZWRfYXJ0aWNsZV90aXRsZXtib3JkZXItdG9wOiAzcHggc29saWQgIzEyMTIzYiFpbXBvcnRhbnQ7fS5hZ2VudF91bml0X2J1dHRvbiwuYWR2X3NlYXJjaF90YWJfaXRlbS5hY3RpdmUsLnNjcm9sbG9uLC5zaW5nbGUtZXN0YXRlX2FnZW50IC5kZXZlbG9wZXJfdGF4b25vbXkgYXtib3JkZXI6IDFweCBzb2xpZCAjMTIxMjNiO30jdGFiX3BycGcgbGl7Ym9yZGVyLXJpZ2h0OiAxcHggc29saWQgI2ZmZmZmZjt9LnRlc3RpbW9uaWFsLXNsaWRlci1jb250YWluZXIgLnNsaWNrLWRvdHMgbGkgYnV0dG9uOjpiZWZvcmUgeyBjb2xvcjogIzEyMTIzYjt9LnRlc3RpbW9uaWFsLXNsaWRlci1jb250YWluZXIgLnNsaWNrLWRvdHMgbGkuc2xpY2stYWN0aXZlIGJ1dHRvbjpiZWZvcmUge29wYWNpdHk6IC43NTtjb2xvcjogIzEyMTIzYiAhaW1wb3J0YW50O30uc3VibWl0X2xpc3Rpbmd7Ym9yZGVyLWNvbG9yOiAjMTIxMjNiO2JhY2tncm91bmQtaW1hZ2U6IC13ZWJraXQtZ3JhZGllbnQobGluZWFyLCBsZWZ0IHRvcCwgcmlnaHQgdG9wLCBjb2xvci1zdG9wKDUwJSwgdHJhbnNwYXJlbnQpLCBjb2xvci1zdG9wKDUwJSwgIzEyMTIzYikpO2JhY2tncm91bmQtaW1hZ2U6IGxpbmVhci1ncmFkaWVudCh0byByaWdodCwgdHJhbnNwYXJlbnQgNTAlLCAjMTIxMjNiIDUwJSk7fWEuc3VibWl0X2xpc3Rpbmc6aG92ZXIge2NvbG9yOiAjMTIxMjNiO2JvcmRlci1jb2xvcjogIzEyMTIzYjt9LnN1YnVuaXRfcHJpY2UsLmZlYXR1cmVkX3Byb3BlcnR5LmZlYXR1cmVkX3Byb3BlcnR5X3R5cGUzIC5mZWF0dXJlZF9zZWNvbmRsaW5lIC5mZWF0dXJlZF9wcm9wX3ByaWNlLC5mZWF0dXJlZF9wcm9wZXJ0eS5mZWF0dXJlZF9wcm9wZXJ0eV90eXBlMyAuZmVhdHVyZWRfc2Vjb25kbGluZSAuZmVhdHVyZWRfcHJvcF9wcmljZSAucHJpY2VfbGFiZWwsLnByb3BlcnR5X2xpc3RpbmcucGxhY2VzX2xpc3RpbmcgLnByb3BlcnR5X2xvY2F0aW9uLC5wcmV2aWV3X2RldGFpbHMsLnByZXZpZXdfZGV0YWlscyAuaW5mb2N1ciwucmFkaXVzX3dyYXA6YWZ0ZXIsLnVuaXRfZGV0YWlsc194OmhvdmVye2NvbG9yOiAjMmUyZjc4O30udW5pdF9kZXRhaWxzX3g6aG92ZXJ7YmFja2dyb3VuZDp0cmFuc3BhcmVudDt9LmRldmVsb3Blcl90YXhvbm9teSBhLC51bml0X2RldGFpbHNfeCBhLCAudW5pdF9kZXRhaWxzX3gsLnVuaXRfZGV0YWlsc194OmhvdmVyLC5hZHZfc2VhcmNoX3RhYl9pdGVte2JvcmRlcjogMXB4IHNvbGlkICMyZTJmNzg7fS53cHJlc2lkZW5jZV9idXR0b24uZGV2ZWxvcGVyX2NvbnRhY3RfYnV0dG9uOmhvdmVyLCAud3ByZXNpZGVuY2VfYnV0dG9uLmFnZW5jeV9jb250YWN0X2J1dDpob3ZlcnsgYm9yZGVyOiAxcHggc29saWQgIzJlMmY3OCFpbXBvcnRhbnQ7fS53cHJlc2lkZW5jZV9idXR0b24uZGV2ZWxvcGVyX2NvbnRhY3RfYnV0dG9uOmhvdmVyLCAud3ByZXNpZGVuY2VfYnV0dG9uLmFnZW5jeV9jb250YWN0X2J1dDpob3ZlcntiYWNrZ3JvdW5kLWNvbG9yOiAjMmUyZjc4IWltcG9ydGFudDt9LnVuaXRfZGV0YWlsc194IGEsIC51bml0X2RldGFpbHNfeHtiYWNrZ3JvdW5kLWltYWdlOiAtd2Via2l0LWdyYWRpZW50KGxpbmVhciwgbGVmdCB0b3AsIHJpZ2h0IHRvcCwgY29sb3Itc3RvcCg1MCUsIHRyYW5zcGFyZW50KSwgY29sb3Itc3RvcCg1MCUsICMyZTJmNzgpKTtiYWNrZ3JvdW5kLWltYWdlOiBsaW5lYXItZ3JhZGllbnQodG8gcmlnaHQsIHRyYW5zcGFyZW50IDUwJSwgIzJlMmY3OCA1MCUpO30gLnBhZ2UtdGVtcGxhdGUtdXNlcl9kYXNoYm9hcmRfYWRkIC53cHJlc2lkZW5jZV9idXR0b246aG92ZXJ7Y29sb3I6d2hpdGU7fS5kZXZlbG9wZXJfdGF4b25vbXkgYSwucGxhY2VzX3R5cGVfMl9saXN0aW5nc19ubywuYWdlbnRfY2FyZF9teV9saXN0aW5ncywuZmVhdHVyZWRfZGl2LC5hZ2VuY3lfdGF4b25vbXkgYSwudW5pdF9kZXRhaWxzX3gsLmNvbC1tZC00ID4gLmFnZW50X3VuaXQgLmFnZW50X2NhcmRfbXlfbGlzdGluZ3MsLmFnZW50X2NhcmRfbXlfbGlzdGluZ3MsLm1lbnVfbGFiZWwsLmFkdl9zZWFyY2hfdGFiX2l0ZW17YmFja2dyb3VuZC1jb2xvcjogIzJlMmY3ODt9IC5mZWF0dXJlZF9hcnRpY2xlX3JpZ2gsIC5mZWF0dXJlZF9hcnRpY2xlX3NlY29uZGxpbmUsLnByb3BlcnR5X2xvY2F0aW9uIC5pbmZvcm9vbSwgLnByb3BlcnR5X2xvY2F0aW9uIC5pbmZvYmF0aCAsIC5hZ2VudF9tZXRhICwgLmJsb2dfdW5pdF9tZXRhIGEsIC5wcm9wZXJ0eV9sb2NhdGlvbiAuaW5mb3NpemUsLnNhbGVfbGluZSAsIC5tZXRhLWluZm8gYSwgLmJyZWFkY3J1bWIgPiBsaSArIGxpOmJlZm9yZSwgLmJsb2dfdW5pdF9tZXRhLCAubWV0YS1pbmZvLC5icmVhZGNydW1iIGEsLmFnZW50X3Bvc2l0aW9ue2NvbG9yOiAjOTlhM2IxO30uZm9ybS1jb250cm9sOjpwbGFjZWhvbGRlcixpbnB1dDo6cGxhY2Vob2xkZXIsLnBhZ2UtdGVtcGxhdGUtZnJvbnRfcHJvcGVydHlfc3VibWl0IHNlbGVjdCwjc2NoZWR1bGVfaG91ciwjYWdlbnRfY29tbWVudC5mb3JtLWNvbnRyb2wsI25ld191c2VyX3R5cGUsI25ld191c2VyX3R5cGVfbW9iaWxle2NvbG9yOiAjOTlhM2IxIWltcG9ydGFudDt9LmN1c3RvbW5hdi5oZWFkZXJfdHlwZTUgI2FjY2VzcyAubWVudS1tYWluLW1lbnUtY29udGFpbmVyPnVsPmxpPmEsLmhlYWRlcl90eXBlNSAjYWNjZXNzIC5tZW51LW1haW4tbWVudS1jb250YWluZXI+dWw+bGk+YSwjaGVhZGVyNF9mb290ZXIsI2hlYWRlcjRfZm9vdGVyIC53aWRnZXQtdGl0bGUtaGVhZGVyNCwjaGVhZGVyNF9mb290ZXIgYSwjYWNjZXNzIHVsLm1lbnUgPmxpPmF7Y29sb3I6ICMyZTJmNzg7fS5tZW51X3VzZXJfcGljdHVyZXtib3JkZXItY29sb3I6IzJlMmY3ODt9Lm5hdmljb246YmVmb3JlLCAubmF2aWNvbjphZnRlciwubmF2aWNvbntiYWNrZ3JvdW5kOiAjMmUyZjc4OyB9LmhlYWRlcl90cmFuc3BhcmVudCAubWVudV91c2VyX3Rvb2xzLCAuaGVhZGVyX3RyYW5zcGFyZW50ICNhY2Nlc3MgdWwubWVudSA+bGk+YXtjb2xvcjogIzJlMmY3ODt9LmhlYWRlcl90cmFuc3BhcmVudCAubmF2aWNvbjpiZWZvcmUsIC5oZWFkZXJfdHJhbnNwYXJlbnQgLm5hdmljb246YWZ0ZXIsLmhlYWRlcl90cmFuc3BhcmVudCAubmF2aWNvbntiYWNrZ3JvdW5kOiAjMmUyZjc4O30uaGVhZGVyX3RyYW5zcGFyZW50IC5tZW51X3VzZXJfcGljdHVyZXtib3JkZXItY29sb3I6ICMyZTJmNzg7fS5jdXN0b21uYXYuaGVhZGVyX3R5cGU1ICNhY2Nlc3MgLm1lbnUtbWFpbi1tZW51LWNvbnRhaW5lcj51bD5saTpob3Zlcj5hLC5oZWFkZXJfdHlwZTUgI2FjY2VzcyAubWVudS1tYWluLW1lbnUtY29udGFpbmVyPnVsPmxpOmhvdmVyPmEsI2FjY2VzcyAubWVudSBsaTpob3Zlcj5hLC5oZWFkZXJfdHlwZTNfbWVudV9zaWRlYmFyICNhY2Nlc3MgLm1lbnUgbGk6aG92ZXI+YSwgLmhlYWRlcl90eXBlM19tZW51X3NpZGViYXIgI2FjY2VzcyAubWVudSBsaTpob3Zlcj5hOmFjdGl2ZSwgLmhlYWRlcl90eXBlM19tZW51X3NpZGViYXIgI2FjY2VzcyAubWVudSBsaTpob3Zlcj5hOmZvY3VzLC5jdXN0b21uYXYgI2FjY2VzcyB1bC5tZW51ID5saT5hOmhvdmVyLCNhY2Nlc3MgdWwubWVudSA+bGk+YTpob3ZlciwuaG92ZXJfdHlwZV8zICNhY2Nlc3MgLm1lbnUgPiBsaTpob3Zlcj5hLC5ob3Zlcl90eXBlXzQgI2FjY2VzcyAubWVudSA+IGxpOmhvdmVyPmEsLmhvdmVyX3R5cGVfNiAjYWNjZXNzIC5tZW51ID4gbGk6aG92ZXI+YSwuaGVhZGVyX3R5cGU1ICNhY2Nlc3MgLm1lbnUgbGk6aG92ZXI+YSwgLmhlYWRlcl90eXBlNSAjYWNjZXNzIC5tZW51IGxpOmhvdmVyPmE6YWN0aXZlLCAuaGVhZGVyX3R5cGU1ICNhY2Nlc3MgLm1lbnUgbGk6aG92ZXI+YTpmb2N1cywuY3VzdG9tbmF2LmhlYWRlcl90eXBlNSAjYWNjZXNzIC5tZW51IGxpOmhvdmVyPmEsIC5jdXN0b21uYXYuaGVhZGVyX3R5cGU1ICNhY2Nlc3MgLm1lbnUgbGk6aG92ZXI+YTphY3RpdmUsIC5jdXN0b21uYXYuaGVhZGVyX3R5cGU1ICNhY2Nlc3MgLm1lbnUgbGk6aG92ZXI+YTpmb2N1cywuaGVhZGVyNV9ib3R0b21fcm93X3dyYXBwZXIgI2FjY2VzcyAuc3ViLW1lbnUgLmN1cnJlbnQtbWVudS1pdGVtID5hLCNhY2Nlc3MgdWwubWVudSAuY3VycmVudC1tZW51LWl0ZW0gPmF7Y29sb3I6ICNmZmZmZmY7fS5ob3Zlcl90eXBlXzUgI2FjY2VzcyAubWVudSA+IGxpOmhvdmVyPmEge2JvcmRlci1ib3R0b206IDNweCBzb2xpZCAjZmZmZmZmO30uaG92ZXJfdHlwZV82ICNhY2Nlc3MgLm1lbnUgPiBsaTpob3Zlcj5hIHtib3JkZXI6IDJweCBzb2xpZCAjZmZmZmZmO30uaG92ZXJfdHlwZV8yICNhY2Nlc3MgLm1lbnUgPiBsaTpob3Zlcj5hOmJlZm9yZSB7Ym9yZGVyLXRvcDogM3B4IHNvbGlkICNmZmZmZmY7fS5jdXN0b21uYXYuaGVhZGVyX3R5cGU1ICNhY2Nlc3MgLm1lbnUgbGk6aG92ZXI+YXsgY29sb3I6ICNmZmZmZmYhaW1wb3J0YW50O30jYWNjZXNzIC5jdXJyZW50LW1lbnUtaXRlbSwjYWNjZXNzIHVsLm1lbnUgLmN1cnJlbnQtbWVudS1pdGVtID5he2NvbG9yOiAjMmUyZjc4O30gLmhlYWRlcl90cmFuc3BhcmVudCAuY3VzdG9tbmF2ICNhY2Nlc3MgdWwubWVudSA+bGk+YTpob3ZlciwuaGVhZGVyX3RyYW5zcGFyZW50ICNhY2Nlc3MgdWwubWVudSA+bGk+YTpob3ZlciwuaGVhZGVyX3RyYW5zcGFyZW50IC5ob3Zlcl90eXBlXzMgI2FjY2VzcyAubWVudSA+IGxpOmhvdmVyPmEsLmhlYWRlcl90cmFuc3BhcmVudCAuaG92ZXJfdHlwZV80ICNhY2Nlc3MgLm1lbnUgPiBsaTpob3Zlcj5hLC5oZWFkZXJfdHJhbnNwYXJlbnQgLmhvdmVyX3R5cGVfNiAjYWNjZXNzIC5tZW51ID4gbGk6aG92ZXI+YSwuaGVhZGVyX3RyYW5zcGFyZW50IC5jdXN0b21uYXYgI2FjY2VzcyAubWVudSA+IGxpOmhvdmVyIGF7Y29sb3I6ICNmZmZmZmY7fS5oZWFkZXJfdHJhbnNwYXJlbnQgLmhvdmVyX3R5cGVfNSAjYWNjZXNzIC5tZW51ID4gbGk6aG92ZXI+YSB7Ym9yZGVyLWJvdHRvbTogM3B4IHNvbGlkICNmZmZmZmY7fS5oZWFkZXJfdHJhbnNwYXJlbnQgLmhvdmVyX3R5cGVfNiAjYWNjZXNzIC5tZW51ID4gbGk6aG92ZXI+YSB7Ym9yZGVyOiAycHggc29saWQgI2ZmZmZmZjt9LmhlYWRlcl90cmFuc3BhcmVudCAuaG92ZXJfdHlwZV8yICNhY2Nlc3MgLm1lbnUgPiBsaTpob3Zlcj5hOmJlZm9yZSB7Ym9yZGVyLXRvcDogM3B4IHNvbGlkICNmZmZmZmY7fS5oZWFkZXJfdHJhbnNwYXJlbnQgI2FjY2VzcyB1bC5tZW51ID5saT5hOmhvdmVyLCAuaGVhZGVyX3RyYW5zcGFyZW50IC5ob3Zlcl90eXBlXzMgI2FjY2VzcyAubWVudSA+IGxpOmhvdmVyPmEsLmhlYWRlcl90cmFuc3BhcmVudCAuaG92ZXJfdHlwZV8zICNhY2Nlc3MgdWwubWVudSA+bGk+YTpob3Zlcntjb2xvcjogI2ZmZmZmZiFpbXBvcnRhbnQ7fSAuYWxhbHgyMjMsIC5oZWFkZXJfdHlwZTNfbWVudV9zaWRlYmFyIC5tZW51ID4gbGk6aG92ZXIsLmhvdmVyX3R5cGVfMyAjYWNjZXNzIC5tZW51ID4gbGk6aG92ZXI+YSwuaG92ZXJfdHlwZV80ICNhY2Nlc3MgLm1lbnUgPiBsaTpob3Zlcj5hIHtiYWNrZ3JvdW5kOiAjMmUyZjc4IWltcG9ydGFudDt9LmN1c3RvbW5hdi5oZWFkZXJfdHlwZTUgI2FjY2VzcyAubWVudS1tYWluLW1lbnUtY29udGFpbmVyPnVsPmxpPmEsLmN1c3RvbW5hdiAjYWNjZXNzIHVsLm1lbnUgPmxpPmF7Y29sb3I6ICMyZTJmNzg7fS5jdXN0b21uYXYgLm1lbnVfdXNlcl9waWN0dXJle2JvcmRlci1jb2xvcjojMmUyZjc4O30uaGVhZGVyX3RyYW5zcGFyZW50IC5jdXN0b21uYXYgI2FjY2VzcyB1bC5tZW51ID5saT5he2NvbG9yOiAjMmUyZjc4IWltcG9ydGFudDt9IC5jdXN0b21uYXYgLm5hdmljb246YmVmb3JlLCAuY3VzdG9tbmF2IC5uYXZpY29uOmFmdGVyLC5jdXN0b21uYXYgLm5hdmljb257YmFja2dyb3VuZDogIzJlMmY3ODt9I3VzZXJfbWVudV9vcGVuID4gbGkgPiBhOmhvdmVyLCN1c2VyX21lbnVfb3BlbiA+IGxpID4gYTpmb2N1cywuZmlsdGVyX21lbnUgbGk6aG92ZXIsLnN1Yi1tZW51IGxpOmhvdmVyLCAjYWNjZXNzIC5tZW51IGxpOmhvdmVyPmEsICNhY2Nlc3MgLm1lbnUgbGk6aG92ZXI+YTphY3RpdmUsICNhY2Nlc3MgLm1lbnUgbGk6aG92ZXI+YTpmb2N1c3tiYWNrZ3JvdW5kLWNvbG9yOiAjMmUyZjc4O30uZm9ybS1jb250cm9sLm9wZW4gLmZpbHRlcl9tZW51X3RyaWdnZXIsIC5tZW51X3VzZXJfdG9vbHN7Y29sb3I6ICMyZTJmNzg7fS5tZW51X3VzZXJfcGljdHVyZSB7Ym9yZGVyOiAxcHggc29saWQgIzJlMmY3ODt9I2FjY2VzcyAubWVudSB1bCBsaTpob3Zlcj5hLCNhY2Nlc3MgLnN1Yi1tZW51IGxpOmhvdmVyPmEsI2FjY2VzcyAuc3ViLW1lbnUgbGk6aG92ZXI+YTphY3RpdmUsICNhY2Nlc3MgLnN1Yi1tZW51IGxpOmhvdmVyPmE6Zm9jdXMsI2FjY2VzcyAud2l0aC1tZWdhbWVudSAuc3ViLW1lbnUgbGk6aG92ZXI+YSwgI2FjY2VzcyAud2l0aC1tZWdhbWVudSAuc3ViLW1lbnUgbGk6aG92ZXI+YTphY3RpdmUsICNhY2Nlc3MgLndpdGgtbWVnYW1lbnUgLnN1Yi1tZW51IGxpOmhvdmVyPmE6Zm9jdXMsLmhlYWRlcjVfYm90dG9tX3Jvd193cmFwcGVyICNhY2Nlc3MgLnN1Yi1tZW51IC5jdXJyZW50LW1lbnUtaXRlbSA+YSwuY3VzdG9tbmF2LmhlYWRlcl90eXBlNSAjYWNjZXNzIC5tZW51IC53aXRoLW1lZ2FtZW51IC5zdWItbWVudSBsaTpob3Zlcj5hLCAuY3VzdG9tbmF2LmhlYWRlcl90eXBlNSAjYWNjZXNzIC5tZW51IC53aXRoLW1lZ2FtZW51IC5zdWItbWVudSBsaTpob3Zlcj5hOmFjdGl2ZSwgLmN1c3RvbW5hdi5oZWFkZXJfdHlwZTUgI2FjY2VzcyAubWVudSAud2l0aC1tZWdhbWVudSAuc3ViLW1lbnUgbGk6aG92ZXI+YTpmb2N1cywgLmhlYWRlcl90eXBlNSAjYWNjZXNzIC5tZW51IC53aXRoLW1lZ2FtZW51IC5zdWItbWVudSBsaTpob3Zlcj5hLCAuaGVhZGVyX3R5cGU1ICNhY2Nlc3MgLm1lbnUgLnN1Yi1tZW51IC53aXRoLW1lZ2FtZW51IGxpOmhvdmVyPmE6YWN0aXZlLC5oZWFkZXJfdHlwZTUgI2FjY2VzcyAubWVudSAuc3ViLW1lbnUgLndpdGgtbWVnYW1lbnUgbGk6aG92ZXI+YTpmb2N1cywuY3VzdG9tbmF2LmhlYWRlcl90eXBlNSAjYWNjZXNzIC5tZW51IC5zdWItbWVudSBsaTpob3Zlcj5hLCAuY3VzdG9tbmF2LmhlYWRlcl90eXBlNSAjYWNjZXNzIC5tZW51IC5zdWItbWVudSBsaTpob3Zlcj5hOmFjdGl2ZSwgLmN1c3RvbW5hdi5oZWFkZXJfdHlwZTUgI2FjY2VzcyAubWVudSAuc3ViLW1lbnUgbGk6aG92ZXI+YTpmb2N1cywgLmhlYWRlcl90eXBlNSAjYWNjZXNzIC5tZW51IC5zdWItbWVudSBsaTpob3Zlcj5hLC5oZWFkZXJfdHlwZTUgI2FjY2VzcyAubWVudSAuc3ViLW1lbnUgbGk6aG92ZXI+YTphY3RpdmUsIC5oZWFkZXJfdHlwZTUgI2FjY2VzcyAubWVudSAuc3ViLW1lbnUgbGk6aG92ZXI+YTpmb2N1cywjdXNlcl9tZW51X29wZW4gPiBsaSA+IGE6aG92ZXIsICN1c2VyX21lbnVfb3BlbiA+IGxpID4gYTpmb2N1c3tjb2xvcjogI2ZmZmZmZjt9LmhlYWRlcl90cmFuc3BhcmVudCAuY3VzdG9tbmF2ICNhY2Nlc3MgLnN1Yi1tZW51IGxpOmhvdmVyPmEsLmN1c3RvbW5hdi5oZWFkZXJfdHlwZTUgI2FjY2VzcyAubWVudSAuc3ViLW1lbnUgbGk6aG92ZXI+YXtjb2xvcjogI2ZmZmZmZiFpbXBvcnRhbnQ7fSNhY2Nlc3MgdWwgdWwge2JvcmRlci1sZWZ0OiAxcHggc29saWQgIyNmZmZmZmYhaW1wb3J0YW50O2JvcmRlci1yaWdodDogMXB4IHNvbGlkIyNmZmZmZmYhaW1wb3J0YW50O2JvcmRlci1ib3R0b206IDFweCBzb2xpZCAjI2ZmZmZmZiFpbXBvcnRhbnQ7Ym9yZGVyLXRvcDogMXB4IHNvbGlkICMjZmZmZmZmIWltcG9ydGFudDt9I2FjY2VzcyB1bCB1bCBhIHtib3JkZXItYm90dG9tOiAxcHggc29saWQgI2ZmZmZmZjt9Ym9keSxhLGxhYmVsLGlucHV0W3R5cGU9dGV4dF0sIGlucHV0W3R5cGU9cGFzc3dvcmRdLCBpbnB1dFt0eXBlPWVtYWlsXSwgaW5wdXRbdHlwZT11cmxdLCBpbnB1dFt0eXBlPW51bWJlcl0sIHRleHRhcmVhLCAuc2xpZGVyLWNvbnRlbnQsIC5saXN0aW5nLWRldGFpbHMsIC5mb3JtLWNvbnRyb2wsICN1c2VyX21lbnVfb3BlbiBpLCNncmlkX3ZpZXcsICNsaXN0X3ZpZXcsIC5saXN0aW5nX2RldGFpbHMgYSwgLm5vdGljZV9hcmVhLCAuc29jaWFsLWFnZW50LXBhZ2UgYSwgLnByb3BfZGV0YWlsc3gsICNyZWdfcGFzc21haWxfdG9wYmFyLCNyZWdfcGFzc21haWwsIC50ZXN0aW1vbmlhbC10ZXh0LC53cGVzdGF0ZV90YWJzIC51aS13aWRnZXQtY29udGVudCwgLndwZXN0YXRlX3RvdXIgLnVpLXdpZGdldC1jb250ZW50LCAud3Blc3RhdGVfYWNjb3JkaW9uX3RhYiAudWktd2lkZ2V0LWNvbnRlbnQsIC53cGVzdGF0ZV9hY2NvcmRpb25fdGFiIC51aS1zdGF0ZS1kZWZhdWx0LCAud3Blc3RhdGVfYWNjb3JkaW9uX3RhYiAudWktd2lkZ2V0LWNvbnRlbnQgLnVpLXN0YXRlLWRlZmF1bHQsIC53cGVzdGF0ZV9hY2NvcmRpb25fdGFiIC51aS13aWRnZXQtaGVhZGVyIC51aS1zdGF0ZS1kZWZhdWx0LC5maWx0ZXJfbWVudSwucHJvcGVydHlfbGlzdGluZ19kZXRhaWxzIC5pbmZvc2l6ZSwucHJvcGVydHlfbGlzdGluZ19kZXRhaWxzIC5pbmZvYmF0aCwucHJvcGVydHlfbGlzdGluZ19kZXRhaWxzIC5pbmZvcm9vbSwuZGlyZWN0b3J5X3NpZGViYXIgbGFiZWwsLmFnZW50X2RldGFpbCBhLC5hZ2VudF91bml0IC5hZ2VudF9kZXRhaWwgYSwuYWdlbnRfZGV0YWlsLC5hZ2VudF9wb3NpdGlvbnsgY29sb3I6ICM3NjgwODI7fS5jYXJldCwgLmNhcmV0X3NpZGViYXIsIC5hZHZhbmNlZF9zZWFyY2hfc2hvcnRjb2RlIC5jYXJldF9maWx0ZXJ7IGJvcmRlci10b3AtY29sb3I6Izc2ODA4Mjt9LnBhZ2luYXRpb24gPiBsaSA+IGEsLnBhZ2luYXRpb24gPiBsaSA+IHNwYW4sLnNpbmdsZS1jb250ZW50IHAgYSwuZmVhdHVyZWRfYXJ0aWNsZTpob3ZlciBoMiBhLC51c2VyX2Rhc2hib2FyZF9saXN0ZWQgYSwuYmxvZ191bml0X21ldGEgLnJlYWRfbW9yZSwgLnNsaWRlci1jb250ZW50IC5yZWFkX21vcmUsIC5ibG9nMnYgLnJlYWRfbW9yZSwgLmJyZWFkY3J1bWIgLmFjdGl2ZSwudW5pdF9tb3JlX3ggYSwgLnVuaXRfbW9yZV94LCNsb2dpbl90cmlnZ2VyX21vZGFse2NvbG9yOiAjMmUyZjc4O30uc2luZ2xlLWNvbnRlbnQgcCBhLC5jb250YWN0LXdyYXBwZXIgcCBhe2NvbG9yOiAjMmUyZjc4IWltcG9ydGFudDt9I2NvbG9waG9uIHtiYWNrZ3JvdW5kLWNvbG9yOiAjMTIxMjNiO30jY29sb3Bob24sICNjb2xvcGhvbiBhLCAjY29sb3Bob24gbGkgYXtjb2xvcjogI2ZmZmZmZjt9LnN1Yl9mb290ZXIsIC5zdWJmb290ZXJfbWVudSBhLCAuc3ViZm9vdGVyX21lbnUgbGkgYSB7Y29sb3I6ICNmZmZmZmYhaW1wb3J0YW50O30uc3ViX2Zvb3RlcntiYWNrZ3JvdW5kLWNvbG9yOiM3ZTdlN2U7fS5wYWdlLXRlbXBsYXRlLXVzZXJfZGFzaGJvYXJkX2FkZCAud3ByZXNpZGVuY2VfYnV0dG9uOmhvdmVyLCAjY2hhbmdlX3Bhc3M6aG92ZXIsI3JlZ2lzdGVyX2FnZW50OmhvdmVyLCAjdXBkYXRlX3Byb2ZpbGVfYWdlbmN5OmhvdmVyLCAjdXBkYXRlX3Byb2ZpbGVfZGV2ZWxvcGVyOmhvdmVyLCAud3ByZXNpZGVuY2Vfc3VjY2Vzczpob3ZlciwgI3VwZGF0ZV9wcm9maWxlOmhvdmVyLCAjc2VhcmNoX2Zvcm1fc3VibWl0XzE6aG92ZXIsIC52aWV3X3B1YmxpY19wcm9maWxlOmhvdmVyLCAjZ29vZ2xlX2RldmVsb3Blcl9sb2NhdGlvbjpob3ZlciwgI2RlbGV0ZV9wcm9maWxlOmhvdmVyLCAjYWFpdS11cGxvYWRlcjpob3ZlciwgLndwcmVzaWRlbmNlX2J1dHRvbi5hZGRfY3VzdG9tX3BhcmFtZXRlcjpob3ZlciwgLndwcmVzaWRlbmNlX2J1dHRvbi5yZW1vdmVfcGFyYW1ldGVyX2J1dHRvbjpob3ZlciwgLndwcmVzaWRlbmNlX2J1dHRvbi52aWV3X3B1YmxpY19wcm9maWxlOmhvdmVyLC5hY2NfZ29vZ2xlX21hcHM6aG92ZXIsICNzY2hlZHVsZV9tZWV0aW5nOmhvdmVyLC50d2l0dGVyX3dyYXBwZXIsIC5zbGlkZXJfY29udHJvbF9yaWdodDpob3ZlciwgLnNsaWRlcl9jb250cm9sX2xlZnQ6aG92ZXIsIC5jYXJvdXNlbC1jb250cm9sLXRoZW1lLXByZXY6aG92ZXIsIC5jYXJvdXNlbC1jb250cm9sLXRoZW1lLW5leHQ6aG92ZXIgLCAud3BiX2J0bi1pbmZvOmhvdmVyLCAudW5pdF90eXBlM19kZXRhaWxzOmhvdmVye2JhY2tncm91bmQtY29sb3I6ICMyZTJmNzghaW1wb3J0YW50O30uaGVhZGVyNV9ib3R0b21fcm93X3dyYXBwZXIgLnN1Ym1pdF9saXN0aW5nOmhvdmVyIHtib3JkZXI6IDJweCBzb2xpZCAjMmUyZjc4IWltcG9ydGFudDt9IC5ub19tb3JlX2xpc3Q6aG92ZXJ7YmFja2dyb3VuZC1jb2xvcjogI2ZmZiFpbXBvcnRhbnQ7Ym9yZGVyOiAxcHggc29saWQgIzJlMmY3ODtjb2xvcjojMmUyZjc4IWltcG9ydGFudDt9Lmljb25fc2VsZWN0ZWQsLmZlYXR1cmVkX3Byb3BfbGFiZWx7Y29sb3I6ICMyZTJmNzghaW1wb3J0YW50O30ucGFnZS10ZW1wbGF0ZS11c2VyX2Rhc2hib2FyZF9hZGQgLndwcmVzaWRlbmNlX2J1dHRvbjpob3ZlciwgI2NoYW5nZV9wYXNzOmhvdmVyLCNyZWdpc3Rlcl9hZ2VudDpob3ZlciwgI3VwZGF0ZV9wcm9maWxlX2FnZW5jeTpob3ZlciwgI3VwZGF0ZV9wcm9maWxlX2RldmVsb3Blcjpob3ZlciwgLndwcmVzaWRlbmNlX3N1Y2Nlc3M6aG92ZXIsICN1cGRhdGVfcHJvZmlsZTpob3ZlciwgI3NlYXJjaF9mb3JtX3N1Ym1pdF8xOmhvdmVyLCAudmlld19wdWJsaWNfcHJvZmlsZTpob3ZlciwgI2dvb2dsZV9kZXZlbG9wZXJfbG9jYXRpb246aG92ZXIsICNkZWxldGVfcHJvZmlsZTpob3ZlciwgI2FhaXUtdXBsb2FkZXI6aG92ZXIsIC53cHJlc2lkZW5jZV9idXR0b24uYWRkX2N1c3RvbV9wYXJhbWV0ZXI6aG92ZXIsIC53cHJlc2lkZW5jZV9idXR0b24ucmVtb3ZlX3BhcmFtZXRlcl9idXR0b246aG92ZXIsIC53cHJlc2lkZW5jZV9idXR0b24udmlld19wdWJsaWNfcHJvZmlsZTpob3Zlcntib3JkZXI6IDFweCBzb2xpZCAjMmUyZjc4IWltcG9ydGFudDt9LmhlYWRlcl90cmFuc3BhcmVudCBhLnN1Ym1pdF9saXN0aW5nOmhvdmVye2JvcmRlci1jb2xvcjogIzJlMmY3ODtiYWNrZ3JvdW5kLWltYWdlOiAtd2Via2l0LWdyYWRpZW50KGxpbmVhciwgbGVmdCB0b3AsIHJpZ2h0IHRvcCwgY29sb3Itc3RvcCg1MCUsICMyZTJmNzgpLCBjb2xvci1zdG9wKDUwJSwgIzEyMTIzYikpO2JhY2tncm91bmQtaW1hZ2U6IGxpbmVhci1ncmFkaWVudCh0byByaWdodCwgIzJlMmY3OCA1MCUsICMxMjEyM2IgNTAlKTt9I29wZW5fcGFja2FnZXM6aG92ZXIgLmZhLCNvcGVuX3BhY2thZ2VzOmhvdmVye2NvbG9yOiNmZmI3NGR9LnVzZXJfZGFzaGJvYXJkX2xpbmtzIGE6aG92ZXIsLnVzZXJfZGFzaGJvYXJkX2xpbmtzIC51c2VyX3RhYl9hY3RpdmUsLm1vYmlsZV91c2VyX21lbnUgbGk6aG92ZXJ7YmFja2dyb3VuZC1jb2xvcjogI2ZmYjc0ZDt9LmNvbC1tZC0zLnVzZXJfbWVudV93cmFwcGVyLC5zbmFwLWRyYXdlciwubW9iaWxleC1tZW51IGxpeyBiYWNrZ3JvdW5kLWNvbG9yOiAjMjgyRDMzO30uZmVhdHVyZWRfcHJvcF9wcmljZSAucHJpY2VfbGFiZWwge2NvbG9yOiAjRkZCNzREO30uZmlsdGVyX21lbnUgbGk6aG92ZXIge2NvbG9yOiAjZmZmZmZmO31AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDExNTBweCl7I2FjY2VzcyBhIHtmb250LXNpemU6IDE0cHg7fX0uYWN0aW9uX3RhZ193cmFwcGVyLlJlbnRhbHMge2JhY2tncm91bmQtY29sb3I6ICMwRDg0QjI7fS5hY3Rpb25fdGFnX3dyYXBwZXIuU2FsZXMge2JhY2tncm91bmQtY29sb3I6ICNFNTI3NEY7fS50ZXN0aW1vbmlhbC1zbGlkZXItY29udGFpbmVyIC5zbGljay1wcmV2LnNsaWNrLWFycm93IHtsZWZ0OiAtNTBweDt9LnRlc3RpbW9uaWFsLXNsaWRlci1jb250YWluZXIgLnNsaWNrLW5leHQuc2xpY2stYXJyb3cge3JpZ2h0OiAtNDNweDt9LmZybV9kcm9wem9uZSAuZnJtX3NtYWxsX3RleHR7ZGlzcGxheTpub25lfS5mcm1fZHJvcHpvbmUgLmR6LW1lc3NhZ2V7Zm9udC1zaXplOjEycHh9LmZybV9zdHlsZV9mb3JtaWRhYmxlLXN0eWxlLndpdGhfZnJtX3N0eWxlIC5mcm1fZHJvcHpvbmV7YmFja2dyb3VuZC1jb2xvcjp0cmFuc3BhcmVudH0uZnJtX2Zvcm1fZmllbGQuZnJtX2ZvdXJ0aHttYXJnaW4tbGVmdDowJSAhaW1wb3J0YW50O21hcmdpbi1yaWdodDoxJSAhaW1wb3J0YW50O30uZnJtX2Ryb3B6b25lIC5mcm1fdXBsb2FkX2ljb246YmVmb3Jle2ZvbnQtc2l6ZToyOXB4O2Zsb2F0OmxlZnQ7bWFyZ2luLXJpZ2h0OjclfS5mcm1fc3R5bGVfZm9ybWlkYWJsZS1zdHlsZS53aXRoX2ZybV9zdHlsZSAuZnJtX3JhZGlvIGxhYmVsLCAuZnJtX3N0eWxlX2Zvcm1pZGFibGUtc3R5bGUud2l0aF9mcm1fc3R5bGUgLmZybV9jaGVja2JveCBsYWJlbHtjb2xvcjojZmZmICFpbXBvcnRhbnQ7fS5mcm1fZm9ybV9maWVsZC5mcm0yLCAuZnJtX3N1Ym1pdC5mcm0yLCAuZnJtX2Zvcm1fZmllbGQuZnJtX3NpeHRoLCAuZnJtX3N1Ym1pdC5mcm1fc2l4dGgsIC5mcm1fZm9ybV9maWVsZC5mcm1fZmlyc3Rfc2l4dGgsIC5mcm1fZm9ybV9maWVsZC5mcm1fbGFzdF9zaXh0aHt3aWR0aDo4LjU4JSAhaW1wb3J0YW50fS5sb2dvIGltZ3ttYXgtaGVpZ2h0OjE3MHB4ICFpbXBvcnRhbnQ7fS5tYXN0ZXJfaGVhZGVyLmhlYWRlcl90cmFuc3BhcmVudHtiYWNrZ3JvdW5kLWNvbG9yOnJnYigyNTUsMjU1LDI1NSwwLjUpICFpbXBvcnRhbnQ7fS5oZWFkZXJfdHlwZTEuaGVhZGVyX2NlbnRlciAjYWNjZXNze21heC13aWR0aDoxMDEwcHggIWltcG9ydGFudDt9LmFjdGlvbl90YWdfd3JhcHBlcntkaXNwbGF5Om5vbmUgIWltcG9ydGFudDt9LmNwY3RhLWZseWluIC5jcGN0YS10b3AtYmFye3RvcDozMCUgIWltcG9ydGFudDt9LmhlYWRlcl90eXBlMS5oZWFkZXJfY2VudGVyICNhY2Nlc3N7bWF4LXdpZHRoOjExNTBweCAhaW1wb3J0YW50O30udGVzdGltb25pYWwtY29udGFpbmVyLnR5cGVfY2xhc3NfMyAudGVzdGltbW9uaWFsc19zdGFydHMgaXtjb2xvcjojZTRjMjE4ICFpbXBvcnRhbnQ7fSNjb2xvcGhvbiAuc29jaWFsX3NpZGViYXJfaW50ZXJuYWwgYXtiYWNrZ3JvdW5kLWNvbG9yOiM0Yzc4YzkgIWltcG9ydGFudDt9Lm15LWZsaXBib3h7dGV4dC1zaGFkb3c6IDJweCAycHggMnB4IGJsYWNrICFpbXBvcnRhbnQ7fS53aWRnZXQtdGl0bGUtZm9vdGVye3RleHQtYWxpZ246Y2VudGVyICFpbXBvcnRhbnQ7fS50ZXh0d2lkZ2V0e3RleHQtYWxpZ246Y2VudGVyICFpbXBvcnRhbnQ7fSNjb2xvcGhvbiAueG94b3twYWRkaW5nLXRvcDoxMHB4ICFpbXBvcnRhbnQ7fS5zb2NpYWxfc2lkZWJhcl9pbnRlcm5hbHt0ZXh0LWFsaWduOmNlbnRlciAhaW1wb3J0YW50O31oMSxoMSBhe2ZvbnQtZmFtaWx5OlF1aWNrc2FuZDt9aDIsaDIgYXtmb250LWZhbWlseTpRdWlja3NhbmQ7fWgzLGgzIGF7Zm9udC1mYW1pbHk6UXVpY2tzYW5kO31oNCxoNCBhe2ZvbnQtZmFtaWx5OlF1aWNrc2FuZDt9aDUsaDUgYXtmb250LWZhbWlseTpRdWlja3NhbmQ7fWg2LGg2IGF7Zm9udC1mYW1pbHk6UXVpY2tzYW5kO31ib2R5LHB7Zm9udC1mYW1pbHk6UXVpY2tzYW5kO30jYWNjZXNzIGEsI2FjY2VzcyB1bCB1bCBhLCN1c2VyX21lbnVfdXtmb250LWZhbWlseToiUXVpY2tzYW5kIjt9I2FjY2VzcyBhLCN1c2VyX21lbnVfdXtmb250LXNpemU6MThweDt9I2FjY2VzcyBhLCN1c2VyX21lbnVfdXtmb250LXdlaWdodDo3MDA7fSNzZWFyY2hfd3JhcHBlciB7dG9wOiA1MCU7fSNwcmltYXJ5IC53aWRnZXQtY29udGFpbmVyLmZlYXR1cmVkX3NpZGViYXJ7cGFkZGluZzowcHg7fSNwcmltYXJ5IC5hZ2VudF9jb250YW5jdF9mb3JtLCNwcmltYXJ5IC53aWRnZXQtY29udGFpbmVyLCNwcmltYXJ5IC53aWRnZXQtY29udGFpbmVyLmxhdGVzdF9saXN0aW5ncyAud2lkZ2V0LXRpdGxlLXNpZGViYXIsI3ByaW1hcnkgLmxhdGVzdF9saXN0aW5ncy5saXN0X3R5cGUsLmRpcmVjdG9yeV9zaWRlYmFyX3dyYXBwZXJ7YmFja2dyb3VuZC1jb2xvcjogI2ZmZmZmZjt9LmJveGVkX3dpZGdldCAud2lkZ2V0LXRpdGxlLXNpZGViYXIsLndpZGdldC10aXRsZS1zaWRlYmFyLC5hZ2VudF9jb250YW5jdF9mb3JtX3NpZGViYXIgI3Nob3dfY29udGFjdHtjb2xvcjogIzQzNGE1NDt9LmJsb2cydiAucHJvcGVydHlfbGlzdGluZ3ttaW4taGVpZ2h0OiA0MzZweDt9LndwYl9idG4taW5mbywjcHJpbWFyeSAud2lkZ2V0LWNvbnRhaW5lci50d2l0dGVyX3dyYXBwZXIsLndwY2Y3LWZvcm0tY29udHJvbCwjYWNjZXNzIHVsIHVsLC5mb3JtLWNvbnRyb2wub3BlbiwuYnRuLC5jdXN0b21uYXYsI3VzZXJfbWVudV9vcGVuLC5maWx0ZXJfbWVudSwucGFnaW5hdGlvbiA+IGxpID4gYSwgLnBhZ2luYXRpb24gPiBsaSA+IHNwYW4sLnByb3BlcnR5X2xpc3RpbmcsLmFnZW50X3VuaXQsLmJsb2dfdW5pdCwucmVsYXRlZF9ibG9nX3VuaXQgLmJsb2dfdW5pdF9pbWFnZSBpbWcsI3RhYl9wcnBnIC50YWItcGFuZSwuYWdlbnRfdW5pdF9zb2NpYWxfc2luZ2xlLC5hZ2VudF9jb250YW5jdF9mb3JtX3NpZGViYXIgLmFnZW50X2NvbnRhbmN0X2Zvcm0sI2Zvb3Rlci1jb250YWN0LWZvcm0gaW5wdXRbdHlwZT10ZXh0XSwgI2Zvb3Rlci1jb250YWN0LWZvcm0gaW5wdXRbdHlwZT1wYXNzd29yZF0sI2Zvb3Rlci1jb250YWN0LWZvcm0gaW5wdXRbdHlwZT1lbWFpbF0sICNmb290ZXItY29udGFjdC1mb3JtIGlucHV0W3R5cGU9dXJsXSwgI2Zvb3Rlci1jb250YWN0LWZvcm0gaW5wdXRbdHlwZT1udW1iZXJdLCNmb290ZXItY29udGFjdC1mb3JtIHRleHRhcmVhLCNjb21tZW50cyBpbnB1dFt0eXBlPXRleHRdLCAjY29tbWVudHMgaW5wdXRbdHlwZT1wYXNzd29yZF0sI2NvbW1lbnRzIGlucHV0W3R5cGU9ZW1haWxdLCAjY29tbWVudHMgaW5wdXRbdHlwZT11cmxdLCAjY29tbWVudHMgaW5wdXRbdHlwZT1udW1iZXJdLCNjb21tZW50cyB0ZXh0YXJlYSwuYWdlbnRfY29udGFuY3RfZm9ybSBpbnB1dFt0eXBlPXRleHRdLCAuYWdlbnRfY29udGFuY3RfZm9ybSBpbnB1dFt0eXBlPXBhc3N3b3JkXSwuYWdlbnRfY29udGFuY3RfZm9ybSBpbnB1dFt0eXBlPWVtYWlsXSwgLmFnZW50X2NvbnRhbmN0X2Zvcm0gaW5wdXRbdHlwZT11cmxdLCAuYWdlbnRfY29udGFuY3RfZm9ybSBpbnB1dFt0eXBlPW51bWJlcl0sLmFnZW50X2NvbnRhbmN0X2Zvcm0gdGV4dGFyZWEsLnppbGxvd193aWRnZXQsLmFkdmFuY2VkX3NlYXJjaF9zaG9ydGNvZGUsLmFkdmFuY2VkX3NlYXJjaF9zaWRlYmFyLC5tb3J0Z2FnZV9jYWxjdWxhdG9yX2RpdiwuZm9vdGVyLWNvbnRhY3QtZm9ybSwuY29udGFjdGZvcm13cmFwcGVyLC5pbmZvX2RldGFpbHMsLmluZm9faWR4LC5sb2dpbndkX3NpZGViYXIsYmxvY2txdW90ZSwuZmVhdHVyZWRfYXJ0aWNsZSwuZmVhdHVyZWRfcHJvcGVydHksLmN1c3RvbWxpc3QyIHVsLC5mZWF0dXJlZF9hZ2VudCwudGVzdGltb25pYWwtdGV4dCwud3BiX2FsZXJ0LWluZm8udmNfYWxlcnRfM2Qud3Blc3RhdGVfbWVzc2FnZSwud3BiX2FsZXJ0LXN1Y2Nlc3MudmNfYWxlcnRfM2Qud3Blc3RhdGVfbWVzc2FnZSwud3BiX2FsZXJ0LWVycm9yLnZjX2FsZXJ0XzNkLndwZXN0YXRlX21lc3NhZ2UsLndwYl9hbGVydC1kYW5nZXIudmNfYWxlcnRfM2Qud3Blc3RhdGVfbWVzc2FnZSwud3BiX2NhbGxfdG9fYWN0aW9uLndwZXN0YXRlX2N0YV9idXR0b24sLnZjX2NhbGxfdG9fYWN0aW9uLndwZXN0YXRlX2N0YV9idXR0b24yLC5zYXZlZF9zZWFyY2hfd3JhcHBlciwuc2VhcmNoX3VuaXRfd3JhcHBlciwubW9ydGdhZ2VfY2FsY3VsYXRvcl9saXstd2Via2l0LWJveC1zaGFkb3c6MHB4IDJweCAwcHggMHB4IHJnYmEoMjI3LCAyMjgsIDIzMSwgMSk7Ym94LXNoYWRvdzowcHggMnB4IDBweCAwcHggcmdiYSgyMjcsIDIyOCwgMjMxLCAxKTt9LndwcmVzaWRlbmNlX2J1dHRvbntib3JkZXI6bm9uZSFpbXBvcnRhbnQ7cGFkZGluZzoxNHB4IDI2cHg7fS5hZ2VudF9jb250YW5jdF9mb3JtIGlucHV0W3R5cGU9InN1Ym1pdCJdLCAuc2luZ2xlLWNvbnRlbnQgaW5wdXRbdHlwZT0ic3VibWl0Il17Ym9yZGVyOm5vbmUhaW1wb3J0YW50O30jZmFjZWJvb2tsb2dpbiwgI2ZhY2Vib29rbG9naW5zaWRlYmFyX21vYmlsZSwgI2ZhY2Vib29rbG9naW5zaWRlYmFyX3RvcGJhciwgI2ZhY2Vib29rbG9naW5zaWRlYmFyLCNnb29nbGVsb2dpbiwgI2dvb2dsZWxvZ2luc2lkZWJhcl9tb2JpbGUsICNnb29nbGVsb2dpbnNpZGViYXJfdG9wYmFyLCAjZ29vZ2xlbG9naW5zaWRlYmFyLCN5YWhvb2xvZ2luLCAjdHdpdHRlcmxvZ2luc2lkZWJhcl9tb2JpbGUsICN0d2l0dGVybG9naW5zaWRlYmFyX3RvcGJhciwgI3R3aXR0ZXJsb2dpbnNpZGViYXJ7Ym9yZGVyLWJvdHRvbTowcHg7fSNwcmltYXJ5IC53aWRnZXQtY29udGFpbmVyLnR3aXR0ZXJfd3JhcHBlciwuYWdlbnRwaWN0LC5hZ2VudF91bml0IGltZywucHJvcGVydHlfbGlzdGluZyBpbWd7Ym9yZGVyOm5vbmU7fS5wbGFjZXNfd3JhcHBlcl90eXBlXzIsLnBsYWNlc193cmFwcGVyX3R5cGVfMiAucGxhY2VzX2NvdmVyLC5tb3J0Z2FnZV9jYWxjdWxhdG9yX2xpLGlucHV0W3R5cGU9dGV4dF0sIGlucHV0W3R5cGU9cGFzc3dvcmRdLCBpbnB1dFt0eXBlPWVtYWlsXSwgaW5wdXRbdHlwZT11cmxdLCBpbnB1dFt0eXBlPW51bWJlcl0sIHRleHRhcmVhLC53cGNmNy1mb3JtLWNvbnRyb2wsI21vYmlsZV9kaXNwbGF5LC5mb3JtLWNvbnRyb2wsIC5hZHYtc2VhcmNoLTEgaW5wdXRbdHlwZT10ZXh0XSwgLnByb3BlcnR5X2xpc3RpbmcsLmxpc3RpbmctY292ZXItcGx1cywuc2hhcmVfdW5pdCwuaXRlbXNfY29tcGFyZSBpbWcsLnJpYmJvbi13cmFwcGVyLWRlZmF1bHQsIC5mZWF0dXJlZF9kaXYsLmFnZW50X3VuaXQsLmJsb2dfdW5pdCwucmVsYXRlZF9ibG9nX3VuaXQsLnJlbGF0ZWRfYmxvZ191bml0X2ltYWdlLC5yZWxhdGVkX2Jsb2dfdW5pdF9pbWFnZSBpbWcsLnJlbGF0ZWRfYmxvZ191bml0X2ltYWdlIC5saXN0aW5nLWNvdmVyLC5saXN0aW5nLWNvdmVyLXBsdXMtcmVsYXRlZCwuZ2FsbGVyeSBpbWcsLnBvc3QtY2FydXNlbCwucHJvcGVydHktcGFuZWwgLnBhbmVsLWhlYWRpbmcsLmlzbm90ZmF2b3JpdGUsI2FkZF9mYXZvcml0ZXMuaXNmYXZvcml0ZTpob3ZlciwjYWRkX2Zhdm9yaXRlczpob3ZlciwjYWRkX2Zhdm9yaXRlcy5pc2Zhdm9yaXRlLCNzbGlkZXJfZW5hYmxlX21hcCwjc2xpZGVyX2VuYWJsZV9zdHJlZXQsI3NsaWRlcl9lbmFibGVfc2xpZGVyLC5teWRldGFpbHMsLmFnZW50X2NvbnRhbmN0X2Zvcm1fc2lkZWJhciAuYWdlbnRfY29udGFuY3RfZm9ybSwuY29tbWVudCAuYmxvZ19hdXRob3JfaW1hZ2UsI2FnZW50X3N1Ym1pdCwuY29tbWVudC1yZXBseS1saW5rLC5jb21tZW50LWZvcm0gI3N1Ym1pdCwjY29sb3Bob24gLnNvY2lhbF9zaWRlYmFyX2ludGVybmFsIGEsI3ByaW1hcnkgLnNvY2lhbF9zaWRlYmFyX2ludGVybmFsIGEsLnppbGxvd193aWRnZXQsLnR3aXR0ZXJfd3JhcHBlciwjY2FsZW5kYXJfd3JhcCwud2lkZ2V0X2xhdGVzdF9pbnRlcm5hbCBpbWcsLndpZGdldF9sYXRlc3RfaW50ZXJuYWwgLmxpc3RpbmctY292ZXIsLndpZGdldF9sYXRlc3RfaW50ZXJuYWwgLmxpc3RpbmctY292ZXItcGx1cywuZmVhdHVyZWRfc2lkZWJhciwuZmVhdHVyZWRfd2lkZ2V0X2ltYWdlIGltZywuYWR2YW5jZWRfc2VhcmNoX3Nob3J0Y29kZSwuYWR2YW5jZWRfc2VhcmNoX3NpZGViYXIsLm1vcnRnYWdlX2NhbGN1bGF0b3JfZGl2LC5mbGlja3Jfd2lkZ2V0X2ludGVybmFsIGltZywuV2lkZ2V0X0ZsaWNrciAubGlzdGluZy1jb3ZlciwjZ21hcC1sb2FkaW5nLCNnbWFwLW5vcmVzdWx0LCNzdHJlZXQtdmlldywuY29udGFjdC1jb21hcGFueS1sb2dvLCNnbWFwLWNvbnRyb2wsI2dvb2dsZV9tYXBfcHJvcF9saXN0X3NpZGViYXIgI2FkdmFuY2VkX3N1Ym1pdF8yLCNyZXN1bHRzLC5hZHYtc2VhcmNoLTEgaW5wdXRbdHlwZT10ZXh0XSwuYWR2LXNlYXJjaC0zLC5hZHYtc2VhcmNoLTMgI3Jlc3VsdHMsI2FkdmFuY2VkX3N1Ym1pdF8yMiwuYWR2X3Jlc3VsdHNfd3JhcHBlciAjYWR2YW5jZWRfc3VibWl0XzIsLmNvbXBhcmVfaXRlbV9oZWFkIGltZywuYmFja3RvcCwgLmNvbnRhY3QtYm94LC5mb290ZXItY29udGFjdC1mb3JtLC5jb250YWN0Zm9ybXdyYXBwZXIsLmluZm9fZGV0YWlscywuaW5mb19pZHgsLnVzZXJfZGFzaGJvYXJkX2xpbmtzLCNzdHJpcGVfY2FuY2VsLC5wYWNrX2Rlc2NyaXB0aW9uLC5wYWNrLXVuaXQsLnBlcnBhY2ssI2RpcmVjdF9wYXksI3NlbmRfZGlyZWN0X2JpbGwsI3Byb2ZpbGUtaW1hZ2UsLmRhc2JvYXJkLXByb3AtbGlzdGluZywuaW5mby1jb250YWluZXIgaSwjZm9ybV9zdWJtaXRfMSwubG9naW53ZF9zaWRlYmFyLC5sb2dpbl9mb3JtLC5hbGVydC1tZXNzYWdlLC5sb2dpbi1hbGVydCwuYWdlbnRfY29udGFuY3RfZm9ybSBpbnB1dFt0eXBlPSJzdWJtaXQiXSwuc2luZ2xlLWNvbnRlbnQgaW5wdXRbdHlwZT0ic3VibWl0Il0sdGFibGUsYmxvY2txdW90ZSwuZmVhdHVyZWRfYXJ0aWNsZSwuYmxvZ19hdXRob3JfaW1hZ2UsLmZlYXR1cmVkX3Byb3BlcnR5LC5hZ2VudF9mYWNlLC5hZ2VudF9mYWNlIGltZywuYWdlbnRfZmFjZV9kZXRhaWxzIGltZywuZ29vZ2xlX21hcF9zaCwuY3VzdG9tbGlzdDIgdWwsLmZlYXR1cmVkX2FnZW50LC5pY29uY29sIGltZywudGVzdGltb25pYWwtaW1hZ2UsLnRlc3RpbW9uaWFsLXRleHQsLndwZXN0YXRlX3Bvc3RzX2dyaWQud3BiX3RlYXNlcl9ncmlkIC5jYXRlZ29yaWVzX2ZpbHRlciBsaSwgLndwZXN0YXRlX3Bvc3RzX2dyaWQud3BiX2NhdGVnb3JpZXNfZmlsdGVyIGxpLC53cGVzdGF0ZV9wb3N0c19ncmlkIGltZywud3Blc3RhdGVfcHJvZ3Jlc3NfYmFyLnZjX3Byb2dyZXNzX2JhciAudmNfc2luZ2xlX2Jhciwud3Blc3RhdGVfY3RhX2J1dHRvbiwud3Blc3RhdGVfY3RhX2J1dHRvbjIsYnV0dG9uLndwYl9idG4tbGFyZ2UsIHNwYW4ud3BiX2J0bi1sYXJnZSxzZWxlY3QuZHNpZHgtcmVzcC1zZWxlY3QsLmRzaWR4LXJlc3AtYXJlYSBpbnB1dFt0eXBlPSJ0ZXh0Il0sIC5kc2lkeC1yZXNwLWFyZWEgc2VsZWN0LC5zaWRlYmFyIC5kc2lkeC1yZXNwLWFyZWEtc3VibWl0IGlucHV0W3R5cGU9InN1Ym1pdCJdLCAuZHNpZHgtcmVzcC12ZXJ0aWNhbCAuZHNpZHgtcmVzcC1hcmVhLXN1Ym1pdCBpbnB1dFt0eXBlPSJzdWJtaXQiXSwgLnNhdmVkX3NlYXJjaF93cmFwcGVyLC5zZWFyY2hfdW5pdF93cmFwcGVyLC5mcm9udF9wbGFuX3JvdywuZnJvbnRfcGxhbl9yb3dfaW1hZ2UsI2Zsb29yX3N1Ym1pdCwubWFuYWdlX2Zsb29yLCNzZWFyY2hfZm9ybV9zdWJtaXRfMSwuZHJvcGRvd24tbWVudSwud3BjZjctZm9ybSBpbnB1dFt0eXBlPSJzdWJtaXQiXSwucGFuZWwtZ3JvdXAgLnBhbmVsLC5sYWJlbCwuZmVhdHVyZWRfdGl0bGUsLmZlYXR1cmVkX3NlY29uZF9saW5lLC50cmFuc3BhcmVudC13cmFwcGVyLC53cHJlc2lkZW5jZV9idXR0b24sLnRvb2x0aXAtaW5uZXIsLmxpc3Rpbmdfd3JhcHBlci5jb2wtbWQtMTIgLnByb3BlcnR5X2xpc3Rpbmc+aW1nLCNmYWNlYm9va2xvZ2luLCAjZmFjZWJvb2tsb2dpbnNpZGViYXJfbW9iaWxlLCAjZmFjZWJvb2tsb2dpbnNpZGViYXJfdG9wYmFyLCAjZmFjZWJvb2tsb2dpbnNpZGViYXIsI2dvb2dsZWxvZ2luLCAjZ29vZ2xlbG9naW5zaWRlYmFyX21vYmlsZSwgI2dvb2dsZWxvZ2luc2lkZWJhcl90b3BiYXIsICNnb29nbGVsb2dpbnNpZGViYXIsI3lhaG9vbG9naW4sICN0d2l0dGVybG9naW5zaWRlYmFyX21vYmlsZSwgI3R3aXR0ZXJsb2dpbnNpZGViYXJfdG9wYmFyLCAjdHdpdHRlcmxvZ2luc2lkZWJhciwjbmV3X3Bvc3Qgc2VsZWN0LGJ1dHRvbi5zbGljay1wcmV2LnNsaWNrLWFycm93LGJ1dHRvbi5zbGljay1uZXh0LnNsaWNrLWFycm93LCNwaWNrX3BhY2ssLnNpbmdsZS1lc3RhdGVfcHJvcGVydHkgLmxpc3RpbmctY29udGVudCAuYWdlbnRfY29udGFuY3RfZm9ybSwucHJvcGVydHlfcmV2aWV3c193cmFwcGVyLC5ub3RpY2VfYXJlYSwubXVsdGlfdW5pdHNfd3JhcHBlciwuc3VidW5pdF93cmFwcGVyLC5zdWJ1bml0X3RodW1iIGltZywuc2luZ2xlLWNvbnRlbnQuc2luZ2xlLWFnZW50LC5jb250YWluZXJfYWdlbnQgLmFnZW50X2NvbnRhbmN0X2Zvcm0sLmFnZW5jeV9jb250YWN0X3dyYXBwZXIsLnNpbmdsZS1lc3RhdGVfYWdlbmN5IC5wcm9wZXJ0eV9yZXZpZXdzX3dyYXBwZXIsLmFnZW5jeV9jb250ZW50X3dyYXBwZXIsLmRldmVsb3Blcl9jb250YWN0X3dyYXBwZXIsLmFnZW5jeV9jb250YWN0X3dyYXBwZXIsLnNpbmdsZS1jb250ZW50LnNpbmdsZS1ibG9nLC5zaW5nbGVfd2lkdGhfYmxvZyAjY29tbWVudHMsICNwcmltYXJ5IC53aWRnZXQtY29udGFpbmVyLCAud2lkZ2V0X2xhdGVzdF9saXN0aW5nX2ltYWdlLCAuZGlyZWN0b3J5X3NpZGViYXJfd3JhcHBlciwgLmZ1bGxfd2lkdGhfaGVhZGVyIC5oZWFkZXJfdHlwZTEuaGVhZGVyX2xlZnQgI2FjY2VzcyB1bCBsaS53aXRoLW1lZ2FtZW51PnVsLnN1Yi1tZW51LC5mdWxsX3dpZHRoX2hlYWRlciAuaGVhZGVyX3R5cGUxLmhlYWRlcl9sZWZ0ICNhY2Nlc3MgdWwgbGkud2l0aC1tZWdhbWVudTpob3Zlcj51bC5zdWItbWVudSwgLmFjdGlvbl90YWdfd3JhcHBlciwgLnJpYmJvbi1pbnNpZGUsIC51bml0X3R5cGUzX2RldGFpbHMsIC5zdWJtaXRfbGlzdGluZywgLnN1Ym1pdF9hY3Rpb24sIC5hZ2VuY3lfdW5pdCwgLm1vZGFsX2xvZ2luX2NvbnRhaW5lciwgLnBhZ2VfdGVtcGxhdGVfbG9hZGVyIC52Y19yb3d7Ym9yZGVyLXJhZGl1czogMjBweDt9LndwZXN0YXRlX3RhYnMgLnVpLXdpZGdldC1jb250ZW50LC5hZ2VudF9jb250YW5jdF9mb3JtIGlucHV0W3R5cGU9InN1Ym1pdCJdLCAuc2luZ2xlLWNvbnRlbnQgaW5wdXRbdHlwZT0ic3VibWl0Il0sYnV0dG9uLndwYl9idG4tbGFyZ2UsIHNwYW4ud3BiX2J0bi1sYXJnZXtib3JkZXItcmFkaXVzOiAyMHB4IWltcG9ydGFudDt9LmNhcm91c2VsLWNvbnRyb2wtdGhlbWUtcHJldiwuY2Fyb3VzZWwtY29udHJvbC10aGVtZS1uZXh0LC5pY29uLWZhdi1vbi1yZW1vdmUsI3RhYl9wcnBnIC50YWItcGFuZSwubmF2LXByZXYtd3JhcHBlciwjYWR2YW5jZWRfc3VibWl0XzI6aG92ZXIsLnBhZ2luYXRpb24gPiBsaTpmaXJzdC1jaGlsZCA+IGEsIC5wYWdpbmF0aW9uID4gbGk6Zmlyc3QtY2hpbGQgPiBzcGFuLC5wYWdpbmF0aW9uIC5yb3VuZHJpZ2h0IGEsIC5wYWdpbmF0aW9uIC5yb3VuZHJpZ2h0IHNwYW4sI3VzZXJfbWVudV9vcGVuLCNhY2Nlc3MgdWwgdWwsLmFkdi1zZWFyY2gtMSwjb3Blbm1hcCwuc2xpZGVyLWNvbnRlbnQsI2FjY2VzcyB1bCBsaS53aXRoLW1lZ2FtZW51PnVsLnN1Yi1tZW51LCNhY2Nlc3MgdWwgbGkud2l0aC1tZWdhbWVudTpob3Zlcj51bC5zdWItbWVudSwud3BiX3RvZ2dsZS53cGVzdGF0ZV90b2dnbGUsLmZlYXR1cmVkX3Byb3BlcnR5LmZlYXR1cmVkX3Byb3BlcnR5X3R5cGUyIGltZywuZmVhdHVyZWRfcHJvcGVydHlfdHlwZTIgLnBsYWNlc19jb3ZlciwuaW5mb19kZXRhaWxzIGltZywgI2Fkdi1zZWFyY2gtaGVhZGVyLTMsI2Fkdi1zZWFyY2gtaGVhZGVyLTEsLnBhZ2UtdGVtcGxhdGUtYWR2YW5jZWRfc2VhcmNoX3Jlc3VsdHMgLndpdGhfc2VhcmNoXzIgI29wZW5tYXAsLmFnZW50cGljdCwjdGFiX3BycGcgbGk6Zmlyc3Qtb2YtdHlwZSwjdGFiX3BycGcgdWwsLnNsaWRlci1wcm9wZXJ0eS1zdGF0dXMsLm5hdi1uZXh0LXdyYXBwZXIsLmFnZW50X3VuaXQgaW1nLC5saXN0aW5nLWNvdmVyLC5wYWdpbmF0aW9uIC5yb3VuZGxlZnQgYSwgLnBhZ2luYXRpb24gLnJvdW5kbGVmdCBzcGFuLC5zbGlkZXItY29udGVudCwucHJvcGVydHlfbGlzdGluZyBpbWcsLmFnZW50X3VuaXRfc29jaWFsX3NpbmdsZSwud3Blc3RhdGVfYWdlbnRfZGV0YWlsc193cmFwcGVyLC53cGVzdGF0ZV9wcm9wZXJ0eV9kZXNjcmlwdGlvbiwuc2luZ2xlLWVzdGF0ZV9wcm9wZXJ0eSAubGlzdGluZy1jb250ZW50IC5hZ2VudF9jb250YW5jdF9mb3JtLC5wcm9wZXJ0eV9yZXZpZXdzX3dyYXBwZXIsI3NjaGVkdWxlX21lZXRpbmcsLmFnZW50X3VuaXRfYnV0dG9uLC5jb250cm9sX3RheF9zaCwuYWR2X2hhbmRsZXIsLmZlYXR1cmVkX3Byb3BlcnR5LmZlYXR1cmVkX3Byb3BlcnR5X3R5cGUze2JvcmRlci10b3AtbGVmdC1yYWRpdXM6IDIwcHg7Ym9yZGVyLXRvcC1yaWdodC1yYWRpdXM6IDIwcHg7Ym9yZGVyLWJvdHRvbS1sZWZ0LXJhZGl1czogMjBweDtib3JkZXItYm90dG9tLXJpZ2h0LXJhZGl1czogMjBweDt9LmZlYXR1cmVkX3Byb3BlcnR5LmZlYXR1cmVkX3Byb3BlcnR5X3R5cGUzIC5mZWF0dXJlZF9pbWcsLmZlYXR1cmVkX3Byb3BlcnR5X3R5cGUzIC5pdGVtLC5zaW5nbGUtZXN0YXRlX2FnZW5jeSAuYWdlbnRfY29udGFuY3RfZm9ybXtib3JkZXItdG9wLWxlZnQtcmFkaXVzOiAyMHB4O2JvcmRlci1ib3R0b20tbGVmdC1yYWRpdXM6IDIwcHg7fS5mZWF0dXJlZF9wcm9wZXJ0eS5mZWF0dXJlZF9wcm9wZXJ0eV90eXBlMyAuZmVhdHVyZWRfc2Vjb25kbGluZXtib3JkZXItdG9wLXJpZ2h0LXJhZGl1czogMjBweDtib3JkZXItYm90dG9tLXJpZ2h0LXJhZGl1czogMjBweDt9LnBhY2stdW5pdCBoNCwudXNlcl9kYXNoYm9hcmRfbGlua3MgYTpmaXJzdC1vZi10eXBlLC5mZWF0dXJlZF9wcm9wZXJ0eS5mZWF0dXJlZF9wcm9wZXJ0eV90eXBlMSAuZmVhdHVyZWRfaW1nLC5mZWF0dXJlZF9wcm9wZXJ0eS5mZWF0dXJlZF9wcm9wZXJ0eV90eXBlMSAuY2Fyb3VzZWwtaW5uZXIsI3ByaW1hcnkgLndpZGdldC1jb250YWluZXIubGF0ZXN0X2xpc3RpbmdzIC53aWRnZXQtdGl0bGUtc2lkZWJhciwuc3ViLW1lbnUgbGk6aG92ZXI6Zmlyc3Qtb2YtdHlwZSwjdXNlcl9tZW51X29wZW4gPiBsaTpmaXJzdC1vZi10eXBlID4gYTpob3ZlciwjZm9yZ290LWRpdi10aXRsZS10b3BiYXIsICNyZWdpc3Rlci1kaXYtdGl0bGUtdG9wYmFyLCAjbG9naW4tZGl2LXRpdGxlLXRvcGJhcntib3JkZXItdG9wLWxlZnQtcmFkaXVzOiAyMHB4O2JvcmRlci10b3AtcmlnaHQtcmFkaXVzOiAyMHB4O30ubGlzdGluZy11bml0LWltZy13cmFwcGVyIHtib3JkZXItdG9wLWxlZnQtcmFkaXVzOiAyMHB4O2JvcmRlci10b3AtcmlnaHQtcmFkaXVzOiAyMHB4O30uZmVhdHVyZWRfc2Vjb25kbGluZSwuZmVhdHVyZWRfcHJvcGVydHlfdHlwZTMgLml0ZW0sI3ByaW1hcnkgLmxhdGVzdF9saXN0aW5ncywjcHJpbWFyeSAubGF0ZXN0X2xpc3RpbmdzIC5vd2wtY2Fyb3VzZWwgLm93bC13cmFwcGVyLW91dGVyLC5zdWItbWVudSBsaTpob3ZlcjpsYXN0LW9mLXR5cGUsI3VzZXJfbWVudV9vcGVuID4gbGk6bGFzdC1vZi10eXBlID4gYTpob3ZlciwubG9naW5fbW9kYWxfY29udHJvbHtib3JkZXItYm90dG9tLWxlZnQtcmFkaXVzOiAyMHB4O2JvcmRlci1ib3R0b20tcmlnaHQtcmFkaXVzOiAyMHB4O30jaW5mb2Nsb3Nlcntib3JkZXItdG9wLXJpZ2h0LXJhZGl1czowcHg7fS5wcm9wZXJ0eS1wYW5lbCAucGFuZWwtaGVhZGluZ3tib3JkZXItYm90dG9tLWxlZnQtcmFkaXVzOiAwcHg7Ym9yZGVyLWJvdHRvbS1yaWdodC1yYWRpdXM6IDBweDt9LnByb3BlcnR5LXBhbmVsIC5wYW5lbC1ib2R5e2JvcmRlci1ib3R0b20tbGVmdC1yYWRpdXM6IDIwcHghaW1wb3J0YW50O2JvcmRlci1ib3R0b20tcmlnaHQtcmFkaXVzOiAyMHB4IWltcG9ydGFudDt9LmFnZW5jeV91bml0LC5tb2RhbF9sb2dpbl9jb250YWluZXJ7b3ZlcmZsb3c6IGhpZGRlbjt9Lmxpc3Rpbmdfd3JhcHBlci5jb2wtbWQtMTIgLmxpc3RpbmctdW5pdC1pbWctd3JhcHBlciwubGlzdGluZ193cmFwcGVyLmNvbC1tZC0xMiA+IC5wcm9wZXJ0eV9saXN0aW5nIC5jYXJvdXNlbC1pbm5lcntib3JkZXItdG9wLWxlZnQtcmFkaXVzOiAyMHB4O2JvcmRlci10b3AtcmlnaHQtcmFkaXVzOiAwcHg7Ym9yZGVyLWJvdHRvbS1sZWZ0LXJhZGl1czogMjBweDtib3JkZXItYm90dG9tLXJpZ2h0LXJhZGl1czogMHB4O30uaXNfYm94ZWQuY29udGFpbmVyLC5jb250ZW50X3dyYXBwZXIsLm1hc3Rlcl9oZWFkZXIsLndpZGUgLnRvcF9iYXIsLmhlYWRlcl90eXBlMiAuaGVhZGVyX3dyYXBwZXJfaW5zaWRlLC5oZWFkZXJfdHlwZTEgLmhlYWRlcl93cmFwcGVyX2luc2lkZSwuc2xpZGVyLWNvbnRlbnQtd3JhcHBlciwjY29sb3Bob24uYm94ZWRfZm9vdGVyLCAjY29sb3Bob24uc3RpY2t5X2Zvb3Rlci5ib3hlZF9mb290ZXIsLm1haW5fd3JhcHBlci5pc19ib3hlZCAjc2VhcmNoX3dyYXBwZXIud2l0aF9zZWFyY2hfZm9ybV9mbG9hdC5zdGlja3lfYWR2e3dpZHRoOjE2MDBweDt9I2Zvb3Rlci13aWRnZXQtYXJlYXttYXgtd2lkdGg6MTYwMHB4O30gLmJsb2dfbGlzdGluZ19pbWFnZXt3aWR0aDoyNSU7fS5wcm9wLWluZm97d2lkdGg6NzUlO30uYWR2NC1ob2xkZXIsLm1haW5fd3JhcHBlci5pc19ib3hlZCAjc2VhcmNoX3dyYXBwZXIsLnBlcnBhY2ssICNkaXJlY3RfcGF5e3dpZHRoOiAxMDAlO30jcmVzdWx0cyB7d2lkdGg6MTI3NnB4O30uYWR2LXNlYXJjaC0xLCNzZWFyY2hfd3JhcHBlci5zZWFyY2hfd3JfMTAgLmFkdi1zZWFyY2gtMXt3aWR0aDoxNTEwcHg7bWF4LXdpZHRoOjE1MTBweCFpbXBvcnRhbnQ7fS5tYWluX3dyYXBwZXIuaXNfYm94ZWQuYWR2LXNlYXJjaC0xe3dpZHRoOjE1ODBweDttYXgtd2lkdGg6MTU4MHB4IWltcG9ydGFudDt9Lm1haW5fd3JhcHBlci5pc19ib3hlZCAjc2VhcmNoX3dyYXBwZXIud2l0aF9zZWFyY2hfZm9ybV9mbG9hdCwjc2VhcmNoX3dyYXBwZXIud2l0aF9zZWFyY2hfZm9ybV9mbG9hdHt3aWR0aDoxNTEwcHg7fS50cmFuc3BhcmVudC13cmFwcGVye3dpZHRoOjE1MTBweDt9LmFkdjEtaG9sZGVyLC53aXRoX3NlYXJjaF9vbl9zdGFydC53aXRob3V0X3NlYXJjaF9mb3JtX2Zsb2F0IC5hZHYxLWhvbGRlciwgLndpdGhfc2VhcmNoX29uX2VuZC53aXRob3V0X3NlYXJjaF9mb3JtX2Zsb2F0IC5hZHYxLWhvbGRlcnsgd2lkdGg6MTMxM3B4O30jZ29vZ2xlX21hcF9wcm9wX2xpc3Rfc2lkZWJhciAuYWR2LXNlYXJjaC0xIC5maWx0ZXJfbWVudXt3aWR0aDoxMDAlO21pbi13aWR0aDoxMDAlO30uc2VhcmNoX3dyXzMjc2VhcmNoX3dyYXBwZXJ7d2lkdGg6MTUxMHB4O30uaGVhZGVyX3dyYXBwZXJfaW5zaWRlLC5zdWJfZm9vdGVyX2NvbnRlbnQsLmdtYXAtY29udHJvbHMsI2Nhcm91c2VsLXByb3BlcnR5LXBhZ2UtaGVhZGVyIC5jYXJvdXNlbC1pbmRpY2F0b3Jze21heC13aWR0aDoxNjAwcHg7fS5nbWFwLWNvbnRyb2xze21hcmdpbi1sZWZ0Oi04MDBweDt9LnNob3J0Y29kZV9zbGlkZXJfbGlzdCBsaSB7bWF4LXdpZHRoOiAyNSU7fUBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogMTYwMHB4KXsuY29udGVudF93cmFwcGVyLCAubWFzdGVyX2hlYWRlciwgLndpZGUgLnRvcF9iYXIsIC5oZWFkZXJfd3JhcHBlcl9pbnNpZGUsIC5zbGlkZXItY29udGVudC13cmFwcGVyLC53aWRlIC50b3BfYmFyLCAudG9wX2JhciwuYWR2LXNlYXJjaC0xe3dpZHRoOiAxMDAlO21heC13aWR0aDoxMDAlO319PC9zdHlsZT4JCTxzdHlsZSB0eXBlPSJ0ZXh0L2NzcyI+LnJlY2VudGNvbW1lbnRzIGF7ZGlzcGxheTppbmxpbmUgIWltcG9ydGFudDtwYWRkaW5nOjAgIWltcG9ydGFudDttYXJnaW46MCAhaW1wb3J0YW50O308L3N0eWxlPgoJCTxtZXRhIG5hbWU9ImdlbmVyYXRvciIgY29udGVudD0iUG93ZXJlZCBieSBXUEJha2VyeSBQYWdlIEJ1aWxkZXIgLSBkcmFnIGFuZCBkcm9wIHBhZ2UgYnVpbGRlciBmb3IgV29yZFByZXNzLiIvPgo8bWV0YSBuYW1lPSJnZW5lcmF0b3IiIGNvbnRlbnQ9IlBvd2VyZWQgYnkgU2xpZGVyIFJldm9sdXRpb24gNS40LjguMyAtIHJlc3BvbnNpdmUsIE1vYmlsZS1GcmllbmRseSBTbGlkZXIgUGx1Z2luIGZvciBXb3JkUHJlc3Mgd2l0aCBjb21mb3J0YWJsZSBkcmFnIGFuZCBkcm9wIGludGVyZmFjZS4iIC8+CjxsaW5rIHJlbD0iaWNvbiIgaHJlZj0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL3dwLWNvbnRlbnQvdXBsb2Fkcy8yMDE5LzA2L0tNSS1sb2dvLUNNSk4tMzZ4MzYucG5nIiBzaXplcz0iMzJ4MzIiIC8+CjxsaW5rIHJlbD0iaWNvbiIgaHJlZj0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL3dwLWNvbnRlbnQvdXBsb2Fkcy8yMDE5LzA2L0tNSS1sb2dvLUNNSk4tMzAweDMwMC5wbmciIHNpemVzPSIxOTJ4MTkyIiAvPgo8bGluayByZWw9ImFwcGxlLXRvdWNoLWljb24tcHJlY29tcG9zZWQiIGhyZWY9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS93cC1jb250ZW50L3VwbG9hZHMvMjAxOS8wNi9LTUktbG9nby1DTUpOLTMwMHgzMDAucG5nIiAvPgo8bWV0YSBuYW1lPSJtc2FwcGxpY2F0aW9uLVRpbGVJbWFnZSIgY29udGVudD0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL3dwLWNvbnRlbnQvdXBsb2Fkcy8yMDE5LzA2L0tNSS1sb2dvLUNNSk4tMzAweDMwMC5wbmciIC8+CjxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij5mdW5jdGlvbiBzZXRSRVZTdGFydFNpemUoZSl7CQkJCQkJCQkJDQoJCQkJCQl0cnl7IGUuYz1qUXVlcnkoZS5jKTt2YXIgaT1qUXVlcnkod2luZG93KS53aWR0aCgpLHQ9OTk5OSxyPTAsbj0wLGw9MCxmPTAscz0wLGg9MDsNCgkJCQkJCQlpZihlLnJlc3BvbnNpdmVMZXZlbHMmJihqUXVlcnkuZWFjaChlLnJlc3BvbnNpdmVMZXZlbHMsZnVuY3Rpb24oZSxmKXtmPmkmJih0PXI9ZixsPWUpLGk+ZiYmZj5yJiYocj1mLG49ZSl9KSx0PnImJihsPW4pKSxmPWUuZ3JpZGhlaWdodFtsXXx8ZS5ncmlkaGVpZ2h0WzBdfHxlLmdyaWRoZWlnaHQscz1lLmdyaWR3aWR0aFtsXXx8ZS5ncmlkd2lkdGhbMF18fGUuZ3JpZHdpZHRoLGg9aS9zLGg9aD4xPzE6aCxmPU1hdGgucm91bmQoaCpmKSwiZnVsbHNjcmVlbiI9PWUuc2xpZGVyTGF5b3V0KXt2YXIgdT0oZS5jLndpZHRoKCksalF1ZXJ5KHdpbmRvdykuaGVpZ2h0KCkpO2lmKHZvaWQgMCE9ZS5mdWxsU2NyZWVuT2Zmc2V0Q29udGFpbmVyKXt2YXIgYz1lLmZ1bGxTY3JlZW5PZmZzZXRDb250YWluZXIuc3BsaXQoIiwiKTtpZiAoYykgalF1ZXJ5LmVhY2goYyxmdW5jdGlvbihlLGkpe3U9alF1ZXJ5KGkpLmxlbmd0aD4wP3UtalF1ZXJ5KGkpLm91dGVySGVpZ2h0KCEwKTp1fSksZS5mdWxsU2NyZWVuT2Zmc2V0LnNwbGl0KCIlIikubGVuZ3RoPjEmJnZvaWQgMCE9ZS5mdWxsU2NyZWVuT2Zmc2V0JiZlLmZ1bGxTY3JlZW5PZmZzZXQubGVuZ3RoPjA/dS09alF1ZXJ5KHdpbmRvdykuaGVpZ2h0KCkqcGFyc2VJbnQoZS5mdWxsU2NyZWVuT2Zmc2V0LDApLzEwMDp2b2lkIDAhPWUuZnVsbFNjcmVlbk9mZnNldCYmZS5mdWxsU2NyZWVuT2Zmc2V0Lmxlbmd0aD4wJiYodS09cGFyc2VJbnQoZS5mdWxsU2NyZWVuT2Zmc2V0LDApKX1mPXV9ZWxzZSB2b2lkIDAhPWUubWluSGVpZ2h0JiZmPGUubWluSGVpZ2h0JiYoZj1lLm1pbkhlaWdodCk7ZS5jLmNsb3Nlc3QoIi5yZXZfc2xpZGVyX3dyYXBwZXIiKS5jc3Moe2hlaWdodDpmfSkJCQkJCQ0KCQkJCQkJfWNhdGNoKGQpe2NvbnNvbGUubG9nKCJGYWlsdXJlIGF0IFByZXNpemUgb2YgU2xpZGVyOiIrZCl9CQkJCQkJDQoJCQkJCX07PC9zY3JpcHQ+Cjxub3NjcmlwdD48c3R5bGUgdHlwZT0idGV4dC9jc3MiPiAud3BiX2FuaW1hdGVfd2hlbl9hbG1vc3RfdmlzaWJsZSB7IG9wYWNpdHk6IDE7IH08L3N0eWxlPjwvbm9zY3JpcHQ+ICAgIAo8L2hlYWQ+CgoKCgoKPGJvZHkgZGF0YS1yc3NzbD0xIGNsYXNzPSJwYWdlLXRlbXBsYXRlIHBhZ2UtdGVtcGxhdGUtYWR2YW5jZWRfc2VhcmNoX3Jlc3VsdHMgcGFnZS10ZW1wbGF0ZS1hZHZhbmNlZF9zZWFyY2hfcmVzdWx0cy1waHAgcGFnZSBwYWdlLWlkLTUgd3BiLWpzLWNvbXBvc2VyIGpzLWNvbXAtdmVyLTYuMC4yIHZjX3Jlc3BvbnNpdmUgZWxlbWVudG9yLWRlZmF1bHQiPiAgCiAgIAoKCjxkaXYgY2xhc3M9Im1vYmlsZXdyYXBwZXIiPgogICAgPGRpdiBjbGFzcz0ic25hcC1kcmF3ZXJzIj4KICAgICAgICA8IS0tIExlZnQgU2lkZWJhci0tPgogICAgICAgIDxkaXYgY2xhc3M9InNuYXAtZHJhd2VyIHNuYXAtZHJhd2VyLWxlZnQiPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJtb2JpbGVtZW51LWNsb3NlIj48aSBjbGFzcz0iZmEgZmEtdGltZXMiPjwvaT48L2Rpdj4KICAgICAgICAgICAgPHVsIGlkPSJtZW51LW1haW4tbWVudSIgY2xhc3M9Im1vYmlsZXgtbWVudSI+PGxpIGlkPSJtZW51LWl0ZW0tMTk3MTQiIGNsYXNzPSJtZW51LWl0ZW0gbWVudS1pdGVtLXR5cGUtcG9zdF90eXBlIG1lbnUtaXRlbS1vYmplY3QtcGFnZSBtZW51LWl0ZW0taG9tZSBtZW51LWl0ZW0tMTk3MTQiPjxhIGhyZWY9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS8iPkFDQ1VFSUw8L2E+PC9saT4KPGxpIGlkPSJtZW51LWl0ZW0tMTk0NDQiIGNsYXNzPSJtZW51LWl0ZW0gbWVudS1pdGVtLXR5cGUtcG9zdF90eXBlIG1lbnUtaXRlbS1vYmplY3QtcGFnZSBtZW51LWl0ZW0tMTk0NDQiPjxhIGhyZWY9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS9sZS1ncm91cGUvIj5MRSBHUk9VUEU8L2E+PC9saT4KPGxpIGlkPSJtZW51LWl0ZW0tMTk0MzgiIGNsYXNzPSJtZW51LWl0ZW0gbWVudS1pdGVtLXR5cGUtcG9zdF90eXBlIG1lbnUtaXRlbS1vYmplY3QtcGFnZSBtZW51LWl0ZW0tMTk0MzgiPjxhIGhyZWY9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS9hY2hldGVyLyI+QUNIRVRFUjwvYT48L2xpPgo8bGkgaWQ9Im1lbnUtaXRlbS0xOTQ0NSIgY2xhc3M9Im1lbnUtaXRlbSBtZW51LWl0ZW0tdHlwZS1wb3N0X3R5cGUgbWVudS1pdGVtLW9iamVjdC1wYWdlIG1lbnUtaXRlbS0xOTQ0NSI+PGEgaHJlZj0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL2xvdWVyLyI+TE9VRVI8L2E+PC9saT4KPGxpIGlkPSJtZW51LWl0ZW0tMTk0NDMiIGNsYXNzPSJtZW51LWl0ZW0gbWVudS1pdGVtLXR5cGUtcG9zdF90eXBlIG1lbnUtaXRlbS1vYmplY3QtcGFnZSBtZW51LWl0ZW0tMTk0NDMiPjxhIGhyZWY9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS9lc3RpbWVyLyI+RVNUSU1FUjwvYT48L2xpPgo8bGkgaWQ9Im1lbnUtaXRlbS0xOTQ0MSIgY2xhc3M9Im1lbnUtaXRlbSBtZW51LWl0ZW0tdHlwZS1wb3N0X3R5cGUgbWVudS1pdGVtLW9iamVjdC1wYWdlIG1lbnUtaXRlbS0xOTQ0MSI+PGEgaHJlZj0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL2JpZW5zLXZlbmR1cy8iPkJJRU5TIFZFTkRVUzwvYT48L2xpPgo8bGkgaWQ9Im1lbnUtaXRlbS0xOTQ0MCIgY2xhc3M9Im1lbnUtaXRlbSBtZW51LWl0ZW0tdHlwZS1wb3N0X3R5cGUgbWVudS1pdGVtLW9iamVjdC1wYWdlIG1lbnUtaXRlbS0xOTQ0MCI+PGEgaHJlZj0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL2F2aXMtY2xpZW50cy8iPkFWSVMgQ0xJRU5UUzwvYT48L2xpPgo8bGkgaWQ9Im1lbnUtaXRlbS0xOTQzOSIgY2xhc3M9Im1lbnUtaXRlbSBtZW51LWl0ZW0tdHlwZS1wb3N0X3R5cGUgbWVudS1pdGVtLW9iamVjdC1wYWdlIG1lbnUtaXRlbS0xOTQzOSI+PGEgaHJlZj0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL2FjdHVhbGl0ZXMvIj5BQ1RVQUxJVMOJUzwvYT48L2xpPgo8bGkgaWQ9Im1lbnUtaXRlbS0xOTQ0MiIgY2xhc3M9Im1lbnUtaXRlbSBtZW51LWl0ZW0tdHlwZS1wb3N0X3R5cGUgbWVudS1pdGVtLW9iamVjdC1wYWdlIG1lbnUtaXRlbS0xOTQ0MiI+PGEgaHJlZj0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL2NvbnRhY3QvIj5DT05UQUNUPC9hPjwvbGk+CjwvdWw+ICAgICAgICA8L2Rpdj4KICAgIDwvZGl2Pgo8L2Rpdj4KCgo8ZGl2IGNsYXNzPSJtb2JpbGV3cmFwcGVyLXVzZXIiPgogICAgPGRpdiBjbGFzcz0ic25hcC1kcmF3ZXJzIj4KICAgICAgICA8IS0tIExlZnQgU2lkZWJhci0tPgogICAgICAgIDxkaXYgY2xhc3M9InNuYXAtZHJhd2VyIHNuYXAtZHJhd2VyLXJpZ2h0Ij4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ibW9iaWxlbWVudS1jbG9zZS11c2VyIj48aSBjbGFzcz0iZmEgZmEtdGltZXMiPjwvaT48L2Rpdj4KICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ibG9naW5fc2lkZWJhciI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aDMgIGlkPSJsb2dpbi1kaXYtdGl0bGUtbW9iaWxlIj5TJiMwMzk7aWRlbnRpZmllcjwvaDM+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJsb2dpbl9mb3JtIiBpZD0ibG9naW4tZGl2X21vYmlsZSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ibG9naW5hbGVydCIgaWQ9ImxvZ2luX21lc3NhZ2VfYXJlYV9tb2JpbGUiID4gPC9kaXY+CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJ0ZXh0IiBjbGFzcz0iZm9ybS1jb250cm9sIiBuYW1lPSJsb2ciIGlkPSJsb2dpbl91c2VyX21vYmlsZSIgcGxhY2Vob2xkZXI9Ik5vbSBkJiMwMzk7dXRpbGlzYXRldXIiLz4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0icGFzc3dvcmQiIGNsYXNzPSJmb3JtLWNvbnRyb2wiIG5hbWU9InB3ZCIgaWQ9ImxvZ2luX3B3ZF9tb2JpbGUiIHBsYWNlaG9sZGVyPSJNb3QgZGUgcGFzc2UiLz4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0iaGlkZGVuIiBuYW1lPSJsb2dpbnBvcCIgaWQ9ImxvZ2lucG9wX3dkX21vYmlsZSIgdmFsdWU9IjAiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJoaWRkZW4iIGlkPSJzZWN1cml0eS1sb2dpbi1tb2JpbGUiIG5hbWU9InNlY3VyaXR5LWxvZ2luLW1vYmlsZSIgdmFsdWU9ImM5Njk5OGE2MTEtMTU4NTc1MTcxMyI+CiAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz0id3ByZXNpZGVuY2VfYnV0dG9uIiBpZD0id3AtbG9naW4tYnV0LW1vYmlsZSI+UyYjMDM5O2lkZW50aWZpZXI8L2J1dHRvbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJsb2dpbi1saW5rcyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9IiMiIGlkPSJ3aWRnZXRfcmVnaXN0ZXJfbW9iaWxlIj5CZXNvaW4gZCYjMDM5O3VuIGNvbXB0ZT8gSW5zY3JpdmV6LXZvdXMgaWNpITwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iIyIgaWQ9ImZvcmdvdF9wYXNzX21vYmlsZSI+TW90IGRlIHBhc3NlIG91Ymxpw6k/PC9hPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PiAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGgzICAgaWQ9InJlZ2lzdGVyLWRpdi10aXRsZS1tb2JpbGUiPnJlZ2lzdHJlPC9oMz4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImxvZ2luX2Zvcm0iIGlkPSJyZWdpc3Rlci1kaXYtbW9iaWxlIj4KCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ibG9naW5hbGVydCIgaWQ9InJlZ2lzdGVyX21lc3NhZ2VfYXJlYV9tb2JpbGUiID48L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0idGV4dCIgbmFtZT0idXNlcl9sb2dpbl9yZWdpc3RlciIgaWQ9InVzZXJfbG9naW5fcmVnaXN0ZXJfbW9iaWxlIiBjbGFzcz0iZm9ybS1jb250cm9sIiBwbGFjZWhvbGRlcj0iTm9tIGQmIzAzOTt1dGlsaXNhdGV1ciIvPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJ0ZXh0IiBuYW1lPSJ1c2VyX2VtYWlsX3JlZ2lzdGVyIiBpZD0idXNlcl9lbWFpbF9yZWdpc3Rlcl9tb2JpbGUiIGNsYXNzPSJmb3JtLWNvbnRyb2wiIHBsYWNlaG9sZGVyPSJFbWFpbCIgIC8+CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0icGFzc3dvcmQiIG5hbWU9InVzZXJfcGFzc3dvcmQiIGlkPSJ1c2VyX3Bhc3N3b3JkX21vYmlsZSIgY2xhc3M9ImZvcm0tY29udHJvbCIgcGxhY2Vob2xkZXI9Ik1vdCBkZSBwYXNzZSIvPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0icGFzc3dvcmQiIG5hbWU9InVzZXJfcGFzc3dvcmRfcmV0eXBlIiBpZD0idXNlcl9wYXNzd29yZF9tb2JpbGVfcmV0eXBlIiBjbGFzcz0iZm9ybS1jb250cm9sIiBwbGFjZWhvbGRlcj0iUmV0YXBlciBsZSBtb3QgZGUgcGFzc2UiICAvPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9ImNoZWNrYm94IiBuYW1lPSJ0ZXJtcyIgaWQ9InVzZXJfdGVybXNfcmVnaXN0ZXJfbW9iaWxlIiAvPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBpZD0idXNlcl90ZXJtc19yZWdpc3Rlcl9tb2JpbGVfbGFiZWwiIGZvcj0idXNlcl90ZXJtc19yZWdpc3Rlcl9tb2JpbGUiPmplIHN1aXMgZCYjMDM5O2FjY29yZCBhdmVjPGEgaHJlZj0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL21lbnRpb25zLWxlZ2FsZXMvICIgdGFyZ2V0PSJfYmxhbmsiIGlkPSJ1c2VyX3Rlcm1zX3JlZ2lzdGVyX21vYmlsZV9saW5rIj50ZXJtZXMgZXQgY29uZGl0aW9uczwvYT4gPC9sYWJlbD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJoaWRkZW4iIGlkPSJzZWN1cml0eS1yZWdpc3Rlci1tb2JpbGUiIG5hbWU9InNlY3VyaXR5LXJlZ2lzdGVyLW1vYmlsZSIgdmFsdWU9Ijc1ZWJkOTI1ZTItMTU4NTc1MTcxMyI+CiAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxidXR0b24gY2xhc3M9IndwcmVzaWRlbmNlX2J1dHRvbiIgaWQ9IndwLXN1Ym1pdC1yZWdpc3Rlcl9tb2JpbGUiID5yZWdpc3RyZTwvYnV0dG9uPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImxvZ2luLWxpbmtzIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iIyIgaWQ9IndpZGdldF9sb2dpbl9tb2JpbGUiPlJldG91ciBjb25uZXhpb248L2E+ICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4gICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxoMyAgaWQ9ImZvcmdvdC1kaXYtdGl0bGUtbW9iaWxlIj5yw6lpbml0aWFsaXNlciBsZSBtb3QgZGUgcGFzc2U8L2gzPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ibG9naW5fZm9ybSIgaWQ9ImZvcmdvdC1wYXNzLWRpdi1tb2JpbGUiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImxvZ2luYWxlcnQiIGlkPSJmb3Jnb3RfcGFzc19hcmVhX21vYmlsZSI+PC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ibG9naW5yb3ciPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9InRleHQiIGNsYXNzPSJmb3JtLWNvbnRyb2wiIG5hbWU9ImZvcmdvdF9lbWFpbCIgaWQ9ImZvcmdvdF9lbWFpbF9tb2JpbGUiIHBsYWNlaG9sZGVyPSJFbnRyZXogdm90cmUgYWRyZXNzZSBlbWFpbCIgc2l6ZT0iMjAiIC8+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9ImhpZGRlbiIgaWQ9InNlY3VyaXR5LWZvcmdvdC1tb2JpbGUiIG5hbWU9InNlY3VyaXR5LWZvcmdvdC1tb2JpbGUiIHZhbHVlPSI2OWFlNTJkOTQ2IiAvPjxpbnB1dCB0eXBlPSJoaWRkZW4iIG5hbWU9Il93cF9odHRwX3JlZmVyZXIiIHZhbHVlPSIvcmVjaGVyY2hlLWF2YW5jZWUvcGFnZS8xP2FkdmFuY2VkX2NpdHk9cGFyaXMtMiZhbXA7Y2hhbWJyZXMtbWluJmFtcDtzdXJmYWNlLW1pbiZhbXA7YnVkZ2V0LW1heCZhbXA7c3VibWl0PVJFQ0hFUkNIRVImYW1wO3dwZXN0YXRlX3JlZ3VsYXJfc2VhcmNoX25vbmNlPTBjYzM2ZGE1OTcmYW1wO193cF9odHRwX3JlZmVyZXI9JTJGYWNoZXRlciUyRiIgLz4gICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0iaGlkZGVuIiBpZD0icG9zdGlkLW1vYmlsZSIgdmFsdWU9IiI+ICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxidXR0b24gY2xhc3M9IndwcmVzaWRlbmNlX2J1dHRvbiIgaWQ9IndwLWZvcmdvdC1idXQtbW9iaWxlIiBuYW1lPSJmb3Jnb3QiID5yw6lpbml0aWFsaXNlciBsZSBtb3QgZGUgcGFzc2U8L2J1dHRvbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJsb2dpbi1saW5rcyBzaG9ydGxvZyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iIyIgaWQ9InJldHVybl9sb2dpbl9tb2JpbGUiPlJldG91ciDDoCBsYSBjb25uZXhpb248L2E+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KCgogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgIDwvZGl2PgogICAgPC9kaXY+CjwvZGl2PiAKICAgIAo8ZGl2IGNsYXNzPSJ3ZWJzaXRlLXdyYXBwZXIiIGlkPSJhbGxfd3JhcHBlciIgPgo8ZGl2IGNsYXNzPSJjb250YWluZXIgbWFpbl93cmFwcGVyICB3aWRlIGhhc19oZWFkZXJfdHlwZTEgY29udGVudGhlYWRlcl9jZW50ZXIgY2hlYWRlcl9jZW50ZXIgIj4KCiAgICA8ZGl2IGNsYXNzPSJtYXN0ZXJfaGVhZGVyICB3aWRlICAgIj4KICAgICAgICAKICAgICAgICA8ZGl2IGNsYXNzPSJtb2JpbGVfaGVhZGVyIj4KICAgIDxkaXYgY2xhc3M9Im1vYmlsZS10cmlnZ2VyIj48aSBjbGFzcz0iIGZhIGZhLWJhcnMiPjwvaT48L2Rpdj4KICAgIDxkaXYgY2xhc3M9Im1vYmlsZS1sb2dvIj4KICAgICAgICA8YSBocmVmPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20iPgogICAgICAgIDxpbWcgc3JjPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vd3AtY29udGVudC91cGxvYWRzLzIwMTkvMDYvS01JLWxvZ28tQ01KTi5wbmciIGNsYXNzPSJpbWctcmVzcG9uc2l2ZSByZXRpbmFfcmVhZHkgIiBhbHQ9ImltYWdlIi8+ICAgICAgICA8L2E+CiAgICA8L2Rpdj4gIAogICAgCiAgICAgICAgICAgIDxkaXYgY2xhc3M9Im1vYmlsZS10cmlnZ2VyLXVzZXIiPgogICAgICAgICAgICAgPGkgY2xhc3M9IiBmYSBmYS1jb2dzIj48L2k+ICAgICAgICAgICAKICAgICAgICA8L2Rpdj4KICAgIDwvZGl2PiAgICAgICAKICAgICAgICAKICAgICAgICA8ZGl2IGNsYXNzPSJoZWFkZXJfd3JhcHBlciAgaGVhZGVyX3R5cGUxIGhlYWRlcl9jZW50ZXIgaG92ZXJfdHlwZV8zIGhlYWRlcl9hbGlnbm1lbnRfdGV4dF9sZWZ0IG5vX3Byb3BlcnR5X3N1Ym1pdCAiPgogICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgPGRpdiBjbGFzcz0iaGVhZGVyX3dyYXBwZXJfaW5zaWRlICIgZGF0YS1sb2dvPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vd3AtY29udGVudC91cGxvYWRzLzIwMTkvMDYvbG9nb3JldDEucG5nIiBkYXRhLXN0aWNreS1sb2dvPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vd3AtY29udGVudC91cGxvYWRzLzIwMTkvMDYvbG9nb3N0aWNrMS5wbmciPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJsb2dvIiA+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tIj4KICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgPGltZyBpZD0ibG9nb19pbWFnZSIgc3R5bGU9Im1hcmdpbi10b3A6MHB4OyIgc3JjPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vd3AtY29udGVudC91cGxvYWRzLzIwMTkvMDYvbG9nb3JldDEucG5nIiBjbGFzcz0iaW1nLXJlc3BvbnNpdmUgcmV0aW5hX3JlYWR5IiBhbHQ9ImNvbXBhbnkgbG9nbyIvPiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgPC9kaXY+ICAgCgogICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgCiAgIAogICAgPGRpdiBjbGFzcz0idXNlcl9tZW51IHVzZXJfbm90X2xvZ2VkIiBpZD0idXNlcl9tZW51X3UiPiAgIAogICAgICAgIDxhIGNsYXNzPSJtZW51X3VzZXJfdG9vbHMgZHJvcGRvd24iIGlkPSJ1c2VyX21lbnVfdHJpZ2dlciIgZGF0YS10b2dnbGU9ImRyb3Bkb3duIj4gIAogICAgICAgICAgICA8YSBjbGFzcz0ibmF2aWNvbi1idXR0b24gbmF2LW5vdGxvZyB4Ij4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Im5hdmljb24iPjwvZGl2PgogICAgICAgICAgICA8L2E+CiAgICAgICAgICAgCiAgICAgICAgPGRpdiBjbGFzcz0ic3VibWl0X2FjdGlvbiI+CiAgICAgICAgIDxpIGNsYXNzPSJkZW1vLWljb24gaWNvbi1sb2NrLTEiPjwvaT4KCiAgICAgICAgCiAgICAgICAgPC9kaXY+CiAgIAogICAgICAgICAgICAgICAgICAKICAgIDwvZGl2PiAKICAgICAgICAKICAgICAgICAKICAgIAogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxuYXYgaWQ9ImFjY2VzcyI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Im1lbnUtbWFpbi1jb250YWluZXIiPjx1bCBpZD0ibWVudS1tYWluIiBjbGFzcz0ibWVudSI+PGxpIGlkPSJtZW51LWl0ZW0tMTk3MTQiIGNsYXNzPSJtZW51LWl0ZW0gbWVudS1pdGVtLXR5cGUtcG9zdF90eXBlIG1lbnUtaXRlbS1vYmplY3QtcGFnZSBtZW51LWl0ZW0taG9tZSBuby1tZWdhbWVudSAgICI+PGEgY2xhc3M9Im1lbnUtaXRlbS1saW5rIiAgaHJlZj0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tLyI+QUNDVUVJTDwvYT48L2xpPgo8bGkgaWQ9Im1lbnUtaXRlbS0xOTQ0NCIgY2xhc3M9Im1lbnUtaXRlbSBtZW51LWl0ZW0tdHlwZS1wb3N0X3R5cGUgbWVudS1pdGVtLW9iamVjdC1wYWdlIG5vLW1lZ2FtZW51ICAgIj48YSBjbGFzcz0ibWVudS1pdGVtLWxpbmsiICBocmVmPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vbGUtZ3JvdXBlLyI+TEUgR1JPVVBFPC9hPjwvbGk+CjxsaSBpZD0ibWVudS1pdGVtLTE5NDM4IiBjbGFzcz0ibWVudS1pdGVtIG1lbnUtaXRlbS10eXBlLXBvc3RfdHlwZSBtZW51LWl0ZW0tb2JqZWN0LXBhZ2Ugbm8tbWVnYW1lbnUgICAiPjxhIGNsYXNzPSJtZW51LWl0ZW0tbGluayIgIGhyZWY9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS9hY2hldGVyLyI+QUNIRVRFUjwvYT48L2xpPgo8bGkgaWQ9Im1lbnUtaXRlbS0xOTQ0NSIgY2xhc3M9Im1lbnUtaXRlbSBtZW51LWl0ZW0tdHlwZS1wb3N0X3R5cGUgbWVudS1pdGVtLW9iamVjdC1wYWdlIG5vLW1lZ2FtZW51ICAgIj48YSBjbGFzcz0ibWVudS1pdGVtLWxpbmsiICBocmVmPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vbG91ZXIvIj5MT1VFUjwvYT48L2xpPgo8bGkgaWQ9Im1lbnUtaXRlbS0xOTQ0MyIgY2xhc3M9Im1lbnUtaXRlbSBtZW51LWl0ZW0tdHlwZS1wb3N0X3R5cGUgbWVudS1pdGVtLW9iamVjdC1wYWdlIG5vLW1lZ2FtZW51ICAgIj48YSBjbGFzcz0ibWVudS1pdGVtLWxpbmsiICBocmVmPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vZXN0aW1lci8iPkVTVElNRVI8L2E+PC9saT4KPGxpIGlkPSJtZW51LWl0ZW0tMTk0NDEiIGNsYXNzPSJtZW51LWl0ZW0gbWVudS1pdGVtLXR5cGUtcG9zdF90eXBlIG1lbnUtaXRlbS1vYmplY3QtcGFnZSBuby1tZWdhbWVudSAgICI+PGEgY2xhc3M9Im1lbnUtaXRlbS1saW5rIiAgaHJlZj0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL2JpZW5zLXZlbmR1cy8iPkJJRU5TIFZFTkRVUzwvYT48L2xpPgo8bGkgaWQ9Im1lbnUtaXRlbS0xOTQ0MCIgY2xhc3M9Im1lbnUtaXRlbSBtZW51LWl0ZW0tdHlwZS1wb3N0X3R5cGUgbWVudS1pdGVtLW9iamVjdC1wYWdlIG5vLW1lZ2FtZW51ICAgIj48YSBjbGFzcz0ibWVudS1pdGVtLWxpbmsiICBocmVmPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vYXZpcy1jbGllbnRzLyI+QVZJUyBDTElFTlRTPC9hPjwvbGk+CjxsaSBpZD0ibWVudS1pdGVtLTE5NDM5IiBjbGFzcz0ibWVudS1pdGVtIG1lbnUtaXRlbS10eXBlLXBvc3RfdHlwZSBtZW51LWl0ZW0tb2JqZWN0LXBhZ2Ugbm8tbWVnYW1lbnUgICAiPjxhIGNsYXNzPSJtZW51LWl0ZW0tbGluayIgIGhyZWY9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS9hY3R1YWxpdGVzLyI+QUNUVUFMSVTDiVM8L2E+PC9saT4KPGxpIGlkPSJtZW51LWl0ZW0tMTk0NDIiIGNsYXNzPSJtZW51LWl0ZW0gbWVudS1pdGVtLXR5cGUtcG9zdF90eXBlIG1lbnUtaXRlbS1vYmplY3QtcGFnZSBuby1tZWdhbWVudSAgICI+PGEgY2xhc3M9Im1lbnUtaXRlbS1saW5rIiAgaHJlZj0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL2NvbnRhY3QvIj5DT05UQUNUPC9hPjwvbGk+CjwvdWw+PC9kaXY+ICAgICAgICAgICAgICAgICAgICA8L25hdj48IS0tICNhY2Nlc3MgLS0+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KCiAgICAgPC9kaXY+IAogICAgCiAgICAKPGRpdiBjbGFzcz0iaGVhZGVyX21lZGlhIHdpdGhfc2VhcmNoXzEiPgogICAKICAgIAogICAgCiAgICA8L2Rpdj4KCiAgICA8ZGl2IGlkPSJhZHYtc2VhcmNoLWhlYWRlci1tb2JpbGUiPiAKICAgICAgICA8aSBjbGFzcz0iZmEgZmEtc2VhcmNoIj48L2k+ICAKICAgICAgICBSZWNoZXJjaGUgQXZhbmPDqWUgCiAgICA8L2Rpdj4gICAKCgogICAgPGRpdiBjbGFzcz0iYWR2LXNlYXJjaC1tb2JpbGUiICBpZD0iYWR2LXNlYXJjaC1tb2JpbGUiPiAKCiAgICAgICAgPGZvcm0gcm9sZT0ic2VhcmNoIiBtZXRob2Q9ImdldCIgICBhY3Rpb249Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS9yZWNoZXJjaGUtYXZhbmNlZS8iID4KCiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImRyb3Bkb3duIGZvcm0tY29udHJvbCAiPgogICAgICAgIDxkaXYgZGF0YS10b2dnbGU9ImRyb3Bkb3duIiBpZD0ibW9iaWxlLWFkdmFuY2VkX2NpdHkiIGNsYXNzPSIgZmlsdGVyX21lbnVfdHJpZ2dlciAgIiB4eCBQYXJpcyBQYXJpcyBkYXRhLXZhbHVlPSJQYXJpcyI+UGFyaXMKICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImNhcmV0ICBjYXJldF9maWx0ZXIgIj48L3NwYW4+CiAgICAgICAgICAgIDwvZGl2PiA8aW5wdXQgdHlwZT0iaGlkZGVuIiBuYW1lPSJhZHZhbmNlZF9jaXR5IiB2YWx1ZT0icGFyaXMtMiI+CiAgICAgICAgICAgICAgICA8dWwgIGlkPSJtb2JpbGUtYWR2LXNlYXJjaC1jaXR5IiBjbGFzcz0iZHJvcGRvd24tbWVudSBmaWx0ZXJfbWVudSIgcm9sZT0ibWVudSIgYXJpYS1sYWJlbGxlZGJ5PSJtb2JpbGUtYWR2YW5jZWRfY2l0eSI+CiAgICAgICAgICAgICAgICAgICAgPGxpIHJvbGU9InByZXNlbnRhdGlvbiIgZGF0YS12YWx1ZT0iYWxsIiBkYXRhLXZhbHVlMj0iYWxsIj5WaWxsZXM8L2xpPjxsaSByb2xlPSJwcmVzZW50YXRpb24iIGRhdGEtdmFsdWU9ImFudG9ueSIgZGF0YS12YWx1ZTI9ImFudG9ueSIgZGF0YS1wYXJlbnRjb3VudHk9IiI+QW50b255ICgyKTwvbGk+PGxpIHJvbGU9InByZXNlbnRhdGlvbiIgZGF0YS12YWx1ZT0iOTIxNjAiICAgZGF0YS1wYXJlbnRjb3VudHk9IiIgZGF0YS12YWx1ZTI9IjkyMTYwIiAgID4gLSA5MjE2MCAoMSk8L2xpPjxsaSByb2xlPSJwcmVzZW50YXRpb24iIGRhdGEtdmFsdWU9ImFzbmllcmVzLXN1ci1zZWluZSIgZGF0YS12YWx1ZTI9ImFzbmllcmVzLXN1ci1zZWluZSIgZGF0YS1wYXJlbnRjb3VudHk9IiI+QXNuacOocmVzLXN1ci1TZWluZSAoMik8L2xpPjxsaSByb2xlPSJwcmVzZW50YXRpb24iIGRhdGEtdmFsdWU9IjkyNjAwIiAgIGRhdGEtcGFyZW50Y291bnR5PSIiIGRhdGEtdmFsdWUyPSI5MjYwMCIgICA+IC0gOTI2MDAgKDEpPC9saT48bGkgcm9sZT0icHJlc2VudGF0aW9uIiBkYXRhLXZhbHVlPSJiYWdub2xldCIgZGF0YS12YWx1ZTI9ImJhZ25vbGV0IiBkYXRhLXBhcmVudGNvdW50eT0iIj5CYWdub2xldCAoMTgpPC9saT48bGkgcm9sZT0icHJlc2VudGF0aW9uIiBkYXRhLXZhbHVlPSI5MzE3MCIgICBkYXRhLXBhcmVudGNvdW50eT0iIiBkYXRhLXZhbHVlMj0iOTMxNzAiICAgPiAtIDkzMTcwICg5KTwvbGk+PGxpIHJvbGU9InByZXNlbnRhdGlvbiIgZGF0YS12YWx1ZT0iY29sb21iZXMiIGRhdGEtdmFsdWUyPSJjb2xvbWJlcyIgZGF0YS1wYXJlbnRjb3VudHk9IiI+Q29sb21iZXMgKDIpPC9saT48bGkgcm9sZT0icHJlc2VudGF0aW9uIiBkYXRhLXZhbHVlPSI5MjcwMCIgICBkYXRhLXBhcmVudGNvdW50eT0iIiBkYXRhLXZhbHVlMj0iOTI3MDAiICAgPiAtIDkyNzAwICgxKTwvbGk+PGxpIHJvbGU9InByZXNlbnRhdGlvbiIgZGF0YS12YWx1ZT0iaXZyeS1zdXItc2VpbmUiIGRhdGEtdmFsdWUyPSJpdnJ5LXN1ci1zZWluZSIgZGF0YS1wYXJlbnRjb3VudHk9IiI+SXZyeS1zdXItU2VpbmUgKDIpPC9saT48bGkgcm9sZT0icHJlc2VudGF0aW9uIiBkYXRhLXZhbHVlPSI5NDIwMCIgICBkYXRhLXBhcmVudGNvdW50eT0iIiBkYXRhLXZhbHVlMj0iOTQyMDAiICAgPiAtIDk0MjAwICgxKTwvbGk+PGxpIHJvbGU9InByZXNlbnRhdGlvbiIgZGF0YS12YWx1ZT0ianVhbi1sZXMtcGlucyIgZGF0YS12YWx1ZTI9Imp1YW4tbGVzLXBpbnMiIGRhdGEtcGFyZW50Y291bnR5PSIiPkp1YW4tbGVzLVBpbnMgKDIpPC9saT48bGkgcm9sZT0icHJlc2VudGF0aW9uIiBkYXRhLXZhbHVlPSIwNjE2MCIgICBkYXRhLXBhcmVudGNvdW50eT0iIiBkYXRhLXZhbHVlMj0iMDYxNjAiICAgPiAtIDA2MTYwICgxKTwvbGk+PGxpIHJvbGU9InByZXNlbnRhdGlvbiIgZGF0YS12YWx1ZT0ibGUtcHJlLXNhaW50LWdlcnZhaXMiIGRhdGEtdmFsdWUyPSJsZS1wcmUtc2FpbnQtZ2VydmFpcyIgZGF0YS1wYXJlbnRjb3VudHk9IiI+TGUgUHLDqS1TYWludC1HZXJ2YWlzICg0KTwvbGk+PGxpIHJvbGU9InByZXNlbnRhdGlvbiIgZGF0YS12YWx1ZT0iOTMzMTAiICAgZGF0YS1wYXJlbnRjb3VudHk9IiIgZGF0YS12YWx1ZTI9IjkzMzEwIiAgID4gLSA5MzMxMCAoMik8L2xpPjxsaSByb2xlPSJwcmVzZW50YXRpb24iIGRhdGEtdmFsdWU9Imxlcy1saWxhcy0yIiBkYXRhLXZhbHVlMj0ibGVzLWxpbGFzLTIiIGRhdGEtcGFyZW50Y291bnR5PSIiPkxlcyBMaWxhcyAoMTQpPC9saT48bGkgcm9sZT0icHJlc2VudGF0aW9uIiBkYXRhLXZhbHVlPSI5MzI2MCIgICBkYXRhLXBhcmVudGNvdW50eT0iIiBkYXRhLXZhbHVlMj0iOTMyNjAiICAgPiAtIDkzMjYwICg3KTwvbGk+PGxpIHJvbGU9InByZXNlbnRhdGlvbiIgZGF0YS12YWx1ZT0ibW9udHJldWlsIiBkYXRhLXZhbHVlMj0ibW9udHJldWlsIiBkYXRhLXBhcmVudGNvdW50eT0iIj5Nb250cmV1aWwgKDI2KTwvbGk+PGxpIHJvbGU9InByZXNlbnRhdGlvbiIgZGF0YS12YWx1ZT0iOTMxMDAiICAgZGF0YS1wYXJlbnRjb3VudHk9IiIgZGF0YS12YWx1ZTI9IjkzMTAwIiAgID4gLSA5MzEwMCAoMTMpPC9saT48bGkgcm9sZT0icHJlc2VudGF0aW9uIiBkYXRhLXZhbHVlPSJwYW50aW4iIGRhdGEtdmFsdWUyPSJwYW50aW4iIGRhdGEtcGFyZW50Y291bnR5PSIiPlBhbnRpbiAoMik8L2xpPjxsaSByb2xlPSJwcmVzZW50YXRpb24iIGRhdGEtdmFsdWU9IjkzNTAwIiAgIGRhdGEtcGFyZW50Y291bnR5PSIiIGRhdGEtdmFsdWUyPSI5MzUwMCIgICA+IC0gOTM1MDAgKDEpPC9saT48bGkgcm9sZT0icHJlc2VudGF0aW9uIiBkYXRhLXZhbHVlPSJwYXJpcy0yIiBkYXRhLXZhbHVlMj0icGFyaXMtMiIgZGF0YS1wYXJlbnRjb3VudHk9IiI+UGFyaXMgKDMwNik8L2xpPjxsaSByb2xlPSJwcmVzZW50YXRpb24iIGRhdGEtdmFsdWU9Ijc1MDAyIiAgIGRhdGEtcGFyZW50Y291bnR5PSIiIGRhdGEtdmFsdWUyPSI3NTAwMiIgICA+IC0gNzUwMDIgKDEpPC9saT48bGkgcm9sZT0icHJlc2VudGF0aW9uIiBkYXRhLXZhbHVlPSI3NTAwMyIgICBkYXRhLXBhcmVudGNvdW50eT0iIiBkYXRhLXZhbHVlMj0iNzUwMDMiICAgPiAtIDc1MDAzICgyKTwvbGk+PGxpIHJvbGU9InByZXNlbnRhdGlvbiIgZGF0YS12YWx1ZT0iNzUwMDYiICAgZGF0YS1wYXJlbnRjb3VudHk9IiIgZGF0YS12YWx1ZTI9Ijc1MDA2IiAgID4gLSA3NTAwNiAoMSk8L2xpPjxsaSByb2xlPSJwcmVzZW50YXRpb24iIGRhdGEtdmFsdWU9Ijc1MDA4IiAgIGRhdGEtcGFyZW50Y291bnR5PSIiIGRhdGEtdmFsdWUyPSI3NTAwOCIgICA+IC0gNzUwMDggKDEpPC9saT48bGkgcm9sZT0icHJlc2VudGF0aW9uIiBkYXRhLXZhbHVlPSI3NTAxMCIgICBkYXRhLXBhcmVudGNvdW50eT0iIiBkYXRhLXZhbHVlMj0iNzUwMTAiICAgPiAtIDc1MDEwICgxMik8L2xpPjxsaSByb2xlPSJwcmVzZW50YXRpb24iIGRhdGEtdmFsdWU9Ijc1MDExIiAgIGRhdGEtcGFyZW50Y291bnR5PSIiIGRhdGEtdmFsdWUyPSI3NTAxMSIgICA+IC0gNzUwMTEgKDMwKTwvbGk+PGxpIHJvbGU9InByZXNlbnRhdGlvbiIgZGF0YS12YWx1ZT0iNzUwMTIiICAgZGF0YS1wYXJlbnRjb3VudHk9IiIgZGF0YS12YWx1ZTI9Ijc1MDEyIiAgID4gLSA3NTAxMiAoMyk8L2xpPjxsaSByb2xlPSJwcmVzZW50YXRpb24iIGRhdGEtdmFsdWU9Ijc1MDEzIiAgIGRhdGEtcGFyZW50Y291bnR5PSIiIGRhdGEtdmFsdWUyPSI3NTAxMyIgICA+IC0gNzUwMTMgKDEpPC9saT48bGkgcm9sZT0icHJlc2VudGF0aW9uIiBkYXRhLXZhbHVlPSI3NTAxNSIgICBkYXRhLXBhcmVudGNvdW50eT0iIiBkYXRhLXZhbHVlMj0iNzUwMTUiICAgPiAtIDc1MDE1ICgzKTwvbGk+PGxpIHJvbGU9InByZXNlbnRhdGlvbiIgZGF0YS12YWx1ZT0iNzUwMTYiICAgZGF0YS1wYXJlbnRjb3VudHk9IiIgZGF0YS12YWx1ZTI9Ijc1MDE2IiAgID4gLSA3NTAxNiAoMyk8L2xpPjxsaSByb2xlPSJwcmVzZW50YXRpb24iIGRhdGEtdmFsdWU9Ijc1MDE4IiAgIGRhdGEtcGFyZW50Y291bnR5PSIiIGRhdGEtdmFsdWUyPSI3NTAxOCIgICA+IC0gNzUwMTggKDgpPC9saT48bGkgcm9sZT0icHJlc2VudGF0aW9uIiBkYXRhLXZhbHVlPSI3NTAxOSIgICBkYXRhLXBhcmVudGNvdW50eT0iIiBkYXRhLXZhbHVlMj0iNzUwMTkiICAgPiAtIDc1MDE5ICg1KTwvbGk+PGxpIHJvbGU9InByZXNlbnRhdGlvbiIgZGF0YS12YWx1ZT0iNzUwMjAiICAgZGF0YS1wYXJlbnRjb3VudHk9IiIgZGF0YS12YWx1ZTI9Ijc1MDIwIiAgID4gLSA3NTAyMCAoODMpPC9saT48bGkgcm9sZT0icHJlc2VudGF0aW9uIiBkYXRhLXZhbHVlPSJzYWludC1nZXJtYWluLWVuLWxheWUiIGRhdGEtdmFsdWUyPSJzYWludC1nZXJtYWluLWVuLWxheWUiIGRhdGEtcGFyZW50Y291bnR5PSIiPlNhaW50LUdlcm1haW4tZW4tTGF5ZSAoMik8L2xpPjxsaSByb2xlPSJwcmVzZW50YXRpb24iIGRhdGEtdmFsdWU9Ijc4MTAwIiAgIGRhdGEtcGFyZW50Y291bnR5PSIiIGRhdGEtdmFsdWUyPSI3ODEwMCIgICA+IC0gNzgxMDAgKDEpPC9saT48bGkgcm9sZT0icHJlc2VudGF0aW9uIiBkYXRhLXZhbHVlPSJzYWludC1tYW5kZSIgZGF0YS12YWx1ZTI9InNhaW50LW1hbmRlIiBkYXRhLXBhcmVudGNvdW50eT0iIj5TYWludC1NYW5kw6kgKDIpPC9saT48bGkgcm9sZT0icHJlc2VudGF0aW9uIiBkYXRhLXZhbHVlPSI5NDE2MCIgICBkYXRhLXBhcmVudGNvdW50eT0iIiBkYXRhLXZhbHVlMj0iOTQxNjAiICAgPiAtIDk0MTYwICgxKTwvbGk+CiAgICAgICAgICAgICAgICA8L3VsPiAgICAgICAgCiAgICAgICAgICAgIDwvZGl2PjxkaXYgY2xhc3M9ImRyb3Bkb3duIGZvcm0tY29udHJvbCAiPgogICAgICAgIDxkaXYgZGF0YS10b2dnbGU9ImRyb3Bkb3duIiBpZD0ibW9iaWxlLWNoYW1icmVzLW1pbiIgY2xhc3M9IiBmaWx0ZXJfbWVudV90cmlnZ2VyICAiIHh4IGFsbCBDaGFtYnJlcyBtaW4uIGRhdGEtdmFsdWU9ImFsbCI+Q2hhbWJyZXMgbWluLgogICAgICAgICAgICA8c3BhbiBjbGFzcz0iY2FyZXQgIGNhcmV0X2ZpbHRlciAiPjwvc3Bhbj4KICAgICAgICAgICAgPC9kaXY+IDxpbnB1dCB0eXBlPSJoaWRkZW4iIG5hbWU9ImNoYW1icmVzLW1pbiIgdmFsdWU9IiI+CiAgICAgICAgICAgICAgICA8dWwgIGlkPSJtb2JpbGUtc2VhcmNoLWNoYW1icmVzLW1pbiIgY2xhc3M9ImRyb3Bkb3duLW1lbnUgZmlsdGVyX21lbnUiIHJvbGU9Im1lbnUiIGFyaWEtbGFiZWxsZWRieT0ibW9iaWxlLWNoYW1icmVzLW1pbiI+CiAgICAgICAgICAgICAgICAgICAgIDxsaSByb2xlPSJwcmVzZW50YXRpb24iIGRhdGEtdmFsdWU9ImFsbCI+Q2hhbWJyZXMgbWluLjwvbGk+PGxpIGRhdGEtdmFsdWU9IjEiICB2YWx1ZT0iMSI+MTwvbGk+PGxpIGRhdGEtdmFsdWU9IjIiICB2YWx1ZT0iMiI+MjwvbGk+PGxpIGRhdGEtdmFsdWU9IjMiICB2YWx1ZT0iMyI+MzwvbGk+PGxpIGRhdGEtdmFsdWU9IjQiICB2YWx1ZT0iNCI+NDwvbGk+PGxpIGRhdGEtdmFsdWU9IjUiICB2YWx1ZT0iNSI+NTwvbGk+PGxpIGRhdGEtdmFsdWU9IjYiICB2YWx1ZT0iNiI+NjwvbGk+PGxpIGRhdGEtdmFsdWU9IjciICB2YWx1ZT0iNyI+NzwvbGk+PGxpIGRhdGEtdmFsdWU9IjgiICB2YWx1ZT0iOCI+ODwvbGk+PGxpIGRhdGEtdmFsdWU9IjkiICB2YWx1ZT0iOSI+OTwvbGk+PGxpIGRhdGEtdmFsdWU9IjEwIiAgdmFsdWU9IjEwIj4xMDwvbGk+CiAgICAgICAgICAgICAgICA8L3VsPiAgICAgICAgCiAgICAgICAgICAgIDwvZGl2PjxpbnB1dCB0eXBlPSJ0ZXh0IiBpZD0ibW9iaWxlLXN1cmZhY2UtbWluIiAgbmFtZT0ic3VyZmFjZS1taW4iIHBsYWNlaG9sZGVyPSJTdXJmYWNlIG1pbi4iIHZhbHVlPSIiIGNsYXNzPSJhZHZhbmNlZF9zZWxlY3QgZm9ybS1jb250cm9sIiAvPjxpbnB1dCB0eXBlPSJ0ZXh0IiBpZD0iYnVkZ2V0LW1heCIgIG5hbWU9ImJ1ZGdldC1tYXgiIHBsYWNlaG9sZGVyPSJCdWRnZXQgbWF4LiIgdmFsdWU9IiIgY2xhc3M9ImFkdmFuY2VkX3NlbGVjdCBmb3JtLWNvbnRyb2wiIC8+CiAgICAgICAgICAgIAogICAgICAgICAgICA8YnV0dG9uIGNsYXNzPSJ3cHJlc2lkZW5jZV9idXR0b24iIGlkPSJhZHZhbmNlZF9zdWJtaXRfMl9tb2JpbGUiPlJlY2hlcmNoZXIgZGVzIHByb3ByacOpdMOpczwvYnV0dG9uPgogICAgICAgICAgCiAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJoaWRkZW4iIGlkPSJ3cGVzdGF0ZV9yZWd1bGFyX3NlYXJjaF9ub25jZSIgbmFtZT0id3Blc3RhdGVfcmVndWxhcl9zZWFyY2hfbm9uY2UiIHZhbHVlPSIzM2RmYTYyYWU2IiAvPjxpbnB1dCB0eXBlPSJoaWRkZW4iIG5hbWU9Il93cF9odHRwX3JlZmVyZXIiIHZhbHVlPSIvcmVjaGVyY2hlLWF2YW5jZWUvcGFnZS8xP2FkdmFuY2VkX2NpdHk9cGFyaXMtMiZhbXA7Y2hhbWJyZXMtbWluJmFtcDtzdXJmYWNlLW1pbiZhbXA7YnVkZ2V0LW1heCZhbXA7c3VibWl0PVJFQ0hFUkNIRVImYW1wO3dwZXN0YXRlX3JlZ3VsYXJfc2VhcmNoX25vbmNlPTBjYzM2ZGE1OTcmYW1wO193cF9odHRwX3JlZmVyZXI9JTJGYWNoZXRlciUyRiIgLz4gICAgICAgICAgICA8c3BhbiBpZD0icmVzdWx0c19tb2JpbGUiPiBub3VzIGF2b25zIHRyb3V2w6kgPHNwYW4gaWQ9InJlc3VsdHNfbm9fbW9iaWxlIj4wPC9zcGFuPiByw6lzdWx0YXRzIDwvc3Bhbj4KICAgICAgICA8L2Zvcm0+ICAgCiAgICA8L2Rpdj4gICAgICAgCiAgIAogICAgCiAgPGRpdiBjbGFzcz0iY29udGFpbmVyIGNvbnRlbnRfd3JhcHBlciI+CjxkaXYgY2xhc3M9InJvdyI+CiAgICA8ZGl2IGNsYXNzPSJjb2wteHMtMTIgY29sLW1kLTEyIGJyZWFkY3J1bWJfY29udGFpbmVyIj48b2wgY2xhc3M9ImJyZWFkY3J1bWIiPgogICAgICAgICAgICAgICA8bGk+PGEgaHJlZj0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tLyI+QWNjdWVpbDwvYT48L2xpPjxsaSBjbGFzcz0iYWN0aXZlIj5SZWNoZXJjaGUgYXZhbmPDqWU8L2xpPjwvb2w+PC9kaXY+ICAgIDxkaXYgY2xhc3M9IiBjb2wtbWQtMTIgIj4KICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ic2luZ2xlLWNvbnRlbnQiPgogICAgICAgICAgICAKICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InZjX3JvdyB3cGJfcm93IHZjX3Jvdy1mbHVpZCB2Y19yb3ciPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InZjX2NvbC1zbS0xMiB3cGJfY29sdW1uIHZjX2NvbHVtbl9jb250YWluZXIgdmNfY29sdW1uIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0id3BiX3dyYXBwZXIiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0id3BiX2FsZXJ0IHdwYl9jb250ZW50X2VsZW1lbnQgdmNfYWxlcnRfcm91bmRlZCB3cGJfYWxlcnQtaW5mbyB3cGVzdGF0ZV9tZXNzYWdlIHZjX21lc3NhZ2UiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Im1lc3NhZ2Vib3hfdGV4dCI+PHA+PHNwYW4gaWQ9ImxvZ2luX3RyaWdnZXJfbW9kYWwiPlMmIzAzOTtpZGVudGlmaWVyIDwvc3Bhbj5wb3VyIGVucmVnaXN0cmVyIHVuZSBhbGVydGUgZS1tYWlsIGV0IMOqdHJlIHByw6l2ZW51IGF1dG9tYXRpcXVlbWVudCBsb3JzcXUmIzAzOTt1bmUgbm91dmVsbGUgYW5ub25jZSBjb3JyZXNwb25kYW50ZSDDoCB2b3MgY3JpdMOocmVzIHNlcmEgbWlzZSBlbiBsaWduZS48L3A+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4gCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+IAogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4gICAgICAgIAogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgIAoKICAgIDxkaXYgY2xhc3M9ImFkdl9saXN0aW5nX2ZpbHRlcnNfaGVhZCBhZHZhbmNlZF9maWx0ZXJzIj4gCiAgICAgICAgPGlucHV0IHR5cGU9ImhpZGRlbiIgaWQ9InBhZ2VfaWR4IiB2YWx1ZT0iNSI+CiAgICAgICAgPGlucHV0IHR5cGU9ImhpZGRlbiIgaWQ9InNlYXJjaGFyZyIgdmFsdWU9J3siY2FjaGVfcmVzdWx0cyI6ZmFsc2UsInVwZGF0ZV9wb3N0X21ldGFfY2FjaGUiOmZhbHNlLCJ1cGRhdGVfcG9zdF90ZXJtX2NhY2hlIjpmYWxzZSwicG9zdF90eXBlIjoiZXN0YXRlX3Byb3BlcnR5IiwicG9zdF9zdGF0dXMiOiJwdWJsaXNoIiwicGFnZWQiOjEsInBvc3RzX3Blcl9wYWdlIjozMCwibWV0YV9rZXkiOiJwcm9wX2ZlYXR1cmVkIiwib3JkZXJieSI6Im1ldGFfdmFsdWUiLCJvcmRlciI6IkRFU0MiLCJtZXRhX3F1ZXJ5IjoiIiwidGF4X3F1ZXJ5Ijp7InJlbGF0aW9uIjoiQU5EIiwiMCI6IiIsIjEiOiIiLCIyIjp7InRheG9ub215IjoicHJvcGVydHlfY2l0eSIsImZpZWxkIjoic2x1ZyIsInRlcm1zIjpbInBhcmlzLTIiXX0sIjMiOiIiLCI0IjoiIn19Jz4KICAgICAgICA8aW5wdXQgdHlwZT0iaGlkZGVuIiBpZD0id3Blc3RhdGVfc2VhcmNoX25vbmNlIiB2YWx1ZT0iNGM0MDViMDE2NCIgLz4gICAgICAgICAgICAKICAgICAgICA8ZGl2IGNsYXNzPSJkcm9wZG93biBsaXN0aW5nX2ZpbHRlcl9zZWxlY3Qgb3JkZXJfZmlsdGVyICBvcmRlcl9maWx0ZXJfc2luZ2xlICI+CiAgICAgICAgICAgICA8ZGl2IGRhdGEtdG9nZ2xlPSJkcm9wZG93biIgaWQ9ImFfZmlsdGVyX29yZGVyIiBjbGFzcz0iZmlsdGVyX21lbnVfdHJpZ2dlciIgZGF0YS12YWx1ZT0iMSI+IFRyaWVyIDxzcGFuIGNsYXNzPSJjYXJldCBjYXJldF9maWx0ZXIiPjwvc3Bhbj4gPC9kaXY+ICAgICAgICAgICAKICAgICAgICAgICAgIDx1bCBpZD0iZmlsdGVyX29yZGVyIiBjbGFzcz0iZHJvcGRvd24tbWVudSBmaWx0ZXJfbWVudSIgcm9sZT0ibWVudSIgYXJpYS1sYWJlbGxlZGJ5PSJhX2ZpbHRlcl9vcmRlciI+CiAgICAgICAgICAgICAgICAgPGxpIHJvbGU9InByZXNlbnRhdGlvbiIgZGF0YS12YWx1ZT0iMSI+UHJpeCDigIvigItkw6ljcm9pc3NhbnQ8L2xpPjxsaSByb2xlPSJwcmVzZW50YXRpb24iIGRhdGEtdmFsdWU9IjIiPlByaXgg4oCL4oCLY3JvaXNzYW50PC9saT48bGkgcm9sZT0icHJlc2VudGF0aW9uIiBkYXRhLXZhbHVlPSIzIj5MZSBwbHVzIHLDqWNlbnQgZCYjMDM5O2Fib3JkPC9saT48bGkgcm9sZT0icHJlc2VudGF0aW9uIiBkYXRhLXZhbHVlPSI0Ij5MZSBwbHVzIGFuY2llbiBlbiBwcmVtaWVyPC9saT48bGkgcm9sZT0icHJlc2VudGF0aW9uIiBkYXRhLXZhbHVlPSI1Ij5DaGFtYnJlcyDDoCBjb3VjaGVyIEhhdXQgw6AgQmFzPC9saT48bGkgcm9sZT0icHJlc2VudGF0aW9uIiBkYXRhLXZhbHVlPSI2Ij5DaGFtYnJlcyBiYXNzZXMgw6AgaGF1dGVzPC9saT48bGkgcm9sZT0icHJlc2VudGF0aW9uIiBkYXRhLXZhbHVlPSI3Ij5TYWxsZXMgZGUgYmFpbnMgSGlnaCB0byBMb3c8L2xpPjxsaSByb2xlPSJwcmVzZW50YXRpb24iIGRhdGEtdmFsdWU9IjgiPlNhbGxlcyBkZSBiYWluPC9saT48bGkgcm9sZT0icHJlc2VudGF0aW9uIiBkYXRhLXZhbHVlPSIwIj5UcmllcjwvbGk+ICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgPC91bD4gICAgICAgIAogICAgICAgIDwvZGl2PiAKCgogICAgICAgICAgICAKICAgICAgICAKICAgICAgICA8ZGl2IGNsYXNzPSJsaXN0aW5nX2ZpbHRlcl9zZWxlY3QgbGlzdGluZ19maWx0ZXJfdmlld3MiPgogICAgICAgICAgICA8ZGl2IGlkPSJncmlkX3ZpZXciIGNsYXNzPSJpY29uX3NlbGVjdGVkIj4gCiAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZmEgZmEtdGgiPjwvaT4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9kaXY+CgogICAgICAgIDxkaXYgY2xhc3M9Imxpc3RpbmdfZmlsdGVyX3NlbGVjdCBsaXN0aW5nX2ZpbHRlcl92aWV3cyI+CiAgICAgICAgICAgICA8ZGl2IGlkPSJsaXN0X3ZpZXciIGNsYXNzPSIiPgogICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJmYSBmYS1iYXJzIj48L2k+ICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9kaXY+CiAgICAgICAgCiAgICA8L2Rpdj4gICAgCgogICAgICAgICAgICAgIAogICAgICAgIDwhLS1GaWx0ZXJzIHN0YXJ0cyBoZXJlLS0+ICAgICAKICAgICAgICAKICAgICAgICAgICAgPGRpdiBkYXRhLXRvZ2dsZT0iZHJvcGRvd24iIGlkPSJhX2ZpbHRlcl9hY3Rpb24iIGNsYXNzPSIiIGRhdGEtdmFsdWU9IkFsbCBBY3Rpb25zIj48L2Rpdj4gICAgICAgICAgIAogICAgICAgIDxkaXYgZGF0YS10b2dnbGU9ImRyb3Bkb3duIiBpZD0iYV9maWx0ZXJfY2F0ZWciIGNsYXNzPSIiIGRhdGEtdmFsdWU9IkFsbCBUeXBlcyI+PC9kaXY+ICAgICAgICAgICAKICAgICAgICA8ZGl2IGRhdGEtdG9nZ2xlPSJkcm9wZG93biIgaWQ9ImFfZmlsdGVyX2NpdGllcyIgY2xhc3M9IiIgZGF0YS12YWx1ZT0iQWxsIENpdGllcyI+PC9kaXY+ICAgICAgICAgICAKICAgICAgICA8ZGl2IGRhdGEtdG9nZ2xlPSJkcm9wZG93biIgaWQ9ImFfZmlsdGVyX2FyZWFzIiBjbGFzcz0iIiBkYXRhLXZhbHVlPSJBbGwgQXJlYXMiPjwvZGl2PiAgICAgICAgICAgCiAgICAgICAgPGRpdiBkYXRhLXRvZ2dsZT0iZHJvcGRvd24iIGlkPSJhX2ZpbHRlcl9jb3VudHkiIGNsYXNzPSIiIGRhdGEtdmFsdWU9IkFsbCBDb3VudGllcy9TdGF0ZXMiPjwvZGl2PiAgICAgICAgICAgCiAgICAgICAgICAgICAgCiAgICAgICAgICAgCiAgICAgICAgPCEtLUZpbHRlcnMgRW5kcyBoZXJlLS0+ICAgCiAgCiAgICAgICAgCiAgICAgICAgPCEtLSBMaXN0aW5ncyBzdGFydHMgaGVyZSAtLT4gICAgICAgICAgICAgICAgICAgCiAgICAgICAgPGRpdiBjbGFzcz0ic3Bpbm5lciIgaWQ9Imxpc3RpbmdfbG9hZGVyIj4KICA8ZGl2IGNsYXNzPSJuZXdfcHJlbGFkZXIiPjwvZGl2Pgo8L2Rpdj4gCiAgICAgICAgCiAgICAgICAgIAogICAgICAgICAgICAgCiAgICAgICAgPGRpdiBpZD0ibGlzdGluZ19hamF4X2NvbnRhaW5lciIgY2xhc3M9IiI+IAogICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgPGlucHV0IHR5cGU9ImhpZGRlbiIgaWQ9InRheF9jYXRlZ19waWNrZWQiIHZhbHVlPSIiPgogICAgICAgICAgICA8aW5wdXQgdHlwZT0iaGlkZGVuIiBpZD0idGF4X2FjdGlvbl9waWNrZWQiIHZhbHVlPSIiPgogICAgICAgICAgICA8aW5wdXQgdHlwZT0iaGlkZGVuIiBpZD0idGF4X2NpdHlfcGlja2VkIiB2YWx1ZT0iIj4KICAgICAgICAgICAgPGlucHV0IHR5cGU9ImhpZGRlbiIgaWQ9InRheGFfYXJlYV9waWNrZWQiIHZhbHVlPSIiPgogICAgICAgICAgICAgIAoKCgo8ZGl2IGNsYXNzPSJjb2wtbWQtNCBoYXNfcHJvcF9zbGlkZXIgIGxpc3Rpbmdfd3JhcHBlciIgZGF0YS1vcmc9IjQiIGRhdGEtbGlzdGlkPSIyMjY4OCIgPiAKICAgIDxkaXYgY2xhc3M9InByb3BlcnR5X2xpc3RpbmcgICAiIGRhdGEtbGluaz0iIj4KICAgICAgICAKICAgICAgICA8ZGl2IGNsYXNzPSJsaXN0aW5nLXVuaXQtaW1nLXdyYXBwZXIiPjxkaXYgY2xhc3M9InByb3BfbmV3X2RldGFpbHMiPjxkaXYgY2xhc3M9InByb3BfbmV3X2RldGFpbHNfYmFjayI+PC9kaXY+PGRpdiBjbGFzcz0icHJvcGVydHlfbWVkaWEiPjxpIGNsYXNzPSJmYSBmYS1jYW1lcmEiIGFyaWEtaGlkZGVuPSJ0cnVlIj48L2k+IDUKICAgICAgICAgICAgICAgIDwvZGl2PjxkaXYgY2xhc3M9InByb3BlcnR5X2xvY2F0aW9uX2ltYWdlIj4gCiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb3BlcnR5X21hcmtlciI+PC9zcGFuPjxhIGhyZWY9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS9wcm9wZXJ0eV9jaXR5Lzc1MDE5LyI+NzUwMTk8L2E+LCA8YSBocmVmPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vcHJvcGVydHlfY2l0eS9wYXJpcy0yLyI+UGFyaXM8L2E+PC9kaXY+PC9kaXY+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBpZD0icHJvcGVydHlfdW5pdF9jYXJvdXNlbF81ZTg0YTZhMTJjOTFhIiBjbGFzcz0iY2Fyb3VzZWwgcHJvcGVydHlfdW5pdF9jYXJvdXNlbCBzbGlkZSAiIGRhdGEtcmlkZT0iY2Fyb3VzZWwiIGRhdGEtaW50ZXJ2YWw9ImZhbHNlIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY2Fyb3VzZWwtaW5uZXIiPiAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iaXRlbSBhY3RpdmUiPiAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vZXN0YXRlX3Byb3BlcnR5L3N0dWRpby05LyI+PGltZyB3aWR0aD0iNTI1IiBoZWlnaHQ9IjMyOCIgc3JjPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vd3AtY29udGVudC91cGxvYWRzLzIwMjAvMDMvMTQ0NTI0MzE3MF9MQTc4OF8yX2wtNTI1eDMyOC5qcGciIGNsYXNzPSJsYXp5bG9hZCBpbWctcmVzcG9uc2l2ZSB3cC1wb3N0LWltYWdlIiBhbHQ9IiIgZGF0YS1vcmlnaW5hbD0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL3dwLWNvbnRlbnQvdXBsb2Fkcy8yMDIwLzAzLzE0NDUyNDMxNzBfTEE3ODhfMl9sLTUyNXgzMjguanBnIiAvPjwvYT4gICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJpdGVtIGxhenktbG9hZC1pdGVtIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vZXN0YXRlX3Byb3BlcnR5L3N0dWRpby05LyI+PGltZyAgZGF0YS1sYXp5LWxvYWQtc3JjPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vd3AtY29udGVudC91cGxvYWRzLzIwMjAvMDMvMTQ0NTI0MzE3Nl9MQTc4OF8zX2wtNTI1eDMyOC5qcGciIGFsdD0iU3R1ZGlvIiBjbGFzcz0iaW1nLXJlc3BvbnNpdmUiIC8+PC9hPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+PGRpdiBjbGFzcz0iaXRlbSBsYXp5LWxvYWQtaXRlbSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL2VzdGF0ZV9wcm9wZXJ0eS9zdHVkaW8tOS8iPjxpbWcgIGRhdGEtbGF6eS1sb2FkLXNyYz0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL3dwLWNvbnRlbnQvdXBsb2Fkcy8yMDIwLzAzLzE0NDUyNDMxNzlfTEE3ODhfNF9sLTUyNXgzMjguanBnIiBhbHQ9IlN0dWRpbyIgY2xhc3M9ImltZy1yZXNwb25zaXZlIiAvPjwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PjxkaXYgY2xhc3M9Iml0ZW0gbGF6eS1sb2FkLWl0ZW0iPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS9lc3RhdGVfcHJvcGVydHkvc3R1ZGlvLTkvIj48aW1nICBkYXRhLWxhenktbG9hZC1zcmM9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS93cC1jb250ZW50L3VwbG9hZHMvMjAyMC8wMy8xNDQ1MjQzMTY1X0xBNzg4XzFfbC01MjV4MzI4LmpwZyIgYWx0PSJTdHVkaW8iIGNsYXNzPSJpbWctcmVzcG9uc2l2ZSIgLz48L2E+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj48ZGl2IGNsYXNzPSJpdGVtIGxhenktbG9hZC1pdGVtIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vZXN0YXRlX3Byb3BlcnR5L3N0dWRpby05LyI+PGltZyAgZGF0YS1sYXp5LWxvYWQtc3JjPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vd3AtY29udGVudC91cGxvYWRzLzIwMjAvMDMvMTQ0NTI0MzMxMV9MQTc4OF81X2wtNTI1eDMyOC5qcGciIGFsdD0iU3R1ZGlvIiBjbGFzcz0iaW1nLXJlc3BvbnNpdmUiIC8+PC9hPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL2VzdGF0ZV9wcm9wZXJ0eS9zdHVkaW8tOS8iPiA8L2E+PGEgY2xhc3M9ImxlZnQgIGNhcm91c2VsLWNvbnRyb2wiIGhyZWY9IiNwcm9wZXJ0eV91bml0X2Nhcm91c2VsXzVlODRhNmExMmM5MWEiIGRhdGEtc2xpZGU9InByZXYiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJkZW1vLWljb24gaWNvbi1sZWZ0LW9wZW4tYmlnIj48L2k+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2E+CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgY2xhc3M9InJpZ2h0ICBjYXJvdXNlbC1jb250cm9sIiBocmVmPSIjcHJvcGVydHlfdW5pdF9jYXJvdXNlbF81ZTg0YTZhMTJjOTFhIiBkYXRhLXNsaWRlPSJuZXh0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZGVtby1pY29uIGljb24tcmlnaHQtb3Blbi1iaWciPjwvaT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgICA8L2Rpdj48ZGl2IGNsYXNzPSJ0YWctd3JhcHBlciI+PGRpdiBjbGFzcz0ic3RhdHVzLXdyYXBwZXIiPjxkaXYgY2xhc3M9ImFjdGlvbl90YWdfd3JhcHBlciBMb2NhdGlvbiAiPkxvY2F0aW9uPC9kaXY+PGRpdiBjbGFzcz0icmliYm9uLWluc2lkZSBEaXNwb25pYmxlIj5EaXNwb25pYmxlPC9kaXY+PC9kaXY+PC9kaXY+PC9kaXY+CgogICAgICAgICAgICA8aDQ+PGEgaHJlZj0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL2VzdGF0ZV9wcm9wZXJ0eS9zdHVkaW8tOS8iPgogICAgICAgICAgICAgICAgU3R1ZGlvICAgICAgICAgICAgICAgIDwvYT4gCiAgICAgICAgICAgIDwvaDQ+IAogICAgICAgICAgICAKICAgICAgICAgICAgPGRpdiBjbGFzcz0ibGlzdGluZ191bml0X3ByaWNlX3dyYXBwZXIiPjgwMiDigqwgPHNwYW4gY2xhc3M9InByaWNlX2xhYmVsIj5DLkMvbW9pczwvc3Bhbj48L2Rpdj4gICAgICAgIAogICAgICAgIAogICAgICAgIAogICAgICAgICAgIAogICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ibGlzdGluZ19kZXRhaWxzIHRoZV9ncmlkX3ZpZXciPgogICAgICAgICAgICAgICAgICAgIExBNzg4LUtNSSAmIzgyMTE7IFBhcmlzIDE5w6htZSAmIzgyMTE7IEJVVFRFUyBDSEFVTU9OVCAmIzgyMTE7IFNpdHXDqSBwcm9jaGUgZGVzIGNvbW1lcmNlcywgZHUgbcOpdHJvIENvbG9uZWwgRmFiaWVuIGUgPGEgaHJlZj0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL2VzdGF0ZV9wcm9wZXJ0eS9zdHVkaW8tOS8iIGNsYXNzPSJ1bml0X21vcmVfeCI+W3BsdXNdPC9hPiAgICAgICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJsaXN0aW5nX2RldGFpbHMgdGhlX2xpc3RfdmlldyI+CiAgICAgICAgICAgICAgICAgICAgTEE3ODgtS01JICYjODIxMTsgUGFyaXMgMTnDqG1lICYjODIxMTsgQlVUVEVTIENIQVVNT05UICYjODIxMTsgU2l0dcOpIHByb2NoZSBkZXMgY29tbWVyY2VzLCBkdSBtw6l0cm8gQ29sb25lbCBGYWJpZW4gZSA8YSBocmVmPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vZXN0YXRlX3Byb3BlcnR5L3N0dWRpby05LyIgY2xhc3M9InVuaXRfbW9yZV94Ij5bcGx1c108L2E+ICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAKCgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9wZXJ0eV9saXN0aW5nX2RldGFpbHMiPgogICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImluZm9iYXRoIj4xPC9zcGFuPiA8c3BhbiBjbGFzcz0iaW5mb3NpemUiPjI0LDAwIG08c3VwPjI8L3N1cD48L3NwYW4+PGEgaHJlZj0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL2VzdGF0ZV9wcm9wZXJ0eS9zdHVkaW8tOS8iIGNsYXNzPSJ1bml0X2RldGFpbHNfeCI+aW5mbyBjb21wbMOodGU8L2E+ICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgIAogICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9wZXJ0eV9sb2NhdGlvbiI+CiAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9wZXJ0eV9hZ2VudF93cmFwcGVyIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvcGVydHlfYWdlbnRfaW1hZ2UiIHN0eWxlPSJiYWNrZ3JvdW5kLWltYWdlOnVybCgnaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL3dwLWNvbnRlbnQvdXBsb2Fkcy8yMDE5LzA2L1B5csOpbsOpZXMtNC0xMjB4MTIwLmpwZycpIj48L2Rpdj4gCiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb3BlcnR5X2FnZW50X2ltYWdlX3NpZ24iPjxpIGNsYXNzPSJmYSBmYS11c2VyLWNpcmNsZS1vIiBhcmlhLWhpZGRlbj0idHJ1ZSI+PC9pPjwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vZXN0YXRlX2FnZW50L2ttaS1weXJlbmVlcy8iPktNSSBQWVLDiU7DiUVTPC9hPiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJsaXN0aW5nX2FjdGlvbnMiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ic2hhcmVfdW5pdCI+CiAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly93d3cuZmFjZWJvb2suY29tL3NoYXJlci5waHA/dT1odHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vZXN0YXRlX3Byb3BlcnR5L3N0dWRpby05LyZhbXA7dD1TdHVkaW8iIHRhcmdldD0iX2JsYW5rIiBjbGFzcz0ic29jaWFsX2ZhY2Vib29rIj48L2E+CiAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly90d2l0dGVyLmNvbS9ob21lP3N0YXR1cz1TdHVkaW9odHRwcyUzQSUyRiUyRnd3dy5jYWJpbmV0LWttaS5jb20lMkZlc3RhdGVfcHJvcGVydHklMkZzdHVkaW8tOSUyRiIgY2xhc3M9InNvY2lhbF90d2VldCIgdGFyZ2V0PSJfYmxhbmsiPjwvYT4KICAgICAgICA8YSBocmVmPSJodHRwczovL3BpbnRlcmVzdC5jb20vcGluL2NyZWF0ZS9idXR0b24vP3VybD1odHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vZXN0YXRlX3Byb3BlcnR5L3N0dWRpby05LyZhbXA7bWVkaWE9aHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL3dwLWNvbnRlbnQvdXBsb2Fkcy8yMDIwLzAzLzE0NDUyNDMxNzBfTEE3ODhfMl9sLmpwZyZhbXA7ZGVzY3JpcHRpb249U3R1ZGlvIiB0YXJnZXQ9Il9ibGFuayIgY2xhc3M9InNvY2lhbF9waW50ZXJlc3QiPjwvYT4KICAgICAgICA8YSBocmVmPSJtYWlsdG86ZW1haWxAZW1haWwuY29tP2h0dHA6Ly9zdWJqZWN0PVN0dWRpbyYjMDM4O2JvZHk9aHR0cHMlM0ElMkYlMkZ3d3cuY2FiaW5ldC1rbWkuY29tJTJGZXN0YXRlX3Byb3BlcnR5JTJGc3R1ZGlvLTklMkYiIGRhdGEtYWN0aW9uPSJzaGFyZSBlbWFpbCIgIGNsYXNzPSJzb2NpYWxfZW1haWwiPjwvYT4KCiAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InNoYXJlX2xpc3QiICBkYXRhLW9yaWdpbmFsLXRpdGxlPSJwYXJ0YWdlciIgPjwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iaWNvbi1mYXYgaWNvbi1mYXYtb2ZmIiBkYXRhLW9yaWdpbmFsLXRpdGxlPSJham91dGVyIGF1eCBGYXZvcmlzIiBkYXRhLXBvc3RpZD0iMjI2ODgiPjwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iY29tcGFyZS1hY3Rpb24iIGRhdGEtb3JpZ2luYWwtdGl0bGU9ImNvbXBhcmVyIiBkYXRhLXBpbWFnZT0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL3dwLWNvbnRlbnQvdXBsb2Fkcy8yMDIwLzAzLzE0NDUyNDMxNzBfTEE3ODhfMl9sLTE0M3g4My5qcGciIGRhdGEtcGlkPSIyMjY4OCI+PC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+ICAgICAgICA8L2Rpdj4gICAgICAgICAgICAgCiAgICA8L2Rpdj4gIAoKCgo8ZGl2IGNsYXNzPSJjb2wtbWQtNCBoYXNfcHJvcF9zbGlkZXIgIGxpc3Rpbmdfd3JhcHBlciIgZGF0YS1vcmc9IjQiIGRhdGEtbGlzdGlkPSIyMjY0NSIgPiAKICAgIDxkaXYgY2xhc3M9InByb3BlcnR5X2xpc3RpbmcgICAiIGRhdGEtbGluaz0iIj4KICAgICAgICAKICAgICAgICA8ZGl2IGNsYXNzPSJsaXN0aW5nLXVuaXQtaW1nLXdyYXBwZXIiPjxkaXYgY2xhc3M9InByb3BfbmV3X2RldGFpbHMiPjxkaXYgY2xhc3M9InByb3BfbmV3X2RldGFpbHNfYmFjayI+PC9kaXY+PGRpdiBjbGFzcz0icHJvcGVydHlfbWVkaWEiPjxpIGNsYXNzPSJmYSBmYS1jYW1lcmEiIGFyaWEtaGlkZGVuPSJ0cnVlIj48L2k+IDcKICAgICAgICAgICAgICAgIDwvZGl2PjxkaXYgY2xhc3M9InByb3BlcnR5X2xvY2F0aW9uX2ltYWdlIj4gCiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb3BlcnR5X21hcmtlciI+PC9zcGFuPjxhIGhyZWY9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS9wcm9wZXJ0eV9jaXR5Lzc1MDIwLyI+NzUwMjA8L2E+LCA8YSBocmVmPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vcHJvcGVydHlfY2l0eS9wYXJpcy0yLyI+UGFyaXM8L2E+PC9kaXY+PC9kaXY+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBpZD0icHJvcGVydHlfdW5pdF9jYXJvdXNlbF81ZTg0YTZhMTMwZTQxIiBjbGFzcz0iY2Fyb3VzZWwgcHJvcGVydHlfdW5pdF9jYXJvdXNlbCBzbGlkZSAiIGRhdGEtcmlkZT0iY2Fyb3VzZWwiIGRhdGEtaW50ZXJ2YWw9ImZhbHNlIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY2Fyb3VzZWwtaW5uZXIiPiAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iaXRlbSBhY3RpdmUiPiAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vZXN0YXRlX3Byb3BlcnR5LzItcGllY2VzLWNhdmUtbWFyYWljaGVycy8iPjxpbWcgd2lkdGg9IjUyNSIgaGVpZ2h0PSIzMjgiIHNyYz0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL3dwLWNvbnRlbnQvdXBsb2Fkcy8yMDIwLzAzLzE1ODMyNTczMTlfVkEyMTEwXzNfbC01MjV4MzI4LmpwZyIgY2xhc3M9Imxhenlsb2FkIGltZy1yZXNwb25zaXZlIHdwLXBvc3QtaW1hZ2UiIGFsdD0iIiBkYXRhLW9yaWdpbmFsPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vd3AtY29udGVudC91cGxvYWRzLzIwMjAvMDMvMTU4MzI1NzMxOV9WQTIxMTBfM19sLTUyNXgzMjguanBnIiAvPjwvYT4gICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJpdGVtIGxhenktbG9hZC1pdGVtIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vZXN0YXRlX3Byb3BlcnR5LzItcGllY2VzLWNhdmUtbWFyYWljaGVycy8iPjxpbWcgIGRhdGEtbGF6eS1sb2FkLXNyYz0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL3dwLWNvbnRlbnQvdXBsb2Fkcy8yMDIwLzAzLzE1ODMyNTczNzdfVkEyMTEwXzZfbC01MjV4MzI4LmpwZyIgYWx0PSIyIFBJRUNFUyArIENBVkUgJiM4MjExOyBNQVJBSUNIRVJTIiBjbGFzcz0iaW1nLXJlc3BvbnNpdmUiIC8+PC9hPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+PGRpdiBjbGFzcz0iaXRlbSBsYXp5LWxvYWQtaXRlbSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL2VzdGF0ZV9wcm9wZXJ0eS8yLXBpZWNlcy1jYXZlLW1hcmFpY2hlcnMvIj48aW1nICBkYXRhLWxhenktbG9hZC1zcmM9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS93cC1jb250ZW50L3VwbG9hZHMvMjAyMC8wMy8xNTgzMjU3MzY4X1ZBMjExMF81X2wtNTI1eDMyOC5qcGciIGFsdD0iMiBQSUVDRVMgKyBDQVZFICYjODIxMTsgTUFSQUlDSEVSUyIgY2xhc3M9ImltZy1yZXNwb25zaXZlIiAvPjwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PjxkaXYgY2xhc3M9Iml0ZW0gbGF6eS1sb2FkLWl0ZW0iPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS9lc3RhdGVfcHJvcGVydHkvMi1waWVjZXMtY2F2ZS1tYXJhaWNoZXJzLyI+PGltZyAgZGF0YS1sYXp5LWxvYWQtc3JjPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vd3AtY29udGVudC91cGxvYWRzLzIwMjAvMDMvMTU4MzI1NzM5MF9WQTIxMTBfN19sLTUyNXgzMjguanBnIiBhbHQ9IjIgUElFQ0VTICsgQ0FWRSAmIzgyMTE7IE1BUkFJQ0hFUlMiIGNsYXNzPSJpbWctcmVzcG9uc2l2ZSIgLz48L2E+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj48ZGl2IGNsYXNzPSJpdGVtIGxhenktbG9hZC1pdGVtIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vZXN0YXRlX3Byb3BlcnR5LzItcGllY2VzLWNhdmUtbWFyYWljaGVycy8iPjxpbWcgIGRhdGEtbGF6eS1sb2FkLXNyYz0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL3dwLWNvbnRlbnQvdXBsb2Fkcy8yMDIwLzAzLzE1ODMyNTc0MDFfVkEyMTEwXzhfbC01MjV4MzI4LmpwZyIgYWx0PSIyIFBJRUNFUyArIENBVkUgJiM4MjExOyBNQVJBSUNIRVJTIiBjbGFzcz0iaW1nLXJlc3BvbnNpdmUiIC8+PC9hPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+PGRpdiBjbGFzcz0iaXRlbSBsYXp5LWxvYWQtaXRlbSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL2VzdGF0ZV9wcm9wZXJ0eS8yLXBpZWNlcy1jYXZlLW1hcmFpY2hlcnMvIj48aW1nICBkYXRhLWxhenktbG9hZC1zcmM9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS93cC1jb250ZW50L3VwbG9hZHMvMjAyMC8wMy8xNTgzMjU3NDExX1ZBMjExMF85X2wtNTI1eDMyOC5qcGciIGFsdD0iMiBQSUVDRVMgKyBDQVZFICYjODIxMTsgTUFSQUlDSEVSUyIgY2xhc3M9ImltZy1yZXNwb25zaXZlIiAvPjwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PjxkaXYgY2xhc3M9Iml0ZW0gbGF6eS1sb2FkLWl0ZW0iPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS9lc3RhdGVfcHJvcGVydHkvMi1waWVjZXMtY2F2ZS1tYXJhaWNoZXJzLyI+PGltZyAgZGF0YS1sYXp5LWxvYWQtc3JjPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vd3AtY29udGVudC91cGxvYWRzLzIwMjAvMDMvMTU4MzI1NzQzMV9WQTIxMTBfMTBfbC00NjZ4MzI4LmpwZyIgYWx0PSIyIFBJRUNFUyArIENBVkUgJiM4MjExOyBNQVJBSUNIRVJTIiBjbGFzcz0iaW1nLXJlc3BvbnNpdmUiIC8+PC9hPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL2VzdGF0ZV9wcm9wZXJ0eS8yLXBpZWNlcy1jYXZlLW1hcmFpY2hlcnMvIj4gPC9hPjxhIGNsYXNzPSJsZWZ0ICBjYXJvdXNlbC1jb250cm9sIiBocmVmPSIjcHJvcGVydHlfdW5pdF9jYXJvdXNlbF81ZTg0YTZhMTMwZTQxIiBkYXRhLXNsaWRlPSJwcmV2Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZGVtby1pY29uIGljb24tbGVmdC1vcGVuLWJpZyI+PC9pPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgoKICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGNsYXNzPSJyaWdodCAgY2Fyb3VzZWwtY29udHJvbCIgaHJlZj0iI3Byb3BlcnR5X3VuaXRfY2Fyb3VzZWxfNWU4NGE2YTEzMGU0MSIgZGF0YS1zbGlkZT0ibmV4dCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9ImRlbW8taWNvbiBpY29uLXJpZ2h0LW9wZW4tYmlnIj48L2k+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgICAgPC9kaXY+PGRpdiBjbGFzcz0idGFnLXdyYXBwZXIiPjxkaXYgY2xhc3M9InN0YXR1cy13cmFwcGVyIj48ZGl2IGNsYXNzPSJhY3Rpb25fdGFnX3dyYXBwZXIgVmVudGUgIj5WZW50ZTwvZGl2PjxkaXYgY2xhc3M9InJpYmJvbi1pbnNpZGUgRGlzcG9uaWJsZSI+RGlzcG9uaWJsZTwvZGl2PjwvZGl2PjwvZGl2PjwvZGl2PgoKICAgICAgICAgICAgPGg0PjxhIGhyZWY9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS9lc3RhdGVfcHJvcGVydHkvMi1waWVjZXMtY2F2ZS1tYXJhaWNoZXJzLyI+CiAgICAgICAgICAgICAgICAyIFBJRUNFUyArIENBVkUgJiM4MjExOyBNQVJBSUNIRVJTICAgICAgICAgICAgICAgIDwvYT4gCiAgICAgICAgICAgIDwvaDQ+IAogICAgICAgICAgICAKICAgICAgICAgICAgPGRpdiBjbGFzcz0ibGlzdGluZ191bml0X3ByaWNlX3dyYXBwZXIiPjQyMCAwMDAg4oKsIDxzcGFuIGNsYXNzPSJwcmljZV9sYWJlbCI+SC5BLkk8L3NwYW4+PC9kaXY+ICAgICAgICAKICAgICAgICAKICAgICAgICAKICAgICAgICAgICAKICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Imxpc3RpbmdfZGV0YWlscyB0aGVfZ3JpZF92aWV3Ij4KICAgICAgICAgICAgICAgICAgICBWQTIxMTAtS01JICYjODIxMTsgUGFyaXMgMjDDqG1lICYjODIxMTsgRVhDTFVTSVZJVMOJIEtNSSAmIzgyMTE7IE1BUkFJQ0hFUlMgJiM4MjExOyBEYW5zIHVuIGltbWV1YmxlIGFuY2llbiBzaXR1w6kgw6AgcCA8YSBocmVmPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vZXN0YXRlX3Byb3BlcnR5LzItcGllY2VzLWNhdmUtbWFyYWljaGVycy8iIGNsYXNzPSJ1bml0X21vcmVfeCI+W3BsdXNdPC9hPiAgICAgICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJsaXN0aW5nX2RldGFpbHMgdGhlX2xpc3RfdmlldyI+CiAgICAgICAgICAgICAgICAgICAgVkEyMTEwLUtNSSAmIzgyMTE7IFBhcmlzIDIww6htZSAmIzgyMTE7IEVYQ0xVU0lWSVTDiSBLTUkgJiM4MjExOyBNQVJBSUNIRVJTICYjODIxMTsgRGFucyB1biBpbW1ldWJsZSBhbmNpZW4gc2l0dcOpIMOgIHAgPGEgaHJlZj0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL2VzdGF0ZV9wcm9wZXJ0eS8yLXBpZWNlcy1jYXZlLW1hcmFpY2hlcnMvIiBjbGFzcz0idW5pdF9tb3JlX3giPltwbHVzXTwvYT4gICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgIAoKCiAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb3BlcnR5X2xpc3RpbmdfZGV0YWlscyI+CiAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImluZm9yb29tIj4xPC9zcGFuPjxzcGFuIGNsYXNzPSJpbmZvYmF0aCI+MTwvc3Bhbj4gPHNwYW4gY2xhc3M9ImluZm9zaXplIj40MSwwMCBtPHN1cD4yPC9zdXA+PC9zcGFuPjxhIGhyZWY9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS9lc3RhdGVfcHJvcGVydHkvMi1waWVjZXMtY2F2ZS1tYXJhaWNoZXJzLyIgY2xhc3M9InVuaXRfZGV0YWlsc194Ij5pbmZvIGNvbXBsw6h0ZTwvYT4gICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgCiAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb3BlcnR5X2xvY2F0aW9uIj4KICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb3BlcnR5X2FnZW50X3dyYXBwZXIiPgogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9wZXJ0eV9hZ2VudF9pbWFnZSIgc3R5bGU9ImJhY2tncm91bmQtaW1hZ2U6dXJsKCdodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vd3AtY29udGVudC91cGxvYWRzLzIwMTkvMDYvUHlyw6luw6llcy00LTEyMHgxMjAuanBnJykiPjwvZGl2PiAKICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvcGVydHlfYWdlbnRfaW1hZ2Vfc2lnbiI+PGkgY2xhc3M9ImZhIGZhLXVzZXItY2lyY2xlLW8iIGFyaWEtaGlkZGVuPSJ0cnVlIj48L2k+PC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS9lc3RhdGVfYWdlbnQva21pLXB5cmVuZWVzLyI+S01JIFBZUsOJTsOJRVM8L2E+ICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Imxpc3RpbmdfYWN0aW9ucyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJzaGFyZV91bml0Ij4KICAgICAgICA8YSBocmVmPSJodHRwczovL3d3dy5mYWNlYm9vay5jb20vc2hhcmVyLnBocD91PWh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS9lc3RhdGVfcHJvcGVydHkvMi1waWVjZXMtY2F2ZS1tYXJhaWNoZXJzLyZhbXA7dD0yK1BJRUNFUyslMkIrQ0FWRSslMjYlMjM4MjExJTNCK01BUkFJQ0hFUlMiIHRhcmdldD0iX2JsYW5rIiBjbGFzcz0ic29jaWFsX2ZhY2Vib29rIj48L2E+CiAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly90d2l0dGVyLmNvbS9ob21lP3N0YXR1cz0yK1BJRUNFUyslMkIrQ0FWRSslMjYlMjM4MjExJTNCK01BUkFJQ0hFUlNodHRwcyUzQSUyRiUyRnd3dy5jYWJpbmV0LWttaS5jb20lMkZlc3RhdGVfcHJvcGVydHklMkYyLXBpZWNlcy1jYXZlLW1hcmFpY2hlcnMlMkYiIGNsYXNzPSJzb2NpYWxfdHdlZXQiIHRhcmdldD0iX2JsYW5rIj48L2E+CiAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9waW50ZXJlc3QuY29tL3Bpbi9jcmVhdGUvYnV0dG9uLz91cmw9aHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL2VzdGF0ZV9wcm9wZXJ0eS8yLXBpZWNlcy1jYXZlLW1hcmFpY2hlcnMvJmFtcDttZWRpYT1odHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vd3AtY29udGVudC91cGxvYWRzLzIwMjAvMDMvMTU4MzI1NzMxOV9WQTIxMTBfM19sLmpwZyZhbXA7ZGVzY3JpcHRpb249MitQSUVDRVMrJTJCK0NBVkUrJTI2JTIzODIxMSUzQitNQVJBSUNIRVJTIiB0YXJnZXQ9Il9ibGFuayIgY2xhc3M9InNvY2lhbF9waW50ZXJlc3QiPjwvYT4KICAgICAgICA8YSBocmVmPSJtYWlsdG86ZW1haWxAZW1haWwuY29tP2h0dHA6Ly9zdWJqZWN0PTIrUElFQ0VTKyUyQitDQVZFKyUyNiUyMzgyMTElM0IrTUFSQUlDSEVSUyYjMDM4O2JvZHk9aHR0cHMlM0ElMkYlMkZ3d3cuY2FiaW5ldC1rbWkuY29tJTJGZXN0YXRlX3Byb3BlcnR5JTJGMi1waWVjZXMtY2F2ZS1tYXJhaWNoZXJzJTJGIiBkYXRhLWFjdGlvbj0ic2hhcmUgZW1haWwiICBjbGFzcz0ic29jaWFsX2VtYWlsIj48L2E+CgogICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJzaGFyZV9saXN0IiAgZGF0YS1vcmlnaW5hbC10aXRsZT0icGFydGFnZXIiID48L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9Imljb24tZmF2IGljb24tZmF2LW9mZiIgZGF0YS1vcmlnaW5hbC10aXRsZT0iYWpvdXRlciBhdXggRmF2b3JpcyIgZGF0YS1wb3N0aWQ9IjIyNjQ1Ij48L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImNvbXBhcmUtYWN0aW9uIiBkYXRhLW9yaWdpbmFsLXRpdGxlPSJjb21wYXJlciIgZGF0YS1waW1hZ2U9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS93cC1jb250ZW50L3VwbG9hZHMvMjAyMC8wMy8xNTgzMjU3MzE5X1ZBMjExMF8zX2wtMTQzeDgzLmpwZyIgZGF0YS1waWQ9IjIyNjQ1Ij48L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4gICAgICAgIDwvZGl2PiAgICAgICAgICAgICAKICAgIDwvZGl2PiAgCgoKCjxkaXYgY2xhc3M9ImNvbC1tZC00IGhhc19wcm9wX3NsaWRlciAgbGlzdGluZ193cmFwcGVyIiBkYXRhLW9yZz0iNCIgZGF0YS1saXN0aWQ9IjIyNjM0IiA+IAogICAgPGRpdiBjbGFzcz0icHJvcGVydHlfbGlzdGluZyAgICIgZGF0YS1saW5rPSIiPgogICAgICAgIAogICAgICAgIDxkaXYgY2xhc3M9Imxpc3RpbmctdW5pdC1pbWctd3JhcHBlciI+PGRpdiBjbGFzcz0icHJvcF9uZXdfZGV0YWlscyI+PGRpdiBjbGFzcz0icHJvcF9uZXdfZGV0YWlsc19iYWNrIj48L2Rpdj48ZGl2IGNsYXNzPSJwcm9wZXJ0eV9tZWRpYSI+PGkgY2xhc3M9ImZhIGZhLWNhbWVyYSIgYXJpYS1oaWRkZW49InRydWUiPjwvaT4gMTAKICAgICAgICAgICAgICAgIDwvZGl2PjxkaXYgY2xhc3M9InByb3BlcnR5X2xvY2F0aW9uX2ltYWdlIj4gCiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb3BlcnR5X21hcmtlciI+PC9zcGFuPjxhIGhyZWY9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS9wcm9wZXJ0eV9jaXR5Lzc1MDExLyI+NzUwMTE8L2E+LCA8YSBocmVmPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vcHJvcGVydHlfY2l0eS9wYXJpcy0yLyI+UGFyaXM8L2E+PC9kaXY+PC9kaXY+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBpZD0icHJvcGVydHlfdW5pdF9jYXJvdXNlbF81ZTg0YTZhMTM1ZGUxIiBjbGFzcz0iY2Fyb3VzZWwgcHJvcGVydHlfdW5pdF9jYXJvdXNlbCBzbGlkZSAiIGRhdGEtcmlkZT0iY2Fyb3VzZWwiIGRhdGEtaW50ZXJ2YWw9ImZhbHNlIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY2Fyb3VzZWwtaW5uZXIiPiAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iaXRlbSBhY3RpdmUiPiAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vZXN0YXRlX3Byb3BlcnR5LzItMy1waWVjZXMtcmVmYWl0LWEtbmV1Zi1iYXN0aWxsZS8iPjxpbWcgd2lkdGg9IjUyNSIgaGVpZ2h0PSIzMjgiIHNyYz0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL3dwLWNvbnRlbnQvdXBsb2Fkcy8yMDIwLzAzLzE1ODE5NTcwNTNfVkEyMDg4XzNfbC01MjV4MzI4LmpwZyIgY2xhc3M9Imxhenlsb2FkIGltZy1yZXNwb25zaXZlIHdwLXBvc3QtaW1hZ2UiIGFsdD0iIiBkYXRhLW9yaWdpbmFsPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vd3AtY29udGVudC91cGxvYWRzLzIwMjAvMDMvMTU4MTk1NzA1M19WQTIwODhfM19sLTUyNXgzMjguanBnIiAvPjwvYT4gICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJpdGVtIGxhenktbG9hZC1pdGVtIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vZXN0YXRlX3Byb3BlcnR5LzItMy1waWVjZXMtcmVmYWl0LWEtbmV1Zi1iYXN0aWxsZS8iPjxpbWcgIGRhdGEtbGF6eS1sb2FkLXNyYz0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL3dwLWNvbnRlbnQvdXBsb2Fkcy8yMDIwLzAzLzE1ODE5NTcwNDBfVkEyMDg4XzFfbC01MjV4MzI4LmpwZyIgYWx0PSIyLzMgcGnDqGNlcyByZWZhaXQgw6AgbmV1ZiBCQVNUSUxMRSIgY2xhc3M9ImltZy1yZXNwb25zaXZlIiAvPjwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PjxkaXYgY2xhc3M9Iml0ZW0gbGF6eS1sb2FkLWl0ZW0iPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS9lc3RhdGVfcHJvcGVydHkvMi0zLXBpZWNlcy1yZWZhaXQtYS1uZXVmLWJhc3RpbGxlLyI+PGltZyAgZGF0YS1sYXp5LWxvYWQtc3JjPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vd3AtY29udGVudC91cGxvYWRzLzIwMjAvMDMvMTU4MTk1NzA1N19WQTIwODhfNF9sLTUyNXgzMjguanBnIiBhbHQ9IjIvMyBwacOoY2VzIHJlZmFpdCDDoCBuZXVmIEJBU1RJTExFIiBjbGFzcz0iaW1nLXJlc3BvbnNpdmUiIC8+PC9hPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+PGRpdiBjbGFzcz0iaXRlbSBsYXp5LWxvYWQtaXRlbSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL2VzdGF0ZV9wcm9wZXJ0eS8yLTMtcGllY2VzLXJlZmFpdC1hLW5ldWYtYmFzdGlsbGUvIj48aW1nICBkYXRhLWxhenktbG9hZC1zcmM9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS93cC1jb250ZW50L3VwbG9hZHMvMjAyMC8wMy8xNTgxOTU3MDQ3X1ZBMjA4OF8yX2wtNTI1eDMyOC5qcGciIGFsdD0iMi8zIHBpw6hjZXMgcmVmYWl0IMOgIG5ldWYgQkFTVElMTEUiIGNsYXNzPSJpbWctcmVzcG9uc2l2ZSIgLz48L2E+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj48ZGl2IGNsYXNzPSJpdGVtIGxhenktbG9hZC1pdGVtIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vZXN0YXRlX3Byb3BlcnR5LzItMy1waWVjZXMtcmVmYWl0LWEtbmV1Zi1iYXN0aWxsZS8iPjxpbWcgIGRhdGEtbGF6eS1sb2FkLXNyYz0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL3dwLWNvbnRlbnQvdXBsb2Fkcy8yMDIwLzAzLzE1ODE5NTcwNjFfVkEyMDg4XzVfbC01MjV4MzI4LmpwZyIgYWx0PSIyLzMgcGnDqGNlcyByZWZhaXQgw6AgbmV1ZiBCQVNUSUxMRSIgY2xhc3M9ImltZy1yZXNwb25zaXZlIiAvPjwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PjxkaXYgY2xhc3M9Iml0ZW0gbGF6eS1sb2FkLWl0ZW0iPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS9lc3RhdGVfcHJvcGVydHkvMi0zLXBpZWNlcy1yZWZhaXQtYS1uZXVmLWJhc3RpbGxlLyI+PGltZyAgZGF0YS1sYXp5LWxvYWQtc3JjPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vd3AtY29udGVudC91cGxvYWRzLzIwMjAvMDMvMTU4MTk1NzA2NV9WQTIwODhfNl9sLTUyNXgzMjguanBnIiBhbHQ9IjIvMyBwacOoY2VzIHJlZmFpdCDDoCBuZXVmIEJBU1RJTExFIiBjbGFzcz0iaW1nLXJlc3BvbnNpdmUiIC8+PC9hPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+PGRpdiBjbGFzcz0iaXRlbSBsYXp5LWxvYWQtaXRlbSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL2VzdGF0ZV9wcm9wZXJ0eS8yLTMtcGllY2VzLXJlZmFpdC1hLW5ldWYtYmFzdGlsbGUvIj48aW1nICBkYXRhLWxhenktbG9hZC1zcmM9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS93cC1jb250ZW50L3VwbG9hZHMvMjAyMC8wMy8xNTgxOTU3MDc4X1ZBMjA4OF85X2wtNTI1eDMyOC5qcGciIGFsdD0iMi8zIHBpw6hjZXMgcmVmYWl0IMOgIG5ldWYgQkFTVElMTEUiIGNsYXNzPSJpbWctcmVzcG9uc2l2ZSIgLz48L2E+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj48ZGl2IGNsYXNzPSJpdGVtIGxhenktbG9hZC1pdGVtIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vZXN0YXRlX3Byb3BlcnR5LzItMy1waWVjZXMtcmVmYWl0LWEtbmV1Zi1iYXN0aWxsZS8iPjxpbWcgIGRhdGEtbGF6eS1sb2FkLXNyYz0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL3dwLWNvbnRlbnQvdXBsb2Fkcy8yMDIwLzAzLzE1ODE5NTcwODdfVkEyMDg4XzExX2wtNTI1eDMyOC5qcGciIGFsdD0iMi8zIHBpw6hjZXMgcmVmYWl0IMOgIG5ldWYgQkFTVElMTEUiIGNsYXNzPSJpbWctcmVzcG9uc2l2ZSIgLz48L2E+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj48ZGl2IGNsYXNzPSJpdGVtIGxhenktbG9hZC1pdGVtIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vZXN0YXRlX3Byb3BlcnR5LzItMy1waWVjZXMtcmVmYWl0LWEtbmV1Zi1iYXN0aWxsZS8iPjxpbWcgIGRhdGEtbGF6eS1sb2FkLXNyYz0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL3dwLWNvbnRlbnQvdXBsb2Fkcy8yMDIwLzAzLzE1ODE5NTcwOTNfVkEyMDg4XzEyX2wtNTI1eDMyOC5qcGciIGFsdD0iMi8zIHBpw6hjZXMgcmVmYWl0IMOgIG5ldWYgQkFTVElMTEUiIGNsYXNzPSJpbWctcmVzcG9uc2l2ZSIgLz48L2E+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj48ZGl2IGNsYXNzPSJpdGVtIGxhenktbG9hZC1pdGVtIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vZXN0YXRlX3Byb3BlcnR5LzItMy1waWVjZXMtcmVmYWl0LWEtbmV1Zi1iYXN0aWxsZS8iPjxpbWcgIGRhdGEtbGF6eS1sb2FkLXNyYz0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL3dwLWNvbnRlbnQvdXBsb2Fkcy8yMDIwLzAzLzE1ODE5NTcwODNfVkEyMDg4XzEwX2wtNTI1eDMyOC5qcGciIGFsdD0iMi8zIHBpw6hjZXMgcmVmYWl0IMOgIG5ldWYgQkFTVElMTEUiIGNsYXNzPSJpbWctcmVzcG9uc2l2ZSIgLz48L2E+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vZXN0YXRlX3Byb3BlcnR5LzItMy1waWVjZXMtcmVmYWl0LWEtbmV1Zi1iYXN0aWxsZS8iPiA8L2E+PGEgY2xhc3M9ImxlZnQgIGNhcm91c2VsLWNvbnRyb2wiIGhyZWY9IiNwcm9wZXJ0eV91bml0X2Nhcm91c2VsXzVlODRhNmExMzVkZTEiIGRhdGEtc2xpZGU9InByZXYiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJkZW1vLWljb24gaWNvbi1sZWZ0LW9wZW4tYmlnIj48L2k+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2E+CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgY2xhc3M9InJpZ2h0ICBjYXJvdXNlbC1jb250cm9sIiBocmVmPSIjcHJvcGVydHlfdW5pdF9jYXJvdXNlbF81ZTg0YTZhMTM1ZGUxIiBkYXRhLXNsaWRlPSJuZXh0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZGVtby1pY29uIGljb24tcmlnaHQtb3Blbi1iaWciPjwvaT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgICA8L2Rpdj48ZGl2IGNsYXNzPSJ0YWctd3JhcHBlciI+PGRpdiBjbGFzcz0ic3RhdHVzLXdyYXBwZXIiPjxkaXYgY2xhc3M9ImFjdGlvbl90YWdfd3JhcHBlciBWZW50ZSAiPlZlbnRlPC9kaXY+PGRpdiBjbGFzcz0icmliYm9uLWluc2lkZSBEaXNwb25pYmxlIj5EaXNwb25pYmxlPC9kaXY+PC9kaXY+PC9kaXY+PC9kaXY+CgogICAgICAgICAgICA8aDQ+PGEgaHJlZj0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL2VzdGF0ZV9wcm9wZXJ0eS8yLTMtcGllY2VzLXJlZmFpdC1hLW5ldWYtYmFzdGlsbGUvIj4KICAgICAgICAgICAgICAgIDIvMyBwacOoY2VzIHJlZmFpdCDDoCBuZXVmIEJBU1RJTExFICAgICAgICAgICAgICAgIDwvYT4gCiAgICAgICAgICAgIDwvaDQ+IAogICAgICAgICAgICAKICAgICAgICAgICAgPGRpdiBjbGFzcz0ibGlzdGluZ191bml0X3ByaWNlX3dyYXBwZXIiPjY5OSAwMDAg4oKsIDxzcGFuIGNsYXNzPSJwcmljZV9sYWJlbCI+SC5BLkk8L3NwYW4+PC9kaXY+ICAgICAgICAKICAgICAgICAKICAgICAgICAKICAgICAgICAgICAKICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Imxpc3RpbmdfZGV0YWlscyB0aGVfZ3JpZF92aWV3Ij4KICAgICAgICAgICAgICAgICAgICBWQTIwODgtS01JICYjODIxMTsgUGFyaXMgMTHDqG1lIEV4Y2x1c2l2aXTDqSBLTUkgJiM4MjExOyBCYXN0aWxsZS8gRmF1Ym91cmcgU2FpbnQgQW50b2luZS5Db21tZSB1biBMT0ZULkEgcHJveGltaXTDqSBkIDxhIGhyZWY9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS9lc3RhdGVfcHJvcGVydHkvMi0zLXBpZWNlcy1yZWZhaXQtYS1uZXVmLWJhc3RpbGxlLyIgY2xhc3M9InVuaXRfbW9yZV94Ij5bcGx1c108L2E+ICAgICAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Imxpc3RpbmdfZGV0YWlscyB0aGVfbGlzdF92aWV3Ij4KICAgICAgICAgICAgICAgICAgICBWQTIwODgtS01JICYjODIxMTsgUGFyaXMgMTHDqG1lIEV4Y2x1c2l2aXTDqSBLTUkgJiM4MjExOyBCYXN0aWxsZS8gRmF1Ym91cmcgU2FpbnQgQW50b2luZS5Db21tZSB1biBMT0ZULkEgcHJveGltaXTDqSBkIDxhIGhyZWY9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS9lc3RhdGVfcHJvcGVydHkvMi0zLXBpZWNlcy1yZWZhaXQtYS1uZXVmLWJhc3RpbGxlLyIgY2xhc3M9InVuaXRfbW9yZV94Ij5bcGx1c108L2E+ICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAKCgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9wZXJ0eV9saXN0aW5nX2RldGFpbHMiPgogICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJpbmZvcm9vbSI+MTwvc3Bhbj48c3BhbiBjbGFzcz0iaW5mb2JhdGgiPjE8L3NwYW4+IDxzcGFuIGNsYXNzPSJpbmZvc2l6ZSI+NTEsMDAgbTxzdXA+Mjwvc3VwPjwvc3Bhbj48YSBocmVmPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vZXN0YXRlX3Byb3BlcnR5LzItMy1waWVjZXMtcmVmYWl0LWEtbmV1Zi1iYXN0aWxsZS8iIGNsYXNzPSJ1bml0X2RldGFpbHNfeCI+aW5mbyBjb21wbMOodGU8L2E+ICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgIAogICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9wZXJ0eV9sb2NhdGlvbiI+CiAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9wZXJ0eV9hZ2VudF93cmFwcGVyIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvcGVydHlfYWdlbnRfaW1hZ2UiIHN0eWxlPSJiYWNrZ3JvdW5kLWltYWdlOnVybCgnaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL3dwLWNvbnRlbnQvdXBsb2Fkcy8yMDE5LzA2L1B5csOpbsOpZXMtNC0xMjB4MTIwLmpwZycpIj48L2Rpdj4gCiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb3BlcnR5X2FnZW50X2ltYWdlX3NpZ24iPjxpIGNsYXNzPSJmYSBmYS11c2VyLWNpcmNsZS1vIiBhcmlhLWhpZGRlbj0idHJ1ZSI+PC9pPjwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vZXN0YXRlX2FnZW50L2ttaS1weXJlbmVlcy8iPktNSSBQWVLDiU7DiUVTPC9hPiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJsaXN0aW5nX2FjdGlvbnMiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ic2hhcmVfdW5pdCI+CiAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly93d3cuZmFjZWJvb2suY29tL3NoYXJlci5waHA/dT1odHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vZXN0YXRlX3Byb3BlcnR5LzItMy1waWVjZXMtcmVmYWl0LWEtbmV1Zi1iYXN0aWxsZS8mYW1wO3Q9MiUyRjMrcGklQzMlQThjZXMrcmVmYWl0KyVDMyVBMCtuZXVmK0JBU1RJTExFIiB0YXJnZXQ9Il9ibGFuayIgY2xhc3M9InNvY2lhbF9mYWNlYm9vayI+PC9hPgogICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vdHdpdHRlci5jb20vaG9tZT9zdGF0dXM9MiUyRjMrcGklQzMlQThjZXMrcmVmYWl0KyVDMyVBMCtuZXVmK0JBU1RJTExFaHR0cHMlM0ElMkYlMkZ3d3cuY2FiaW5ldC1rbWkuY29tJTJGZXN0YXRlX3Byb3BlcnR5JTJGMi0zLXBpZWNlcy1yZWZhaXQtYS1uZXVmLWJhc3RpbGxlJTJGIiBjbGFzcz0ic29jaWFsX3R3ZWV0IiB0YXJnZXQ9Il9ibGFuayI+PC9hPgogICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vcGludGVyZXN0LmNvbS9waW4vY3JlYXRlL2J1dHRvbi8/dXJsPWh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS9lc3RhdGVfcHJvcGVydHkvMi0zLXBpZWNlcy1yZWZhaXQtYS1uZXVmLWJhc3RpbGxlLyZhbXA7bWVkaWE9aHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL3dwLWNvbnRlbnQvdXBsb2Fkcy8yMDIwLzAzLzE1ODE5NTcwNTNfVkEyMDg4XzNfbC5qcGcmYW1wO2Rlc2NyaXB0aW9uPTIlMkYzK3BpJUMzJUE4Y2VzK3JlZmFpdCslQzMlQTArbmV1ZitCQVNUSUxMRSIgdGFyZ2V0PSJfYmxhbmsiIGNsYXNzPSJzb2NpYWxfcGludGVyZXN0Ij48L2E+CiAgICAgICAgPGEgaHJlZj0ibWFpbHRvOmVtYWlsQGVtYWlsLmNvbT9odHRwOi8vc3ViamVjdD0yJTJGMytwaSVDMyVBOGNlcytyZWZhaXQrJUMzJUEwK25ldWYrQkFTVElMTEUmIzAzODtib2R5PWh0dHBzJTNBJTJGJTJGd3d3LmNhYmluZXQta21pLmNvbSUyRmVzdGF0ZV9wcm9wZXJ0eSUyRjItMy1waWVjZXMtcmVmYWl0LWEtbmV1Zi1iYXN0aWxsZSUyRiIgZGF0YS1hY3Rpb249InNoYXJlIGVtYWlsIiAgY2xhc3M9InNvY2lhbF9lbWFpbCI+PC9hPgoKICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ic2hhcmVfbGlzdCIgIGRhdGEtb3JpZ2luYWwtdGl0bGU9InBhcnRhZ2VyIiA+PC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJpY29uLWZhdiBpY29uLWZhdi1vZmYiIGRhdGEtb3JpZ2luYWwtdGl0bGU9ImFqb3V0ZXIgYXV4IEZhdm9yaXMiIGRhdGEtcG9zdGlkPSIyMjYzNCI+PC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJjb21wYXJlLWFjdGlvbiIgZGF0YS1vcmlnaW5hbC10aXRsZT0iY29tcGFyZXIiIGRhdGEtcGltYWdlPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vd3AtY29udGVudC91cGxvYWRzLzIwMjAvMDMvMTU4MTk1NzA1M19WQTIwODhfM19sLTE0M3g4My5qcGciIGRhdGEtcGlkPSIyMjYzNCI+PC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+ICAgICAgICA8L2Rpdj4gICAgICAgICAgICAgCiAgICA8L2Rpdj4gIAoKCgo8ZGl2IGNsYXNzPSJjb2wtbWQtNCBoYXNfcHJvcF9zbGlkZXIgIGxpc3Rpbmdfd3JhcHBlciIgZGF0YS1vcmc9IjQiIGRhdGEtbGlzdGlkPSIyMjYyMSIgPiAKICAgIDxkaXYgY2xhc3M9InByb3BlcnR5X2xpc3RpbmcgICAiIGRhdGEtbGluaz0iIj4KICAgICAgICAKICAgICAgICA8ZGl2IGNsYXNzPSJsaXN0aW5nLXVuaXQtaW1nLXdyYXBwZXIiPjxkaXYgY2xhc3M9InByb3BfbmV3X2RldGFpbHMiPjxkaXYgY2xhc3M9InByb3BfbmV3X2RldGFpbHNfYmFjayI+PC9kaXY+PGRpdiBjbGFzcz0icHJvcGVydHlfbWVkaWEiPjxpIGNsYXNzPSJmYSBmYS1jYW1lcmEiIGFyaWEtaGlkZGVuPSJ0cnVlIj48L2k+IDYKICAgICAgICAgICAgICAgIDwvZGl2PjxkaXYgY2xhc3M9InByb3BlcnR5X2xvY2F0aW9uX2ltYWdlIj4gCiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb3BlcnR5X21hcmtlciI+PC9zcGFuPjxhIGhyZWY9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS9wcm9wZXJ0eV9jaXR5Lzc1MDIwLyI+NzUwMjA8L2E+LCA8YSBocmVmPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vcHJvcGVydHlfY2l0eS9wYXJpcy0yLyI+UGFyaXM8L2E+PC9kaXY+PC9kaXY+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBpZD0icHJvcGVydHlfdW5pdF9jYXJvdXNlbF81ZTg0YTZhMTM5ZTc5IiBjbGFzcz0iY2Fyb3VzZWwgcHJvcGVydHlfdW5pdF9jYXJvdXNlbCBzbGlkZSAiIGRhdGEtcmlkZT0iY2Fyb3VzZWwiIGRhdGEtaW50ZXJ2YWw9ImZhbHNlIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY2Fyb3VzZWwtaW5uZXIiPiAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iaXRlbSBhY3RpdmUiPiAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vZXN0YXRlX3Byb3BlcnR5L2FwcGFydGVtZW50LTItMy1waWVjZXMtamFyZGluLWRlLTQ1LW0yLWNhdmUvIj48aW1nIHdpZHRoPSI1MjUiIGhlaWdodD0iMzI4IiBzcmM9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS93cC1jb250ZW50L3VwbG9hZHMvMjAyMC8wMy8xNTgzMjQ4Nzc0X1ZBMjA3NF8xM19sLTUyNXgzMjguanBnIiBjbGFzcz0ibGF6eWxvYWQgaW1nLXJlc3BvbnNpdmUgd3AtcG9zdC1pbWFnZSIgYWx0PSIiIGRhdGEtb3JpZ2luYWw9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS93cC1jb250ZW50L3VwbG9hZHMvMjAyMC8wMy8xNTgzMjQ4Nzc0X1ZBMjA3NF8xM19sLTUyNXgzMjguanBnIiAvPjwvYT4gICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJpdGVtIGxhenktbG9hZC1pdGVtIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vZXN0YXRlX3Byb3BlcnR5L2FwcGFydGVtZW50LTItMy1waWVjZXMtamFyZGluLWRlLTQ1LW0yLWNhdmUvIj48aW1nICBkYXRhLWxhenktbG9hZC1zcmM9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS93cC1jb250ZW50L3VwbG9hZHMvMjAyMC8wMy8xNTgzMjQ4MTYzX1ZBMjA3NF84X2wtNTI1eDMyOC5qcGciIGFsdD0iQVBQQVJURU1FTlQgMi8zIFBJRUNFUyArIEpBUkRJTiBERSA0NSBNMiArIENBVkUiIGNsYXNzPSJpbWctcmVzcG9uc2l2ZSIgLz48L2E+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj48ZGl2IGNsYXNzPSJpdGVtIGxhenktbG9hZC1pdGVtIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vZXN0YXRlX3Byb3BlcnR5L2FwcGFydGVtZW50LTItMy1waWVjZXMtamFyZGluLWRlLTQ1LW0yLWNhdmUvIj48aW1nICBkYXRhLWxhenktbG9hZC1zcmM9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS93cC1jb250ZW50L3VwbG9hZHMvMjAyMC8wMy8xNTgzMjQ4NjM1X1ZBMjA3NF8xMl9sLTUyNXgzMjguanBnIiBhbHQ9IkFQUEFSVEVNRU5UIDIvMyBQSUVDRVMgKyBKQVJESU4gREUgNDUgTTIgKyBDQVZFIiBjbGFzcz0iaW1nLXJlc3BvbnNpdmUiIC8+PC9hPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+PGRpdiBjbGFzcz0iaXRlbSBsYXp5LWxvYWQtaXRlbSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL2VzdGF0ZV9wcm9wZXJ0eS9hcHBhcnRlbWVudC0yLTMtcGllY2VzLWphcmRpbi1kZS00NS1tMi1jYXZlLyI+PGltZyAgZGF0YS1sYXp5LWxvYWQtc3JjPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vd3AtY29udGVudC91cGxvYWRzLzIwMjAvMDMvMTU4MzI0ODU0MF9WQTIwNzRfMTBfbC01MjV4MzI4LmpwZyIgYWx0PSJBUFBBUlRFTUVOVCAyLzMgUElFQ0VTICsgSkFSRElOIERFIDQ1IE0yICsgQ0FWRSIgY2xhc3M9ImltZy1yZXNwb25zaXZlIiAvPjwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PjxkaXYgY2xhc3M9Iml0ZW0gbGF6eS1sb2FkLWl0ZW0iPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS9lc3RhdGVfcHJvcGVydHkvYXBwYXJ0ZW1lbnQtMi0zLXBpZWNlcy1qYXJkaW4tZGUtNDUtbTItY2F2ZS8iPjxpbWcgIGRhdGEtbGF6eS1sb2FkLXNyYz0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL3dwLWNvbnRlbnQvdXBsb2Fkcy8yMDIwLzAzLzE1ODMyNDg1NzNfVkEyMDc0XzExX2wtNTI1eDMyOC5qcGciIGFsdD0iQVBQQVJURU1FTlQgMi8zIFBJRUNFUyArIEpBUkRJTiBERSA0NSBNMiArIENBVkUiIGNsYXNzPSJpbWctcmVzcG9uc2l2ZSIgLz48L2E+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj48ZGl2IGNsYXNzPSJpdGVtIGxhenktbG9hZC1pdGVtIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vZXN0YXRlX3Byb3BlcnR5L2FwcGFydGVtZW50LTItMy1waWVjZXMtamFyZGluLWRlLTQ1LW0yLWNhdmUvIj48aW1nICBkYXRhLWxhenktbG9hZC1zcmM9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS93cC1jb250ZW50L3VwbG9hZHMvMjAyMC8wMy8xNTgzMjQ4NDk5X1ZBMjA3NF8xX2wtNTI1eDMyOC5qcGciIGFsdD0iQVBQQVJURU1FTlQgMi8zIFBJRUNFUyArIEpBUkRJTiBERSA0NSBNMiArIENBVkUiIGNsYXNzPSJpbWctcmVzcG9uc2l2ZSIgLz48L2E+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vZXN0YXRlX3Byb3BlcnR5L2FwcGFydGVtZW50LTItMy1waWVjZXMtamFyZGluLWRlLTQ1LW0yLWNhdmUvIj4gPC9hPjxhIGNsYXNzPSJsZWZ0ICBjYXJvdXNlbC1jb250cm9sIiBocmVmPSIjcHJvcGVydHlfdW5pdF9jYXJvdXNlbF81ZTg0YTZhMTM5ZTc5IiBkYXRhLXNsaWRlPSJwcmV2Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZGVtby1pY29uIGljb24tbGVmdC1vcGVuLWJpZyI+PC9pPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgoKICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGNsYXNzPSJyaWdodCAgY2Fyb3VzZWwtY29udHJvbCIgaHJlZj0iI3Byb3BlcnR5X3VuaXRfY2Fyb3VzZWxfNWU4NGE2YTEzOWU3OSIgZGF0YS1zbGlkZT0ibmV4dCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9ImRlbW8taWNvbiBpY29uLXJpZ2h0LW9wZW4tYmlnIj48L2k+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgICAgPC9kaXY+PGRpdiBjbGFzcz0idGFnLXdyYXBwZXIiPjxkaXYgY2xhc3M9InN0YXR1cy13cmFwcGVyIj48ZGl2IGNsYXNzPSJhY3Rpb25fdGFnX3dyYXBwZXIgVmVudGUgIj5WZW50ZTwvZGl2PjxkaXYgY2xhc3M9InJpYmJvbi1pbnNpZGUgU291cy1jb21wcm9taXMiPlNvdXMgY29tcHJvbWlzPC9kaXY+PC9kaXY+PC9kaXY+PC9kaXY+CgogICAgICAgICAgICA8aDQ+PGEgaHJlZj0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL2VzdGF0ZV9wcm9wZXJ0eS9hcHBhcnRlbWVudC0yLTMtcGllY2VzLWphcmRpbi1kZS00NS1tMi1jYXZlLyI+CiAgICAgICAgICAgICAgICBBUFBBUlRFTUVOVCAyLzMgUElFQ0VTICsgSkFSRElOIERFIDQ1IE0yICsgQy4uLiAgICAgICAgICAgICAgICA8L2E+IAogICAgICAgICAgICA8L2g0PiAKICAgICAgICAgICAgCiAgICAgICAgICAgIDxkaXYgY2xhc3M9Imxpc3RpbmdfdW5pdF9wcmljZV93cmFwcGVyIj48c3BhbiBjbGFzcz0icHJpY2VfbGFiZWwiPk5vdXMgY29uc3VsdGVyPC9zcGFuPjwvZGl2PiAgICAgICAgCiAgICAgICAgCiAgICAgICAgCiAgICAgICAgICAgCiAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJsaXN0aW5nX2RldGFpbHMgdGhlX2dyaWRfdmlldyI+CiAgICAgICAgICAgICAgICAgICAgVkEyMDc0LUtNSSAmIzgyMTE7IFNvdXMgY29tcHJvbWlzIDogUEFSSVMgMjAgJiM4MjExOyBDQU1QQUdORSBBIFBBUklTICYjODIxMTsgRXhjbHVzaXZpdMOpIEtNSSAmIzgyMTE7IEEgcHJveGltaXTDqSBkIDxhIGhyZWY9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS9lc3RhdGVfcHJvcGVydHkvYXBwYXJ0ZW1lbnQtMi0zLXBpZWNlcy1qYXJkaW4tZGUtNDUtbTItY2F2ZS8iIGNsYXNzPSJ1bml0X21vcmVfeCI+W3BsdXNdPC9hPiAgICAgICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJsaXN0aW5nX2RldGFpbHMgdGhlX2xpc3RfdmlldyI+CiAgICAgICAgICAgICAgICAgICAgVkEyMDc0LUtNSSAmIzgyMTE7IFNvdXMgY29tcHJvbWlzIDogUEFSSVMgMjAgJiM4MjExOyBDQU1QQUdORSBBIFBBUklTICYjODIxMTsgRXhjbHVzaXZpdMOpIEtNSSAmIzgyMTE7IEEgcHJveGltaXTDqSBkIDxhIGhyZWY9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS9lc3RhdGVfcHJvcGVydHkvYXBwYXJ0ZW1lbnQtMi0zLXBpZWNlcy1qYXJkaW4tZGUtNDUtbTItY2F2ZS8iIGNsYXNzPSJ1bml0X21vcmVfeCI+W3BsdXNdPC9hPiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgCgoKICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvcGVydHlfbGlzdGluZ19kZXRhaWxzIj4KICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iaW5mb3Jvb20iPjE8L3NwYW4+PHNwYW4gY2xhc3M9ImluZm9iYXRoIj4xPC9zcGFuPiA8c3BhbiBjbGFzcz0iaW5mb3NpemUiPjQ5LDAwIG08c3VwPjI8L3N1cD48L3NwYW4+PGEgaHJlZj0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL2VzdGF0ZV9wcm9wZXJ0eS9hcHBhcnRlbWVudC0yLTMtcGllY2VzLWphcmRpbi1kZS00NS1tMi1jYXZlLyIgY2xhc3M9InVuaXRfZGV0YWlsc194Ij5pbmZvIGNvbXBsw6h0ZTwvYT4gICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgCiAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb3BlcnR5X2xvY2F0aW9uIj4KICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb3BlcnR5X2FnZW50X3dyYXBwZXIiPgogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9wZXJ0eV9hZ2VudF9pbWFnZSIgc3R5bGU9ImJhY2tncm91bmQtaW1hZ2U6dXJsKCdodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vd3AtY29udGVudC91cGxvYWRzLzIwMTkvMDYvUHlyw6luw6llcy00LTEyMHgxMjAuanBnJykiPjwvZGl2PiAKICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvcGVydHlfYWdlbnRfaW1hZ2Vfc2lnbiI+PGkgY2xhc3M9ImZhIGZhLXVzZXItY2lyY2xlLW8iIGFyaWEtaGlkZGVuPSJ0cnVlIj48L2k+PC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS9lc3RhdGVfYWdlbnQva21pLXB5cmVuZWVzLyI+S01JIFBZUsOJTsOJRVM8L2E+ICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Imxpc3RpbmdfYWN0aW9ucyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJzaGFyZV91bml0Ij4KICAgICAgICA8YSBocmVmPSJodHRwczovL3d3dy5mYWNlYm9vay5jb20vc2hhcmVyLnBocD91PWh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS9lc3RhdGVfcHJvcGVydHkvYXBwYXJ0ZW1lbnQtMi0zLXBpZWNlcy1qYXJkaW4tZGUtNDUtbTItY2F2ZS8mYW1wO3Q9QVBQQVJURU1FTlQrMiUyRjMrUElFQ0VTKyUyQitKQVJESU4rREUrNDUrTTIrJTJCK0NBVkUiIHRhcmdldD0iX2JsYW5rIiBjbGFzcz0ic29jaWFsX2ZhY2Vib29rIj48L2E+CiAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly90d2l0dGVyLmNvbS9ob21lP3N0YXR1cz1BUFBBUlRFTUVOVCsyJTJGMytQSUVDRVMrJTJCK0pBUkRJTitERSs0NStNMislMkIrQ0FWRWh0dHBzJTNBJTJGJTJGd3d3LmNhYmluZXQta21pLmNvbSUyRmVzdGF0ZV9wcm9wZXJ0eSUyRmFwcGFydGVtZW50LTItMy1waWVjZXMtamFyZGluLWRlLTQ1LW0yLWNhdmUlMkYiIGNsYXNzPSJzb2NpYWxfdHdlZXQiIHRhcmdldD0iX2JsYW5rIj48L2E+CiAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9waW50ZXJlc3QuY29tL3Bpbi9jcmVhdGUvYnV0dG9uLz91cmw9aHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL2VzdGF0ZV9wcm9wZXJ0eS9hcHBhcnRlbWVudC0yLTMtcGllY2VzLWphcmRpbi1kZS00NS1tMi1jYXZlLyZhbXA7bWVkaWE9aHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL3dwLWNvbnRlbnQvdXBsb2Fkcy8yMDIwLzAzLzE1ODMyNDg3NzRfVkEyMDc0XzEzX2wuanBnJmFtcDtkZXNjcmlwdGlvbj1BUFBBUlRFTUVOVCsyJTJGMytQSUVDRVMrJTJCK0pBUkRJTitERSs0NStNMislMkIrQ0FWRSIgdGFyZ2V0PSJfYmxhbmsiIGNsYXNzPSJzb2NpYWxfcGludGVyZXN0Ij48L2E+CiAgICAgICAgPGEgaHJlZj0ibWFpbHRvOmVtYWlsQGVtYWlsLmNvbT9odHRwOi8vc3ViamVjdD1BUFBBUlRFTUVOVCsyJTJGMytQSUVDRVMrJTJCK0pBUkRJTitERSs0NStNMislMkIrQ0FWRSYjMDM4O2JvZHk9aHR0cHMlM0ElMkYlMkZ3d3cuY2FiaW5ldC1rbWkuY29tJTJGZXN0YXRlX3Byb3BlcnR5JTJGYXBwYXJ0ZW1lbnQtMi0zLXBpZWNlcy1qYXJkaW4tZGUtNDUtbTItY2F2ZSUyRiIgZGF0YS1hY3Rpb249InNoYXJlIGVtYWlsIiAgY2xhc3M9InNvY2lhbF9lbWFpbCI+PC9hPgoKICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ic2hhcmVfbGlzdCIgIGRhdGEtb3JpZ2luYWwtdGl0bGU9InBhcnRhZ2VyIiA+PC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJpY29uLWZhdiBpY29uLWZhdi1vZmYiIGRhdGEtb3JpZ2luYWwtdGl0bGU9ImFqb3V0ZXIgYXV4IEZhdm9yaXMiIGRhdGEtcG9zdGlkPSIyMjYyMSI+PC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJjb21wYXJlLWFjdGlvbiIgZGF0YS1vcmlnaW5hbC10aXRsZT0iY29tcGFyZXIiIGRhdGEtcGltYWdlPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vd3AtY29udGVudC91cGxvYWRzLzIwMjAvMDMvMTU4MzI0ODc3NF9WQTIwNzRfMTNfbC0xNDN4ODMuanBnIiBkYXRhLXBpZD0iMjI2MjEiPjwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PiAgICAgICAgPC9kaXY+ICAgICAgICAgICAgIAogICAgPC9kaXY+ICAKCgoKPGRpdiBjbGFzcz0iY29sLW1kLTQgaGFzX3Byb3Bfc2xpZGVyICBsaXN0aW5nX3dyYXBwZXIiIGRhdGEtb3JnPSI0IiBkYXRhLWxpc3RpZD0iMjI1NTgiID4gCiAgICA8ZGl2IGNsYXNzPSJwcm9wZXJ0eV9saXN0aW5nICAgIiBkYXRhLWxpbms9IiI+CiAgICAgICAgCiAgICAgICAgPGRpdiBjbGFzcz0ibGlzdGluZy11bml0LWltZy13cmFwcGVyIj48ZGl2IGNsYXNzPSJwcm9wX25ld19kZXRhaWxzIj48ZGl2IGNsYXNzPSJwcm9wX25ld19kZXRhaWxzX2JhY2siPjwvZGl2PjxkaXYgY2xhc3M9InByb3BlcnR5X21lZGlhIj48aSBjbGFzcz0iZmEgZmEtY2FtZXJhIiBhcmlhLWhpZGRlbj0idHJ1ZSI+PC9pPiA3CiAgICAgICAgICAgICAgICA8L2Rpdj48ZGl2IGNsYXNzPSJwcm9wZXJ0eV9sb2NhdGlvbl9pbWFnZSI+IAogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9wZXJ0eV9tYXJrZXIiPjwvc3Bhbj48YSBocmVmPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vcHJvcGVydHlfY2l0eS83NTAxMi8iPjc1MDEyPC9hPiwgPGEgaHJlZj0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL3Byb3BlcnR5X2NpdHkvcGFyaXMtMi8iPlBhcmlzPC9hPjwvZGl2PjwvZGl2PgogICAgICAgICAgICAgICAgICAgIDxkaXYgaWQ9InByb3BlcnR5X3VuaXRfY2Fyb3VzZWxfNWU4NGE2YTEzZTExMyIgY2xhc3M9ImNhcm91c2VsIHByb3BlcnR5X3VuaXRfY2Fyb3VzZWwgc2xpZGUgIiBkYXRhLXJpZGU9ImNhcm91c2VsIiBkYXRhLWludGVydmFsPSJmYWxzZSI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNhcm91c2VsLWlubmVyIj4gICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Iml0ZW0gYWN0aXZlIj4gICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL2VzdGF0ZV9wcm9wZXJ0eS8yLXBpZWNlcy1waWNwdXNjYXZlLyI+PGltZyB3aWR0aD0iNTI1IiBoZWlnaHQ9IjMyOCIgc3JjPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vd3AtY29udGVudC91cGxvYWRzLzIwMjAvMDIvMTU4MjU2MTk4M19WQTIwOThfMl9sLTUyNXgzMjguanBnIiBjbGFzcz0ibGF6eWxvYWQgaW1nLXJlc3BvbnNpdmUgd3AtcG9zdC1pbWFnZSIgYWx0PSIiIGRhdGEtb3JpZ2luYWw9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS93cC1jb250ZW50L3VwbG9hZHMvMjAyMC8wMi8xNTgyNTYxOTgzX1ZBMjA5OF8yX2wtNTI1eDMyOC5qcGciIC8+PC9hPiAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Iml0ZW0gbGF6eS1sb2FkLWl0ZW0iPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS9lc3RhdGVfcHJvcGVydHkvMi1waWVjZXMtcGljcHVzY2F2ZS8iPjxpbWcgIGRhdGEtbGF6eS1sb2FkLXNyYz0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL3dwLWNvbnRlbnQvdXBsb2Fkcy8yMDIwLzAyLzE1ODI1NjE5NzRfVkEyMDk4XzFfbC01MjV4MzI4LmpwZyIgYWx0PSIyIFBJRUNFUyBQSUNQVVMrQ0FWRSIgY2xhc3M9ImltZy1yZXNwb25zaXZlIiAvPjwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PjxkaXYgY2xhc3M9Iml0ZW0gbGF6eS1sb2FkLWl0ZW0iPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS9lc3RhdGVfcHJvcGVydHkvMi1waWVjZXMtcGljcHVzY2F2ZS8iPjxpbWcgIGRhdGEtbGF6eS1sb2FkLXNyYz0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL3dwLWNvbnRlbnQvdXBsb2Fkcy8yMDIwLzAyLzE1ODI1NjIwMDBfVkEyMDk4XzNfbC01MjV4MzI4LmpwZyIgYWx0PSIyIFBJRUNFUyBQSUNQVVMrQ0FWRSIgY2xhc3M9ImltZy1yZXNwb25zaXZlIiAvPjwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PjxkaXYgY2xhc3M9Iml0ZW0gbGF6eS1sb2FkLWl0ZW0iPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS9lc3RhdGVfcHJvcGVydHkvMi1waWVjZXMtcGljcHVzY2F2ZS8iPjxpbWcgIGRhdGEtbGF6eS1sb2FkLXNyYz0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL3dwLWNvbnRlbnQvdXBsb2Fkcy8yMDIwLzAyLzE1ODI1NjIwMTRfVkEyMDk4XzRfbC01MjV4MzI4LmpwZyIgYWx0PSIyIFBJRUNFUyBQSUNQVVMrQ0FWRSIgY2xhc3M9ImltZy1yZXNwb25zaXZlIiAvPjwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PjxkaXYgY2xhc3M9Iml0ZW0gbGF6eS1sb2FkLWl0ZW0iPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS9lc3RhdGVfcHJvcGVydHkvMi1waWVjZXMtcGljcHVzY2F2ZS8iPjxpbWcgIGRhdGEtbGF6eS1sb2FkLXNyYz0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL3dwLWNvbnRlbnQvdXBsb2Fkcy8yMDIwLzAyLzE1ODI1NjIwMzJfVkEyMDk4XzZfbC01MjV4MzI4LmpwZyIgYWx0PSIyIFBJRUNFUyBQSUNQVVMrQ0FWRSIgY2xhc3M9ImltZy1yZXNwb25zaXZlIiAvPjwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PjxkaXYgY2xhc3M9Iml0ZW0gbGF6eS1sb2FkLWl0ZW0iPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS9lc3RhdGVfcHJvcGVydHkvMi1waWVjZXMtcGljcHVzY2F2ZS8iPjxpbWcgIGRhdGEtbGF6eS1sb2FkLXNyYz0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL3dwLWNvbnRlbnQvdXBsb2Fkcy8yMDIwLzAyLzE1ODI1NjIwMjdfVkEyMDk4XzVfbC01MjV4MzI4LmpwZyIgYWx0PSIyIFBJRUNFUyBQSUNQVVMrQ0FWRSIgY2xhc3M9ImltZy1yZXNwb25zaXZlIiAvPjwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PjxkaXYgY2xhc3M9Iml0ZW0gbGF6eS1sb2FkLWl0ZW0iPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS9lc3RhdGVfcHJvcGVydHkvMi1waWVjZXMtcGljcHVzY2F2ZS8iPjxpbWcgIGRhdGEtbGF6eS1sb2FkLXNyYz0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL3dwLWNvbnRlbnQvdXBsb2Fkcy8yMDIwLzAyLzE1ODI2MjE3MzhfVkEyMDk4XzdfbC01MjV4MzI4LmpwZyIgYWx0PSIyIFBJRUNFUyBQSUNQVVMrQ0FWRSIgY2xhc3M9ImltZy1yZXNwb25zaXZlIiAvPjwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS9lc3RhdGVfcHJvcGVydHkvMi1waWVjZXMtcGljcHVzY2F2ZS8iPiA8L2E+PGEgY2xhc3M9ImxlZnQgIGNhcm91c2VsLWNvbnRyb2wiIGhyZWY9IiNwcm9wZXJ0eV91bml0X2Nhcm91c2VsXzVlODRhNmExM2UxMTMiIGRhdGEtc2xpZGU9InByZXYiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJkZW1vLWljb24gaWNvbi1sZWZ0LW9wZW4tYmlnIj48L2k+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2E+CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgY2xhc3M9InJpZ2h0ICBjYXJvdXNlbC1jb250cm9sIiBocmVmPSIjcHJvcGVydHlfdW5pdF9jYXJvdXNlbF81ZTg0YTZhMTNlMTEzIiBkYXRhLXNsaWRlPSJuZXh0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZGVtby1pY29uIGljb24tcmlnaHQtb3Blbi1iaWciPjwvaT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgICA8L2Rpdj48ZGl2IGNsYXNzPSJ0YWctd3JhcHBlciI+PGRpdiBjbGFzcz0ic3RhdHVzLXdyYXBwZXIiPjxkaXYgY2xhc3M9ImFjdGlvbl90YWdfd3JhcHBlciBWZW50ZSAiPlZlbnRlPC9kaXY+PGRpdiBjbGFzcz0icmliYm9uLWluc2lkZSBTb3VzLWNvbXByb21pcyI+U291cyBjb21wcm9taXM8L2Rpdj48L2Rpdj48L2Rpdj48L2Rpdj4KCiAgICAgICAgICAgIDxoND48YSBocmVmPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vZXN0YXRlX3Byb3BlcnR5LzItcGllY2VzLXBpY3B1c2NhdmUvIj4KICAgICAgICAgICAgICAgIDIgUElFQ0VTIFBJQ1BVUytDQVZFICAgICAgICAgICAgICAgIDwvYT4gCiAgICAgICAgICAgIDwvaDQ+IAogICAgICAgICAgICAKICAgICAgICAgICAgPGRpdiBjbGFzcz0ibGlzdGluZ191bml0X3ByaWNlX3dyYXBwZXIiPjxzcGFuIGNsYXNzPSJwcmljZV9sYWJlbCI+Tm91cyBjb25zdWx0ZXI8L3NwYW4+PC9kaXY+ICAgICAgICAKICAgICAgICAKICAgICAgICAKICAgICAgICAgICAKICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Imxpc3RpbmdfZGV0YWlscyB0aGVfZ3JpZF92aWV3Ij4KICAgICAgICAgICAgICAgICAgICBWQTIwOTgtS01JICYjODIxMTsgU291cyBjb21wcm9taXMgOiBQQVJJUyAxMsOobWUgJiM4MjExOyBFWENMVVNJVklUw4kgS01JICYjODIxMTsgUElDUFVTICYjODIxMTsgQXUgNsOobWUgw6l0YWdlIGF2ZWMgYSA8YSBocmVmPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vZXN0YXRlX3Byb3BlcnR5LzItcGllY2VzLXBpY3B1c2NhdmUvIiBjbGFzcz0idW5pdF9tb3JlX3giPltwbHVzXTwvYT4gICAgICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ibGlzdGluZ19kZXRhaWxzIHRoZV9saXN0X3ZpZXciPgogICAgICAgICAgICAgICAgICAgIFZBMjA5OC1LTUkgJiM4MjExOyBTb3VzIGNvbXByb21pcyA6IFBBUklTIDEyw6htZSAmIzgyMTE7IEVYQ0xVU0lWSVTDiSBLTUkgJiM4MjExOyBQSUNQVVMgJiM4MjExOyBBdSA2w6htZSDDqXRhZ2UgYXZlYyBhIDxhIGhyZWY9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS9lc3RhdGVfcHJvcGVydHkvMi1waWVjZXMtcGljcHVzY2F2ZS8iIGNsYXNzPSJ1bml0X21vcmVfeCI+W3BsdXNdPC9hPiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgCgoKICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvcGVydHlfbGlzdGluZ19kZXRhaWxzIj4KICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iaW5mb3Jvb20iPjE8L3NwYW4+PHNwYW4gY2xhc3M9ImluZm9iYXRoIj4xPC9zcGFuPiA8c3BhbiBjbGFzcz0iaW5mb3NpemUiPjQ2LDAwIG08c3VwPjI8L3N1cD48L3NwYW4+PGEgaHJlZj0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL2VzdGF0ZV9wcm9wZXJ0eS8yLXBpZWNlcy1waWNwdXNjYXZlLyIgY2xhc3M9InVuaXRfZGV0YWlsc194Ij5pbmZvIGNvbXBsw6h0ZTwvYT4gICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgCiAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb3BlcnR5X2xvY2F0aW9uIj4KICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb3BlcnR5X2FnZW50X3dyYXBwZXIiPgogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9wZXJ0eV9hZ2VudF9pbWFnZSIgc3R5bGU9ImJhY2tncm91bmQtaW1hZ2U6dXJsKCdodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vd3AtY29udGVudC91cGxvYWRzLzIwMTkvMDYvUHlyw6luw6llcy00LTEyMHgxMjAuanBnJykiPjwvZGl2PiAKICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvcGVydHlfYWdlbnRfaW1hZ2Vfc2lnbiI+PGkgY2xhc3M9ImZhIGZhLXVzZXItY2lyY2xlLW8iIGFyaWEtaGlkZGVuPSJ0cnVlIj48L2k+PC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS9lc3RhdGVfYWdlbnQva21pLXB5cmVuZWVzLyI+S01JIFBZUsOJTsOJRVM8L2E+ICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Imxpc3RpbmdfYWN0aW9ucyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJzaGFyZV91bml0Ij4KICAgICAgICA8YSBocmVmPSJodHRwczovL3d3dy5mYWNlYm9vay5jb20vc2hhcmVyLnBocD91PWh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS9lc3RhdGVfcHJvcGVydHkvMi1waWVjZXMtcGljcHVzY2F2ZS8mYW1wO3Q9MitQSUVDRVMrUElDUFVTJTJCQ0FWRSIgdGFyZ2V0PSJfYmxhbmsiIGNsYXNzPSJzb2NpYWxfZmFjZWJvb2siPjwvYT4KICAgICAgICA8YSBocmVmPSJodHRwczovL3R3aXR0ZXIuY29tL2hvbWU/c3RhdHVzPTIrUElFQ0VTK1BJQ1BVUyUyQkNBVkVodHRwcyUzQSUyRiUyRnd3dy5jYWJpbmV0LWttaS5jb20lMkZlc3RhdGVfcHJvcGVydHklMkYyLXBpZWNlcy1waWNwdXNjYXZlJTJGIiBjbGFzcz0ic29jaWFsX3R3ZWV0IiB0YXJnZXQ9Il9ibGFuayI+PC9hPgogICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vcGludGVyZXN0LmNvbS9waW4vY3JlYXRlL2J1dHRvbi8/dXJsPWh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS9lc3RhdGVfcHJvcGVydHkvMi1waWVjZXMtcGljcHVzY2F2ZS8mYW1wO21lZGlhPWh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS93cC1jb250ZW50L3VwbG9hZHMvMjAyMC8wMi8xNTgyNTYxOTgzX1ZBMjA5OF8yX2wuanBnJmFtcDtkZXNjcmlwdGlvbj0yK1BJRUNFUytQSUNQVVMlMkJDQVZFIiB0YXJnZXQ9Il9ibGFuayIgY2xhc3M9InNvY2lhbF9waW50ZXJlc3QiPjwvYT4KICAgICAgICA8YSBocmVmPSJtYWlsdG86ZW1haWxAZW1haWwuY29tP2h0dHA6Ly9zdWJqZWN0PTIrUElFQ0VTK1BJQ1BVUyUyQkNBVkUmIzAzODtib2R5PWh0dHBzJTNBJTJGJTJGd3d3LmNhYmluZXQta21pLmNvbSUyRmVzdGF0ZV9wcm9wZXJ0eSUyRjItcGllY2VzLXBpY3B1c2NhdmUlMkYiIGRhdGEtYWN0aW9uPSJzaGFyZSBlbWFpbCIgIGNsYXNzPSJzb2NpYWxfZW1haWwiPjwvYT4KCiAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InNoYXJlX2xpc3QiICBkYXRhLW9yaWdpbmFsLXRpdGxlPSJwYXJ0YWdlciIgPjwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iaWNvbi1mYXYgaWNvbi1mYXYtb2ZmIiBkYXRhLW9yaWdpbmFsLXRpdGxlPSJham91dGVyIGF1eCBGYXZvcmlzIiBkYXRhLXBvc3RpZD0iMjI1NTgiPjwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iY29tcGFyZS1hY3Rpb24iIGRhdGEtb3JpZ2luYWwtdGl0bGU9ImNvbXBhcmVyIiBkYXRhLXBpbWFnZT0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL3dwLWNvbnRlbnQvdXBsb2Fkcy8yMDIwLzAyLzE1ODI1NjE5ODNfVkEyMDk4XzJfbC0xNDN4ODMuanBnIiBkYXRhLXBpZD0iMjI1NTgiPjwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PiAgICAgICAgPC9kaXY+ICAgICAgICAgICAgIAogICAgPC9kaXY+ICAKCgoKPGRpdiBjbGFzcz0iY29sLW1kLTQgaGFzX3Byb3Bfc2xpZGVyICBsaXN0aW5nX3dyYXBwZXIiIGRhdGEtb3JnPSI0IiBkYXRhLWxpc3RpZD0iMjI1MzQiID4gCiAgICA8ZGl2IGNsYXNzPSJwcm9wZXJ0eV9saXN0aW5nICAgIiBkYXRhLWxpbms9IiI+CiAgICAgICAgCiAgICAgICAgPGRpdiBjbGFzcz0ibGlzdGluZy11bml0LWltZy13cmFwcGVyIj48ZGl2IGNsYXNzPSJwcm9wX25ld19kZXRhaWxzIj48ZGl2IGNsYXNzPSJwcm9wX25ld19kZXRhaWxzX2JhY2siPjwvZGl2PjxkaXYgY2xhc3M9InByb3BlcnR5X21lZGlhIj48aSBjbGFzcz0iZmEgZmEtY2FtZXJhIiBhcmlhLWhpZGRlbj0idHJ1ZSI+PC9pPiA0CiAgICAgICAgICAgICAgICA8L2Rpdj48ZGl2IGNsYXNzPSJwcm9wZXJ0eV9sb2NhdGlvbl9pbWFnZSI+IAogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9wZXJ0eV9tYXJrZXIiPjwvc3Bhbj48YSBocmVmPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vcHJvcGVydHlfY2l0eS83NTAxMS8iPjc1MDExPC9hPiwgPGEgaHJlZj0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL3Byb3BlcnR5X2NpdHkvcGFyaXMtMi8iPlBhcmlzPC9hPjwvZGl2PjwvZGl2PgogICAgICAgICAgICAgICAgICAgIDxkaXYgaWQ9InByb3BlcnR5X3VuaXRfY2Fyb3VzZWxfNWU4NGE2YTE0MWJjMyIgY2xhc3M9ImNhcm91c2VsIHByb3BlcnR5X3VuaXRfY2Fyb3VzZWwgc2xpZGUgIiBkYXRhLXJpZGU9ImNhcm91c2VsIiBkYXRhLWludGVydmFsPSJmYWxzZSI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNhcm91c2VsLWlubmVyIj4gICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Iml0ZW0gYWN0aXZlIj4gICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL2VzdGF0ZV9wcm9wZXJ0eS9hcHBhcnRlbWVudC1hLXZlbmRyZS1wYXJpcy04LyI+PGltZyB3aWR0aD0iNTI1IiBoZWlnaHQ9IjMyOCIgc3JjPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vd3AtY29udGVudC91cGxvYWRzLzIwMjAvMDIvMTU4MDM5NjA3N19WQTIwNjJfMl9sLTUyNXgzMjguanBnIiBjbGFzcz0ibGF6eWxvYWQgaW1nLXJlc3BvbnNpdmUgd3AtcG9zdC1pbWFnZSIgYWx0PSIiIGRhdGEtb3JpZ2luYWw9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS93cC1jb250ZW50L3VwbG9hZHMvMjAyMC8wMi8xNTgwMzk2MDc3X1ZBMjA2Ml8yX2wtNTI1eDMyOC5qcGciIC8+PC9hPiAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Iml0ZW0gbGF6eS1sb2FkLWl0ZW0iPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS9lc3RhdGVfcHJvcGVydHkvYXBwYXJ0ZW1lbnQtYS12ZW5kcmUtcGFyaXMtOC8iPjxpbWcgIGRhdGEtbGF6eS1sb2FkLXNyYz0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL3dwLWNvbnRlbnQvdXBsb2Fkcy8yMDIwLzAyLzE1ODAzOTYwOTlfVkEyMDYyXzNfbC01MjV4MzI4LmpwZyIgYWx0PSJBcHBhcnRlbWVudCDDoCB2ZW5kcmUgUGFyaXMiIGNsYXNzPSJpbWctcmVzcG9uc2l2ZSIgLz48L2E+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj48ZGl2IGNsYXNzPSJpdGVtIGxhenktbG9hZC1pdGVtIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vZXN0YXRlX3Byb3BlcnR5L2FwcGFydGVtZW50LWEtdmVuZHJlLXBhcmlzLTgvIj48aW1nICBkYXRhLWxhenktbG9hZC1zcmM9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS93cC1jb250ZW50L3VwbG9hZHMvMjAyMC8wMi8xNTgwMzk2MTE1X1ZBMjA2Ml80X2wtNTI1eDMyOC5qcGciIGFsdD0iQXBwYXJ0ZW1lbnQgw6AgdmVuZHJlIFBhcmlzIiBjbGFzcz0iaW1nLXJlc3BvbnNpdmUiIC8+PC9hPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+PGRpdiBjbGFzcz0iaXRlbSBsYXp5LWxvYWQtaXRlbSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL2VzdGF0ZV9wcm9wZXJ0eS9hcHBhcnRlbWVudC1hLXZlbmRyZS1wYXJpcy04LyI+PGltZyAgZGF0YS1sYXp5LWxvYWQtc3JjPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vd3AtY29udGVudC91cGxvYWRzLzIwMjAvMDIvMTU4MDM5NjEzNl9WQTIwNjJfNV9sLTUyNXgzMjguanBnIiBhbHQ9IkFwcGFydGVtZW50IMOgIHZlbmRyZSBQYXJpcyIgY2xhc3M9ImltZy1yZXNwb25zaXZlIiAvPjwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS9lc3RhdGVfcHJvcGVydHkvYXBwYXJ0ZW1lbnQtYS12ZW5kcmUtcGFyaXMtOC8iPiA8L2E+PGEgY2xhc3M9ImxlZnQgIGNhcm91c2VsLWNvbnRyb2wiIGhyZWY9IiNwcm9wZXJ0eV91bml0X2Nhcm91c2VsXzVlODRhNmExNDFiYzMiIGRhdGEtc2xpZGU9InByZXYiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJkZW1vLWljb24gaWNvbi1sZWZ0LW9wZW4tYmlnIj48L2k+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2E+CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgY2xhc3M9InJpZ2h0ICBjYXJvdXNlbC1jb250cm9sIiBocmVmPSIjcHJvcGVydHlfdW5pdF9jYXJvdXNlbF81ZTg0YTZhMTQxYmMzIiBkYXRhLXNsaWRlPSJuZXh0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZGVtby1pY29uIGljb24tcmlnaHQtb3Blbi1iaWciPjwvaT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgICA8L2Rpdj48ZGl2IGNsYXNzPSJ0YWctd3JhcHBlciI+PGRpdiBjbGFzcz0ic3RhdHVzLXdyYXBwZXIiPjxkaXYgY2xhc3M9ImFjdGlvbl90YWdfd3JhcHBlciBWRU5EVSAiPlZFTkRVPC9kaXY+PGRpdiBjbGFzcz0icmliYm9uLWluc2lkZSBWRU5EVSI+VkVORFU8L2Rpdj48L2Rpdj48L2Rpdj48L2Rpdj4KCiAgICAgICAgICAgIDxoND48YSBocmVmPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vZXN0YXRlX3Byb3BlcnR5L2FwcGFydGVtZW50LWEtdmVuZHJlLXBhcmlzLTgvIj4KICAgICAgICAgICAgICAgIEFwcGFydGVtZW50IMOgIHZlbmRyZSBQYXJpcyAgICAgICAgICAgICAgICA8L2E+IAogICAgICAgICAgICA8L2g0PiAKICAgICAgICAgICAgCiAgICAgICAgICAgIDxkaXYgY2xhc3M9Imxpc3RpbmdfdW5pdF9wcmljZV93cmFwcGVyIj48c3BhbiBjbGFzcz0icHJpY2VfbGFiZWwiPk5vdXMgY29uc3VsdGVyPC9zcGFuPjwvZGl2PiAgICAgICAgCiAgICAgICAgCiAgICAgICAgCiAgICAgICAgICAgCiAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJsaXN0aW5nX2RldGFpbHMgdGhlX2dyaWRfdmlldyI+CiAgICAgICAgICAgICAgICAgICAgVkEyMDYyLUtNSSAmIzgyMTE7IFBhcmlzIDExw6htZS1MaW1pdGUgTUFSQUlTLiBSdWUgQW1lbG90ICwgw6AgcHJveGltaXTDqSBpbW3DqWRpYXRlIGRlIGxhIHN0YXRpb24gRmlsbGVzIGR1IENhbHZhaXJlICwgPGEgaHJlZj0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL2VzdGF0ZV9wcm9wZXJ0eS9hcHBhcnRlbWVudC1hLXZlbmRyZS1wYXJpcy04LyIgY2xhc3M9InVuaXRfbW9yZV94Ij5bcGx1c108L2E+ICAgICAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Imxpc3RpbmdfZGV0YWlscyB0aGVfbGlzdF92aWV3Ij4KICAgICAgICAgICAgICAgICAgICBWQTIwNjItS01JICYjODIxMTsgUGFyaXMgMTHDqG1lLUxpbWl0ZSBNQVJBSVMuIFJ1ZSBBbWVsb3QgLCDDoCBwcm94aW1pdMOpIGltbcOpZGlhdGUgZGUgbGEgc3RhdGlvbiBGaWxsZXMgZHUgQ2FsdmFpcmUgLCA8YSBocmVmPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vZXN0YXRlX3Byb3BlcnR5L2FwcGFydGVtZW50LWEtdmVuZHJlLXBhcmlzLTgvIiBjbGFzcz0idW5pdF9tb3JlX3giPltwbHVzXTwvYT4gICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgIAoKCiAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb3BlcnR5X2xpc3RpbmdfZGV0YWlscyI+CiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iaW5mb2JhdGgiPjE8L3NwYW4+IDxzcGFuIGNsYXNzPSJpbmZvc2l6ZSI+MTgsMDAgbTxzdXA+Mjwvc3VwPjwvc3Bhbj48YSBocmVmPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vZXN0YXRlX3Byb3BlcnR5L2FwcGFydGVtZW50LWEtdmVuZHJlLXBhcmlzLTgvIiBjbGFzcz0idW5pdF9kZXRhaWxzX3giPmluZm8gY29tcGzDqHRlPC9hPiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAKICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvcGVydHlfbG9jYXRpb24iPgogICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvcGVydHlfYWdlbnRfd3JhcHBlciI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb3BlcnR5X2FnZW50X2ltYWdlIiBzdHlsZT0iYmFja2dyb3VuZC1pbWFnZTp1cmwoJ2h0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS93cC1jb250ZW50L3VwbG9hZHMvMjAxOS8wNi9QeXLDqW7DqWVzLTQtMTIweDEyMC5qcGcnKSI+PC9kaXY+IAogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9wZXJ0eV9hZ2VudF9pbWFnZV9zaWduIj48aSBjbGFzcz0iZmEgZmEtdXNlci1jaXJjbGUtbyIgYXJpYS1oaWRkZW49InRydWUiPjwvaT48L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL2VzdGF0ZV9hZ2VudC9rbWktcHlyZW5lZXMvIj5LTUkgUFlSw4lOw4lFUzwvYT4gICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ibGlzdGluZ19hY3Rpb25zIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InNoYXJlX3VuaXQiPgogICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vd3d3LmZhY2Vib29rLmNvbS9zaGFyZXIucGhwP3U9aHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL2VzdGF0ZV9wcm9wZXJ0eS9hcHBhcnRlbWVudC1hLXZlbmRyZS1wYXJpcy04LyZhbXA7dD1BcHBhcnRlbWVudCslQzMlQTArdmVuZHJlK1BhcmlzIiB0YXJnZXQ9Il9ibGFuayIgY2xhc3M9InNvY2lhbF9mYWNlYm9vayI+PC9hPgogICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vdHdpdHRlci5jb20vaG9tZT9zdGF0dXM9QXBwYXJ0ZW1lbnQrJUMzJUEwK3ZlbmRyZStQYXJpc2h0dHBzJTNBJTJGJTJGd3d3LmNhYmluZXQta21pLmNvbSUyRmVzdGF0ZV9wcm9wZXJ0eSUyRmFwcGFydGVtZW50LWEtdmVuZHJlLXBhcmlzLTglMkYiIGNsYXNzPSJzb2NpYWxfdHdlZXQiIHRhcmdldD0iX2JsYW5rIj48L2E+CiAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9waW50ZXJlc3QuY29tL3Bpbi9jcmVhdGUvYnV0dG9uLz91cmw9aHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL2VzdGF0ZV9wcm9wZXJ0eS9hcHBhcnRlbWVudC1hLXZlbmRyZS1wYXJpcy04LyZhbXA7bWVkaWE9aHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL3dwLWNvbnRlbnQvdXBsb2Fkcy8yMDIwLzAyLzE1ODAzOTYwNzdfVkEyMDYyXzJfbC5qcGcmYW1wO2Rlc2NyaXB0aW9uPUFwcGFydGVtZW50KyVDMyVBMCt2ZW5kcmUrUGFyaXMiIHRhcmdldD0iX2JsYW5rIiBjbGFzcz0ic29jaWFsX3BpbnRlcmVzdCI+PC9hPgogICAgICAgIDxhIGhyZWY9Im1haWx0bzplbWFpbEBlbWFpbC5jb20/aHR0cDovL3N1YmplY3Q9QXBwYXJ0ZW1lbnQrJUMzJUEwK3ZlbmRyZStQYXJpcyYjMDM4O2JvZHk9aHR0cHMlM0ElMkYlMkZ3d3cuY2FiaW5ldC1rbWkuY29tJTJGZXN0YXRlX3Byb3BlcnR5JTJGYXBwYXJ0ZW1lbnQtYS12ZW5kcmUtcGFyaXMtOCUyRiIgZGF0YS1hY3Rpb249InNoYXJlIGVtYWlsIiAgY2xhc3M9InNvY2lhbF9lbWFpbCI+PC9hPgoKICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ic2hhcmVfbGlzdCIgIGRhdGEtb3JpZ2luYWwtdGl0bGU9InBhcnRhZ2VyIiA+PC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJpY29uLWZhdiBpY29uLWZhdi1vZmYiIGRhdGEtb3JpZ2luYWwtdGl0bGU9ImFqb3V0ZXIgYXV4IEZhdm9yaXMiIGRhdGEtcG9zdGlkPSIyMjUzNCI+PC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJjb21wYXJlLWFjdGlvbiIgZGF0YS1vcmlnaW5hbC10aXRsZT0iY29tcGFyZXIiIGRhdGEtcGltYWdlPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vd3AtY29udGVudC91cGxvYWRzLzIwMjAvMDIvMTU4MDM5NjA3N19WQTIwNjJfMl9sLTE0M3g4My5qcGciIGRhdGEtcGlkPSIyMjUzNCI+PC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+ICAgICAgICA8L2Rpdj4gICAgICAgICAgICAgCiAgICA8L2Rpdj4gIAoKCgo8ZGl2IGNsYXNzPSJjb2wtbWQtNCBoYXNfcHJvcF9zbGlkZXIgIGxpc3Rpbmdfd3JhcHBlciIgZGF0YS1vcmc9IjQiIGRhdGEtbGlzdGlkPSIyMjUyOCIgPiAKICAgIDxkaXYgY2xhc3M9InByb3BlcnR5X2xpc3RpbmcgICAiIGRhdGEtbGluaz0iIj4KICAgICAgICAKICAgICAgICA8ZGl2IGNsYXNzPSJsaXN0aW5nLXVuaXQtaW1nLXdyYXBwZXIiPjxkaXYgY2xhc3M9InByb3BfbmV3X2RldGFpbHMiPjxkaXYgY2xhc3M9InByb3BfbmV3X2RldGFpbHNfYmFjayI+PC9kaXY+PGRpdiBjbGFzcz0icHJvcGVydHlfbWVkaWEiPjxpIGNsYXNzPSJmYSBmYS1jYW1lcmEiIGFyaWEtaGlkZGVuPSJ0cnVlIj48L2k+IDUKICAgICAgICAgICAgICAgIDwvZGl2PjxkaXYgY2xhc3M9InByb3BlcnR5X2xvY2F0aW9uX2ltYWdlIj4gCiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb3BlcnR5X21hcmtlciI+PC9zcGFuPjxhIGhyZWY9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS9wcm9wZXJ0eV9jaXR5Lzc1MDExLyI+NzUwMTE8L2E+LCA8YSBocmVmPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vcHJvcGVydHlfY2l0eS9wYXJpcy0yLyI+UGFyaXM8L2E+PC9kaXY+PC9kaXY+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBpZD0icHJvcGVydHlfdW5pdF9jYXJvdXNlbF81ZTg0YTZhMTQ1Njg3IiBjbGFzcz0iY2Fyb3VzZWwgcHJvcGVydHlfdW5pdF9jYXJvdXNlbCBzbGlkZSAiIGRhdGEtcmlkZT0iY2Fyb3VzZWwiIGRhdGEtaW50ZXJ2YWw9ImZhbHNlIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY2Fyb3VzZWwtaW5uZXIiPiAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iaXRlbSBhY3RpdmUiPiAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vZXN0YXRlX3Byb3BlcnR5L3N0dWRpby0xNC8iPjxpbWcgd2lkdGg9IjUyNSIgaGVpZ2h0PSIzMjgiIHNyYz0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL3dwLWNvbnRlbnQvdXBsb2Fkcy8yMDIwLzAyLzE1NzYxNjE1MDhfVkEyMDMwXzFfbC01MjV4MzI4LmpwZyIgY2xhc3M9Imxhenlsb2FkIGltZy1yZXNwb25zaXZlIHdwLXBvc3QtaW1hZ2UiIGFsdD0iIiBkYXRhLW9yaWdpbmFsPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vd3AtY29udGVudC91cGxvYWRzLzIwMjAvMDIvMTU3NjE2MTUwOF9WQTIwMzBfMV9sLTUyNXgzMjguanBnIiAvPjwvYT4gICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJpdGVtIGxhenktbG9hZC1pdGVtIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vZXN0YXRlX3Byb3BlcnR5L3N0dWRpby0xNC8iPjxpbWcgIGRhdGEtbGF6eS1sb2FkLXNyYz0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL3dwLWNvbnRlbnQvdXBsb2Fkcy8yMDIwLzAyLzE1NzYxNjE1NjJfVkEyMDMwXzVfbC01MjV4MzI4LmpwZyIgYWx0PSJTVFVESU8iIGNsYXNzPSJpbWctcmVzcG9uc2l2ZSIgLz48L2E+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj48ZGl2IGNsYXNzPSJpdGVtIGxhenktbG9hZC1pdGVtIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vZXN0YXRlX3Byb3BlcnR5L3N0dWRpby0xNC8iPjxpbWcgIGRhdGEtbGF6eS1sb2FkLXNyYz0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL3dwLWNvbnRlbnQvdXBsb2Fkcy8yMDIwLzAyLzE1NzYwNzUxMDNfVkEyMDMwXzNfbC01MjV4MzI4LmpwZyIgYWx0PSJTVFVESU8iIGNsYXNzPSJpbWctcmVzcG9uc2l2ZSIgLz48L2E+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj48ZGl2IGNsYXNzPSJpdGVtIGxhenktbG9hZC1pdGVtIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vZXN0YXRlX3Byb3BlcnR5L3N0dWRpby0xNC8iPjxpbWcgIGRhdGEtbGF6eS1sb2FkLXNyYz0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL3dwLWNvbnRlbnQvdXBsb2Fkcy8yMDIwLzAyLzE1NzYwNzUwNzlfVkEyMDMwXzJfbC01MjV4MzI4LmpwZyIgYWx0PSJTVFVESU8iIGNsYXNzPSJpbWctcmVzcG9uc2l2ZSIgLz48L2E+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj48ZGl2IGNsYXNzPSJpdGVtIGxhenktbG9hZC1pdGVtIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vZXN0YXRlX3Byb3BlcnR5L3N0dWRpby0xNC8iPjxpbWcgIGRhdGEtbGF6eS1sb2FkLXNyYz0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL3dwLWNvbnRlbnQvdXBsb2Fkcy8yMDIwLzAyLzE1NzYwNzg4OTFfVkEyMDMwXzRfbC01MjV4MzI4LmpwZyIgYWx0PSJTVFVESU8iIGNsYXNzPSJpbWctcmVzcG9uc2l2ZSIgLz48L2E+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vZXN0YXRlX3Byb3BlcnR5L3N0dWRpby0xNC8iPiA8L2E+PGEgY2xhc3M9ImxlZnQgIGNhcm91c2VsLWNvbnRyb2wiIGhyZWY9IiNwcm9wZXJ0eV91bml0X2Nhcm91c2VsXzVlODRhNmExNDU2ODciIGRhdGEtc2xpZGU9InByZXYiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJkZW1vLWljb24gaWNvbi1sZWZ0LW9wZW4tYmlnIj48L2k+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2E+CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgY2xhc3M9InJpZ2h0ICBjYXJvdXNlbC1jb250cm9sIiBocmVmPSIjcHJvcGVydHlfdW5pdF9jYXJvdXNlbF81ZTg0YTZhMTQ1Njg3IiBkYXRhLXNsaWRlPSJuZXh0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZGVtby1pY29uIGljb24tcmlnaHQtb3Blbi1iaWciPjwvaT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgICA8L2Rpdj48ZGl2IGNsYXNzPSJ0YWctd3JhcHBlciI+PGRpdiBjbGFzcz0ic3RhdHVzLXdyYXBwZXIiPjxkaXYgY2xhc3M9ImFjdGlvbl90YWdfd3JhcHBlciBWRU5EVSAiPlZFTkRVPC9kaXY+PGRpdiBjbGFzcz0icmliYm9uLWluc2lkZSBWRU5EVSI+VkVORFU8L2Rpdj48L2Rpdj48L2Rpdj48L2Rpdj4KCiAgICAgICAgICAgIDxoND48YSBocmVmPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vZXN0YXRlX3Byb3BlcnR5L3N0dWRpby0xNC8iPgogICAgICAgICAgICAgICAgU1RVRElPICAgICAgICAgICAgICAgIDwvYT4gCiAgICAgICAgICAgIDwvaDQ+IAogICAgICAgICAgICAKICAgICAgICAgICAgPGRpdiBjbGFzcz0ibGlzdGluZ191bml0X3ByaWNlX3dyYXBwZXIiPjxzcGFuIGNsYXNzPSJwcmljZV9sYWJlbCI+Tm91cyBjb25zdWx0ZXI8L3NwYW4+PC9kaXY+ICAgICAgICAKICAgICAgICAKICAgICAgICAKICAgICAgICAgICAKICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Imxpc3RpbmdfZGV0YWlscyB0aGVfZ3JpZF92aWV3Ij4KICAgICAgICAgICAgICAgICAgICBWQTIwMzAtS01JICYjODIxMTsgUEFSSVMgMTHDqG1lICYjODIxMTsgRXhjbHVzaXZpdMOpIEtNSSAmIzgyMTE7IFBBUk1FTlRJRVIvT0JFUktBTVBGICYjODIxMTsgQSBwcm94aW1pdMOpIGRlcyBjb21tZXJjIDxhIGhyZWY9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS9lc3RhdGVfcHJvcGVydHkvc3R1ZGlvLTE0LyIgY2xhc3M9InVuaXRfbW9yZV94Ij5bcGx1c108L2E+ICAgICAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Imxpc3RpbmdfZGV0YWlscyB0aGVfbGlzdF92aWV3Ij4KICAgICAgICAgICAgICAgICAgICBWQTIwMzAtS01JICYjODIxMTsgUEFSSVMgMTHDqG1lICYjODIxMTsgRXhjbHVzaXZpdMOpIEtNSSAmIzgyMTE7IFBBUk1FTlRJRVIvT0JFUktBTVBGICYjODIxMTsgQSBwcm94aW1pdMOpIGRlcyBjb21tZXJjIDxhIGhyZWY9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS9lc3RhdGVfcHJvcGVydHkvc3R1ZGlvLTE0LyIgY2xhc3M9InVuaXRfbW9yZV94Ij5bcGx1c108L2E+ICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAKCgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9wZXJ0eV9saXN0aW5nX2RldGFpbHMiPgogICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImluZm9iYXRoIj4xPC9zcGFuPiA8c3BhbiBjbGFzcz0iaW5mb3NpemUiPjE4LDAwIG08c3VwPjI8L3N1cD48L3NwYW4+PGEgaHJlZj0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL2VzdGF0ZV9wcm9wZXJ0eS9zdHVkaW8tMTQvIiBjbGFzcz0idW5pdF9kZXRhaWxzX3giPmluZm8gY29tcGzDqHRlPC9hPiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAKICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvcGVydHlfbG9jYXRpb24iPgogICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvcGVydHlfYWdlbnRfd3JhcHBlciI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb3BlcnR5X2FnZW50X2ltYWdlIiBzdHlsZT0iYmFja2dyb3VuZC1pbWFnZTp1cmwoJ2h0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS93cC1jb250ZW50L3VwbG9hZHMvMjAxOS8wNi9QeXLDqW7DqWVzLTQtMTIweDEyMC5qcGcnKSI+PC9kaXY+IAogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9wZXJ0eV9hZ2VudF9pbWFnZV9zaWduIj48aSBjbGFzcz0iZmEgZmEtdXNlci1jaXJjbGUtbyIgYXJpYS1oaWRkZW49InRydWUiPjwvaT48L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL2VzdGF0ZV9hZ2VudC9rbWktcHlyZW5lZXMvIj5LTUkgUFlSw4lOw4lFUzwvYT4gICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ibGlzdGluZ19hY3Rpb25zIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InNoYXJlX3VuaXQiPgogICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vd3d3LmZhY2Vib29rLmNvbS9zaGFyZXIucGhwP3U9aHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL2VzdGF0ZV9wcm9wZXJ0eS9zdHVkaW8tMTQvJmFtcDt0PVNUVURJTyIgdGFyZ2V0PSJfYmxhbmsiIGNsYXNzPSJzb2NpYWxfZmFjZWJvb2siPjwvYT4KICAgICAgICA8YSBocmVmPSJodHRwczovL3R3aXR0ZXIuY29tL2hvbWU/c3RhdHVzPVNUVURJT2h0dHBzJTNBJTJGJTJGd3d3LmNhYmluZXQta21pLmNvbSUyRmVzdGF0ZV9wcm9wZXJ0eSUyRnN0dWRpby0xNCUyRiIgY2xhc3M9InNvY2lhbF90d2VldCIgdGFyZ2V0PSJfYmxhbmsiPjwvYT4KICAgICAgICA8YSBocmVmPSJodHRwczovL3BpbnRlcmVzdC5jb20vcGluL2NyZWF0ZS9idXR0b24vP3VybD1odHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vZXN0YXRlX3Byb3BlcnR5L3N0dWRpby0xNC8mYW1wO21lZGlhPWh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS93cC1jb250ZW50L3VwbG9hZHMvMjAyMC8wMi8xNTc2MTYxNTA4X1ZBMjAzMF8xX2wuanBnJmFtcDtkZXNjcmlwdGlvbj1TVFVESU8iIHRhcmdldD0iX2JsYW5rIiBjbGFzcz0ic29jaWFsX3BpbnRlcmVzdCI+PC9hPgogICAgICAgIDxhIGhyZWY9Im1haWx0bzplbWFpbEBlbWFpbC5jb20/aHR0cDovL3N1YmplY3Q9U1RVRElPJiMwMzg7Ym9keT1odHRwcyUzQSUyRiUyRnd3dy5jYWJpbmV0LWttaS5jb20lMkZlc3RhdGVfcHJvcGVydHklMkZzdHVkaW8tMTQlMkYiIGRhdGEtYWN0aW9uPSJzaGFyZSBlbWFpbCIgIGNsYXNzPSJzb2NpYWxfZW1haWwiPjwvYT4KCiAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InNoYXJlX2xpc3QiICBkYXRhLW9yaWdpbmFsLXRpdGxlPSJwYXJ0YWdlciIgPjwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iaWNvbi1mYXYgaWNvbi1mYXYtb2ZmIiBkYXRhLW9yaWdpbmFsLXRpdGxlPSJham91dGVyIGF1eCBGYXZvcmlzIiBkYXRhLXBvc3RpZD0iMjI1MjgiPjwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iY29tcGFyZS1hY3Rpb24iIGRhdGEtb3JpZ2luYWwtdGl0bGU9ImNvbXBhcmVyIiBkYXRhLXBpbWFnZT0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL3dwLWNvbnRlbnQvdXBsb2Fkcy8yMDIwLzAyLzE1NzYxNjE1MDhfVkEyMDMwXzFfbC0xNDN4ODMuanBnIiBkYXRhLXBpZD0iMjI1MjgiPjwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PiAgICAgICAgPC9kaXY+ICAgICAgICAgICAgIAogICAgPC9kaXY+ICAKCgoKPGRpdiBjbGFzcz0iY29sLW1kLTQgaGFzX3Byb3Bfc2xpZGVyICBsaXN0aW5nX3dyYXBwZXIiIGRhdGEtb3JnPSI0IiBkYXRhLWxpc3RpZD0iMjI1MTciID4gCiAgICA8ZGl2IGNsYXNzPSJwcm9wZXJ0eV9saXN0aW5nICAgIiBkYXRhLWxpbms9IiI+CiAgICAgICAgCiAgICAgICAgPGRpdiBjbGFzcz0ibGlzdGluZy11bml0LWltZy13cmFwcGVyIj48ZGl2IGNsYXNzPSJwcm9wX25ld19kZXRhaWxzIj48ZGl2IGNsYXNzPSJwcm9wX25ld19kZXRhaWxzX2JhY2siPjwvZGl2PjxkaXYgY2xhc3M9InByb3BlcnR5X21lZGlhIj48aSBjbGFzcz0iZmEgZmEtY2FtZXJhIiBhcmlhLWhpZGRlbj0idHJ1ZSI+PC9pPiAxMAogICAgICAgICAgICAgICAgPC9kaXY+PGRpdiBjbGFzcz0icHJvcGVydHlfbG9jYXRpb25faW1hZ2UiPiAKICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvcGVydHlfbWFya2VyIj48L3NwYW4+PGEgaHJlZj0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL3Byb3BlcnR5X2NpdHkvNzUwMTEvIj43NTAxMTwvYT4sIDxhIGhyZWY9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS9wcm9wZXJ0eV9jaXR5L3BhcmlzLTIvIj5QYXJpczwvYT48L2Rpdj48L2Rpdj4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGlkPSJwcm9wZXJ0eV91bml0X2Nhcm91c2VsXzVlODRhNmExNDliYTAiIGNsYXNzPSJjYXJvdXNlbCBwcm9wZXJ0eV91bml0X2Nhcm91c2VsIHNsaWRlICIgZGF0YS1yaWRlPSJjYXJvdXNlbCIgZGF0YS1pbnRlcnZhbD0iZmFsc2UiPgogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjYXJvdXNlbC1pbm5lciI+ICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJpdGVtIGFjdGl2ZSI+ICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS9lc3RhdGVfcHJvcGVydHkvMy1waWVjZXMtcmVmYWl0LWEtbmV1Zi1wYXItYXJjaGl0ZWN0ZS8iPjxpbWcgd2lkdGg9IjUyNSIgaGVpZ2h0PSIzMjgiIHNyYz0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL3dwLWNvbnRlbnQvdXBsb2Fkcy8yMDIwLzAyLzE1NzU5OTk1MjdfVkEyMDI4XzNfbC01MjV4MzI4LmpwZyIgY2xhc3M9Imxhenlsb2FkIGltZy1yZXNwb25zaXZlIHdwLXBvc3QtaW1hZ2UiIGFsdD0iIiBkYXRhLW9yaWdpbmFsPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vd3AtY29udGVudC91cGxvYWRzLzIwMjAvMDIvMTU3NTk5OTUyN19WQTIwMjhfM19sLTUyNXgzMjguanBnIiAvPjwvYT4gICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJpdGVtIGxhenktbG9hZC1pdGVtIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vZXN0YXRlX3Byb3BlcnR5LzMtcGllY2VzLXJlZmFpdC1hLW5ldWYtcGFyLWFyY2hpdGVjdGUvIj48aW1nICBkYXRhLWxhenktbG9hZC1zcmM9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS93cC1jb250ZW50L3VwbG9hZHMvMjAyMC8wMi8xNTc1OTk5NTE0X1ZBMjAyOF8yX2wtNTI1eDMyOC5qcGciIGFsdD0iMyBQSUVDRVMgUkVGQUlUIEEgTkVVRiBQQVIgQVJDSElURUNURSIgY2xhc3M9ImltZy1yZXNwb25zaXZlIiAvPjwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PjxkaXYgY2xhc3M9Iml0ZW0gbGF6eS1sb2FkLWl0ZW0iPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS9lc3RhdGVfcHJvcGVydHkvMy1waWVjZXMtcmVmYWl0LWEtbmV1Zi1wYXItYXJjaGl0ZWN0ZS8iPjxpbWcgIGRhdGEtbGF6eS1sb2FkLXNyYz0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL3dwLWNvbnRlbnQvdXBsb2Fkcy8yMDIwLzAyLzE1NzU5OTk2MTVfVkEyMDI4XzZfbC01MjV4MzI4LmpwZyIgYWx0PSIzIFBJRUNFUyBSRUZBSVQgQSBORVVGIFBBUiBBUkNISVRFQ1RFIiBjbGFzcz0iaW1nLXJlc3BvbnNpdmUiIC8+PC9hPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+PGRpdiBjbGFzcz0iaXRlbSBsYXp5LWxvYWQtaXRlbSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL2VzdGF0ZV9wcm9wZXJ0eS8zLXBpZWNlcy1yZWZhaXQtYS1uZXVmLXBhci1hcmNoaXRlY3RlLyI+PGltZyAgZGF0YS1sYXp5LWxvYWQtc3JjPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vd3AtY29udGVudC91cGxvYWRzLzIwMjAvMDIvMTU3NTk5OTU0Nl9WQTIwMjhfNF9sLTUyNXgzMjguanBnIiBhbHQ9IjMgUElFQ0VTIFJFRkFJVCBBIE5FVUYgUEFSIEFSQ0hJVEVDVEUiIGNsYXNzPSJpbWctcmVzcG9uc2l2ZSIgLz48L2E+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj48ZGl2IGNsYXNzPSJpdGVtIGxhenktbG9hZC1pdGVtIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vZXN0YXRlX3Byb3BlcnR5LzMtcGllY2VzLXJlZmFpdC1hLW5ldWYtcGFyLWFyY2hpdGVjdGUvIj48aW1nICBkYXRhLWxhenktbG9hZC1zcmM9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS93cC1jb250ZW50L3VwbG9hZHMvMjAyMC8wMi8xNTc1OTk5NTYzX1ZBMjAyOF81X2wtNTI1eDMyOC5qcGciIGFsdD0iMyBQSUVDRVMgUkVGQUlUIEEgTkVVRiBQQVIgQVJDSElURUNURSIgY2xhc3M9ImltZy1yZXNwb25zaXZlIiAvPjwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PjxkaXYgY2xhc3M9Iml0ZW0gbGF6eS1sb2FkLWl0ZW0iPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS9lc3RhdGVfcHJvcGVydHkvMy1waWVjZXMtcmVmYWl0LWEtbmV1Zi1wYXItYXJjaGl0ZWN0ZS8iPjxpbWcgIGRhdGEtbGF6eS1sb2FkLXNyYz0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL3dwLWNvbnRlbnQvdXBsb2Fkcy8yMDIwLzAyLzE1NzU5OTk2NDlfVkEyMDI4XzdfbC01MjV4MzI4LmpwZyIgYWx0PSIzIFBJRUNFUyBSRUZBSVQgQSBORVVGIFBBUiBBUkNISVRFQ1RFIiBjbGFzcz0iaW1nLXJlc3BvbnNpdmUiIC8+PC9hPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+PGRpdiBjbGFzcz0iaXRlbSBsYXp5LWxvYWQtaXRlbSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL2VzdGF0ZV9wcm9wZXJ0eS8zLXBpZWNlcy1yZWZhaXQtYS1uZXVmLXBhci1hcmNoaXRlY3RlLyI+PGltZyAgZGF0YS1sYXp5LWxvYWQtc3JjPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vd3AtY29udGVudC91cGxvYWRzLzIwMjAvMDIvMTU3NTk5OTY3OV9WQTIwMjhfOF9sLTUyNXgzMjguanBnIiBhbHQ9IjMgUElFQ0VTIFJFRkFJVCBBIE5FVUYgUEFSIEFSQ0hJVEVDVEUiIGNsYXNzPSJpbWctcmVzcG9uc2l2ZSIgLz48L2E+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj48ZGl2IGNsYXNzPSJpdGVtIGxhenktbG9hZC1pdGVtIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vZXN0YXRlX3Byb3BlcnR5LzMtcGllY2VzLXJlZmFpdC1hLW5ldWYtcGFyLWFyY2hpdGVjdGUvIj48aW1nICBkYXRhLWxhenktbG9hZC1zcmM9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS93cC1jb250ZW50L3VwbG9hZHMvMjAyMC8wMi8xNTc1OTk5ODY2X1ZBMjAyOF8xMV9sLTUyNXgzMjguanBnIiBhbHQ9IjMgUElFQ0VTIFJFRkFJVCBBIE5FVUYgUEFSIEFSQ0hJVEVDVEUiIGNsYXNzPSJpbWctcmVzcG9uc2l2ZSIgLz48L2E+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj48ZGl2IGNsYXNzPSJpdGVtIGxhenktbG9hZC1pdGVtIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vZXN0YXRlX3Byb3BlcnR5LzMtcGllY2VzLXJlZmFpdC1hLW5ldWYtcGFyLWFyY2hpdGVjdGUvIj48aW1nICBkYXRhLWxhenktbG9hZC1zcmM9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS93cC1jb250ZW50L3VwbG9hZHMvMjAyMC8wMi8xNTc1OTk5Njk3X1ZBMjAyOF85X2wtNTI1eDMyOC5qcGciIGFsdD0iMyBQSUVDRVMgUkVGQUlUIEEgTkVVRiBQQVIgQVJDSElURUNURSIgY2xhc3M9ImltZy1yZXNwb25zaXZlIiAvPjwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PjxkaXYgY2xhc3M9Iml0ZW0gbGF6eS1sb2FkLWl0ZW0iPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS9lc3RhdGVfcHJvcGVydHkvMy1waWVjZXMtcmVmYWl0LWEtbmV1Zi1wYXItYXJjaGl0ZWN0ZS8iPjxpbWcgIGRhdGEtbGF6eS1sb2FkLXNyYz0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL3dwLWNvbnRlbnQvdXBsb2Fkcy8yMDIwLzAyLzE1NzU5OTk3NThfVkEyMDI4XzEwX2wtNTI1eDMyOC5qcGciIGFsdD0iMyBQSUVDRVMgUkVGQUlUIEEgTkVVRiBQQVIgQVJDSElURUNURSIgY2xhc3M9ImltZy1yZXNwb25zaXZlIiAvPjwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS9lc3RhdGVfcHJvcGVydHkvMy1waWVjZXMtcmVmYWl0LWEtbmV1Zi1wYXItYXJjaGl0ZWN0ZS8iPiA8L2E+PGEgY2xhc3M9ImxlZnQgIGNhcm91c2VsLWNvbnRyb2wiIGhyZWY9IiNwcm9wZXJ0eV91bml0X2Nhcm91c2VsXzVlODRhNmExNDliYTAiIGRhdGEtc2xpZGU9InByZXYiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJkZW1vLWljb24gaWNvbi1sZWZ0LW9wZW4tYmlnIj48L2k+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2E+CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgY2xhc3M9InJpZ2h0ICBjYXJvdXNlbC1jb250cm9sIiBocmVmPSIjcHJvcGVydHlfdW5pdF9jYXJvdXNlbF81ZTg0YTZhMTQ5YmEwIiBkYXRhLXNsaWRlPSJuZXh0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZGVtby1pY29uIGljb24tcmlnaHQtb3Blbi1iaWciPjwvaT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgICA8L2Rpdj48ZGl2IGNsYXNzPSJ0YWctd3JhcHBlciI+PGRpdiBjbGFzcz0ic3RhdHVzLXdyYXBwZXIiPjxkaXYgY2xhc3M9ImFjdGlvbl90YWdfd3JhcHBlciBWRU5EVSAiPlZFTkRVPC9kaXY+PGRpdiBjbGFzcz0icmliYm9uLWluc2lkZSBWRU5EVSI+VkVORFU8L2Rpdj48L2Rpdj48L2Rpdj48L2Rpdj4KCiAgICAgICAgICAgIDxoND48YSBocmVmPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vZXN0YXRlX3Byb3BlcnR5LzMtcGllY2VzLXJlZmFpdC1hLW5ldWYtcGFyLWFyY2hpdGVjdGUvIj4KICAgICAgICAgICAgICAgIDMgUElFQ0VTIFJFRkFJVCBBIE5FVUYgUEFSIEFSQ0hJVEVDVEUgICAgICAgICAgICAgICAgPC9hPiAKICAgICAgICAgICAgPC9oND4gCiAgICAgICAgICAgIAogICAgICAgICAgICA8ZGl2IGNsYXNzPSJsaXN0aW5nX3VuaXRfcHJpY2Vfd3JhcHBlciI+PHNwYW4gY2xhc3M9InByaWNlX2xhYmVsIj5Ob3VzIGNvbnN1bHRlcjwvc3Bhbj48L2Rpdj4gICAgICAgIAogICAgICAgIAogICAgICAgIAogICAgICAgICAgIAogICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ibGlzdGluZ19kZXRhaWxzIHRoZV9ncmlkX3ZpZXciPgogICAgICAgICAgICAgICAgICAgIFZBMjAyOC1LTUkgJiM4MjExOyBQYXJpcyAxMcOobWUgJiM4MjExOyBBVSBQSUVEIERVIE1FVFJPIE9CRVJLQU1QRi4gRGFucyB1bmUgcnVlIGNhbG1lIGV0IGFwcHLDqWNpw6llLCBhdSBkZXV4acOobWUgw6l0YSA8YSBocmVmPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vZXN0YXRlX3Byb3BlcnR5LzMtcGllY2VzLXJlZmFpdC1hLW5ldWYtcGFyLWFyY2hpdGVjdGUvIiBjbGFzcz0idW5pdF9tb3JlX3giPltwbHVzXTwvYT4gICAgICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ibGlzdGluZ19kZXRhaWxzIHRoZV9saXN0X3ZpZXciPgogICAgICAgICAgICAgICAgICAgIFZBMjAyOC1LTUkgJiM4MjExOyBQYXJpcyAxMcOobWUgJiM4MjExOyBBVSBQSUVEIERVIE1FVFJPIE9CRVJLQU1QRi4gRGFucyB1bmUgcnVlIGNhbG1lIGV0IGFwcHLDqWNpw6llLCBhdSBkZXV4acOobWUgw6l0YSA8YSBocmVmPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vZXN0YXRlX3Byb3BlcnR5LzMtcGllY2VzLXJlZmFpdC1hLW5ldWYtcGFyLWFyY2hpdGVjdGUvIiBjbGFzcz0idW5pdF9tb3JlX3giPltwbHVzXTwvYT4gICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgIAoKCiAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb3BlcnR5X2xpc3RpbmdfZGV0YWlscyI+CiAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImluZm9yb29tIj4yPC9zcGFuPjxzcGFuIGNsYXNzPSJpbmZvYmF0aCI+MTwvc3Bhbj4gPHNwYW4gY2xhc3M9ImluZm9zaXplIj41MiwwMCBtPHN1cD4yPC9zdXA+PC9zcGFuPjxhIGhyZWY9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS9lc3RhdGVfcHJvcGVydHkvMy1waWVjZXMtcmVmYWl0LWEtbmV1Zi1wYXItYXJjaGl0ZWN0ZS8iIGNsYXNzPSJ1bml0X2RldGFpbHNfeCI+aW5mbyBjb21wbMOodGU8L2E+ICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgIAogICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9wZXJ0eV9sb2NhdGlvbiI+CiAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9wZXJ0eV9hZ2VudF93cmFwcGVyIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvcGVydHlfYWdlbnRfaW1hZ2UiIHN0eWxlPSJiYWNrZ3JvdW5kLWltYWdlOnVybCgnaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL3dwLWNvbnRlbnQvdXBsb2Fkcy8yMDE5LzA2L1B5csOpbsOpZXMtNC0xMjB4MTIwLmpwZycpIj48L2Rpdj4gCiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb3BlcnR5X2FnZW50X2ltYWdlX3NpZ24iPjxpIGNsYXNzPSJmYSBmYS11c2VyLWNpcmNsZS1vIiBhcmlhLWhpZGRlbj0idHJ1ZSI+PC9pPjwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vZXN0YXRlX2FnZW50L2ttaS1weXJlbmVlcy8iPktNSSBQWVLDiU7DiUVTPC9hPiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJsaXN0aW5nX2FjdGlvbnMiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ic2hhcmVfdW5pdCI+CiAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly93d3cuZmFjZWJvb2suY29tL3NoYXJlci5waHA/dT1odHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vZXN0YXRlX3Byb3BlcnR5LzMtcGllY2VzLXJlZmFpdC1hLW5ldWYtcGFyLWFyY2hpdGVjdGUvJmFtcDt0PTMrUElFQ0VTK1JFRkFJVCtBK05FVUYrUEFSK0FSQ0hJVEVDVEUiIHRhcmdldD0iX2JsYW5rIiBjbGFzcz0ic29jaWFsX2ZhY2Vib29rIj48L2E+CiAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly90d2l0dGVyLmNvbS9ob21lP3N0YXR1cz0zK1BJRUNFUytSRUZBSVQrQStORVVGK1BBUitBUkNISVRFQ1RFaHR0cHMlM0ElMkYlMkZ3d3cuY2FiaW5ldC1rbWkuY29tJTJGZXN0YXRlX3Byb3BlcnR5JTJGMy1waWVjZXMtcmVmYWl0LWEtbmV1Zi1wYXItYXJjaGl0ZWN0ZSUyRiIgY2xhc3M9InNvY2lhbF90d2VldCIgdGFyZ2V0PSJfYmxhbmsiPjwvYT4KICAgICAgICA8YSBocmVmPSJodHRwczovL3BpbnRlcmVzdC5jb20vcGluL2NyZWF0ZS9idXR0b24vP3VybD1odHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vZXN0YXRlX3Byb3BlcnR5LzMtcGllY2VzLXJlZmFpdC1hLW5ldWYtcGFyLWFyY2hpdGVjdGUvJmFtcDttZWRpYT1odHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vd3AtY29udGVudC91cGxvYWRzLzIwMjAvMDIvMTU3NTk5OTUyN19WQTIwMjhfM19sLmpwZyZhbXA7ZGVzY3JpcHRpb249MytQSUVDRVMrUkVGQUlUK0ErTkVVRitQQVIrQVJDSElURUNURSIgdGFyZ2V0PSJfYmxhbmsiIGNsYXNzPSJzb2NpYWxfcGludGVyZXN0Ij48L2E+CiAgICAgICAgPGEgaHJlZj0ibWFpbHRvOmVtYWlsQGVtYWlsLmNvbT9odHRwOi8vc3ViamVjdD0zK1BJRUNFUytSRUZBSVQrQStORVVGK1BBUitBUkNISVRFQ1RFJiMwMzg7Ym9keT1odHRwcyUzQSUyRiUyRnd3dy5jYWJpbmV0LWttaS5jb20lMkZlc3RhdGVfcHJvcGVydHklMkYzLXBpZWNlcy1yZWZhaXQtYS1uZXVmLXBhci1hcmNoaXRlY3RlJTJGIiBkYXRhLWFjdGlvbj0ic2hhcmUgZW1haWwiICBjbGFzcz0ic29jaWFsX2VtYWlsIj48L2E+CgogICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJzaGFyZV9saXN0IiAgZGF0YS1vcmlnaW5hbC10aXRsZT0icGFydGFnZXIiID48L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9Imljb24tZmF2IGljb24tZmF2LW9mZiIgZGF0YS1vcmlnaW5hbC10aXRsZT0iYWpvdXRlciBhdXggRmF2b3JpcyIgZGF0YS1wb3N0aWQ9IjIyNTE3Ij48L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImNvbXBhcmUtYWN0aW9uIiBkYXRhLW9yaWdpbmFsLXRpdGxlPSJjb21wYXJlciIgZGF0YS1waW1hZ2U9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS93cC1jb250ZW50L3VwbG9hZHMvMjAyMC8wMi8xNTc1OTk5NTI3X1ZBMjAyOF8zX2wtMTQzeDgzLmpwZyIgZGF0YS1waWQ9IjIyNTE3Ij48L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4gICAgICAgIDwvZGl2PiAgICAgICAgICAgICAKICAgIDwvZGl2PiAgCgoKCjxkaXYgY2xhc3M9ImNvbC1tZC00IGhhc19wcm9wX3NsaWRlciAgbGlzdGluZ193cmFwcGVyIiBkYXRhLW9yZz0iNCIgZGF0YS1saXN0aWQ9IjIyNTExIiA+IAogICAgPGRpdiBjbGFzcz0icHJvcGVydHlfbGlzdGluZyAgICIgZGF0YS1saW5rPSIiPgogICAgICAgIAogICAgICAgIDxkaXYgY2xhc3M9Imxpc3RpbmctdW5pdC1pbWctd3JhcHBlciI+PGRpdiBjbGFzcz0icHJvcF9uZXdfZGV0YWlscyI+PGRpdiBjbGFzcz0icHJvcF9uZXdfZGV0YWlsc19iYWNrIj48L2Rpdj48ZGl2IGNsYXNzPSJwcm9wZXJ0eV9tZWRpYSI+PGkgY2xhc3M9ImZhIGZhLWNhbWVyYSIgYXJpYS1oaWRkZW49InRydWUiPjwvaT4gNQogICAgICAgICAgICAgICAgPC9kaXY+PGRpdiBjbGFzcz0icHJvcGVydHlfbG9jYXRpb25faW1hZ2UiPiAKICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvcGVydHlfbWFya2VyIj48L3NwYW4+PGEgaHJlZj0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL3Byb3BlcnR5X2NpdHkvNzUwMTAvIj43NTAxMDwvYT4sIDxhIGhyZWY9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS9wcm9wZXJ0eV9jaXR5L3BhcmlzLTIvIj5QYXJpczwvYT48L2Rpdj48L2Rpdj4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGlkPSJwcm9wZXJ0eV91bml0X2Nhcm91c2VsXzVlODRhNmExNGQ4ZTkiIGNsYXNzPSJjYXJvdXNlbCBwcm9wZXJ0eV91bml0X2Nhcm91c2VsIHNsaWRlICIgZGF0YS1yaWRlPSJjYXJvdXNlbCIgZGF0YS1pbnRlcnZhbD0iZmFsc2UiPgogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjYXJvdXNlbC1pbm5lciI+ICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJpdGVtIGFjdGl2ZSI+ICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS9lc3RhdGVfcHJvcGVydHkvMi1waWVjZXMtcmVmYWl0LWEtbmV1Zi1hdmVjLXRlcnJhc3NlLyI+PGltZyB3aWR0aD0iNTI1IiBoZWlnaHQ9IjMyOCIgc3JjPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vd3AtY29udGVudC91cGxvYWRzLzIwMjAvMDIvMTU3NTQ2MzkxN19WQTIwMjJfMV9sLTUyNXgzMjguanBnIiBjbGFzcz0ibGF6eWxvYWQgaW1nLXJlc3BvbnNpdmUgd3AtcG9zdC1pbWFnZSIgYWx0PSIiIGRhdGEtb3JpZ2luYWw9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS93cC1jb250ZW50L3VwbG9hZHMvMjAyMC8wMi8xNTc1NDYzOTE3X1ZBMjAyMl8xX2wtNTI1eDMyOC5qcGciIC8+PC9hPiAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Iml0ZW0gbGF6eS1sb2FkLWl0ZW0iPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS9lc3RhdGVfcHJvcGVydHkvMi1waWVjZXMtcmVmYWl0LWEtbmV1Zi1hdmVjLXRlcnJhc3NlLyI+PGltZyAgZGF0YS1sYXp5LWxvYWQtc3JjPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vd3AtY29udGVudC91cGxvYWRzLzIwMjAvMDIvMTU3NTQ2MzkzM19WQTIwMjJfMl9sLTUyNXgzMjguanBnIiBhbHQ9IjIgUElFQ0VTIFJFRkFJVCBBIE5FVUYgQVZFQyBURVJSQVNTRSIgY2xhc3M9ImltZy1yZXNwb25zaXZlIiAvPjwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PjxkaXYgY2xhc3M9Iml0ZW0gbGF6eS1sb2FkLWl0ZW0iPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS9lc3RhdGVfcHJvcGVydHkvMi1waWVjZXMtcmVmYWl0LWEtbmV1Zi1hdmVjLXRlcnJhc3NlLyI+PGltZyAgZGF0YS1sYXp5LWxvYWQtc3JjPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vd3AtY29udGVudC91cGxvYWRzLzIwMjAvMDIvMTU3NTQ2Mzk0N19WQTIwMjJfM19sLTUyNXgzMjguanBnIiBhbHQ9IjIgUElFQ0VTIFJFRkFJVCBBIE5FVUYgQVZFQyBURVJSQVNTRSIgY2xhc3M9ImltZy1yZXNwb25zaXZlIiAvPjwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PjxkaXYgY2xhc3M9Iml0ZW0gbGF6eS1sb2FkLWl0ZW0iPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS9lc3RhdGVfcHJvcGVydHkvMi1waWVjZXMtcmVmYWl0LWEtbmV1Zi1hdmVjLXRlcnJhc3NlLyI+PGltZyAgZGF0YS1sYXp5LWxvYWQtc3JjPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vd3AtY29udGVudC91cGxvYWRzLzIwMjAvMDIvMTU3NTQ2Mzk3NV9WQTIwMjJfNV9sLTUyNXgzMjguanBnIiBhbHQ9IjIgUElFQ0VTIFJFRkFJVCBBIE5FVUYgQVZFQyBURVJSQVNTRSIgY2xhc3M9ImltZy1yZXNwb25zaXZlIiAvPjwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PjxkaXYgY2xhc3M9Iml0ZW0gbGF6eS1sb2FkLWl0ZW0iPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS9lc3RhdGVfcHJvcGVydHkvMi1waWVjZXMtcmVmYWl0LWEtbmV1Zi1hdmVjLXRlcnJhc3NlLyI+PGltZyAgZGF0YS1sYXp5LWxvYWQtc3JjPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vd3AtY29udGVudC91cGxvYWRzLzIwMjAvMDIvMTU3NTQ2Mzk2M19WQTIwMjJfNF9sLTUyNXgzMjguanBnIiBhbHQ9IjIgUElFQ0VTIFJFRkFJVCBBIE5FVUYgQVZFQyBURVJSQVNTRSIgY2xhc3M9ImltZy1yZXNwb25zaXZlIiAvPjwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS9lc3RhdGVfcHJvcGVydHkvMi1waWVjZXMtcmVmYWl0LWEtbmV1Zi1hdmVjLXRlcnJhc3NlLyI+IDwvYT48YSBjbGFzcz0ibGVmdCAgY2Fyb3VzZWwtY29udHJvbCIgaHJlZj0iI3Byb3BlcnR5X3VuaXRfY2Fyb3VzZWxfNWU4NGE2YTE0ZDhlOSIgZGF0YS1zbGlkZT0icHJldiI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9ImRlbW8taWNvbiBpY29uLWxlZnQtb3Blbi1iaWciPjwvaT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBjbGFzcz0icmlnaHQgIGNhcm91c2VsLWNvbnRyb2wiIGhyZWY9IiNwcm9wZXJ0eV91bml0X2Nhcm91c2VsXzVlODRhNmExNGQ4ZTkiIGRhdGEtc2xpZGU9Im5leHQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJkZW1vLWljb24gaWNvbi1yaWdodC1vcGVuLWJpZyI+PC9pPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICAgIDwvZGl2PjxkaXYgY2xhc3M9InRhZy13cmFwcGVyIj48ZGl2IGNsYXNzPSJzdGF0dXMtd3JhcHBlciI+PGRpdiBjbGFzcz0iYWN0aW9uX3RhZ193cmFwcGVyIFZFTkRVICI+VkVORFU8L2Rpdj48ZGl2IGNsYXNzPSJyaWJib24taW5zaWRlIFZFTkRVIj5WRU5EVTwvZGl2PjwvZGl2PjwvZGl2PjwvZGl2PgoKICAgICAgICAgICAgPGg0PjxhIGhyZWY9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS9lc3RhdGVfcHJvcGVydHkvMi1waWVjZXMtcmVmYWl0LWEtbmV1Zi1hdmVjLXRlcnJhc3NlLyI+CiAgICAgICAgICAgICAgICAyIFBJRUNFUyBSRUZBSVQgQSBORVVGIEFWRUMgVEVSUkFTU0UgICAgICAgICAgICAgICAgPC9hPiAKICAgICAgICAgICAgPC9oND4gCiAgICAgICAgICAgIAogICAgICAgICAgICA8ZGl2IGNsYXNzPSJsaXN0aW5nX3VuaXRfcHJpY2Vfd3JhcHBlciI+PHNwYW4gY2xhc3M9InByaWNlX2xhYmVsIj5Ob3VzIGNvbnN1bHRlcjwvc3Bhbj48L2Rpdj4gICAgICAgIAogICAgICAgIAogICAgICAgIAogICAgICAgICAgIAogICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ibGlzdGluZ19kZXRhaWxzIHRoZV9ncmlkX3ZpZXciPgogICAgICAgICAgICAgICAgICAgIFZBMjAyMi1LTUkgJiM4MjExOyBQYXJpcyAxMMOobWUtR09OQ09VUlQuIEEgcHJveGltaXTDqSBkZXMgY29tbWVyY2VzIGV0IGR1IENBTkFMIFNhaW50IE1BUlRJTiwgZGFucyB1bmUgcnVlIGNhbG1lLCBubyA8YSBocmVmPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vZXN0YXRlX3Byb3BlcnR5LzItcGllY2VzLXJlZmFpdC1hLW5ldWYtYXZlYy10ZXJyYXNzZS8iIGNsYXNzPSJ1bml0X21vcmVfeCI+W3BsdXNdPC9hPiAgICAgICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJsaXN0aW5nX2RldGFpbHMgdGhlX2xpc3RfdmlldyI+CiAgICAgICAgICAgICAgICAgICAgVkEyMDIyLUtNSSAmIzgyMTE7IFBhcmlzIDEww6htZS1HT05DT1VSVC4gQSBwcm94aW1pdMOpIGRlcyBjb21tZXJjZXMgZXQgZHUgQ0FOQUwgU2FpbnQgTUFSVElOLCBkYW5zIHVuZSBydWUgY2FsbWUsIG5vIDxhIGhyZWY9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS9lc3RhdGVfcHJvcGVydHkvMi1waWVjZXMtcmVmYWl0LWEtbmV1Zi1hdmVjLXRlcnJhc3NlLyIgY2xhc3M9InVuaXRfbW9yZV94Ij5bcGx1c108L2E+ICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAKCgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9wZXJ0eV9saXN0aW5nX2RldGFpbHMiPgogICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJpbmZvcm9vbSI+MTwvc3Bhbj48c3BhbiBjbGFzcz0iaW5mb2JhdGgiPjE8L3NwYW4+IDxzcGFuIGNsYXNzPSJpbmZvc2l6ZSI+NDEsMDAgbTxzdXA+Mjwvc3VwPjwvc3Bhbj48YSBocmVmPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vZXN0YXRlX3Byb3BlcnR5LzItcGllY2VzLXJlZmFpdC1hLW5ldWYtYXZlYy10ZXJyYXNzZS8iIGNsYXNzPSJ1bml0X2RldGFpbHNfeCI+aW5mbyBjb21wbMOodGU8L2E+ICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgIAogICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9wZXJ0eV9sb2NhdGlvbiI+CiAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9wZXJ0eV9hZ2VudF93cmFwcGVyIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvcGVydHlfYWdlbnRfaW1hZ2UiIHN0eWxlPSJiYWNrZ3JvdW5kLWltYWdlOnVybCgnaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL3dwLWNvbnRlbnQvdXBsb2Fkcy8yMDE5LzA2L1B5csOpbsOpZXMtNC0xMjB4MTIwLmpwZycpIj48L2Rpdj4gCiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb3BlcnR5X2FnZW50X2ltYWdlX3NpZ24iPjxpIGNsYXNzPSJmYSBmYS11c2VyLWNpcmNsZS1vIiBhcmlhLWhpZGRlbj0idHJ1ZSI+PC9pPjwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vZXN0YXRlX2FnZW50L2ttaS1weXJlbmVlcy8iPktNSSBQWVLDiU7DiUVTPC9hPiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJsaXN0aW5nX2FjdGlvbnMiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ic2hhcmVfdW5pdCI+CiAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly93d3cuZmFjZWJvb2suY29tL3NoYXJlci5waHA/dT1odHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vZXN0YXRlX3Byb3BlcnR5LzItcGllY2VzLXJlZmFpdC1hLW5ldWYtYXZlYy10ZXJyYXNzZS8mYW1wO3Q9MitQSUVDRVMrUkVGQUlUK0ErTkVVRitBVkVDK1RFUlJBU1NFIiB0YXJnZXQ9Il9ibGFuayIgY2xhc3M9InNvY2lhbF9mYWNlYm9vayI+PC9hPgogICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vdHdpdHRlci5jb20vaG9tZT9zdGF0dXM9MitQSUVDRVMrUkVGQUlUK0ErTkVVRitBVkVDK1RFUlJBU1NFaHR0cHMlM0ElMkYlMkZ3d3cuY2FiaW5ldC1rbWkuY29tJTJGZXN0YXRlX3Byb3BlcnR5JTJGMi1waWVjZXMtcmVmYWl0LWEtbmV1Zi1hdmVjLXRlcnJhc3NlJTJGIiBjbGFzcz0ic29jaWFsX3R3ZWV0IiB0YXJnZXQ9Il9ibGFuayI+PC9hPgogICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vcGludGVyZXN0LmNvbS9waW4vY3JlYXRlL2J1dHRvbi8/dXJsPWh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS9lc3RhdGVfcHJvcGVydHkvMi1waWVjZXMtcmVmYWl0LWEtbmV1Zi1hdmVjLXRlcnJhc3NlLyZhbXA7bWVkaWE9aHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL3dwLWNvbnRlbnQvdXBsb2Fkcy8yMDIwLzAyLzE1NzU0NjM5MTdfVkEyMDIyXzFfbC5qcGcmYW1wO2Rlc2NyaXB0aW9uPTIrUElFQ0VTK1JFRkFJVCtBK05FVUYrQVZFQytURVJSQVNTRSIgdGFyZ2V0PSJfYmxhbmsiIGNsYXNzPSJzb2NpYWxfcGludGVyZXN0Ij48L2E+CiAgICAgICAgPGEgaHJlZj0ibWFpbHRvOmVtYWlsQGVtYWlsLmNvbT9odHRwOi8vc3ViamVjdD0yK1BJRUNFUytSRUZBSVQrQStORVVGK0FWRUMrVEVSUkFTU0UmIzAzODtib2R5PWh0dHBzJTNBJTJGJTJGd3d3LmNhYmluZXQta21pLmNvbSUyRmVzdGF0ZV9wcm9wZXJ0eSUyRjItcGllY2VzLXJlZmFpdC1hLW5ldWYtYXZlYy10ZXJyYXNzZSUyRiIgZGF0YS1hY3Rpb249InNoYXJlIGVtYWlsIiAgY2xhc3M9InNvY2lhbF9lbWFpbCI+PC9hPgoKICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ic2hhcmVfbGlzdCIgIGRhdGEtb3JpZ2luYWwtdGl0bGU9InBhcnRhZ2VyIiA+PC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJpY29uLWZhdiBpY29uLWZhdi1vZmYiIGRhdGEtb3JpZ2luYWwtdGl0bGU9ImFqb3V0ZXIgYXV4IEZhdm9yaXMiIGRhdGEtcG9zdGlkPSIyMjUxMSI+PC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJjb21wYXJlLWFjdGlvbiIgZGF0YS1vcmlnaW5hbC10aXRsZT0iY29tcGFyZXIiIGRhdGEtcGltYWdlPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vd3AtY29udGVudC91cGxvYWRzLzIwMjAvMDIvMTU3NTQ2MzkxN19WQTIwMjJfMV9sLTE0M3g4My5qcGciIGRhdGEtcGlkPSIyMjUxMSI+PC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+ICAgICAgICA8L2Rpdj4gICAgICAgICAgICAgCiAgICA8L2Rpdj4gIAoKCgo8ZGl2IGNsYXNzPSJjb2wtbWQtNCBoYXNfcHJvcF9zbGlkZXIgIGxpc3Rpbmdfd3JhcHBlciIgZGF0YS1vcmc9IjQiIGRhdGEtbGlzdGlkPSIyMjUwNSIgPiAKICAgIDxkaXYgY2xhc3M9InByb3BlcnR5X2xpc3RpbmcgICAiIGRhdGEtbGluaz0iIj4KICAgICAgICAKICAgICAgICA8ZGl2IGNsYXNzPSJsaXN0aW5nLXVuaXQtaW1nLXdyYXBwZXIiPjxkaXYgY2xhc3M9InByb3BfbmV3X2RldGFpbHMiPjxkaXYgY2xhc3M9InByb3BfbmV3X2RldGFpbHNfYmFjayI+PC9kaXY+PGRpdiBjbGFzcz0icHJvcGVydHlfbWVkaWEiPjxpIGNsYXNzPSJmYSBmYS1jYW1lcmEiIGFyaWEtaGlkZGVuPSJ0cnVlIj48L2k+IDUKICAgICAgICAgICAgICAgIDwvZGl2PjxkaXYgY2xhc3M9InByb3BlcnR5X2xvY2F0aW9uX2ltYWdlIj4gCiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb3BlcnR5X21hcmtlciI+PC9zcGFuPjxhIGhyZWY9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS9wcm9wZXJ0eV9jaXR5Lzc1MDE5LyI+NzUwMTk8L2E+LCA8YSBocmVmPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vcHJvcGVydHlfY2l0eS9wYXJpcy0yLyI+UGFyaXM8L2E+PC9kaXY+PC9kaXY+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBpZD0icHJvcGVydHlfdW5pdF9jYXJvdXNlbF81ZTg0YTZhMTUxMjllIiBjbGFzcz0iY2Fyb3VzZWwgcHJvcGVydHlfdW5pdF9jYXJvdXNlbCBzbGlkZSAiIGRhdGEtcmlkZT0iY2Fyb3VzZWwiIGRhdGEtaW50ZXJ2YWw9ImZhbHNlIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY2Fyb3VzZWwtaW5uZXIiPiAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iaXRlbSBhY3RpdmUiPiAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vZXN0YXRlX3Byb3BlcnR5L3N0dWRpby0xMy8iPjxpbWcgd2lkdGg9IjUyNSIgaGVpZ2h0PSIzMjgiIHNyYz0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL3dwLWNvbnRlbnQvdXBsb2Fkcy8yMDIwLzAyLzE1NzQ3OTM2MThfVkEyMDE4XzFfbC01MjV4MzI4LmpwZyIgY2xhc3M9Imxhenlsb2FkIGltZy1yZXNwb25zaXZlIHdwLXBvc3QtaW1hZ2UiIGFsdD0iIiBkYXRhLW9yaWdpbmFsPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vd3AtY29udGVudC91cGxvYWRzLzIwMjAvMDIvMTU3NDc5MzYxOF9WQTIwMThfMV9sLTUyNXgzMjguanBnIiAvPjwvYT4gICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJpdGVtIGxhenktbG9hZC1pdGVtIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vZXN0YXRlX3Byb3BlcnR5L3N0dWRpby0xMy8iPjxpbWcgIGRhdGEtbGF6eS1sb2FkLXNyYz0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL3dwLWNvbnRlbnQvdXBsb2Fkcy8yMDIwLzAyLzE1NzQ3OTM2MjdfVkEyMDE4XzJfbC01MjV4MzI4LmpwZyIgYWx0PSJTVFVESU8iIGNsYXNzPSJpbWctcmVzcG9uc2l2ZSIgLz48L2E+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj48ZGl2IGNsYXNzPSJpdGVtIGxhenktbG9hZC1pdGVtIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vZXN0YXRlX3Byb3BlcnR5L3N0dWRpby0xMy8iPjxpbWcgIGRhdGEtbGF6eS1sb2FkLXNyYz0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL3dwLWNvbnRlbnQvdXBsb2Fkcy8yMDIwLzAyLzE1NzQ3OTM2MzFfVkEyMDE4XzRfbC00NjZ4MzI4LmpwZyIgYWx0PSJTVFVESU8iIGNsYXNzPSJpbWctcmVzcG9uc2l2ZSIgLz48L2E+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj48ZGl2IGNsYXNzPSJpdGVtIGxhenktbG9hZC1pdGVtIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vZXN0YXRlX3Byb3BlcnR5L3N0dWRpby0xMy8iPjxpbWcgIGRhdGEtbGF6eS1sb2FkLXNyYz0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL3dwLWNvbnRlbnQvdXBsb2Fkcy8yMDIwLzAyLzE1NzQ3OTM2NDBfVkEyMDE4XzVfbC01MjV4MzI4LmpwZyIgYWx0PSJTVFVESU8iIGNsYXNzPSJpbWctcmVzcG9uc2l2ZSIgLz48L2E+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj48ZGl2IGNsYXNzPSJpdGVtIGxhenktbG9hZC1pdGVtIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vZXN0YXRlX3Byb3BlcnR5L3N0dWRpby0xMy8iPjxpbWcgIGRhdGEtbGF6eS1sb2FkLXNyYz0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL3dwLWNvbnRlbnQvdXBsb2Fkcy8yMDIwLzAyLzE1NzQ3OTM2NDVfVkEyMDE4XzZfbC01MjV4MzI4LmpwZyIgYWx0PSJTVFVESU8iIGNsYXNzPSJpbWctcmVzcG9uc2l2ZSIgLz48L2E+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vZXN0YXRlX3Byb3BlcnR5L3N0dWRpby0xMy8iPiA8L2E+PGEgY2xhc3M9ImxlZnQgIGNhcm91c2VsLWNvbnRyb2wiIGhyZWY9IiNwcm9wZXJ0eV91bml0X2Nhcm91c2VsXzVlODRhNmExNTEyOWUiIGRhdGEtc2xpZGU9InByZXYiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJkZW1vLWljb24gaWNvbi1sZWZ0LW9wZW4tYmlnIj48L2k+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2E+CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgY2xhc3M9InJpZ2h0ICBjYXJvdXNlbC1jb250cm9sIiBocmVmPSIjcHJvcGVydHlfdW5pdF9jYXJvdXNlbF81ZTg0YTZhMTUxMjllIiBkYXRhLXNsaWRlPSJuZXh0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZGVtby1pY29uIGljb24tcmlnaHQtb3Blbi1iaWciPjwvaT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgICA8L2Rpdj48ZGl2IGNsYXNzPSJ0YWctd3JhcHBlciI+PGRpdiBjbGFzcz0ic3RhdHVzLXdyYXBwZXIiPjxkaXYgY2xhc3M9ImFjdGlvbl90YWdfd3JhcHBlciBWRU5EVSAiPlZFTkRVPC9kaXY+PGRpdiBjbGFzcz0icmliYm9uLWluc2lkZSBWRU5EVSI+VkVORFU8L2Rpdj48L2Rpdj48L2Rpdj48L2Rpdj4KCiAgICAgICAgICAgIDxoND48YSBocmVmPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vZXN0YXRlX3Byb3BlcnR5L3N0dWRpby0xMy8iPgogICAgICAgICAgICAgICAgU1RVRElPICAgICAgICAgICAgICAgIDwvYT4gCiAgICAgICAgICAgIDwvaDQ+IAogICAgICAgICAgICAKICAgICAgICAgICAgPGRpdiBjbGFzcz0ibGlzdGluZ191bml0X3ByaWNlX3dyYXBwZXIiPjxzcGFuIGNsYXNzPSJwcmljZV9sYWJlbCI+Tm91cyBjb25zdWx0ZXI8L3NwYW4+PC9kaXY+ICAgICAgICAKICAgICAgICAKICAgICAgICAKICAgICAgICAgICAKICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Imxpc3RpbmdfZGV0YWlscyB0aGVfZ3JpZF92aWV3Ij4KICAgICAgICAgICAgICAgICAgICBWQTIwMTgtS01JICYjODIxMTsgQlVUVEVTIENIQVVNT05ULCBNQVJDSEUgU0VDUsOJVEFOLCDDoCBwcm94aW1pdMOpIGltbcOpZGlhdGUgZGVzIGNvbW1lcmNlcyBldCBkZXMgdHJhbnNwb3J0cywgYXUgMWVyICA8YSBocmVmPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vZXN0YXRlX3Byb3BlcnR5L3N0dWRpby0xMy8iIGNsYXNzPSJ1bml0X21vcmVfeCI+W3BsdXNdPC9hPiAgICAgICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJsaXN0aW5nX2RldGFpbHMgdGhlX2xpc3RfdmlldyI+CiAgICAgICAgICAgICAgICAgICAgVkEyMDE4LUtNSSAmIzgyMTE7IEJVVFRFUyBDSEFVTU9OVCwgTUFSQ0hFIFNFQ1LDiVRBTiwgw6AgcHJveGltaXTDqSBpbW3DqWRpYXRlIGRlcyBjb21tZXJjZXMgZXQgZGVzIHRyYW5zcG9ydHMsIGF1IDFlciAgPGEgaHJlZj0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL2VzdGF0ZV9wcm9wZXJ0eS9zdHVkaW8tMTMvIiBjbGFzcz0idW5pdF9tb3JlX3giPltwbHVzXTwvYT4gICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgIAoKCiAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb3BlcnR5X2xpc3RpbmdfZGV0YWlscyI+CiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iaW5mb2JhdGgiPjE8L3NwYW4+IDxzcGFuIGNsYXNzPSJpbmZvc2l6ZSI+MTIsMDAgbTxzdXA+Mjwvc3VwPjwvc3Bhbj48YSBocmVmPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vZXN0YXRlX3Byb3BlcnR5L3N0dWRpby0xMy8iIGNsYXNzPSJ1bml0X2RldGFpbHNfeCI+aW5mbyBjb21wbMOodGU8L2E+ICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgIAogICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9wZXJ0eV9sb2NhdGlvbiI+CiAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9wZXJ0eV9hZ2VudF93cmFwcGVyIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvcGVydHlfYWdlbnRfaW1hZ2UiIHN0eWxlPSJiYWNrZ3JvdW5kLWltYWdlOnVybCgnaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL3dwLWNvbnRlbnQvdXBsb2Fkcy8yMDE5LzA2L1B5csOpbsOpZXMtNC0xMjB4MTIwLmpwZycpIj48L2Rpdj4gCiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb3BlcnR5X2FnZW50X2ltYWdlX3NpZ24iPjxpIGNsYXNzPSJmYSBmYS11c2VyLWNpcmNsZS1vIiBhcmlhLWhpZGRlbj0idHJ1ZSI+PC9pPjwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vZXN0YXRlX2FnZW50L2ttaS1weXJlbmVlcy8iPktNSSBQWVLDiU7DiUVTPC9hPiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJsaXN0aW5nX2FjdGlvbnMiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ic2hhcmVfdW5pdCI+CiAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly93d3cuZmFjZWJvb2suY29tL3NoYXJlci5waHA/dT1odHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vZXN0YXRlX3Byb3BlcnR5L3N0dWRpby0xMy8mYW1wO3Q9U1RVRElPIiB0YXJnZXQ9Il9ibGFuayIgY2xhc3M9InNvY2lhbF9mYWNlYm9vayI+PC9hPgogICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vdHdpdHRlci5jb20vaG9tZT9zdGF0dXM9U1RVRElPaHR0cHMlM0ElMkYlMkZ3d3cuY2FiaW5ldC1rbWkuY29tJTJGZXN0YXRlX3Byb3BlcnR5JTJGc3R1ZGlvLTEzJTJGIiBjbGFzcz0ic29jaWFsX3R3ZWV0IiB0YXJnZXQ9Il9ibGFuayI+PC9hPgogICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vcGludGVyZXN0LmNvbS9waW4vY3JlYXRlL2J1dHRvbi8/dXJsPWh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS9lc3RhdGVfcHJvcGVydHkvc3R1ZGlvLTEzLyZhbXA7bWVkaWE9aHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL3dwLWNvbnRlbnQvdXBsb2Fkcy8yMDIwLzAyLzE1NzQ3OTM2MThfVkEyMDE4XzFfbC5qcGcmYW1wO2Rlc2NyaXB0aW9uPVNUVURJTyIgdGFyZ2V0PSJfYmxhbmsiIGNsYXNzPSJzb2NpYWxfcGludGVyZXN0Ij48L2E+CiAgICAgICAgPGEgaHJlZj0ibWFpbHRvOmVtYWlsQGVtYWlsLmNvbT9odHRwOi8vc3ViamVjdD1TVFVESU8mIzAzODtib2R5PWh0dHBzJTNBJTJGJTJGd3d3LmNhYmluZXQta21pLmNvbSUyRmVzdGF0ZV9wcm9wZXJ0eSUyRnN0dWRpby0xMyUyRiIgZGF0YS1hY3Rpb249InNoYXJlIGVtYWlsIiAgY2xhc3M9InNvY2lhbF9lbWFpbCI+PC9hPgoKICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ic2hhcmVfbGlzdCIgIGRhdGEtb3JpZ2luYWwtdGl0bGU9InBhcnRhZ2VyIiA+PC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJpY29uLWZhdiBpY29uLWZhdi1vZmYiIGRhdGEtb3JpZ2luYWwtdGl0bGU9ImFqb3V0ZXIgYXV4IEZhdm9yaXMiIGRhdGEtcG9zdGlkPSIyMjUwNSI+PC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJjb21wYXJlLWFjdGlvbiIgZGF0YS1vcmlnaW5hbC10aXRsZT0iY29tcGFyZXIiIGRhdGEtcGltYWdlPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vd3AtY29udGVudC91cGxvYWRzLzIwMjAvMDIvMTU3NDc5MzYxOF9WQTIwMThfMV9sLTE0M3g4My5qcGciIGRhdGEtcGlkPSIyMjUwNSI+PC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+ICAgICAgICA8L2Rpdj4gICAgICAgICAgICAgCiAgICA8L2Rpdj4gIAoKCgo8ZGl2IGNsYXNzPSJjb2wtbWQtNCBoYXNfcHJvcF9zbGlkZXIgIGxpc3Rpbmdfd3JhcHBlciIgZGF0YS1vcmc9IjQiIGRhdGEtbGlzdGlkPSIyMjQ3NCIgPiAKICAgIDxkaXYgY2xhc3M9InByb3BlcnR5X2xpc3RpbmcgICAiIGRhdGEtbGluaz0iIj4KICAgICAgICAKICAgICAgICA8ZGl2IGNsYXNzPSJsaXN0aW5nLXVuaXQtaW1nLXdyYXBwZXIiPjxkaXYgY2xhc3M9InByb3BfbmV3X2RldGFpbHMiPjxkaXYgY2xhc3M9InByb3BfbmV3X2RldGFpbHNfYmFjayI+PC9kaXY+PGRpdiBjbGFzcz0icHJvcGVydHlfbWVkaWEiPjxpIGNsYXNzPSJmYSBmYS1jYW1lcmEiIGFyaWEtaGlkZGVuPSJ0cnVlIj48L2k+IDUKICAgICAgICAgICAgICAgIDwvZGl2PjxkaXYgY2xhc3M9InByb3BlcnR5X2xvY2F0aW9uX2ltYWdlIj4gCiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb3BlcnR5X21hcmtlciI+PC9zcGFuPjxhIGhyZWY9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS9wcm9wZXJ0eV9jaXR5Lzc1MDIwLyI+NzUwMjA8L2E+LCA8YSBocmVmPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vcHJvcGVydHlfY2l0eS9wYXJpcy0yLyI+UGFyaXM8L2E+PC9kaXY+PC9kaXY+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBpZD0icHJvcGVydHlfdW5pdF9jYXJvdXNlbF81ZTg0YTZhMTU1NDM5IiBjbGFzcz0iY2Fyb3VzZWwgcHJvcGVydHlfdW5pdF9jYXJvdXNlbCBzbGlkZSAiIGRhdGEtcmlkZT0iY2Fyb3VzZWwiIGRhdGEtaW50ZXJ2YWw9ImZhbHNlIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY2Fyb3VzZWwtaW5uZXIiPiAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iaXRlbSBhY3RpdmUiPiAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vZXN0YXRlX3Byb3BlcnR5LzItcGllY2VzLTI1LyI+PGltZyB3aWR0aD0iNTI1IiBoZWlnaHQ9IjMyOCIgc3JjPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vd3AtY29udGVudC91cGxvYWRzLzIwMjAvMDIvMTU3NDA3NTA3Ml9WQTIwMTJfMl9sLTUyNXgzMjguanBnIiBjbGFzcz0ibGF6eWxvYWQgaW1nLXJlc3BvbnNpdmUgd3AtcG9zdC1pbWFnZSIgYWx0PSIiIGRhdGEtb3JpZ2luYWw9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS93cC1jb250ZW50L3VwbG9hZHMvMjAyMC8wMi8xNTc0MDc1MDcyX1ZBMjAxMl8yX2wtNTI1eDMyOC5qcGciIC8+PC9hPiAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Iml0ZW0gbGF6eS1sb2FkLWl0ZW0iPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS9lc3RhdGVfcHJvcGVydHkvMi1waWVjZXMtMjUvIj48aW1nICBkYXRhLWxhenktbG9hZC1zcmM9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS93cC1jb250ZW50L3VwbG9hZHMvMjAyMC8wMi8xNTc0MDc1MTA1X1ZBMjAxMl8zX2wtNTI1eDMyOC5qcGciIGFsdD0iMiBwacOoY2VzIiBjbGFzcz0iaW1nLXJlc3BvbnNpdmUiIC8+PC9hPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+PGRpdiBjbGFzcz0iaXRlbSBsYXp5LWxvYWQtaXRlbSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL2VzdGF0ZV9wcm9wZXJ0eS8yLXBpZWNlcy0yNS8iPjxpbWcgIGRhdGEtbGF6eS1sb2FkLXNyYz0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL3dwLWNvbnRlbnQvdXBsb2Fkcy8yMDIwLzAyLzE1NzQwNzUwNDBfVkEyMDEyXzFfbC01MjV4MzI4LmpwZyIgYWx0PSIyIHBpw6hjZXMiIGNsYXNzPSJpbWctcmVzcG9uc2l2ZSIgLz48L2E+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj48ZGl2IGNsYXNzPSJpdGVtIGxhenktbG9hZC1pdGVtIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vZXN0YXRlX3Byb3BlcnR5LzItcGllY2VzLTI1LyI+PGltZyAgZGF0YS1sYXp5LWxvYWQtc3JjPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vd3AtY29udGVudC91cGxvYWRzLzIwMjAvMDIvMTU3NDA3NTEyNV9WQTIwMTJfNF9sLTUyNXgzMjguanBnIiBhbHQ9IjIgcGnDqGNlcyIgY2xhc3M9ImltZy1yZXNwb25zaXZlIiAvPjwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PjxkaXYgY2xhc3M9Iml0ZW0gbGF6eS1sb2FkLWl0ZW0iPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS9lc3RhdGVfcHJvcGVydHkvMi1waWVjZXMtMjUvIj48aW1nICBkYXRhLWxhenktbG9hZC1zcmM9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS93cC1jb250ZW50L3VwbG9hZHMvMjAyMC8wMi8xNTc0MDc1NzkzX1ZBMjAxMl81X2wtNDU3eDMyOC5qcGciIGFsdD0iMiBwacOoY2VzIiBjbGFzcz0iaW1nLXJlc3BvbnNpdmUiIC8+PC9hPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL2VzdGF0ZV9wcm9wZXJ0eS8yLXBpZWNlcy0yNS8iPiA8L2E+PGEgY2xhc3M9ImxlZnQgIGNhcm91c2VsLWNvbnRyb2wiIGhyZWY9IiNwcm9wZXJ0eV91bml0X2Nhcm91c2VsXzVlODRhNmExNTU0MzkiIGRhdGEtc2xpZGU9InByZXYiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJkZW1vLWljb24gaWNvbi1sZWZ0LW9wZW4tYmlnIj48L2k+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2E+CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgY2xhc3M9InJpZ2h0ICBjYXJvdXNlbC1jb250cm9sIiBocmVmPSIjcHJvcGVydHlfdW5pdF9jYXJvdXNlbF81ZTg0YTZhMTU1NDM5IiBkYXRhLXNsaWRlPSJuZXh0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZGVtby1pY29uIGljb24tcmlnaHQtb3Blbi1iaWciPjwvaT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgICA8L2Rpdj48ZGl2IGNsYXNzPSJ0YWctd3JhcHBlciI+PGRpdiBjbGFzcz0ic3RhdHVzLXdyYXBwZXIiPjxkaXYgY2xhc3M9ImFjdGlvbl90YWdfd3JhcHBlciBWRU5EVSAiPlZFTkRVPC9kaXY+PGRpdiBjbGFzcz0icmliYm9uLWluc2lkZSBWRU5EVSI+VkVORFU8L2Rpdj48L2Rpdj48L2Rpdj48L2Rpdj4KCiAgICAgICAgICAgIDxoND48YSBocmVmPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vZXN0YXRlX3Byb3BlcnR5LzItcGllY2VzLTI1LyI+CiAgICAgICAgICAgICAgICAyIHBpw6hjZXMgICAgICAgICAgICAgICAgPC9hPiAKICAgICAgICAgICAgPC9oND4gCiAgICAgICAgICAgIAogICAgICAgICAgICA8ZGl2IGNsYXNzPSJsaXN0aW5nX3VuaXRfcHJpY2Vfd3JhcHBlciI+PHNwYW4gY2xhc3M9InByaWNlX2xhYmVsIj5Ob3VzIGNvbnN1bHRlcjwvc3Bhbj48L2Rpdj4gICAgICAgIAogICAgICAgIAogICAgICAgIAogICAgICAgICAgIAogICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ibGlzdGluZ19kZXRhaWxzIHRoZV9ncmlkX3ZpZXciPgogICAgICAgICAgICAgICAgICAgIFZBMjAxMi1LTUkgJiM4MjExOyBQQVJJUyAyMMOobWUgJiM4MjExOyBFWENMVVNJVklURSBLTUkgJiM4MjExOyBQw4hSRS1MQUNIQUlTRSwgU2l0dcOpIGRhbnMgdW5lIHJ1ZSBjYWxtZSBzaXR1w6kgw6AgcHJveCA8YSBocmVmPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vZXN0YXRlX3Byb3BlcnR5LzItcGllY2VzLTI1LyIgY2xhc3M9InVuaXRfbW9yZV94Ij5bcGx1c108L2E+ICAgICAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Imxpc3RpbmdfZGV0YWlscyB0aGVfbGlzdF92aWV3Ij4KICAgICAgICAgICAgICAgICAgICBWQTIwMTItS01JICYjODIxMTsgUEFSSVMgMjDDqG1lICYjODIxMTsgRVhDTFVTSVZJVEUgS01JICYjODIxMTsgUMOIUkUtTEFDSEFJU0UsIFNpdHXDqSBkYW5zIHVuZSBydWUgY2FsbWUgc2l0dcOpIMOgIHByb3ggPGEgaHJlZj0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL2VzdGF0ZV9wcm9wZXJ0eS8yLXBpZWNlcy0yNS8iIGNsYXNzPSJ1bml0X21vcmVfeCI+W3BsdXNdPC9hPiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgCgoKICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvcGVydHlfbGlzdGluZ19kZXRhaWxzIj4KICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iaW5mb3Jvb20iPjE8L3NwYW4+PHNwYW4gY2xhc3M9ImluZm9iYXRoIj4xPC9zcGFuPiA8c3BhbiBjbGFzcz0iaW5mb3NpemUiPjI0LDAwIG08c3VwPjI8L3N1cD48L3NwYW4+PGEgaHJlZj0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL2VzdGF0ZV9wcm9wZXJ0eS8yLXBpZWNlcy0yNS8iIGNsYXNzPSJ1bml0X2RldGFpbHNfeCI+aW5mbyBjb21wbMOodGU8L2E+ICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgIAogICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9wZXJ0eV9sb2NhdGlvbiI+CiAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9wZXJ0eV9hZ2VudF93cmFwcGVyIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvcGVydHlfYWdlbnRfaW1hZ2UiIHN0eWxlPSJiYWNrZ3JvdW5kLWltYWdlOnVybCgnaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL3dwLWNvbnRlbnQvdXBsb2Fkcy8yMDE5LzA2L1B5csOpbsOpZXMtNC0xMjB4MTIwLmpwZycpIj48L2Rpdj4gCiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb3BlcnR5X2FnZW50X2ltYWdlX3NpZ24iPjxpIGNsYXNzPSJmYSBmYS11c2VyLWNpcmNsZS1vIiBhcmlhLWhpZGRlbj0idHJ1ZSI+PC9pPjwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vZXN0YXRlX2FnZW50L2ttaS1weXJlbmVlcy8iPktNSSBQWVLDiU7DiUVTPC9hPiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJsaXN0aW5nX2FjdGlvbnMiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ic2hhcmVfdW5pdCI+CiAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly93d3cuZmFjZWJvb2suY29tL3NoYXJlci5waHA/dT1odHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vZXN0YXRlX3Byb3BlcnR5LzItcGllY2VzLTI1LyZhbXA7dD0yK3BpJUMzJUE4Y2VzIiB0YXJnZXQ9Il9ibGFuayIgY2xhc3M9InNvY2lhbF9mYWNlYm9vayI+PC9hPgogICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vdHdpdHRlci5jb20vaG9tZT9zdGF0dXM9MitwaSVDMyVBOGNlc2h0dHBzJTNBJTJGJTJGd3d3LmNhYmluZXQta21pLmNvbSUyRmVzdGF0ZV9wcm9wZXJ0eSUyRjItcGllY2VzLTI1JTJGIiBjbGFzcz0ic29jaWFsX3R3ZWV0IiB0YXJnZXQ9Il9ibGFuayI+PC9hPgogICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vcGludGVyZXN0LmNvbS9waW4vY3JlYXRlL2J1dHRvbi8/dXJsPWh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS9lc3RhdGVfcHJvcGVydHkvMi1waWVjZXMtMjUvJmFtcDttZWRpYT1odHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vd3AtY29udGVudC91cGxvYWRzLzIwMjAvMDIvMTU3NDA3NTA3Ml9WQTIwMTJfMl9sLmpwZyZhbXA7ZGVzY3JpcHRpb249MitwaSVDMyVBOGNlcyIgdGFyZ2V0PSJfYmxhbmsiIGNsYXNzPSJzb2NpYWxfcGludGVyZXN0Ij48L2E+CiAgICAgICAgPGEgaHJlZj0ibWFpbHRvOmVtYWlsQGVtYWlsLmNvbT9odHRwOi8vc3ViamVjdD0yK3BpJUMzJUE4Y2VzJiMwMzg7Ym9keT1odHRwcyUzQSUyRiUyRnd3dy5jYWJpbmV0LWttaS5jb20lMkZlc3RhdGVfcHJvcGVydHklMkYyLXBpZWNlcy0yNSUyRiIgZGF0YS1hY3Rpb249InNoYXJlIGVtYWlsIiAgY2xhc3M9InNvY2lhbF9lbWFpbCI+PC9hPgoKICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ic2hhcmVfbGlzdCIgIGRhdGEtb3JpZ2luYWwtdGl0bGU9InBhcnRhZ2VyIiA+PC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJpY29uLWZhdiBpY29uLWZhdi1vZmYiIGRhdGEtb3JpZ2luYWwtdGl0bGU9ImFqb3V0ZXIgYXV4IEZhdm9yaXMiIGRhdGEtcG9zdGlkPSIyMjQ3NCI+PC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJjb21wYXJlLWFjdGlvbiIgZGF0YS1vcmlnaW5hbC10aXRsZT0iY29tcGFyZXIiIGRhdGEtcGltYWdlPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vd3AtY29udGVudC91cGxvYWRzLzIwMjAvMDIvMTU3NDA3NTA3Ml9WQTIwMTJfMl9sLTE0M3g4My5qcGciIGRhdGEtcGlkPSIyMjQ3NCI+PC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+ICAgICAgICA8L2Rpdj4gICAgICAgICAgICAgCiAgICA8L2Rpdj4gIAoKCgo8ZGl2IGNsYXNzPSJjb2wtbWQtNCBoYXNfcHJvcF9zbGlkZXIgIGxpc3Rpbmdfd3JhcHBlciIgZGF0YS1vcmc9IjQiIGRhdGEtbGlzdGlkPSIyMjQ3MCIgPiAKICAgIDxkaXYgY2xhc3M9InByb3BlcnR5X2xpc3RpbmcgICAiIGRhdGEtbGluaz0iIj4KICAgICAgICAKICAgICAgICA8ZGl2IGNsYXNzPSJsaXN0aW5nLXVuaXQtaW1nLXdyYXBwZXIiPjxkaXYgY2xhc3M9InByb3BfbmV3X2RldGFpbHMiPjxkaXYgY2xhc3M9InByb3BfbmV3X2RldGFpbHNfYmFjayI+PC9kaXY+PGRpdiBjbGFzcz0icHJvcGVydHlfbWVkaWEiPjxpIGNsYXNzPSJmYSBmYS1jYW1lcmEiIGFyaWEtaGlkZGVuPSJ0cnVlIj48L2k+IDMKICAgICAgICAgICAgICAgIDwvZGl2PjxkaXYgY2xhc3M9InByb3BlcnR5X2xvY2F0aW9uX2ltYWdlIj4gCiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb3BlcnR5X21hcmtlciI+PC9zcGFuPjxhIGhyZWY9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS9wcm9wZXJ0eV9jaXR5Lzc1MDIwLyI+NzUwMjA8L2E+LCA8YSBocmVmPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vcHJvcGVydHlfY2l0eS9wYXJpcy0yLyI+UGFyaXM8L2E+PC9kaXY+PC9kaXY+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBpZD0icHJvcGVydHlfdW5pdF9jYXJvdXNlbF81ZTg0YTZhMTU4NzJiIiBjbGFzcz0iY2Fyb3VzZWwgcHJvcGVydHlfdW5pdF9jYXJvdXNlbCBzbGlkZSAiIGRhdGEtcmlkZT0iY2Fyb3VzZWwiIGRhdGEtaW50ZXJ2YWw9ImZhbHNlIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY2Fyb3VzZWwtaW5uZXIiPiAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iaXRlbSBhY3RpdmUiPiAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vZXN0YXRlX3Byb3BlcnR5L3N0dWRpby0xMi8iPjxpbWcgd2lkdGg9IjUyNSIgaGVpZ2h0PSIzMjgiIHNyYz0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL3dwLWNvbnRlbnQvdXBsb2Fkcy8yMDIwLzAyLzE1NzM2NjY0OTZfVkEyMDA4XzFfbC01MjV4MzI4LmpwZyIgY2xhc3M9Imxhenlsb2FkIGltZy1yZXNwb25zaXZlIHdwLXBvc3QtaW1hZ2UiIGFsdD0iIiBkYXRhLW9yaWdpbmFsPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vd3AtY29udGVudC91cGxvYWRzLzIwMjAvMDIvMTU3MzY2NjQ5Nl9WQTIwMDhfMV9sLTUyNXgzMjguanBnIiAvPjwvYT4gICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJpdGVtIGxhenktbG9hZC1pdGVtIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vZXN0YXRlX3Byb3BlcnR5L3N0dWRpby0xMi8iPjxpbWcgIGRhdGEtbGF6eS1sb2FkLXNyYz0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL3dwLWNvbnRlbnQvdXBsb2Fkcy8yMDIwLzAyLzE1NzM2NjY1MDhfVkEyMDA4XzJfbC01MjV4MzI4LmpwZyIgYWx0PSJTVFVESU8iIGNsYXNzPSJpbWctcmVzcG9uc2l2ZSIgLz48L2E+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj48ZGl2IGNsYXNzPSJpdGVtIGxhenktbG9hZC1pdGVtIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vZXN0YXRlX3Byb3BlcnR5L3N0dWRpby0xMi8iPjxpbWcgIGRhdGEtbGF6eS1sb2FkLXNyYz0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL3dwLWNvbnRlbnQvdXBsb2Fkcy8yMDIwLzAyLzE1NzM2NjY2ODlfVkEyMDA4XzNfbC01MjV4MzI4LmpwZyIgYWx0PSJTVFVESU8iIGNsYXNzPSJpbWctcmVzcG9uc2l2ZSIgLz48L2E+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vZXN0YXRlX3Byb3BlcnR5L3N0dWRpby0xMi8iPiA8L2E+PGEgY2xhc3M9ImxlZnQgIGNhcm91c2VsLWNvbnRyb2wiIGhyZWY9IiNwcm9wZXJ0eV91bml0X2Nhcm91c2VsXzVlODRhNmExNTg3MmIiIGRhdGEtc2xpZGU9InByZXYiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJkZW1vLWljb24gaWNvbi1sZWZ0LW9wZW4tYmlnIj48L2k+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2E+CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgY2xhc3M9InJpZ2h0ICBjYXJvdXNlbC1jb250cm9sIiBocmVmPSIjcHJvcGVydHlfdW5pdF9jYXJvdXNlbF81ZTg0YTZhMTU4NzJiIiBkYXRhLXNsaWRlPSJuZXh0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZGVtby1pY29uIGljb24tcmlnaHQtb3Blbi1iaWciPjwvaT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgICA8L2Rpdj48ZGl2IGNsYXNzPSJ0YWctd3JhcHBlciI+PGRpdiBjbGFzcz0ic3RhdHVzLXdyYXBwZXIiPjxkaXYgY2xhc3M9ImFjdGlvbl90YWdfd3JhcHBlciBWRU5EVSAiPlZFTkRVPC9kaXY+PGRpdiBjbGFzcz0icmliYm9uLWluc2lkZSBWRU5EVSI+VkVORFU8L2Rpdj48L2Rpdj48L2Rpdj48L2Rpdj4KCiAgICAgICAgICAgIDxoND48YSBocmVmPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vZXN0YXRlX3Byb3BlcnR5L3N0dWRpby0xMi8iPgogICAgICAgICAgICAgICAgU1RVRElPICAgICAgICAgICAgICAgIDwvYT4gCiAgICAgICAgICAgIDwvaDQ+IAogICAgICAgICAgICAKICAgICAgICAgICAgPGRpdiBjbGFzcz0ibGlzdGluZ191bml0X3ByaWNlX3dyYXBwZXIiPjxzcGFuIGNsYXNzPSJwcmljZV9sYWJlbCI+Tm91cyBjb25zdWx0ZXI8L3NwYW4+PC9kaXY+ICAgICAgICAKICAgICAgICAKICAgICAgICAKICAgICAgICAgICAKICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Imxpc3RpbmdfZGV0YWlscyB0aGVfZ3JpZF92aWV3Ij4KICAgICAgICAgICAgICAgICAgICBWQTIwMDgtS01JICYjODIxMTsgUGFyaXMgMjDDqG1lOiBFWENMVVNJVklUw4kgJiM4MjExOyBQb3J0ZSBkZSBNb250cmV1aWwgJiM4MjExOyBQcm9jaGUgZGVzIGNvbW1lcmNlcyBldCBkZXMgdHJhbnNwb3IgPGEgaHJlZj0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL2VzdGF0ZV9wcm9wZXJ0eS9zdHVkaW8tMTIvIiBjbGFzcz0idW5pdF9tb3JlX3giPltwbHVzXTwvYT4gICAgICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ibGlzdGluZ19kZXRhaWxzIHRoZV9saXN0X3ZpZXciPgogICAgICAgICAgICAgICAgICAgIFZBMjAwOC1LTUkgJiM4MjExOyBQYXJpcyAyMMOobWU6IEVYQ0xVU0lWSVTDiSAmIzgyMTE7IFBvcnRlIGRlIE1vbnRyZXVpbCAmIzgyMTE7IFByb2NoZSBkZXMgY29tbWVyY2VzIGV0IGRlcyB0cmFuc3BvciA8YSBocmVmPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vZXN0YXRlX3Byb3BlcnR5L3N0dWRpby0xMi8iIGNsYXNzPSJ1bml0X21vcmVfeCI+W3BsdXNdPC9hPiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgCgoKICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvcGVydHlfbGlzdGluZ19kZXRhaWxzIj4KICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJpbmZvYmF0aCI+MTwvc3Bhbj4gPHNwYW4gY2xhc3M9ImluZm9zaXplIj4xNSwwMCBtPHN1cD4yPC9zdXA+PC9zcGFuPjxhIGhyZWY9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS9lc3RhdGVfcHJvcGVydHkvc3R1ZGlvLTEyLyIgY2xhc3M9InVuaXRfZGV0YWlsc194Ij5pbmZvIGNvbXBsw6h0ZTwvYT4gICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgCiAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb3BlcnR5X2xvY2F0aW9uIj4KICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb3BlcnR5X2FnZW50X3dyYXBwZXIiPgogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9wZXJ0eV9hZ2VudF9pbWFnZSIgc3R5bGU9ImJhY2tncm91bmQtaW1hZ2U6dXJsKCdodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vd3AtY29udGVudC91cGxvYWRzLzIwMTkvMDYvUHlyw6luw6llcy00LTEyMHgxMjAuanBnJykiPjwvZGl2PiAKICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvcGVydHlfYWdlbnRfaW1hZ2Vfc2lnbiI+PGkgY2xhc3M9ImZhIGZhLXVzZXItY2lyY2xlLW8iIGFyaWEtaGlkZGVuPSJ0cnVlIj48L2k+PC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS9lc3RhdGVfYWdlbnQva21pLXB5cmVuZWVzLyI+S01JIFBZUsOJTsOJRVM8L2E+ICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Imxpc3RpbmdfYWN0aW9ucyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJzaGFyZV91bml0Ij4KICAgICAgICA8YSBocmVmPSJodHRwczovL3d3dy5mYWNlYm9vay5jb20vc2hhcmVyLnBocD91PWh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS9lc3RhdGVfcHJvcGVydHkvc3R1ZGlvLTEyLyZhbXA7dD1TVFVESU8iIHRhcmdldD0iX2JsYW5rIiBjbGFzcz0ic29jaWFsX2ZhY2Vib29rIj48L2E+CiAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly90d2l0dGVyLmNvbS9ob21lP3N0YXR1cz1TVFVESU9odHRwcyUzQSUyRiUyRnd3dy5jYWJpbmV0LWttaS5jb20lMkZlc3RhdGVfcHJvcGVydHklMkZzdHVkaW8tMTIlMkYiIGNsYXNzPSJzb2NpYWxfdHdlZXQiIHRhcmdldD0iX2JsYW5rIj48L2E+CiAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9waW50ZXJlc3QuY29tL3Bpbi9jcmVhdGUvYnV0dG9uLz91cmw9aHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL2VzdGF0ZV9wcm9wZXJ0eS9zdHVkaW8tMTIvJmFtcDttZWRpYT1odHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vd3AtY29udGVudC91cGxvYWRzLzIwMjAvMDIvMTU3MzY2NjQ5Nl9WQTIwMDhfMV9sLmpwZyZhbXA7ZGVzY3JpcHRpb249U1RVRElPIiB0YXJnZXQ9Il9ibGFuayIgY2xhc3M9InNvY2lhbF9waW50ZXJlc3QiPjwvYT4KICAgICAgICA8YSBocmVmPSJtYWlsdG86ZW1haWxAZW1haWwuY29tP2h0dHA6Ly9zdWJqZWN0PVNUVURJTyYjMDM4O2JvZHk9aHR0cHMlM0ElMkYlMkZ3d3cuY2FiaW5ldC1rbWkuY29tJTJGZXN0YXRlX3Byb3BlcnR5JTJGc3R1ZGlvLTEyJTJGIiBkYXRhLWFjdGlvbj0ic2hhcmUgZW1haWwiICBjbGFzcz0ic29jaWFsX2VtYWlsIj48L2E+CgogICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJzaGFyZV9saXN0IiAgZGF0YS1vcmlnaW5hbC10aXRsZT0icGFydGFnZXIiID48L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9Imljb24tZmF2IGljb24tZmF2LW9mZiIgZGF0YS1vcmlnaW5hbC10aXRsZT0iYWpvdXRlciBhdXggRmF2b3JpcyIgZGF0YS1wb3N0aWQ9IjIyNDcwIj48L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImNvbXBhcmUtYWN0aW9uIiBkYXRhLW9yaWdpbmFsLXRpdGxlPSJjb21wYXJlciIgZGF0YS1waW1hZ2U9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS93cC1jb250ZW50L3VwbG9hZHMvMjAyMC8wMi8xNTczNjY2NDk2X1ZBMjAwOF8xX2wtMTQzeDgzLmpwZyIgZGF0YS1waWQ9IjIyNDcwIj48L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4gICAgICAgIDwvZGl2PiAgICAgICAgICAgICAKICAgIDwvZGl2PiAgCgoKCjxkaXYgY2xhc3M9ImNvbC1tZC00IGhhc19wcm9wX3NsaWRlciAgbGlzdGluZ193cmFwcGVyIiBkYXRhLW9yZz0iNCIgZGF0YS1saXN0aWQ9IjIyNDYyIiA+IAogICAgPGRpdiBjbGFzcz0icHJvcGVydHlfbGlzdGluZyAgICIgZGF0YS1saW5rPSIiPgogICAgICAgIAogICAgICAgIDxkaXYgY2xhc3M9Imxpc3RpbmctdW5pdC1pbWctd3JhcHBlciI+PGRpdiBjbGFzcz0icHJvcF9uZXdfZGV0YWlscyI+PGRpdiBjbGFzcz0icHJvcF9uZXdfZGV0YWlsc19iYWNrIj48L2Rpdj48ZGl2IGNsYXNzPSJwcm9wZXJ0eV9tZWRpYSI+PGkgY2xhc3M9ImZhIGZhLWNhbWVyYSIgYXJpYS1oaWRkZW49InRydWUiPjwvaT4gNwogICAgICAgICAgICAgICAgPC9kaXY+PGRpdiBjbGFzcz0icHJvcGVydHlfbG9jYXRpb25faW1hZ2UiPiAKICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvcGVydHlfbWFya2VyIj48L3NwYW4+PGEgaHJlZj0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL3Byb3BlcnR5X2NpdHkvNzUwMTEvIj43NTAxMTwvYT4sIDxhIGhyZWY9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS9wcm9wZXJ0eV9jaXR5L3BhcmlzLTIvIj5QYXJpczwvYT48L2Rpdj48L2Rpdj4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGlkPSJwcm9wZXJ0eV91bml0X2Nhcm91c2VsXzVlODRhNmExNWMwODMiIGNsYXNzPSJjYXJvdXNlbCBwcm9wZXJ0eV91bml0X2Nhcm91c2VsIHNsaWRlICIgZGF0YS1yaWRlPSJjYXJvdXNlbCIgZGF0YS1pbnRlcnZhbD0iZmFsc2UiPgogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjYXJvdXNlbC1pbm5lciI+ICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJpdGVtIGFjdGl2ZSI+ICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS9lc3RhdGVfcHJvcGVydHkvMi1waWVjZXMtMjQvIj48aW1nIHdpZHRoPSI1MjUiIGhlaWdodD0iMzI4IiBzcmM9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS93cC1jb250ZW50L3VwbG9hZHMvMjAyMC8wMi8xNTc1NDYxNDgxX1ZBMjAyMF82X2wtNTI1eDMyOC5qcGciIGNsYXNzPSJsYXp5bG9hZCBpbWctcmVzcG9uc2l2ZSB3cC1wb3N0LWltYWdlIiBhbHQ9IiIgZGF0YS1vcmlnaW5hbD0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL3dwLWNvbnRlbnQvdXBsb2Fkcy8yMDIwLzAyLzE1NzU0NjE0ODFfVkEyMDIwXzZfbC01MjV4MzI4LmpwZyIgLz48L2E+ICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iaXRlbSBsYXp5LWxvYWQtaXRlbSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL2VzdGF0ZV9wcm9wZXJ0eS8yLXBpZWNlcy0yNC8iPjxpbWcgIGRhdGEtbGF6eS1sb2FkLXNyYz0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL3dwLWNvbnRlbnQvdXBsb2Fkcy8yMDIwLzAyLzE1NzU0NjE0NzRfVkEyMDIwXzVfbC01MjV4MzI4LmpwZyIgYWx0PSIyIFBJRUNFUyIgY2xhc3M9ImltZy1yZXNwb25zaXZlIiAvPjwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PjxkaXYgY2xhc3M9Iml0ZW0gbGF6eS1sb2FkLWl0ZW0iPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS9lc3RhdGVfcHJvcGVydHkvMi1waWVjZXMtMjQvIj48aW1nICBkYXRhLWxhenktbG9hZC1zcmM9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS93cC1jb250ZW50L3VwbG9hZHMvMjAyMC8wMi8xNTc1NDYxNDg5X1ZBMjAyMF83X2wtNTI1eDMyOC5qcGciIGFsdD0iMiBQSUVDRVMiIGNsYXNzPSJpbWctcmVzcG9uc2l2ZSIgLz48L2E+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj48ZGl2IGNsYXNzPSJpdGVtIGxhenktbG9hZC1pdGVtIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vZXN0YXRlX3Byb3BlcnR5LzItcGllY2VzLTI0LyI+PGltZyAgZGF0YS1sYXp5LWxvYWQtc3JjPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vd3AtY29udGVudC91cGxvYWRzLzIwMjAvMDIvMTU3NTQ2MTQ0Ml9WQTIwMjBfMV9sLTUyNXgzMjguanBnIiBhbHQ9IjIgUElFQ0VTIiBjbGFzcz0iaW1nLXJlc3BvbnNpdmUiIC8+PC9hPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+PGRpdiBjbGFzcz0iaXRlbSBsYXp5LWxvYWQtaXRlbSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL2VzdGF0ZV9wcm9wZXJ0eS8yLXBpZWNlcy0yNC8iPjxpbWcgIGRhdGEtbGF6eS1sb2FkLXNyYz0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL3dwLWNvbnRlbnQvdXBsb2Fkcy8yMDIwLzAyLzE1NzU0NjE0NTFfVkEyMDIwXzJfbC01MjV4MzI4LmpwZyIgYWx0PSIyIFBJRUNFUyIgY2xhc3M9ImltZy1yZXNwb25zaXZlIiAvPjwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PjxkaXYgY2xhc3M9Iml0ZW0gbGF6eS1sb2FkLWl0ZW0iPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS9lc3RhdGVfcHJvcGVydHkvMi1waWVjZXMtMjQvIj48aW1nICBkYXRhLWxhenktbG9hZC1zcmM9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS93cC1jb250ZW50L3VwbG9hZHMvMjAyMC8wMi8xNTc1NDYxNDU5X1ZBMjAyMF8zX2wtNTI1eDMyOC5qcGciIGFsdD0iMiBQSUVDRVMiIGNsYXNzPSJpbWctcmVzcG9uc2l2ZSIgLz48L2E+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj48ZGl2IGNsYXNzPSJpdGVtIGxhenktbG9hZC1pdGVtIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vZXN0YXRlX3Byb3BlcnR5LzItcGllY2VzLTI0LyI+PGltZyAgZGF0YS1sYXp5LWxvYWQtc3JjPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vd3AtY29udGVudC91cGxvYWRzLzIwMjAvMDIvMTU3NTQ2MTQ2N19WQTIwMjBfNF9sLTUyNXgzMjguanBnIiBhbHQ9IjIgUElFQ0VTIiBjbGFzcz0iaW1nLXJlc3BvbnNpdmUiIC8+PC9hPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL2VzdGF0ZV9wcm9wZXJ0eS8yLXBpZWNlcy0yNC8iPiA8L2E+PGEgY2xhc3M9ImxlZnQgIGNhcm91c2VsLWNvbnRyb2wiIGhyZWY9IiNwcm9wZXJ0eV91bml0X2Nhcm91c2VsXzVlODRhNmExNWMwODMiIGRhdGEtc2xpZGU9InByZXYiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJkZW1vLWljb24gaWNvbi1sZWZ0LW9wZW4tYmlnIj48L2k+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2E+CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgY2xhc3M9InJpZ2h0ICBjYXJvdXNlbC1jb250cm9sIiBocmVmPSIjcHJvcGVydHlfdW5pdF9jYXJvdXNlbF81ZTg0YTZhMTVjMDgzIiBkYXRhLXNsaWRlPSJuZXh0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZGVtby1pY29uIGljb24tcmlnaHQtb3Blbi1iaWciPjwvaT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgICA8L2Rpdj48ZGl2IGNsYXNzPSJ0YWctd3JhcHBlciI+PGRpdiBjbGFzcz0ic3RhdHVzLXdyYXBwZXIiPjxkaXYgY2xhc3M9ImFjdGlvbl90YWdfd3JhcHBlciBWRU5EVSAiPlZFTkRVPC9kaXY+PGRpdiBjbGFzcz0icmliYm9uLWluc2lkZSBWRU5EVSI+VkVORFU8L2Rpdj48L2Rpdj48L2Rpdj48L2Rpdj4KCiAgICAgICAgICAgIDxoND48YSBocmVmPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vZXN0YXRlX3Byb3BlcnR5LzItcGllY2VzLTI0LyI+CiAgICAgICAgICAgICAgICAyIFBJRUNFUyAgICAgICAgICAgICAgICA8L2E+IAogICAgICAgICAgICA8L2g0PiAKICAgICAgICAgICAgCiAgICAgICAgICAgIDxkaXYgY2xhc3M9Imxpc3RpbmdfdW5pdF9wcmljZV93cmFwcGVyIj48c3BhbiBjbGFzcz0icHJpY2VfbGFiZWwiPk5vdXMgY29uc3VsdGVyPC9zcGFuPjwvZGl2PiAgICAgICAgCiAgICAgICAgCiAgICAgICAgCiAgICAgICAgICAgCiAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJsaXN0aW5nX2RldGFpbHMgdGhlX2dyaWRfdmlldyI+CiAgICAgICAgICAgICAgICAgICAgVkEyMDIwLUtNSSAmIzgyMTE7IFBBUklTIDExw6htZSAmIzgyMTE7IEVYQ0xVU0lWSVTDiSBLTUkgJiM4MjExOyBQQVJNRU5USUVSICYjODIxMTsgcnVlIEplYW4gUGllcnJlIFRpbWJhdWQuIEEgcHJveGltIDxhIGhyZWY9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS9lc3RhdGVfcHJvcGVydHkvMi1waWVjZXMtMjQvIiBjbGFzcz0idW5pdF9tb3JlX3giPltwbHVzXTwvYT4gICAgICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ibGlzdGluZ19kZXRhaWxzIHRoZV9saXN0X3ZpZXciPgogICAgICAgICAgICAgICAgICAgIFZBMjAyMC1LTUkgJiM4MjExOyBQQVJJUyAxMcOobWUgJiM4MjExOyBFWENMVVNJVklUw4kgS01JICYjODIxMTsgUEFSTUVOVElFUiAmIzgyMTE7IHJ1ZSBKZWFuIFBpZXJyZSBUaW1iYXVkLiBBIHByb3hpbSA8YSBocmVmPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vZXN0YXRlX3Byb3BlcnR5LzItcGllY2VzLTI0LyIgY2xhc3M9InVuaXRfbW9yZV94Ij5bcGx1c108L2E+ICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAKCgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9wZXJ0eV9saXN0aW5nX2RldGFpbHMiPgogICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJpbmZvcm9vbSI+MTwvc3Bhbj48c3BhbiBjbGFzcz0iaW5mb2JhdGgiPjE8L3NwYW4+IDxzcGFuIGNsYXNzPSJpbmZvc2l6ZSI+MzksMDAgbTxzdXA+Mjwvc3VwPjwvc3Bhbj48YSBocmVmPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vZXN0YXRlX3Byb3BlcnR5LzItcGllY2VzLTI0LyIgY2xhc3M9InVuaXRfZGV0YWlsc194Ij5pbmZvIGNvbXBsw6h0ZTwvYT4gICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgCiAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb3BlcnR5X2xvY2F0aW9uIj4KICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb3BlcnR5X2FnZW50X3dyYXBwZXIiPgogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9wZXJ0eV9hZ2VudF9pbWFnZSIgc3R5bGU9ImJhY2tncm91bmQtaW1hZ2U6dXJsKCdodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vd3AtY29udGVudC91cGxvYWRzLzIwMTkvMDYvUHlyw6luw6llcy00LTEyMHgxMjAuanBnJykiPjwvZGl2PiAKICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvcGVydHlfYWdlbnRfaW1hZ2Vfc2lnbiI+PGkgY2xhc3M9ImZhIGZhLXVzZXItY2lyY2xlLW8iIGFyaWEtaGlkZGVuPSJ0cnVlIj48L2k+PC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS9lc3RhdGVfYWdlbnQva21pLXB5cmVuZWVzLyI+S01JIFBZUsOJTsOJRVM8L2E+ICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Imxpc3RpbmdfYWN0aW9ucyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJzaGFyZV91bml0Ij4KICAgICAgICA8YSBocmVmPSJodHRwczovL3d3dy5mYWNlYm9vay5jb20vc2hhcmVyLnBocD91PWh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS9lc3RhdGVfcHJvcGVydHkvMi1waWVjZXMtMjQvJmFtcDt0PTIrUElFQ0VTIiB0YXJnZXQ9Il9ibGFuayIgY2xhc3M9InNvY2lhbF9mYWNlYm9vayI+PC9hPgogICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vdHdpdHRlci5jb20vaG9tZT9zdGF0dXM9MitQSUVDRVNodHRwcyUzQSUyRiUyRnd3dy5jYWJpbmV0LWttaS5jb20lMkZlc3RhdGVfcHJvcGVydHklMkYyLXBpZWNlcy0yNCUyRiIgY2xhc3M9InNvY2lhbF90d2VldCIgdGFyZ2V0PSJfYmxhbmsiPjwvYT4KICAgICAgICA8YSBocmVmPSJodHRwczovL3BpbnRlcmVzdC5jb20vcGluL2NyZWF0ZS9idXR0b24vP3VybD1odHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vZXN0YXRlX3Byb3BlcnR5LzItcGllY2VzLTI0LyZhbXA7bWVkaWE9aHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL3dwLWNvbnRlbnQvdXBsb2Fkcy8yMDIwLzAyLzE1NzU0NjE0ODFfVkEyMDIwXzZfbC5qcGcmYW1wO2Rlc2NyaXB0aW9uPTIrUElFQ0VTIiB0YXJnZXQ9Il9ibGFuayIgY2xhc3M9InNvY2lhbF9waW50ZXJlc3QiPjwvYT4KICAgICAgICA8YSBocmVmPSJtYWlsdG86ZW1haWxAZW1haWwuY29tP2h0dHA6Ly9zdWJqZWN0PTIrUElFQ0VTJiMwMzg7Ym9keT1odHRwcyUzQSUyRiUyRnd3dy5jYWJpbmV0LWttaS5jb20lMkZlc3RhdGVfcHJvcGVydHklMkYyLXBpZWNlcy0yNCUyRiIgZGF0YS1hY3Rpb249InNoYXJlIGVtYWlsIiAgY2xhc3M9InNvY2lhbF9lbWFpbCI+PC9hPgoKICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ic2hhcmVfbGlzdCIgIGRhdGEtb3JpZ2luYWwtdGl0bGU9InBhcnRhZ2VyIiA+PC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJpY29uLWZhdiBpY29uLWZhdi1vZmYiIGRhdGEtb3JpZ2luYWwtdGl0bGU9ImFqb3V0ZXIgYXV4IEZhdm9yaXMiIGRhdGEtcG9zdGlkPSIyMjQ2MiI+PC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJjb21wYXJlLWFjdGlvbiIgZGF0YS1vcmlnaW5hbC10aXRsZT0iY29tcGFyZXIiIGRhdGEtcGltYWdlPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vd3AtY29udGVudC91cGxvYWRzLzIwMjAvMDIvMTU3NTQ2MTQ4MV9WQTIwMjBfNl9sLTE0M3g4My5qcGciIGRhdGEtcGlkPSIyMjQ2MiI+PC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+ICAgICAgICA8L2Rpdj4gICAgICAgICAgICAgCiAgICA8L2Rpdj4gIAoKCgo8ZGl2IGNsYXNzPSJjb2wtbWQtNCBoYXNfcHJvcF9zbGlkZXIgIGxpc3Rpbmdfd3JhcHBlciIgZGF0YS1vcmc9IjQiIGRhdGEtbGlzdGlkPSIyMjQ1MCIgPiAKICAgIDxkaXYgY2xhc3M9InByb3BlcnR5X2xpc3RpbmcgICAiIGRhdGEtbGluaz0iIj4KICAgICAgICAKICAgICAgICA8ZGl2IGNsYXNzPSJsaXN0aW5nLXVuaXQtaW1nLXdyYXBwZXIiPjxkaXYgY2xhc3M9InByb3BfbmV3X2RldGFpbHMiPjxkaXYgY2xhc3M9InByb3BfbmV3X2RldGFpbHNfYmFjayI+PC9kaXY+PGRpdiBjbGFzcz0icHJvcGVydHlfbWVkaWEiPjxpIGNsYXNzPSJmYSBmYS1jYW1lcmEiIGFyaWEtaGlkZGVuPSJ0cnVlIj48L2k+IDExCiAgICAgICAgICAgICAgICA8L2Rpdj48ZGl2IGNsYXNzPSJwcm9wZXJ0eV9sb2NhdGlvbl9pbWFnZSI+IAogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9wZXJ0eV9tYXJrZXIiPjwvc3Bhbj48YSBocmVmPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vcHJvcGVydHlfY2l0eS83NTAyMC8iPjc1MDIwPC9hPiwgPGEgaHJlZj0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL3Byb3BlcnR5X2NpdHkvcGFyaXMtMi8iPlBhcmlzPC9hPjwvZGl2PjwvZGl2PgogICAgICAgICAgICAgICAgICAgIDxkaXYgaWQ9InByb3BlcnR5X3VuaXRfY2Fyb3VzZWxfNWU4NGE2YTE1ZmZkZCIgY2xhc3M9ImNhcm91c2VsIHByb3BlcnR5X3VuaXRfY2Fyb3VzZWwgc2xpZGUgIiBkYXRhLXJpZGU9ImNhcm91c2VsIiBkYXRhLWludGVydmFsPSJmYWxzZSI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNhcm91c2VsLWlubmVyIj4gICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Iml0ZW0gYWN0aXZlIj4gICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL2VzdGF0ZV9wcm9wZXJ0eS9hcHBhcnRlbWVudC1hLXZlbmRyZS1wYXJpcy03LyI+PGltZyB3aWR0aD0iNTI1IiBoZWlnaHQ9IjMyOCIgc3JjPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vd3AtY29udGVudC91cGxvYWRzLzIwMjAvMDIvMTU3MzY0NDk5MF9WQTIwMDZfNF9sLTUyNXgzMjguanBnIiBjbGFzcz0ibGF6eWxvYWQgaW1nLXJlc3BvbnNpdmUgd3AtcG9zdC1pbWFnZSIgYWx0PSIiIGRhdGEtb3JpZ2luYWw9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS93cC1jb250ZW50L3VwbG9hZHMvMjAyMC8wMi8xNTczNjQ0OTkwX1ZBMjAwNl80X2wtNTI1eDMyOC5qcGciIC8+PC9hPiAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Iml0ZW0gbGF6eS1sb2FkLWl0ZW0iPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS9lc3RhdGVfcHJvcGVydHkvYXBwYXJ0ZW1lbnQtYS12ZW5kcmUtcGFyaXMtNy8iPjxpbWcgIGRhdGEtbGF6eS1sb2FkLXNyYz0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL3dwLWNvbnRlbnQvdXBsb2Fkcy8yMDIwLzAyLzE1NzM2NDQ5NTlfVkEyMDA2XzJfbC01MjV4MzI4LmpwZyIgYWx0PSJBcHBhcnRlbWVudCDDoCB2ZW5kcmUgUGFyaXMiIGNsYXNzPSJpbWctcmVzcG9uc2l2ZSIgLz48L2E+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj48ZGl2IGNsYXNzPSJpdGVtIGxhenktbG9hZC1pdGVtIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vZXN0YXRlX3Byb3BlcnR5L2FwcGFydGVtZW50LWEtdmVuZHJlLXBhcmlzLTcvIj48aW1nICBkYXRhLWxhenktbG9hZC1zcmM9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS93cC1jb250ZW50L3VwbG9hZHMvMjAyMC8wMi8xNTczNjQ0OTc4X1ZBMjAwNl8zX2wtNTI1eDMyOC5qcGciIGFsdD0iQXBwYXJ0ZW1lbnQgw6AgdmVuZHJlIFBhcmlzIiBjbGFzcz0iaW1nLXJlc3BvbnNpdmUiIC8+PC9hPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+PGRpdiBjbGFzcz0iaXRlbSBsYXp5LWxvYWQtaXRlbSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL2VzdGF0ZV9wcm9wZXJ0eS9hcHBhcnRlbWVudC1hLXZlbmRyZS1wYXJpcy03LyI+PGltZyAgZGF0YS1sYXp5LWxvYWQtc3JjPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vd3AtY29udGVudC91cGxvYWRzLzIwMjAvMDIvMTU3MzY0NDk1NV9WQTIwMDZfMV9sLTUyNXgzMjguanBnIiBhbHQ9IkFwcGFydGVtZW50IMOgIHZlbmRyZSBQYXJpcyIgY2xhc3M9ImltZy1yZXNwb25zaXZlIiAvPjwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PjxkaXYgY2xhc3M9Iml0ZW0gbGF6eS1sb2FkLWl0ZW0iPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS9lc3RhdGVfcHJvcGVydHkvYXBwYXJ0ZW1lbnQtYS12ZW5kcmUtcGFyaXMtNy8iPjxpbWcgIGRhdGEtbGF6eS1sb2FkLXNyYz0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL3dwLWNvbnRlbnQvdXBsb2Fkcy8yMDIwLzAyLzE1NzM2NDUwMjNfVkEyMDA2XzZfbC01MjV4MzI4LmpwZyIgYWx0PSJBcHBhcnRlbWVudCDDoCB2ZW5kcmUgUGFyaXMiIGNsYXNzPSJpbWctcmVzcG9uc2l2ZSIgLz48L2E+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj48ZGl2IGNsYXNzPSJpdGVtIGxhenktbG9hZC1pdGVtIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vZXN0YXRlX3Byb3BlcnR5L2FwcGFydGVtZW50LWEtdmVuZHJlLXBhcmlzLTcvIj48aW1nICBkYXRhLWxhenktbG9hZC1zcmM9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS93cC1jb250ZW50L3VwbG9hZHMvMjAyMC8wMi8xNTczNjQ1MDM4X1ZBMjAwNl83X2wtNTI1eDMyOC5qcGciIGFsdD0iQXBwYXJ0ZW1lbnQgw6AgdmVuZHJlIFBhcmlzIiBjbGFzcz0iaW1nLXJlc3BvbnNpdmUiIC8+PC9hPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+PGRpdiBjbGFzcz0iaXRlbSBsYXp5LWxvYWQtaXRlbSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL2VzdGF0ZV9wcm9wZXJ0eS9hcHBhcnRlbWVudC1hLXZlbmRyZS1wYXJpcy03LyI+PGltZyAgZGF0YS1sYXp5LWxvYWQtc3JjPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vd3AtY29udGVudC91cGxvYWRzLzIwMjAvMDIvMTU3MzY0NTA1N19WQTIwMDZfOF9sLTUyNXgzMjguanBnIiBhbHQ9IkFwcGFydGVtZW50IMOgIHZlbmRyZSBQYXJpcyIgY2xhc3M9ImltZy1yZXNwb25zaXZlIiAvPjwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PjxkaXYgY2xhc3M9Iml0ZW0gbGF6eS1sb2FkLWl0ZW0iPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS9lc3RhdGVfcHJvcGVydHkvYXBwYXJ0ZW1lbnQtYS12ZW5kcmUtcGFyaXMtNy8iPjxpbWcgIGRhdGEtbGF6eS1sb2FkLXNyYz0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL3dwLWNvbnRlbnQvdXBsb2Fkcy8yMDIwLzAyLzE1NzM2NDUwODJfVkEyMDA2XzEwX2wtNTI1eDMyOC5qcGciIGFsdD0iQXBwYXJ0ZW1lbnQgw6AgdmVuZHJlIFBhcmlzIiBjbGFzcz0iaW1nLXJlc3BvbnNpdmUiIC8+PC9hPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+PGRpdiBjbGFzcz0iaXRlbSBsYXp5LWxvYWQtaXRlbSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL2VzdGF0ZV9wcm9wZXJ0eS9hcHBhcnRlbWVudC1hLXZlbmRyZS1wYXJpcy03LyI+PGltZyAgZGF0YS1sYXp5LWxvYWQtc3JjPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vd3AtY29udGVudC91cGxvYWRzLzIwMjAvMDIvMTU3MzY0NTEwMl9WQTIwMDZfMTJfbC01MjV4MzI4LmpwZyIgYWx0PSJBcHBhcnRlbWVudCDDoCB2ZW5kcmUgUGFyaXMiIGNsYXNzPSJpbWctcmVzcG9uc2l2ZSIgLz48L2E+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj48ZGl2IGNsYXNzPSJpdGVtIGxhenktbG9hZC1pdGVtIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vZXN0YXRlX3Byb3BlcnR5L2FwcGFydGVtZW50LWEtdmVuZHJlLXBhcmlzLTcvIj48aW1nICBkYXRhLWxhenktbG9hZC1zcmM9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS93cC1jb250ZW50L3VwbG9hZHMvMjAyMC8wMi8xNTczNjQ1MDcyX1ZBMjAwNl85X2wtNTI1eDMyOC5qcGciIGFsdD0iQXBwYXJ0ZW1lbnQgw6AgdmVuZHJlIFBhcmlzIiBjbGFzcz0iaW1nLXJlc3BvbnNpdmUiIC8+PC9hPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+PGRpdiBjbGFzcz0iaXRlbSBsYXp5LWxvYWQtaXRlbSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL2VzdGF0ZV9wcm9wZXJ0eS9hcHBhcnRlbWVudC1hLXZlbmRyZS1wYXJpcy03LyI+PGltZyAgZGF0YS1sYXp5LWxvYWQtc3JjPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vd3AtY29udGVudC91cGxvYWRzLzIwMjAvMDIvMTU3MzY0NTA5MF9WQTIwMDZfMTFfbC01MjV4MzI4LmpwZyIgYWx0PSJBcHBhcnRlbWVudCDDoCB2ZW5kcmUgUGFyaXMiIGNsYXNzPSJpbWctcmVzcG9uc2l2ZSIgLz48L2E+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vZXN0YXRlX3Byb3BlcnR5L2FwcGFydGVtZW50LWEtdmVuZHJlLXBhcmlzLTcvIj4gPC9hPjxhIGNsYXNzPSJsZWZ0ICBjYXJvdXNlbC1jb250cm9sIiBocmVmPSIjcHJvcGVydHlfdW5pdF9jYXJvdXNlbF81ZTg0YTZhMTVmZmRkIiBkYXRhLXNsaWRlPSJwcmV2Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZGVtby1pY29uIGljb24tbGVmdC1vcGVuLWJpZyI+PC9pPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgoKICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGNsYXNzPSJyaWdodCAgY2Fyb3VzZWwtY29udHJvbCIgaHJlZj0iI3Byb3BlcnR5X3VuaXRfY2Fyb3VzZWxfNWU4NGE2YTE1ZmZkZCIgZGF0YS1zbGlkZT0ibmV4dCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9ImRlbW8taWNvbiBpY29uLXJpZ2h0LW9wZW4tYmlnIj48L2k+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgICAgPC9kaXY+PGRpdiBjbGFzcz0idGFnLXdyYXBwZXIiPjxkaXYgY2xhc3M9InN0YXR1cy13cmFwcGVyIj48ZGl2IGNsYXNzPSJhY3Rpb25fdGFnX3dyYXBwZXIgVkVORFUgIj5WRU5EVTwvZGl2PjxkaXYgY2xhc3M9InJpYmJvbi1pbnNpZGUgVkVORFUiPlZFTkRVPC9kaXY+PC9kaXY+PC9kaXY+PC9kaXY+CgogICAgICAgICAgICA8aDQ+PGEgaHJlZj0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL2VzdGF0ZV9wcm9wZXJ0eS9hcHBhcnRlbWVudC1hLXZlbmRyZS1wYXJpcy03LyI+CiAgICAgICAgICAgICAgICBBcHBhcnRlbWVudCDDoCB2ZW5kcmUgUGFyaXMgICAgICAgICAgICAgICAgPC9hPiAKICAgICAgICAgICAgPC9oND4gCiAgICAgICAgICAgIAogICAgICAgICAgICA8ZGl2IGNsYXNzPSJsaXN0aW5nX3VuaXRfcHJpY2Vfd3JhcHBlciI+PHNwYW4gY2xhc3M9InByaWNlX2xhYmVsIj5Ob3VzIGNvbnN1bHRlcjwvc3Bhbj48L2Rpdj4gICAgICAgIAogICAgICAgIAogICAgICAgIAogICAgICAgICAgIAogICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ibGlzdGluZ19kZXRhaWxzIHRoZV9ncmlkX3ZpZXciPgogICAgICAgICAgICAgICAgICAgIFZBMjAwNi1LTUkgJiM4MjExOyBQQVJJUyAyMCAmIzgyMTE7IEVYQ0xVU0lWSVTDiSAmIzgyMTE7IE1hcmFpY2hlcnMgJiM4MjExOyAyIFBJw4hDRVMgZGUgMzNtMiArIFRFUlJBU1NFIGRlIDEzbTIuIERhbiA8YSBocmVmPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vZXN0YXRlX3Byb3BlcnR5L2FwcGFydGVtZW50LWEtdmVuZHJlLXBhcmlzLTcvIiBjbGFzcz0idW5pdF9tb3JlX3giPltwbHVzXTwvYT4gICAgICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ibGlzdGluZ19kZXRhaWxzIHRoZV9saXN0X3ZpZXciPgogICAgICAgICAgICAgICAgICAgIFZBMjAwNi1LTUkgJiM4MjExOyBQQVJJUyAyMCAmIzgyMTE7IEVYQ0xVU0lWSVTDiSAmIzgyMTE7IE1hcmFpY2hlcnMgJiM4MjExOyAyIFBJw4hDRVMgZGUgMzNtMiArIFRFUlJBU1NFIGRlIDEzbTIuIERhbiA8YSBocmVmPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vZXN0YXRlX3Byb3BlcnR5L2FwcGFydGVtZW50LWEtdmVuZHJlLXBhcmlzLTcvIiBjbGFzcz0idW5pdF9tb3JlX3giPltwbHVzXTwvYT4gICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgIAoKCiAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb3BlcnR5X2xpc3RpbmdfZGV0YWlscyI+CiAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImluZm9yb29tIj4xPC9zcGFuPjxzcGFuIGNsYXNzPSJpbmZvYmF0aCI+MTwvc3Bhbj4gPHNwYW4gY2xhc3M9ImluZm9zaXplIj4zMywwMCBtPHN1cD4yPC9zdXA+PC9zcGFuPjxhIGhyZWY9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS9lc3RhdGVfcHJvcGVydHkvYXBwYXJ0ZW1lbnQtYS12ZW5kcmUtcGFyaXMtNy8iIGNsYXNzPSJ1bml0X2RldGFpbHNfeCI+aW5mbyBjb21wbMOodGU8L2E+ICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgIAogICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9wZXJ0eV9sb2NhdGlvbiI+CiAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9wZXJ0eV9hZ2VudF93cmFwcGVyIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvcGVydHlfYWdlbnRfaW1hZ2UiIHN0eWxlPSJiYWNrZ3JvdW5kLWltYWdlOnVybCgnaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL3dwLWNvbnRlbnQvdXBsb2Fkcy8yMDE5LzA2L1B5csOpbsOpZXMtNC0xMjB4MTIwLmpwZycpIj48L2Rpdj4gCiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb3BlcnR5X2FnZW50X2ltYWdlX3NpZ24iPjxpIGNsYXNzPSJmYSBmYS11c2VyLWNpcmNsZS1vIiBhcmlhLWhpZGRlbj0idHJ1ZSI+PC9pPjwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vZXN0YXRlX2FnZW50L2ttaS1weXJlbmVlcy8iPktNSSBQWVLDiU7DiUVTPC9hPiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJsaXN0aW5nX2FjdGlvbnMiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ic2hhcmVfdW5pdCI+CiAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly93d3cuZmFjZWJvb2suY29tL3NoYXJlci5waHA/dT1odHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vZXN0YXRlX3Byb3BlcnR5L2FwcGFydGVtZW50LWEtdmVuZHJlLXBhcmlzLTcvJmFtcDt0PUFwcGFydGVtZW50KyVDMyVBMCt2ZW5kcmUrUGFyaXMiIHRhcmdldD0iX2JsYW5rIiBjbGFzcz0ic29jaWFsX2ZhY2Vib29rIj48L2E+CiAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly90d2l0dGVyLmNvbS9ob21lP3N0YXR1cz1BcHBhcnRlbWVudCslQzMlQTArdmVuZHJlK1BhcmlzaHR0cHMlM0ElMkYlMkZ3d3cuY2FiaW5ldC1rbWkuY29tJTJGZXN0YXRlX3Byb3BlcnR5JTJGYXBwYXJ0ZW1lbnQtYS12ZW5kcmUtcGFyaXMtNyUyRiIgY2xhc3M9InNvY2lhbF90d2VldCIgdGFyZ2V0PSJfYmxhbmsiPjwvYT4KICAgICAgICA8YSBocmVmPSJodHRwczovL3BpbnRlcmVzdC5jb20vcGluL2NyZWF0ZS9idXR0b24vP3VybD1odHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vZXN0YXRlX3Byb3BlcnR5L2FwcGFydGVtZW50LWEtdmVuZHJlLXBhcmlzLTcvJmFtcDttZWRpYT1odHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vd3AtY29udGVudC91cGxvYWRzLzIwMjAvMDIvMTU3MzY0NDk5MF9WQTIwMDZfNF9sLmpwZyZhbXA7ZGVzY3JpcHRpb249QXBwYXJ0ZW1lbnQrJUMzJUEwK3ZlbmRyZStQYXJpcyIgdGFyZ2V0PSJfYmxhbmsiIGNsYXNzPSJzb2NpYWxfcGludGVyZXN0Ij48L2E+CiAgICAgICAgPGEgaHJlZj0ibWFpbHRvOmVtYWlsQGVtYWlsLmNvbT9odHRwOi8vc3ViamVjdD1BcHBhcnRlbWVudCslQzMlQTArdmVuZHJlK1BhcmlzJiMwMzg7Ym9keT1odHRwcyUzQSUyRiUyRnd3dy5jYWJpbmV0LWttaS5jb20lMkZlc3RhdGVfcHJvcGVydHklMkZhcHBhcnRlbWVudC1hLXZlbmRyZS1wYXJpcy03JTJGIiBkYXRhLWFjdGlvbj0ic2hhcmUgZW1haWwiICBjbGFzcz0ic29jaWFsX2VtYWlsIj48L2E+CgogICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJzaGFyZV9saXN0IiAgZGF0YS1vcmlnaW5hbC10aXRsZT0icGFydGFnZXIiID48L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9Imljb24tZmF2IGljb24tZmF2LW9mZiIgZGF0YS1vcmlnaW5hbC10aXRsZT0iYWpvdXRlciBhdXggRmF2b3JpcyIgZGF0YS1wb3N0aWQ9IjIyNDUwIj48L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImNvbXBhcmUtYWN0aW9uIiBkYXRhLW9yaWdpbmFsLXRpdGxlPSJjb21wYXJlciIgZGF0YS1waW1hZ2U9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS93cC1jb250ZW50L3VwbG9hZHMvMjAyMC8wMi8xNTczNjQ0OTkwX1ZBMjAwNl80X2wtMTQzeDgzLmpwZyIgZGF0YS1waWQ9IjIyNDUwIj48L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4gICAgICAgIDwvZGl2PiAgICAgICAgICAgICAKICAgIDwvZGl2PiAgCgoKCjxkaXYgY2xhc3M9ImNvbC1tZC00IGhhc19wcm9wX3NsaWRlciAgbGlzdGluZ193cmFwcGVyIiBkYXRhLW9yZz0iNCIgZGF0YS1saXN0aWQ9IjIyNDM3IiA+IAogICAgPGRpdiBjbGFzcz0icHJvcGVydHlfbGlzdGluZyAgICIgZGF0YS1saW5rPSIiPgogICAgICAgIAogICAgICAgIDxkaXYgY2xhc3M9Imxpc3RpbmctdW5pdC1pbWctd3JhcHBlciI+PGRpdiBjbGFzcz0icHJvcF9uZXdfZGV0YWlscyI+PGRpdiBjbGFzcz0icHJvcF9uZXdfZGV0YWlsc19iYWNrIj48L2Rpdj48ZGl2IGNsYXNzPSJwcm9wZXJ0eV9tZWRpYSI+PGkgY2xhc3M9ImZhIGZhLWNhbWVyYSIgYXJpYS1oaWRkZW49InRydWUiPjwvaT4gMTIKICAgICAgICAgICAgICAgIDwvZGl2PjxkaXYgY2xhc3M9InByb3BlcnR5X2xvY2F0aW9uX2ltYWdlIj4gCiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb3BlcnR5X21hcmtlciI+PC9zcGFuPjxhIGhyZWY9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS9wcm9wZXJ0eV9jaXR5Lzc1MDExLyI+NzUwMTE8L2E+LCA8YSBocmVmPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vcHJvcGVydHlfY2l0eS9wYXJpcy0yLyI+UGFyaXM8L2E+PC9kaXY+PC9kaXY+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBpZD0icHJvcGVydHlfdW5pdF9jYXJvdXNlbF81ZTg0YTZhMTY0NDY4IiBjbGFzcz0iY2Fyb3VzZWwgcHJvcGVydHlfdW5pdF9jYXJvdXNlbCBzbGlkZSAiIGRhdGEtcmlkZT0iY2Fyb3VzZWwiIGRhdGEtaW50ZXJ2YWw9ImZhbHNlIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY2Fyb3VzZWwtaW5uZXIiPiAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iaXRlbSBhY3RpdmUiPiAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vZXN0YXRlX3Byb3BlcnR5LzMtcGllY2VzLTEwLyI+PGltZyB3aWR0aD0iNTI1IiBoZWlnaHQ9IjMyOCIgc3JjPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vd3AtY29udGVudC91cGxvYWRzLzIwMjAvMDIvMTU3MzU2ODk3OF9WQTIwMDRfOF9sLTUyNXgzMjguanBnIiBjbGFzcz0ibGF6eWxvYWQgaW1nLXJlc3BvbnNpdmUgd3AtcG9zdC1pbWFnZSIgYWx0PSIiIGRhdGEtb3JpZ2luYWw9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS93cC1jb250ZW50L3VwbG9hZHMvMjAyMC8wMi8xNTczNTY4OTc4X1ZBMjAwNF84X2wtNTI1eDMyOC5qcGciIC8+PC9hPiAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Iml0ZW0gbGF6eS1sb2FkLWl0ZW0iPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS9lc3RhdGVfcHJvcGVydHkvMy1waWVjZXMtMTAvIj48aW1nICBkYXRhLWxhenktbG9hZC1zcmM9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS93cC1jb250ZW50L3VwbG9hZHMvMjAyMC8wMi8xNTczNTY4OTY3X1ZBMjAwNF8zX2wtNTI1eDMyOC5qcGciIGFsdD0iMyBQSUVDRVMiIGNsYXNzPSJpbWctcmVzcG9uc2l2ZSIgLz48L2E+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj48ZGl2IGNsYXNzPSJpdGVtIGxhenktbG9hZC1pdGVtIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vZXN0YXRlX3Byb3BlcnR5LzMtcGllY2VzLTEwLyI+PGltZyAgZGF0YS1sYXp5LWxvYWQtc3JjPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vd3AtY29udGVudC91cGxvYWRzLzIwMjAvMDIvMTU3MzU2ODk2NF9WQTIwMDRfMl9sLTUyNXgzMjguanBnIiBhbHQ9IjMgUElFQ0VTIiBjbGFzcz0iaW1nLXJlc3BvbnNpdmUiIC8+PC9hPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+PGRpdiBjbGFzcz0iaXRlbSBsYXp5LWxvYWQtaXRlbSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL2VzdGF0ZV9wcm9wZXJ0eS8zLXBpZWNlcy0xMC8iPjxpbWcgIGRhdGEtbGF6eS1sb2FkLXNyYz0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL3dwLWNvbnRlbnQvdXBsb2Fkcy8yMDIwLzAyLzE1NzM1Njg5ODdfVkEyMDA0XzEyX2wtNTI1eDMyOC5qcGciIGFsdD0iMyBQSUVDRVMiIGNsYXNzPSJpbWctcmVzcG9uc2l2ZSIgLz48L2E+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj48ZGl2IGNsYXNzPSJpdGVtIGxhenktbG9hZC1pdGVtIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vZXN0YXRlX3Byb3BlcnR5LzMtcGllY2VzLTEwLyI+PGltZyAgZGF0YS1sYXp5LWxvYWQtc3JjPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vd3AtY29udGVudC91cGxvYWRzLzIwMjAvMDIvMTU3MzU2ODk3MV9WQTIwMDRfNV9sLTUyNXgzMjguanBnIiBhbHQ9IjMgUElFQ0VTIiBjbGFzcz0iaW1nLXJlc3BvbnNpdmUiIC8+PC9hPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+PGRpdiBjbGFzcz0iaXRlbSBsYXp5LWxvYWQtaXRlbSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL2VzdGF0ZV9wcm9wZXJ0eS8zLXBpZWNlcy0xMC8iPjxpbWcgIGRhdGEtbGF6eS1sb2FkLXNyYz0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL3dwLWNvbnRlbnQvdXBsb2Fkcy8yMDIwLzAyLzE1NzM1Njg5NzZfVkEyMDA0XzdfbC01MjV4MzI4LmpwZyIgYWx0PSIzIFBJRUNFUyIgY2xhc3M9ImltZy1yZXNwb25zaXZlIiAvPjwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PjxkaXYgY2xhc3M9Iml0ZW0gbGF6eS1sb2FkLWl0ZW0iPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS9lc3RhdGVfcHJvcGVydHkvMy1waWVjZXMtMTAvIj48aW1nICBkYXRhLWxhenktbG9hZC1zcmM9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS93cC1jb250ZW50L3VwbG9hZHMvMjAyMC8wMi8xNTczNTY4OTY5X1ZBMjAwNF80X2wtNTI1eDMyOC5qcGciIGFsdD0iMyBQSUVDRVMiIGNsYXNzPSJpbWctcmVzcG9uc2l2ZSIgLz48L2E+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj48ZGl2IGNsYXNzPSJpdGVtIGxhenktbG9hZC1pdGVtIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vZXN0YXRlX3Byb3BlcnR5LzMtcGllY2VzLTEwLyI+PGltZyAgZGF0YS1sYXp5LWxvYWQtc3JjPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vd3AtY29udGVudC91cGxvYWRzLzIwMjAvMDIvMTU3MzU2ODk2Ml9WQTIwMDRfMV9sLTUyNXgzMjguanBnIiBhbHQ9IjMgUElFQ0VTIiBjbGFzcz0iaW1nLXJlc3BvbnNpdmUiIC8+PC9hPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+PGRpdiBjbGFzcz0iaXRlbSBsYXp5LWxvYWQtaXRlbSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL2VzdGF0ZV9wcm9wZXJ0eS8zLXBpZWNlcy0xMC8iPjxpbWcgIGRhdGEtbGF6eS1sb2FkLXNyYz0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL3dwLWNvbnRlbnQvdXBsb2Fkcy8yMDIwLzAyLzE1NzM1Njg5NzRfVkEyMDA0XzZfbC01MjV4MzI4LmpwZyIgYWx0PSIzIFBJRUNFUyIgY2xhc3M9ImltZy1yZXNwb25zaXZlIiAvPjwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PjxkaXYgY2xhc3M9Iml0ZW0gbGF6eS1sb2FkLWl0ZW0iPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS9lc3RhdGVfcHJvcGVydHkvMy1waWVjZXMtMTAvIj48aW1nICBkYXRhLWxhenktbG9hZC1zcmM9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS93cC1jb250ZW50L3VwbG9hZHMvMjAyMC8wMi8xNTczNTY4OTgwX1ZBMjAwNF85X2wtNTI1eDMyOC5qcGciIGFsdD0iMyBQSUVDRVMiIGNsYXNzPSJpbWctcmVzcG9uc2l2ZSIgLz48L2E+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj48ZGl2IGNsYXNzPSJpdGVtIGxhenktbG9hZC1pdGVtIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vZXN0YXRlX3Byb3BlcnR5LzMtcGllY2VzLTEwLyI+PGltZyAgZGF0YS1sYXp5LWxvYWQtc3JjPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vd3AtY29udGVudC91cGxvYWRzLzIwMjAvMDIvMTU3MzU2ODk4Ml9WQTIwMDRfMTBfbC01MjV4MzI4LmpwZyIgYWx0PSIzIFBJRUNFUyIgY2xhc3M9ImltZy1yZXNwb25zaXZlIiAvPjwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PjxkaXYgY2xhc3M9Iml0ZW0gbGF6eS1sb2FkLWl0ZW0iPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS9lc3RhdGVfcHJvcGVydHkvMy1waWVjZXMtMTAvIj48aW1nICBkYXRhLWxhenktbG9hZC1zcmM9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS93cC1jb250ZW50L3VwbG9hZHMvMjAyMC8wMi8xNTczNTY4OTg0X1ZBMjAwNF8xMV9sLTUyNXgzMjguanBnIiBhbHQ9IjMgUElFQ0VTIiBjbGFzcz0iaW1nLXJlc3BvbnNpdmUiIC8+PC9hPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL2VzdGF0ZV9wcm9wZXJ0eS8zLXBpZWNlcy0xMC8iPiA8L2E+PGEgY2xhc3M9ImxlZnQgIGNhcm91c2VsLWNvbnRyb2wiIGhyZWY9IiNwcm9wZXJ0eV91bml0X2Nhcm91c2VsXzVlODRhNmExNjQ0NjgiIGRhdGEtc2xpZGU9InByZXYiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJkZW1vLWljb24gaWNvbi1sZWZ0LW9wZW4tYmlnIj48L2k+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2E+CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgY2xhc3M9InJpZ2h0ICBjYXJvdXNlbC1jb250cm9sIiBocmVmPSIjcHJvcGVydHlfdW5pdF9jYXJvdXNlbF81ZTg0YTZhMTY0NDY4IiBkYXRhLXNsaWRlPSJuZXh0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZGVtby1pY29uIGljb24tcmlnaHQtb3Blbi1iaWciPjwvaT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgICA8L2Rpdj48ZGl2IGNsYXNzPSJ0YWctd3JhcHBlciI+PGRpdiBjbGFzcz0ic3RhdHVzLXdyYXBwZXIiPjxkaXYgY2xhc3M9ImFjdGlvbl90YWdfd3JhcHBlciBWRU5EVSAiPlZFTkRVPC9kaXY+PGRpdiBjbGFzcz0icmliYm9uLWluc2lkZSBWRU5EVSI+VkVORFU8L2Rpdj48L2Rpdj48L2Rpdj48L2Rpdj4KCiAgICAgICAgICAgIDxoND48YSBocmVmPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vZXN0YXRlX3Byb3BlcnR5LzMtcGllY2VzLTEwLyI+CiAgICAgICAgICAgICAgICAzIFBJRUNFUyAgICAgICAgICAgICAgICA8L2E+IAogICAgICAgICAgICA8L2g0PiAKICAgICAgICAgICAgCiAgICAgICAgICAgIDxkaXYgY2xhc3M9Imxpc3RpbmdfdW5pdF9wcmljZV93cmFwcGVyIj48c3BhbiBjbGFzcz0icHJpY2VfbGFiZWwiPk5vdXMgY29uc3VsdGVyPC9zcGFuPjwvZGl2PiAgICAgICAgCiAgICAgICAgCiAgICAgICAgCiAgICAgICAgICAgCiAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJsaXN0aW5nX2RldGFpbHMgdGhlX2dyaWRfdmlldyI+CiAgICAgICAgICAgICAgICAgICAgVkEyMDA0LUtNSSAmIzgyMTE7IFBhcmlzIDExw6htZSAmIzgyMTE7IEZJTExFUyBEVSBDQUxWQUlSRSAmIzgyMTE7IFNpdHXDqSDDoCBkZXV4IHBhcyBkZSBsYSBydWUgZGUgQnJldGFnbmUgZXQgZGUgc2VzICA8YSBocmVmPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vZXN0YXRlX3Byb3BlcnR5LzMtcGllY2VzLTEwLyIgY2xhc3M9InVuaXRfbW9yZV94Ij5bcGx1c108L2E+ICAgICAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Imxpc3RpbmdfZGV0YWlscyB0aGVfbGlzdF92aWV3Ij4KICAgICAgICAgICAgICAgICAgICBWQTIwMDQtS01JICYjODIxMTsgUGFyaXMgMTHDqG1lICYjODIxMTsgRklMTEVTIERVIENBTFZBSVJFICYjODIxMTsgU2l0dcOpIMOgIGRldXggcGFzIGRlIGxhIHJ1ZSBkZSBCcmV0YWduZSBldCBkZSBzZXMgIDxhIGhyZWY9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS9lc3RhdGVfcHJvcGVydHkvMy1waWVjZXMtMTAvIiBjbGFzcz0idW5pdF9tb3JlX3giPltwbHVzXTwvYT4gICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgIAoKCiAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb3BlcnR5X2xpc3RpbmdfZGV0YWlscyI+CiAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImluZm9yb29tIj4yPC9zcGFuPjxzcGFuIGNsYXNzPSJpbmZvYmF0aCI+MTwvc3Bhbj4gPHNwYW4gY2xhc3M9ImluZm9zaXplIj41OSwwMCBtPHN1cD4yPC9zdXA+PC9zcGFuPjxhIGhyZWY9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS9lc3RhdGVfcHJvcGVydHkvMy1waWVjZXMtMTAvIiBjbGFzcz0idW5pdF9kZXRhaWxzX3giPmluZm8gY29tcGzDqHRlPC9hPiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAKICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvcGVydHlfbG9jYXRpb24iPgogICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvcGVydHlfYWdlbnRfd3JhcHBlciI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb3BlcnR5X2FnZW50X2ltYWdlIiBzdHlsZT0iYmFja2dyb3VuZC1pbWFnZTp1cmwoJ2h0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS93cC1jb250ZW50L3VwbG9hZHMvMjAxOS8wNi9QeXLDqW7DqWVzLTQtMTIweDEyMC5qcGcnKSI+PC9kaXY+IAogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9wZXJ0eV9hZ2VudF9pbWFnZV9zaWduIj48aSBjbGFzcz0iZmEgZmEtdXNlci1jaXJjbGUtbyIgYXJpYS1oaWRkZW49InRydWUiPjwvaT48L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL2VzdGF0ZV9hZ2VudC9rbWktcHlyZW5lZXMvIj5LTUkgUFlSw4lOw4lFUzwvYT4gICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ibGlzdGluZ19hY3Rpb25zIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InNoYXJlX3VuaXQiPgogICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vd3d3LmZhY2Vib29rLmNvbS9zaGFyZXIucGhwP3U9aHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL2VzdGF0ZV9wcm9wZXJ0eS8zLXBpZWNlcy0xMC8mYW1wO3Q9MytQSUVDRVMiIHRhcmdldD0iX2JsYW5rIiBjbGFzcz0ic29jaWFsX2ZhY2Vib29rIj48L2E+CiAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly90d2l0dGVyLmNvbS9ob21lP3N0YXR1cz0zK1BJRUNFU2h0dHBzJTNBJTJGJTJGd3d3LmNhYmluZXQta21pLmNvbSUyRmVzdGF0ZV9wcm9wZXJ0eSUyRjMtcGllY2VzLTEwJTJGIiBjbGFzcz0ic29jaWFsX3R3ZWV0IiB0YXJnZXQ9Il9ibGFuayI+PC9hPgogICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vcGludGVyZXN0LmNvbS9waW4vY3JlYXRlL2J1dHRvbi8/dXJsPWh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS9lc3RhdGVfcHJvcGVydHkvMy1waWVjZXMtMTAvJmFtcDttZWRpYT1odHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vd3AtY29udGVudC91cGxvYWRzLzIwMjAvMDIvMTU3MzU2ODk3OF9WQTIwMDRfOF9sLmpwZyZhbXA7ZGVzY3JpcHRpb249MytQSUVDRVMiIHRhcmdldD0iX2JsYW5rIiBjbGFzcz0ic29jaWFsX3BpbnRlcmVzdCI+PC9hPgogICAgICAgIDxhIGhyZWY9Im1haWx0bzplbWFpbEBlbWFpbC5jb20/aHR0cDovL3N1YmplY3Q9MytQSUVDRVMmIzAzODtib2R5PWh0dHBzJTNBJTJGJTJGd3d3LmNhYmluZXQta21pLmNvbSUyRmVzdGF0ZV9wcm9wZXJ0eSUyRjMtcGllY2VzLTEwJTJGIiBkYXRhLWFjdGlvbj0ic2hhcmUgZW1haWwiICBjbGFzcz0ic29jaWFsX2VtYWlsIj48L2E+CgogICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJzaGFyZV9saXN0IiAgZGF0YS1vcmlnaW5hbC10aXRsZT0icGFydGFnZXIiID48L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9Imljb24tZmF2IGljb24tZmF2LW9mZiIgZGF0YS1vcmlnaW5hbC10aXRsZT0iYWpvdXRlciBhdXggRmF2b3JpcyIgZGF0YS1wb3N0aWQ9IjIyNDM3Ij48L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImNvbXBhcmUtYWN0aW9uIiBkYXRhLW9yaWdpbmFsLXRpdGxlPSJjb21wYXJlciIgZGF0YS1waW1hZ2U9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS93cC1jb250ZW50L3VwbG9hZHMvMjAyMC8wMi8xNTczNTY4OTc4X1ZBMjAwNF84X2wtMTQzeDgzLmpwZyIgZGF0YS1waWQ9IjIyNDM3Ij48L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4gICAgICAgIDwvZGl2PiAgICAgICAgICAgICAKICAgIDwvZGl2PiAgCgoKCjxkaXYgY2xhc3M9ImNvbC1tZC00IGhhc19wcm9wX3NsaWRlciAgbGlzdGluZ193cmFwcGVyIiBkYXRhLW9yZz0iNCIgZGF0YS1saXN0aWQ9IjIyNDI5IiA+IAogICAgPGRpdiBjbGFzcz0icHJvcGVydHlfbGlzdGluZyAgICIgZGF0YS1saW5rPSIiPgogICAgICAgIAogICAgICAgIDxkaXYgY2xhc3M9Imxpc3RpbmctdW5pdC1pbWctd3JhcHBlciI+PGRpdiBjbGFzcz0icHJvcF9uZXdfZGV0YWlscyI+PGRpdiBjbGFzcz0icHJvcF9uZXdfZGV0YWlsc19iYWNrIj48L2Rpdj48ZGl2IGNsYXNzPSJwcm9wZXJ0eV9tZWRpYSI+PGkgY2xhc3M9ImZhIGZhLWNhbWVyYSIgYXJpYS1oaWRkZW49InRydWUiPjwvaT4gNwogICAgICAgICAgICAgICAgPC9kaXY+PGRpdiBjbGFzcz0icHJvcGVydHlfbG9jYXRpb25faW1hZ2UiPiAKICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvcGVydHlfbWFya2VyIj48L3NwYW4+PGEgaHJlZj0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL3Byb3BlcnR5X2NpdHkvNzUwMTEvIj43NTAxMTwvYT4sIDxhIGhyZWY9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS9wcm9wZXJ0eV9jaXR5L3BhcmlzLTIvIj5QYXJpczwvYT48L2Rpdj48L2Rpdj4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGlkPSJwcm9wZXJ0eV91bml0X2Nhcm91c2VsXzVlODRhNmExNjk1NjUiIGNsYXNzPSJjYXJvdXNlbCBwcm9wZXJ0eV91bml0X2Nhcm91c2VsIHNsaWRlICIgZGF0YS1yaWRlPSJjYXJvdXNlbCIgZGF0YS1pbnRlcnZhbD0iZmFsc2UiPgogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjYXJvdXNlbC1pbm5lciI+ICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJpdGVtIGFjdGl2ZSI+ICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS9lc3RhdGVfcHJvcGVydHkvc3R1ZGlvLTExLyI+PGltZyB3aWR0aD0iNTI1IiBoZWlnaHQ9IjMyOCIgc3JjPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vd3AtY29udGVudC91cGxvYWRzLzIwMjAvMDIvMTU3MzU1NTQ2N19WQTIwMDJfMV9sLTUyNXgzMjguanBnIiBjbGFzcz0ibGF6eWxvYWQgaW1nLXJlc3BvbnNpdmUgd3AtcG9zdC1pbWFnZSIgYWx0PSIiIGRhdGEtb3JpZ2luYWw9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS93cC1jb250ZW50L3VwbG9hZHMvMjAyMC8wMi8xNTczNTU1NDY3X1ZBMjAwMl8xX2wtNTI1eDMyOC5qcGciIC8+PC9hPiAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Iml0ZW0gbGF6eS1sb2FkLWl0ZW0iPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS9lc3RhdGVfcHJvcGVydHkvc3R1ZGlvLTExLyI+PGltZyAgZGF0YS1sYXp5LWxvYWQtc3JjPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vd3AtY29udGVudC91cGxvYWRzLzIwMjAvMDIvMTU3MzU1NTQ3MF9WQTIwMDJfMTBfbC01MjV4MzI4LmpwZyIgYWx0PSJTVFVESU8iIGNsYXNzPSJpbWctcmVzcG9uc2l2ZSIgLz48L2E+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj48ZGl2IGNsYXNzPSJpdGVtIGxhenktbG9hZC1pdGVtIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vZXN0YXRlX3Byb3BlcnR5L3N0dWRpby0xMS8iPjxpbWcgIGRhdGEtbGF6eS1sb2FkLXNyYz0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL3dwLWNvbnRlbnQvdXBsb2Fkcy8yMDIwLzAyLzE1NzM1NTU0NjhfVkEyMDAyXzRfbC01MjV4MzI4LmpwZyIgYWx0PSJTVFVESU8iIGNsYXNzPSJpbWctcmVzcG9uc2l2ZSIgLz48L2E+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj48ZGl2IGNsYXNzPSJpdGVtIGxhenktbG9hZC1pdGVtIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vZXN0YXRlX3Byb3BlcnR5L3N0dWRpby0xMS8iPjxpbWcgIGRhdGEtbGF6eS1sb2FkLXNyYz0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL3dwLWNvbnRlbnQvdXBsb2Fkcy8yMDIwLzAyLzE1NzM1NTU0NjhfVkEyMDAyXzJfbC01MjV4MzI4LmpwZyIgYWx0PSJTVFVESU8iIGNsYXNzPSJpbWctcmVzcG9uc2l2ZSIgLz48L2E+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj48ZGl2IGNsYXNzPSJpdGVtIGxhenktbG9hZC1pdGVtIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vZXN0YXRlX3Byb3BlcnR5L3N0dWRpby0xMS8iPjxpbWcgIGRhdGEtbGF6eS1sb2FkLXNyYz0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL3dwLWNvbnRlbnQvdXBsb2Fkcy8yMDIwLzAyLzE1NzM1NTU0NzBfVkEyMDAyXzhfbC01MjV4MzI4LmpwZyIgYWx0PSJTVFVESU8iIGNsYXNzPSJpbWctcmVzcG9uc2l2ZSIgLz48L2E+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj48ZGl2IGNsYXNzPSJpdGVtIGxhenktbG9hZC1pdGVtIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vZXN0YXRlX3Byb3BlcnR5L3N0dWRpby0xMS8iPjxpbWcgIGRhdGEtbGF6eS1sb2FkLXNyYz0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL3dwLWNvbnRlbnQvdXBsb2Fkcy8yMDIwLzAyLzE1NzM1NTU0NjlfVkEyMDAyXzVfbC00NjZ4MzI4LmpwZyIgYWx0PSJTVFVESU8iIGNsYXNzPSJpbWctcmVzcG9uc2l2ZSIgLz48L2E+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj48ZGl2IGNsYXNzPSJpdGVtIGxhenktbG9hZC1pdGVtIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vZXN0YXRlX3Byb3BlcnR5L3N0dWRpby0xMS8iPjxpbWcgIGRhdGEtbGF6eS1sb2FkLXNyYz0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL3dwLWNvbnRlbnQvdXBsb2Fkcy8yMDIwLzAyLzE1NzM1NTU0NjlfVkEyMDAyXzZfbC01MjV4MzI4LmpwZyIgYWx0PSJTVFVESU8iIGNsYXNzPSJpbWctcmVzcG9uc2l2ZSIgLz48L2E+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vZXN0YXRlX3Byb3BlcnR5L3N0dWRpby0xMS8iPiA8L2E+PGEgY2xhc3M9ImxlZnQgIGNhcm91c2VsLWNvbnRyb2wiIGhyZWY9IiNwcm9wZXJ0eV91bml0X2Nhcm91c2VsXzVlODRhNmExNjk1NjUiIGRhdGEtc2xpZGU9InByZXYiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJkZW1vLWljb24gaWNvbi1sZWZ0LW9wZW4tYmlnIj48L2k+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2E+CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgY2xhc3M9InJpZ2h0ICBjYXJvdXNlbC1jb250cm9sIiBocmVmPSIjcHJvcGVydHlfdW5pdF9jYXJvdXNlbF81ZTg0YTZhMTY5NTY1IiBkYXRhLXNsaWRlPSJuZXh0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZGVtby1pY29uIGljb24tcmlnaHQtb3Blbi1iaWciPjwvaT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgICA8L2Rpdj48ZGl2IGNsYXNzPSJ0YWctd3JhcHBlciI+PGRpdiBjbGFzcz0ic3RhdHVzLXdyYXBwZXIiPjxkaXYgY2xhc3M9ImFjdGlvbl90YWdfd3JhcHBlciBWRU5EVSAiPlZFTkRVPC9kaXY+PGRpdiBjbGFzcz0icmliYm9uLWluc2lkZSBWRU5EVSI+VkVORFU8L2Rpdj48L2Rpdj48L2Rpdj48L2Rpdj4KCiAgICAgICAgICAgIDxoND48YSBocmVmPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vZXN0YXRlX3Byb3BlcnR5L3N0dWRpby0xMS8iPgogICAgICAgICAgICAgICAgU1RVRElPICAgICAgICAgICAgICAgIDwvYT4gCiAgICAgICAgICAgIDwvaDQ+IAogICAgICAgICAgICAKICAgICAgICAgICAgPGRpdiBjbGFzcz0ibGlzdGluZ191bml0X3ByaWNlX3dyYXBwZXIiPjxzcGFuIGNsYXNzPSJwcmljZV9sYWJlbCI+Tm91cyBjb25zdWx0ZXI8L3NwYW4+PC9kaXY+ICAgICAgICAKICAgICAgICAKICAgICAgICAKICAgICAgICAgICAKICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Imxpc3RpbmdfZGV0YWlscyB0aGVfZ3JpZF92aWV3Ij4KICAgICAgICAgICAgICAgICAgICBWQTIwMDItS01JICYjODIxMTsgUGFyaXMgMTHDqG1lICYjODIxMTsgT0JFUktBTVBGL0ZJTExFUyBEVSBDQUxWQUlSRSAmIzgyMTE7IFNpdHXDqSDDoCBwcm94aW1pdMOpIGltbcOpZGlhdGUgZGVzIGNvbW1lcmMgPGEgaHJlZj0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL2VzdGF0ZV9wcm9wZXJ0eS9zdHVkaW8tMTEvIiBjbGFzcz0idW5pdF9tb3JlX3giPltwbHVzXTwvYT4gICAgICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ibGlzdGluZ19kZXRhaWxzIHRoZV9saXN0X3ZpZXciPgogICAgICAgICAgICAgICAgICAgIFZBMjAwMi1LTUkgJiM4MjExOyBQYXJpcyAxMcOobWUgJiM4MjExOyBPQkVSS0FNUEYvRklMTEVTIERVIENBTFZBSVJFICYjODIxMTsgU2l0dcOpIMOgIHByb3hpbWl0w6kgaW1tw6lkaWF0ZSBkZXMgY29tbWVyYyA8YSBocmVmPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vZXN0YXRlX3Byb3BlcnR5L3N0dWRpby0xMS8iIGNsYXNzPSJ1bml0X21vcmVfeCI+W3BsdXNdPC9hPiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgCgoKICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvcGVydHlfbGlzdGluZ19kZXRhaWxzIj4KICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJpbmZvYmF0aCI+MTwvc3Bhbj4gPHNwYW4gY2xhc3M9ImluZm9zaXplIj4yMiwwMCBtPHN1cD4yPC9zdXA+PC9zcGFuPjxhIGhyZWY9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS9lc3RhdGVfcHJvcGVydHkvc3R1ZGlvLTExLyIgY2xhc3M9InVuaXRfZGV0YWlsc194Ij5pbmZvIGNvbXBsw6h0ZTwvYT4gICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgCiAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb3BlcnR5X2xvY2F0aW9uIj4KICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb3BlcnR5X2FnZW50X3dyYXBwZXIiPgogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9wZXJ0eV9hZ2VudF9pbWFnZSIgc3R5bGU9ImJhY2tncm91bmQtaW1hZ2U6dXJsKCdodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vd3AtY29udGVudC91cGxvYWRzLzIwMTkvMDYvUHlyw6luw6llcy00LTEyMHgxMjAuanBnJykiPjwvZGl2PiAKICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvcGVydHlfYWdlbnRfaW1hZ2Vfc2lnbiI+PGkgY2xhc3M9ImZhIGZhLXVzZXItY2lyY2xlLW8iIGFyaWEtaGlkZGVuPSJ0cnVlIj48L2k+PC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS9lc3RhdGVfYWdlbnQva21pLXB5cmVuZWVzLyI+S01JIFBZUsOJTsOJRVM8L2E+ICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Imxpc3RpbmdfYWN0aW9ucyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJzaGFyZV91bml0Ij4KICAgICAgICA8YSBocmVmPSJodHRwczovL3d3dy5mYWNlYm9vay5jb20vc2hhcmVyLnBocD91PWh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS9lc3RhdGVfcHJvcGVydHkvc3R1ZGlvLTExLyZhbXA7dD1TVFVESU8iIHRhcmdldD0iX2JsYW5rIiBjbGFzcz0ic29jaWFsX2ZhY2Vib29rIj48L2E+CiAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly90d2l0dGVyLmNvbS9ob21lP3N0YXR1cz1TVFVESU9odHRwcyUzQSUyRiUyRnd3dy5jYWJpbmV0LWttaS5jb20lMkZlc3RhdGVfcHJvcGVydHklMkZzdHVkaW8tMTElMkYiIGNsYXNzPSJzb2NpYWxfdHdlZXQiIHRhcmdldD0iX2JsYW5rIj48L2E+CiAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9waW50ZXJlc3QuY29tL3Bpbi9jcmVhdGUvYnV0dG9uLz91cmw9aHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL2VzdGF0ZV9wcm9wZXJ0eS9zdHVkaW8tMTEvJmFtcDttZWRpYT1odHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vd3AtY29udGVudC91cGxvYWRzLzIwMjAvMDIvMTU3MzU1NTQ2N19WQTIwMDJfMV9sLmpwZyZhbXA7ZGVzY3JpcHRpb249U1RVRElPIiB0YXJnZXQ9Il9ibGFuayIgY2xhc3M9InNvY2lhbF9waW50ZXJlc3QiPjwvYT4KICAgICAgICA8YSBocmVmPSJtYWlsdG86ZW1haWxAZW1haWwuY29tP2h0dHA6Ly9zdWJqZWN0PVNUVURJTyYjMDM4O2JvZHk9aHR0cHMlM0ElMkYlMkZ3d3cuY2FiaW5ldC1rbWkuY29tJTJGZXN0YXRlX3Byb3BlcnR5JTJGc3R1ZGlvLTExJTJGIiBkYXRhLWFjdGlvbj0ic2hhcmUgZW1haWwiICBjbGFzcz0ic29jaWFsX2VtYWlsIj48L2E+CgogICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJzaGFyZV9saXN0IiAgZGF0YS1vcmlnaW5hbC10aXRsZT0icGFydGFnZXIiID48L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9Imljb24tZmF2IGljb24tZmF2LW9mZiIgZGF0YS1vcmlnaW5hbC10aXRsZT0iYWpvdXRlciBhdXggRmF2b3JpcyIgZGF0YS1wb3N0aWQ9IjIyNDI5Ij48L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImNvbXBhcmUtYWN0aW9uIiBkYXRhLW9yaWdpbmFsLXRpdGxlPSJjb21wYXJlciIgZGF0YS1waW1hZ2U9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS93cC1jb250ZW50L3VwbG9hZHMvMjAyMC8wMi8xNTczNTU1NDY3X1ZBMjAwMl8xX2wtMTQzeDgzLmpwZyIgZGF0YS1waWQ9IjIyNDI5Ij48L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4gICAgICAgIDwvZGl2PiAgICAgICAgICAgICAKICAgIDwvZGl2PiAgCgoKCjxkaXYgY2xhc3M9ImNvbC1tZC00IGhhc19wcm9wX3NsaWRlciAgbGlzdGluZ193cmFwcGVyIiBkYXRhLW9yZz0iNCIgZGF0YS1saXN0aWQ9IjIyNDIzIiA+IAogICAgPGRpdiBjbGFzcz0icHJvcGVydHlfbGlzdGluZyAgICIgZGF0YS1saW5rPSIiPgogICAgICAgIAogICAgICAgIDxkaXYgY2xhc3M9Imxpc3RpbmctdW5pdC1pbWctd3JhcHBlciI+PGRpdiBjbGFzcz0icHJvcF9uZXdfZGV0YWlscyI+PGRpdiBjbGFzcz0icHJvcF9uZXdfZGV0YWlsc19iYWNrIj48L2Rpdj48ZGl2IGNsYXNzPSJwcm9wZXJ0eV9tZWRpYSI+PGkgY2xhc3M9ImZhIGZhLWNhbWVyYSIgYXJpYS1oaWRkZW49InRydWUiPjwvaT4gNQogICAgICAgICAgICAgICAgPC9kaXY+PGRpdiBjbGFzcz0icHJvcGVydHlfbG9jYXRpb25faW1hZ2UiPiAKICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvcGVydHlfbWFya2VyIj48L3NwYW4+PGEgaHJlZj0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL3Byb3BlcnR5X2NpdHkvNzUwMjAvIj43NTAyMDwvYT4sIDxhIGhyZWY9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS9wcm9wZXJ0eV9jaXR5L3BhcmlzLTIvIj5QYXJpczwvYT48L2Rpdj48L2Rpdj4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGlkPSJwcm9wZXJ0eV91bml0X2Nhcm91c2VsXzVlODRhNmExNmM3OWIiIGNsYXNzPSJjYXJvdXNlbCBwcm9wZXJ0eV91bml0X2Nhcm91c2VsIHNsaWRlICIgZGF0YS1yaWRlPSJjYXJvdXNlbCIgZGF0YS1pbnRlcnZhbD0iZmFsc2UiPgogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjYXJvdXNlbC1pbm5lciI+ICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJpdGVtIGFjdGl2ZSI+ICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS9lc3RhdGVfcHJvcGVydHkvMi1waWVjZXMtY2F2ZS0yNi8iPjxpbWcgd2lkdGg9IjUyNSIgaGVpZ2h0PSIzMjgiIHNyYz0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL3dwLWNvbnRlbnQvdXBsb2Fkcy8yMDIwLzAyLzE1NzMxNDI2NDFfVkExOTk4XzFfbC01MjV4MzI4LmpwZyIgY2xhc3M9Imxhenlsb2FkIGltZy1yZXNwb25zaXZlIHdwLXBvc3QtaW1hZ2UiIGFsdD0iIiBkYXRhLW9yaWdpbmFsPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vd3AtY29udGVudC91cGxvYWRzLzIwMjAvMDIvMTU3MzE0MjY0MV9WQTE5OThfMV9sLTUyNXgzMjguanBnIiAvPjwvYT4gICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJpdGVtIGxhenktbG9hZC1pdGVtIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vZXN0YXRlX3Byb3BlcnR5LzItcGllY2VzLWNhdmUtMjYvIj48aW1nICBkYXRhLWxhenktbG9hZC1zcmM9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS93cC1jb250ZW50L3VwbG9hZHMvMjAyMC8wMi8xNTczMTQyNjU5X1ZBMTk5OF8yX2wtNTI1eDMyOC5qcGciIGFsdD0iMiBwacOoY2VzICsgY2F2ZSIgY2xhc3M9ImltZy1yZXNwb25zaXZlIiAvPjwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PjxkaXYgY2xhc3M9Iml0ZW0gbGF6eS1sb2FkLWl0ZW0iPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS9lc3RhdGVfcHJvcGVydHkvMi1waWVjZXMtY2F2ZS0yNi8iPjxpbWcgIGRhdGEtbGF6eS1sb2FkLXNyYz0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL3dwLWNvbnRlbnQvdXBsb2Fkcy8yMDIwLzAyLzE1NzMxNDI2NjdfVkExOTk4XzNfbC01MjV4MzI4LmpwZyIgYWx0PSIyIHBpw6hjZXMgKyBjYXZlIiBjbGFzcz0iaW1nLXJlc3BvbnNpdmUiIC8+PC9hPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+PGRpdiBjbGFzcz0iaXRlbSBsYXp5LWxvYWQtaXRlbSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL2VzdGF0ZV9wcm9wZXJ0eS8yLXBpZWNlcy1jYXZlLTI2LyI+PGltZyAgZGF0YS1sYXp5LWxvYWQtc3JjPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vd3AtY29udGVudC91cGxvYWRzLzIwMjAvMDIvMTU3MzE0MjY5M19WQTE5OThfNF9sLTQ2NngzMjguanBnIiBhbHQ9IjIgcGnDqGNlcyArIGNhdmUiIGNsYXNzPSJpbWctcmVzcG9uc2l2ZSIgLz48L2E+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj48ZGl2IGNsYXNzPSJpdGVtIGxhenktbG9hZC1pdGVtIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vZXN0YXRlX3Byb3BlcnR5LzItcGllY2VzLWNhdmUtMjYvIj48aW1nICBkYXRhLWxhenktbG9hZC1zcmM9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS93cC1jb250ZW50L3VwbG9hZHMvMjAyMC8wMi8xNTczMTQyNzAzX1ZBMTk5OF81X2wtNTI1eDMyOC5qcGciIGFsdD0iMiBwacOoY2VzICsgY2F2ZSIgY2xhc3M9ImltZy1yZXNwb25zaXZlIiAvPjwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS9lc3RhdGVfcHJvcGVydHkvMi1waWVjZXMtY2F2ZS0yNi8iPiA8L2E+PGEgY2xhc3M9ImxlZnQgIGNhcm91c2VsLWNvbnRyb2wiIGhyZWY9IiNwcm9wZXJ0eV91bml0X2Nhcm91c2VsXzVlODRhNmExNmM3OWIiIGRhdGEtc2xpZGU9InByZXYiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJkZW1vLWljb24gaWNvbi1sZWZ0LW9wZW4tYmlnIj48L2k+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2E+CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgY2xhc3M9InJpZ2h0ICBjYXJvdXNlbC1jb250cm9sIiBocmVmPSIjcHJvcGVydHlfdW5pdF9jYXJvdXNlbF81ZTg0YTZhMTZjNzliIiBkYXRhLXNsaWRlPSJuZXh0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZGVtby1pY29uIGljb24tcmlnaHQtb3Blbi1iaWciPjwvaT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgICA8L2Rpdj48ZGl2IGNsYXNzPSJ0YWctd3JhcHBlciI+PGRpdiBjbGFzcz0ic3RhdHVzLXdyYXBwZXIiPjxkaXYgY2xhc3M9ImFjdGlvbl90YWdfd3JhcHBlciBWRU5EVSAiPlZFTkRVPC9kaXY+PGRpdiBjbGFzcz0icmliYm9uLWluc2lkZSBWRU5EVSI+VkVORFU8L2Rpdj48L2Rpdj48L2Rpdj48L2Rpdj4KCiAgICAgICAgICAgIDxoND48YSBocmVmPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vZXN0YXRlX3Byb3BlcnR5LzItcGllY2VzLWNhdmUtMjYvIj4KICAgICAgICAgICAgICAgIDIgcGnDqGNlcyArIGNhdmUgICAgICAgICAgICAgICAgPC9hPiAKICAgICAgICAgICAgPC9oND4gCiAgICAgICAgICAgIAogICAgICAgICAgICA8ZGl2IGNsYXNzPSJsaXN0aW5nX3VuaXRfcHJpY2Vfd3JhcHBlciI+PHNwYW4gY2xhc3M9InByaWNlX2xhYmVsIj5Ob3VzIGNvbnN1bHRlcjwvc3Bhbj48L2Rpdj4gICAgICAgIAogICAgICAgIAogICAgICAgIAogICAgICAgICAgIAogICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ibGlzdGluZ19kZXRhaWxzIHRoZV9ncmlkX3ZpZXciPgogICAgICAgICAgICAgICAgICAgIFZBMTk5OC1LTUkgJiM4MjExOyBQYXJpcyAyMCA6IEVYQ0xVU0lWSVTDiSBNQVJBw45DSEVSUyAmIzgyMTE7IFByb2NoZSBkZXMgY29tbWVyY2VzIGV0IGRlcyB0cmFuc3BvcnRzLCBhdSA0w6htZSDDqXRhZ2UgIDxhIGhyZWY9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS9lc3RhdGVfcHJvcGVydHkvMi1waWVjZXMtY2F2ZS0yNi8iIGNsYXNzPSJ1bml0X21vcmVfeCI+W3BsdXNdPC9hPiAgICAgICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJsaXN0aW5nX2RldGFpbHMgdGhlX2xpc3RfdmlldyI+CiAgICAgICAgICAgICAgICAgICAgVkExOTk4LUtNSSAmIzgyMTE7IFBhcmlzIDIwIDogRVhDTFVTSVZJVMOJIE1BUkHDjkNIRVJTICYjODIxMTsgUHJvY2hlIGRlcyBjb21tZXJjZXMgZXQgZGVzIHRyYW5zcG9ydHMsIGF1IDTDqG1lIMOpdGFnZSAgPGEgaHJlZj0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL2VzdGF0ZV9wcm9wZXJ0eS8yLXBpZWNlcy1jYXZlLTI2LyIgY2xhc3M9InVuaXRfbW9yZV94Ij5bcGx1c108L2E+ICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAKCgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9wZXJ0eV9saXN0aW5nX2RldGFpbHMiPgogICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJpbmZvcm9vbSI+MTwvc3Bhbj48c3BhbiBjbGFzcz0iaW5mb2JhdGgiPjE8L3NwYW4+IDxzcGFuIGNsYXNzPSJpbmZvc2l6ZSI+MjksMDAgbTxzdXA+Mjwvc3VwPjwvc3Bhbj48YSBocmVmPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vZXN0YXRlX3Byb3BlcnR5LzItcGllY2VzLWNhdmUtMjYvIiBjbGFzcz0idW5pdF9kZXRhaWxzX3giPmluZm8gY29tcGzDqHRlPC9hPiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAKICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvcGVydHlfbG9jYXRpb24iPgogICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvcGVydHlfYWdlbnRfd3JhcHBlciI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb3BlcnR5X2FnZW50X2ltYWdlIiBzdHlsZT0iYmFja2dyb3VuZC1pbWFnZTp1cmwoJ2h0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS93cC1jb250ZW50L3VwbG9hZHMvMjAxOS8wNi9QeXLDqW7DqWVzLTQtMTIweDEyMC5qcGcnKSI+PC9kaXY+IAogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9wZXJ0eV9hZ2VudF9pbWFnZV9zaWduIj48aSBjbGFzcz0iZmEgZmEtdXNlci1jaXJjbGUtbyIgYXJpYS1oaWRkZW49InRydWUiPjwvaT48L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL2VzdGF0ZV9hZ2VudC9rbWktcHlyZW5lZXMvIj5LTUkgUFlSw4lOw4lFUzwvYT4gICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ibGlzdGluZ19hY3Rpb25zIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InNoYXJlX3VuaXQiPgogICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vd3d3LmZhY2Vib29rLmNvbS9zaGFyZXIucGhwP3U9aHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL2VzdGF0ZV9wcm9wZXJ0eS8yLXBpZWNlcy1jYXZlLTI2LyZhbXA7dD0yK3BpJUMzJUE4Y2VzKyUyQitjYXZlIiB0YXJnZXQ9Il9ibGFuayIgY2xhc3M9InNvY2lhbF9mYWNlYm9vayI+PC9hPgogICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vdHdpdHRlci5jb20vaG9tZT9zdGF0dXM9MitwaSVDMyVBOGNlcyslMkIrY2F2ZWh0dHBzJTNBJTJGJTJGd3d3LmNhYmluZXQta21pLmNvbSUyRmVzdGF0ZV9wcm9wZXJ0eSUyRjItcGllY2VzLWNhdmUtMjYlMkYiIGNsYXNzPSJzb2NpYWxfdHdlZXQiIHRhcmdldD0iX2JsYW5rIj48L2E+CiAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9waW50ZXJlc3QuY29tL3Bpbi9jcmVhdGUvYnV0dG9uLz91cmw9aHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL2VzdGF0ZV9wcm9wZXJ0eS8yLXBpZWNlcy1jYXZlLTI2LyZhbXA7bWVkaWE9aHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL3dwLWNvbnRlbnQvdXBsb2Fkcy8yMDIwLzAyLzE1NzMxNDI2NDFfVkExOTk4XzFfbC5qcGcmYW1wO2Rlc2NyaXB0aW9uPTIrcGklQzMlQThjZXMrJTJCK2NhdmUiIHRhcmdldD0iX2JsYW5rIiBjbGFzcz0ic29jaWFsX3BpbnRlcmVzdCI+PC9hPgogICAgICAgIDxhIGhyZWY9Im1haWx0bzplbWFpbEBlbWFpbC5jb20/aHR0cDovL3N1YmplY3Q9MitwaSVDMyVBOGNlcyslMkIrY2F2ZSYjMDM4O2JvZHk9aHR0cHMlM0ElMkYlMkZ3d3cuY2FiaW5ldC1rbWkuY29tJTJGZXN0YXRlX3Byb3BlcnR5JTJGMi1waWVjZXMtY2F2ZS0yNiUyRiIgZGF0YS1hY3Rpb249InNoYXJlIGVtYWlsIiAgY2xhc3M9InNvY2lhbF9lbWFpbCI+PC9hPgoKICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ic2hhcmVfbGlzdCIgIGRhdGEtb3JpZ2luYWwtdGl0bGU9InBhcnRhZ2VyIiA+PC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJpY29uLWZhdiBpY29uLWZhdi1vZmYiIGRhdGEtb3JpZ2luYWwtdGl0bGU9ImFqb3V0ZXIgYXV4IEZhdm9yaXMiIGRhdGEtcG9zdGlkPSIyMjQyMyI+PC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJjb21wYXJlLWFjdGlvbiIgZGF0YS1vcmlnaW5hbC10aXRsZT0iY29tcGFyZXIiIGRhdGEtcGltYWdlPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vd3AtY29udGVudC91cGxvYWRzLzIwMjAvMDIvMTU3MzE0MjY0MV9WQTE5OThfMV9sLTE0M3g4My5qcGciIGRhdGEtcGlkPSIyMjQyMyI+PC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+ICAgICAgICA8L2Rpdj4gICAgICAgICAgICAgCiAgICA8L2Rpdj4gIAoKCgo8ZGl2IGNsYXNzPSJjb2wtbWQtNCBoYXNfcHJvcF9zbGlkZXIgIGxpc3Rpbmdfd3JhcHBlciIgZGF0YS1vcmc9IjQiIGRhdGEtbGlzdGlkPSIyMjQxNSIgPiAKICAgIDxkaXYgY2xhc3M9InByb3BlcnR5X2xpc3RpbmcgICAiIGRhdGEtbGluaz0iIj4KICAgICAgICAKICAgICAgICA8ZGl2IGNsYXNzPSJsaXN0aW5nLXVuaXQtaW1nLXdyYXBwZXIiPjxkaXYgY2xhc3M9InByb3BfbmV3X2RldGFpbHMiPjxkaXYgY2xhc3M9InByb3BfbmV3X2RldGFpbHNfYmFjayI+PC9kaXY+PGRpdiBjbGFzcz0icHJvcGVydHlfbWVkaWEiPjxpIGNsYXNzPSJmYSBmYS1jYW1lcmEiIGFyaWEtaGlkZGVuPSJ0cnVlIj48L2k+IDcKICAgICAgICAgICAgICAgIDwvZGl2PjxkaXYgY2xhc3M9InByb3BlcnR5X2xvY2F0aW9uX2ltYWdlIj4gCiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb3BlcnR5X21hcmtlciI+PC9zcGFuPjxhIGhyZWY9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS9wcm9wZXJ0eV9jaXR5Lzc1MDEwLyI+NzUwMTA8L2E+LCA8YSBocmVmPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vcHJvcGVydHlfY2l0eS9wYXJpcy0yLyI+UGFyaXM8L2E+PC9kaXY+PC9kaXY+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBpZD0icHJvcGVydHlfdW5pdF9jYXJvdXNlbF81ZTg0YTZhMTZmOWNmIiBjbGFzcz0iY2Fyb3VzZWwgcHJvcGVydHlfdW5pdF9jYXJvdXNlbCBzbGlkZSAiIGRhdGEtcmlkZT0iY2Fyb3VzZWwiIGRhdGEtaW50ZXJ2YWw9ImZhbHNlIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY2Fyb3VzZWwtaW5uZXIiPiAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iaXRlbSBhY3RpdmUiPiAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vZXN0YXRlX3Byb3BlcnR5LzItMy1waWVjZXMtcmVmYWl0LWEtbmV1Zi8iPjxpbWcgd2lkdGg9IjUyNSIgaGVpZ2h0PSIzMjgiIHNyYz0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL3dwLWNvbnRlbnQvdXBsb2Fkcy8yMDIwLzAyLzE1NzI1NDE5MTFfVkExOTg0XzFfbC01MjV4MzI4LmpwZyIgY2xhc3M9Imxhenlsb2FkIGltZy1yZXNwb25zaXZlIHdwLXBvc3QtaW1hZ2UiIGFsdD0iIiBkYXRhLW9yaWdpbmFsPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vd3AtY29udGVudC91cGxvYWRzLzIwMjAvMDIvMTU3MjU0MTkxMV9WQTE5ODRfMV9sLTUyNXgzMjguanBnIiAvPjwvYT4gICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJpdGVtIGxhenktbG9hZC1pdGVtIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vZXN0YXRlX3Byb3BlcnR5LzItMy1waWVjZXMtcmVmYWl0LWEtbmV1Zi8iPjxpbWcgIGRhdGEtbGF6eS1sb2FkLXNyYz0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL3dwLWNvbnRlbnQvdXBsb2Fkcy8yMDIwLzAyLzE1NzI1NDQwOTdfVkExOTg0XzdfbC01MjV4MzI4LmpwZyIgYWx0PSIyLzMgUElFQ0VTIFJFRkFJVCBBIE5FVUYiIGNsYXNzPSJpbWctcmVzcG9uc2l2ZSIgLz48L2E+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj48ZGl2IGNsYXNzPSJpdGVtIGxhenktbG9hZC1pdGVtIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vZXN0YXRlX3Byb3BlcnR5LzItMy1waWVjZXMtcmVmYWl0LWEtbmV1Zi8iPjxpbWcgIGRhdGEtbGF6eS1sb2FkLXNyYz0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL3dwLWNvbnRlbnQvdXBsb2Fkcy8yMDIwLzAyLzE1NzI1NDE5MjdfVkExOTg0XzJfbC01MjV4MzI4LmpwZyIgYWx0PSIyLzMgUElFQ0VTIFJFRkFJVCBBIE5FVUYiIGNsYXNzPSJpbWctcmVzcG9uc2l2ZSIgLz48L2E+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj48ZGl2IGNsYXNzPSJpdGVtIGxhenktbG9hZC1pdGVtIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vZXN0YXRlX3Byb3BlcnR5LzItMy1waWVjZXMtcmVmYWl0LWEtbmV1Zi8iPjxpbWcgIGRhdGEtbGF6eS1sb2FkLXNyYz0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL3dwLWNvbnRlbnQvdXBsb2Fkcy8yMDIwLzAyLzE1NzI1NDE5NDlfVkExOTg0XzNfbC01MjV4MzI4LmpwZyIgYWx0PSIyLzMgUElFQ0VTIFJFRkFJVCBBIE5FVUYiIGNsYXNzPSJpbWctcmVzcG9uc2l2ZSIgLz48L2E+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj48ZGl2IGNsYXNzPSJpdGVtIGxhenktbG9hZC1pdGVtIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vZXN0YXRlX3Byb3BlcnR5LzItMy1waWVjZXMtcmVmYWl0LWEtbmV1Zi8iPjxpbWcgIGRhdGEtbGF6eS1sb2FkLXNyYz0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL3dwLWNvbnRlbnQvdXBsb2Fkcy8yMDIwLzAyLzE1NzI1NDE5NzBfVkExOTg0XzRfbC01MjV4MzI4LmpwZyIgYWx0PSIyLzMgUElFQ0VTIFJFRkFJVCBBIE5FVUYiIGNsYXNzPSJpbWctcmVzcG9uc2l2ZSIgLz48L2E+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj48ZGl2IGNsYXNzPSJpdGVtIGxhenktbG9hZC1pdGVtIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vZXN0YXRlX3Byb3BlcnR5LzItMy1waWVjZXMtcmVmYWl0LWEtbmV1Zi8iPjxpbWcgIGRhdGEtbGF6eS1sb2FkLXNyYz0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL3dwLWNvbnRlbnQvdXBsb2Fkcy8yMDIwLzAyLzE1NzI1NDE5ODFfVkExOTg0XzVfbC01MjV4MzI4LmpwZyIgYWx0PSIyLzMgUElFQ0VTIFJFRkFJVCBBIE5FVUYiIGNsYXNzPSJpbWctcmVzcG9uc2l2ZSIgLz48L2E+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj48ZGl2IGNsYXNzPSJpdGVtIGxhenktbG9hZC1pdGVtIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vZXN0YXRlX3Byb3BlcnR5LzItMy1waWVjZXMtcmVmYWl0LWEtbmV1Zi8iPjxpbWcgIGRhdGEtbGF6eS1sb2FkLXNyYz0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL3dwLWNvbnRlbnQvdXBsb2Fkcy8yMDIwLzAyLzE1NzI1NDIwMDNfVkExOTg0XzZfbC01MjV4MzI4LmpwZyIgYWx0PSIyLzMgUElFQ0VTIFJFRkFJVCBBIE5FVUYiIGNsYXNzPSJpbWctcmVzcG9uc2l2ZSIgLz48L2E+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vZXN0YXRlX3Byb3BlcnR5LzItMy1waWVjZXMtcmVmYWl0LWEtbmV1Zi8iPiA8L2E+PGEgY2xhc3M9ImxlZnQgIGNhcm91c2VsLWNvbnRyb2wiIGhyZWY9IiNwcm9wZXJ0eV91bml0X2Nhcm91c2VsXzVlODRhNmExNmY5Y2YiIGRhdGEtc2xpZGU9InByZXYiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJkZW1vLWljb24gaWNvbi1sZWZ0LW9wZW4tYmlnIj48L2k+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2E+CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgY2xhc3M9InJpZ2h0ICBjYXJvdXNlbC1jb250cm9sIiBocmVmPSIjcHJvcGVydHlfdW5pdF9jYXJvdXNlbF81ZTg0YTZhMTZmOWNmIiBkYXRhLXNsaWRlPSJuZXh0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZGVtby1pY29uIGljb24tcmlnaHQtb3Blbi1iaWciPjwvaT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgICA8L2Rpdj48ZGl2IGNsYXNzPSJ0YWctd3JhcHBlciI+PGRpdiBjbGFzcz0ic3RhdHVzLXdyYXBwZXIiPjxkaXYgY2xhc3M9ImFjdGlvbl90YWdfd3JhcHBlciBWRU5EVSAiPlZFTkRVPC9kaXY+PGRpdiBjbGFzcz0icmliYm9uLWluc2lkZSBWRU5EVSI+VkVORFU8L2Rpdj48L2Rpdj48L2Rpdj48L2Rpdj4KCiAgICAgICAgICAgIDxoND48YSBocmVmPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vZXN0YXRlX3Byb3BlcnR5LzItMy1waWVjZXMtcmVmYWl0LWEtbmV1Zi8iPgogICAgICAgICAgICAgICAgMi8zIFBJRUNFUyBSRUZBSVQgQSBORVVGICAgICAgICAgICAgICAgIDwvYT4gCiAgICAgICAgICAgIDwvaDQ+IAogICAgICAgICAgICAKICAgICAgICAgICAgPGRpdiBjbGFzcz0ibGlzdGluZ191bml0X3ByaWNlX3dyYXBwZXIiPjxzcGFuIGNsYXNzPSJwcmljZV9sYWJlbCI+Tm91cyBjb25zdWx0ZXI8L3NwYW4+PC9kaXY+ICAgICAgICAKICAgICAgICAKICAgICAgICAKICAgICAgICAgICAKICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Imxpc3RpbmdfZGV0YWlscyB0aGVfZ3JpZF92aWV3Ij4KICAgICAgICAgICAgICAgICAgICBWQTE5ODQtS01JICYjODIxMTsgUEFSSVMgMTDDqG1lICYjODIxMTsgR0FSRSBERSBMJiM4MjE3O0VTVC4gQSBwcm94aW1pdMOpIGRlcyBjb21tZXJjZXMgZXQgZGVzIHRyYW5zcG9ydHMsIEtNSSB2b3VzIGkgPGEgaHJlZj0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL2VzdGF0ZV9wcm9wZXJ0eS8yLTMtcGllY2VzLXJlZmFpdC1hLW5ldWYvIiBjbGFzcz0idW5pdF9tb3JlX3giPltwbHVzXTwvYT4gICAgICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ibGlzdGluZ19kZXRhaWxzIHRoZV9saXN0X3ZpZXciPgogICAgICAgICAgICAgICAgICAgIFZBMTk4NC1LTUkgJiM4MjExOyBQQVJJUyAxMMOobWUgJiM4MjExOyBHQVJFIERFIEwmIzgyMTc7RVNULiBBIHByb3hpbWl0w6kgZGVzIGNvbW1lcmNlcyBldCBkZXMgdHJhbnNwb3J0cywgS01JIHZvdXMgaSA8YSBocmVmPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vZXN0YXRlX3Byb3BlcnR5LzItMy1waWVjZXMtcmVmYWl0LWEtbmV1Zi8iIGNsYXNzPSJ1bml0X21vcmVfeCI+W3BsdXNdPC9hPiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgCgoKICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvcGVydHlfbGlzdGluZ19kZXRhaWxzIj4KICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iaW5mb3Jvb20iPjE8L3NwYW4+PHNwYW4gY2xhc3M9ImluZm9iYXRoIj4xPC9zcGFuPiA8c3BhbiBjbGFzcz0iaW5mb3NpemUiPjY3LDAwIG08c3VwPjI8L3N1cD48L3NwYW4+PGEgaHJlZj0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL2VzdGF0ZV9wcm9wZXJ0eS8yLTMtcGllY2VzLXJlZmFpdC1hLW5ldWYvIiBjbGFzcz0idW5pdF9kZXRhaWxzX3giPmluZm8gY29tcGzDqHRlPC9hPiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAKICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvcGVydHlfbG9jYXRpb24iPgogICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvcGVydHlfYWdlbnRfd3JhcHBlciI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb3BlcnR5X2FnZW50X2ltYWdlIiBzdHlsZT0iYmFja2dyb3VuZC1pbWFnZTp1cmwoJ2h0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS93cC1jb250ZW50L3VwbG9hZHMvMjAxOS8wNi9QeXLDqW7DqWVzLTQtMTIweDEyMC5qcGcnKSI+PC9kaXY+IAogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9wZXJ0eV9hZ2VudF9pbWFnZV9zaWduIj48aSBjbGFzcz0iZmEgZmEtdXNlci1jaXJjbGUtbyIgYXJpYS1oaWRkZW49InRydWUiPjwvaT48L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL2VzdGF0ZV9hZ2VudC9rbWktcHlyZW5lZXMvIj5LTUkgUFlSw4lOw4lFUzwvYT4gICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ibGlzdGluZ19hY3Rpb25zIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InNoYXJlX3VuaXQiPgogICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vd3d3LmZhY2Vib29rLmNvbS9zaGFyZXIucGhwP3U9aHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL2VzdGF0ZV9wcm9wZXJ0eS8yLTMtcGllY2VzLXJlZmFpdC1hLW5ldWYvJmFtcDt0PTIlMkYzK1BJRUNFUytSRUZBSVQrQStORVVGIiB0YXJnZXQ9Il9ibGFuayIgY2xhc3M9InNvY2lhbF9mYWNlYm9vayI+PC9hPgogICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vdHdpdHRlci5jb20vaG9tZT9zdGF0dXM9MiUyRjMrUElFQ0VTK1JFRkFJVCtBK05FVUZodHRwcyUzQSUyRiUyRnd3dy5jYWJpbmV0LWttaS5jb20lMkZlc3RhdGVfcHJvcGVydHklMkYyLTMtcGllY2VzLXJlZmFpdC1hLW5ldWYlMkYiIGNsYXNzPSJzb2NpYWxfdHdlZXQiIHRhcmdldD0iX2JsYW5rIj48L2E+CiAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9waW50ZXJlc3QuY29tL3Bpbi9jcmVhdGUvYnV0dG9uLz91cmw9aHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL2VzdGF0ZV9wcm9wZXJ0eS8yLTMtcGllY2VzLXJlZmFpdC1hLW5ldWYvJmFtcDttZWRpYT1odHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vd3AtY29udGVudC91cGxvYWRzLzIwMjAvMDIvMTU3MjU0MTkxMV9WQTE5ODRfMV9sLmpwZyZhbXA7ZGVzY3JpcHRpb249MiUyRjMrUElFQ0VTK1JFRkFJVCtBK05FVUYiIHRhcmdldD0iX2JsYW5rIiBjbGFzcz0ic29jaWFsX3BpbnRlcmVzdCI+PC9hPgogICAgICAgIDxhIGhyZWY9Im1haWx0bzplbWFpbEBlbWFpbC5jb20/aHR0cDovL3N1YmplY3Q9MiUyRjMrUElFQ0VTK1JFRkFJVCtBK05FVUYmIzAzODtib2R5PWh0dHBzJTNBJTJGJTJGd3d3LmNhYmluZXQta21pLmNvbSUyRmVzdGF0ZV9wcm9wZXJ0eSUyRjItMy1waWVjZXMtcmVmYWl0LWEtbmV1ZiUyRiIgZGF0YS1hY3Rpb249InNoYXJlIGVtYWlsIiAgY2xhc3M9InNvY2lhbF9lbWFpbCI+PC9hPgoKICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ic2hhcmVfbGlzdCIgIGRhdGEtb3JpZ2luYWwtdGl0bGU9InBhcnRhZ2VyIiA+PC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJpY29uLWZhdiBpY29uLWZhdi1vZmYiIGRhdGEtb3JpZ2luYWwtdGl0bGU9ImFqb3V0ZXIgYXV4IEZhdm9yaXMiIGRhdGEtcG9zdGlkPSIyMjQxNSI+PC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJjb21wYXJlLWFjdGlvbiIgZGF0YS1vcmlnaW5hbC10aXRsZT0iY29tcGFyZXIiIGRhdGEtcGltYWdlPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vd3AtY29udGVudC91cGxvYWRzLzIwMjAvMDIvMTU3MjU0MTkxMV9WQTE5ODRfMV9sLTE0M3g4My5qcGciIGRhdGEtcGlkPSIyMjQxNSI+PC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+ICAgICAgICA8L2Rpdj4gICAgICAgICAgICAgCiAgICA8L2Rpdj4gIAoKCgo8ZGl2IGNsYXNzPSJjb2wtbWQtNCBoYXNfcHJvcF9zbGlkZXIgIGxpc3Rpbmdfd3JhcHBlciIgZGF0YS1vcmc9IjQiIGRhdGEtbGlzdGlkPSIyMjQwOCIgPiAKICAgIDxkaXYgY2xhc3M9InByb3BlcnR5X2xpc3RpbmcgICAiIGRhdGEtbGluaz0iIj4KICAgICAgICAKICAgICAgICA8ZGl2IGNsYXNzPSJsaXN0aW5nLXVuaXQtaW1nLXdyYXBwZXIiPjxkaXYgY2xhc3M9InByb3BfbmV3X2RldGFpbHMiPjxkaXYgY2xhc3M9InByb3BfbmV3X2RldGFpbHNfYmFjayI+PC9kaXY+PGRpdiBjbGFzcz0icHJvcGVydHlfbWVkaWEiPjxpIGNsYXNzPSJmYSBmYS1jYW1lcmEiIGFyaWEtaGlkZGVuPSJ0cnVlIj48L2k+IDYKICAgICAgICAgICAgICAgIDwvZGl2PjxkaXYgY2xhc3M9InByb3BlcnR5X2xvY2F0aW9uX2ltYWdlIj4gCiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb3BlcnR5X21hcmtlciI+PC9zcGFuPjxhIGhyZWY9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS9wcm9wZXJ0eV9jaXR5Lzc1MDIwLyI+NzUwMjA8L2E+LCA8YSBocmVmPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vcHJvcGVydHlfY2l0eS9wYXJpcy0yLyI+UGFyaXM8L2E+PC9kaXY+PC9kaXY+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBpZD0icHJvcGVydHlfdW5pdF9jYXJvdXNlbF81ZTg0YTZhMTcyOGRlIiBjbGFzcz0iY2Fyb3VzZWwgcHJvcGVydHlfdW5pdF9jYXJvdXNlbCBzbGlkZSAiIGRhdGEtcmlkZT0iY2Fyb3VzZWwiIGRhdGEtaW50ZXJ2YWw9ImZhbHNlIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY2Fyb3VzZWwtaW5uZXIiPiAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iaXRlbSBhY3RpdmUiPiAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vZXN0YXRlX3Byb3BlcnR5LzItcGllY2VzLTIzLyI+PGltZyB3aWR0aD0iNTI1IiBoZWlnaHQ9IjMyOCIgc3JjPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vd3AtY29udGVudC91cGxvYWRzLzIwMjAvMDIvMTU3MTc2NDg5MF9WQTE5NzhfN19sLTUyNXgzMjguanBnIiBjbGFzcz0ibGF6eWxvYWQgaW1nLXJlc3BvbnNpdmUgd3AtcG9zdC1pbWFnZSIgYWx0PSIiIGRhdGEtb3JpZ2luYWw9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS93cC1jb250ZW50L3VwbG9hZHMvMjAyMC8wMi8xNTcxNzY0ODkwX1ZBMTk3OF83X2wtNTI1eDMyOC5qcGciIC8+PC9hPiAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Iml0ZW0gbGF6eS1sb2FkLWl0ZW0iPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS9lc3RhdGVfcHJvcGVydHkvMi1waWVjZXMtMjMvIj48aW1nICBkYXRhLWxhenktbG9hZC1zcmM9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS93cC1jb250ZW50L3VwbG9hZHMvMjAyMC8wMi8xNTcxNzY0ODg5X1ZBMTk3OF82X2wtNTI1eDMyOC5qcGciIGFsdD0iMiBwacOoY2VzIiBjbGFzcz0iaW1nLXJlc3BvbnNpdmUiIC8+PC9hPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+PGRpdiBjbGFzcz0iaXRlbSBsYXp5LWxvYWQtaXRlbSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL2VzdGF0ZV9wcm9wZXJ0eS8yLXBpZWNlcy0yMy8iPjxpbWcgIGRhdGEtbGF6eS1sb2FkLXNyYz0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL3dwLWNvbnRlbnQvdXBsb2Fkcy8yMDIwLzAyLzE1NzE3NjQ4ODdfVkExOTc4XzRfbC01MjV4MzI4LmpwZyIgYWx0PSIyIHBpw6hjZXMiIGNsYXNzPSJpbWctcmVzcG9uc2l2ZSIgLz48L2E+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj48ZGl2IGNsYXNzPSJpdGVtIGxhenktbG9hZC1pdGVtIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vZXN0YXRlX3Byb3BlcnR5LzItcGllY2VzLTIzLyI+PGltZyAgZGF0YS1sYXp5LWxvYWQtc3JjPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vd3AtY29udGVudC91cGxvYWRzLzIwMjAvMDIvMTU3MTc2NDg4NV9WQTE5NzhfMl9sLTUyNXgzMjguanBnIiBhbHQ9IjIgcGnDqGNlcyIgY2xhc3M9ImltZy1yZXNwb25zaXZlIiAvPjwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PjxkaXYgY2xhc3M9Iml0ZW0gbGF6eS1sb2FkLWl0ZW0iPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS9lc3RhdGVfcHJvcGVydHkvMi1waWVjZXMtMjMvIj48aW1nICBkYXRhLWxhenktbG9hZC1zcmM9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS93cC1jb250ZW50L3VwbG9hZHMvMjAyMC8wMi8xNTcxNzY0ODg2X1ZBMTk3OF8zX2wtNTI1eDMyOC5qcGciIGFsdD0iMiBwacOoY2VzIiBjbGFzcz0iaW1nLXJlc3BvbnNpdmUiIC8+PC9hPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+PGRpdiBjbGFzcz0iaXRlbSBsYXp5LWxvYWQtaXRlbSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL2VzdGF0ZV9wcm9wZXJ0eS8yLXBpZWNlcy0yMy8iPjxpbWcgIGRhdGEtbGF6eS1sb2FkLXNyYz0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL3dwLWNvbnRlbnQvdXBsb2Fkcy8yMDIwLzAyLzE1NzE3NjQ4ODhfVkExOTc4XzVfbC01MjV4MzI4LmpwZyIgYWx0PSIyIHBpw6hjZXMiIGNsYXNzPSJpbWctcmVzcG9uc2l2ZSIgLz48L2E+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vZXN0YXRlX3Byb3BlcnR5LzItcGllY2VzLTIzLyI+IDwvYT48YSBjbGFzcz0ibGVmdCAgY2Fyb3VzZWwtY29udHJvbCIgaHJlZj0iI3Byb3BlcnR5X3VuaXRfY2Fyb3VzZWxfNWU4NGE2YTE3MjhkZSIgZGF0YS1zbGlkZT0icHJldiI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9ImRlbW8taWNvbiBpY29uLWxlZnQtb3Blbi1iaWciPjwvaT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBjbGFzcz0icmlnaHQgIGNhcm91c2VsLWNvbnRyb2wiIGhyZWY9IiNwcm9wZXJ0eV91bml0X2Nhcm91c2VsXzVlODRhNmExNzI4ZGUiIGRhdGEtc2xpZGU9Im5leHQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJkZW1vLWljb24gaWNvbi1yaWdodC1vcGVuLWJpZyI+PC9pPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICAgIDwvZGl2PjxkaXYgY2xhc3M9InRhZy13cmFwcGVyIj48ZGl2IGNsYXNzPSJzdGF0dXMtd3JhcHBlciI+PGRpdiBjbGFzcz0iYWN0aW9uX3RhZ193cmFwcGVyIFZFTkRVICI+VkVORFU8L2Rpdj48ZGl2IGNsYXNzPSJyaWJib24taW5zaWRlIFZFTkRVIj5WRU5EVTwvZGl2PjwvZGl2PjwvZGl2PjwvZGl2PgoKICAgICAgICAgICAgPGg0PjxhIGhyZWY9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS9lc3RhdGVfcHJvcGVydHkvMi1waWVjZXMtMjMvIj4KICAgICAgICAgICAgICAgIDIgcGnDqGNlcyAgICAgICAgICAgICAgICA8L2E+IAogICAgICAgICAgICA8L2g0PiAKICAgICAgICAgICAgCiAgICAgICAgICAgIDxkaXYgY2xhc3M9Imxpc3RpbmdfdW5pdF9wcmljZV93cmFwcGVyIj48c3BhbiBjbGFzcz0icHJpY2VfbGFiZWwiPk5vdXMgY29uc3VsdGVyPC9zcGFuPjwvZGl2PiAgICAgICAgCiAgICAgICAgCiAgICAgICAgCiAgICAgICAgICAgCiAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJsaXN0aW5nX2RldGFpbHMgdGhlX2dyaWRfdmlldyI+CiAgICAgICAgICAgICAgICAgICAgVkExOTc4LUtNSSAmIzgyMTE7IFBBUklTIDIww6htZSAmIzgyMTE7IEFsZXhhbmRyZSBEdW1hcyAmIzgyMTE7IERhbnMgdW4gaW1tZXVibGUgYW5jaWVuIGJpZW4gdGVudSBzaXR1w6kgYXV4IHBpZWRzIGRlIDxhIGhyZWY9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS9lc3RhdGVfcHJvcGVydHkvMi1waWVjZXMtMjMvIiBjbGFzcz0idW5pdF9tb3JlX3giPltwbHVzXTwvYT4gICAgICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ibGlzdGluZ19kZXRhaWxzIHRoZV9saXN0X3ZpZXciPgogICAgICAgICAgICAgICAgICAgIFZBMTk3OC1LTUkgJiM4MjExOyBQQVJJUyAyMMOobWUgJiM4MjExOyBBbGV4YW5kcmUgRHVtYXMgJiM4MjExOyBEYW5zIHVuIGltbWV1YmxlIGFuY2llbiBiaWVuIHRlbnUgc2l0dcOpIGF1eCBwaWVkcyBkZSA8YSBocmVmPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vZXN0YXRlX3Byb3BlcnR5LzItcGllY2VzLTIzLyIgY2xhc3M9InVuaXRfbW9yZV94Ij5bcGx1c108L2E+ICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAKCgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9wZXJ0eV9saXN0aW5nX2RldGFpbHMiPgogICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJpbmZvcm9vbSI+MTwvc3Bhbj48c3BhbiBjbGFzcz0iaW5mb2JhdGgiPjE8L3NwYW4+IDxzcGFuIGNsYXNzPSJpbmZvc2l6ZSI+MjcsMDAgbTxzdXA+Mjwvc3VwPjwvc3Bhbj48YSBocmVmPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vZXN0YXRlX3Byb3BlcnR5LzItcGllY2VzLTIzLyIgY2xhc3M9InVuaXRfZGV0YWlsc194Ij5pbmZvIGNvbXBsw6h0ZTwvYT4gICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgCiAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb3BlcnR5X2xvY2F0aW9uIj4KICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb3BlcnR5X2FnZW50X3dyYXBwZXIiPgogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9wZXJ0eV9hZ2VudF9pbWFnZSIgc3R5bGU9ImJhY2tncm91bmQtaW1hZ2U6dXJsKCdodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vd3AtY29udGVudC91cGxvYWRzLzIwMTkvMDYvUHlyw6luw6llcy00LTEyMHgxMjAuanBnJykiPjwvZGl2PiAKICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvcGVydHlfYWdlbnRfaW1hZ2Vfc2lnbiI+PGkgY2xhc3M9ImZhIGZhLXVzZXItY2lyY2xlLW8iIGFyaWEtaGlkZGVuPSJ0cnVlIj48L2k+PC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS9lc3RhdGVfYWdlbnQva21pLXB5cmVuZWVzLyI+S01JIFBZUsOJTsOJRVM8L2E+ICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Imxpc3RpbmdfYWN0aW9ucyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJzaGFyZV91bml0Ij4KICAgICAgICA8YSBocmVmPSJodHRwczovL3d3dy5mYWNlYm9vay5jb20vc2hhcmVyLnBocD91PWh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS9lc3RhdGVfcHJvcGVydHkvMi1waWVjZXMtMjMvJmFtcDt0PTIrcGklQzMlQThjZXMiIHRhcmdldD0iX2JsYW5rIiBjbGFzcz0ic29jaWFsX2ZhY2Vib29rIj48L2E+CiAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly90d2l0dGVyLmNvbS9ob21lP3N0YXR1cz0yK3BpJUMzJUE4Y2VzaHR0cHMlM0ElMkYlMkZ3d3cuY2FiaW5ldC1rbWkuY29tJTJGZXN0YXRlX3Byb3BlcnR5JTJGMi1waWVjZXMtMjMlMkYiIGNsYXNzPSJzb2NpYWxfdHdlZXQiIHRhcmdldD0iX2JsYW5rIj48L2E+CiAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9waW50ZXJlc3QuY29tL3Bpbi9jcmVhdGUvYnV0dG9uLz91cmw9aHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL2VzdGF0ZV9wcm9wZXJ0eS8yLXBpZWNlcy0yMy8mYW1wO21lZGlhPWh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS93cC1jb250ZW50L3VwbG9hZHMvMjAyMC8wMi8xNTcxNzY0ODkwX1ZBMTk3OF83X2wuanBnJmFtcDtkZXNjcmlwdGlvbj0yK3BpJUMzJUE4Y2VzIiB0YXJnZXQ9Il9ibGFuayIgY2xhc3M9InNvY2lhbF9waW50ZXJlc3QiPjwvYT4KICAgICAgICA8YSBocmVmPSJtYWlsdG86ZW1haWxAZW1haWwuY29tP2h0dHA6Ly9zdWJqZWN0PTIrcGklQzMlQThjZXMmIzAzODtib2R5PWh0dHBzJTNBJTJGJTJGd3d3LmNhYmluZXQta21pLmNvbSUyRmVzdGF0ZV9wcm9wZXJ0eSUyRjItcGllY2VzLTIzJTJGIiBkYXRhLWFjdGlvbj0ic2hhcmUgZW1haWwiICBjbGFzcz0ic29jaWFsX2VtYWlsIj48L2E+CgogICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJzaGFyZV9saXN0IiAgZGF0YS1vcmlnaW5hbC10aXRsZT0icGFydGFnZXIiID48L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9Imljb24tZmF2IGljb24tZmF2LW9mZiIgZGF0YS1vcmlnaW5hbC10aXRsZT0iYWpvdXRlciBhdXggRmF2b3JpcyIgZGF0YS1wb3N0aWQ9IjIyNDA4Ij48L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImNvbXBhcmUtYWN0aW9uIiBkYXRhLW9yaWdpbmFsLXRpdGxlPSJjb21wYXJlciIgZGF0YS1waW1hZ2U9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS93cC1jb250ZW50L3VwbG9hZHMvMjAyMC8wMi8xNTcxNzY0ODkwX1ZBMTk3OF83X2wtMTQzeDgzLmpwZyIgZGF0YS1waWQ9IjIyNDA4Ij48L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4gICAgICAgIDwvZGl2PiAgICAgICAgICAgICAKICAgIDwvZGl2PiAgCgoKCjxkaXYgY2xhc3M9ImNvbC1tZC00IGhhc19wcm9wX3NsaWRlciAgbGlzdGluZ193cmFwcGVyIiBkYXRhLW9yZz0iNCIgZGF0YS1saXN0aWQ9IjIyNDAxIiA+IAogICAgPGRpdiBjbGFzcz0icHJvcGVydHlfbGlzdGluZyAgICIgZGF0YS1saW5rPSIiPgogICAgICAgIAogICAgICAgIDxkaXYgY2xhc3M9Imxpc3RpbmctdW5pdC1pbWctd3JhcHBlciI+PGRpdiBjbGFzcz0icHJvcF9uZXdfZGV0YWlscyI+PGRpdiBjbGFzcz0icHJvcF9uZXdfZGV0YWlsc19iYWNrIj48L2Rpdj48ZGl2IGNsYXNzPSJwcm9wZXJ0eV9tZWRpYSI+PGkgY2xhc3M9ImZhIGZhLWNhbWVyYSIgYXJpYS1oaWRkZW49InRydWUiPjwvaT4gNgogICAgICAgICAgICAgICAgPC9kaXY+PGRpdiBjbGFzcz0icHJvcGVydHlfbG9jYXRpb25faW1hZ2UiPiAKICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvcGVydHlfbWFya2VyIj48L3NwYW4+PGEgaHJlZj0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL3Byb3BlcnR5X2NpdHkvNzUwMTEvIj43NTAxMTwvYT4sIDxhIGhyZWY9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS9wcm9wZXJ0eV9jaXR5L3BhcmlzLTIvIj5QYXJpczwvYT48L2Rpdj48L2Rpdj4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGlkPSJwcm9wZXJ0eV91bml0X2Nhcm91c2VsXzVlODRhNmExNzVjZjciIGNsYXNzPSJjYXJvdXNlbCBwcm9wZXJ0eV91bml0X2Nhcm91c2VsIHNsaWRlICIgZGF0YS1yaWRlPSJjYXJvdXNlbCIgZGF0YS1pbnRlcnZhbD0iZmFsc2UiPgogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjYXJvdXNlbC1pbm5lciI+ICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJpdGVtIGFjdGl2ZSI+ICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS9lc3RhdGVfcHJvcGVydHkvMi1waWVjZXMtY2F2ZS0yNS8iPjxpbWcgd2lkdGg9IjUyNSIgaGVpZ2h0PSIzMjgiIHNyYz0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL3dwLWNvbnRlbnQvdXBsb2Fkcy8yMDIwLzAyLzE1NzEwNTg0MzdfVkExOTY4XzVfbC01MjV4MzI4LmpwZyIgY2xhc3M9Imxhenlsb2FkIGltZy1yZXNwb25zaXZlIHdwLXBvc3QtaW1hZ2UiIGFsdD0iIiBkYXRhLW9yaWdpbmFsPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vd3AtY29udGVudC91cGxvYWRzLzIwMjAvMDIvMTU3MTA1ODQzN19WQTE5NjhfNV9sLTUyNXgzMjguanBnIiAvPjwvYT4gICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJpdGVtIGxhenktbG9hZC1pdGVtIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vZXN0YXRlX3Byb3BlcnR5LzItcGllY2VzLWNhdmUtMjUvIj48aW1nICBkYXRhLWxhenktbG9hZC1zcmM9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS93cC1jb250ZW50L3VwbG9hZHMvMjAyMC8wMi8xNTcxMDU4NDE4X1ZBMTk2OF8zX2wtNTI1eDMyOC5qcGciIGFsdD0iMiBQSUVDRVMgKyBDQVZFIiBjbGFzcz0iaW1nLXJlc3BvbnNpdmUiIC8+PC9hPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+PGRpdiBjbGFzcz0iaXRlbSBsYXp5LWxvYWQtaXRlbSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL2VzdGF0ZV9wcm9wZXJ0eS8yLXBpZWNlcy1jYXZlLTI1LyI+PGltZyAgZGF0YS1sYXp5LWxvYWQtc3JjPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vd3AtY29udGVudC91cGxvYWRzLzIwMjAvMDIvMTU3MTA1ODQyOV9WQTE5NjhfNF9sLTUyNXgzMjguanBnIiBhbHQ9IjIgUElFQ0VTICsgQ0FWRSIgY2xhc3M9ImltZy1yZXNwb25zaXZlIiAvPjwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PjxkaXYgY2xhc3M9Iml0ZW0gbGF6eS1sb2FkLWl0ZW0iPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS9lc3RhdGVfcHJvcGVydHkvMi1waWVjZXMtY2F2ZS0yNS8iPjxpbWcgIGRhdGEtbGF6eS1sb2FkLXNyYz0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL3dwLWNvbnRlbnQvdXBsb2Fkcy8yMDIwLzAyLzE1NzEwNTg0NTFfVkExOTY4XzdfbC01MjV4MzI4LmpwZyIgYWx0PSIyIFBJRUNFUyArIENBVkUiIGNsYXNzPSJpbWctcmVzcG9uc2l2ZSIgLz48L2E+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj48ZGl2IGNsYXNzPSJpdGVtIGxhenktbG9hZC1pdGVtIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vZXN0YXRlX3Byb3BlcnR5LzItcGllY2VzLWNhdmUtMjUvIj48aW1nICBkYXRhLWxhenktbG9hZC1zcmM9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS93cC1jb250ZW50L3VwbG9hZHMvMjAyMC8wMi8xNTcxMDU4NDQzX1ZBMTk2OF82X2wtNTI1eDMyOC5qcGciIGFsdD0iMiBQSUVDRVMgKyBDQVZFIiBjbGFzcz0iaW1nLXJlc3BvbnNpdmUiIC8+PC9hPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+PGRpdiBjbGFzcz0iaXRlbSBsYXp5LWxvYWQtaXRlbSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL2VzdGF0ZV9wcm9wZXJ0eS8yLXBpZWNlcy1jYXZlLTI1LyI+PGltZyAgZGF0YS1sYXp5LWxvYWQtc3JjPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vd3AtY29udGVudC91cGxvYWRzLzIwMjAvMDIvMTU3MTA1ODM4NV9WQTE5NjhfMV9sLTUyNXgzMjguanBnIiBhbHQ9IjIgUElFQ0VTICsgQ0FWRSIgY2xhc3M9ImltZy1yZXNwb25zaXZlIiAvPjwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS9lc3RhdGVfcHJvcGVydHkvMi1waWVjZXMtY2F2ZS0yNS8iPiA8L2E+PGEgY2xhc3M9ImxlZnQgIGNhcm91c2VsLWNvbnRyb2wiIGhyZWY9IiNwcm9wZXJ0eV91bml0X2Nhcm91c2VsXzVlODRhNmExNzVjZjciIGRhdGEtc2xpZGU9InByZXYiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJkZW1vLWljb24gaWNvbi1sZWZ0LW9wZW4tYmlnIj48L2k+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2E+CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgY2xhc3M9InJpZ2h0ICBjYXJvdXNlbC1jb250cm9sIiBocmVmPSIjcHJvcGVydHlfdW5pdF9jYXJvdXNlbF81ZTg0YTZhMTc1Y2Y3IiBkYXRhLXNsaWRlPSJuZXh0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZGVtby1pY29uIGljb24tcmlnaHQtb3Blbi1iaWciPjwvaT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgICA8L2Rpdj48ZGl2IGNsYXNzPSJ0YWctd3JhcHBlciI+PGRpdiBjbGFzcz0ic3RhdHVzLXdyYXBwZXIiPjxkaXYgY2xhc3M9ImFjdGlvbl90YWdfd3JhcHBlciBWRU5EVSAiPlZFTkRVPC9kaXY+PGRpdiBjbGFzcz0icmliYm9uLWluc2lkZSBWRU5EVSI+VkVORFU8L2Rpdj48L2Rpdj48L2Rpdj48L2Rpdj4KCiAgICAgICAgICAgIDxoND48YSBocmVmPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vZXN0YXRlX3Byb3BlcnR5LzItcGllY2VzLWNhdmUtMjUvIj4KICAgICAgICAgICAgICAgIDIgUElFQ0VTICsgQ0FWRSAgICAgICAgICAgICAgICA8L2E+IAogICAgICAgICAgICA8L2g0PiAKICAgICAgICAgICAgCiAgICAgICAgICAgIDxkaXYgY2xhc3M9Imxpc3RpbmdfdW5pdF9wcmljZV93cmFwcGVyIj48c3BhbiBjbGFzcz0icHJpY2VfbGFiZWwiPk5vdXMgY29uc3VsdGVyPC9zcGFuPjwvZGl2PiAgICAgICAgCiAgICAgICAgCiAgICAgICAgCiAgICAgICAgICAgCiAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJsaXN0aW5nX2RldGFpbHMgdGhlX2dyaWRfdmlldyI+CiAgICAgICAgICAgICAgICAgICAgVkExOTY4LUtNSSAmIzgyMTE7IFBhcmlzIDExw6htZSAmIzgyMTE7IFZvbHRhaXJlLiBTVFVESU8vMiBQScOIQ0VTwpYgQXUgNMOobWUgZXQgREVSTklFUiDDiVRBR0UgZCYjODIxNzt1biBpbW1ldWJsZSBhbmNpIDxhIGhyZWY9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS9lc3RhdGVfcHJvcGVydHkvMi1waWVjZXMtY2F2ZS0yNS8iIGNsYXNzPSJ1bml0X21vcmVfeCI+W3BsdXNdPC9hPiAgICAgICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJsaXN0aW5nX2RldGFpbHMgdGhlX2xpc3RfdmlldyI+CiAgICAgICAgICAgICAgICAgICAgVkExOTY4LUtNSSAmIzgyMTE7IFBhcmlzIDExw6htZSAmIzgyMTE7IFZvbHRhaXJlLiBTVFVESU8vMiBQScOIQ0VTwpYgQXUgNMOobWUgZXQgREVSTklFUiDDiVRBR0UgZCYjODIxNzt1biBpbW1ldWJsZSBhbmNpIDxhIGhyZWY9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS9lc3RhdGVfcHJvcGVydHkvMi1waWVjZXMtY2F2ZS0yNS8iIGNsYXNzPSJ1bml0X21vcmVfeCI+W3BsdXNdPC9hPiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgCgoKICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvcGVydHlfbGlzdGluZ19kZXRhaWxzIj4KICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iaW5mb3Jvb20iPjE8L3NwYW4+PHNwYW4gY2xhc3M9ImluZm9iYXRoIj4xPC9zcGFuPiA8c3BhbiBjbGFzcz0iaW5mb3NpemUiPjMzLDAwIG08c3VwPjI8L3N1cD48L3NwYW4+PGEgaHJlZj0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL2VzdGF0ZV9wcm9wZXJ0eS8yLXBpZWNlcy1jYXZlLTI1LyIgY2xhc3M9InVuaXRfZGV0YWlsc194Ij5pbmZvIGNvbXBsw6h0ZTwvYT4gICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgCiAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb3BlcnR5X2xvY2F0aW9uIj4KICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb3BlcnR5X2FnZW50X3dyYXBwZXIiPgogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9wZXJ0eV9hZ2VudF9pbWFnZSIgc3R5bGU9ImJhY2tncm91bmQtaW1hZ2U6dXJsKCdodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vd3AtY29udGVudC91cGxvYWRzLzIwMTkvMDYvUHlyw6luw6llcy00LTEyMHgxMjAuanBnJykiPjwvZGl2PiAKICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvcGVydHlfYWdlbnRfaW1hZ2Vfc2lnbiI+PGkgY2xhc3M9ImZhIGZhLXVzZXItY2lyY2xlLW8iIGFyaWEtaGlkZGVuPSJ0cnVlIj48L2k+PC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS9lc3RhdGVfYWdlbnQva21pLXB5cmVuZWVzLyI+S01JIFBZUsOJTsOJRVM8L2E+ICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Imxpc3RpbmdfYWN0aW9ucyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJzaGFyZV91bml0Ij4KICAgICAgICA8YSBocmVmPSJodHRwczovL3d3dy5mYWNlYm9vay5jb20vc2hhcmVyLnBocD91PWh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS9lc3RhdGVfcHJvcGVydHkvMi1waWVjZXMtY2F2ZS0yNS8mYW1wO3Q9MitQSUVDRVMrJTJCK0NBVkUiIHRhcmdldD0iX2JsYW5rIiBjbGFzcz0ic29jaWFsX2ZhY2Vib29rIj48L2E+CiAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly90d2l0dGVyLmNvbS9ob21lP3N0YXR1cz0yK1BJRUNFUyslMkIrQ0FWRWh0dHBzJTNBJTJGJTJGd3d3LmNhYmluZXQta21pLmNvbSUyRmVzdGF0ZV9wcm9wZXJ0eSUyRjItcGllY2VzLWNhdmUtMjUlMkYiIGNsYXNzPSJzb2NpYWxfdHdlZXQiIHRhcmdldD0iX2JsYW5rIj48L2E+CiAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9waW50ZXJlc3QuY29tL3Bpbi9jcmVhdGUvYnV0dG9uLz91cmw9aHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL2VzdGF0ZV9wcm9wZXJ0eS8yLXBpZWNlcy1jYXZlLTI1LyZhbXA7bWVkaWE9aHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL3dwLWNvbnRlbnQvdXBsb2Fkcy8yMDIwLzAyLzE1NzEwNTg0MzdfVkExOTY4XzVfbC5qcGcmYW1wO2Rlc2NyaXB0aW9uPTIrUElFQ0VTKyUyQitDQVZFIiB0YXJnZXQ9Il9ibGFuayIgY2xhc3M9InNvY2lhbF9waW50ZXJlc3QiPjwvYT4KICAgICAgICA8YSBocmVmPSJtYWlsdG86ZW1haWxAZW1haWwuY29tP2h0dHA6Ly9zdWJqZWN0PTIrUElFQ0VTKyUyQitDQVZFJiMwMzg7Ym9keT1odHRwcyUzQSUyRiUyRnd3dy5jYWJpbmV0LWttaS5jb20lMkZlc3RhdGVfcHJvcGVydHklMkYyLXBpZWNlcy1jYXZlLTI1JTJGIiBkYXRhLWFjdGlvbj0ic2hhcmUgZW1haWwiICBjbGFzcz0ic29jaWFsX2VtYWlsIj48L2E+CgogICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJzaGFyZV9saXN0IiAgZGF0YS1vcmlnaW5hbC10aXRsZT0icGFydGFnZXIiID48L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9Imljb24tZmF2IGljb24tZmF2LW9mZiIgZGF0YS1vcmlnaW5hbC10aXRsZT0iYWpvdXRlciBhdXggRmF2b3JpcyIgZGF0YS1wb3N0aWQ9IjIyNDAxIj48L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImNvbXBhcmUtYWN0aW9uIiBkYXRhLW9yaWdpbmFsLXRpdGxlPSJjb21wYXJlciIgZGF0YS1waW1hZ2U9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS93cC1jb250ZW50L3VwbG9hZHMvMjAyMC8wMi8xNTcxMDU4NDM3X1ZBMTk2OF81X2wtMTQzeDgzLmpwZyIgZGF0YS1waWQ9IjIyNDAxIj48L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4gICAgICAgIDwvZGl2PiAgICAgICAgICAgICAKICAgIDwvZGl2PiAgCgoKCjxkaXYgY2xhc3M9ImNvbC1tZC00IGhhc19wcm9wX3NsaWRlciAgbGlzdGluZ193cmFwcGVyIiBkYXRhLW9yZz0iNCIgZGF0YS1saXN0aWQ9IjIyMzg3IiA+IAogICAgPGRpdiBjbGFzcz0icHJvcGVydHlfbGlzdGluZyAgICIgZGF0YS1saW5rPSIiPgogICAgICAgIAogICAgICAgIDxkaXYgY2xhc3M9Imxpc3RpbmctdW5pdC1pbWctd3JhcHBlciI+PGRpdiBjbGFzcz0icHJvcF9uZXdfZGV0YWlscyI+PGRpdiBjbGFzcz0icHJvcF9uZXdfZGV0YWlsc19iYWNrIj48L2Rpdj48ZGl2IGNsYXNzPSJwcm9wZXJ0eV9tZWRpYSI+PGkgY2xhc3M9ImZhIGZhLWNhbWVyYSIgYXJpYS1oaWRkZW49InRydWUiPjwvaT4gMTMKICAgICAgICAgICAgICAgIDwvZGl2PjxkaXYgY2xhc3M9InByb3BlcnR5X2xvY2F0aW9uX2ltYWdlIj4gCiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb3BlcnR5X21hcmtlciI+PC9zcGFuPjxhIGhyZWY9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS9wcm9wZXJ0eV9jaXR5Lzc1MDExLyI+NzUwMTE8L2E+LCA8YSBocmVmPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vcHJvcGVydHlfY2l0eS9wYXJpcy0yLyI+UGFyaXM8L2E+PC9kaXY+PC9kaXY+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBpZD0icHJvcGVydHlfdW5pdF9jYXJvdXNlbF81ZTg0YTZhMTc5Yjc1IiBjbGFzcz0iY2Fyb3VzZWwgcHJvcGVydHlfdW5pdF9jYXJvdXNlbCBzbGlkZSAiIGRhdGEtcmlkZT0iY2Fyb3VzZWwiIGRhdGEtaW50ZXJ2YWw9ImZhbHNlIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY2Fyb3VzZWwtaW5uZXIiPiAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iaXRlbSBhY3RpdmUiPiAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vZXN0YXRlX3Byb3BlcnR5LzQtcGllY2VzLyI+PGltZyB3aWR0aD0iNTI1IiBoZWlnaHQ9IjMyOCIgc3JjPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vd3AtY29udGVudC91cGxvYWRzLzIwMjAvMDIvMTU3MDg5OTE4Nl9WQTE5NjRfMTRfbC01MjV4MzI4LmpwZyIgY2xhc3M9Imxhenlsb2FkIGltZy1yZXNwb25zaXZlIHdwLXBvc3QtaW1hZ2UiIGFsdD0iIiBkYXRhLW9yaWdpbmFsPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vd3AtY29udGVudC91cGxvYWRzLzIwMjAvMDIvMTU3MDg5OTE4Nl9WQTE5NjRfMTRfbC01MjV4MzI4LmpwZyIgLz48L2E+ICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iaXRlbSBsYXp5LWxvYWQtaXRlbSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL2VzdGF0ZV9wcm9wZXJ0eS80LXBpZWNlcy8iPjxpbWcgIGRhdGEtbGF6eS1sb2FkLXNyYz0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL3dwLWNvbnRlbnQvdXBsb2Fkcy8yMDIwLzAyLzE1NzA4OTkwNDBfVkExOTY0XzZfbC01MjV4MzI4LmpwZyIgYWx0PSI0IHBpw6hjZXMiIGNsYXNzPSJpbWctcmVzcG9uc2l2ZSIgLz48L2E+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj48ZGl2IGNsYXNzPSJpdGVtIGxhenktbG9hZC1pdGVtIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vZXN0YXRlX3Byb3BlcnR5LzQtcGllY2VzLyI+PGltZyAgZGF0YS1sYXp5LWxvYWQtc3JjPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vd3AtY29udGVudC91cGxvYWRzLzIwMjAvMDIvMTU3MDg5OTA5M19WQTE5NjRfOV9sLTUyNXgzMjguanBnIiBhbHQ9IjQgcGnDqGNlcyIgY2xhc3M9ImltZy1yZXNwb25zaXZlIiAvPjwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PjxkaXYgY2xhc3M9Iml0ZW0gbGF6eS1sb2FkLWl0ZW0iPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS9lc3RhdGVfcHJvcGVydHkvNC1waWVjZXMvIj48aW1nICBkYXRhLWxhenktbG9hZC1zcmM9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS93cC1jb250ZW50L3VwbG9hZHMvMjAyMC8wMi8xNTcwODk5MTEwX1ZBMTk2NF8xMF9sLTUyNXgzMjguanBnIiBhbHQ9IjQgcGnDqGNlcyIgY2xhc3M9ImltZy1yZXNwb25zaXZlIiAvPjwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PjxkaXYgY2xhc3M9Iml0ZW0gbGF6eS1sb2FkLWl0ZW0iPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS9lc3RhdGVfcHJvcGVydHkvNC1waWVjZXMvIj48aW1nICBkYXRhLWxhenktbG9hZC1zcmM9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS93cC1jb250ZW50L3VwbG9hZHMvMjAyMC8wMi8xNTcwODk5MDU0X1ZBMTk2NF83X2wtNTI1eDMyOC5qcGciIGFsdD0iNCBwacOoY2VzIiBjbGFzcz0iaW1nLXJlc3BvbnNpdmUiIC8+PC9hPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+PGRpdiBjbGFzcz0iaXRlbSBsYXp5LWxvYWQtaXRlbSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL2VzdGF0ZV9wcm9wZXJ0eS80LXBpZWNlcy8iPjxpbWcgIGRhdGEtbGF6eS1sb2FkLXNyYz0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL3dwLWNvbnRlbnQvdXBsb2Fkcy8yMDIwLzAyLzE1NzA4OTkwNzVfVkExOTY0XzhfbC01MjV4MzI4LmpwZyIgYWx0PSI0IHBpw6hjZXMiIGNsYXNzPSJpbWctcmVzcG9uc2l2ZSIgLz48L2E+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj48ZGl2IGNsYXNzPSJpdGVtIGxhenktbG9hZC1pdGVtIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vZXN0YXRlX3Byb3BlcnR5LzQtcGllY2VzLyI+PGltZyAgZGF0YS1sYXp5LWxvYWQtc3JjPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vd3AtY29udGVudC91cGxvYWRzLzIwMjAvMDIvMTU3MDg5ODk4OV9WQTE5NjRfM19sLTUyNXgzMjguanBnIiBhbHQ9IjQgcGnDqGNlcyIgY2xhc3M9ImltZy1yZXNwb25zaXZlIiAvPjwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PjxkaXYgY2xhc3M9Iml0ZW0gbGF6eS1sb2FkLWl0ZW0iPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS9lc3RhdGVfcHJvcGVydHkvNC1waWVjZXMvIj48aW1nICBkYXRhLWxhenktbG9hZC1zcmM9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS93cC1jb250ZW50L3VwbG9hZHMvMjAyMC8wMi8xNTcwODk5MDIzX1ZBMTk2NF81X2wtNTI1eDMyOC5qcGciIGFsdD0iNCBwacOoY2VzIiBjbGFzcz0iaW1nLXJlc3BvbnNpdmUiIC8+PC9hPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+PGRpdiBjbGFzcz0iaXRlbSBsYXp5LWxvYWQtaXRlbSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL2VzdGF0ZV9wcm9wZXJ0eS80LXBpZWNlcy8iPjxpbWcgIGRhdGEtbGF6eS1sb2FkLXNyYz0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL3dwLWNvbnRlbnQvdXBsb2Fkcy8yMDIwLzAyLzE1NzA4OTg5MzhfVkExOTY0XzFfbC01MjV4MzI4LmpwZyIgYWx0PSI0IHBpw6hjZXMiIGNsYXNzPSJpbWctcmVzcG9uc2l2ZSIgLz48L2E+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj48ZGl2IGNsYXNzPSJpdGVtIGxhenktbG9hZC1pdGVtIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vZXN0YXRlX3Byb3BlcnR5LzQtcGllY2VzLyI+PGltZyAgZGF0YS1sYXp5LWxvYWQtc3JjPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vd3AtY29udGVudC91cGxvYWRzLzIwMjAvMDIvMTU3MDg5ODk2M19WQTE5NjRfMl9sLTUyNXgzMjguanBnIiBhbHQ9IjQgcGnDqGNlcyIgY2xhc3M9ImltZy1yZXNwb25zaXZlIiAvPjwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PjxkaXYgY2xhc3M9Iml0ZW0gbGF6eS1sb2FkLWl0ZW0iPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS9lc3RhdGVfcHJvcGVydHkvNC1waWVjZXMvIj48aW1nICBkYXRhLWxhenktbG9hZC1zcmM9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS93cC1jb250ZW50L3VwbG9hZHMvMjAyMC8wMi8xNTcwODk5MDAwX1ZBMTk2NF80X2wtNTI1eDMyOC5qcGciIGFsdD0iNCBwacOoY2VzIiBjbGFzcz0iaW1nLXJlc3BvbnNpdmUiIC8+PC9hPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+PGRpdiBjbGFzcz0iaXRlbSBsYXp5LWxvYWQtaXRlbSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL2VzdGF0ZV9wcm9wZXJ0eS80LXBpZWNlcy8iPjxpbWcgIGRhdGEtbGF6eS1sb2FkLXNyYz0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL3dwLWNvbnRlbnQvdXBsb2Fkcy8yMDIwLzAyLzE1NzA4OTkxMjVfVkExOTY0XzExX2wtNTI1eDMyOC5qcGciIGFsdD0iNCBwacOoY2VzIiBjbGFzcz0iaW1nLXJlc3BvbnNpdmUiIC8+PC9hPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+PGRpdiBjbGFzcz0iaXRlbSBsYXp5LWxvYWQtaXRlbSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL2VzdGF0ZV9wcm9wZXJ0eS80LXBpZWNlcy8iPjxpbWcgIGRhdGEtbGF6eS1sb2FkLXNyYz0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL3dwLWNvbnRlbnQvdXBsb2Fkcy8yMDIwLzAyLzE1NzA4OTkxNzBfVkExOTY0XzEzX2wtNTI1eDMyOC5qcGciIGFsdD0iNCBwacOoY2VzIiBjbGFzcz0iaW1nLXJlc3BvbnNpdmUiIC8+PC9hPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL2VzdGF0ZV9wcm9wZXJ0eS80LXBpZWNlcy8iPiA8L2E+PGEgY2xhc3M9ImxlZnQgIGNhcm91c2VsLWNvbnRyb2wiIGhyZWY9IiNwcm9wZXJ0eV91bml0X2Nhcm91c2VsXzVlODRhNmExNzliNzUiIGRhdGEtc2xpZGU9InByZXYiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJkZW1vLWljb24gaWNvbi1sZWZ0LW9wZW4tYmlnIj48L2k+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2E+CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgY2xhc3M9InJpZ2h0ICBjYXJvdXNlbC1jb250cm9sIiBocmVmPSIjcHJvcGVydHlfdW5pdF9jYXJvdXNlbF81ZTg0YTZhMTc5Yjc1IiBkYXRhLXNsaWRlPSJuZXh0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZGVtby1pY29uIGljb24tcmlnaHQtb3Blbi1iaWciPjwvaT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgICA8L2Rpdj48ZGl2IGNsYXNzPSJ0YWctd3JhcHBlciI+PGRpdiBjbGFzcz0ic3RhdHVzLXdyYXBwZXIiPjxkaXYgY2xhc3M9ImFjdGlvbl90YWdfd3JhcHBlciBWRU5EVSAiPlZFTkRVPC9kaXY+PGRpdiBjbGFzcz0icmliYm9uLWluc2lkZSBWRU5EVSI+VkVORFU8L2Rpdj48L2Rpdj48L2Rpdj48L2Rpdj4KCiAgICAgICAgICAgIDxoND48YSBocmVmPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vZXN0YXRlX3Byb3BlcnR5LzQtcGllY2VzLyI+CiAgICAgICAgICAgICAgICA0IHBpw6hjZXMgICAgICAgICAgICAgICAgPC9hPiAKICAgICAgICAgICAgPC9oND4gCiAgICAgICAgICAgIAogICAgICAgICAgICA8ZGl2IGNsYXNzPSJsaXN0aW5nX3VuaXRfcHJpY2Vfd3JhcHBlciI+PHNwYW4gY2xhc3M9InByaWNlX2xhYmVsIj5Ob3VzIGNvbnN1bHRlcjwvc3Bhbj48L2Rpdj4gICAgICAgIAogICAgICAgIAogICAgICAgIAogICAgICAgICAgIAogICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ibGlzdGluZ19kZXRhaWxzIHRoZV9ncmlkX3ZpZXciPgogICAgICAgICAgICAgICAgICAgIFZBMTk2NC1LTUkgJiM4MjExOyBQYXJpcyAxMcOobWUgJiM4MjExOyBTYWludCBBbWJyb2lzZSAmIzgyMTE7IERhbnMgdW5lIGltcGFzc2UgcGF2w6llIHRyw6hzIGFwcHLDqWNpw6llIHBvdXIgc29uIGNhbG1lICA8YSBocmVmPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vZXN0YXRlX3Byb3BlcnR5LzQtcGllY2VzLyIgY2xhc3M9InVuaXRfbW9yZV94Ij5bcGx1c108L2E+ICAgICAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Imxpc3RpbmdfZGV0YWlscyB0aGVfbGlzdF92aWV3Ij4KICAgICAgICAgICAgICAgICAgICBWQTE5NjQtS01JICYjODIxMTsgUGFyaXMgMTHDqG1lICYjODIxMTsgU2FpbnQgQW1icm9pc2UgJiM4MjExOyBEYW5zIHVuZSBpbXBhc3NlIHBhdsOpZSB0csOocyBhcHByw6ljacOpZSBwb3VyIHNvbiBjYWxtZSAgPGEgaHJlZj0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL2VzdGF0ZV9wcm9wZXJ0eS80LXBpZWNlcy8iIGNsYXNzPSJ1bml0X21vcmVfeCI+W3BsdXNdPC9hPiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgCgoKICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvcGVydHlfbGlzdGluZ19kZXRhaWxzIj4KICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iaW5mb3Jvb20iPjM8L3NwYW4+PHNwYW4gY2xhc3M9ImluZm9iYXRoIj4yPC9zcGFuPiA8c3BhbiBjbGFzcz0iaW5mb3NpemUiPjkzLDAwIG08c3VwPjI8L3N1cD48L3NwYW4+PGEgaHJlZj0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL2VzdGF0ZV9wcm9wZXJ0eS80LXBpZWNlcy8iIGNsYXNzPSJ1bml0X2RldGFpbHNfeCI+aW5mbyBjb21wbMOodGU8L2E+ICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgIAogICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9wZXJ0eV9sb2NhdGlvbiI+CiAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9wZXJ0eV9hZ2VudF93cmFwcGVyIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvcGVydHlfYWdlbnRfaW1hZ2UiIHN0eWxlPSJiYWNrZ3JvdW5kLWltYWdlOnVybCgnaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL3dwLWNvbnRlbnQvdXBsb2Fkcy8yMDE5LzA2L1B5csOpbsOpZXMtNC0xMjB4MTIwLmpwZycpIj48L2Rpdj4gCiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb3BlcnR5X2FnZW50X2ltYWdlX3NpZ24iPjxpIGNsYXNzPSJmYSBmYS11c2VyLWNpcmNsZS1vIiBhcmlhLWhpZGRlbj0idHJ1ZSI+PC9pPjwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vZXN0YXRlX2FnZW50L2ttaS1weXJlbmVlcy8iPktNSSBQWVLDiU7DiUVTPC9hPiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJsaXN0aW5nX2FjdGlvbnMiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ic2hhcmVfdW5pdCI+CiAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly93d3cuZmFjZWJvb2suY29tL3NoYXJlci5waHA/dT1odHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vZXN0YXRlX3Byb3BlcnR5LzQtcGllY2VzLyZhbXA7dD00K3BpJUMzJUE4Y2VzIiB0YXJnZXQ9Il9ibGFuayIgY2xhc3M9InNvY2lhbF9mYWNlYm9vayI+PC9hPgogICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vdHdpdHRlci5jb20vaG9tZT9zdGF0dXM9NCtwaSVDMyVBOGNlc2h0dHBzJTNBJTJGJTJGd3d3LmNhYmluZXQta21pLmNvbSUyRmVzdGF0ZV9wcm9wZXJ0eSUyRjQtcGllY2VzJTJGIiBjbGFzcz0ic29jaWFsX3R3ZWV0IiB0YXJnZXQ9Il9ibGFuayI+PC9hPgogICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vcGludGVyZXN0LmNvbS9waW4vY3JlYXRlL2J1dHRvbi8/dXJsPWh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS9lc3RhdGVfcHJvcGVydHkvNC1waWVjZXMvJmFtcDttZWRpYT1odHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vd3AtY29udGVudC91cGxvYWRzLzIwMjAvMDIvMTU3MDg5OTE4Nl9WQTE5NjRfMTRfbC5qcGcmYW1wO2Rlc2NyaXB0aW9uPTQrcGklQzMlQThjZXMiIHRhcmdldD0iX2JsYW5rIiBjbGFzcz0ic29jaWFsX3BpbnRlcmVzdCI+PC9hPgogICAgICAgIDxhIGhyZWY9Im1haWx0bzplbWFpbEBlbWFpbC5jb20/aHR0cDovL3N1YmplY3Q9NCtwaSVDMyVBOGNlcyYjMDM4O2JvZHk9aHR0cHMlM0ElMkYlMkZ3d3cuY2FiaW5ldC1rbWkuY29tJTJGZXN0YXRlX3Byb3BlcnR5JTJGNC1waWVjZXMlMkYiIGRhdGEtYWN0aW9uPSJzaGFyZSBlbWFpbCIgIGNsYXNzPSJzb2NpYWxfZW1haWwiPjwvYT4KCiAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InNoYXJlX2xpc3QiICBkYXRhLW9yaWdpbmFsLXRpdGxlPSJwYXJ0YWdlciIgPjwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iaWNvbi1mYXYgaWNvbi1mYXYtb2ZmIiBkYXRhLW9yaWdpbmFsLXRpdGxlPSJham91dGVyIGF1eCBGYXZvcmlzIiBkYXRhLXBvc3RpZD0iMjIzODciPjwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iY29tcGFyZS1hY3Rpb24iIGRhdGEtb3JpZ2luYWwtdGl0bGU9ImNvbXBhcmVyIiBkYXRhLXBpbWFnZT0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL3dwLWNvbnRlbnQvdXBsb2Fkcy8yMDIwLzAyLzE1NzA4OTkxODZfVkExOTY0XzE0X2wtMTQzeDgzLmpwZyIgZGF0YS1waWQ9IjIyMzg3Ij48L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4gICAgICAgIDwvZGl2PiAgICAgICAgICAgICAKICAgIDwvZGl2PiAgCgoKCjxkaXYgY2xhc3M9ImNvbC1tZC00IGhhc19wcm9wX3NsaWRlciAgbGlzdGluZ193cmFwcGVyIiBkYXRhLW9yZz0iNCIgZGF0YS1saXN0aWQ9IjIyMzYyIiA+IAogICAgPGRpdiBjbGFzcz0icHJvcGVydHlfbGlzdGluZyAgICIgZGF0YS1saW5rPSIiPgogICAgICAgIAogICAgICAgIDxkaXYgY2xhc3M9Imxpc3RpbmctdW5pdC1pbWctd3JhcHBlciI+PGRpdiBjbGFzcz0icHJvcF9uZXdfZGV0YWlscyI+PGRpdiBjbGFzcz0icHJvcF9uZXdfZGV0YWlsc19iYWNrIj48L2Rpdj48ZGl2IGNsYXNzPSJwcm9wZXJ0eV9tZWRpYSI+PGkgY2xhc3M9ImZhIGZhLWNhbWVyYSIgYXJpYS1oaWRkZW49InRydWUiPjwvaT4gMTUKICAgICAgICAgICAgICAgIDwvZGl2PjxkaXYgY2xhc3M9InByb3BlcnR5X2xvY2F0aW9uX2ltYWdlIj4gCiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb3BlcnR5X21hcmtlciI+PC9zcGFuPjxhIGhyZWY9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS9wcm9wZXJ0eV9jaXR5Lzc1MDEwLyI+NzUwMTA8L2E+LCA8YSBocmVmPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vcHJvcGVydHlfY2l0eS9wYXJpcy0yLyI+UGFyaXM8L2E+PC9kaXY+PC9kaXY+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBpZD0icHJvcGVydHlfdW5pdF9jYXJvdXNlbF81ZTg0YTZhMTdkYmM2IiBjbGFzcz0iY2Fyb3VzZWwgcHJvcGVydHlfdW5pdF9jYXJvdXNlbCBzbGlkZSAiIGRhdGEtcmlkZT0iY2Fyb3VzZWwiIGRhdGEtaW50ZXJ2YWw9ImZhbHNlIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY2Fyb3VzZWwtaW5uZXIiPiAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iaXRlbSBhY3RpdmUiPiAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vZXN0YXRlX3Byb3BlcnR5LzYtcGllY2VzLWNoYW1icmUtZGUtc2VydmljZS0yLWNhdmVzLyI+PGltZyB3aWR0aD0iNTI1IiBoZWlnaHQ9IjI5NyIgc3JjPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vd3AtY29udGVudC91cGxvYWRzLzIwMjAvMDIvMTU2OTUwMjM4OF9WQTE5NTRfN19sLTUyNXgyOTcuanBnIiBjbGFzcz0ibGF6eWxvYWQgaW1nLXJlc3BvbnNpdmUgd3AtcG9zdC1pbWFnZSIgYWx0PSIiIGRhdGEtb3JpZ2luYWw9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS93cC1jb250ZW50L3VwbG9hZHMvMjAyMC8wMi8xNTY5NTAyMzg4X1ZBMTk1NF83X2wtNTI1eDI5Ny5qcGciIHNyY3NldD0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL3dwLWNvbnRlbnQvdXBsb2Fkcy8yMDIwLzAyLzE1Njk1MDIzODhfVkExOTU0XzdfbC01MjV4Mjk3LmpwZyA1MjV3LCBodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vd3AtY29udGVudC91cGxvYWRzLzIwMjAvMDIvMTU2OTUwMjM4OF9WQTE5NTRfN19sLTI1NXgxNDMuanBnIDI1NXciIHNpemVzPSIobWF4LXdpZHRoOiA1MjVweCkgMTAwdncsIDUyNXB4IiAvPjwvYT4gICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJpdGVtIGxhenktbG9hZC1pdGVtIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vZXN0YXRlX3Byb3BlcnR5LzYtcGllY2VzLWNoYW1icmUtZGUtc2VydmljZS0yLWNhdmVzLyI+PGltZyAgZGF0YS1sYXp5LWxvYWQtc3JjPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vd3AtY29udGVudC91cGxvYWRzLzIwMjAvMDIvMTU2OTUwMTg4Nl9WQTE5NTRfMl9sLTUyNXgzMjguanBnIiBhbHQ9IjYgUElFQ0VTICsgQ0hBTUJSRSBERSBTRVJWSUNFICsgMiBDQVZFUyIgY2xhc3M9ImltZy1yZXNwb25zaXZlIiAvPjwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PjxkaXYgY2xhc3M9Iml0ZW0gbGF6eS1sb2FkLWl0ZW0iPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS9lc3RhdGVfcHJvcGVydHkvNi1waWVjZXMtY2hhbWJyZS1kZS1zZXJ2aWNlLTItY2F2ZXMvIj48aW1nICBkYXRhLWxhenktbG9hZC1zcmM9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS93cC1jb250ZW50L3VwbG9hZHMvMjAyMC8wMi8xNTY5NTAxODkwX1ZBMTk1NF8zX2wtNTI1eDMyOC5qcGciIGFsdD0iNiBQSUVDRVMgKyBDSEFNQlJFIERFIFNFUlZJQ0UgKyAyIENBVkVTIiBjbGFzcz0iaW1nLXJlc3BvbnNpdmUiIC8+PC9hPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+PGRpdiBjbGFzcz0iaXRlbSBsYXp5LWxvYWQtaXRlbSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL2VzdGF0ZV9wcm9wZXJ0eS82LXBpZWNlcy1jaGFtYnJlLWRlLXNlcnZpY2UtMi1jYXZlcy8iPjxpbWcgIGRhdGEtbGF6eS1sb2FkLXNyYz0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL3dwLWNvbnRlbnQvdXBsb2Fkcy8yMDIwLzAyLzE1Njk1MDE5MzZfVkExOTU0XzE0X2wtNTI1eDMyOC5qcGciIGFsdD0iNiBQSUVDRVMgKyBDSEFNQlJFIERFIFNFUlZJQ0UgKyAyIENBVkVTIiBjbGFzcz0iaW1nLXJlc3BvbnNpdmUiIC8+PC9hPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+PGRpdiBjbGFzcz0iaXRlbSBsYXp5LWxvYWQtaXRlbSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL2VzdGF0ZV9wcm9wZXJ0eS82LXBpZWNlcy1jaGFtYnJlLWRlLXNlcnZpY2UtMi1jYXZlcy8iPjxpbWcgIGRhdGEtbGF6eS1sb2FkLXNyYz0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL3dwLWNvbnRlbnQvdXBsb2Fkcy8yMDIwLzAyLzE1Njk1MDE5NDFfVkExOTU0XzE1X2wtNTI1eDMyOC5qcGciIGFsdD0iNiBQSUVDRVMgKyBDSEFNQlJFIERFIFNFUlZJQ0UgKyAyIENBVkVTIiBjbGFzcz0iaW1nLXJlc3BvbnNpdmUiIC8+PC9hPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+PGRpdiBjbGFzcz0iaXRlbSBsYXp5LWxvYWQtaXRlbSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL2VzdGF0ZV9wcm9wZXJ0eS82LXBpZWNlcy1jaGFtYnJlLWRlLXNlcnZpY2UtMi1jYXZlcy8iPjxpbWcgIGRhdGEtbGF6eS1sb2FkLXNyYz0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL3dwLWNvbnRlbnQvdXBsb2Fkcy8yMDIwLzAyLzE1Njk1MDE5NDhfVkExOTU0XzE3X2wtNTI1eDMyOC5qcGciIGFsdD0iNiBQSUVDRVMgKyBDSEFNQlJFIERFIFNFUlZJQ0UgKyAyIENBVkVTIiBjbGFzcz0iaW1nLXJlc3BvbnNpdmUiIC8+PC9hPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+PGRpdiBjbGFzcz0iaXRlbSBsYXp5LWxvYWQtaXRlbSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL2VzdGF0ZV9wcm9wZXJ0eS82LXBpZWNlcy1jaGFtYnJlLWRlLXNlcnZpY2UtMi1jYXZlcy8iPjxpbWcgIGRhdGEtbGF6eS1sb2FkLXNyYz0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL3dwLWNvbnRlbnQvdXBsb2Fkcy8yMDIwLzAyLzE1Njk1MDE5NDRfVkExOTU0XzE2X2wtNTI1eDMyOC5qcGciIGFsdD0iNiBQSUVDRVMgKyBDSEFNQlJFIERFIFNFUlZJQ0UgKyAyIENBVkVTIiBjbGFzcz0iaW1nLXJlc3BvbnNpdmUiIC8+PC9hPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+PGRpdiBjbGFzcz0iaXRlbSBsYXp5LWxvYWQtaXRlbSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL2VzdGF0ZV9wcm9wZXJ0eS82LXBpZWNlcy1jaGFtYnJlLWRlLXNlcnZpY2UtMi1jYXZlcy8iPjxpbWcgIGRhdGEtbGF6eS1sb2FkLXNyYz0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL3dwLWNvbnRlbnQvdXBsb2Fkcy8yMDIwLzAyLzE1Njk1MDE4ODNfVkExOTU0XzFfbC01MjV4MzI4LmpwZyIgYWx0PSI2IFBJRUNFUyArIENIQU1CUkUgREUgU0VSVklDRSArIDIgQ0FWRVMiIGNsYXNzPSJpbWctcmVzcG9uc2l2ZSIgLz48L2E+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj48ZGl2IGNsYXNzPSJpdGVtIGxhenktbG9hZC1pdGVtIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vZXN0YXRlX3Byb3BlcnR5LzYtcGllY2VzLWNoYW1icmUtZGUtc2VydmljZS0yLWNhdmVzLyI+PGltZyAgZGF0YS1sYXp5LWxvYWQtc3JjPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vd3AtY29udGVudC91cGxvYWRzLzIwMjAvMDIvMTU2OTUwMTkyOF9WQTE5NTRfMTJfbC01MjV4MzI4LmpwZyIgYWx0PSI2IFBJRUNFUyArIENIQU1CUkUgREUgU0VSVklDRSArIDIgQ0FWRVMiIGNsYXNzPSJpbWctcmVzcG9uc2l2ZSIgLz48L2E+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj48ZGl2IGNsYXNzPSJpdGVtIGxhenktbG9hZC1pdGVtIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vZXN0YXRlX3Byb3BlcnR5LzYtcGllY2VzLWNoYW1icmUtZGUtc2VydmljZS0yLWNhdmVzLyI+PGltZyAgZGF0YS1sYXp5LWxvYWQtc3JjPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vd3AtY29udGVudC91cGxvYWRzLzIwMjAvMDIvMTU2OTUwMTkxNl9WQTE5NTRfMTBfbC01MjV4MzI4LmpwZyIgYWx0PSI2IFBJRUNFUyArIENIQU1CUkUgREUgU0VSVklDRSArIDIgQ0FWRVMiIGNsYXNzPSJpbWctcmVzcG9uc2l2ZSIgLz48L2E+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj48ZGl2IGNsYXNzPSJpdGVtIGxhenktbG9hZC1pdGVtIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vZXN0YXRlX3Byb3BlcnR5LzYtcGllY2VzLWNoYW1icmUtZGUtc2VydmljZS0yLWNhdmVzLyI+PGltZyAgZGF0YS1sYXp5LWxvYWQtc3JjPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vd3AtY29udGVudC91cGxvYWRzLzIwMjAvMDIvMTU2OTUwMTg5M19WQTE5NTRfNF9sLTQ2NngzMjguanBnIiBhbHQ9IjYgUElFQ0VTICsgQ0hBTUJSRSBERSBTRVJWSUNFICsgMiBDQVZFUyIgY2xhc3M9ImltZy1yZXNwb25zaXZlIiAvPjwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PjxkaXYgY2xhc3M9Iml0ZW0gbGF6eS1sb2FkLWl0ZW0iPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS9lc3RhdGVfcHJvcGVydHkvNi1waWVjZXMtY2hhbWJyZS1kZS1zZXJ2aWNlLTItY2F2ZXMvIj48aW1nICBkYXRhLWxhenktbG9hZC1zcmM9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS93cC1jb250ZW50L3VwbG9hZHMvMjAyMC8wMi8xNTY5NTAxOTAwX1ZBMTk1NF82X2wtNTI1eDMyOC5qcGciIGFsdD0iNiBQSUVDRVMgKyBDSEFNQlJFIERFIFNFUlZJQ0UgKyAyIENBVkVTIiBjbGFzcz0iaW1nLXJlc3BvbnNpdmUiIC8+PC9hPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+PGRpdiBjbGFzcz0iaXRlbSBsYXp5LWxvYWQtaXRlbSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL2VzdGF0ZV9wcm9wZXJ0eS82LXBpZWNlcy1jaGFtYnJlLWRlLXNlcnZpY2UtMi1jYXZlcy8iPjxpbWcgIGRhdGEtbGF6eS1sb2FkLXNyYz0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL3dwLWNvbnRlbnQvdXBsb2Fkcy8yMDIwLzAyLzE1Njk1MDE4OTZfVkExOTU0XzVfbC01MjV4MzI4LmpwZyIgYWx0PSI2IFBJRUNFUyArIENIQU1CUkUgREUgU0VSVklDRSArIDIgQ0FWRVMiIGNsYXNzPSJpbWctcmVzcG9uc2l2ZSIgLz48L2E+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj48ZGl2IGNsYXNzPSJpdGVtIGxhenktbG9hZC1pdGVtIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vZXN0YXRlX3Byb3BlcnR5LzYtcGllY2VzLWNoYW1icmUtZGUtc2VydmljZS0yLWNhdmVzLyI+PGltZyAgZGF0YS1sYXp5LWxvYWQtc3JjPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vd3AtY29udGVudC91cGxvYWRzLzIwMjAvMDIvMTU2OTUwMTkzM19WQTE5NTRfMTNfbC01MjV4MzI4LmpwZyIgYWx0PSI2IFBJRUNFUyArIENIQU1CUkUgREUgU0VSVklDRSArIDIgQ0FWRVMiIGNsYXNzPSJpbWctcmVzcG9uc2l2ZSIgLz48L2E+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj48ZGl2IGNsYXNzPSJpdGVtIGxhenktbG9hZC1pdGVtIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vZXN0YXRlX3Byb3BlcnR5LzYtcGllY2VzLWNoYW1icmUtZGUtc2VydmljZS0yLWNhdmVzLyI+PGltZyAgZGF0YS1sYXp5LWxvYWQtc3JjPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vd3AtY29udGVudC91cGxvYWRzLzIwMjAvMDIvMTU2OTUwMTkyMV9WQTE5NTRfMTFfbC01MjV4MzI4LmpwZyIgYWx0PSI2IFBJRUNFUyArIENIQU1CUkUgREUgU0VSVklDRSArIDIgQ0FWRVMiIGNsYXNzPSJpbWctcmVzcG9uc2l2ZSIgLz48L2E+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vZXN0YXRlX3Byb3BlcnR5LzYtcGllY2VzLWNoYW1icmUtZGUtc2VydmljZS0yLWNhdmVzLyI+IDwvYT48YSBjbGFzcz0ibGVmdCAgY2Fyb3VzZWwtY29udHJvbCIgaHJlZj0iI3Byb3BlcnR5X3VuaXRfY2Fyb3VzZWxfNWU4NGE2YTE3ZGJjNiIgZGF0YS1zbGlkZT0icHJldiI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9ImRlbW8taWNvbiBpY29uLWxlZnQtb3Blbi1iaWciPjwvaT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBjbGFzcz0icmlnaHQgIGNhcm91c2VsLWNvbnRyb2wiIGhyZWY9IiNwcm9wZXJ0eV91bml0X2Nhcm91c2VsXzVlODRhNmExN2RiYzYiIGRhdGEtc2xpZGU9Im5leHQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJkZW1vLWljb24gaWNvbi1yaWdodC1vcGVuLWJpZyI+PC9pPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICAgIDwvZGl2PjxkaXYgY2xhc3M9InRhZy13cmFwcGVyIj48ZGl2IGNsYXNzPSJzdGF0dXMtd3JhcHBlciI+PGRpdiBjbGFzcz0iYWN0aW9uX3RhZ193cmFwcGVyIFZFTkRVICI+VkVORFU8L2Rpdj48ZGl2IGNsYXNzPSJyaWJib24taW5zaWRlIFZFTkRVIj5WRU5EVTwvZGl2PjwvZGl2PjwvZGl2PjwvZGl2PgoKICAgICAgICAgICAgPGg0PjxhIGhyZWY9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS9lc3RhdGVfcHJvcGVydHkvNi1waWVjZXMtY2hhbWJyZS1kZS1zZXJ2aWNlLTItY2F2ZXMvIj4KICAgICAgICAgICAgICAgIDYgUElFQ0VTICsgQ0hBTUJSRSBERSBTRVJWSUNFICsgMiBDQVZFUyAgICAgICAgICAgICAgICA8L2E+IAogICAgICAgICAgICA8L2g0PiAKICAgICAgICAgICAgCiAgICAgICAgICAgIDxkaXYgY2xhc3M9Imxpc3RpbmdfdW5pdF9wcmljZV93cmFwcGVyIj48c3BhbiBjbGFzcz0icHJpY2VfbGFiZWwiPk5vdXMgY29uc3VsdGVyPC9zcGFuPjwvZGl2PiAgICAgICAgCiAgICAgICAgCiAgICAgICAgCiAgICAgICAgICAgCiAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJsaXN0aW5nX2RldGFpbHMgdGhlX2dyaWRfdmlldyI+CiAgICAgICAgICAgICAgICAgICAgVkExOTU0LUtNSSAmIzgyMTE7IFBBUklTIDEwICYjODIxMTsgUsOJUFVCTElRVUUgJiM4MjExOyBFeGNsdXNpdml0w6kgS01JICYjODIxMTsgQSBwcm94aW1pdMOpIGltbcOpZGlhdGUgZGVzIGNvbW1lcmNlcyAgPGEgaHJlZj0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL2VzdGF0ZV9wcm9wZXJ0eS82LXBpZWNlcy1jaGFtYnJlLWRlLXNlcnZpY2UtMi1jYXZlcy8iIGNsYXNzPSJ1bml0X21vcmVfeCI+W3BsdXNdPC9hPiAgICAgICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJsaXN0aW5nX2RldGFpbHMgdGhlX2xpc3RfdmlldyI+CiAgICAgICAgICAgICAgICAgICAgVkExOTU0LUtNSSAmIzgyMTE7IFBBUklTIDEwICYjODIxMTsgUsOJUFVCTElRVUUgJiM4MjExOyBFeGNsdXNpdml0w6kgS01JICYjODIxMTsgQSBwcm94aW1pdMOpIGltbcOpZGlhdGUgZGVzIGNvbW1lcmNlcyAgPGEgaHJlZj0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL2VzdGF0ZV9wcm9wZXJ0eS82LXBpZWNlcy1jaGFtYnJlLWRlLXNlcnZpY2UtMi1jYXZlcy8iIGNsYXNzPSJ1bml0X21vcmVfeCI+W3BsdXNdPC9hPiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgCgoKICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvcGVydHlfbGlzdGluZ19kZXRhaWxzIj4KICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iaW5mb3Jvb20iPjQ8L3NwYW4+PHNwYW4gY2xhc3M9ImluZm9iYXRoIj4yPC9zcGFuPiA8c3BhbiBjbGFzcz0iaW5mb3NpemUiPjE4NiwwMCBtPHN1cD4yPC9zdXA+PC9zcGFuPjxhIGhyZWY9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS9lc3RhdGVfcHJvcGVydHkvNi1waWVjZXMtY2hhbWJyZS1kZS1zZXJ2aWNlLTItY2F2ZXMvIiBjbGFzcz0idW5pdF9kZXRhaWxzX3giPmluZm8gY29tcGzDqHRlPC9hPiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAKICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvcGVydHlfbG9jYXRpb24iPgogICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvcGVydHlfYWdlbnRfd3JhcHBlciI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb3BlcnR5X2FnZW50X2ltYWdlIiBzdHlsZT0iYmFja2dyb3VuZC1pbWFnZTp1cmwoJ2h0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS93cC1jb250ZW50L3VwbG9hZHMvMjAxOS8wNi9QeXLDqW7DqWVzLTQtMTIweDEyMC5qcGcnKSI+PC9kaXY+IAogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9wZXJ0eV9hZ2VudF9pbWFnZV9zaWduIj48aSBjbGFzcz0iZmEgZmEtdXNlci1jaXJjbGUtbyIgYXJpYS1oaWRkZW49InRydWUiPjwvaT48L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL2VzdGF0ZV9hZ2VudC9rbWktcHlyZW5lZXMvIj5LTUkgUFlSw4lOw4lFUzwvYT4gICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ibGlzdGluZ19hY3Rpb25zIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InNoYXJlX3VuaXQiPgogICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vd3d3LmZhY2Vib29rLmNvbS9zaGFyZXIucGhwP3U9aHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL2VzdGF0ZV9wcm9wZXJ0eS82LXBpZWNlcy1jaGFtYnJlLWRlLXNlcnZpY2UtMi1jYXZlcy8mYW1wO3Q9NitQSUVDRVMrJTJCK0NIQU1CUkUrREUrU0VSVklDRSslMkIrMitDQVZFUyIgdGFyZ2V0PSJfYmxhbmsiIGNsYXNzPSJzb2NpYWxfZmFjZWJvb2siPjwvYT4KICAgICAgICA8YSBocmVmPSJodHRwczovL3R3aXR0ZXIuY29tL2hvbWU/c3RhdHVzPTYrUElFQ0VTKyUyQitDSEFNQlJFK0RFK1NFUlZJQ0UrJTJCKzIrQ0FWRVNodHRwcyUzQSUyRiUyRnd3dy5jYWJpbmV0LWttaS5jb20lMkZlc3RhdGVfcHJvcGVydHklMkY2LXBpZWNlcy1jaGFtYnJlLWRlLXNlcnZpY2UtMi1jYXZlcyUyRiIgY2xhc3M9InNvY2lhbF90d2VldCIgdGFyZ2V0PSJfYmxhbmsiPjwvYT4KICAgICAgICA8YSBocmVmPSJodHRwczovL3BpbnRlcmVzdC5jb20vcGluL2NyZWF0ZS9idXR0b24vP3VybD1odHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vZXN0YXRlX3Byb3BlcnR5LzYtcGllY2VzLWNoYW1icmUtZGUtc2VydmljZS0yLWNhdmVzLyZhbXA7bWVkaWE9aHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL3dwLWNvbnRlbnQvdXBsb2Fkcy8yMDIwLzAyLzE1Njk1MDIzODhfVkExOTU0XzdfbC5qcGcmYW1wO2Rlc2NyaXB0aW9uPTYrUElFQ0VTKyUyQitDSEFNQlJFK0RFK1NFUlZJQ0UrJTJCKzIrQ0FWRVMiIHRhcmdldD0iX2JsYW5rIiBjbGFzcz0ic29jaWFsX3BpbnRlcmVzdCI+PC9hPgogICAgICAgIDxhIGhyZWY9Im1haWx0bzplbWFpbEBlbWFpbC5jb20/aHR0cDovL3N1YmplY3Q9NitQSUVDRVMrJTJCK0NIQU1CUkUrREUrU0VSVklDRSslMkIrMitDQVZFUyYjMDM4O2JvZHk9aHR0cHMlM0ElMkYlMkZ3d3cuY2FiaW5ldC1rbWkuY29tJTJGZXN0YXRlX3Byb3BlcnR5JTJGNi1waWVjZXMtY2hhbWJyZS1kZS1zZXJ2aWNlLTItY2F2ZXMlMkYiIGRhdGEtYWN0aW9uPSJzaGFyZSBlbWFpbCIgIGNsYXNzPSJzb2NpYWxfZW1haWwiPjwvYT4KCiAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InNoYXJlX2xpc3QiICBkYXRhLW9yaWdpbmFsLXRpdGxlPSJwYXJ0YWdlciIgPjwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iaWNvbi1mYXYgaWNvbi1mYXYtb2ZmIiBkYXRhLW9yaWdpbmFsLXRpdGxlPSJham91dGVyIGF1eCBGYXZvcmlzIiBkYXRhLXBvc3RpZD0iMjIzNjIiPjwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iY29tcGFyZS1hY3Rpb24iIGRhdGEtb3JpZ2luYWwtdGl0bGU9ImNvbXBhcmVyIiBkYXRhLXBpbWFnZT0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL3dwLWNvbnRlbnQvdXBsb2Fkcy8yMDIwLzAyLzE1Njk1MDIzODhfVkExOTU0XzdfbC0xNDN4ODMuanBnIiBkYXRhLXBpZD0iMjIzNjIiPjwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PiAgICAgICAgPC9kaXY+ICAgICAgICAgICAgIAogICAgPC9kaXY+ICAKCgoKPGRpdiBjbGFzcz0iY29sLW1kLTQgaGFzX3Byb3Bfc2xpZGVyICBsaXN0aW5nX3dyYXBwZXIiIGRhdGEtb3JnPSI0IiBkYXRhLWxpc3RpZD0iMjIzNTciID4gCiAgICA8ZGl2IGNsYXNzPSJwcm9wZXJ0eV9saXN0aW5nICAgIiBkYXRhLWxpbms9IiI+CiAgICAgICAgCiAgICAgICAgPGRpdiBjbGFzcz0ibGlzdGluZy11bml0LWltZy13cmFwcGVyIj48ZGl2IGNsYXNzPSJwcm9wX25ld19kZXRhaWxzIj48ZGl2IGNsYXNzPSJwcm9wX25ld19kZXRhaWxzX2JhY2siPjwvZGl2PjxkaXYgY2xhc3M9InByb3BlcnR5X21lZGlhIj48aSBjbGFzcz0iZmEgZmEtY2FtZXJhIiBhcmlhLWhpZGRlbj0idHJ1ZSI+PC9pPiA0CiAgICAgICAgICAgICAgICA8L2Rpdj48ZGl2IGNsYXNzPSJwcm9wZXJ0eV9sb2NhdGlvbl9pbWFnZSI+IAogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9wZXJ0eV9tYXJrZXIiPjwvc3Bhbj48YSBocmVmPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vcHJvcGVydHlfY2l0eS83NTAxMS8iPjc1MDExPC9hPiwgPGEgaHJlZj0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL3Byb3BlcnR5X2NpdHkvcGFyaXMtMi8iPlBhcmlzPC9hPjwvZGl2PjwvZGl2PgogICAgICAgICAgICAgICAgICAgIDxkaXYgaWQ9InByb3BlcnR5X3VuaXRfY2Fyb3VzZWxfNWU4NGE2YTE4MWRmNCIgY2xhc3M9ImNhcm91c2VsIHByb3BlcnR5X3VuaXRfY2Fyb3VzZWwgc2xpZGUgIiBkYXRhLXJpZGU9ImNhcm91c2VsIiBkYXRhLWludGVydmFsPSJmYWxzZSI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNhcm91c2VsLWlubmVyIj4gICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Iml0ZW0gYWN0aXZlIj4gICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL2VzdGF0ZV9wcm9wZXJ0eS8yLXBpZWNlcy0yMi8iPjxpbWcgd2lkdGg9IjUyNSIgaGVpZ2h0PSIzMjgiIHNyYz0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL3dwLWNvbnRlbnQvdXBsb2Fkcy8yMDIwLzAyLzE1NjkzMzI4OTRfVkExOTQ4XzFfbC01MjV4MzI4LmpwZyIgY2xhc3M9Imxhenlsb2FkIGltZy1yZXNwb25zaXZlIHdwLXBvc3QtaW1hZ2UiIGFsdD0iIiBkYXRhLW9yaWdpbmFsPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vd3AtY29udGVudC91cGxvYWRzLzIwMjAvMDIvMTU2OTMzMjg5NF9WQTE5NDhfMV9sLTUyNXgzMjguanBnIiAvPjwvYT4gICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJpdGVtIGxhenktbG9hZC1pdGVtIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vZXN0YXRlX3Byb3BlcnR5LzItcGllY2VzLTIyLyI+PGltZyAgZGF0YS1sYXp5LWxvYWQtc3JjPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vd3AtY29udGVudC91cGxvYWRzLzIwMjAvMDIvMTU2OTMzMjkxMV9WQTE5NDhfMl9sLTUyNXgzMjguanBnIiBhbHQ9IjIgcGnDqGNlcyIgY2xhc3M9ImltZy1yZXNwb25zaXZlIiAvPjwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PjxkaXYgY2xhc3M9Iml0ZW0gbGF6eS1sb2FkLWl0ZW0iPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS9lc3RhdGVfcHJvcGVydHkvMi1waWVjZXMtMjIvIj48aW1nICBkYXRhLWxhenktbG9hZC1zcmM9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS93cC1jb250ZW50L3VwbG9hZHMvMjAyMC8wMi8xNTY5MzMyOTI2X1ZBMTk0OF8zX2wtNTI1eDMyOC5qcGciIGFsdD0iMiBwacOoY2VzIiBjbGFzcz0iaW1nLXJlc3BvbnNpdmUiIC8+PC9hPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+PGRpdiBjbGFzcz0iaXRlbSBsYXp5LWxvYWQtaXRlbSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL2VzdGF0ZV9wcm9wZXJ0eS8yLXBpZWNlcy0yMi8iPjxpbWcgIGRhdGEtbGF6eS1sb2FkLXNyYz0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL3dwLWNvbnRlbnQvdXBsb2Fkcy8yMDIwLzAyLzE1NjkzMzI5NDFfVkExOTQ4XzRfbC01MjV4MzI4LmpwZyIgYWx0PSIyIHBpw6hjZXMiIGNsYXNzPSJpbWctcmVzcG9uc2l2ZSIgLz48L2E+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vZXN0YXRlX3Byb3BlcnR5LzItcGllY2VzLTIyLyI+IDwvYT48YSBjbGFzcz0ibGVmdCAgY2Fyb3VzZWwtY29udHJvbCIgaHJlZj0iI3Byb3BlcnR5X3VuaXRfY2Fyb3VzZWxfNWU4NGE2YTE4MWRmNCIgZGF0YS1zbGlkZT0icHJldiI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9ImRlbW8taWNvbiBpY29uLWxlZnQtb3Blbi1iaWciPjwvaT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBjbGFzcz0icmlnaHQgIGNhcm91c2VsLWNvbnRyb2wiIGhyZWY9IiNwcm9wZXJ0eV91bml0X2Nhcm91c2VsXzVlODRhNmExODFkZjQiIGRhdGEtc2xpZGU9Im5leHQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJkZW1vLWljb24gaWNvbi1yaWdodC1vcGVuLWJpZyI+PC9pPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICAgIDwvZGl2PjxkaXYgY2xhc3M9InRhZy13cmFwcGVyIj48ZGl2IGNsYXNzPSJzdGF0dXMtd3JhcHBlciI+PGRpdiBjbGFzcz0iYWN0aW9uX3RhZ193cmFwcGVyIFZFTkRVICI+VkVORFU8L2Rpdj48ZGl2IGNsYXNzPSJyaWJib24taW5zaWRlIFZFTkRVIj5WRU5EVTwvZGl2PjwvZGl2PjwvZGl2PjwvZGl2PgoKICAgICAgICAgICAgPGg0PjxhIGhyZWY9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS9lc3RhdGVfcHJvcGVydHkvMi1waWVjZXMtMjIvIj4KICAgICAgICAgICAgICAgIDIgcGnDqGNlcyAgICAgICAgICAgICAgICA8L2E+IAogICAgICAgICAgICA8L2g0PiAKICAgICAgICAgICAgCiAgICAgICAgICAgIDxkaXYgY2xhc3M9Imxpc3RpbmdfdW5pdF9wcmljZV93cmFwcGVyIj48c3BhbiBjbGFzcz0icHJpY2VfbGFiZWwiPk5vdXMgY29uc3VsdGVyPC9zcGFuPjwvZGl2PiAgICAgICAgCiAgICAgICAgCiAgICAgICAgCiAgICAgICAgICAgCiAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJsaXN0aW5nX2RldGFpbHMgdGhlX2dyaWRfdmlldyI+CiAgICAgICAgICAgICAgICAgICAgVkExOTQ4LUtNSSAmIzgyMTE7IEF1IHBpZWQgZHUgbcOpdHJvIE9iZXJrYW1wZiwgS01JIHZvdXMgcHJvcG9zZSBkZSB2aXNpdGVyIGNlIGNoYXJtYW50IDIgcGnDqGNlcyBhdSBzZWluIGQmIzgyMTc7dW4gIDxhIGhyZWY9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS9lc3RhdGVfcHJvcGVydHkvMi1waWVjZXMtMjIvIiBjbGFzcz0idW5pdF9tb3JlX3giPltwbHVzXTwvYT4gICAgICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ibGlzdGluZ19kZXRhaWxzIHRoZV9saXN0X3ZpZXciPgogICAgICAgICAgICAgICAgICAgIFZBMTk0OC1LTUkgJiM4MjExOyBBdSBwaWVkIGR1IG3DqXRybyBPYmVya2FtcGYsIEtNSSB2b3VzIHByb3Bvc2UgZGUgdmlzaXRlciBjZSBjaGFybWFudCAyIHBpw6hjZXMgYXUgc2VpbiBkJiM4MjE3O3VuICA8YSBocmVmPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vZXN0YXRlX3Byb3BlcnR5LzItcGllY2VzLTIyLyIgY2xhc3M9InVuaXRfbW9yZV94Ij5bcGx1c108L2E+ICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAKCgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9wZXJ0eV9saXN0aW5nX2RldGFpbHMiPgogICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJpbmZvcm9vbSI+MTwvc3Bhbj48c3BhbiBjbGFzcz0iaW5mb2JhdGgiPjE8L3NwYW4+IDxzcGFuIGNsYXNzPSJpbmZvc2l6ZSI+MzQsMDAgbTxzdXA+Mjwvc3VwPjwvc3Bhbj48YSBocmVmPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vZXN0YXRlX3Byb3BlcnR5LzItcGllY2VzLTIyLyIgY2xhc3M9InVuaXRfZGV0YWlsc194Ij5pbmZvIGNvbXBsw6h0ZTwvYT4gICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgCiAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb3BlcnR5X2xvY2F0aW9uIj4KICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb3BlcnR5X2FnZW50X3dyYXBwZXIiPgogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9wZXJ0eV9hZ2VudF9pbWFnZSIgc3R5bGU9ImJhY2tncm91bmQtaW1hZ2U6dXJsKCdodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vd3AtY29udGVudC91cGxvYWRzLzIwMTkvMDYvUHlyw6luw6llcy00LTEyMHgxMjAuanBnJykiPjwvZGl2PiAKICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvcGVydHlfYWdlbnRfaW1hZ2Vfc2lnbiI+PGkgY2xhc3M9ImZhIGZhLXVzZXItY2lyY2xlLW8iIGFyaWEtaGlkZGVuPSJ0cnVlIj48L2k+PC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS9lc3RhdGVfYWdlbnQva21pLXB5cmVuZWVzLyI+S01JIFBZUsOJTsOJRVM8L2E+ICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Imxpc3RpbmdfYWN0aW9ucyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJzaGFyZV91bml0Ij4KICAgICAgICA8YSBocmVmPSJodHRwczovL3d3dy5mYWNlYm9vay5jb20vc2hhcmVyLnBocD91PWh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS9lc3RhdGVfcHJvcGVydHkvMi1waWVjZXMtMjIvJmFtcDt0PTIrcGklQzMlQThjZXMiIHRhcmdldD0iX2JsYW5rIiBjbGFzcz0ic29jaWFsX2ZhY2Vib29rIj48L2E+CiAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly90d2l0dGVyLmNvbS9ob21lP3N0YXR1cz0yK3BpJUMzJUE4Y2VzaHR0cHMlM0ElMkYlMkZ3d3cuY2FiaW5ldC1rbWkuY29tJTJGZXN0YXRlX3Byb3BlcnR5JTJGMi1waWVjZXMtMjIlMkYiIGNsYXNzPSJzb2NpYWxfdHdlZXQiIHRhcmdldD0iX2JsYW5rIj48L2E+CiAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9waW50ZXJlc3QuY29tL3Bpbi9jcmVhdGUvYnV0dG9uLz91cmw9aHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL2VzdGF0ZV9wcm9wZXJ0eS8yLXBpZWNlcy0yMi8mYW1wO21lZGlhPWh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS93cC1jb250ZW50L3VwbG9hZHMvMjAyMC8wMi8xNTY5MzMyODk0X1ZBMTk0OF8xX2wuanBnJmFtcDtkZXNjcmlwdGlvbj0yK3BpJUMzJUE4Y2VzIiB0YXJnZXQ9Il9ibGFuayIgY2xhc3M9InNvY2lhbF9waW50ZXJlc3QiPjwvYT4KICAgICAgICA8YSBocmVmPSJtYWlsdG86ZW1haWxAZW1haWwuY29tP2h0dHA6Ly9zdWJqZWN0PTIrcGklQzMlQThjZXMmIzAzODtib2R5PWh0dHBzJTNBJTJGJTJGd3d3LmNhYmluZXQta21pLmNvbSUyRmVzdGF0ZV9wcm9wZXJ0eSUyRjItcGllY2VzLTIyJTJGIiBkYXRhLWFjdGlvbj0ic2hhcmUgZW1haWwiICBjbGFzcz0ic29jaWFsX2VtYWlsIj48L2E+CgogICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJzaGFyZV9saXN0IiAgZGF0YS1vcmlnaW5hbC10aXRsZT0icGFydGFnZXIiID48L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9Imljb24tZmF2IGljb24tZmF2LW9mZiIgZGF0YS1vcmlnaW5hbC10aXRsZT0iYWpvdXRlciBhdXggRmF2b3JpcyIgZGF0YS1wb3N0aWQ9IjIyMzU3Ij48L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImNvbXBhcmUtYWN0aW9uIiBkYXRhLW9yaWdpbmFsLXRpdGxlPSJjb21wYXJlciIgZGF0YS1waW1hZ2U9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS93cC1jb250ZW50L3VwbG9hZHMvMjAyMC8wMi8xNTY5MzMyODk0X1ZBMTk0OF8xX2wtMTQzeDgzLmpwZyIgZGF0YS1waWQ9IjIyMzU3Ij48L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4gICAgICAgIDwvZGl2PiAgICAgICAgICAgICAKICAgIDwvZGl2PiAgCgoKCjxkaXYgY2xhc3M9ImNvbC1tZC00IGhhc19wcm9wX3NsaWRlciAgbGlzdGluZ193cmFwcGVyIiBkYXRhLW9yZz0iNCIgZGF0YS1saXN0aWQ9IjIyMzQ2IiA+IAogICAgPGRpdiBjbGFzcz0icHJvcGVydHlfbGlzdGluZyAgICIgZGF0YS1saW5rPSIiPgogICAgICAgIAogICAgICAgIDxkaXYgY2xhc3M9Imxpc3RpbmctdW5pdC1pbWctd3JhcHBlciI+PGRpdiBjbGFzcz0icHJvcF9uZXdfZGV0YWlscyI+PGRpdiBjbGFzcz0icHJvcF9uZXdfZGV0YWlsc19iYWNrIj48L2Rpdj48ZGl2IGNsYXNzPSJwcm9wZXJ0eV9tZWRpYSI+PGkgY2xhc3M9ImZhIGZhLWNhbWVyYSIgYXJpYS1oaWRkZW49InRydWUiPjwvaT4gMTAKICAgICAgICAgICAgICAgIDwvZGl2PjxkaXYgY2xhc3M9InByb3BlcnR5X2xvY2F0aW9uX2ltYWdlIj4gCiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb3BlcnR5X21hcmtlciI+PC9zcGFuPjxhIGhyZWY9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS9wcm9wZXJ0eV9jaXR5Lzc1MDIwLyI+NzUwMjA8L2E+LCA8YSBocmVmPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vcHJvcGVydHlfY2l0eS9wYXJpcy0yLyI+UGFyaXM8L2E+PC9kaXY+PC9kaXY+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBpZD0icHJvcGVydHlfdW5pdF9jYXJvdXNlbF81ZTg0YTZhMTg1OWJlIiBjbGFzcz0iY2Fyb3VzZWwgcHJvcGVydHlfdW5pdF9jYXJvdXNlbCBzbGlkZSAiIGRhdGEtcmlkZT0iY2Fyb3VzZWwiIGRhdGEtaW50ZXJ2YWw9ImZhbHNlIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY2Fyb3VzZWwtaW5uZXIiPiAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iaXRlbSBhY3RpdmUiPiAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vZXN0YXRlX3Byb3BlcnR5L2R1cGxleGphcmRpbi8iPjxpbWcgd2lkdGg9IjUyNSIgaGVpZ2h0PSIzMjgiIHNyYz0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL3dwLWNvbnRlbnQvdXBsb2Fkcy8yMDIwLzAyLzE1Njg4MTY0ODNfVkExOTQyXzFfbC01MjV4MzI4LmpwZyIgY2xhc3M9Imxhenlsb2FkIGltZy1yZXNwb25zaXZlIHdwLXBvc3QtaW1hZ2UiIGFsdD0iIiBkYXRhLW9yaWdpbmFsPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vd3AtY29udGVudC91cGxvYWRzLzIwMjAvMDIvMTU2ODgxNjQ4M19WQTE5NDJfMV9sLTUyNXgzMjguanBnIiAvPjwvYT4gICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJpdGVtIGxhenktbG9hZC1pdGVtIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vZXN0YXRlX3Byb3BlcnR5L2R1cGxleGphcmRpbi8iPjxpbWcgIGRhdGEtbGF6eS1sb2FkLXNyYz0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL3dwLWNvbnRlbnQvdXBsb2Fkcy8yMDIwLzAyLzE1Njg4MTY1MDBfVkExOTQyXzJfbC01MjV4MzI4LmpwZyIgYWx0PSJEdXBsZXgramFyZGluIiBjbGFzcz0iaW1nLXJlc3BvbnNpdmUiIC8+PC9hPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+PGRpdiBjbGFzcz0iaXRlbSBsYXp5LWxvYWQtaXRlbSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL2VzdGF0ZV9wcm9wZXJ0eS9kdXBsZXhqYXJkaW4vIj48aW1nICBkYXRhLWxhenktbG9hZC1zcmM9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS93cC1jb250ZW50L3VwbG9hZHMvMjAyMC8wMi8xNTY4ODE2NTE2X1ZBMTk0Ml8zX2wtNTI1eDMyOC5qcGciIGFsdD0iRHVwbGV4K2phcmRpbiIgY2xhc3M9ImltZy1yZXNwb25zaXZlIiAvPjwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PjxkaXYgY2xhc3M9Iml0ZW0gbGF6eS1sb2FkLWl0ZW0iPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS9lc3RhdGVfcHJvcGVydHkvZHVwbGV4amFyZGluLyI+PGltZyAgZGF0YS1sYXp5LWxvYWQtc3JjPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vd3AtY29udGVudC91cGxvYWRzLzIwMjAvMDIvMTU2ODgxNjUzOV9WQTE5NDJfNF9sLTUyNXgzMjguanBnIiBhbHQ9IkR1cGxleCtqYXJkaW4iIGNsYXNzPSJpbWctcmVzcG9uc2l2ZSIgLz48L2E+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj48ZGl2IGNsYXNzPSJpdGVtIGxhenktbG9hZC1pdGVtIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vZXN0YXRlX3Byb3BlcnR5L2R1cGxleGphcmRpbi8iPjxpbWcgIGRhdGEtbGF6eS1sb2FkLXNyYz0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL3dwLWNvbnRlbnQvdXBsb2Fkcy8yMDIwLzAyLzE1Njg4MTY1NzZfVkExOTQyXzVfbC01MjV4MzI4LmpwZyIgYWx0PSJEdXBsZXgramFyZGluIiBjbGFzcz0iaW1nLXJlc3BvbnNpdmUiIC8+PC9hPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+PGRpdiBjbGFzcz0iaXRlbSBsYXp5LWxvYWQtaXRlbSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL2VzdGF0ZV9wcm9wZXJ0eS9kdXBsZXhqYXJkaW4vIj48aW1nICBkYXRhLWxhenktbG9hZC1zcmM9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS93cC1jb250ZW50L3VwbG9hZHMvMjAyMC8wMi8xNTY4ODE2NTg4X1ZBMTk0Ml82X2wtNTI1eDMyOC5qcGciIGFsdD0iRHVwbGV4K2phcmRpbiIgY2xhc3M9ImltZy1yZXNwb25zaXZlIiAvPjwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PjxkaXYgY2xhc3M9Iml0ZW0gbGF6eS1sb2FkLWl0ZW0iPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS9lc3RhdGVfcHJvcGVydHkvZHVwbGV4amFyZGluLyI+PGltZyAgZGF0YS1sYXp5LWxvYWQtc3JjPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vd3AtY29udGVudC91cGxvYWRzLzIwMjAvMDIvMTU2ODgxNjU5N19WQTE5NDJfN19sLTUyNXgzMjguanBnIiBhbHQ9IkR1cGxleCtqYXJkaW4iIGNsYXNzPSJpbWctcmVzcG9uc2l2ZSIgLz48L2E+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj48ZGl2IGNsYXNzPSJpdGVtIGxhenktbG9hZC1pdGVtIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vZXN0YXRlX3Byb3BlcnR5L2R1cGxleGphcmRpbi8iPjxpbWcgIGRhdGEtbGF6eS1sb2FkLXNyYz0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL3dwLWNvbnRlbnQvdXBsb2Fkcy8yMDIwLzAyLzE1Njg4MTY2MDZfVkExOTQyXzhfbC01MjV4MzI4LmpwZyIgYWx0PSJEdXBsZXgramFyZGluIiBjbGFzcz0iaW1nLXJlc3BvbnNpdmUiIC8+PC9hPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+PGRpdiBjbGFzcz0iaXRlbSBsYXp5LWxvYWQtaXRlbSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL2VzdGF0ZV9wcm9wZXJ0eS9kdXBsZXhqYXJkaW4vIj48aW1nICBkYXRhLWxhenktbG9hZC1zcmM9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS93cC1jb250ZW50L3VwbG9hZHMvMjAyMC8wMi8xNTY4ODE2NjE0X1ZBMTk0Ml85X2wtNTI1eDMyOC5qcGciIGFsdD0iRHVwbGV4K2phcmRpbiIgY2xhc3M9ImltZy1yZXNwb25zaXZlIiAvPjwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PjxkaXYgY2xhc3M9Iml0ZW0gbGF6eS1sb2FkLWl0ZW0iPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS9lc3RhdGVfcHJvcGVydHkvZHVwbGV4amFyZGluLyI+PGltZyAgZGF0YS1sYXp5LWxvYWQtc3JjPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vd3AtY29udGVudC91cGxvYWRzLzIwMjAvMDIvMTU2ODgxNjYyM19WQTE5NDJfMTBfbC01MjV4MzI4LmpwZyIgYWx0PSJEdXBsZXgramFyZGluIiBjbGFzcz0iaW1nLXJlc3BvbnNpdmUiIC8+PC9hPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL2VzdGF0ZV9wcm9wZXJ0eS9kdXBsZXhqYXJkaW4vIj4gPC9hPjxhIGNsYXNzPSJsZWZ0ICBjYXJvdXNlbC1jb250cm9sIiBocmVmPSIjcHJvcGVydHlfdW5pdF9jYXJvdXNlbF81ZTg0YTZhMTg1OWJlIiBkYXRhLXNsaWRlPSJwcmV2Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZGVtby1pY29uIGljb24tbGVmdC1vcGVuLWJpZyI+PC9pPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgoKICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGNsYXNzPSJyaWdodCAgY2Fyb3VzZWwtY29udHJvbCIgaHJlZj0iI3Byb3BlcnR5X3VuaXRfY2Fyb3VzZWxfNWU4NGE2YTE4NTliZSIgZGF0YS1zbGlkZT0ibmV4dCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9ImRlbW8taWNvbiBpY29uLXJpZ2h0LW9wZW4tYmlnIj48L2k+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgICAgPC9kaXY+PGRpdiBjbGFzcz0idGFnLXdyYXBwZXIiPjxkaXYgY2xhc3M9InN0YXR1cy13cmFwcGVyIj48ZGl2IGNsYXNzPSJhY3Rpb25fdGFnX3dyYXBwZXIgVkVORFUgIj5WRU5EVTwvZGl2PjxkaXYgY2xhc3M9InJpYmJvbi1pbnNpZGUgVkVORFUiPlZFTkRVPC9kaXY+PC9kaXY+PC9kaXY+PC9kaXY+CgogICAgICAgICAgICA8aDQ+PGEgaHJlZj0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL2VzdGF0ZV9wcm9wZXJ0eS9kdXBsZXhqYXJkaW4vIj4KICAgICAgICAgICAgICAgIER1cGxleCtqYXJkaW4gICAgICAgICAgICAgICAgPC9hPiAKICAgICAgICAgICAgPC9oND4gCiAgICAgICAgICAgIAogICAgICAgICAgICA8ZGl2IGNsYXNzPSJsaXN0aW5nX3VuaXRfcHJpY2Vfd3JhcHBlciI+PHNwYW4gY2xhc3M9InByaWNlX2xhYmVsIj5Ob3VzIGNvbnN1bHRlcjwvc3Bhbj48L2Rpdj4gICAgICAgIAogICAgICAgIAogICAgICAgIAogICAgICAgICAgIAogICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ibGlzdGluZ19kZXRhaWxzIHRoZV9ncmlkX3ZpZXciPgogICAgICAgICAgICAgICAgICAgIFZBMTk0Mi1LTUkgJiM4MjExOyBQYXJpcyAyMCA6IEVYQ0xVU0lWSVRFIE1BUkFJQ0hFUlMsIMOgIHByb3hpbWl0w6kgaW1tw6lkaWF0ZSBkZXMgY29tbWVyY2VzIGV0IGRlcyB0cmFuc3BvcnRzLCBkYW5zIHUgPGEgaHJlZj0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL2VzdGF0ZV9wcm9wZXJ0eS9kdXBsZXhqYXJkaW4vIiBjbGFzcz0idW5pdF9tb3JlX3giPltwbHVzXTwvYT4gICAgICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ibGlzdGluZ19kZXRhaWxzIHRoZV9saXN0X3ZpZXciPgogICAgICAgICAgICAgICAgICAgIFZBMTk0Mi1LTUkgJiM4MjExOyBQYXJpcyAyMCA6IEVYQ0xVU0lWSVRFIE1BUkFJQ0hFUlMsIMOgIHByb3hpbWl0w6kgaW1tw6lkaWF0ZSBkZXMgY29tbWVyY2VzIGV0IGRlcyB0cmFuc3BvcnRzLCBkYW5zIHUgPGEgaHJlZj0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL2VzdGF0ZV9wcm9wZXJ0eS9kdXBsZXhqYXJkaW4vIiBjbGFzcz0idW5pdF9tb3JlX3giPltwbHVzXTwvYT4gICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgIAoKCiAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb3BlcnR5X2xpc3RpbmdfZGV0YWlscyI+CiAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImluZm9yb29tIj4yPC9zcGFuPjxzcGFuIGNsYXNzPSJpbmZvYmF0aCI+MTwvc3Bhbj4gPHNwYW4gY2xhc3M9ImluZm9zaXplIj44MSwwMCBtPHN1cD4yPC9zdXA+PC9zcGFuPjxhIGhyZWY9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS9lc3RhdGVfcHJvcGVydHkvZHVwbGV4amFyZGluLyIgY2xhc3M9InVuaXRfZGV0YWlsc194Ij5pbmZvIGNvbXBsw6h0ZTwvYT4gICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgCiAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb3BlcnR5X2xvY2F0aW9uIj4KICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb3BlcnR5X2FnZW50X3dyYXBwZXIiPgogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9wZXJ0eV9hZ2VudF9pbWFnZSIgc3R5bGU9ImJhY2tncm91bmQtaW1hZ2U6dXJsKCdodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vd3AtY29udGVudC91cGxvYWRzLzIwMTkvMDYvUHlyw6luw6llcy00LTEyMHgxMjAuanBnJykiPjwvZGl2PiAKICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvcGVydHlfYWdlbnRfaW1hZ2Vfc2lnbiI+PGkgY2xhc3M9ImZhIGZhLXVzZXItY2lyY2xlLW8iIGFyaWEtaGlkZGVuPSJ0cnVlIj48L2k+PC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS9lc3RhdGVfYWdlbnQva21pLXB5cmVuZWVzLyI+S01JIFBZUsOJTsOJRVM8L2E+ICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Imxpc3RpbmdfYWN0aW9ucyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJzaGFyZV91bml0Ij4KICAgICAgICA8YSBocmVmPSJodHRwczovL3d3dy5mYWNlYm9vay5jb20vc2hhcmVyLnBocD91PWh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS9lc3RhdGVfcHJvcGVydHkvZHVwbGV4amFyZGluLyZhbXA7dD1EdXBsZXglMkJqYXJkaW4iIHRhcmdldD0iX2JsYW5rIiBjbGFzcz0ic29jaWFsX2ZhY2Vib29rIj48L2E+CiAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly90d2l0dGVyLmNvbS9ob21lP3N0YXR1cz1EdXBsZXglMkJqYXJkaW5odHRwcyUzQSUyRiUyRnd3dy5jYWJpbmV0LWttaS5jb20lMkZlc3RhdGVfcHJvcGVydHklMkZkdXBsZXhqYXJkaW4lMkYiIGNsYXNzPSJzb2NpYWxfdHdlZXQiIHRhcmdldD0iX2JsYW5rIj48L2E+CiAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9waW50ZXJlc3QuY29tL3Bpbi9jcmVhdGUvYnV0dG9uLz91cmw9aHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL2VzdGF0ZV9wcm9wZXJ0eS9kdXBsZXhqYXJkaW4vJmFtcDttZWRpYT1odHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vd3AtY29udGVudC91cGxvYWRzLzIwMjAvMDIvMTU2ODgxNjQ4M19WQTE5NDJfMV9sLmpwZyZhbXA7ZGVzY3JpcHRpb249RHVwbGV4JTJCamFyZGluIiB0YXJnZXQ9Il9ibGFuayIgY2xhc3M9InNvY2lhbF9waW50ZXJlc3QiPjwvYT4KICAgICAgICA8YSBocmVmPSJtYWlsdG86ZW1haWxAZW1haWwuY29tP2h0dHA6Ly9zdWJqZWN0PUR1cGxleCUyQmphcmRpbiYjMDM4O2JvZHk9aHR0cHMlM0ElMkYlMkZ3d3cuY2FiaW5ldC1rbWkuY29tJTJGZXN0YXRlX3Byb3BlcnR5JTJGZHVwbGV4amFyZGluJTJGIiBkYXRhLWFjdGlvbj0ic2hhcmUgZW1haWwiICBjbGFzcz0ic29jaWFsX2VtYWlsIj48L2E+CgogICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJzaGFyZV9saXN0IiAgZGF0YS1vcmlnaW5hbC10aXRsZT0icGFydGFnZXIiID48L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9Imljb24tZmF2IGljb24tZmF2LW9mZiIgZGF0YS1vcmlnaW5hbC10aXRsZT0iYWpvdXRlciBhdXggRmF2b3JpcyIgZGF0YS1wb3N0aWQ9IjIyMzQ2Ij48L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImNvbXBhcmUtYWN0aW9uIiBkYXRhLW9yaWdpbmFsLXRpdGxlPSJjb21wYXJlciIgZGF0YS1waW1hZ2U9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS93cC1jb250ZW50L3VwbG9hZHMvMjAyMC8wMi8xNTY4ODE2NDgzX1ZBMTk0Ml8xX2wtMTQzeDgzLmpwZyIgZGF0YS1waWQ9IjIyMzQ2Ij48L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4gICAgICAgIDwvZGl2PiAgICAgICAgICAgICAKICAgIDwvZGl2PiAgCgoKCjxkaXYgY2xhc3M9ImNvbC1tZC00IGhhc19wcm9wX3NsaWRlciAgbGlzdGluZ193cmFwcGVyIiBkYXRhLW9yZz0iNCIgZGF0YS1saXN0aWQ9IjIyMzM4IiA+IAogICAgPGRpdiBjbGFzcz0icHJvcGVydHlfbGlzdGluZyAgICIgZGF0YS1saW5rPSIiPgogICAgICAgIAogICAgICAgIDxkaXYgY2xhc3M9Imxpc3RpbmctdW5pdC1pbWctd3JhcHBlciI+PGRpdiBjbGFzcz0icHJvcF9uZXdfZGV0YWlscyI+PGRpdiBjbGFzcz0icHJvcF9uZXdfZGV0YWlsc19iYWNrIj48L2Rpdj48ZGl2IGNsYXNzPSJwcm9wZXJ0eV9tZWRpYSI+PGkgY2xhc3M9ImZhIGZhLWNhbWVyYSIgYXJpYS1oaWRkZW49InRydWUiPjwvaT4gNwogICAgICAgICAgICAgICAgPC9kaXY+PGRpdiBjbGFzcz0icHJvcGVydHlfbG9jYXRpb25faW1hZ2UiPiAKICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvcGVydHlfbWFya2VyIj48L3NwYW4+PGEgaHJlZj0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL3Byb3BlcnR5X2NpdHkvNzUwMTEvIj43NTAxMTwvYT4sIDxhIGhyZWY9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS9wcm9wZXJ0eV9jaXR5L3BhcmlzLTIvIj5QYXJpczwvYT48L2Rpdj48L2Rpdj4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGlkPSJwcm9wZXJ0eV91bml0X2Nhcm91c2VsXzVlODRhNmExOGE0NjEiIGNsYXNzPSJjYXJvdXNlbCBwcm9wZXJ0eV91bml0X2Nhcm91c2VsIHNsaWRlICIgZGF0YS1yaWRlPSJjYXJvdXNlbCIgZGF0YS1pbnRlcnZhbD0iZmFsc2UiPgogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjYXJvdXNlbC1pbm5lciI+ICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJpdGVtIGFjdGl2ZSI+ICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS9lc3RhdGVfcHJvcGVydHkvMi1waWVjZXMtMjEvIj48aW1nIHdpZHRoPSI1MjUiIGhlaWdodD0iMzI4IiBzcmM9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS93cC1jb250ZW50L3VwbG9hZHMvMjAyMC8wMi8xNTY4MjgxNDU5X1ZBMTk0MF82X2wtNTI1eDMyOC5qcGciIGNsYXNzPSJsYXp5bG9hZCBpbWctcmVzcG9uc2l2ZSB3cC1wb3N0LWltYWdlIiBhbHQ9IiIgZGF0YS1vcmlnaW5hbD0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL3dwLWNvbnRlbnQvdXBsb2Fkcy8yMDIwLzAyLzE1NjgyODE0NTlfVkExOTQwXzZfbC01MjV4MzI4LmpwZyIgLz48L2E+ICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iaXRlbSBsYXp5LWxvYWQtaXRlbSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL2VzdGF0ZV9wcm9wZXJ0eS8yLXBpZWNlcy0yMS8iPjxpbWcgIGRhdGEtbGF6eS1sb2FkLXNyYz0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL3dwLWNvbnRlbnQvdXBsb2Fkcy8yMDIwLzAyLzE1NjgyODE0MjNfVkExOTQwXzNfbC01MjV4MzI4LmpwZyIgYWx0PSIyIFBpZWNlcyIgY2xhc3M9ImltZy1yZXNwb25zaXZlIiAvPjwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PjxkaXYgY2xhc3M9Iml0ZW0gbGF6eS1sb2FkLWl0ZW0iPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS9lc3RhdGVfcHJvcGVydHkvMi1waWVjZXMtMjEvIj48aW1nICBkYXRhLWxhenktbG9hZC1zcmM9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS93cC1jb250ZW50L3VwbG9hZHMvMjAyMC8wMi8xNTY4MjgxNDMyX1ZBMTk0MF80X2wtNTI1eDMyOC5qcGciIGFsdD0iMiBQaWVjZXMiIGNsYXNzPSJpbWctcmVzcG9uc2l2ZSIgLz48L2E+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj48ZGl2IGNsYXNzPSJpdGVtIGxhenktbG9hZC1pdGVtIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vZXN0YXRlX3Byb3BlcnR5LzItcGllY2VzLTIxLyI+PGltZyAgZGF0YS1sYXp5LWxvYWQtc3JjPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vd3AtY29udGVudC91cGxvYWRzLzIwMjAvMDIvMTU2ODI4MTQ0M19WQTE5NDBfNV9sLTUyNXgzMjguanBnIiBhbHQ9IjIgUGllY2VzIiBjbGFzcz0iaW1nLXJlc3BvbnNpdmUiIC8+PC9hPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+PGRpdiBjbGFzcz0iaXRlbSBsYXp5LWxvYWQtaXRlbSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL2VzdGF0ZV9wcm9wZXJ0eS8yLXBpZWNlcy0yMS8iPjxpbWcgIGRhdGEtbGF6eS1sb2FkLXNyYz0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL3dwLWNvbnRlbnQvdXBsb2Fkcy8yMDIwLzAyLzE1NjgyODE0MDRfVkExOTQwXzFfbC01MjV4MzI4LmpwZyIgYWx0PSIyIFBpZWNlcyIgY2xhc3M9ImltZy1yZXNwb25zaXZlIiAvPjwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PjxkaXYgY2xhc3M9Iml0ZW0gbGF6eS1sb2FkLWl0ZW0iPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS9lc3RhdGVfcHJvcGVydHkvMi1waWVjZXMtMjEvIj48aW1nICBkYXRhLWxhenktbG9hZC1zcmM9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS93cC1jb250ZW50L3VwbG9hZHMvMjAyMC8wMi8xNTY4MjgxNDEyX1ZBMTk0MF8yX2wtNTI1eDMyOC5qcGciIGFsdD0iMiBQaWVjZXMiIGNsYXNzPSJpbWctcmVzcG9uc2l2ZSIgLz48L2E+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj48ZGl2IGNsYXNzPSJpdGVtIGxhenktbG9hZC1pdGVtIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vZXN0YXRlX3Byb3BlcnR5LzItcGllY2VzLTIxLyI+PGltZyAgZGF0YS1sYXp5LWxvYWQtc3JjPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vd3AtY29udGVudC91cGxvYWRzLzIwMjAvMDIvMTU2ODI4MTQ3MF9WQTE5NDBfN19sLTQ1N3gzMjguanBnIiBhbHQ9IjIgUGllY2VzIiBjbGFzcz0iaW1nLXJlc3BvbnNpdmUiIC8+PC9hPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL2VzdGF0ZV9wcm9wZXJ0eS8yLXBpZWNlcy0yMS8iPiA8L2E+PGEgY2xhc3M9ImxlZnQgIGNhcm91c2VsLWNvbnRyb2wiIGhyZWY9IiNwcm9wZXJ0eV91bml0X2Nhcm91c2VsXzVlODRhNmExOGE0NjEiIGRhdGEtc2xpZGU9InByZXYiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJkZW1vLWljb24gaWNvbi1sZWZ0LW9wZW4tYmlnIj48L2k+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2E+CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgY2xhc3M9InJpZ2h0ICBjYXJvdXNlbC1jb250cm9sIiBocmVmPSIjcHJvcGVydHlfdW5pdF9jYXJvdXNlbF81ZTg0YTZhMThhNDYxIiBkYXRhLXNsaWRlPSJuZXh0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZGVtby1pY29uIGljb24tcmlnaHQtb3Blbi1iaWciPjwvaT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgICA8L2Rpdj48ZGl2IGNsYXNzPSJ0YWctd3JhcHBlciI+PGRpdiBjbGFzcz0ic3RhdHVzLXdyYXBwZXIiPjxkaXYgY2xhc3M9ImFjdGlvbl90YWdfd3JhcHBlciBWRU5EVSAiPlZFTkRVPC9kaXY+PGRpdiBjbGFzcz0icmliYm9uLWluc2lkZSBWRU5EVSI+VkVORFU8L2Rpdj48L2Rpdj48L2Rpdj48L2Rpdj4KCiAgICAgICAgICAgIDxoND48YSBocmVmPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vZXN0YXRlX3Byb3BlcnR5LzItcGllY2VzLTIxLyI+CiAgICAgICAgICAgICAgICAyIFBpZWNlcyAgICAgICAgICAgICAgICA8L2E+IAogICAgICAgICAgICA8L2g0PiAKICAgICAgICAgICAgCiAgICAgICAgICAgIDxkaXYgY2xhc3M9Imxpc3RpbmdfdW5pdF9wcmljZV93cmFwcGVyIj48c3BhbiBjbGFzcz0icHJpY2VfbGFiZWwiPk5vdXMgY29uc3VsdGVyPC9zcGFuPjwvZGl2PiAgICAgICAgCiAgICAgICAgCiAgICAgICAgCiAgICAgICAgICAgCiAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJsaXN0aW5nX2RldGFpbHMgdGhlX2dyaWRfdmlldyI+CiAgICAgICAgICAgICAgICAgICAgVkExOTQwLUtNSSAmIzgyMTE7IEhvbm9yYWlyZXMgaW5jbHVzIGRlIDUuODQlIFRUQyDDoCBsYSBjaGFyZ2UgZGUgbCYjODIxNzthY3F1w6lyZXVyLiBQcml4IGhvcnMgaG9ub3JhaXJlcyAzNzcgMDAwIMKALiA8YSBocmVmPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vZXN0YXRlX3Byb3BlcnR5LzItcGllY2VzLTIxLyIgY2xhc3M9InVuaXRfbW9yZV94Ij5bcGx1c108L2E+ICAgICAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Imxpc3RpbmdfZGV0YWlscyB0aGVfbGlzdF92aWV3Ij4KICAgICAgICAgICAgICAgICAgICBWQTE5NDAtS01JICYjODIxMTsgSG9ub3JhaXJlcyBpbmNsdXMgZGUgNS44NCUgVFRDIMOgIGxhIGNoYXJnZSBkZSBsJiM4MjE3O2FjcXXDqXJldXIuIFByaXggaG9ycyBob25vcmFpcmVzIDM3NyAwMDAgwoAuIDxhIGhyZWY9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS9lc3RhdGVfcHJvcGVydHkvMi1waWVjZXMtMjEvIiBjbGFzcz0idW5pdF9tb3JlX3giPltwbHVzXTwvYT4gICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgIAoKCiAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb3BlcnR5X2xpc3RpbmdfZGV0YWlscyI+CiAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImluZm9yb29tIj4xPC9zcGFuPjxzcGFuIGNsYXNzPSJpbmZvYmF0aCI+MTwvc3Bhbj4gPHNwYW4gY2xhc3M9ImluZm9zaXplIj4zMCwwMCBtPHN1cD4yPC9zdXA+PC9zcGFuPjxhIGhyZWY9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS9lc3RhdGVfcHJvcGVydHkvMi1waWVjZXMtMjEvIiBjbGFzcz0idW5pdF9kZXRhaWxzX3giPmluZm8gY29tcGzDqHRlPC9hPiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAKICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvcGVydHlfbG9jYXRpb24iPgogICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvcGVydHlfYWdlbnRfd3JhcHBlciI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb3BlcnR5X2FnZW50X2ltYWdlIiBzdHlsZT0iYmFja2dyb3VuZC1pbWFnZTp1cmwoJ2h0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS93cC1jb250ZW50L3VwbG9hZHMvMjAxOS8wNi9QeXLDqW7DqWVzLTQtMTIweDEyMC5qcGcnKSI+PC9kaXY+IAogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9wZXJ0eV9hZ2VudF9pbWFnZV9zaWduIj48aSBjbGFzcz0iZmEgZmEtdXNlci1jaXJjbGUtbyIgYXJpYS1oaWRkZW49InRydWUiPjwvaT48L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL2VzdGF0ZV9hZ2VudC9rbWktcHlyZW5lZXMvIj5LTUkgUFlSw4lOw4lFUzwvYT4gICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ibGlzdGluZ19hY3Rpb25zIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InNoYXJlX3VuaXQiPgogICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vd3d3LmZhY2Vib29rLmNvbS9zaGFyZXIucGhwP3U9aHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL2VzdGF0ZV9wcm9wZXJ0eS8yLXBpZWNlcy0yMS8mYW1wO3Q9MitQaWVjZXMiIHRhcmdldD0iX2JsYW5rIiBjbGFzcz0ic29jaWFsX2ZhY2Vib29rIj48L2E+CiAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly90d2l0dGVyLmNvbS9ob21lP3N0YXR1cz0yK1BpZWNlc2h0dHBzJTNBJTJGJTJGd3d3LmNhYmluZXQta21pLmNvbSUyRmVzdGF0ZV9wcm9wZXJ0eSUyRjItcGllY2VzLTIxJTJGIiBjbGFzcz0ic29jaWFsX3R3ZWV0IiB0YXJnZXQ9Il9ibGFuayI+PC9hPgogICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vcGludGVyZXN0LmNvbS9waW4vY3JlYXRlL2J1dHRvbi8/dXJsPWh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS9lc3RhdGVfcHJvcGVydHkvMi1waWVjZXMtMjEvJmFtcDttZWRpYT1odHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vd3AtY29udGVudC91cGxvYWRzLzIwMjAvMDIvMTU2ODI4MTQ1OV9WQTE5NDBfNl9sLmpwZyZhbXA7ZGVzY3JpcHRpb249MitQaWVjZXMiIHRhcmdldD0iX2JsYW5rIiBjbGFzcz0ic29jaWFsX3BpbnRlcmVzdCI+PC9hPgogICAgICAgIDxhIGhyZWY9Im1haWx0bzplbWFpbEBlbWFpbC5jb20/aHR0cDovL3N1YmplY3Q9MitQaWVjZXMmIzAzODtib2R5PWh0dHBzJTNBJTJGJTJGd3d3LmNhYmluZXQta21pLmNvbSUyRmVzdGF0ZV9wcm9wZXJ0eSUyRjItcGllY2VzLTIxJTJGIiBkYXRhLWFjdGlvbj0ic2hhcmUgZW1haWwiICBjbGFzcz0ic29jaWFsX2VtYWlsIj48L2E+CgogICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJzaGFyZV9saXN0IiAgZGF0YS1vcmlnaW5hbC10aXRsZT0icGFydGFnZXIiID48L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9Imljb24tZmF2IGljb24tZmF2LW9mZiIgZGF0YS1vcmlnaW5hbC10aXRsZT0iYWpvdXRlciBhdXggRmF2b3JpcyIgZGF0YS1wb3N0aWQ9IjIyMzM4Ij48L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImNvbXBhcmUtYWN0aW9uIiBkYXRhLW9yaWdpbmFsLXRpdGxlPSJjb21wYXJlciIgZGF0YS1waW1hZ2U9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS93cC1jb250ZW50L3VwbG9hZHMvMjAyMC8wMi8xNTY4MjgxNDU5X1ZBMTk0MF82X2wtMTQzeDgzLmpwZyIgZGF0YS1waWQ9IjIyMzM4Ij48L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4gICAgICAgIDwvZGl2PiAgICAgICAgICAgICAKICAgIDwvZGl2PiAgCgoKCjxkaXYgY2xhc3M9ImNvbC1tZC00IGhhc19wcm9wX3NsaWRlciAgbGlzdGluZ193cmFwcGVyIiBkYXRhLW9yZz0iNCIgZGF0YS1saXN0aWQ9IjIyMzMxIiA+IAogICAgPGRpdiBjbGFzcz0icHJvcGVydHlfbGlzdGluZyAgICIgZGF0YS1saW5rPSIiPgogICAgICAgIAogICAgICAgIDxkaXYgY2xhc3M9Imxpc3RpbmctdW5pdC1pbWctd3JhcHBlciI+PGRpdiBjbGFzcz0icHJvcF9uZXdfZGV0YWlscyI+PGRpdiBjbGFzcz0icHJvcF9uZXdfZGV0YWlsc19iYWNrIj48L2Rpdj48ZGl2IGNsYXNzPSJwcm9wZXJ0eV9tZWRpYSI+PGkgY2xhc3M9ImZhIGZhLWNhbWVyYSIgYXJpYS1oaWRkZW49InRydWUiPjwvaT4gNgogICAgICAgICAgICAgICAgPC9kaXY+PGRpdiBjbGFzcz0icHJvcGVydHlfbG9jYXRpb25faW1hZ2UiPiAKICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvcGVydHlfbWFya2VyIj48L3NwYW4+PGEgaHJlZj0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL3Byb3BlcnR5X2NpdHkvNzUwMTEvIj43NTAxMTwvYT4sIDxhIGhyZWY9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS9wcm9wZXJ0eV9jaXR5L3BhcmlzLTIvIj5QYXJpczwvYT48L2Rpdj48L2Rpdj4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGlkPSJwcm9wZXJ0eV91bml0X2Nhcm91c2VsXzVlODRhNmExOGUzYWEiIGNsYXNzPSJjYXJvdXNlbCBwcm9wZXJ0eV91bml0X2Nhcm91c2VsIHNsaWRlICIgZGF0YS1yaWRlPSJjYXJvdXNlbCIgZGF0YS1pbnRlcnZhbD0iZmFsc2UiPgogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjYXJvdXNlbC1pbm5lciI+ICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJpdGVtIGFjdGl2ZSI+ICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS9lc3RhdGVfcHJvcGVydHkvMi1waWVjZXMtY2F2ZS0yMy8iPjxpbWcgd2lkdGg9IjUyNSIgaGVpZ2h0PSIzMjgiIHNyYz0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL3dwLWNvbnRlbnQvdXBsb2Fkcy8yMDIwLzAyLzE1Njc3NjU1OTFfVkExOTM2XzVfbC01MjV4MzI4LmpwZyIgY2xhc3M9Imxhenlsb2FkIGltZy1yZXNwb25zaXZlIHdwLXBvc3QtaW1hZ2UiIGFsdD0iIiBkYXRhLW9yaWdpbmFsPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vd3AtY29udGVudC91cGxvYWRzLzIwMjAvMDIvMTU2Nzc2NTU5MV9WQTE5MzZfNV9sLTUyNXgzMjguanBnIiAvPjwvYT4gICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJpdGVtIGxhenktbG9hZC1pdGVtIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vZXN0YXRlX3Byb3BlcnR5LzItcGllY2VzLWNhdmUtMjMvIj48aW1nICBkYXRhLWxhenktbG9hZC1zcmM9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS93cC1jb250ZW50L3VwbG9hZHMvMjAyMC8wMi8xNTY3NzY1NTY2X1ZBMTkzNl8zX2wtNTI1eDMyOC5qcGciIGFsdD0iMiBQSUVDRVMgKyBDQVZFIiBjbGFzcz0iaW1nLXJlc3BvbnNpdmUiIC8+PC9hPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+PGRpdiBjbGFzcz0iaXRlbSBsYXp5LWxvYWQtaXRlbSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL2VzdGF0ZV9wcm9wZXJ0eS8yLXBpZWNlcy1jYXZlLTIzLyI+PGltZyAgZGF0YS1sYXp5LWxvYWQtc3JjPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vd3AtY29udGVudC91cGxvYWRzLzIwMjAvMDIvMTU2Nzc2NTU3OF9WQTE5MzZfNF9sLTUyNXgzMjguanBnIiBhbHQ9IjIgUElFQ0VTICsgQ0FWRSIgY2xhc3M9ImltZy1yZXNwb25zaXZlIiAvPjwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PjxkaXYgY2xhc3M9Iml0ZW0gbGF6eS1sb2FkLWl0ZW0iPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS9lc3RhdGVfcHJvcGVydHkvMi1waWVjZXMtY2F2ZS0yMy8iPjxpbWcgIGRhdGEtbGF6eS1sb2FkLXNyYz0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL3dwLWNvbnRlbnQvdXBsb2Fkcy8yMDIwLzAyLzE1Njc3NjU1MzhfVkExOTM2XzFfbC01MjV4MzI4LmpwZyIgYWx0PSIyIFBJRUNFUyArIENBVkUiIGNsYXNzPSJpbWctcmVzcG9uc2l2ZSIgLz48L2E+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj48ZGl2IGNsYXNzPSJpdGVtIGxhenktbG9hZC1pdGVtIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vZXN0YXRlX3Byb3BlcnR5LzItcGllY2VzLWNhdmUtMjMvIj48aW1nICBkYXRhLWxhenktbG9hZC1zcmM9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS93cC1jb250ZW50L3VwbG9hZHMvMjAyMC8wMi8xNTY3NzY1NTQ4X1ZBMTkzNl8yX2wtNTI1eDMyOC5qcGciIGFsdD0iMiBQSUVDRVMgKyBDQVZFIiBjbGFzcz0iaW1nLXJlc3BvbnNpdmUiIC8+PC9hPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+PGRpdiBjbGFzcz0iaXRlbSBsYXp5LWxvYWQtaXRlbSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL2VzdGF0ZV9wcm9wZXJ0eS8yLXBpZWNlcy1jYXZlLTIzLyI+PGltZyAgZGF0YS1sYXp5LWxvYWQtc3JjPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vd3AtY29udGVudC91cGxvYWRzLzIwMjAvMDIvMTU2Nzc2NTU5OV9WQTE5MzZfNl9sLTUyNXgzMjguanBnIiBhbHQ9IjIgUElFQ0VTICsgQ0FWRSIgY2xhc3M9ImltZy1yZXNwb25zaXZlIiAvPjwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS9lc3RhdGVfcHJvcGVydHkvMi1waWVjZXMtY2F2ZS0yMy8iPiA8L2E+PGEgY2xhc3M9ImxlZnQgIGNhcm91c2VsLWNvbnRyb2wiIGhyZWY9IiNwcm9wZXJ0eV91bml0X2Nhcm91c2VsXzVlODRhNmExOGUzYWEiIGRhdGEtc2xpZGU9InByZXYiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJkZW1vLWljb24gaWNvbi1sZWZ0LW9wZW4tYmlnIj48L2k+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2E+CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgY2xhc3M9InJpZ2h0ICBjYXJvdXNlbC1jb250cm9sIiBocmVmPSIjcHJvcGVydHlfdW5pdF9jYXJvdXNlbF81ZTg0YTZhMThlM2FhIiBkYXRhLXNsaWRlPSJuZXh0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZGVtby1pY29uIGljb24tcmlnaHQtb3Blbi1iaWciPjwvaT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgICA8L2Rpdj48ZGl2IGNsYXNzPSJ0YWctd3JhcHBlciI+PGRpdiBjbGFzcz0ic3RhdHVzLXdyYXBwZXIiPjxkaXYgY2xhc3M9ImFjdGlvbl90YWdfd3JhcHBlciBWRU5EVSAiPlZFTkRVPC9kaXY+PGRpdiBjbGFzcz0icmliYm9uLWluc2lkZSBWRU5EVSI+VkVORFU8L2Rpdj48L2Rpdj48L2Rpdj48L2Rpdj4KCiAgICAgICAgICAgIDxoND48YSBocmVmPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vZXN0YXRlX3Byb3BlcnR5LzItcGllY2VzLWNhdmUtMjMvIj4KICAgICAgICAgICAgICAgIDIgUElFQ0VTICsgQ0FWRSAgICAgICAgICAgICAgICA8L2E+IAogICAgICAgICAgICA8L2g0PiAKICAgICAgICAgICAgCiAgICAgICAgICAgIDxkaXYgY2xhc3M9Imxpc3RpbmdfdW5pdF9wcmljZV93cmFwcGVyIj48c3BhbiBjbGFzcz0icHJpY2VfbGFiZWwiPk5vdXMgY29uc3VsdGVyPC9zcGFuPjwvZGl2PiAgICAgICAgCiAgICAgICAgCiAgICAgICAgCiAgICAgICAgICAgCiAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJsaXN0aW5nX2RldGFpbHMgdGhlX2dyaWRfdmlldyI+CiAgICAgICAgICAgICAgICAgICAgVkExOTM2LUtNSSAmIzgyMTE7IFBBUklTIDExw6htZSAmIzgyMTE7IEVYQ0xVU0lWSVRFIEtNSSAmIzgyMTE7IE5BVElPTi9BTEVYQU5EUkUtRFVNQVMgRGFucyB1biBpbW1ldWJsZSBhbmNpZW4gYmllbiAgPGEgaHJlZj0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL2VzdGF0ZV9wcm9wZXJ0eS8yLXBpZWNlcy1jYXZlLTIzLyIgY2xhc3M9InVuaXRfbW9yZV94Ij5bcGx1c108L2E+ICAgICAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Imxpc3RpbmdfZGV0YWlscyB0aGVfbGlzdF92aWV3Ij4KICAgICAgICAgICAgICAgICAgICBWQTE5MzYtS01JICYjODIxMTsgUEFSSVMgMTHDqG1lICYjODIxMTsgRVhDTFVTSVZJVEUgS01JICYjODIxMTsgTkFUSU9OL0FMRVhBTkRSRS1EVU1BUyBEYW5zIHVuIGltbWV1YmxlIGFuY2llbiBiaWVuICA8YSBocmVmPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vZXN0YXRlX3Byb3BlcnR5LzItcGllY2VzLWNhdmUtMjMvIiBjbGFzcz0idW5pdF9tb3JlX3giPltwbHVzXTwvYT4gICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgIAoKCiAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb3BlcnR5X2xpc3RpbmdfZGV0YWlscyI+CiAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImluZm9yb29tIj4xPC9zcGFuPjxzcGFuIGNsYXNzPSJpbmZvYmF0aCI+MTwvc3Bhbj4gPHNwYW4gY2xhc3M9ImluZm9zaXplIj4yNywwMCBtPHN1cD4yPC9zdXA+PC9zcGFuPjxhIGhyZWY9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS9lc3RhdGVfcHJvcGVydHkvMi1waWVjZXMtY2F2ZS0yMy8iIGNsYXNzPSJ1bml0X2RldGFpbHNfeCI+aW5mbyBjb21wbMOodGU8L2E+ICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgIAogICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9wZXJ0eV9sb2NhdGlvbiI+CiAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9wZXJ0eV9hZ2VudF93cmFwcGVyIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvcGVydHlfYWdlbnRfaW1hZ2UiIHN0eWxlPSJiYWNrZ3JvdW5kLWltYWdlOnVybCgnaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL3dwLWNvbnRlbnQvdXBsb2Fkcy8yMDE5LzA2L1B5csOpbsOpZXMtNC0xMjB4MTIwLmpwZycpIj48L2Rpdj4gCiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb3BlcnR5X2FnZW50X2ltYWdlX3NpZ24iPjxpIGNsYXNzPSJmYSBmYS11c2VyLWNpcmNsZS1vIiBhcmlhLWhpZGRlbj0idHJ1ZSI+PC9pPjwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vZXN0YXRlX2FnZW50L2ttaS1weXJlbmVlcy8iPktNSSBQWVLDiU7DiUVTPC9hPiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJsaXN0aW5nX2FjdGlvbnMiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ic2hhcmVfdW5pdCI+CiAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly93d3cuZmFjZWJvb2suY29tL3NoYXJlci5waHA/dT1odHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vZXN0YXRlX3Byb3BlcnR5LzItcGllY2VzLWNhdmUtMjMvJmFtcDt0PTIrUElFQ0VTKyUyQitDQVZFIiB0YXJnZXQ9Il9ibGFuayIgY2xhc3M9InNvY2lhbF9mYWNlYm9vayI+PC9hPgogICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vdHdpdHRlci5jb20vaG9tZT9zdGF0dXM9MitQSUVDRVMrJTJCK0NBVkVodHRwcyUzQSUyRiUyRnd3dy5jYWJpbmV0LWttaS5jb20lMkZlc3RhdGVfcHJvcGVydHklMkYyLXBpZWNlcy1jYXZlLTIzJTJGIiBjbGFzcz0ic29jaWFsX3R3ZWV0IiB0YXJnZXQ9Il9ibGFuayI+PC9hPgogICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vcGludGVyZXN0LmNvbS9waW4vY3JlYXRlL2J1dHRvbi8/dXJsPWh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS9lc3RhdGVfcHJvcGVydHkvMi1waWVjZXMtY2F2ZS0yMy8mYW1wO21lZGlhPWh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS93cC1jb250ZW50L3VwbG9hZHMvMjAyMC8wMi8xNTY3NzY1NTkxX1ZBMTkzNl81X2wuanBnJmFtcDtkZXNjcmlwdGlvbj0yK1BJRUNFUyslMkIrQ0FWRSIgdGFyZ2V0PSJfYmxhbmsiIGNsYXNzPSJzb2NpYWxfcGludGVyZXN0Ij48L2E+CiAgICAgICAgPGEgaHJlZj0ibWFpbHRvOmVtYWlsQGVtYWlsLmNvbT9odHRwOi8vc3ViamVjdD0yK1BJRUNFUyslMkIrQ0FWRSYjMDM4O2JvZHk9aHR0cHMlM0ElMkYlMkZ3d3cuY2FiaW5ldC1rbWkuY29tJTJGZXN0YXRlX3Byb3BlcnR5JTJGMi1waWVjZXMtY2F2ZS0yMyUyRiIgZGF0YS1hY3Rpb249InNoYXJlIGVtYWlsIiAgY2xhc3M9InNvY2lhbF9lbWFpbCI+PC9hPgoKICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ic2hhcmVfbGlzdCIgIGRhdGEtb3JpZ2luYWwtdGl0bGU9InBhcnRhZ2VyIiA+PC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJpY29uLWZhdiBpY29uLWZhdi1vZmYiIGRhdGEtb3JpZ2luYWwtdGl0bGU9ImFqb3V0ZXIgYXV4IEZhdm9yaXMiIGRhdGEtcG9zdGlkPSIyMjMzMSI+PC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJjb21wYXJlLWFjdGlvbiIgZGF0YS1vcmlnaW5hbC10aXRsZT0iY29tcGFyZXIiIGRhdGEtcGltYWdlPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vd3AtY29udGVudC91cGxvYWRzLzIwMjAvMDIvMTU2Nzc2NTU5MV9WQTE5MzZfNV9sLTE0M3g4My5qcGciIGRhdGEtcGlkPSIyMjMzMSI+PC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+ICAgICAgICA8L2Rpdj4gICAgICAgICAgICAgCiAgICA8L2Rpdj4gIAoKCgo8ZGl2IGNsYXNzPSJjb2wtbWQtNCBoYXNfcHJvcF9zbGlkZXIgIGxpc3Rpbmdfd3JhcHBlciIgZGF0YS1vcmc9IjQiIGRhdGEtbGlzdGlkPSIyMjMyMCIgPiAKICAgIDxkaXYgY2xhc3M9InByb3BlcnR5X2xpc3RpbmcgICAiIGRhdGEtbGluaz0iIj4KICAgICAgICAKICAgICAgICA8ZGl2IGNsYXNzPSJsaXN0aW5nLXVuaXQtaW1nLXdyYXBwZXIiPjxkaXYgY2xhc3M9InByb3BfbmV3X2RldGFpbHMiPjxkaXYgY2xhc3M9InByb3BfbmV3X2RldGFpbHNfYmFjayI+PC9kaXY+PGRpdiBjbGFzcz0icHJvcGVydHlfbWVkaWEiPjxpIGNsYXNzPSJmYSBmYS1jYW1lcmEiIGFyaWEtaGlkZGVuPSJ0cnVlIj48L2k+IDEwCiAgICAgICAgICAgICAgICA8L2Rpdj48ZGl2IGNsYXNzPSJwcm9wZXJ0eV9sb2NhdGlvbl9pbWFnZSI+IAogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9wZXJ0eV9tYXJrZXIiPjwvc3Bhbj48YSBocmVmPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vcHJvcGVydHlfY2l0eS83NTAxMS8iPjc1MDExPC9hPiwgPGEgaHJlZj0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL3Byb3BlcnR5X2NpdHkvcGFyaXMtMi8iPlBhcmlzPC9hPjwvZGl2PjwvZGl2PgogICAgICAgICAgICAgICAgICAgIDxkaXYgaWQ9InByb3BlcnR5X3VuaXRfY2Fyb3VzZWxfNWU4NGE2YTE5MjcwZSIgY2xhc3M9ImNhcm91c2VsIHByb3BlcnR5X3VuaXRfY2Fyb3VzZWwgc2xpZGUgIiBkYXRhLXJpZGU9ImNhcm91c2VsIiBkYXRhLWludGVydmFsPSJmYWxzZSI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNhcm91c2VsLWlubmVyIj4gICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Iml0ZW0gYWN0aXZlIj4gICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL2VzdGF0ZV9wcm9wZXJ0eS8yLXBpZWNlcy0yMC8iPjxpbWcgd2lkdGg9IjUyNSIgaGVpZ2h0PSIzMjgiIHNyYz0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL3dwLWNvbnRlbnQvdXBsb2Fkcy8yMDIwLzAyLzE1NjcyNDc3OThfVkExOTMyXzFfbC01MjV4MzI4LmpwZyIgY2xhc3M9Imxhenlsb2FkIGltZy1yZXNwb25zaXZlIHdwLXBvc3QtaW1hZ2UiIGFsdD0iIiBkYXRhLW9yaWdpbmFsPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vd3AtY29udGVudC91cGxvYWRzLzIwMjAvMDIvMTU2NzI0Nzc5OF9WQTE5MzJfMV9sLTUyNXgzMjguanBnIiAvPjwvYT4gICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJpdGVtIGxhenktbG9hZC1pdGVtIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vZXN0YXRlX3Byb3BlcnR5LzItcGllY2VzLTIwLyI+PGltZyAgZGF0YS1sYXp5LWxvYWQtc3JjPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vd3AtY29udGVudC91cGxvYWRzLzIwMjAvMDIvMTU2NzI0Nzg3Ml9WQTE5MzJfM19sLTUyNXgzMjguanBnIiBhbHQ9IjIgUGnDqGNlcyIgY2xhc3M9ImltZy1yZXNwb25zaXZlIiAvPjwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PjxkaXYgY2xhc3M9Iml0ZW0gbGF6eS1sb2FkLWl0ZW0iPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS9lc3RhdGVfcHJvcGVydHkvMi1waWVjZXMtMjAvIj48aW1nICBkYXRhLWxhenktbG9hZC1zcmM9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS93cC1jb250ZW50L3VwbG9hZHMvMjAyMC8wMi8xNTY3MjQ3OTA2X1ZBMTkzMl8yX2wtNTI1eDMyOC5qcGciIGFsdD0iMiBQacOoY2VzIiBjbGFzcz0iaW1nLXJlc3BvbnNpdmUiIC8+PC9hPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+PGRpdiBjbGFzcz0iaXRlbSBsYXp5LWxvYWQtaXRlbSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL2VzdGF0ZV9wcm9wZXJ0eS8yLXBpZWNlcy0yMC8iPjxpbWcgIGRhdGEtbGF6eS1sb2FkLXNyYz0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL3dwLWNvbnRlbnQvdXBsb2Fkcy8yMDIwLzAyLzE1NjcyNDc5NDhfVkExOTMyXzRfbC01MjV4MzI4LmpwZyIgYWx0PSIyIFBpw6hjZXMiIGNsYXNzPSJpbWctcmVzcG9uc2l2ZSIgLz48L2E+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj48ZGl2IGNsYXNzPSJpdGVtIGxhenktbG9hZC1pdGVtIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vZXN0YXRlX3Byb3BlcnR5LzItcGllY2VzLTIwLyI+PGltZyAgZGF0YS1sYXp5LWxvYWQtc3JjPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vd3AtY29udGVudC91cGxvYWRzLzIwMjAvMDIvMTU2NzI0ODAyN19WQTE5MzJfNV9sLTUyNXgzMjguanBnIiBhbHQ9IjIgUGnDqGNlcyIgY2xhc3M9ImltZy1yZXNwb25zaXZlIiAvPjwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PjxkaXYgY2xhc3M9Iml0ZW0gbGF6eS1sb2FkLWl0ZW0iPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS9lc3RhdGVfcHJvcGVydHkvMi1waWVjZXMtMjAvIj48aW1nICBkYXRhLWxhenktbG9hZC1zcmM9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS93cC1jb250ZW50L3VwbG9hZHMvMjAyMC8wMi8xNTY3MjQ4MDQ4X1ZBMTkzMl82X2wtNTI1eDMyOC5qcGciIGFsdD0iMiBQacOoY2VzIiBjbGFzcz0iaW1nLXJlc3BvbnNpdmUiIC8+PC9hPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+PGRpdiBjbGFzcz0iaXRlbSBsYXp5LWxvYWQtaXRlbSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL2VzdGF0ZV9wcm9wZXJ0eS8yLXBpZWNlcy0yMC8iPjxpbWcgIGRhdGEtbGF6eS1sb2FkLXNyYz0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL3dwLWNvbnRlbnQvdXBsb2Fkcy8yMDIwLzAyLzE1NjcyNDgwNThfVkExOTMyXzdfbC01MjV4MzI4LmpwZyIgYWx0PSIyIFBpw6hjZXMiIGNsYXNzPSJpbWctcmVzcG9uc2l2ZSIgLz48L2E+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj48ZGl2IGNsYXNzPSJpdGVtIGxhenktbG9hZC1pdGVtIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vZXN0YXRlX3Byb3BlcnR5LzItcGllY2VzLTIwLyI+PGltZyAgZGF0YS1sYXp5LWxvYWQtc3JjPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vd3AtY29udGVudC91cGxvYWRzLzIwMjAvMDIvMTU2NzI0ODEwMF9WQTE5MzJfOF9sLTUyNXgzMjguanBnIiBhbHQ9IjIgUGnDqGNlcyIgY2xhc3M9ImltZy1yZXNwb25zaXZlIiAvPjwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PjxkaXYgY2xhc3M9Iml0ZW0gbGF6eS1sb2FkLWl0ZW0iPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS9lc3RhdGVfcHJvcGVydHkvMi1waWVjZXMtMjAvIj48aW1nICBkYXRhLWxhenktbG9hZC1zcmM9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS93cC1jb250ZW50L3VwbG9hZHMvMjAyMC8wMi8xNTY3MjQ4MTE3X1ZBMTkzMl85X2wtNTI1eDMyOC5qcGciIGFsdD0iMiBQacOoY2VzIiBjbGFzcz0iaW1nLXJlc3BvbnNpdmUiIC8+PC9hPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+PGRpdiBjbGFzcz0iaXRlbSBsYXp5LWxvYWQtaXRlbSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL2VzdGF0ZV9wcm9wZXJ0eS8yLXBpZWNlcy0yMC8iPjxpbWcgIGRhdGEtbGF6eS1sb2FkLXNyYz0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL3dwLWNvbnRlbnQvdXBsb2Fkcy8yMDIwLzAyLzE1NjcyNDgxMzFfVkExOTMyXzEwX2wtNTI1eDMyOC5qcGciIGFsdD0iMiBQacOoY2VzIiBjbGFzcz0iaW1nLXJlc3BvbnNpdmUiIC8+PC9hPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL2VzdGF0ZV9wcm9wZXJ0eS8yLXBpZWNlcy0yMC8iPiA8L2E+PGEgY2xhc3M9ImxlZnQgIGNhcm91c2VsLWNvbnRyb2wiIGhyZWY9IiNwcm9wZXJ0eV91bml0X2Nhcm91c2VsXzVlODRhNmExOTI3MGUiIGRhdGEtc2xpZGU9InByZXYiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJkZW1vLWljb24gaWNvbi1sZWZ0LW9wZW4tYmlnIj48L2k+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2E+CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgY2xhc3M9InJpZ2h0ICBjYXJvdXNlbC1jb250cm9sIiBocmVmPSIjcHJvcGVydHlfdW5pdF9jYXJvdXNlbF81ZTg0YTZhMTkyNzBlIiBkYXRhLXNsaWRlPSJuZXh0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZGVtby1pY29uIGljb24tcmlnaHQtb3Blbi1iaWciPjwvaT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgICA8L2Rpdj48ZGl2IGNsYXNzPSJ0YWctd3JhcHBlciI+PGRpdiBjbGFzcz0ic3RhdHVzLXdyYXBwZXIiPjxkaXYgY2xhc3M9ImFjdGlvbl90YWdfd3JhcHBlciBWRU5EVSAiPlZFTkRVPC9kaXY+PGRpdiBjbGFzcz0icmliYm9uLWluc2lkZSBWRU5EVSI+VkVORFU8L2Rpdj48L2Rpdj48L2Rpdj48L2Rpdj4KCiAgICAgICAgICAgIDxoND48YSBocmVmPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vZXN0YXRlX3Byb3BlcnR5LzItcGllY2VzLTIwLyI+CiAgICAgICAgICAgICAgICAyIFBpw6hjZXMgICAgICAgICAgICAgICAgPC9hPiAKICAgICAgICAgICAgPC9oND4gCiAgICAgICAgICAgIAogICAgICAgICAgICA8ZGl2IGNsYXNzPSJsaXN0aW5nX3VuaXRfcHJpY2Vfd3JhcHBlciI+PHNwYW4gY2xhc3M9InByaWNlX2xhYmVsIj5Ob3VzIGNvbnN1bHRlcjwvc3Bhbj48L2Rpdj4gICAgICAgIAogICAgICAgIAogICAgICAgIAogICAgICAgICAgIAogICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ibGlzdGluZ19kZXRhaWxzIHRoZV9ncmlkX3ZpZXciPgogICAgICAgICAgICAgICAgICAgIFZBMTkzMi1LTUkgJiM4MjExOyBQYXJpcyAxMcOobWUgJiM4MjExOyBFWENMVVNJVklURSBLTUktIEZPTElFLU1FUklDT1VSVCAmIzgyMTE7IDIgUElFQ0VTICYjODIxMTsgREVSTklFUiBFVEFHRSAmIzgyIDxhIGhyZWY9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS9lc3RhdGVfcHJvcGVydHkvMi1waWVjZXMtMjAvIiBjbGFzcz0idW5pdF9tb3JlX3giPltwbHVzXTwvYT4gICAgICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ibGlzdGluZ19kZXRhaWxzIHRoZV9saXN0X3ZpZXciPgogICAgICAgICAgICAgICAgICAgIFZBMTkzMi1LTUkgJiM4MjExOyBQYXJpcyAxMcOobWUgJiM4MjExOyBFWENMVVNJVklURSBLTUktIEZPTElFLU1FUklDT1VSVCAmIzgyMTE7IDIgUElFQ0VTICYjODIxMTsgREVSTklFUiBFVEFHRSAmIzgyIDxhIGhyZWY9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS9lc3RhdGVfcHJvcGVydHkvMi1waWVjZXMtMjAvIiBjbGFzcz0idW5pdF9tb3JlX3giPltwbHVzXTwvYT4gICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgIAoKCiAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb3BlcnR5X2xpc3RpbmdfZGV0YWlscyI+CiAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImluZm9yb29tIj4xPC9zcGFuPjxzcGFuIGNsYXNzPSJpbmZvYmF0aCI+MTwvc3Bhbj4gPHNwYW4gY2xhc3M9ImluZm9zaXplIj4yOSwwMCBtPHN1cD4yPC9zdXA+PC9zcGFuPjxhIGhyZWY9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS9lc3RhdGVfcHJvcGVydHkvMi1waWVjZXMtMjAvIiBjbGFzcz0idW5pdF9kZXRhaWxzX3giPmluZm8gY29tcGzDqHRlPC9hPiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAKICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvcGVydHlfbG9jYXRpb24iPgogICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvcGVydHlfYWdlbnRfd3JhcHBlciI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb3BlcnR5X2FnZW50X2ltYWdlIiBzdHlsZT0iYmFja2dyb3VuZC1pbWFnZTp1cmwoJ2h0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS93cC1jb250ZW50L3VwbG9hZHMvMjAxOS8wNi9QeXLDqW7DqWVzLTQtMTIweDEyMC5qcGcnKSI+PC9kaXY+IAogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9wZXJ0eV9hZ2VudF9pbWFnZV9zaWduIj48aSBjbGFzcz0iZmEgZmEtdXNlci1jaXJjbGUtbyIgYXJpYS1oaWRkZW49InRydWUiPjwvaT48L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL2VzdGF0ZV9hZ2VudC9rbWktcHlyZW5lZXMvIj5LTUkgUFlSw4lOw4lFUzwvYT4gICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ibGlzdGluZ19hY3Rpb25zIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InNoYXJlX3VuaXQiPgogICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vd3d3LmZhY2Vib29rLmNvbS9zaGFyZXIucGhwP3U9aHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL2VzdGF0ZV9wcm9wZXJ0eS8yLXBpZWNlcy0yMC8mYW1wO3Q9MitQaSVDMyVBOGNlcyIgdGFyZ2V0PSJfYmxhbmsiIGNsYXNzPSJzb2NpYWxfZmFjZWJvb2siPjwvYT4KICAgICAgICA8YSBocmVmPSJodHRwczovL3R3aXR0ZXIuY29tL2hvbWU/c3RhdHVzPTIrUGklQzMlQThjZXNodHRwcyUzQSUyRiUyRnd3dy5jYWJpbmV0LWttaS5jb20lMkZlc3RhdGVfcHJvcGVydHklMkYyLXBpZWNlcy0yMCUyRiIgY2xhc3M9InNvY2lhbF90d2VldCIgdGFyZ2V0PSJfYmxhbmsiPjwvYT4KICAgICAgICA8YSBocmVmPSJodHRwczovL3BpbnRlcmVzdC5jb20vcGluL2NyZWF0ZS9idXR0b24vP3VybD1odHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vZXN0YXRlX3Byb3BlcnR5LzItcGllY2VzLTIwLyZhbXA7bWVkaWE9aHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL3dwLWNvbnRlbnQvdXBsb2Fkcy8yMDIwLzAyLzE1NjcyNDc3OThfVkExOTMyXzFfbC5qcGcmYW1wO2Rlc2NyaXB0aW9uPTIrUGklQzMlQThjZXMiIHRhcmdldD0iX2JsYW5rIiBjbGFzcz0ic29jaWFsX3BpbnRlcmVzdCI+PC9hPgogICAgICAgIDxhIGhyZWY9Im1haWx0bzplbWFpbEBlbWFpbC5jb20/aHR0cDovL3N1YmplY3Q9MitQaSVDMyVBOGNlcyYjMDM4O2JvZHk9aHR0cHMlM0ElMkYlMkZ3d3cuY2FiaW5ldC1rbWkuY29tJTJGZXN0YXRlX3Byb3BlcnR5JTJGMi1waWVjZXMtMjAlMkYiIGRhdGEtYWN0aW9uPSJzaGFyZSBlbWFpbCIgIGNsYXNzPSJzb2NpYWxfZW1haWwiPjwvYT4KCiAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InNoYXJlX2xpc3QiICBkYXRhLW9yaWdpbmFsLXRpdGxlPSJwYXJ0YWdlciIgPjwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iaWNvbi1mYXYgaWNvbi1mYXYtb2ZmIiBkYXRhLW9yaWdpbmFsLXRpdGxlPSJham91dGVyIGF1eCBGYXZvcmlzIiBkYXRhLXBvc3RpZD0iMjIzMjAiPjwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iY29tcGFyZS1hY3Rpb24iIGRhdGEtb3JpZ2luYWwtdGl0bGU9ImNvbXBhcmVyIiBkYXRhLXBpbWFnZT0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL3dwLWNvbnRlbnQvdXBsb2Fkcy8yMDIwLzAyLzE1NjcyNDc3OThfVkExOTMyXzFfbC0xNDN4ODMuanBnIiBkYXRhLXBpZD0iMjIzMjAiPjwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PiAgICAgICAgPC9kaXY+ICAgICAgICAgICAgIAogICAgPC9kaXY+ICAKCgoKPGRpdiBjbGFzcz0iY29sLW1kLTQgaGFzX3Byb3Bfc2xpZGVyICBsaXN0aW5nX3dyYXBwZXIiIGRhdGEtb3JnPSI0IiBkYXRhLWxpc3RpZD0iMjIzMTQiID4gCiAgICA8ZGl2IGNsYXNzPSJwcm9wZXJ0eV9saXN0aW5nICAgIiBkYXRhLWxpbms9IiI+CiAgICAgICAgCiAgICAgICAgPGRpdiBjbGFzcz0ibGlzdGluZy11bml0LWltZy13cmFwcGVyIj48ZGl2IGNsYXNzPSJwcm9wX25ld19kZXRhaWxzIj48ZGl2IGNsYXNzPSJwcm9wX25ld19kZXRhaWxzX2JhY2siPjwvZGl2PjxkaXYgY2xhc3M9InByb3BlcnR5X21lZGlhIj48aSBjbGFzcz0iZmEgZmEtY2FtZXJhIiBhcmlhLWhpZGRlbj0idHJ1ZSI+PC9pPiA1CiAgICAgICAgICAgICAgICA8L2Rpdj48ZGl2IGNsYXNzPSJwcm9wZXJ0eV9sb2NhdGlvbl9pbWFnZSI+IAogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9wZXJ0eV9tYXJrZXIiPjwvc3Bhbj48YSBocmVmPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vcHJvcGVydHlfY2l0eS83NTAyMC8iPjc1MDIwPC9hPiwgPGEgaHJlZj0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL3Byb3BlcnR5X2NpdHkvcGFyaXMtMi8iPlBhcmlzPC9hPjwvZGl2PjwvZGl2PgogICAgICAgICAgICAgICAgICAgIDxkaXYgaWQ9InByb3BlcnR5X3VuaXRfY2Fyb3VzZWxfNWU4NGE2YTE5NjJhYiIgY2xhc3M9ImNhcm91c2VsIHByb3BlcnR5X3VuaXRfY2Fyb3VzZWwgc2xpZGUgIiBkYXRhLXJpZGU9ImNhcm91c2VsIiBkYXRhLWludGVydmFsPSJmYWxzZSI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNhcm91c2VsLWlubmVyIj4gICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Iml0ZW0gYWN0aXZlIj4gICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL2VzdGF0ZV9wcm9wZXJ0eS8yLXBpZWNlcy0xOS8iPjxpbWcgd2lkdGg9IjUyNSIgaGVpZ2h0PSIzMjgiIHNyYz0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL3dwLWNvbnRlbnQvdXBsb2Fkcy8yMDIwLzAyLzE1NjUzMTc2MTNfVkExOTMwXzFfbC01MjV4MzI4LmpwZyIgY2xhc3M9Imxhenlsb2FkIGltZy1yZXNwb25zaXZlIHdwLXBvc3QtaW1hZ2UiIGFsdD0iIiBkYXRhLW9yaWdpbmFsPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vd3AtY29udGVudC91cGxvYWRzLzIwMjAvMDIvMTU2NTMxNzYxM19WQTE5MzBfMV9sLTUyNXgzMjguanBnIiAvPjwvYT4gICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJpdGVtIGxhenktbG9hZC1pdGVtIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vZXN0YXRlX3Byb3BlcnR5LzItcGllY2VzLTE5LyI+PGltZyAgZGF0YS1sYXp5LWxvYWQtc3JjPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vd3AtY29udGVudC91cGxvYWRzLzIwMjAvMDIvMTU2NTMxNzYyNF9WQTE5MzBfMl9sLTUyNXgzMjguanBnIiBhbHQ9IjIgUElFQ0VTIiBjbGFzcz0iaW1nLXJlc3BvbnNpdmUiIC8+PC9hPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+PGRpdiBjbGFzcz0iaXRlbSBsYXp5LWxvYWQtaXRlbSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL2VzdGF0ZV9wcm9wZXJ0eS8yLXBpZWNlcy0xOS8iPjxpbWcgIGRhdGEtbGF6eS1sb2FkLXNyYz0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL3dwLWNvbnRlbnQvdXBsb2Fkcy8yMDIwLzAyLzE1NjUzMTc2MzNfVkExOTMwXzNfbC01MjV4MzI4LmpwZyIgYWx0PSIyIFBJRUNFUyIgY2xhc3M9ImltZy1yZXNwb25zaXZlIiAvPjwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PjxkaXYgY2xhc3M9Iml0ZW0gbGF6eS1sb2FkLWl0ZW0iPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS9lc3RhdGVfcHJvcGVydHkvMi1waWVjZXMtMTkvIj48aW1nICBkYXRhLWxhenktbG9hZC1zcmM9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS93cC1jb250ZW50L3VwbG9hZHMvMjAyMC8wMi8xNTY1MzE3NjQzX1ZBMTkzMF80X2wtNTI1eDMyOC5qcGciIGFsdD0iMiBQSUVDRVMiIGNsYXNzPSJpbWctcmVzcG9uc2l2ZSIgLz48L2E+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj48ZGl2IGNsYXNzPSJpdGVtIGxhenktbG9hZC1pdGVtIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vZXN0YXRlX3Byb3BlcnR5LzItcGllY2VzLTE5LyI+PGltZyAgZGF0YS1sYXp5LWxvYWQtc3JjPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vd3AtY29udGVudC91cGxvYWRzLzIwMjAvMDIvMTU2NTMxNzY1MF9WQTE5MzBfNV9sLTUyNXgzMjguanBnIiBhbHQ9IjIgUElFQ0VTIiBjbGFzcz0iaW1nLXJlc3BvbnNpdmUiIC8+PC9hPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL2VzdGF0ZV9wcm9wZXJ0eS8yLXBpZWNlcy0xOS8iPiA8L2E+PGEgY2xhc3M9ImxlZnQgIGNhcm91c2VsLWNvbnRyb2wiIGhyZWY9IiNwcm9wZXJ0eV91bml0X2Nhcm91c2VsXzVlODRhNmExOTYyYWIiIGRhdGEtc2xpZGU9InByZXYiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJkZW1vLWljb24gaWNvbi1sZWZ0LW9wZW4tYmlnIj48L2k+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2E+CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgY2xhc3M9InJpZ2h0ICBjYXJvdXNlbC1jb250cm9sIiBocmVmPSIjcHJvcGVydHlfdW5pdF9jYXJvdXNlbF81ZTg0YTZhMTk2MmFiIiBkYXRhLXNsaWRlPSJuZXh0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZGVtby1pY29uIGljb24tcmlnaHQtb3Blbi1iaWciPjwvaT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgICA8L2Rpdj48ZGl2IGNsYXNzPSJ0YWctd3JhcHBlciI+PGRpdiBjbGFzcz0ic3RhdHVzLXdyYXBwZXIiPjxkaXYgY2xhc3M9ImFjdGlvbl90YWdfd3JhcHBlciBWRU5EVSAiPlZFTkRVPC9kaXY+PGRpdiBjbGFzcz0icmliYm9uLWluc2lkZSBWRU5EVSI+VkVORFU8L2Rpdj48L2Rpdj48L2Rpdj48L2Rpdj4KCiAgICAgICAgICAgIDxoND48YSBocmVmPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vZXN0YXRlX3Byb3BlcnR5LzItcGllY2VzLTE5LyI+CiAgICAgICAgICAgICAgICAyIFBJRUNFUyAgICAgICAgICAgICAgICA8L2E+IAogICAgICAgICAgICA8L2g0PiAKICAgICAgICAgICAgCiAgICAgICAgICAgIDxkaXYgY2xhc3M9Imxpc3RpbmdfdW5pdF9wcmljZV93cmFwcGVyIj48c3BhbiBjbGFzcz0icHJpY2VfbGFiZWwiPk5vdXMgY29uc3VsdGVyPC9zcGFuPjwvZGl2PiAgICAgICAgCiAgICAgICAgCiAgICAgICAgCiAgICAgICAgICAgCiAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJsaXN0aW5nX2RldGFpbHMgdGhlX2dyaWRfdmlldyI+CiAgICAgICAgICAgICAgICAgICAgVkExOTMwLUtNSSAmIzgyMTE7IFBhcmlzIDIww6htZSAmIzgyMTE7IE1hcmFpY2hlcnMvUG9ydGUgZGUgTW9udHJldWlsICYjODIxMTsgQXUgMsOobWUgZXQgZGVybmllciDDqXRhZ2UgZCYjODIxNzt1biBwZSA8YSBocmVmPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vZXN0YXRlX3Byb3BlcnR5LzItcGllY2VzLTE5LyIgY2xhc3M9InVuaXRfbW9yZV94Ij5bcGx1c108L2E+ICAgICAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Imxpc3RpbmdfZGV0YWlscyB0aGVfbGlzdF92aWV3Ij4KICAgICAgICAgICAgICAgICAgICBWQTE5MzAtS01JICYjODIxMTsgUGFyaXMgMjDDqG1lICYjODIxMTsgTWFyYWljaGVycy9Qb3J0ZSBkZSBNb250cmV1aWwgJiM4MjExOyBBdSAyw6htZSBldCBkZXJuaWVyIMOpdGFnZSBkJiM4MjE3O3VuIHBlIDxhIGhyZWY9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS9lc3RhdGVfcHJvcGVydHkvMi1waWVjZXMtMTkvIiBjbGFzcz0idW5pdF9tb3JlX3giPltwbHVzXTwvYT4gICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgIAoKCiAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb3BlcnR5X2xpc3RpbmdfZGV0YWlscyI+CiAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImluZm9yb29tIj4xPC9zcGFuPjxzcGFuIGNsYXNzPSJpbmZvYmF0aCI+MTwvc3Bhbj4gPHNwYW4gY2xhc3M9ImluZm9zaXplIj4zNiwwMCBtPHN1cD4yPC9zdXA+PC9zcGFuPjxhIGhyZWY9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS9lc3RhdGVfcHJvcGVydHkvMi1waWVjZXMtMTkvIiBjbGFzcz0idW5pdF9kZXRhaWxzX3giPmluZm8gY29tcGzDqHRlPC9hPiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAKICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvcGVydHlfbG9jYXRpb24iPgogICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvcGVydHlfYWdlbnRfd3JhcHBlciI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb3BlcnR5X2FnZW50X2ltYWdlIiBzdHlsZT0iYmFja2dyb3VuZC1pbWFnZTp1cmwoJ2h0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS93cC1jb250ZW50L3VwbG9hZHMvMjAxOS8wNi9QeXLDqW7DqWVzLTQtMTIweDEyMC5qcGcnKSI+PC9kaXY+IAogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9wZXJ0eV9hZ2VudF9pbWFnZV9zaWduIj48aSBjbGFzcz0iZmEgZmEtdXNlci1jaXJjbGUtbyIgYXJpYS1oaWRkZW49InRydWUiPjwvaT48L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL2VzdGF0ZV9hZ2VudC9rbWktcHlyZW5lZXMvIj5LTUkgUFlSw4lOw4lFUzwvYT4gICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ibGlzdGluZ19hY3Rpb25zIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InNoYXJlX3VuaXQiPgogICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vd3d3LmZhY2Vib29rLmNvbS9zaGFyZXIucGhwP3U9aHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL2VzdGF0ZV9wcm9wZXJ0eS8yLXBpZWNlcy0xOS8mYW1wO3Q9MitQSUVDRVMiIHRhcmdldD0iX2JsYW5rIiBjbGFzcz0ic29jaWFsX2ZhY2Vib29rIj48L2E+CiAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly90d2l0dGVyLmNvbS9ob21lP3N0YXR1cz0yK1BJRUNFU2h0dHBzJTNBJTJGJTJGd3d3LmNhYmluZXQta21pLmNvbSUyRmVzdGF0ZV9wcm9wZXJ0eSUyRjItcGllY2VzLTE5JTJGIiBjbGFzcz0ic29jaWFsX3R3ZWV0IiB0YXJnZXQ9Il9ibGFuayI+PC9hPgogICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vcGludGVyZXN0LmNvbS9waW4vY3JlYXRlL2J1dHRvbi8/dXJsPWh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS9lc3RhdGVfcHJvcGVydHkvMi1waWVjZXMtMTkvJmFtcDttZWRpYT1odHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vd3AtY29udGVudC91cGxvYWRzLzIwMjAvMDIvMTU2NTMxNzYxM19WQTE5MzBfMV9sLmpwZyZhbXA7ZGVzY3JpcHRpb249MitQSUVDRVMiIHRhcmdldD0iX2JsYW5rIiBjbGFzcz0ic29jaWFsX3BpbnRlcmVzdCI+PC9hPgogICAgICAgIDxhIGhyZWY9Im1haWx0bzplbWFpbEBlbWFpbC5jb20/aHR0cDovL3N1YmplY3Q9MitQSUVDRVMmIzAzODtib2R5PWh0dHBzJTNBJTJGJTJGd3d3LmNhYmluZXQta21pLmNvbSUyRmVzdGF0ZV9wcm9wZXJ0eSUyRjItcGllY2VzLTE5JTJGIiBkYXRhLWFjdGlvbj0ic2hhcmUgZW1haWwiICBjbGFzcz0ic29jaWFsX2VtYWlsIj48L2E+CgogICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJzaGFyZV9saXN0IiAgZGF0YS1vcmlnaW5hbC10aXRsZT0icGFydGFnZXIiID48L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9Imljb24tZmF2IGljb24tZmF2LW9mZiIgZGF0YS1vcmlnaW5hbC10aXRsZT0iYWpvdXRlciBhdXggRmF2b3JpcyIgZGF0YS1wb3N0aWQ9IjIyMzE0Ij48L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImNvbXBhcmUtYWN0aW9uIiBkYXRhLW9yaWdpbmFsLXRpdGxlPSJjb21wYXJlciIgZGF0YS1waW1hZ2U9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS93cC1jb250ZW50L3VwbG9hZHMvMjAyMC8wMi8xNTY1MzE3NjEzX1ZBMTkzMF8xX2wtMTQzeDgzLmpwZyIgZGF0YS1waWQ9IjIyMzE0Ij48L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4gICAgICAgIDwvZGl2PiAgICAgICAgICAgICAKICAgIDwvZGl2PiAgCgoKCjxkaXYgY2xhc3M9ImNvbC1tZC00IGhhc19wcm9wX3NsaWRlciAgbGlzdGluZ193cmFwcGVyIiBkYXRhLW9yZz0iNCIgZGF0YS1saXN0aWQ9IjIyMzA3IiA+IAogICAgPGRpdiBjbGFzcz0icHJvcGVydHlfbGlzdGluZyAgICIgZGF0YS1saW5rPSIiPgogICAgICAgIAogICAgICAgIDxkaXYgY2xhc3M9Imxpc3RpbmctdW5pdC1pbWctd3JhcHBlciI+PGRpdiBjbGFzcz0icHJvcF9uZXdfZGV0YWlscyI+PGRpdiBjbGFzcz0icHJvcF9uZXdfZGV0YWlsc19iYWNrIj48L2Rpdj48ZGl2IGNsYXNzPSJwcm9wZXJ0eV9tZWRpYSI+PGkgY2xhc3M9ImZhIGZhLWNhbWVyYSIgYXJpYS1oaWRkZW49InRydWUiPjwvaT4gNgogICAgICAgICAgICAgICAgPC9kaXY+PGRpdiBjbGFzcz0icHJvcGVydHlfbG9jYXRpb25faW1hZ2UiPiAKICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvcGVydHlfbWFya2VyIj48L3NwYW4+PGEgaHJlZj0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL3Byb3BlcnR5X2NpdHkvNzUwMTEvIj43NTAxMTwvYT4sIDxhIGhyZWY9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS9wcm9wZXJ0eV9jaXR5L3BhcmlzLTIvIj5QYXJpczwvYT48L2Rpdj48L2Rpdj4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGlkPSJwcm9wZXJ0eV91bml0X2Nhcm91c2VsXzVlODRhNmExOTljMzciIGNsYXNzPSJjYXJvdXNlbCBwcm9wZXJ0eV91bml0X2Nhcm91c2VsIHNsaWRlICIgZGF0YS1yaWRlPSJjYXJvdXNlbCIgZGF0YS1pbnRlcnZhbD0iZmFsc2UiPgogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjYXJvdXNlbC1pbm5lciI+ICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJpdGVtIGFjdGl2ZSI+ICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS9lc3RhdGVfcHJvcGVydHkvMi1waWVjZXMtY2F2ZS0yMi8iPjxpbWcgd2lkdGg9IjUyNSIgaGVpZ2h0PSIzMjgiIHNyYz0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL3dwLWNvbnRlbnQvdXBsb2Fkcy8yMDIwLzAyLzE1NjQ5OTU1NDVfVkExOTI4XzZfbC01MjV4MzI4LmpwZyIgY2xhc3M9Imxhenlsb2FkIGltZy1yZXNwb25zaXZlIHdwLXBvc3QtaW1hZ2UiIGFsdD0iIiBkYXRhLW9yaWdpbmFsPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vd3AtY29udGVudC91cGxvYWRzLzIwMjAvMDIvMTU2NDk5NTU0NV9WQTE5MjhfNl9sLTUyNXgzMjguanBnIiAvPjwvYT4gICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJpdGVtIGxhenktbG9hZC1pdGVtIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vZXN0YXRlX3Byb3BlcnR5LzItcGllY2VzLWNhdmUtMjIvIj48aW1nICBkYXRhLWxhenktbG9hZC1zcmM9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS93cC1jb250ZW50L3VwbG9hZHMvMjAyMC8wMi8xNTY0OTk1NDk5X1ZBMTkyOF8xX2wtNTI1eDMyOC5qcGciIGFsdD0iMiBQSUVDRVMgKyBDQVZFIiBjbGFzcz0iaW1nLXJlc3BvbnNpdmUiIC8+PC9hPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+PGRpdiBjbGFzcz0iaXRlbSBsYXp5LWxvYWQtaXRlbSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL2VzdGF0ZV9wcm9wZXJ0eS8yLXBpZWNlcy1jYXZlLTIyLyI+PGltZyAgZGF0YS1sYXp5LWxvYWQtc3JjPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vd3AtY29udGVudC91cGxvYWRzLzIwMjAvMDIvMTU2NDk5NTUxOF9WQTE5MjhfM19sLTUyNXgzMjguanBnIiBhbHQ9IjIgUElFQ0VTICsgQ0FWRSIgY2xhc3M9ImltZy1yZXNwb25zaXZlIiAvPjwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PjxkaXYgY2xhc3M9Iml0ZW0gbGF6eS1sb2FkLWl0ZW0iPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS9lc3RhdGVfcHJvcGVydHkvMi1waWVjZXMtY2F2ZS0yMi8iPjxpbWcgIGRhdGEtbGF6eS1sb2FkLXNyYz0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL3dwLWNvbnRlbnQvdXBsb2Fkcy8yMDIwLzAyLzE1NjQ5OTU1MjVfVkExOTI4XzRfbC01MjV4MzI4LmpwZyIgYWx0PSIyIFBJRUNFUyArIENBVkUiIGNsYXNzPSJpbWctcmVzcG9uc2l2ZSIgLz48L2E+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj48ZGl2IGNsYXNzPSJpdGVtIGxhenktbG9hZC1pdGVtIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vZXN0YXRlX3Byb3BlcnR5LzItcGllY2VzLWNhdmUtMjIvIj48aW1nICBkYXRhLWxhenktbG9hZC1zcmM9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS93cC1jb250ZW50L3VwbG9hZHMvMjAyMC8wMi8xNTY0OTk1NTM0X1ZBMTkyOF81X2wtNTI1eDMyOC5qcGciIGFsdD0iMiBQSUVDRVMgKyBDQVZFIiBjbGFzcz0iaW1nLXJlc3BvbnNpdmUiIC8+PC9hPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+PGRpdiBjbGFzcz0iaXRlbSBsYXp5LWxvYWQtaXRlbSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL2VzdGF0ZV9wcm9wZXJ0eS8yLXBpZWNlcy1jYXZlLTIyLyI+PGltZyAgZGF0YS1sYXp5LWxvYWQtc3JjPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vd3AtY29udGVudC91cGxvYWRzLzIwMjAvMDIvMTU2NDk5NTUwOV9WQTE5MjhfMl9sLTUyNXgzMjguanBnIiBhbHQ9IjIgUElFQ0VTICsgQ0FWRSIgY2xhc3M9ImltZy1yZXNwb25zaXZlIiAvPjwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS9lc3RhdGVfcHJvcGVydHkvMi1waWVjZXMtY2F2ZS0yMi8iPiA8L2E+PGEgY2xhc3M9ImxlZnQgIGNhcm91c2VsLWNvbnRyb2wiIGhyZWY9IiNwcm9wZXJ0eV91bml0X2Nhcm91c2VsXzVlODRhNmExOTljMzciIGRhdGEtc2xpZGU9InByZXYiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJkZW1vLWljb24gaWNvbi1sZWZ0LW9wZW4tYmlnIj48L2k+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2E+CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgY2xhc3M9InJpZ2h0ICBjYXJvdXNlbC1jb250cm9sIiBocmVmPSIjcHJvcGVydHlfdW5pdF9jYXJvdXNlbF81ZTg0YTZhMTk5YzM3IiBkYXRhLXNsaWRlPSJuZXh0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZGVtby1pY29uIGljb24tcmlnaHQtb3Blbi1iaWciPjwvaT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgICA8L2Rpdj48ZGl2IGNsYXNzPSJ0YWctd3JhcHBlciI+PGRpdiBjbGFzcz0ic3RhdHVzLXdyYXBwZXIiPjxkaXYgY2xhc3M9ImFjdGlvbl90YWdfd3JhcHBlciBWRU5EVSAiPlZFTkRVPC9kaXY+PGRpdiBjbGFzcz0icmliYm9uLWluc2lkZSBWRU5EVSI+VkVORFU8L2Rpdj48L2Rpdj48L2Rpdj48L2Rpdj4KCiAgICAgICAgICAgIDxoND48YSBocmVmPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vZXN0YXRlX3Byb3BlcnR5LzItcGllY2VzLWNhdmUtMjIvIj4KICAgICAgICAgICAgICAgIDIgUElFQ0VTICsgQ0FWRSAgICAgICAgICAgICAgICA8L2E+IAogICAgICAgICAgICA8L2g0PiAKICAgICAgICAgICAgCiAgICAgICAgICAgIDxkaXYgY2xhc3M9Imxpc3RpbmdfdW5pdF9wcmljZV93cmFwcGVyIj48c3BhbiBjbGFzcz0icHJpY2VfbGFiZWwiPk5vdXMgY29uc3VsdGVyPC9zcGFuPjwvZGl2PiAgICAgICAgCiAgICAgICAgCiAgICAgICAgCiAgICAgICAgICAgCiAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJsaXN0aW5nX2RldGFpbHMgdGhlX2dyaWRfdmlldyI+CiAgICAgICAgICAgICAgICAgICAgVkExOTI4LUtNSSAmIzgyMTE7IFBBUklTIDExw6htZSAmIzgyMTE7IFNBSU5UIE1BVVIgJiM4MjExOyAyLzMgcGnDqGNlcyAmIzgyMTE7IERhbnMgdW4gYmVsIGltbWV1YmxlIGVuIGJyaXF1ZXMgZGVzIGFuIDxhIGhyZWY9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS9lc3RhdGVfcHJvcGVydHkvMi1waWVjZXMtY2F2ZS0yMi8iIGNsYXNzPSJ1bml0X21vcmVfeCI+W3BsdXNdPC9hPiAgICAgICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJsaXN0aW5nX2RldGFpbHMgdGhlX2xpc3RfdmlldyI+CiAgICAgICAgICAgICAgICAgICAgVkExOTI4LUtNSSAmIzgyMTE7IFBBUklTIDExw6htZSAmIzgyMTE7IFNBSU5UIE1BVVIgJiM4MjExOyAyLzMgcGnDqGNlcyAmIzgyMTE7IERhbnMgdW4gYmVsIGltbWV1YmxlIGVuIGJyaXF1ZXMgZGVzIGFuIDxhIGhyZWY9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS9lc3RhdGVfcHJvcGVydHkvMi1waWVjZXMtY2F2ZS0yMi8iIGNsYXNzPSJ1bml0X21vcmVfeCI+W3BsdXNdPC9hPiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgCgoKICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvcGVydHlfbGlzdGluZ19kZXRhaWxzIj4KICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iaW5mb3Jvb20iPjE8L3NwYW4+PHNwYW4gY2xhc3M9ImluZm9iYXRoIj4xPC9zcGFuPiA8c3BhbiBjbGFzcz0iaW5mb3NpemUiPjUwLDAwIG08c3VwPjI8L3N1cD48L3NwYW4+PGEgaHJlZj0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL2VzdGF0ZV9wcm9wZXJ0eS8yLXBpZWNlcy1jYXZlLTIyLyIgY2xhc3M9InVuaXRfZGV0YWlsc194Ij5pbmZvIGNvbXBsw6h0ZTwvYT4gICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgCiAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb3BlcnR5X2xvY2F0aW9uIj4KICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb3BlcnR5X2FnZW50X3dyYXBwZXIiPgogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9wZXJ0eV9hZ2VudF9pbWFnZSIgc3R5bGU9ImJhY2tncm91bmQtaW1hZ2U6dXJsKCdodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vd3AtY29udGVudC91cGxvYWRzLzIwMTkvMDYvUHlyw6luw6llcy00LTEyMHgxMjAuanBnJykiPjwvZGl2PiAKICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvcGVydHlfYWdlbnRfaW1hZ2Vfc2lnbiI+PGkgY2xhc3M9ImZhIGZhLXVzZXItY2lyY2xlLW8iIGFyaWEtaGlkZGVuPSJ0cnVlIj48L2k+PC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS9lc3RhdGVfYWdlbnQva21pLXB5cmVuZWVzLyI+S01JIFBZUsOJTsOJRVM8L2E+ICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Imxpc3RpbmdfYWN0aW9ucyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJzaGFyZV91bml0Ij4KICAgICAgICA8YSBocmVmPSJodHRwczovL3d3dy5mYWNlYm9vay5jb20vc2hhcmVyLnBocD91PWh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS9lc3RhdGVfcHJvcGVydHkvMi1waWVjZXMtY2F2ZS0yMi8mYW1wO3Q9MitQSUVDRVMrJTJCK0NBVkUiIHRhcmdldD0iX2JsYW5rIiBjbGFzcz0ic29jaWFsX2ZhY2Vib29rIj48L2E+CiAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly90d2l0dGVyLmNvbS9ob21lP3N0YXR1cz0yK1BJRUNFUyslMkIrQ0FWRWh0dHBzJTNBJTJGJTJGd3d3LmNhYmluZXQta21pLmNvbSUyRmVzdGF0ZV9wcm9wZXJ0eSUyRjItcGllY2VzLWNhdmUtMjIlMkYiIGNsYXNzPSJzb2NpYWxfdHdlZXQiIHRhcmdldD0iX2JsYW5rIj48L2E+CiAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9waW50ZXJlc3QuY29tL3Bpbi9jcmVhdGUvYnV0dG9uLz91cmw9aHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL2VzdGF0ZV9wcm9wZXJ0eS8yLXBpZWNlcy1jYXZlLTIyLyZhbXA7bWVkaWE9aHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL3dwLWNvbnRlbnQvdXBsb2Fkcy8yMDIwLzAyLzE1NjQ5OTU1NDVfVkExOTI4XzZfbC5qcGcmYW1wO2Rlc2NyaXB0aW9uPTIrUElFQ0VTKyUyQitDQVZFIiB0YXJnZXQ9Il9ibGFuayIgY2xhc3M9InNvY2lhbF9waW50ZXJlc3QiPjwvYT4KICAgICAgICA8YSBocmVmPSJtYWlsdG86ZW1haWxAZW1haWwuY29tP2h0dHA6Ly9zdWJqZWN0PTIrUElFQ0VTKyUyQitDQVZFJiMwMzg7Ym9keT1odHRwcyUzQSUyRiUyRnd3dy5jYWJpbmV0LWttaS5jb20lMkZlc3RhdGVfcHJvcGVydHklMkYyLXBpZWNlcy1jYXZlLTIyJTJGIiBkYXRhLWFjdGlvbj0ic2hhcmUgZW1haWwiICBjbGFzcz0ic29jaWFsX2VtYWlsIj48L2E+CgogICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJzaGFyZV9saXN0IiAgZGF0YS1vcmlnaW5hbC10aXRsZT0icGFydGFnZXIiID48L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9Imljb24tZmF2IGljb24tZmF2LW9mZiIgZGF0YS1vcmlnaW5hbC10aXRsZT0iYWpvdXRlciBhdXggRmF2b3JpcyIgZGF0YS1wb3N0aWQ9IjIyMzA3Ij48L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImNvbXBhcmUtYWN0aW9uIiBkYXRhLW9yaWdpbmFsLXRpdGxlPSJjb21wYXJlciIgZGF0YS1waW1hZ2U9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS93cC1jb250ZW50L3VwbG9hZHMvMjAyMC8wMi8xNTY0OTk1NTQ1X1ZBMTkyOF82X2wtMTQzeDgzLmpwZyIgZGF0YS1waWQ9IjIyMzA3Ij48L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4gICAgICAgIDwvZGl2PiAgICAgICAgICAgICAKICAgIDwvZGl2PiAgCgoKCjxkaXYgY2xhc3M9ImNvbC1tZC00IGhhc19wcm9wX3NsaWRlciAgbGlzdGluZ193cmFwcGVyIiBkYXRhLW9yZz0iNCIgZGF0YS1saXN0aWQ9IjIyMjk4IiA+IAogICAgPGRpdiBjbGFzcz0icHJvcGVydHlfbGlzdGluZyAgICIgZGF0YS1saW5rPSIiPgogICAgICAgIAogICAgICAgIDxkaXYgY2xhc3M9Imxpc3RpbmctdW5pdC1pbWctd3JhcHBlciI+PGRpdiBjbGFzcz0icHJvcF9uZXdfZGV0YWlscyI+PGRpdiBjbGFzcz0icHJvcF9uZXdfZGV0YWlsc19iYWNrIj48L2Rpdj48ZGl2IGNsYXNzPSJwcm9wZXJ0eV9tZWRpYSI+PGkgY2xhc3M9ImZhIGZhLWNhbWVyYSIgYXJpYS1oaWRkZW49InRydWUiPjwvaT4gOAogICAgICAgICAgICAgICAgPC9kaXY+PGRpdiBjbGFzcz0icHJvcGVydHlfbG9jYXRpb25faW1hZ2UiPiAKICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvcGVydHlfbWFya2VyIj48L3NwYW4+PGEgaHJlZj0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL3Byb3BlcnR5X2NpdHkvNzUwMTEvIj43NTAxMTwvYT4sIDxhIGhyZWY9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS9wcm9wZXJ0eV9jaXR5L3BhcmlzLTIvIj5QYXJpczwvYT48L2Rpdj48L2Rpdj4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGlkPSJwcm9wZXJ0eV91bml0X2Nhcm91c2VsXzVlODRhNmExOWRiYzkiIGNsYXNzPSJjYXJvdXNlbCBwcm9wZXJ0eV91bml0X2Nhcm91c2VsIHNsaWRlICIgZGF0YS1yaWRlPSJjYXJvdXNlbCIgZGF0YS1pbnRlcnZhbD0iZmFsc2UiPgogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjYXJvdXNlbC1pbm5lciI+ICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJpdGVtIGFjdGl2ZSI+ICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS9lc3RhdGVfcHJvcGVydHkvc3R1ZGlvLTEwLyI+PGltZyB3aWR0aD0iNTI1IiBoZWlnaHQ9IjMyOCIgc3JjPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vd3AtY29udGVudC91cGxvYWRzLzIwMjAvMDIvMTU2NDY1OTMzM19WQTE5MjJfMl9sLTUyNXgzMjguanBnIiBjbGFzcz0ibGF6eWxvYWQgaW1nLXJlc3BvbnNpdmUgd3AtcG9zdC1pbWFnZSIgYWx0PSIiIGRhdGEtb3JpZ2luYWw9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS93cC1jb250ZW50L3VwbG9hZHMvMjAyMC8wMi8xNTY0NjU5MzMzX1ZBMTkyMl8yX2wtNTI1eDMyOC5qcGciIC8+PC9hPiAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Iml0ZW0gbGF6eS1sb2FkLWl0ZW0iPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS9lc3RhdGVfcHJvcGVydHkvc3R1ZGlvLTEwLyI+PGltZyAgZGF0YS1sYXp5LWxvYWQtc3JjPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vd3AtY29udGVudC91cGxvYWRzLzIwMjAvMDIvMTU2NDY1OTM0Nl9WQTE5MjJfNl9sLTUyNXgzMjguanBnIiBhbHQ9IlNUVURJTyIgY2xhc3M9ImltZy1yZXNwb25zaXZlIiAvPjwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PjxkaXYgY2xhc3M9Iml0ZW0gbGF6eS1sb2FkLWl0ZW0iPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS9lc3RhdGVfcHJvcGVydHkvc3R1ZGlvLTEwLyI+PGltZyAgZGF0YS1sYXp5LWxvYWQtc3JjPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vd3AtY29udGVudC91cGxvYWRzLzIwMjAvMDIvMTU2NDY1OTM0OF9WQTE5MjJfN19sLTUyNXgzMjguanBnIiBhbHQ9IlNUVURJTyIgY2xhc3M9ImltZy1yZXNwb25zaXZlIiAvPjwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PjxkaXYgY2xhc3M9Iml0ZW0gbGF6eS1sb2FkLWl0ZW0iPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS9lc3RhdGVfcHJvcGVydHkvc3R1ZGlvLTEwLyI+PGltZyAgZGF0YS1sYXp5LWxvYWQtc3JjPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vd3AtY29udGVudC91cGxvYWRzLzIwMjAvMDIvMTU2NDY1OTM0M19WQTE5MjJfNV9sLTUyNXgzMjguanBnIiBhbHQ9IlNUVURJTyIgY2xhc3M9ImltZy1yZXNwb25zaXZlIiAvPjwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PjxkaXYgY2xhc3M9Iml0ZW0gbGF6eS1sb2FkLWl0ZW0iPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS9lc3RhdGVfcHJvcGVydHkvc3R1ZGlvLTEwLyI+PGltZyAgZGF0YS1sYXp5LWxvYWQtc3JjPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vd3AtY29udGVudC91cGxvYWRzLzIwMjAvMDIvMTU2NDY1OTM1M19WQTE5MjJfOV9sLTUyNXgzMjguanBnIiBhbHQ9IlNUVURJTyIgY2xhc3M9ImltZy1yZXNwb25zaXZlIiAvPjwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PjxkaXYgY2xhc3M9Iml0ZW0gbGF6eS1sb2FkLWl0ZW0iPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS9lc3RhdGVfcHJvcGVydHkvc3R1ZGlvLTEwLyI+PGltZyAgZGF0YS1sYXp5LWxvYWQtc3JjPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vd3AtY29udGVudC91cGxvYWRzLzIwMjAvMDIvMTU2NDY1OTM2Ml9WQTE5MjJfMTJfbC01MjV4MzI4LmpwZyIgYWx0PSJTVFVESU8iIGNsYXNzPSJpbWctcmVzcG9uc2l2ZSIgLz48L2E+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj48ZGl2IGNsYXNzPSJpdGVtIGxhenktbG9hZC1pdGVtIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vZXN0YXRlX3Byb3BlcnR5L3N0dWRpby0xMC8iPjxpbWcgIGRhdGEtbGF6eS1sb2FkLXNyYz0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL3dwLWNvbnRlbnQvdXBsb2Fkcy8yMDIwLzAyLzE1NjQ2NTkzNDBfVkExOTIyXzRfbC01MjV4MzI4LmpwZyIgYWx0PSJTVFVESU8iIGNsYXNzPSJpbWctcmVzcG9uc2l2ZSIgLz48L2E+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj48ZGl2IGNsYXNzPSJpdGVtIGxhenktbG9hZC1pdGVtIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vZXN0YXRlX3Byb3BlcnR5L3N0dWRpby0xMC8iPjxpbWcgIGRhdGEtbGF6eS1sb2FkLXNyYz0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL3dwLWNvbnRlbnQvdXBsb2Fkcy8yMDIwLzAyLzE1NjQ2NTkzNjNfVkExOTIyXzEzX2wtNTI1eDMyOC5qcGciIGFsdD0iU1RVRElPIiBjbGFzcz0iaW1nLXJlc3BvbnNpdmUiIC8+PC9hPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL2VzdGF0ZV9wcm9wZXJ0eS9zdHVkaW8tMTAvIj4gPC9hPjxhIGNsYXNzPSJsZWZ0ICBjYXJvdXNlbC1jb250cm9sIiBocmVmPSIjcHJvcGVydHlfdW5pdF9jYXJvdXNlbF81ZTg0YTZhMTlkYmM5IiBkYXRhLXNsaWRlPSJwcmV2Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZGVtby1pY29uIGljb24tbGVmdC1vcGVuLWJpZyI+PC9pPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgoKICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGNsYXNzPSJyaWdodCAgY2Fyb3VzZWwtY29udHJvbCIgaHJlZj0iI3Byb3BlcnR5X3VuaXRfY2Fyb3VzZWxfNWU4NGE2YTE5ZGJjOSIgZGF0YS1zbGlkZT0ibmV4dCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9ImRlbW8taWNvbiBpY29uLXJpZ2h0LW9wZW4tYmlnIj48L2k+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgICAgPC9kaXY+PGRpdiBjbGFzcz0idGFnLXdyYXBwZXIiPjxkaXYgY2xhc3M9InN0YXR1cy13cmFwcGVyIj48ZGl2IGNsYXNzPSJhY3Rpb25fdGFnX3dyYXBwZXIgVkVORFUgIj5WRU5EVTwvZGl2PjxkaXYgY2xhc3M9InJpYmJvbi1pbnNpZGUgVkVORFUiPlZFTkRVPC9kaXY+PC9kaXY+PC9kaXY+PC9kaXY+CgogICAgICAgICAgICA8aDQ+PGEgaHJlZj0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL2VzdGF0ZV9wcm9wZXJ0eS9zdHVkaW8tMTAvIj4KICAgICAgICAgICAgICAgIFNUVURJTyAgICAgICAgICAgICAgICA8L2E+IAogICAgICAgICAgICA8L2g0PiAKICAgICAgICAgICAgCiAgICAgICAgICAgIDxkaXYgY2xhc3M9Imxpc3RpbmdfdW5pdF9wcmljZV93cmFwcGVyIj48c3BhbiBjbGFzcz0icHJpY2VfbGFiZWwiPk5vdXMgY29uc3VsdGVyPC9zcGFuPjwvZGl2PiAgICAgICAgCiAgICAgICAgCiAgICAgICAgCiAgICAgICAgICAgCiAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJsaXN0aW5nX2RldGFpbHMgdGhlX2dyaWRfdmlldyI+CiAgICAgICAgICAgICAgICAgICAgVkExOTIyLUtNSSAmIzgyMTE7IFBhcmlzIDExw6htZSAmIzgyMTE7IFNBSU5UIEFNQlJPSVNFICYjODIxMTsgU3R1ZGlvICsgTWV6emFuaW5lICYjODIxMTsgQXUgNsOobWUgZXQgZGVybmllciDDqXRhZ2UgYSA8YSBocmVmPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vZXN0YXRlX3Byb3BlcnR5L3N0dWRpby0xMC8iIGNsYXNzPSJ1bml0X21vcmVfeCI+W3BsdXNdPC9hPiAgICAgICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJsaXN0aW5nX2RldGFpbHMgdGhlX2xpc3RfdmlldyI+CiAgICAgICAgICAgICAgICAgICAgVkExOTIyLUtNSSAmIzgyMTE7IFBhcmlzIDExw6htZSAmIzgyMTE7IFNBSU5UIEFNQlJPSVNFICYjODIxMTsgU3R1ZGlvICsgTWV6emFuaW5lICYjODIxMTsgQXUgNsOobWUgZXQgZGVybmllciDDqXRhZ2UgYSA8YSBocmVmPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vZXN0YXRlX3Byb3BlcnR5L3N0dWRpby0xMC8iIGNsYXNzPSJ1bml0X21vcmVfeCI+W3BsdXNdPC9hPiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgCgoKICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvcGVydHlfbGlzdGluZ19kZXRhaWxzIj4KICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJpbmZvYmF0aCI+MTwvc3Bhbj4gPHNwYW4gY2xhc3M9ImluZm9zaXplIj4xNiwwMCBtPHN1cD4yPC9zdXA+PC9zcGFuPjxhIGhyZWY9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS9lc3RhdGVfcHJvcGVydHkvc3R1ZGlvLTEwLyIgY2xhc3M9InVuaXRfZGV0YWlsc194Ij5pbmZvIGNvbXBsw6h0ZTwvYT4gICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgCiAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb3BlcnR5X2xvY2F0aW9uIj4KICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb3BlcnR5X2FnZW50X3dyYXBwZXIiPgogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9wZXJ0eV9hZ2VudF9pbWFnZSIgc3R5bGU9ImJhY2tncm91bmQtaW1hZ2U6dXJsKCdodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vd3AtY29udGVudC91cGxvYWRzLzIwMTkvMDYvUHlyw6luw6llcy00LTEyMHgxMjAuanBnJykiPjwvZGl2PiAKICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvcGVydHlfYWdlbnRfaW1hZ2Vfc2lnbiI+PGkgY2xhc3M9ImZhIGZhLXVzZXItY2lyY2xlLW8iIGFyaWEtaGlkZGVuPSJ0cnVlIj48L2k+PC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS9lc3RhdGVfYWdlbnQva21pLXB5cmVuZWVzLyI+S01JIFBZUsOJTsOJRVM8L2E+ICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Imxpc3RpbmdfYWN0aW9ucyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJzaGFyZV91bml0Ij4KICAgICAgICA8YSBocmVmPSJodHRwczovL3d3dy5mYWNlYm9vay5jb20vc2hhcmVyLnBocD91PWh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS9lc3RhdGVfcHJvcGVydHkvc3R1ZGlvLTEwLyZhbXA7dD1TVFVESU8iIHRhcmdldD0iX2JsYW5rIiBjbGFzcz0ic29jaWFsX2ZhY2Vib29rIj48L2E+CiAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly90d2l0dGVyLmNvbS9ob21lP3N0YXR1cz1TVFVESU9odHRwcyUzQSUyRiUyRnd3dy5jYWJpbmV0LWttaS5jb20lMkZlc3RhdGVfcHJvcGVydHklMkZzdHVkaW8tMTAlMkYiIGNsYXNzPSJzb2NpYWxfdHdlZXQiIHRhcmdldD0iX2JsYW5rIj48L2E+CiAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9waW50ZXJlc3QuY29tL3Bpbi9jcmVhdGUvYnV0dG9uLz91cmw9aHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL2VzdGF0ZV9wcm9wZXJ0eS9zdHVkaW8tMTAvJmFtcDttZWRpYT1odHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vd3AtY29udGVudC91cGxvYWRzLzIwMjAvMDIvMTU2NDY1OTMzM19WQTE5MjJfMl9sLmpwZyZhbXA7ZGVzY3JpcHRpb249U1RVRElPIiB0YXJnZXQ9Il9ibGFuayIgY2xhc3M9InNvY2lhbF9waW50ZXJlc3QiPjwvYT4KICAgICAgICA8YSBocmVmPSJtYWlsdG86ZW1haWxAZW1haWwuY29tP2h0dHA6Ly9zdWJqZWN0PVNUVURJTyYjMDM4O2JvZHk9aHR0cHMlM0ElMkYlMkZ3d3cuY2FiaW5ldC1rbWkuY29tJTJGZXN0YXRlX3Byb3BlcnR5JTJGc3R1ZGlvLTEwJTJGIiBkYXRhLWFjdGlvbj0ic2hhcmUgZW1haWwiICBjbGFzcz0ic29jaWFsX2VtYWlsIj48L2E+CgogICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJzaGFyZV9saXN0IiAgZGF0YS1vcmlnaW5hbC10aXRsZT0icGFydGFnZXIiID48L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9Imljb24tZmF2IGljb24tZmF2LW9mZiIgZGF0YS1vcmlnaW5hbC10aXRsZT0iYWpvdXRlciBhdXggRmF2b3JpcyIgZGF0YS1wb3N0aWQ9IjIyMjk4Ij48L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImNvbXBhcmUtYWN0aW9uIiBkYXRhLW9yaWdpbmFsLXRpdGxlPSJjb21wYXJlciIgZGF0YS1waW1hZ2U9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS93cC1jb250ZW50L3VwbG9hZHMvMjAyMC8wMi8xNTY0NjU5MzMzX1ZBMTkyMl8yX2wtMTQzeDgzLmpwZyIgZGF0YS1waWQ9IjIyMjk4Ij48L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4gICAgICAgIDwvZGl2PiAgICAgICAgICAgICAKICAgIDwvZGl2PiAgICAgICAgPC9kaXY+CiAgICAgICAgPCEtLSBMaXN0aW5ncyBFbmRzICBoZXJlIC0tPiAKICAgICAgICAKICAgICAgICAKICAgICAgICAKICAgICAgICA8dWwgY2xhc3M9InBhZ2luYXRpb24gcGFnaW5hdGlvbl9ub2pheCI+PGxpIGNsYXNzPSJyb3VuZGxlZnQiPjxhIGhyZWY9J2h0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS9yZWNoZXJjaGUtYXZhbmNlZS8/YWR2YW5jZWRfY2l0eT1wYXJpcy0yJiMwMzg7Y2hhbWJyZXMtbWluJiMwMzg7c3VyZmFjZS1taW4mIzAzODtidWRnZXQtbWF4JiMwMzg7c3VibWl0PVJFQ0hFUkNIRVImIzAzODt3cGVzdGF0ZV9yZWd1bGFyX3NlYXJjaF9ub25jZT0wY2MzNmRhNTk3JiMwMzg7X3dwX2h0dHBfcmVmZXJlcj0lMkZhY2hldGVyJTJGJz48aSBjbGFzcz0iZmEgZmEtYW5nbGUtbGVmdCI+PC9pPjwvYT48L2xpPjxsaSBjbGFzcz0iYWN0aXZlIj48YSBocmVmPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vcmVjaGVyY2hlLWF2YW5jZWUvP2FkdmFuY2VkX2NpdHk9cGFyaXMtMiYjMDM4O2NoYW1icmVzLW1pbiYjMDM4O3N1cmZhY2UtbWluJiMwMzg7YnVkZ2V0LW1heCYjMDM4O3N1Ym1pdD1SRUNIRVJDSEVSJiMwMzg7d3Blc3RhdGVfcmVndWxhcl9zZWFyY2hfbm9uY2U9MGNjMzZkYTU5NyYjMDM4O193cF9odHRwX3JlZmVyZXI9JTJGYWNoZXRlciUyRiIgPjE8L2E+PGxpPjxsaT48YSBocmVmPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vcmVjaGVyY2hlLWF2YW5jZWUvcGFnZS8yLz9hZHZhbmNlZF9jaXR5PXBhcmlzLTImIzAzODtjaGFtYnJlcy1taW4mIzAzODtzdXJmYWNlLW1pbiYjMDM4O2J1ZGdldC1tYXgmIzAzODtzdWJtaXQ9UkVDSEVSQ0hFUiYjMDM4O3dwZXN0YXRlX3JlZ3VsYXJfc2VhcmNoX25vbmNlPTBjYzM2ZGE1OTcmIzAzODtfd3BfaHR0cF9yZWZlcmVyPSUyRmFjaGV0ZXIlMkYiID4yPC9hPjxsaT48bGk+PGEgaHJlZj0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL3JlY2hlcmNoZS1hdmFuY2VlL3BhZ2UvMy8/YWR2YW5jZWRfY2l0eT1wYXJpcy0yJiMwMzg7Y2hhbWJyZXMtbWluJiMwMzg7c3VyZmFjZS1taW4mIzAzODtidWRnZXQtbWF4JiMwMzg7c3VibWl0PVJFQ0hFUkNIRVImIzAzODt3cGVzdGF0ZV9yZWd1bGFyX3NlYXJjaF9ub25jZT0wY2MzNmRhNTk3JiMwMzg7X3dwX2h0dHBfcmVmZXJlcj0lMkZhY2hldGVyJTJGIiA+MzwvYT48bGk+PGxpIGNsYXNzPSJyb3VuZHJpZ2h0Ij48YSBocmVmPSdodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vcmVjaGVyY2hlLWF2YW5jZWUvcGFnZS8yLz9hZHZhbmNlZF9jaXR5PXBhcmlzLTImIzAzODtjaGFtYnJlcy1taW4mIzAzODtzdXJmYWNlLW1pbiYjMDM4O2J1ZGdldC1tYXgmIzAzODtzdWJtaXQ9UkVDSEVSQ0hFUiYjMDM4O3dwZXN0YXRlX3JlZ3VsYXJfc2VhcmNoX25vbmNlPTBjYzM2ZGE1OTcmIzAzODtfd3BfaHR0cF9yZWZlcmVyPSUyRmFjaGV0ZXIlMkYnPjxpIGNsYXNzPSJmYSBmYS1hbmdsZS1yaWdodCI+PC9pPjwvYT48bGk+PC91bD4gICAgICAgCiAgICAgICAgPGRpdiBjbGFzcz0ic2luZ2xlLWNvbnRlbnQiPgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgPC9kaXY+PCEtLSBlbmQgOWNvbCBjb250YWluZXItLT4KICAgIAo8IS0tIGJlZ2luIHNpZGViYXIgLS0+CjxkaXYgY2xhc3M9ImNsZWFyZml4IHZpc2libGUteHMiPjwvZGl2Pgo8IS0tIGVuZCBzaWRlYmFyIC0tPjwvZGl2PiAgIDwvZGl2PjwhLS0gZW5kIGNvbnRlbnRfd3JhcHBlciBzdGFydGVkIGluIGhlYWRlciAtLT4KCjwvZGl2PiA8IS0tIGVuZCBjbGFzcyBjb250YWluZXIgLS0+CiAgCiAgICA8Zm9vdGVyIGlkPSJjb2xvcGhvbiIgIGNsYXNzPSIgIGZvb3Rlcl9iYWNrX3JlcGVhdCAgIj4gICAgCgogICAgICAgICAgICAgICAgCiAgICAgICAgPGRpdiBpZD0iZm9vdGVyLXdpZGdldC1hcmVhIiBjbGFzcz0icm93ICI+CiAgICAgICAgICAgCiAgICA8ZGl2IGlkPSJmaXJzdCIgY2xhc3M9IndpZGdldC1hcmVhIGNvbC1tZC0zICI+CiAgICAgICAgPHVsIGNsYXNzPSJ4b3hvIj4KICAgICAgICAgICAgPGxpIGlkPSJjdXN0b21faHRtbC00IiBjbGFzcz0id2lkZ2V0X3RleHQgd2lkZ2V0LWNvbnRhaW5lciB3aWRnZXRfY3VzdG9tX2h0bWwiPjxoMyBjbGFzcz0id2lkZ2V0LXRpdGxlLWZvb3RlciI+Q0FCSU5FVCBLTUk8L2gzPjxkaXYgY2xhc3M9InRleHR3aWRnZXQgY3VzdG9tLWh0bWwtd2lkZ2V0Ij48aSBjbGFzcz0iZmEgZmEtYnVpbGRpbmctbyI+PC9pPiA1MiBydWUgZGVzIFB5csOpbsOpZXMsIDc1MDIwIFBhcmlzIDxiciAvPjxpIGNsYXNzPSJmYSBmYS1waG9uZSI+PC9pPiAwMSA0MCAwOSA3NyA3NyAgPGJyIC8+PGkgY2xhc3M9ImZhIGZhLWVudmVsb3BlLW8iPjwvaT4gcHlyZW5lZXNAY2FiaW5ldC1rbWkuY29tDQo8YnIgLz4NCjxpIGNsYXNzPSJmYSBmYS1idWlsZGluZy1vIj48L2k+IDU3IHJ1ZSBPYmVya2FtcGYsIDc1MDExIFBhcmlzIDxiciAvPjxpIGNsYXNzPSJmYSBmYS1waG9uZSI+PC9pPiAwMSA0MyAzOCA3NSA3MyA8YnIgLz48aSBjbGFzcz0iZmEgZmEtZW52ZWxvcGUtbyI+PC9pPiBvYmVya2FtcGZAY2FiaW5ldC1rbWkuY29tPC9kaXY+PC9saT4gICAgICAgIDwvdWw+CiAgICA8L2Rpdj48IS0tICNmaXJzdCAud2lkZ2V0LWFyZWEgLS0+CiAgICAKICAgIDxkaXYgaWQ9InNlY29uZCIgY2xhc3M9IndpZGdldC1hcmVhIGNvbC1tZC0zIj4KICAgICAgICA8dWwgY2xhc3M9InhveG8iPgogICAgICAgIDxsaSBpZD0iY3VzdG9tX2h0bWwtNiIgY2xhc3M9IndpZGdldF90ZXh0IHdpZGdldC1jb250YWluZXIgd2lkZ2V0X2N1c3RvbV9odG1sIj48aDMgY2xhc3M9IndpZGdldC10aXRsZS1mb290ZXIiPkFWSVMgQ0xJRU5UUzwvaDM+PGRpdiBjbGFzcz0idGV4dHdpZGdldCBjdXN0b20taHRtbC13aWRnZXQiPjxpZnJhbWUgc3JjPSJodHRwczovL3d3dy5vcGluaW9uc3lzdGVtLmZyL2NvbXBhbnlfcmF0aW5nLnBocD9jb21wYW55X2lkPTQ0NzYmcmF0aW5nX2tleT04NWUwYmJjOGQ0MGI5OTk3MTlmNWRlNDMzY2M1YTA4NyZsYW5ndWFnZT1mcmUmdGV4dF9jb2xvcj1mZmZmZmYiIHNjcm9sbGluZz0ibm8iIGZyYW1lYm9yZGVyPSIwIiBzdHlsZT0iYm9yZGVyOiBub25lOyBvdmVyZmxvdzogaGlkZGVuOyB3aWR0aDogMTgwcHg7IGhlaWdodDogMjJweDsiIGFsbG93dHJhbnNwYXJlbmN5PSJ0cnVlIj48L2lmcmFtZT4NCjxiciAvPjxiciAvPjxiciAvPg0KPGlmcmFtZSBzcmM9Imh0dHBzOi8vd3d3Lm9waW5pb25zeXN0ZW0uZnIvY29tcGFueV9yYXRpbmcucGhwP2NvbXBhbnlfaWQ9NjI4OCZyYXRpbmdfa2V5PTVhMzc4NGVlNmUwOGM3NGFkNjZkODQyZWE3YzA2MjI4Jmxhbmd1YWdlPWZyZSZ0ZXh0X2NvbG9yPWZmZmZmZiIgc2Nyb2xsaW5nPSJubyIgZnJhbWVib3JkZXI9IjAiIHN0eWxlPSJib3JkZXI6IG5vbmU7IG92ZXJmbG93OiBoaWRkZW47IHdpZHRoOiAxODBweDsgaGVpZ2h0OiAyMnB4OyIgYWxsb3d0cmFuc3BhcmVuY3k9InRydWUiPjwvaWZyYW1lPjwvZGl2PjwvbGk+ICAgICAgICA8L3VsPgogICAgPC9kaXY+PCEtLSAjc2Vjb25kIC53aWRnZXQtYXJlYSAtLT4KICAgIAogICAgPGRpdiBpZD0idGhpcmQiIGNsYXNzPSJ3aWRnZXQtYXJlYSBjb2wtbWQtMyI+CiAgICAgICAgPHVsIGNsYXNzPSJ4b3hvIj4KICAgICAgICA8bGkgaWQ9ImN1c3RvbV9odG1sLTUiIGNsYXNzPSJ3aWRnZXRfdGV4dCB3aWRnZXQtY29udGFpbmVyIHdpZGdldF9jdXN0b21faHRtbCI+PGgzIGNsYXNzPSJ3aWRnZXQtdGl0bGUtZm9vdGVyIj5QQVJURU5BSVJFUzwvaDM+PGRpdiBjbGFzcz0idGV4dHdpZGdldCBjdXN0b20taHRtbC13aWRnZXQiPjxhIGhyZWY9Imh0dHBzOi8vd3d3Lm1laWxsZXVyc2FnZW50cy5jb20vYWdlbmNlLWltbW9iaWxpZXJlL2FnZW5jZS1jYWJpbmV0LWttaS1weXJlbmVlcy0zODcwNi8/dG9rZW49TXpnM01EWS5OVVR1RHcuazNlZndHTFI3SG1rTlZxVWFKVHd0dGY0Q2t3IiB0YXJnZXQ9Il9ibGFuayIgcmVsPSJub29wZW5lciBub3JlZmVycmVyIj48aW1nIHNyYz0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL3dwLWNvbnRlbnQvdXBsb2Fkcy8yMDE5LzA2L2U3NmVkMDg0ZWU5MDZkZTUyNTM3YzZjYTM0ZjM2MDU4LnBuZyIgd2lkdGg9IjgwcHgiIC8+PC9hPiAmbmJzcDsgPGEgaHJlZj0iaHR0cDovL2NhYmluZXRrbWlwYXJpczIwLm9waW5pb25zeXN0ZW0uZnIvP3JlZmVyZXI9MSIgdGFyZ2V0PSJfYmxhbmsiIHJlbD0ibm9vcGVuZXIgbm9yZWZlcnJlciI+PGltZyBzcmM9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS93cC1jb250ZW50L3VwbG9hZHMvMjAxOS8wNi9jZXJ0aWZpY2F0ZV9sYWJlbC5wbmciIHdpZHRoPSI5MHB4IiAvPjwvYT48L2Rpdj48L2xpPiAgICAgICAgPC91bD4KICAgIDwvZGl2PjwhLS0gI3RoaXJkIC53aWRnZXQtYXJlYSAtLT4KICAgIAogICAgPGRpdiBpZD0iZm91cnRoIiBjbGFzcz0id2lkZ2V0LWFyZWEgY29sLW1kLTMiPgogICAgICAgIDx1bCBjbGFzcz0ieG94byI+CiAgICAgICAgPGxpIGlkPSJ0ZXh0LTIiIGNsYXNzPSJ3aWRnZXQtY29udGFpbmVyIHdpZGdldF90ZXh0Ij48aDMgY2xhc3M9IndpZGdldC10aXRsZS1mb290ZXIiPlNVSVZFWi1OT1VTITwvaDM+CQkJPGRpdiBjbGFzcz0idGV4dHdpZGdldCI+PC9kaXY+CgkJPC9saT48bGkgaWQ9InNvY2lhbF93aWRnZXRfdG9wLTMiIGNsYXNzPSJ3aWRnZXQtY29udGFpbmVyIHNvY2lhbF9zaWRlYmFyIj48ZGl2IGNsYXNzPSJzb2NpYWxfc2lkZWJhcl9pbnRlcm5hbCI+PGEgaHJlZj0iaHR0cHM6Ly93d3cuZmFjZWJvb2suY29tL0NhYmluZXQtS01JLTQ5MjMzNTE4NzUwNTkxNS8iIHRhcmdldD0iX2JsYW5rIj48ZGl2IGNsYXNzPSJzb2NpYWwtZmFjZWJvb2siPjwvZGl2PjwvYT48YSBocmVmPSJodHRwczovL3R3aXR0ZXIuY29tL0NhYmluZXRLTUkiIHRhcmdldD0iX2JsYW5rIj48ZGl2IGNsYXNzPSJzb2NpYWwtdHdpdHRlciI+PC9kaXY+PC9hPjxhIGhyZWY9Imh0dHBzOi8vd3d3LmxpbmtlZGluLmNvbS9pbi9kYW5pZWwtbW9yZ2Vuc3Rlcm4tNTE1NzdhMTE0LyIgdGFyZ2V0PSJfYmxhbmsiPjxkaXYgY2xhc3M9InNvY2lhbC1saW5rZWRJbiI+PC9kaXY+PC9hPjwvZGl2PjwvbGk+ICAgICAgICA8L3VsPgogICAgPC9kaXY+PCEtLSAjZm91cnRoIC53aWRnZXQtYXJlYSAtLT4KICAgICAgICA8L2Rpdj4KCiAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ic3ViX2Zvb3RlciI+ICAKICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InN1Yl9mb290ZXJfY29udGVudCAiPgogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJjb3B5cmlnaHQiPgogICAgICAgICAgICAgICAgICAgICAgICBDb3B5cmlnaHQgMjAxOSB8IENhYmluZXQgS01JIC0gVG91cyBkcm9pdHMgcsOpc2VydsOpcyAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgoKICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJzdWJmb290ZXJfbWVudSI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Im1lbnUtZm9vdGVyLWNvbnRhaW5lciI+PHVsIGlkPSJtZW51LWZvb3RlciIgY2xhc3M9Im1lbnUiPjxsaSBpZD0ibWVudS1pdGVtLTE5NDM2IiBjbGFzcz0ibWVudS1pdGVtIG1lbnUtaXRlbS10eXBlLWN1c3RvbSBtZW51LWl0ZW0tb2JqZWN0LWN1c3RvbSBtZW51LWl0ZW0tMTk0MzYiPjxhIGhyZWY9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS93cC1jb250ZW50L3VwbG9hZHMvMjAxOS8wNi9Ib25vcmFpcmVzLnBkZiI+QmFyw6htZSBob25vcmFpcmVzPC9hPjwvbGk+CjxsaSBpZD0ibWVudS1pdGVtLTE4MTcxIiBjbGFzcz0ibWVudS1pdGVtIG1lbnUtaXRlbS10eXBlLXBvc3RfdHlwZSBtZW51LWl0ZW0tb2JqZWN0LXBhZ2UgbWVudS1pdGVtLTE4MTcxIj48YSBocmVmPSJodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vbWVudGlvbnMtbGVnYWxlcy8iPk1lbnRpb25zIGzDqWdhbGVzPC9hPjwvbGk+CjxsaSBpZD0ibWVudS1pdGVtLTE5NDM0IiBjbGFzcz0ibWVudS1pdGVtIG1lbnUtaXRlbS10eXBlLXBvc3RfdHlwZSBtZW51LWl0ZW0tb2JqZWN0LXBhZ2UgbWVudS1pdGVtLXByaXZhY3ktcG9saWN5IG1lbnUtaXRlbS0xOTQzNCI+PGEgaHJlZj0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL3BvbGl0aXF1ZS1kZS1jb25maWRlbnRpYWxpdGUvIj5Qb2xpdGlxdWUgZGUgY29uZmlkZW50aWFsaXTDqTwvYT48L2xpPgo8L3VsPjwvZGl2PiAgICAgICAgICAgICAgICAgICAgPC9kaXY+ICAKICAgICAgICAgICAgICAgIDwvZGl2PiAgCiAgICAgICAgICAgIDwvZGl2PiAgICAgIAogICAgICAgICAgICAgICAgCiAgICAgCiAgICA8L2Zvb3Rlcj48IS0tICNjb2xvcGhvbiAtLT4KPGlucHV0IHR5cGU9ImhpZGRlbiIgaWQ9IndwZXN0YXRlX2FqYXhfbG9nX3JlZyIgdmFsdWU9ImY0ZmFkMDk4N2MiIC8+ICAgIDxhIGhyZWY9IiMiIGNsYXNzPSJiYWNrdG9wICI+PGkgY2xhc3M9ImZhIGZhLWNoZXZyb24tdXAiPjwvaT48L2E+CjxhIGhyZWY9IiMiIGNsYXNzPSJjb250YWN0LWJveCAiPjxpIGNsYXNzPSJmYSBmYS1lbnZlbG9wZS1vIj48L2k+PC9hPgogCjxkaXYgY2xhc3M9ImNvbnRhY3Rmb3Jtd3JhcHBlciBoaWRkZW4iPiAKCiAgICAgICAgPGRpdiBpZD0iZm9vdGVyLWNvbnRhY3QtZm9ybSI+CiAgICAgICAgPGRpdiBjbGFzcz0iY29udGFjdF9jbG9zZV9idXR0b24iPgogICAgICAgICAgICA8aSBjbGFzcz0iZmEgZmEtdGltZXMiIGFyaWEtaGlkZGVuPSJ0cnVlIj48L2k+CiAgICAgICAgPC9kaXY+CiAgICAgICAgPGg0PkNvbnRhY3RleiBub3VzPC9oND4KICAgICAgICA8cD5VdGlsaXNleiBsZSBmb3JtdWxhaXJlIGNpLWRlc3NvdXMgcG91ciBub3VzIGNvbnRhY3RlciE8L3A+CiAgICAgICAgPGRpdiBjbGFzcz0iYWxlcnQtYm94IGVycm9yIj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iYWxlcnQtbWVzc2FnZSIgaWQ9ImZvb3Rlcl9hbGVydC1hZ2VudC1jb250YWN0Ij48L2Rpdj4KICAgICAgICA8L2Rpdj4gCgogICAgICAgIAogICAgICAgIDxpbnB1dCB0eXBlPSJ0ZXh0IiBwbGFjZWhvbGRlcj0iTm9tIGNvbXBsZXQiIHJlcXVpcmVkPSJyZXF1aXJlZCIgICBpZD0iZm9vdF9jb250YWN0X25hbWUiICBuYW1lPSJjb250YWN0X25hbWUiIGNsYXNzPSJmb3JtLWNvbnRyb2wiIHZhbHVlPSIiIHRhYmluZGV4PSIzNzMiPiAKICAgICAgICA8aW5wdXQgdHlwZT0iZW1haWwiIHJlcXVpcmVkPSJyZXF1aXJlZCIgcGxhY2Vob2xkZXI9IkUtbWFpbCIgIGlkPSJmb290X2NvbnRhY3RfZW1haWwiIG5hbWU9ImNvbnRhY3RfZW1haWwiIGNsYXNzPSJmb3JtLWNvbnRyb2wiIHZhbHVlPSIiIHRhYmluZGV4PSIzNzQiPgogICAgICAgIDxpbnB1dCB0eXBlPSJlbWFpbCIgcmVxdWlyZWQ9InJlcXVpcmVkIiBwbGFjZWhvbGRlcj0iVMOpbMOpcGhvbmUiICBpZD0iZm9vdF9jb250YWN0X3Bob25lIiBuYW1lPSJjb250YWN0X3Bob25lIiBjbGFzcz0iZm9ybS1jb250cm9sIiB2YWx1ZT0iIiB0YWJpbmRleD0iMzc0Ij4KICAgICAgICA8dGV4dGFyZWEgcGxhY2Vob2xkZXI9IlRhcGV6IHZvdHJlIG1lc3NhZ2UgLi4uIiByZXF1aXJlZD0icmVxdWlyZWQiIGlkPSJmb290X2NvbnRhY3RfY29udGVudCIgbmFtZT0iY29udGFjdF9jb250ZW50IiBjbGFzcz0iZm9ybS1jb250cm9sIiB0YWJpbmRleD0iMzc1Ij48L3RleHRhcmVhPgogICAgICAgIDxpbnB1dCB0eXBlPSJoaWRkZW4iIG5hbWU9ImNvbnRhY3RfZm9vdGVyX2FqYXhfbm9uY2UiIGlkPSJjb250YWN0X2Zvb3Rlcl9hamF4X25vbmNlIiAgdmFsdWU9IjIyMDQ0ZDBiY2IiIC8+CgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iYnRuLWNvbnQiPgogICAgICAgICAgICA8YnV0dG9uIHR5cGU9InN1Ym1pdCIgaWQ9ImJ0bi1jb250LXN1Ym1pdCIgY2xhc3M9IndwcmVzaWRlbmNlX2J1dHRvbiI+RW52b3llcjwvYnV0dG9uPgogICAgICAgICAKICAgICAgICAgICAgPGlucHV0IHR5cGU9ImhpZGRlbiIgdmFsdWU9IiIgbmFtZT0iY29udGFjdF90byI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImJvdHRvbS1hcnJvdyI+PC9kaXY+CiAgICAgICAgPC9kaXY+ICAKICAgIDwvZGl2PgogICAgCjwvZGl2PgoKCgoKCjwvZGl2PiA8IS0tIGVuZCB3ZWJzaXRlIHdyYXBwZXIgLS0+CjwhLS1Db21wYXJlIFN0YXJ0cyBoZXJlLS0+ICAgICAKPGRpdiBjbGFzcz0icHJvcC1jb21wYXJlICI+CiAgICA8ZGl2IGlkPSJjb21wYXJlX2Nsb3NlIj48aSBjbGFzcz0iZmEgZmEtdGltZXMiIGFyaWEtaGlkZGVuPSJ0cnVlIj48L2k+PC9kaXY+CiAgICA8Zm9ybSBtZXRob2Q9InBvc3QiIGlkPSJmb3JtX2NvbXBhcmUiIGFjdGlvbj0iaHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL2NvbXBhcmVyLWxlcy1hbm5vbmNlcy8iPgogICAgICAgIDxoNCBjbGFzcz0idGl0bGVfY29tcGFyZSI+Q29tcGFyZXIgbGVzIGFubm9uY2VzPC9oND4KICAgICAgICA8YnV0dG9uICAgaWQ9InN1Ym1pdF9jb21wYXJlIiBjbGFzcz0id3ByZXNpZGVuY2VfYnV0dG9uIj4gQ29tcGFyZXIgPC9idXR0b24+CiAgICA8L2Zvcm0+CjwvZGl2PiAgICAKPCEtLUNvbXBhcmUgRW5kcyBoZXJlLS0+ICAKPGRpdiBpZD0ibW9kYWxfbG9naW5fd3JhcHBlciI+CgogICAgPGRpdiBjbGFzcz0ibW9kYWxfbG9naW5fYmFjayI+PC9kaXY+CiAgICA8ZGl2IGNsYXNzPSJtb2RhbF9sb2dpbl9jb250YWluZXIiPgoKICAgICAgICA8ZGl2IGlkPSJsb2dpbi1tb2RhbF9jbG9zZSI+PC9kaXY+CgogICAgICAgICAgICA8aDMgICBpZD0ibG9naW4tZGl2LXRpdGxlLXRvcGJhciI+Q29ubmVjdGV6LXZvdXMgw6Agdm90cmUgY29tcHRlPC9oMz4KICAgICAgICAgICAgCiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImxvZ2luX2Zvcm0iIGlkPSJsb2dpbi1kaXZfdG9wYmFyIj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImxvZ2luYWxlcnQiIGlkPSJsb2dpbl9tZXNzYWdlX2FyZWFfdG9wYmFyIiA+IDwvZGl2PgoKICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJ0ZXh0IiBjbGFzcz0iZm9ybS1jb250cm9sIiBuYW1lPSJsb2ciIGlkPSJsb2dpbl91c2VyX3RvcGJhciIgcGxhY2Vob2xkZXI9Ik5vbSBkJiMwMzk7dXRpbGlzYXRldXIiLz4KICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJwYXNzd29yZCIgY2xhc3M9ImZvcm0tY29udHJvbCIgbmFtZT0icHdkIiBpZD0ibG9naW5fcHdkX3RvcGJhciIgcGxhY2Vob2xkZXI9Ik1vdCBkZSBwYXNzZSIvPgogICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9ImhpZGRlbiIgbmFtZT0ibG9naW5wb3AiIGlkPSJsb2dpbnBvcF93ZF90b3BiYXIiIHZhbHVlPSIwIj4KICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9ImhpZGRlbiIgaWQ9InNlY3VyaXR5LWxvZ2luLXRvcGJhciIgbmFtZT0ic2VjdXJpdHktbG9naW4tdG9wYmFyIiB2YWx1ZT0iMjJhNjMxNDNlMy0xNTg1NzUxNzEzIj4KCiAgICAgICAgICAgICAgICA8YnV0dG9uIGNsYXNzPSJ3cHJlc2lkZW5jZV9idXR0b24iIGlkPSJ3cC1sb2dpbi1idXQtdG9wYmFyIj5TJiMwMzk7aWRlbnRpZmllcjwvYnV0dG9uPgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ibG9naW4tbGlua3MiPgogICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PiAgICAKICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgIDxoMyAgaWQ9InJlZ2lzdGVyLWRpdi10aXRsZS10b3BiYXIiPkNyw6llciB1biBjb21wdGU8L2gzPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJsb2dpbl9mb3JtIiBpZD0icmVnaXN0ZXItZGl2LXRvcGJhciI+CgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ibG9naW5hbGVydCIgaWQ9InJlZ2lzdGVyX21lc3NhZ2VfYXJlYV90b3BiYXIiID48L2Rpdj4KICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJ0ZXh0IiBuYW1lPSJ1c2VyX2xvZ2luX3JlZ2lzdGVyIiBpZD0idXNlcl9sb2dpbl9yZWdpc3Rlcl90b3BiYXIiIGNsYXNzPSJmb3JtLWNvbnRyb2wiIHBsYWNlaG9sZGVyPSJOb20gZCYjMDM5O3V0aWxpc2F0ZXVyIi8+CiAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0idGV4dCIgbmFtZT0idXNlcl9lbWFpbF9yZWdpc3RlciIgaWQ9InVzZXJfZW1haWxfcmVnaXN0ZXJfdG9wYmFyIiBjbGFzcz0iZm9ybS1jb250cm9sIiBwbGFjZWhvbGRlcj0iRW1haWwiICAvPgoKICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0icGFzc3dvcmQiIG5hbWU9InVzZXJfcGFzc3dvcmQiIGlkPSJ1c2VyX3Bhc3N3b3JkX3RvcGJhciIgY2xhc3M9ImZvcm0tY29udHJvbCIgcGxhY2Vob2xkZXI9Ik1vdCBkZSBwYXNzZSIvPgogICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJwYXNzd29yZCIgbmFtZT0idXNlcl9wYXNzd29yZF9yZXR5cGUiIGlkPSJ1c2VyX3Bhc3N3b3JkX3RvcGJhcl9yZXR5cGUiIGNsYXNzPSJmb3JtLWNvbnRyb2wiIHBsYWNlaG9sZGVyPSJSZXRhcGVyIGxlIG1vdCBkZSBwYXNzZSIgIC8+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0iY2hlY2tib3giIG5hbWU9InRlcm1zIiBpZD0idXNlcl90ZXJtc19yZWdpc3Rlcl90b3BiYXIiIC8+CiAgICAgICAgICAgICAgICA8bGFiZWwgaWQ9InVzZXJfdGVybXNfcmVnaXN0ZXJfdG9wYmFyX2xhYmVsIiBmb3I9InVzZXJfdGVybXNfcmVnaXN0ZXJfdG9wYmFyIj5qZSBzdWlzIGQmIzAzOTthY2NvcmQgYXZlYzxhIGhyZWY9Imh0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS9tZW50aW9ucy1sZWdhbGVzLyAiIHRhcmdldD0iX2JsYW5rIiBpZD0idXNlcl90ZXJtc19yZWdpc3Rlcl90b3BiYXJfbGluayI+dGVybWVzIGV0IGNvbmRpdGlvbnM8L2E+IDwvbGFiZWw+CgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJoaWRkZW4iIGlkPSJzZWN1cml0eS1yZWdpc3Rlci10b3BiYXIiIG5hbWU9InNlY3VyaXR5LXJlZ2lzdGVyLXRvcGJhciIgdmFsdWU9IjMyNjk1ZGE4YzItMTU4NTc1MTcxMyI+CiAgICAgICAgICAgICAgICA8YnV0dG9uIGNsYXNzPSJ3cHJlc2lkZW5jZV9idXR0b24iIGlkPSJ3cC1zdWJtaXQtcmVnaXN0ZXJfdG9wYmFyIiA+cmVnaXN0cmU8L2J1dHRvbj4KICAgICAgICAgICAgICAKICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICA8aDMgICBpZD0iZm9yZ290LWRpdi10aXRsZS10b3BiYXIiPnLDqWluaXRpYWxpc2VyIGxlIG1vdCBkZSBwYXNzZTwvaDM+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImxvZ2luX2Zvcm0iIGlkPSJmb3Jnb3QtcGFzcy1kaXYiPgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ibG9naW5hbGVydCIgaWQ9ImZvcmdvdF9wYXNzX2FyZWFfdG9wYmFyIj48L2Rpdj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImxvZ2lucm93Ij4KICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9InRleHQiIGNsYXNzPSJmb3JtLWNvbnRyb2wiIG5hbWU9ImZvcmdvdF9lbWFpbCIgaWQ9ImZvcmdvdF9lbWFpbF90b3BiYXIiIHBsYWNlaG9sZGVyPSJFbnRyZXogdm90cmUgYWRyZXNzZSBlbWFpbCIgc2l6ZT0iMjAiIC8+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJoaWRkZW4iIGlkPSJzZWN1cml0eS1mb3Jnb3QtdG9wYmFyIiBuYW1lPSJzZWN1cml0eS1mb3Jnb3QtdG9wYmFyIiB2YWx1ZT0iYWIyMGYzNjI5YiIgLz48aW5wdXQgdHlwZT0iaGlkZGVuIiBuYW1lPSJfd3BfaHR0cF9yZWZlcmVyIiB2YWx1ZT0iL3JlY2hlcmNoZS1hdmFuY2VlL3BhZ2UvMT9hZHZhbmNlZF9jaXR5PXBhcmlzLTImYW1wO2NoYW1icmVzLW1pbiZhbXA7c3VyZmFjZS1taW4mYW1wO2J1ZGdldC1tYXgmYW1wO3N1Ym1pdD1SRUNIRVJDSEVSJmFtcDt3cGVzdGF0ZV9yZWd1bGFyX3NlYXJjaF9ub25jZT0wY2MzNmRhNTk3JmFtcDtfd3BfaHR0cF9yZWZlcmVyPSUyRmFjaGV0ZXIlMkYiIC8+ICAKICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJoaWRkZW4iIGlkPSJwb3N0aWQiIHZhbHVlPSIKICAgICAgICAgICAgICAgIDUiPiAgICAKICAgICAgICAgICAgICAgIDxidXR0b24gY2xhc3M9IndwcmVzaWRlbmNlX2J1dHRvbiIgaWQ9IndwLWZvcmdvdC1idXQtdG9wYmFyIiBuYW1lPSJmb3Jnb3QiID5yw6lpbml0aWFsaXNlciBsZSBtb3QgZGUgcGFzc2U8L2J1dHRvbj4KICAgICAgICAgICAgICAgCiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPGRpdiBjbGFzcz0ibG9naW5fbW9kYWxfY29udHJvbCI+CiAgICAgICAgICAgICAgICA8YSBocmVmPSIjIiBpZD0id2lkZ2V0X3JlZ2lzdGVyX3RvcGJhciI+SW5zY3JpdmV6LXZvdXMgaWNpITwvYT4KICAgICAgICAgICAgICAgIDxhIGhyZWY9IiMiIGlkPSJmb3Jnb3RfcGFzc190b3BiYXIiPk1vdCBkZSBwYXNzZSBvdWJsacOpPzwvYT4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgPGEgaHJlZj0iIyIgaWQ9IndpZGdldF9sb2dpbl90b3BiYXIiPlJldG91ciBjb25uZXhpb248L2E+ICAKICAgICAgICAgICAgICAgIDxhIGhyZWY9IiMiIGlkPSJyZXR1cm5fbG9naW5fdG9wYmFyIj5SZXRvdXIgw6AgbGEgY29ubmV4aW9uPC9hPgogICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJoaWRkZW4iIG5hbWU9ImxvZ2lucG9wIiBpZD0ibG9naW5wb3AiIHZhbHVlPSIwIj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIAogICAgPC9kaXY+CiAgICAKPC9kaXY+PGlucHV0IHR5cGU9ImhpZGRlbiIgaWQ9IndwZXN0YXRlX2FqYXhfZmlsdGVyaW5nIiB2YWx1ZT0iYWUzMmViZTU4YiIgLz4gICAgPGlucHV0IHR5cGU9ImhpZGRlbiIgaWQ9IndwZXN0YXRlX3BheW1lbnRzX25vbmNlIiB2YWx1ZT0iODk4OGEyNDQzNSIgLz4gICAgPHN0eWxlPgoJLmNwY3RhLWZseWluICogIHsgdHJhbnNpdGlvbjogMXM7IH0KCS5jcGN0YS1mbHlpbiB7CgkJbWluLXdpZHRoOiAzMDBweDsKCQltYXgtaGVpZ2h0OiAxMDAlOwoJCXotaW5kZXg6IDk5OTk5OwoJfQoJLmNwY3RhLWZseWluIC5jcGN0YS10b3AtYmFyIHsKCQlwb3NpdGlvbjogZml4ZWQ7CgkJei1pbmRleDogOTk5OTk7CgkJdG9wOiAxNTBweDsKCQkJCQlyaWdodDogMDsKCQkJYm9yZGVyLXRvcC1sZWZ0LXJhZGl1czogNXB4OwoJCQlib3JkZXItYm90dG9tLWxlZnQtcmFkaXVzOiA1cHg7CgkJICAgIHdpZHRoOiAxMDBweDsKCQliYWNrZ3JvdW5kOiAjMmUyZjc4OwoJCWNvbG9yOiAjZmZmZmZmOwoJCXRleHQtYWxpZ246IGNlbnRlcjsKCS8qCWJvcmRlci10b3AtcmlnaHQtcmFkaXVzOiA1cHg7ICovCgkJcGFkZGluZzogOHB4IDEwcHg7CgkJZm9udC1zaXplOiAxNnB4OwoJCWZvbnQtd2VpZ2h0OiBib2xkOwoJCWN1cnNvcjogcG9pbnRlcjsKCQkJfQoJLmNwY3RhLWZseWluIC5jcGN0YS10b3AtYmFyIC51cCB7CgkJLypjb2xvcjogI0U4OEMzODsqLwoJCXBhZGRpbmc6IDAgMTBweDsKCQlmb250LXdlaWdodDogYm9sZDsKCQlmb250LXNpemU6IDE4cHg7Cgl9CiAgICAuY3BjdGEtY2xvc2UgeyAgICAKICAgICAgCiAgICB9CiAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA0ODBweCl7CiAgICAgIC5jcGN0YS1jbG9zZSB7CiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlOwogICAgICAgIGZsb2F0OiByaWdodDsKICAgICAgICB0cmFuc2l0aW9uOiAwLjNzOwogICAgICAgIHdpZHRoOiAyOHB4OwogICAgICAgIGhlaWdodDogMjhweDsKICAgICAgfQogICAgICAuY3BjdGEtY2xvc2U6aG92ZXIgewogICAgICAgICAgdHJhbnNmb3JtOiByb3RhdGUoOTBkZWcpOwogICAgICB9CiAgICAgIC5jcGN0YS1jbG9zZTo6YmVmb3JlLCAuY3BjdGEtY2xvc2U6OmFmdGVyIHsKICAgICAgICAgIGNvbnRlbnQ6ICcnOwogICAgICAgICAgcG9zaXRpb246IGFic29sdXRlOwogICAgICAgICAgaGVpZ2h0OiAycHg7CiAgICAgICAgICB3aWR0aDogMTAwJTsKICAgICAgICAgIHRvcDogNTAlOwogICAgICAgICAgcmlnaHQ6IDA7CiAgICAgICAgICBiYWNrZ3JvdW5kOiAjMmUyZjc4OwogICAgICB9CiAgICAgIC5jcGN0YS1jbG9zZTo6YmVmb3JlIHsKICAgICAgICAgIC13ZWJraXQtdHJhbnNmb3JtOiByb3RhdGUoNDVkZWcpOwogICAgICAgICAgLW1vei10cmFuc2Zvcm06IHJvdGF0ZSg0NWRlZyk7CiAgICAgICAgICAtbXMtdHJhbnNmb3JtOiByb3RhdGUoNDVkZWcpOwogICAgICAgICAgLW8tdHJhbnNmb3JtOiByb3RhdGUoNDVkZWcpOwogICAgICAgICAgdHJhbnNmb3JtOiByb3RhdGUoNDVkZWcpOwogICAgICB9CiAgICAgIC5jcGN0YS1jbG9zZTo6YWZ0ZXIgewogICAgICAgICAgLXdlYmtpdC10cmFuc2Zvcm06IHJvdGF0ZSgtNDVkZWcpOwogICAgICAgICAgLW1vei10cmFuc2Zvcm06IHJvdGF0ZSgtNDVkZWcpOwogICAgICAgICAgLW1zLXRyYW5zZm9ybTogcm90YXRlKC00NWRlZyk7CiAgICAgICAgICAtby10cmFuc2Zvcm06IHJvdGF0ZSgtNDVkZWcpOwogICAgICAgICAgdHJhbnNmb3JtOiByb3RhdGUoLTQ1ZGVnKTsKICAgICAgICB9CiAgICB9CgkuY3BjdGEtZmx5aW4gLmNwY3RhLWNvbnRlbnQtcGFuZWwgewoJCXBvc2l0aW9uOiBmaXhlZDsKCQl6LWluZGV4OiA5OTk5OTsKCQkJCQlyaWdodDogLTQwMHB4OwoJCQkJdG9wOiAwOwoJCWJhY2tncm91bmQ6ICNmZmZmZmY7CgkJY29sb3I6ICMwMDAwMDA7CgkJcGFkZGluZzogMTBweCAyMHB4IDMwcHggMjBweDsKCQlib3gtc2l6aW5nOiBib3JkZXItYm94OwoJCS8qIHRleHQtYWxpZ246IGNlbnRlcjsgKi8KCQloZWlnaHQ6IDEwMCU7CgkJbWF4LXdpZHRoOiAxMDAlOwoJCXdpZHRoOiA0MDBweDsKCX0KICAgIC5jcGN0YS1mbHlpbiA+IGRpdi5jcGN0YS1jb250ZW50LXBhbmVsIHsKICAgICAgICBvdmVyZmxvdzogYXV0bzsKICAgIH0KCS5jcGN0YS1mbHlpbiAuY3BjdGEtY29udGVudC1wYW5lbCBhewoJCWNvbG9yOiAjMDAwOwoJfQoJLmNwY3RhLWZseWluIC5jcGN0YS1jb250ZW50LXBhbmVsIC5jdGF7CgkJbWFyZ2luLXRvcDogMTVweDsKCX0KCS5jcGN0YS1mbHlpbiAuY3BjdGEtY29udGVudC1wYW5lbCBhLmJ1dHRvbnsKCQljb2xvcjogIzAwMDsKCQliYWNrZ3JvdW5kOiAjNkM5NDJGOwoJCXRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7CgkJcGFkZGluZzogMTBweDsKCQltYXJnaW46IDE1cHggMCAwIDA7Cgl9CgkKCWRpdi5jcGN0YS1jb250ZW50LXBhbmVsLnNsaWRPdXQgewoJcmlnaHQ6IDBweDsJfQoJZGl2LmNwY3RhLXRvcC1iYXIuc2xpZE91dCB7IAoJcmlnaHQ6IDQwMHB4OwkKCX0KCQoJCQo8L3N0eWxlPjxzY3JpcHQ+CmpRdWVyeSggZG9jdW1lbnQgKS5yZWFkeShmdW5jdGlvbiggJCApIHsKCi8vY2hhbmdlIGNwY3RhLXRvcC1iYXIgY29udGVudCBvbiBjbGljawoJLy9nZXRzIGJhc2UgY3BjdGEtdG9wLWJhciBjb250ZW50Cgl2YXIgQ1RBID0gJ09mZnJlIFBhcnJhaW5hZ2UgMTAwMOKCrCBvZmZlcnRzKic7CgkJCQoJZnVuY3Rpb24gc2xpZGVPdXQoKXsKCQkvL3RvZ2dsZSdzIGNvbnRlbnQgaW4vb3V0IGJ5IGFkZGluZyBvciByZW1vdmluZyBzbGlkT3V0CgkJalF1ZXJ5KCcuY3BjdGEtZmx5aW4gLmNwY3RhLWNvbnRlbnQtcGFuZWwnKS50b2dnbGVDbGFzcygnc2xpZE91dCcpOwoKCQkvL2N0YSB0YWIgYmVoYXZlcyBkaWZmZXJlbnRseSBvbiBtb2JpbGUgLyBkZXNrdG9wCgkJaWYoIGpRdWVyeSh3aW5kb3cpLndpZHRoKCkgPiA0ODApIHsKCQkJalF1ZXJ5KCcuY3BjdGEtZmx5aW4gLmNwY3RhLXRvcC1iYXInKS50b2dnbGVDbGFzcygnc2xpZE91dCcpOyAvL3RvcC1iYXIgZm9sbG93cyBjb250ZW50LXBhbmVsIG9uIHRhYmxldCBhbmQgZGVza3RvcAoJCQkvL2NoYW5nZSBjcGN0YS10b3AtYmFyIGNvbnRlbnQgYmFzZWQgb24gcG9zaXRpb24KCQkJaWYoalF1ZXJ5KCcuY3BjdGEtZmx5aW4gLmNwY3RhLXRvcC1iYXInKS5oYXNDbGFzcygnc2xpZE91dCcpKXsKCQkJCWpRdWVyeSgnLmNwY3RhLWZseWluIC5jcGN0YS10b3AtYmFyJykudGV4dCgnRmVybWVyJyk7CgkJCX0gZWxzZSB7CgkJCQlqUXVlcnkoJy5jcGN0YS1mbHlpbiAuY3BjdGEtdG9wLWJhcicpLnRleHQoQ1RBKTsKCQkJfQoJCX0JCgl9CgkKCS8vYXV0by1wb3Agb3V0IGN0YQogICAgCQoJLy90b2dnbGUgY29udGVudCB3aGVuIGNwY3RhLXRvcC1iYXIgaXMgY2xpY2tlZAoJalF1ZXJ5KCcuY3BjdGEtZmx5aW4gLmNwY3RhLXRvcC1iYXInKS5jbGljayhmdW5jdGlvbigpewoJCXNsaWRlT3V0KCk7Cgl9KTsKCS8vdG9nZ2xlIGNvbnRlbnQgd2hlbiAneCcgaXMgY2xpY2tlZAoJalF1ZXJ5KCcuY3BjdGEtZmx5aW4gLmNwY3RhLWNvbnRlbnQtcGFuZWwgLmNwY3RhLWNsb3NlJykuY2xpY2soZnVuY3Rpb24oKXsKCQlzbGlkZU91dCgpOwoJfSk7CgkKCQoJLyogY29tcGVuc2F0ZSBmb3IgbG9nZ2VkIGluIGFkbWluIGJhciAqLwoJfSk7Cjwvc2NyaXB0PiAgICAgCgk8ZGl2IGNsYXNzPSJjcGN0YS1mbHlpbiI+CiAgICAgICAgPGRpdiBjbGFzcz0iY3BjdGEtdG9wLWJhciI+CiAgICAgICAgICAgIE9mZnJlIFBhcnJhaW5hZ2UgMTAwMOKCrCBvZmZlcnRzKiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgPGRpdiBjbGFzcz0iY3BjdGEtY29udGVudC1wYW5lbCI+CiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJjcGN0YS1jbG9zZSIgYXJpYS10aXRsZT0iY2xvc2UiPjwvc3Bhbj4gICAgICAgICAgICA8cCBzdHlsZT0iZm9udC13ZWlnaHQ6IDQwMDsgdGV4dC1hbGlnbjogY2VudGVyOyI+PHNwYW4gc3R5bGU9ImZvbnQtc2l6ZTogMThwdDsiPjxzdHJvbmc+PHNwYW4gc3R5bGU9ImNvbG9yOiAjZDlhZjQ1OyI+UmVjb21tYW5kZXotbm91cyBldCByZWNldmV6IHVuIGNow6hxdWUgZGXCoDEwMDDigqzCoCEqPC9zcGFuPjwvc3Ryb25nPjwvc3Bhbj48L3A+DQo8cD4mbmJzcDs8L3A+DQo8cCBzdHlsZT0idGV4dC1hbGlnbjogY2VudGVyOyI+PHNwYW4gc3R5bGU9ImNvbG9yOiAjMmUyZjc4OyBmb250LXNpemU6IDE0cHQ7Ij48c3Ryb25nPlZvdXMgY29ubmFpc3NleiBxdWVscXUndW4gcXVpIHZlbmQgdW4gYmllbiBpbW1vYmlsaWVyID88L3N0cm9uZz48L3NwYW4+PC9wPg0KPHAgc3R5bGU9InRleHQtYWxpZ246IGNlbnRlcjsiPjxkaXYgY2xhc3M9ImZybV9mb3JtcyAgd2l0aF9mcm1fc3R5bGUgZnJtX2NlbnRlcl9zdWJtaXQgZnJtX3N0eWxlX3N0eWxlLWZvcm1pZGFibGUiIGlkPSJmcm1fZm9ybV80X2NvbnRhaW5lciIgPgo8Zm9ybSBlbmN0eXBlPSJtdWx0aXBhcnQvZm9ybS1kYXRhIiBtZXRob2Q9InBvc3QiIGNsYXNzPSJmcm0tc2hvdy1mb3JtICBmcm1fcHJvX2Zvcm0gIiBpZD0iZm9ybV9wYXJyYWlubmFnZSIgID4KPGRpdiBjbGFzcz0iZnJtX2Zvcm1fZmllbGRzICI+CjxmaWVsZHNldD4KPGxlZ2VuZCBjbGFzcz0iZnJtX3NjcmVlbl9yZWFkZXIiPlBhcnJhaW5uYWdlPC9sZWdlbmQ+DQoNCjxkaXYgY2xhc3M9ImZybV9maWVsZHNfY29udGFpbmVyIj4KPGlucHV0IHR5cGU9ImhpZGRlbiIgbmFtZT0iZnJtX2FjdGlvbiIgdmFsdWU9ImNyZWF0ZSIgLz4KPGlucHV0IHR5cGU9ImhpZGRlbiIgbmFtZT0iZm9ybV9pZCIgdmFsdWU9IjQiIC8+CjxpbnB1dCB0eXBlPSJoaWRkZW4iIG5hbWU9ImZybV9oaWRlX2ZpZWxkc180IiBpZD0iZnJtX2hpZGVfZmllbGRzXzQiIHZhbHVlPSIiIC8+CjxpbnB1dCB0eXBlPSJoaWRkZW4iIG5hbWU9ImZvcm1fa2V5IiB2YWx1ZT0icGFycmFpbm5hZ2UiIC8+CjxpbnB1dCB0eXBlPSJoaWRkZW4iIG5hbWU9Iml0ZW1fbWV0YVswXSIgdmFsdWU9IiIgLz4KPGlucHV0IHR5cGU9ImhpZGRlbiIgaWQ9ImZybV9zdWJtaXRfZW50cnlfNCIgbmFtZT0iZnJtX3N1Ym1pdF9lbnRyeV80IiB2YWx1ZT0iYTM4MGQ2M2EwZCIgLz48aW5wdXQgdHlwZT0iaGlkZGVuIiBuYW1lPSJfd3BfaHR0cF9yZWZlcmVyIiB2YWx1ZT0iL3JlY2hlcmNoZS1hdmFuY2VlL3BhZ2UvMT9hZHZhbmNlZF9jaXR5PXBhcmlzLTImYW1wO2NoYW1icmVzLW1pbiZhbXA7c3VyZmFjZS1taW4mYW1wO2J1ZGdldC1tYXgmYW1wO3N1Ym1pdD1SRUNIRVJDSEVSJmFtcDt3cGVzdGF0ZV9yZWd1bGFyX3NlYXJjaF9ub25jZT0wY2MzNmRhNTk3JmFtcDtfd3BfaHR0cF9yZWZlcmVyPSUyRmFjaGV0ZXIlMkYiIC8+PGxhYmVsIGZvcj0iZnJtX3ZlcmlmeV80IiBjbGFzcz0iZnJtX3NjcmVlbl9yZWFkZXIgZnJtX2hpZGRlbiI+SWYgeW91IGFyZSBodW1hbiwgbGVhdmUgdGhpcyBmaWVsZCBibGFuay48L2xhYmVsPgo8aW5wdXQgdHlwZT0idGV4dCIgY2xhc3M9ImZybV9oaWRkZW4gZnJtX3ZlcmlmeSIgaWQ9ImZybV92ZXJpZnlfNCIgbmFtZT0iZnJtX3ZlcmlmeSIgdmFsdWU9IiIgIC8+CjxkaXYgaWQ9ImZybV9maWVsZF8yMF9jb250YWluZXIiIGNsYXNzPSJmcm1fZm9ybV9maWVsZCBmcm1fc2VjdGlvbl9oZWFkaW5nIGZvcm0tZmllbGQgIj4NCjxoMyBjbGFzcz0iZnJtX3Bvc190b3AgZnJtX3NlY3Rpb25fc3BhY2luZyI+UGFycmFpbjwvaDM+DQoNCg0KPGRpdiBpZD0iZnJtX2ZpZWxkXzIyX2NvbnRhaW5lciIgY2xhc3M9ImZybV9mb3JtX2ZpZWxkIGZvcm0tZmllbGQgIGZybV9yZXF1aXJlZF9maWVsZCBmcm1fbGVmdF9jb250YWluZXIiPg0KICAgIDxsYWJlbCBmb3I9ImZpZWxkX21yMGR6IiBpZD0iZmllbGRfbXIwZHpfbGFiZWwiIGNsYXNzPSJmcm1fcHJpbWFyeV9sYWJlbCI+Tm9tIGNvbXBsZXQNCiAgICAgICAgPHNwYW4gY2xhc3M9ImZybV9yZXF1aXJlZCI+Kjwvc3Bhbj4NCiAgICA8L2xhYmVsPg0KICAgIDxpbnB1dCB0eXBlPSJ0ZXh0IiBpZD0iZmllbGRfbXIwZHoiIG5hbWU9Iml0ZW1fbWV0YVsyMl0iIHZhbHVlPSIiICBkYXRhLXNlY3Rpb25pZD0iMjAiIGRhdGEtcmVxbXNnPSJDZSBjaGFtcCBuZSBwZXV0IHBhcyDDqnRyZSB2aWRlIiBhcmlhLXJlcXVpcmVkPSJ0cnVlIiBkYXRhLWludm1zZz0idGV4dGUgZXN0IG5vbiB2YWxpZGUiICAvPg0KICAgIA0KICAgIA0KPC9kaXY+CjxkaXYgaWQ9ImZybV9maWVsZF8yM19jb250YWluZXIiIGNsYXNzPSJmcm1fZm9ybV9maWVsZCBmb3JtLWZpZWxkICBmcm1fbGVmdF9jb250YWluZXIiPg0KICAgIDxsYWJlbCBmb3I9ImZpZWxkXzJzemZtIiBpZD0iZmllbGRfMnN6Zm1fbGFiZWwiIGNsYXNzPSJmcm1fcHJpbWFyeV9sYWJlbCI+QWRyZXNzZQ0KICAgICAgICA8c3BhbiBjbGFzcz0iZnJtX3JlcXVpcmVkIj48L3NwYW4+DQogICAgPC9sYWJlbD4NCiAgICA8aW5wdXQgdHlwZT0idGV4dCIgaWQ9ImZpZWxkXzJzemZtIiBuYW1lPSJpdGVtX21ldGFbMjNdIiB2YWx1ZT0iIiAgZGF0YS1zZWN0aW9uaWQ9IjIwIiBkYXRhLWludm1zZz0idGV4dGUgZXN0IG5vbiB2YWxpZGUiICAvPg0KICAgIA0KICAgIA0KPC9kaXY+CjxkaXYgaWQ9ImZybV9maWVsZF8yNF9jb250YWluZXIiIGNsYXNzPSJmcm1fZm9ybV9maWVsZCBmb3JtLWZpZWxkICBmcm1fcmVxdWlyZWRfZmllbGQgZnJtX2xlZnRfY29udGFpbmVyIj4NCiAgICA8bGFiZWwgZm9yPSJmaWVsZF84NGdjbyIgaWQ9ImZpZWxkXzg0Z2NvX2xhYmVsIiBjbGFzcz0iZnJtX3ByaW1hcnlfbGFiZWwiPlTDqWzDqXBob25lDQogICAgICAgIDxzcGFuIGNsYXNzPSJmcm1fcmVxdWlyZWQiPio8L3NwYW4+DQogICAgPC9sYWJlbD4NCiAgICA8aW5wdXQgdHlwZT0idGVsIiBpZD0iZmllbGRfODRnY28iIG5hbWU9Iml0ZW1fbWV0YVsyNF0iIHZhbHVlPSIiICBkYXRhLXNlY3Rpb25pZD0iMjAiIGRhdGEtcmVxbXNnPSJDZSBjaGFtcCBuZSBwZXV0IHBhcyDDqnRyZSB2aWRlIiBhcmlhLXJlcXVpcmVkPSJ0cnVlIiBkYXRhLWludm1zZz0iUGhvbmUgZXN0IG5vbiB2YWxpZGUiIHBhdHRlcm49IigoXCtcZHsxLDN9KC18LnwgKT9cKD9cZFwpPygtfCB8Lik/XGR7MSw1fSl8KFwoP1xkezIsNn1cKT8pKSgtfC58ICk/KFxkezMsNH0pKC18LnwgKT8oXGR7NH0pKCggeHwgZXh0KVxkezEsNX0pezAsMX0kIiAgLz4NCiAgICANCiAgICANCjwvZGl2Pgo8ZGl2IGlkPSJmcm1fZmllbGRfMjVfY29udGFpbmVyIiBjbGFzcz0iZnJtX2Zvcm1fZmllbGQgZm9ybS1maWVsZCAgZnJtX3JlcXVpcmVkX2ZpZWxkIGZybV9sZWZ0X2NvbnRhaW5lciI+DQogICAgPGxhYmVsIGZvcj0iZmllbGRfejF4eHYiIGlkPSJmaWVsZF96MXh4dl9sYWJlbCIgY2xhc3M9ImZybV9wcmltYXJ5X2xhYmVsIj5FLW1haWwNCiAgICAgICAgPHNwYW4gY2xhc3M9ImZybV9yZXF1aXJlZCI+Kjwvc3Bhbj4NCiAgICA8L2xhYmVsPg0KICAgIDxpbnB1dCB0eXBlPSJlbWFpbCIgaWQ9ImZpZWxkX3oxeHh2IiBuYW1lPSJpdGVtX21ldGFbMjVdIiB2YWx1ZT0iIiAgZGF0YS1zZWN0aW9uaWQ9IjIwIiBkYXRhLXJlcW1zZz0iQ2UgY2hhbXAgbmUgcGV1dCBwYXMgw6p0cmUgdmlkZSIgYXJpYS1yZXF1aXJlZD0idHJ1ZSIgZGF0YS1pbnZtc2c9IkUtbWFpbCBlc3Qgbm9uIHZhbGlkZSIgIC8+DQogICAgDQogICAgDQo8L2Rpdj4KPGRpdiBpZD0iZnJtX2ZpZWxkXzUwX2NvbnRhaW5lciIgY2xhc3M9ImZybV9mb3JtX2ZpZWxkIGZvcm0tZmllbGQgIGZybV9yZXF1aXJlZF9maWVsZCBmcm1fbGVmdF9jb250YWluZXIiPg0KICAgIDxsYWJlbCBmb3I9ImZpZWxkX2ZqbHJxIiBpZD0iZmllbGRfZmpscnFfbGFiZWwiIGNsYXNzPSJmcm1fcHJpbWFyeV9sYWJlbCI+QmllbiBpbW1vYmlsaWVyDQogICAgICAgIDxzcGFuIGNsYXNzPSJmcm1fcmVxdWlyZWQiPio8L3NwYW4+DQogICAgPC9sYWJlbD4NCiAgICA8dGV4dGFyZWEgbmFtZT0iaXRlbV9tZXRhWzUwXSIgaWQ9ImZpZWxkX2ZqbHJxIiByb3dzPSI2IiAgZGF0YS1zZWN0aW9uaWQ9IjIwIiBwbGFjZWhvbGRlcj0iSW5mb3JtYXRpb25zIHV0aWxlcyBzdXIgbGUgYmllbiDCuyAow6l0YWdlLCBjb25uYWlzc2FuY2UgZOKAmXVuIHByb2pldCBkZSB2ZW50ZSwgw6ljaGFuZ2UgYXZlYyBsZSBnYXJkaWVu4oCmKSIgZGF0YS1yZXFtc2c9IkNlIGNoYW1wIG5lIHBldXQgcGFzIMOqdHJlIHZpZGUiIGFyaWEtcmVxdWlyZWQ9InRydWUiIGRhdGEtaW52bXNnPSJCaWVuIGltbW9iaWxpZXIgZXN0IG5vbiB2YWxpZGUiICA+PC90ZXh0YXJlYT4NCiAgICANCiAgICANCjwvZGl2Pgo8L2Rpdj4KPGlucHV0IHR5cGU9ImhpZGRlbiIgbmFtZT0iaXRlbV9rZXkiIHZhbHVlPSIiIC8+Cgk8ZGl2IGNsYXNzPSJmcm1fc3VibWl0Ij4NCg0KPGJ1dHRvbiBjbGFzcz0iZnJtX2J1dHRvbl9zdWJtaXQgZnJtX2ZpbmFsX3N1Ym1pdCIgdHlwZT0ic3VibWl0IiAgIGZvcm1ub3ZhbGlkYXRlPSJmb3Jtbm92YWxpZGF0ZSI+RW52b3llcjwvYnV0dG9uPg0KDQo8L2Rpdj48L2Rpdj4KPC9maWVsZHNldD4KPC9kaXY+CjwvZm9ybT4KPC9kaXY+CjwvcD4NCjxwIHN0eWxlPSJ0ZXh0LWFsaWduOiBjZW50ZXI7Ij48c3BhbiBzdHlsZT0iZm9udC1zaXplOiA4cHQ7Ij48ZW0+KlNpIGxhIHZlbnRlIGVzdCByw6lhbGlzw6llIHBhciBub3RyZSBjYWJpbmV0LjxiciAvPjwvZW0+PGVtPipKdXNxdeKAmcOgIDMwMDDigqwgb2ZmZXJ0IHN1ciBsZXMgZ3JhbmRlcyBzdXJmYWNlcy48L2VtPjwvc3Bhbj48L3A+PGJyIC8+PGJyIC8+DQo8cD48Y2VudGVyPjxlbT5Qb3VyIHRvdXQgbWFuZGF0IGV4Y2x1c2lmLCBub3VzIE9GRlJPTlMgZW4gcGx1cyBsZSBERU1FTkFHRU1FTlQgw6Agdm90cmUgZmlsbGV1bCwganVzcXXigJnDoMKgPC9lbT48c3Ryb25nPjxlbT44MDAw4oKsPC9lbT48L3N0cm9uZz48ZW0+wqAhPC9lbT48L3A+DQo8cD48ZW0+UG91ciBwbHVzIGTigJlpbmZvcm1hdGlvbnMsIGNvbnRhY3RlciBub3VzLjwvZW0+PC9jZW50ZXI+PC9wPgkgICAgPC9kaXY+Cgk8L2Rpdj4KICAgIAogICAgPHNjcmlwdD4KICAgICAgICAvLzwhW0NEQVRBWwogICAgICAoZnVuY3Rpb24oaSxzLG8sZyxyLGEsbSl7aVsnR29vZ2xlQW5hbHl0aWNzT2JqZWN0J109cjtpW3JdPWlbcl18fGZ1bmN0aW9uKCl7CiAgICAgIChpW3JdLnE9aVtyXS5xfHxbXSkucHVzaChhcmd1bWVudHMpfSxpW3JdLmw9MSpuZXcgRGF0ZSgpO2E9cy5jcmVhdGVFbGVtZW50KG8pLAogICAgICBtPXMuZ2V0RWxlbWVudHNCeVRhZ05hbWUobylbMF07YS5hc3luYz0xO2Euc3JjPWc7bS5wYXJlbnROb2RlLmluc2VydEJlZm9yZShhLG0pCiAgICAgIH0pKHdpbmRvdyxkb2N1bWVudCwnc2NyaXB0JywnLy93d3cuZ29vZ2xlLWFuYWx5dGljcy5jb20vYW5hbHl0aWNzLmpzJywnZ2EnKTsKCiAgICAgIGdhKCdjcmVhdGUnLCAnVUEtODkxMDE5ODYtNDUnLCAnd3d3LmNhYmluZXQta21pLmNvbScpOwogICAgICBnYSgnc2VuZCcsICdwYWdldmlldycpOwogICAgLy9dXT4KICAgIDwvc2NyaXB0PgoKCiAgICA8c2NyaXB0IHR5cGU9J3RleHQvamF2YXNjcmlwdCcgc3JjPSdodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vd3AtaW5jbHVkZXMvanMvanF1ZXJ5L3VpL2NvcmUubWluLmpzP3Zlcj0xLjExLjQnPjwvc2NyaXB0Pgo8c2NyaXB0IHR5cGU9J3RleHQvamF2YXNjcmlwdCcgc3JjPSdodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vd3AtaW5jbHVkZXMvanMvanF1ZXJ5L3VpL3dpZGdldC5taW4uanM/dmVyPTEuMTEuNCc+PC9zY3JpcHQ+CjxzY3JpcHQgdHlwZT0ndGV4dC9qYXZhc2NyaXB0JyBzcmM9J2h0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS93cC1pbmNsdWRlcy9qcy9qcXVlcnkvdWkvbW91c2UubWluLmpzP3Zlcj0xLjExLjQnPjwvc2NyaXB0Pgo8c2NyaXB0IHR5cGU9J3RleHQvamF2YXNjcmlwdCcgc3JjPSdodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vd3AtaW5jbHVkZXMvanMvanF1ZXJ5L3VpL2RyYWdnYWJsZS5taW4uanM/dmVyPTEuMTEuNCc+PC9zY3JpcHQ+CjxzY3JpcHQgdHlwZT0ndGV4dC9qYXZhc2NyaXB0JyBzcmM9J2h0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS93cC1pbmNsdWRlcy9qcy9qcXVlcnkvdWkvcG9zaXRpb24ubWluLmpzP3Zlcj0xLjExLjQnPjwvc2NyaXB0Pgo8c2NyaXB0IHR5cGU9J3RleHQvamF2YXNjcmlwdCcgc3JjPSdodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vd3AtaW5jbHVkZXMvanMvanF1ZXJ5L3VpL21lbnUubWluLmpzP3Zlcj0xLjExLjQnPjwvc2NyaXB0Pgo8c2NyaXB0IHR5cGU9J3RleHQvamF2YXNjcmlwdCcgc3JjPSdodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vd3AtaW5jbHVkZXMvanMvd3Atc2FuaXRpemUubWluLmpzP3Zlcj01LjIuNSc+PC9zY3JpcHQ+CjxzY3JpcHQgdHlwZT0ndGV4dC9qYXZhc2NyaXB0JyBzcmM9J2h0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS93cC1pbmNsdWRlcy9qcy93cC1hMTF5Lm1pbi5qcz92ZXI9NS4yLjUnPjwvc2NyaXB0Pgo8c2NyaXB0IHR5cGU9J3RleHQvamF2YXNjcmlwdCc+Ci8qIDwhW0NEQVRBWyAqLwp2YXIgdWlBdXRvY29tcGxldGVMMTBuID0geyJub1Jlc3VsdHMiOiJBdWN1biByXHUwMGU5c3VsdGF0LiIsIm9uZVJlc3VsdCI6IlVuIHJcdTAwZTlzdWx0YXQgdHJvdXZcdTAwZTkuIFV0aWxpc2V6IGxlcyBmbFx1MDBlOGNoZXMgaGF1dCBldCBiYXMgZHUgY2xhdmllciBwb3VyIGxlcyBwYXJjb3VyaXIuICIsIm1hbnlSZXN1bHRzIjoiJWQgclx1MDBlOXN1bHRhdHMgdHJvdXZcdTAwZTlzLiBVdGlsaXNleiBsZXMgZmxcdTAwZThjaGVzIGhhdXQgZXQgYmFzIGR1IGNsYXZpZXIgcG91ciBsZXMgcGFyY291cmlyLiIsIml0ZW1TZWxlY3RlZCI6Ilx1MDBjOWxcdTAwZTltZW50IHNcdTAwZTlsZWN0aW9ublx1MDBlOS4ifTsKLyogXV0+ICovCjwvc2NyaXB0Pgo8c2NyaXB0IHR5cGU9J3RleHQvamF2YXNjcmlwdCcgc3JjPSdodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vd3AtaW5jbHVkZXMvanMvanF1ZXJ5L3VpL2F1dG9jb21wbGV0ZS5taW4uanM/dmVyPTEuMTEuNCc+PC9zY3JpcHQ+CjxzY3JpcHQgdHlwZT0ndGV4dC9qYXZhc2NyaXB0JyBzcmM9J2h0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS93cC1pbmNsdWRlcy9qcy9qcXVlcnkvdWkvc2xpZGVyLm1pbi5qcz92ZXI9MS4xMS40Jz48L3NjcmlwdD4KPHNjcmlwdCB0eXBlPSd0ZXh0L2phdmFzY3JpcHQnIHNyYz0naHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL3dwLWluY2x1ZGVzL2pzL2pxdWVyeS91aS9kYXRlcGlja2VyLm1pbi5qcz92ZXI9MS4xMS40Jz48L3NjcmlwdD4KPHNjcmlwdCB0eXBlPSd0ZXh0L2phdmFzY3JpcHQnPgpqUXVlcnkoZG9jdW1lbnQpLnJlYWR5KGZ1bmN0aW9uKGpRdWVyeSl7alF1ZXJ5LmRhdGVwaWNrZXIuc2V0RGVmYXVsdHMoeyJjbG9zZVRleHQiOiJGZXJtZXIiLCJjdXJyZW50VGV4dCI6IkF1am91cmRcdTIwMTlodWkiLCJtb250aE5hbWVzIjpbImphbnZpZXIiLCJmXHUwMGU5dnJpZXIiLCJtYXJzIiwiYXZyaWwiLCJtYWkiLCJqdWluIiwianVpbGxldCIsImFvXHUwMGZidCIsInNlcHRlbWJyZSIsIm9jdG9icmUiLCJub3ZlbWJyZSIsImRcdTAwZTljZW1icmUiXSwibW9udGhOYW1lc1Nob3J0IjpbIkphbiIsIkZcdTAwZTl2IiwiTWFyIiwiQXZyIiwiTWFpIiwiSnVpbiIsIkp1aWwiLCJBb1x1MDBmYnQiLCJTZXAiLCJPY3QiLCJOb3YiLCJEXHUwMGU5YyJdLCJuZXh0VGV4dCI6IlN1aXZhbnQiLCJwcmV2VGV4dCI6IlByXHUwMGU5Y1x1MDBlOWRlbnQiLCJkYXlOYW1lcyI6WyJkaW1hbmNoZSIsImx1bmRpIiwibWFyZGkiLCJtZXJjcmVkaSIsImpldWRpIiwidmVuZHJlZGkiLCJzYW1lZGkiXSwiZGF5TmFtZXNTaG9ydCI6WyJkaW0iLCJsdW4iLCJtYXIiLCJtZXIiLCJqZXUiLCJ2ZW4iLCJzYW0iXSwiZGF5TmFtZXNNaW4iOlsiRCIsIkwiLCJNIiwiTSIsIkoiLCJWIiwiUyJdLCJkYXRlRm9ybWF0IjoiZCBNTSB5eSIsImZpcnN0RGF5IjoxLCJpc1JUTCI6ZmFsc2V9KTt9KTsKPC9zY3JpcHQ+CjxzY3JpcHQgdHlwZT0ndGV4dC9qYXZhc2NyaXB0JyBzcmM9J2h0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS93cC1jb250ZW50L3RoZW1lcy93cHJlc2lkZW5jZS9qcy9ib290c3RyYXAubWluLmpzP3Zlcj0xLjAnPjwvc2NyaXB0Pgo8c2NyaXB0IHR5cGU9J3RleHQvamF2YXNjcmlwdCcgc3JjPSdodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vd3AtY29udGVudC90aGVtZXMvd3ByZXNpZGVuY2UvanMvYW5pbWUubWluLmpzP3Zlcj0xLjAnPjwvc2NyaXB0Pgo8c2NyaXB0IHR5cGU9J3RleHQvamF2YXNjcmlwdCcgc3JjPSdodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vd3AtY29udGVudC90aGVtZXMvd3ByZXNpZGVuY2UvanMvanF1ZXJ5Lm1hdGNoSGVpZ2h0LW1pbi5qcz92ZXI9MS4wJz48L3NjcmlwdD4KPHNjcmlwdCB0eXBlPSd0ZXh0L2phdmFzY3JpcHQnIHNyYz0naHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL3dwLWNvbnRlbnQvdGhlbWVzL3dwcmVzaWRlbmNlL2pzL293bC5jYXJvdXNlbC5taW4uanM/dmVyPTEuMCc+PC9zY3JpcHQ+CjxzY3JpcHQgdHlwZT0ndGV4dC9qYXZhc2NyaXB0JyBzcmM9J2h0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS93cC1jb250ZW50L3RoZW1lcy93cHJlc2lkZW5jZS9qcy9qcXVlcnkuZmFuY3lib3gucGFjay5qcz92ZXI9MS4wJz48L3NjcmlwdD4KPHNjcmlwdCB0eXBlPSd0ZXh0L2phdmFzY3JpcHQnIHNyYz0naHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL3dwLWNvbnRlbnQvdGhlbWVzL3dwcmVzaWRlbmNlL2pzL2pxdWVyeS5mYW5jeWJveC10aHVtYnMuanM/dmVyPTEuMCc+PC9zY3JpcHQ+CjxzY3JpcHQgdHlwZT0ndGV4dC9qYXZhc2NyaXB0JyBzcmM9J2h0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS93cC1jb250ZW50L3RoZW1lcy93cHJlc2lkZW5jZS9qcy9kZW5zZS5taW4uanM/dmVyPTEuMCc+PC9zY3JpcHQ+CjxzY3JpcHQgdHlwZT0ndGV4dC9qYXZhc2NyaXB0JyBzcmM9J2h0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS93cC1jb250ZW50L3RoZW1lcy93cHJlc2lkZW5jZS9qcy9wbGFjZWhvbGRlcnMubWluLmpzP3Zlcj0xLjAnPjwvc2NyaXB0Pgo8c2NyaXB0IHR5cGU9J3RleHQvamF2YXNjcmlwdCcgc3JjPSdodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vd3AtY29udGVudC90aGVtZXMvd3ByZXNpZGVuY2UvanMvc2xpY2subWluLmpzP3Zlcj0xLjAnPjwvc2NyaXB0Pgo8c2NyaXB0IHR5cGU9J3RleHQvamF2YXNjcmlwdCcgc3JjPSdodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vd3AtY29udGVudC90aGVtZXMvd3ByZXNpZGVuY2UvanMvaTE4bi9kYXRlcGlja2VyLWZyLmpzP3Zlcj0xLjAnPjwvc2NyaXB0Pgo8c2NyaXB0IHR5cGU9J3RleHQvamF2YXNjcmlwdCcgc3JjPSdodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vd3AtY29udGVudC90aGVtZXMvd3ByZXNpZGVuY2UvanMvanF1ZXJ5LnVpLnRvdWNoLXB1bmNoLm1pbi5qcz92ZXI9MS4wJz48L3NjcmlwdD4KPHNjcmlwdCB0eXBlPSd0ZXh0L2phdmFzY3JpcHQnIHNyYz0naHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL3dwLWNvbnRlbnQvdGhlbWVzL3dwcmVzaWRlbmNlL2pzL29wZW5zdHJlZXQvbGVhZmxldC5qcz92ZXI9MS4wJz48L3NjcmlwdD4KPHNjcmlwdCB0eXBlPSd0ZXh0L2phdmFzY3JpcHQnIHNyYz0naHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL3dwLWNvbnRlbnQvdGhlbWVzL3dwcmVzaWRlbmNlL2pzL29wZW5zdHJlZXQvbGVhZmxldC5tYXJrZXJjbHVzdGVyLmpzP3Zlcj0xLjAnPjwvc2NyaXB0Pgo8c2NyaXB0IHR5cGU9J3RleHQvamF2YXNjcmlwdCc+Ci8qIDwhW0NEQVRBWyAqLwp2YXIgbWFwZnVuY3Rpb25zX3ZhcnMgPSB7InBhdGgiOiJodHRwczpcL1wvd3d3LmNhYmluZXQta21pLmNvbVwvd3AtY29udGVudFwvdGhlbWVzXC93cHJlc2lkZW5jZVwvY3NzXC9jc3MtaW1hZ2VzIiwicGluX2ltYWdlcyI6IntcImxvY2F0aW9uXCI6XCJodHRwczpcXFwvXFxcL3d3dy5jYWJpbmV0LWttaS5jb21cXFwvd3AtY29udGVudFxcXC91cGxvYWRzXFxcLzIwMTlcXFwvMDZcXFwvYXBhcnRtZW50c3NhbGVzLnBuZ1wiLFwidmVuZHVcIjpcImh0dHBzOlxcXC9cXFwvd3d3LmNhYmluZXQta21pLmNvbVxcXC93cC1jb250ZW50XFxcL3VwbG9hZHNcXFwvMjAxOVxcXC8wNlxcXC9hcGFydG1lbnRzc2FsZXMucG5nXCIsXCJ2ZW50ZVwiOlwiaHR0cHM6XFxcL1xcXC93d3cuY2FiaW5ldC1rbWkuY29tXFxcL3dwLWNvbnRlbnRcXFwvdXBsb2Fkc1xcXC8yMDE5XFxcLzA2XFxcL2FwYXJ0bWVudHNzYWxlcy5wbmdcIixcImFwcGFydGVtZW50XCI6XCJodHRwczpcXFwvXFxcL3d3dy5jYWJpbmV0LWttaS5jb21cXFwvd3AtY29udGVudFxcXC91cGxvYWRzXFxcLzIwMTlcXFwvMDZcXFwvYXBhcnRtZW50c3NhbGVzLnBuZ1wiLFwiaW1tZXVibGVcIjpcIlwiLFwibWFpc29uXCI6XCJcIixcInRlcnJhaW5cIjpcImh0dHBzOlxcXC9cXFwvd3d3LmNhYmluZXQta21pLmNvbVxcXC93cC1jb250ZW50XFxcL3VwbG9hZHNcXFwvMjAxOVxcXC8wNlxcXC9hcGFydG1lbnRzc2FsZXMucG5nXCIsXCJhcHBhcnRlbWVudGxvY2F0aW9uXCI6XCJodHRwczpcXFwvXFxcL3d3dy5jYWJpbmV0LWttaS5jb21cXFwvd3AtY29udGVudFxcXC91cGxvYWRzXFxcLzIwMTlcXFwvMDZcXFwvYXBhcnRtZW50c3NhbGVzLnBuZ1wiLFwiaW1tZXVibGVsb2NhdGlvblwiOlwiXCIsXCJtYWlzb25sb2NhdGlvblwiOlwiXCIsXCJ0ZXJyYWlubG9jYXRpb25cIjpcImh0dHBzOlxcXC9cXFwvd3d3LmNhYmluZXQta21pLmNvbVxcXC93cC1jb250ZW50XFxcL3VwbG9hZHNcXFwvMjAxOVxcXC8wNlxcXC9hcGFydG1lbnRzc2FsZXMucG5nXCIsXCJhcHBhcnRlbWVudHZlbmR1XCI6XCJodHRwczpcXFwvXFxcL3d3dy5jYWJpbmV0LWttaS5jb21cXFwvd3AtY29udGVudFxcXC91cGxvYWRzXFxcLzIwMTlcXFwvMDZcXFwvYXBhcnRtZW50c3NhbGVzLnBuZ1wiLFwiaW1tZXVibGV2ZW5kdVwiOlwiXCIsXCJtYWlzb252ZW5kdVwiOlwiXCIsXCJ0ZXJyYWludmVuZHVcIjpcImh0dHBzOlxcXC9cXFwvd3d3LmNhYmluZXQta21pLmNvbVxcXC93cC1jb250ZW50XFxcL3VwbG9hZHNcXFwvMjAxOVxcXC8wNlxcXC9hcGFydG1lbnRzc2FsZXMucG5nXCIsXCJhcHBhcnRlbWVudHZlbnRlXCI6XCJodHRwczpcXFwvXFxcL3d3dy5jYWJpbmV0LWttaS5jb21cXFwvd3AtY29udGVudFxcXC91cGxvYWRzXFxcLzIwMTlcXFwvMDZcXFwvYXBhcnRtZW50c3NhbGVzLnBuZ1wiLFwiaW1tZXVibGV2ZW50ZVwiOlwiXCIsXCJtYWlzb252ZW50ZVwiOlwiXCIsXCJ0ZXJyYWludmVudGVcIjpcImh0dHBzOlxcXC9cXFwvd3d3LmNhYmluZXQta21pLmNvbVxcXC93cC1jb250ZW50XFxcL3VwbG9hZHNcXFwvMjAxOVxcXC8wNlxcXC9hcGFydG1lbnRzc2FsZXMucG5nXCIsXCJpZHhwaW5cIjpcImh0dHBzOlxcXC9cXFwvd3d3LmNhYmluZXQta21pLmNvbVxcXC93cC1jb250ZW50XFxcL3VwbG9hZHNcXFwvMjAxOVxcXC8wNlxcXC9hcGFydG1lbnRzc2FsZXMucG5nXCIsXCJ1c2VycGluXCI6XCJodHRwczpcXFwvXFxcL3d3dy5jYWJpbmV0LWttaS5jb21cXFwvd3AtY29udGVudFxcXC91cGxvYWRzXFxcLzIwMTlcXFwvMDZcXFwvYXBhcnRtZW50c3NhbGVzLnBuZ1wifSIsImdlb2xvY2F0aW9uX3JhZGl1cyI6IjEwMDAiLCJhZHZfc2VhcmNoIjoiMSIsImluX3RleHQiOiJkYW5zIiwiem9vbV9jbHVzdGVyIjoiMTEiLCJ1c2VyX2NsdXN0ZXIiOiJ5ZXMiLCJvcGVuX2Nsb3NlX3N0YXR1cyI6IjAiLCJvcGVuX2hlaWdodCI6IjYwMCIsImNsb3NlZF9oZWlnaHQiOiI1MDAiLCJnZW5lcmF0ZWRfcGlucyI6IjEiLCJnZW9fbm9fcG9zIjoiTGUgbmF2aWdhdGV1ciBuJ2EgcGFzIHB1IGRcdTAwZTl0ZWN0ZXIgdm90cmUgcG9zaXRpb24hIiwiZ2VvX25vX2Jyb3ciOiJMYSBnXHUwMGU5b2xvY2FsaXNhdGlvbiBuJ2VzdCBwYXMgc3VwcG9ydFx1MDBlOWUgcGFyIGNlIG5hdmlnYXRldXIuIiwiZ2VvX21lc3NhZ2UiOiJyYXlvbiBtIiwic2hvd19hZHZfc2VhcmNoIjoiIiwiY3VzdG9tX3NlYXJjaCI6InllcyIsImxpc3RpbmdfbWFwIjoiaW50ZXJuYWwiLCJzbHVncyI6WyJhZHZhbmNlZF9jaXR5IiwiY2hhbWJyZXMtbWluIiwic3VyZmFjZS1taW4iLCJidWRnZXQtbWF4Il0sImhvd3MiOlsibGlrZSIsImdyZWF0ZXIiLCJncmVhdGVyIiwic21hbGxlciJdLCJtZWFzdXJlX3N5cyI6Im0iLCJjbG9zZV9tYXAiOiJmZXJtZXIgbGEgY2FydGUiLCJzaG93X2dfc2VhcmNoX3N0YXR1cyI6Im5vIiwic2xpZGVyX3ByaWNlIjoibm8iLCJzbGlkZXJfcHJpY2VfcG9zaXRpb24iOiIwIiwiYWR2X3NlYXJjaF90eXBlIjoiMSIsImlzX2hhbGYiOiIwIiwibWFwX3N0eWxlIjoiW3tcImZlYXR1cmVUeXBlXCI6XCJsYW5kc2NhcGUubmF0dXJhbFwiLFwiZWxlbWVudFR5cGVcIjpcImdlb21ldHJ5LmZpbGxcIixcInN0eWxlcnNcIjpbe1widmlzaWJpbGl0eVwiOlwib25cIn0se1wiY29sb3JcIjpcIiNlMGVmZWZcIn1dfSx7XCJmZWF0dXJlVHlwZVwiOlwicG9pXCIsXCJlbGVtZW50VHlwZVwiOlwiZ2VvbWV0cnkuZmlsbFwiLFwic3R5bGVyc1wiOlt7XCJ2aXNpYmlsaXR5XCI6XCJvblwifSx7XCJodWVcIjpcIiMxOTAwZmZcIn0se1wiY29sb3JcIjpcIiNjMGU4ZThcIn1dfSx7XCJmZWF0dXJlVHlwZVwiOlwicm9hZFwiLFwiZWxlbWVudFR5cGVcIjpcImdlb21ldHJ5XCIsXCJzdHlsZXJzXCI6W3tcImxpZ2h0bmVzc1wiOjEwMH0se1widmlzaWJpbGl0eVwiOlwic2ltcGxpZmllZFwifV19LHtcImZlYXR1cmVUeXBlXCI6XCJyb2FkXCIsXCJlbGVtZW50VHlwZVwiOlwibGFiZWxzXCIsXCJzdHlsZXJzXCI6W3tcInZpc2liaWxpdHlcIjpcIm9mZlwifV19LHtcImZlYXR1cmVUeXBlXCI6XCJ0cmFuc2l0LmxpbmVcIixcImVsZW1lbnRUeXBlXCI6XCJnZW9tZXRyeVwiLFwic3R5bGVyc1wiOlt7XCJ2aXNpYmlsaXR5XCI6XCJvblwifSx7XCJsaWdodG5lc3NcIjo3MDB9XX0se1wiZmVhdHVyZVR5cGVcIjpcIndhdGVyXCIsXCJlbGVtZW50VHlwZVwiOlwiYWxsXCIsXCJzdHlsZXJzXCI6W3tcImNvbG9yXCI6XCIjN2RjZGNkXCJ9XX1dIiwic21hbGxfc2xpZGVyX3QiOiIiLCJpc19wcm9wX2xpc3QiOiIwIiwiaXNfdGF4IjoiMCIsImhhbGZfbm9fcmVzdWx0cyI6IkF1Y3VuIHJcdTAwZTlzdWx0YXQgdHJvdXZcdTAwZTkhIiwiZmllbGRzX25vIjoiNCIsInR5cGUiOiJST0FETUFQIiwidXNlcHJpY2UiOiJubyIsInVzZV9wcmljZV9waW5zX2Z1bGxfcHJpY2UiOiJubyIsInVzZV9zaW5nbGVfaW1hZ2VfcGluIjoibm8iLCJsb2FkaW5nX3Jlc3VsdHMiOiJjaGFyZ2VtZW50IGRlcyByXHUwMGU5c3VsdGF0cyAuLi4iLCJnZW9sb2NhdGlvbl90eXBlIjoiMiIsImlzX2hhbGZfbWFwX2xpc3QiOiIwIiwiaXNfbm9ybWFsX21hcF9saXN0IjoiMCIsImlzX2Fkdl9zZWFyY2giOiIxIn07Ci8qIF1dPiAqLwo8L3NjcmlwdD4KPHNjcmlwdCB0eXBlPSd0ZXh0L2phdmFzY3JpcHQnIHNyYz0naHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL3dwLWNvbnRlbnQvdGhlbWVzL3dwcmVzaWRlbmNlL2pzL2dvb2dsZV9qcy9tYXBmdW5jdGlvbnMuanM/dmVyPTEuMCc+PC9zY3JpcHQ+CjxzY3JpcHQgdHlwZT0ndGV4dC9qYXZhc2NyaXB0Jz4KLyogPCFbQ0RBVEFbICovCnZhciBtYXBiYXNlX3ZhcnMgPSB7IndwX2VzdGF0ZV9raW5kX29mX21hcCI6IjIiLCJ3cF9lc3RhdGVfbWFwYm94X2FwaV9rZXkiOiIifTsKLyogXV0+ICovCjwvc2NyaXB0Pgo8c2NyaXB0IHR5cGU9J3RleHQvamF2YXNjcmlwdCcgc3JjPSdodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vd3AtY29udGVudC90aGVtZXMvd3ByZXNpZGVuY2UvanMvZ29vZ2xlX2pzL21hcHNfYmFzZS5qcz92ZXI9MS4wJz48L3NjcmlwdD4KPHNjcmlwdCB0eXBlPSd0ZXh0L2phdmFzY3JpcHQnPgovKiA8IVtDREFUQVsgKi8KdmFyIGNvbnRyb2xfdmFycyA9IHsibW9yZzEiOiJNb250YW50IGZpbmFuY1x1MDBlOToiLCJtb3JnMiI6IlBhaWVtZW50cyBoeXBvdGhcdTAwZTljYWlyZXM6IiwibW9yZzMiOiJDb1x1MDBmYnQgYW5udWVsIGR1IHByXHUwMGVhdDoiLCJzZWFyY2h0ZXh0IjoiQ0hFUkNIRVIiLCJzZWFyY2h0ZXh0MiI6IkNoZXJjaGUgaWNpLi4uIiwicGF0aCI6Imh0dHBzOlwvXC93d3cuY2FiaW5ldC1rbWkuY29tXC93cC1jb250ZW50XC90aGVtZXNcL3dwcmVzaWRlbmNlIiwic2VhcmNoX3Jvb20iOiJUYXBlciBOYi4gZGUgY2guIFx1MDBlMCBjb3VjaGVyIiwic2VhcmNoX2JhdGgiOiJUYXBlciBOb21icmUgZGUgc2FsbGVzIGRlIGJhaW5zIiwic2VhcmNoX21pbl9wcmljZSI6IlRhcGV6IFRhcmlmIG1pbi4iLCJzZWFyY2hfbWF4X3ByaWNlIjoiVGFwZXogVGFyaWYgTWF4LiIsImNvbnRhY3RfbmFtZSI6Ik5vbSBjb21wbGV0IiwiY29udGFjdF9lbWFpbCI6IkUtbWFpbCIsImNvbnRhY3RfcGhvbmUiOiJUXHUwMGU5bFx1MDBlOXBob25lIiwiY29udGFjdF9jb21tZW50IjoiVm90cmUgbWVzc2FnZSIsInppbGxvd19hZGRyZXMiOiJWb3RyZSBhZHJlc3NlIiwiemlsbG93X2NpdHkiOiJUYSB2aWxsZSIsInppbGxvd19zdGF0ZSI6IlZvdHJlIGNvZGUgZCdcdTAwZTl0YXQgKGV4IENBKSIsImFkdl9jb250YWN0X25hbWUiOiJOb20gY29tcGxldCIsImFkdl9lbWFpbCI6IkUtbWFpbCIsImFkdl9waG9uZSI6IlRcdTAwZTlsXHUwMGU5cGhvbmUiLCJhZHZfY29tbWVudCI6IlZvdHJlIG1lc3NhZ2UiLCJhZHZfc2VhcmNoIjoiRW52b3llciBsZSBtZXNzYWdlIiwiYWRtaW5fdXJsIjoiaHR0cHM6XC9cL3d3dy5jYWJpbmV0LWttaS5jb21cL3dwLWFkbWluXC8iLCJsb2dpbl9yZWRpcmVjdCI6Imh0dHBzOlwvXC93d3cuY2FiaW5ldC1rbWkuY29tXC9teS1wcm9maWxlXC8iLCJsb2dpbl9sb2FkaW5nIjoiRW52b2kgZCdpbmZvcm1hdGlvbnMgdXRpbGlzYXRldXIsIHZldWlsbGV6IHBhdGllbnRlciAuLi4iLCJzdHJlZXRfdmlld19vbiI6IlN0cmVldCBWaWV3Iiwic3RyZWV0X3ZpZXdfb2ZmIjoiRmVybWVyIFN0cmVldCBWaWV3IiwidXNlcmlkIjoiMCIsInNob3dfYWR2X3NlYXJjaF9tYXBfY2xvc2UiOiIiLCJjbG9zZV9tYXAiOiJmZXJtZXIgbGEgY2FydGUiLCJvcGVuX21hcCI6Im91dnJpciBsYSBjYXJ0ZSIsImZ1bGxzY3JlZW4iOiJQbGVpbiBcdTAwZTljcmFuIiwiZGVmYXVsdCI6IlRyaWVyIiwiYWRkcHJvcCI6IlZldWlsbGV6IHBhdGllbnRlciBwZW5kYW50IHF1ZSBub3VzIHRyYWl0b25zIHZvdHJlIHNvdW1pc3Npb24hIiwiZGVsZXRlY29uZmlybSI6Ilx1MDBjYXRlcy12b3VzIHNcdTAwZmJyIGRlIHZvdWxvaXIgc3VwcHJpbWVyPyIsInRlcm1zX2NvbmQiOiJWb3VzIGRldmV6IGFjY2VwdGVyIGxlcyB0ZXJtZXMgZXQgY29uZGl0aW9ucyEiLCJwcm9jZXNpbmciOiJFbiB0cmFpdGVtZW50Li4uIiwic2xpZGVyX21pbiI6IjAiLCJzbGlkZXJfbWF4IjoiMTUwMDAwMCIsImN1cmVuY3kiOiJcdTIwYWMiLCJ3aGVyZV9jdXJlbmN5IjoiYWZ0ZXIiLCJzdWJtaXNzaW9uX2N1cmVuY3kiOiJVU0QiLCJ0byI6Ilx1MDBlMCIsImRpcmVjdF9wYXkiOiIiLCJzZW5kX2ludm9pY2UiOiJFbnZveWV6LW1vaSBsYSBmYWN0dXJlIiwiZGlyZWN0X3RpdGxlIjoiSW5zdHJ1Y3Rpb25zIGRlIHBhaWVtZW50IGRpcmVjdCIsImRpcmVjdF90aHgiOiJKZSB2b3VzIHJlbWVyY2llLiBTJ2lsIHZvdXMgcGxhXHUwMGVldCB2XHUwMGU5cmlmaWVyIHZvdHJlIGVtYWlsIHBvdXIgbGVzIGluc3RydWN0aW9ucyBkZSBwYWllbWVudC4iLCJkaXJlY3RfcHJpY2UiOiJcdTAwY2F0cmUgcGF5XHUwMGU5IiwicHJpY2Vfc2VwYXJhdG9yIjoiICIsInBsYW5fdGl0bGUiOiJUaXRyZSBkdSBwbGFuIiwicGxhbl9pbWFnZSI6IlBsYW5pZmllciBsJ2ltYWdlIiwicGxhbl9kZXNjIjoiRGVzY3JpcHRpb24gZHUgcGxhbiIsInBsYW5fc2l6ZSI6IlRhaWxsZSAiLCJwbGFuX3Jvb21zIjoiU2FsbGVzICIsInBsYW5fYmF0aHJvb21zIjoiU2FsbGVzIGRlIGJhaW5zIiwicGxhbl9wcmljZSI6IlBsYW4gUHJpY2UiLCJyZWFkc3lzIjoibm8iLCJkYXRlcGlja19sYW5nIjoiZnIiLCJkZWxldGluZyI6InN1cHByZXNzaW9uIC4uLiIsInNhdmVfc2VhcmNoIjoiXHUwMGU5Y29ub21pZS4uLiIsImNhcHRjaGFrZXkiOiIiLCJ1c2VjYXB0Y2hhIjoibm8iLCJzY3JvbGxfdHJpZ2dlciI6IjEwMCIsImFkdjZfdGF4b25vbXlfdGVybSI6IiIsImFkdjZfbWF4X3ByaWNlIjoiIiwiYWR2Nl9taW5fcHJpY2UiOiIiLCJpc19ydGwiOiIwIiwic3RpY2t5X2Zvb3RlciI6Im5vIiwiZ2VvX3JhZGl1c19tZWFzdXJlIjoibWlsZXMiLCJpbml0aWFsX3JhZGl1cyI6IjUiLCJtaW5fZ2VvX3JhZGl1cyI6IjEiLCJtYXhfZ2VvX3JhZGl1cyI6IjUwIiwic3Rpa3lfc2VhcmNoIjoibm8iLCJwb3N0aW5nIjoiYWZmZWN0YXRpb24iLCJyZXZpZXdfcG9zdGVkIjoiRXhhbWVuIGVudm95XHUwMGU5IiwicmV2aWV3X2VkaXRlZCI6IlZcdTAwZTlyaWZpZXIgbGVzIG1vZGlmaWNhdGlvbnMgZW5yZWdpc3RyXHUwMGU5ZXMiLCJzdGlja3lfYmFyIjoiIn07Ci8qIF1dPiAqLwo8L3NjcmlwdD4KPHNjcmlwdCB0eXBlPSd0ZXh0L2phdmFzY3JpcHQnIHNyYz0naHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL3dwLWNvbnRlbnQvdGhlbWVzL3dwcmVzaWRlbmNlL2pzL2NvbnRyb2wuanM/dmVyPTEuMCc+PC9zY3JpcHQ+CjxzY3JpcHQgdHlwZT0ndGV4dC9qYXZhc2NyaXB0Jz4KLyogPCFbQ0RBVEFbICovCnZhciBhamF4Y2FsbHNfdmFycyA9IHsiY29udGFjdF9uYW1lIjoiTm9tIGNvbXBsZXQiLCJjb250YWN0X2VtYWlsIjoiRS1tYWlsIiwiY29udGFjdF9waG9uZSI6IlRcdTAwZTlsXHUwMGU5cGhvbmUiLCJjb250YWN0X2NvbW1lbnQiOiJWb3RyZSBtZXNzYWdlIiwiYWR2X2NvbnRhY3RfbmFtZSI6Ik5vbSBjb21wbGV0IiwiYWR2X2VtYWlsIjoiRS1tYWlsIiwiYWR2X3Bob25lIjoiVFx1MDBlOWxcdTAwZTlwaG9uZSIsImFkdl9jb21tZW50IjoiVm90cmUgbWVzc2FnZSIsImFkdl9zZWFyY2giOiJFbnZveWVyIGxlIG1lc3NhZ2UiLCJkaXNhYmxlZCI6ImRcdTAwZTlzYWN0aXZcdTAwZTkiLCJwdWJsaXNoZWQiOiJQdWJsaVx1MDBlOSIsIm5vX3RpdGxlIjoiUydpbCB2b3VzIHBsYVx1MDBlZXQsIGVudHJleiBsZSB0aXRyZSBkZSBsYSBwcm9wcmlcdTAwZTl0XHUwMGU5IiwiYWRtaW5fdXJsIjoiaHR0cHM6XC9cL3d3dy5jYWJpbmV0LWttaS5jb21cL3dwLWFkbWluXC8iLCJsb2dpbl9yZWRpcmVjdCI6Imh0dHBzOlwvXC93d3cuY2FiaW5ldC1rbWkuY29tXC9teS1wcm9maWxlXC8iLCJsb2dpbl9sb2FkaW5nIjoiRW52b2kgZCdpbmZvcm1hdGlvbnMgdXRpbGlzYXRldXIsIHZldWlsbGV6IHBhdGllbnRlciAuLi4iLCJ1c2VyaWQiOiIwIiwicHJvcF9mZWF0dXJlZCI6IlByb3ByaVx1MDBlOXRcdTAwZTkgZXN0IGVuIHZlZGV0dGUiLCJub19wcm9wX2ZlYXR1cmVkIjoiVm91cyBhdmV6IHV0aWxpc1x1MDBlOSB0b3V0ZXMgbGVzIGFubm9uY2VzIFwiRW4gdmVkZXR0ZVwiIGRhbnMgdm90cmUgcGFja2FnZS4iLCJmYXZvcml0ZSI6IkZhdm9yaSIsImFkZF9mYXZvcml0ZSI6ImFqb3V0ZXIgYXV4IEZhdm9yaXMiLCJzYXZpbmciOiJcdTAwZTljb25vbWllLi4iLCJzZW5kaW5nIjoiRW52b2kgZHUgbWVzc2FnZS4uIiwiZXJyb3JfZmllbGQiOiJWZXVpbGxleiBlbnRyZXIgdW4gY2hhbXA6Iiwibm9pbWFnZXMiOiJWb3VzIGRldmV6IHRcdTAwZTlsXHUwMGU5Y2hhcmdlciBcdTAwZTAgbGEgZGVybmlcdTAwZThyZSBpbWFnZSIsIm5vdGl0bGUiOiJTJ2lsIHZvdXMgcGxhXHUwMGVldCwgZW50cmV6IGxlIHRpdHJlIGRlIGxhIHByb3ByaVx1MDBlOXRcdTAwZTkiLCJwYXlwYWwiOiJDb25uZXhpb24gXHUwMGUwIFBheXBhbCEgUydpbCB2b3VzIHBsYVx1MDBlZXQsIGF0dGVuZGV6Li4uIiwic3RyaXBlY2FuY2VsIjoibCdhYm9ubmVtZW50IHNlcmEgYW5udWxcdTAwZTkgXHUwMGUwIGxhIGZpbiBkZSBsYSBwXHUwMGU5cmlvZGUgZW4gY291cnMiLCJ1c2VycGFzcyI6InllcyIsImRpc2FibGVsaXN0aW5nIjoiRFx1MDBlOXNhY3RpdmVyIGxhIGxpc3RlIiwiZW5hYmxlbGlzdGluZyI6IkFjdGl2ZXIgbGEgbGlzdGUiLCJkaXNhYmxlYWdlbnQiOiJEXHUwMGU5c2FjdGl2ZXIgbCdhZ2VudCIsImVuYWJsZWFnZW50IjoiQWN0aXZlciBsJ2FnZW50IiwiYWdlbnRfbGlzdCI6Imh0dHBzOlwvXC93d3cuY2FiaW5ldC1rbWkuY29tXC8iLCJ1c2VfZ2RwciI6Im5vIiwiZ2Rwcl90ZXJtcyI6IllvdSBtdXN0IGFncmVlIHdpdGggR0RQUiB0ZXJtcyIsImRlbGV0ZV9hY2NvdW50IjoiQ29uZmlybWV6IHZvdHJlIGRlbWFuZGUgQUNDT1VOVCBERUxFVElPTiEgQ2xpcXVleiBzdXIgbGUgYm91dG9uIGNpLWRlc3NvdXMgcG91ciBzdXBwcmltZXIgdm90cmUgY29tcHRlIGV0IHZvcyBkb25uXHUwMGU5ZXMuIENlbGEgc2lnbmlmaWUgcXVlIHZvdXMgbmUgcG91cnJleiBwbHVzIHZvdXMgY29ubmVjdGVyIFx1MDBlMCB2b3RyZSBjb21wdGUgZXQgYWNjXHUwMGU5ZGVyIGF1eCBpbmZvcm1hdGlvbnMgZGUgdm90cmUgY29tcHRlOiBNb24gcHJvZmlsLCBNZXMgcHJvcHJpXHUwMGU5dFx1MDBlOXMsIEJvXHUwMGVldGUgZGUgclx1MDBlOWNlcHRpb24sIFJlY2hlcmNoZXMgc2F1dmVnYXJkXHUwMGU5ZXMgZXQgTWVzc2FnZXMuIENldHRlIG9wXHUwMGU5cmF0aW9uIG5lIHBldXQgcGFzIFx1MDBlYXRyZSBpbnZlcnNcdTAwZTllISJ9OwovKiBdXT4gKi8KPC9zY3JpcHQ+CjxzY3JpcHQgdHlwZT0ndGV4dC9qYXZhc2NyaXB0JyBzcmM9J2h0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS93cC1jb250ZW50L3RoZW1lcy93cHJlc2lkZW5jZS9qcy9hamF4Y2FsbHMuanM/dmVyPTEuMCc+PC9zY3JpcHQ+CjxzY3JpcHQgdHlwZT0ndGV4dC9qYXZhc2NyaXB0JyBzcmM9J2h0dHBzOi8vd3d3LmNhYmluZXQta21pLmNvbS93cC1pbmNsdWRlcy9qcy9jb21tZW50LXJlcGx5Lm1pbi5qcz92ZXI9NS4yLjUnPjwvc2NyaXB0Pgo8c2NyaXB0IHR5cGU9J3RleHQvamF2YXNjcmlwdCcgc3JjPSdodHRwczovL3d3dy5jYWJpbmV0LWttaS5jb20vd3AtaW5jbHVkZXMvanMvd3AtZW1iZWQubWluLmpzP3Zlcj01LjIuNSc+PC9zY3JpcHQ+CjxzY3JpcHQgdHlwZT0ndGV4dC9qYXZhc2NyaXB0Jz4KLyogPCFbQ0RBVEFbICovCnZhciBmcm1fanMgPSB7ImFqYXhfdXJsIjoiaHR0cHM6XC9cL3d3dy5jYWJpbmV0LWttaS5jb21cL3dwLWFkbWluXC9hZG1pbi1hamF4LnBocCIsImltYWdlc191cmwiOiJodHRwczpcL1wvd3d3LmNhYmluZXQta21pLmNvbVwvd3AtY29udGVudFwvcGx1Z2luc1wvZm9ybWlkYWJsZVwvaW1hZ2VzIiwibG9hZGluZyI6IkNoYXJnZW1lbnRcdTIwMjYiLCJyZW1vdmUiOiJTdXBwcmltZXIiLCJvZmZzZXQiOiI0Iiwibm9uY2UiOiIwNDk0MTQxZjQxIiwiaWQiOiJJRCIsIm5vX3Jlc3VsdHMiOiJBdWN1biByXHUwMGU5c3VsdGF0IGNvcnJlc3BvbmRhbnQiLCJmaWxlX3NwYW0iOiJDZSBmaWNoaWVyIHJlc3NlbWJsZSBcdTAwZTAgZHUgc3BhbS4iLCJjYWxjX2Vycm9yIjoiVGhlcmUgaXMgYW4gZXJyb3IgaW4gdGhlIGNhbGN1bGF0aW9uIGluIHRoZSBmaWVsZCB3aXRoIGtleSIsImVtcHR5X2ZpZWxkcyI6IlZldWlsbGV6IHJlbXBsaXIgbGVzIGNoYW1wcyBvYmxpZ2F0b2lyZXMgcHJcdTAwZTljXHUwMGU5ZGVudHMgYXZhbnQgZGUgbWV0dHJlIHVuIGZpY2hpZXIgZW4gbGlnbmUuIn07CnZhciBmcm1fanMgPSB7ImFqYXhfdXJsIjoiaHR0cHM6XC9cL3d3dy5jYWJpbmV0LWttaS5jb21cL3dwLWFkbWluXC9hZG1pbi1hamF4LnBocCIsImltYWdlc191cmwiOiJodHRwczpcL1wvd3d3LmNhYmluZXQta21pLmNvbVwvd3AtY29udGVudFwvcGx1Z2luc1wvZm9ybWlkYWJsZVwvaW1hZ2VzIiwibG9hZGluZyI6IkNoYXJnZW1lbnRcdTIwMjYiLCJyZW1vdmUiOiJTdXBwcmltZXIiLCJvZmZzZXQiOiI0Iiwibm9uY2UiOiIwNDk0MTQxZjQxIiwiaWQiOiJJRCIsIm5vX3Jlc3VsdHMiOiJBdWN1biByXHUwMGU5c3VsdGF0IGNvcnJlc3BvbmRhbnQiLCJmaWxlX3NwYW0iOiJDZSBmaWNoaWVyIHJlc3NlbWJsZSBcdTAwZTAgZHUgc3BhbS4iLCJjYWxjX2Vycm9yIjoiVGhlcmUgaXMgYW4gZXJyb3IgaW4gdGhlIGNhbGN1bGF0aW9uIGluIHRoZSBmaWVsZCB3aXRoIGtleSIsImVtcHR5X2ZpZWxkcyI6IlZldWlsbGV6IHJlbXBsaXIgbGVzIGNoYW1wcyBvYmxpZ2F0b2lyZXMgcHJcdTAwZTljXHUwMGU5ZGVudHMgYXZhbnQgZGUgbWV0dHJlIHVuIGZpY2hpZXIgZW4gbGlnbmUuIn07CnZhciBmcm1fanMgPSB7ImFqYXhfdXJsIjoiaHR0cHM6XC9cL3d3dy5jYWJpbmV0LWttaS5jb21cL3dwLWFkbWluXC9hZG1pbi1hamF4LnBocCIsImltYWdlc191cmwiOiJodHRwczpcL1wvd3d3LmNhYmluZXQta21pLmNvbVwvd3AtY29udGVudFwvcGx1Z2luc1wvZm9ybWlkYWJsZVwvaW1hZ2VzIiwibG9hZGluZyI6IkNoYXJnZW1lbnRcdTIwMjYiLCJyZW1vdmUiOiJTdXBwcmltZXIiLCJvZmZzZXQiOiI0Iiwibm9uY2UiOiIwNDk0MTQxZjQxIiwiaWQiOiJJRCIsIm5vX3Jlc3VsdHMiOiJBdWN1biByXHUwMGU5c3VsdGF0IGNvcnJlc3BvbmRhbnQiLCJmaWxlX3NwYW0iOiJDZSBmaWNoaWVyIHJlc3NlbWJsZSBcdTAwZTAgZHUgc3BhbS4iLCJjYWxjX2Vycm9yIjoiVGhlcmUgaXMgYW4gZXJyb3IgaW4gdGhlIGNhbGN1bGF0aW9uIGluIHRoZSBmaWVsZCB3aXRoIGtleSIsImVtcHR5X2ZpZWxkcyI6IlZldWlsbGV6IHJlbXBsaXIgbGVzIGNoYW1wcyBvYmxpZ2F0b2lyZXMgcHJcdTAwZTljXHUwMGU5ZGVudHMgYXZhbnQgZGUgbWV0dHJlIHVuIGZpY2hpZXIgZW4gbGlnbmUuIn07CnZhciBmcm1fanMgPSB7ImFqYXhfdXJsIjoiaHR0cHM6XC9cL3d3dy5jYWJpbmV0LWttaS5jb21cL3dwLWFkbWluXC9hZG1pbi1hamF4LnBocCIsImltYWdlc191cmwiOiJodHRwczpcL1wvd3d3LmNhYmluZXQta21pLmNvbVwvd3AtY29udGVudFwvcGx1Z2luc1wvZm9ybWlkYWJsZVwvaW1hZ2VzIiwibG9hZGluZyI6IkNoYXJnZW1lbnRcdTIwMjYiLCJyZW1vdmUiOiJTdXBwcmltZXIiLCJvZmZzZXQiOiI0Iiwibm9uY2UiOiIwNDk0MTQxZjQxIiwiaWQiOiJJRCIsIm5vX3Jlc3VsdHMiOiJBdWN1biByXHUwMGU5c3VsdGF0IGNvcnJlc3BvbmRhbnQiLCJmaWxlX3NwYW0iOiJDZSBmaWNoaWVyIHJlc3NlbWJsZSBcdTAwZTAgZHUgc3BhbS4iLCJjYWxjX2Vycm9yIjoiVGhlcmUgaXMgYW4gZXJyb3IgaW4gdGhlIGNhbGN1bGF0aW9uIGluIHRoZSBmaWVsZCB3aXRoIGtleSIsImVtcHR5X2ZpZWxkcyI6IlZldWlsbGV6IHJlbXBsaXIgbGVzIGNoYW1wcyBvYmxpZ2F0b2lyZXMgcHJcdTAwZTljXHUwMGU5ZGVudHMgYXZhbnQgZGUgbWV0dHJlIHVuIGZpY2hpZXIgZW4gbGlnbmUuIn07Ci8qIF1dPiAqLwo8L3NjcmlwdD4KPHNjcmlwdCB0eXBlPSd0ZXh0L2phdmFzY3JpcHQnIHNyYz0naHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL3dwLWNvbnRlbnQvcGx1Z2lucy9mb3JtaWRhYmxlL2pzL2Zvcm1pZGFibGUubWluLmpzP3Zlcj00LjAyJz48L3NjcmlwdD4KPHNjcmlwdCB0eXBlPSd0ZXh0L2phdmFzY3JpcHQnIHNyYz0naHR0cHM6Ly93d3cuY2FiaW5ldC1rbWkuY29tL3dwLWNvbnRlbnQvcGx1Z2lucy9mb3JtaWRhYmxlLXByby9qcy9mb3JtaWRhYmxlcHJvLm1pbi5qcz92ZXI9NC4wMic+PC9zY3JpcHQ+Cgo8c2NyaXB0PgovKjwhW0NEQVRBWyovCi8qXV0+Ki8KPC9zY3JpcHQ+CiAgCjwvYm9keT4KPC9odG1sPg==
    http_version: null
  recorded_at: Wed, 01 Apr 2020 14:35:13 GMT
- request:
    method: get
    uri: https://www.cabinet-kmi.com/estate_property/2-pieces-cave-maraichers/
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Wed, 01 Apr 2020 14:35:14 GMT
      Content-Type:
      - text/html; charset=UTF-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Server:
      - Apache
      X-Powered-By:
      - PHP/7.2
      X-Pingback:
      - https://www.cabinet-kmi.com/xmlrpc.php
      Link:
      - "<https://www.cabinet-kmi.com/?p=22645>; rel=shortlink"
      - <https://www.cabinet-kmi.com/wp-json/>; rel="https://api.w.org/"
      Vary:
      - Accept-Encoding
      X-Iplb-Instance:
      - '32873'
      Set-Cookie:
      - SERVERID87219=272088|XoSmp|XoSmp; path=/
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: null
  recorded_at: Wed, 01 Apr 2020 14:35:14 GMT
- request:
    method: get
    uri: https://www.cabinet-kmi.com/estate_property/2-3-pieces-refait-a-neuf-bastille/
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Wed, 01 Apr 2020 14:35:22 GMT
      Content-Type:
      - text/html; charset=UTF-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Server:
      - Apache
      X-Powered-By:
      - PHP/7.2
      X-Pingback:
      - https://www.cabinet-kmi.com/xmlrpc.php
      Link:
      - "<https://www.cabinet-kmi.com/?p=22634>; rel=shortlink"
      - <https://www.cabinet-kmi.com/wp-json/>; rel="https://api.w.org/"
      Vary:
      - Accept-Encoding
      X-Iplb-Instance:
      - '32873'
      Set-Cookie:
      - SERVERID87219=2721124|XoSmr|XoSmr; path=/
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: null
  recorded_at: Wed, 01 Apr 2020 14:35:22 GMT
recorded_with: VCR 5.1.0
