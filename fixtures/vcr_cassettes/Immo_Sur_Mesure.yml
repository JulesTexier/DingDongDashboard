---
http_interactions:
- request:
    method: post
    uri: https://www.immobilier-surmesure.com/wp-admin/admin-ajax.php
    body:
      encoding: UTF-8
      string: Prix=&action=myfilter&budget=0%2C3000000&cat=14&lieux%5B%5D=paris-20&surface-mini=
    headers:
      User-Agent:
      - Typhoeus - https://github.com/typhoeus/typhoeus
      Expect:
      - ''
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 02 Apr 2020 09:18:33 GMT
      Server:
      - Apache
      X-Robots-Tag:
      - noindex
      X-Content-Type-Options:
      - nosniff
      Expires:
      - Wed, 11 Jan 1984 05:00:00 GMT
      Cache-Control:
      - no-cache, must-revalidate, max-age=0
      X-Frame-Options:
      - SAMEORIGIN
      Referrer-Policy:
      - strict-origin-when-cross-origin
      Vary:
      - Accept-Encoding
      Transfer-Encoding:
      - chunked
      Content-Type:
      - text/html; charset=UTF-8
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        CQk8ZGl2IGNsYXNzPSJiaWVucyI+CQk8ZGl2IGlkPSIxNzYyIiBjbGFzcz0ibW9uLWJpZW4gbGVmdC1iaWVuICAiPgoJCQk8YSBocmVmPSJodHRwczovL3d3dy5pbW1vYmlsaWVyLXN1cm1lc3VyZS5jb20vbm9zLWJpZW5zL2FwcGFydGVtZW50LTQtcGllY2VzLXBhcmlzLTIwZW1lLWFycm9uZGlzc2VtZW50LyI+CgkJCQk8aW1nIHNyYz0iaHR0cHM6Ly93d3cuaW1tb2JpbGllci1zdXJtZXN1cmUuY29tL3dwLWNvbnRlbnQvdXBsb2Fkcy8yMDE5LzA3L0NhcHR1cmUtZOKAmWXMgWNyYW4tMjAxOS0wNy0wMy1hzIAtMTEuMjIuMDktMTg0NHg3MDAucG5nIi8+CgkJCTwvYT4KCQkJPGFzaWRlIGNsYXNzPSIiPgoJCQkJPGEgaHJlZj0iaHR0cHM6Ly93d3cuaW1tb2JpbGllci1zdXJtZXN1cmUuY29tL25vcy1iaWVucy9hcHBhcnRlbWVudC00LXBpZWNlcy1wYXJpcy0yMGVtZS1hcnJvbmRpc3NlbWVudC8iPgoJCQkJCTxoMj5QYXJpcyAyMGU8YnI+PHNwYW4+U2FpbnQtQmxhaXNlPC9zcGFuPjwvaDI+CgkJCQkJPHA+UHJpeCA6IDczNSAwMDAg4oKsPC9wPgoJCQkJCTxwPlN1cmZhY2UgOiA4NCBtPHN1cD4yPC9zdXA+PC9wPgoJCQkJCTxwPlBpw6hjZSA6IDwvcD4KCQkJCQk8cCBjbGFzcz0iY29uc3VsdGVyIj48c3Bhbj5FbiBzYXZvaXIgcGx1czwvc3Bhbj48L3A+CgkJCQk8L2E+CgkJCTwvYXNpZGU+CgkJCQkJCQk8ZGl2IGNsYXNzPSJtYXJrZXIiCgkJCQkJIGRhdGEtY29udD0iPHA+PHN0cm9uZz5BcHBhcnRlbWVudCA0IHBpw6hjZXMgUGFyaXMgMjBlbWUgYXJyb25kaXNzZW1lbnQ8L3N0cm9uZz48YnI+UnVlIGRlcyBSZWdsaXNlcywgUGFyaXMsIEZyYW5jZTxicj48YSBocmVmPSdodHRwczovL3d3dy5pbW1vYmlsaWVyLXN1cm1lc3VyZS5jb20vbm9zLWJpZW5zL2FwcGFydGVtZW50LTQtcGllY2VzLXBhcmlzLTIwZW1lLWFycm9uZGlzc2VtZW50Lyc+Vm9pciBsYSBmaWNoZTwvYT48L3A+IgoJCQkJCSBkYXRhLXRpdGxlPSJBcHBhcnRlbWVudCA0IHBpw6hjZXMgUGFyaXMgMjBlbWUgYXJyb25kaXNzZW1lbnQiCgkJCQkJIGRhdGEtbWtyPSJodHRwczovL3d3dy5pbW1vYmlsaWVyLXN1cm1lc3VyZS5jb20vd3AtY29udGVudC90aGVtZXMvaW1tby0yMDE5L2ltZy9waW4ucG5nIgoJCQkJCSBkYXRhLWxhdD0iNDguODU1MDAzMyIgZGF0YS1sbmc9IjIuNDA5ODQ5NjAwMDAwMDI5NiIKCQkJCQkgZGF0YS1hZGQ9IlJ1ZSBkZXMgUmVnbGlzZXMsIFBhcmlzLCBGcmFuY2UiPgoJCQkJPC9kaXY+CgkJCQkJCTwvZGl2PgoJCQkJCQk8ZGl2IGlkPSIxODA4IiBjbGFzcz0ibW9uLWJpZW4gICI+CgkJCTxhIGhyZWY9Imh0dHBzOi8vd3d3LmltbW9iaWxpZXItc3VybWVzdXJlLmNvbS9ub3MtYmllbnMvYXBwYXJ0ZW1lbnQtcGFyaXMtMjBlLyI+CgkJCQk8aW1nIHNyYz0iaHR0cHM6Ly93d3cuaW1tb2JpbGllci1zdXJtZXN1cmUuY29tL3dwLWNvbnRlbnQvdXBsb2Fkcy8yMDE5LzA3L0NhcHR1cmUtZOKAmWXMgWNyYW4tMjAxOS0wNy0zMS1hzIAtMTAuMjUuMzItMTg0NHg3MDAucG5nIi8+CgkJCTwvYT4KCQkJPGFzaWRlIGNsYXNzPSIiPgoJCQkJPGEgaHJlZj0iaHR0cHM6Ly93d3cuaW1tb2JpbGllci1zdXJtZXN1cmUuY29tL25vcy1iaWVucy9hcHBhcnRlbWVudC1wYXJpcy0yMGUvIj4KCQkJCQk8aDI+UGFyaXMgMjA8YnI+PHNwYW4+UGFyaXMgMjBlIEdhbWJldHRhPC9zcGFuPjwvaDI+CgkJCQkJPHA+UHJpeCA6IDMzMCAwMDAg4oKsPC9wPgoJCQkJCTxwPlN1cmZhY2UgOiAyOCBtPHN1cD4yPC9zdXA+PC9wPgoJCQkJCTxwPlBpw6hjZSA6IDwvcD4KCQkJCQk8cCBjbGFzcz0iY29uc3VsdGVyIj48c3Bhbj5FbiBzYXZvaXIgcGx1czwvc3Bhbj48L3A+CgkJCQk8L2E+CgkJCTwvYXNpZGU+CgkJCQkJCQk8ZGl2IGNsYXNzPSJtYXJrZXIiCgkJCQkJIGRhdGEtY29udD0iPHA+PHN0cm9uZz5BcHBhcnRlbWVudCBQYXJpcyAyMGU8L3N0cm9uZz48YnI+UnVlIGR1IENhbWJvZGdlLCBQYXJpcywgRnJhbmNlPGJyPjxhIGhyZWY9J2h0dHBzOi8vd3d3LmltbW9iaWxpZXItc3VybWVzdXJlLmNvbS9ub3MtYmllbnMvYXBwYXJ0ZW1lbnQtcGFyaXMtMjBlLyc+Vm9pciBsYSBmaWNoZTwvYT48L3A+IgoJCQkJCSBkYXRhLXRpdGxlPSJBcHBhcnRlbWVudCBQYXJpcyAyMGUiCgkJCQkJIGRhdGEtbWtyPSJodHRwczovL3d3dy5pbW1vYmlsaWVyLXN1cm1lc3VyZS5jb20vd3AtY29udGVudC90aGVtZXMvaW1tby0yMDE5L2ltZy9waW4ucG5nIgoJCQkJCSBkYXRhLWxhdD0iNDguODY2MTUxMSIgZGF0YS1sbmc9IjIuMzk4MTYyMjAwMDAwMDAxNiIKCQkJCQkgZGF0YS1hZGQ9IlJ1ZSBkdSBDYW1ib2RnZSwgUGFyaXMsIEZyYW5jZSI+CgkJCQk8L2Rpdj4KCQkJCQkJPC9kaXY+CgkJCQkJCTxkaXYgaWQ9IjI1MDYiIGNsYXNzPSJtb24tYmllbiBsZWZ0LWJpZW4gICI+CgkJCTxhIGhyZWY9Imh0dHBzOi8vd3d3LmltbW9iaWxpZXItc3VybWVzdXJlLmNvbS9ub3MtYmllbnMvYXBwYXJ0ZW1lbnQtMS1waWVjZS1zdHVkaW8tcGFyaXMtMjBlLyI+CgkJCQk8aW1nIHNyYz0iaHR0cHM6Ly93d3cuaW1tb2JpbGllci1zdXJtZXN1cmUuY29tL3dwLWNvbnRlbnQvdXBsb2Fkcy8yMDIwLzAxL0NhcHR1cmUtZOKAmWXMgWNyYW4tMjAyMC0wMS0zMC1hzIAtMTYuMzcuMzctMTg0NHg3MDAucG5nIi8+CgkJCTwvYT4KCQkJPGFzaWRlIGNsYXNzPSIiPgoJCQkJPGEgaHJlZj0iaHR0cHM6Ly93d3cuaW1tb2JpbGllci1zdXJtZXN1cmUuY29tL25vcy1iaWVucy9hcHBhcnRlbWVudC0xLXBpZWNlLXN0dWRpby1wYXJpcy0yMGUvIj4KCQkJCQk8aDI+UEFSSVMgMjBlPGJyPjxzcGFuPk1FVFJPIEpPVVJEQUlOPC9zcGFuPjwvaDI+CgkJCQkJPHA+UHJpeCA6IDI3MyAwMDAg4oKsPC9wPgoJCQkJCTxwPlN1cmZhY2UgOiAyNyBtPHN1cD4yPC9zdXA+PC9wPgoJCQkJCTxwPlBpw6hjZSA6IDE8L3A+CgkJCQkJPHAgY2xhc3M9ImNvbnN1bHRlciI+PHNwYW4+RW4gc2F2b2lyIHBsdXM8L3NwYW4+PC9wPgoJCQkJPC9hPgoJCQk8L2FzaWRlPgoJCQkJCQkJPGRpdiBjbGFzcz0ibWFya2VyIgoJCQkJCSBkYXRhLWNvbnQ9IjxwPjxzdHJvbmc+QXBwYXJ0ZW1lbnQgMSBwacOoY2UgKFN0dWRpbykgJiM4MjExOyBQYXJpcyAyMGU8L3N0cm9uZz48YnI+MjBlIEFycm9uZGlzc2VtZW50IGRlIFBhcmlzLCBQYXJpcywgRnJhbmNlPGJyPjxhIGhyZWY9J2h0dHBzOi8vd3d3LmltbW9iaWxpZXItc3VybWVzdXJlLmNvbS9ub3MtYmllbnMvYXBwYXJ0ZW1lbnQtMS1waWVjZS1zdHVkaW8tcGFyaXMtMjBlLyc+Vm9pciBsYSBmaWNoZTwvYT48L3A+IgoJCQkJCSBkYXRhLXRpdGxlPSJBcHBhcnRlbWVudCAxIHBpw6hjZSAoU3R1ZGlvKSAmIzgyMTE7IFBhcmlzIDIwZSIKCQkJCQkgZGF0YS1ta3I9Imh0dHBzOi8vd3d3LmltbW9iaWxpZXItc3VybWVzdXJlLmNvbS93cC1jb250ZW50L3RoZW1lcy9pbW1vLTIwMTkvaW1nL3Bpbi5wbmciCgkJCQkJIGRhdGEtbGF0PSI0OC44NjQ5MTYwOTk5OTk5OSIgZGF0YS1sbmc9IjIuMzk4NDcwOCIKCQkJCQkgZGF0YS1hZGQ9IjIwZSBBcnJvbmRpc3NlbWVudCBkZSBQYXJpcywgUGFyaXMsIEZyYW5jZSI+CgkJCQk8L2Rpdj4KCQkJCQkJPC9kaXY+CgkJCQkJCTxkaXYgaWQ9IjI4NjQiIGNsYXNzPSJtb24tYmllbiAgIj4KCQkJPGEgaHJlZj0iaHR0cHM6Ly93d3cuaW1tb2JpbGllci1zdXJtZXN1cmUuY29tL25vcy1iaWVucy9hcHBhcnRlbWVudC0yMGVtZS10b3AvIj4KCQkJCTxpbWcgc3JjPSJodHRwczovL3d3dy5pbW1vYmlsaWVyLXN1cm1lc3VyZS5jb20vd3AtY29udGVudC91cGxvYWRzLzIwMjAvMDMvTUUzX01FMy0wNzFCX3Bob3RvNF81REM2MEE2Ml85NjI3MjVfdW5kZWZpbmVkX0RTQ181MzQ5LTE4NDR4NzAwLmpwZyIvPgoJCQk8L2E+CgkJCTxhc2lkZSBjbGFzcz0iIj4KCQkJCTxhIGhyZWY9Imh0dHBzOi8vd3d3LmltbW9iaWxpZXItc3VybWVzdXJlLmNvbS9ub3MtYmllbnMvYXBwYXJ0ZW1lbnQtMjBlbWUtdG9wLyI+CgkJCQkJPGgyPiAgIFBhcmlzIDIwPGJyPjxzcGFuPkJlc3QgZmxhdCBpbiB0aGUgY2l0eSA8L3NwYW4+PC9oMj4KCQkJCQk8cD5Qcml4IDogNzUwIDAwMCDigqw8L3A+CgkJCQkJPHA+U3VyZmFjZSA6IDkwIG08c3VwPjI8L3N1cD48L3A+CgkJCQkJPHA+UGnDqGNlcyA6IDQ8L3A+CgkJCQkJPHAgY2xhc3M9ImNvbnN1bHRlciI+PHNwYW4+RW4gc2F2b2lyIHBsdXM8L3NwYW4+PC9wPgoJCQkJPC9hPgoJCQk8L2FzaWRlPgoJCQkJCTwvZGl2PgoJCTwvZGl2PgkJCTxoMj5Ob3MgcGFydGVuYWlyZXM8L2gyPgoJCQk8cCBjbGFzcz0ic3VidGl0bGUgc3VidGl0bGUtYmxhY2siPgoJCQkJTG9yZW0gaXBzdW0gZG9sb3Igc2l0IGFtZXQsIGNvbnNlY3RldHVyIGFkaXBpc2NpbmcgZWxpdC4gSW50ZWdlciB2aXRhZSBtYXhpbXVzIG9kaW8uIE51bmMgYSBtZXR1cyBlZ2VzdGFzLCB2ZWhpY3VsYSBudWxsYSB1dCwgdWxsYW1jb3JwZXIgYW50ZS4gRG9uZWMgcHJldGl1bSBzaXQgYW1ldCB0ZWxsdXMgdGluY2lkdW50IGZhdWNpYnVzLgoJCQk8L3A+CgkJCTxkaXYgY2xhc3M9ImNhcm91c2VsLXBhcnRuZXJzIj4KCQkJCTxkaXYgY2xhc3M9ImNvbC1lcXVpcGllciI+PHNwYW4gY2xhc3M9ImVtcHR5LXRvZiI+PC9zcGFuPjxzcGFuIGNsYXNzPSJuYW1lLWVxdWlwaWVyIj5BdXLDqWxpZTwvc3Bhbj48c3BhbiBjbGFzcz0icG9zdGUtZXF1aXBpZXIiPkFyY2hpdGVjdGU8L3NwYW4+PC9kaXY+PGRpdiBjbGFzcz0iY29sLWVxdWlwaWVyIj48c3BhbiBjbGFzcz0iZW1wdHktdG9mIj48L3NwYW4+PHNwYW4gY2xhc3M9Im5hbWUtZXF1aXBpZXIiPktyYXNzaTwvc3Bhbj48c3BhbiBjbGFzcz0icG9zdGUtZXF1aXBpZXIiPkVudHJlcHJlbmV1ciB0cmF2YXV4PC9zcGFuPjwvZGl2PjxkaXYgY2xhc3M9ImNvbC1lcXVpcGllciI+PHNwYW4gY2xhc3M9ImVtcHR5LXRvZiI+PC9zcGFuPjxzcGFuIGNsYXNzPSJuYW1lLWVxdWlwaWVyIj5FdmFuPC9zcGFuPjxzcGFuIGNsYXNzPSJwb3N0ZS1lcXVpcGllciI+RW50cmVwcmVuZXVyIHRyYXZhdXg8L3NwYW4+PC9kaXY+PGRpdiBjbGFzcz0iY29sLWVxdWlwaWVyIj48c3BhbiBjbGFzcz0iZW1wdHktdG9mIj48L3NwYW4+PHNwYW4gY2xhc3M9Im5hbWUtZXF1aXBpZXIiPlN0ZWV2ZTwvc3Bhbj48c3BhbiBjbGFzcz0icG9zdGUtZXF1aXBpZXIiPkVudHJlcHJlbmV1ciB0cmF2YXV4PC9zcGFuPjwvZGl2PjxkaXYgY2xhc3M9ImNvbC1lcXVpcGllciI+PHNwYW4gY2xhc3M9ImVtcHR5LXRvZiI+PC9zcGFuPjxzcGFuIGNsYXNzPSJuYW1lLWVxdWlwaWVyIj5WbGFkaW1pcjwvc3Bhbj48c3BhbiBjbGFzcz0icG9zdGUtZXF1aXBpZXIiPkNvdXJ0aWVyIGltbW9iaWxpZXI8L3NwYW4+PC9kaXY+PGRpdiBjbGFzcz0iY29sLWVxdWlwaWVyIj48c3BhbiBjbGFzcz0iZW1wdHktdG9mIj48L3NwYW4+PHNwYW4gY2xhc3M9Im5hbWUtZXF1aXBpZXIiPkVyaWM8L3NwYW4+PHNwYW4gY2xhc3M9InBvc3RlLWVxdWlwaWVyIj5Db3VydGllciBpbW1vYmlsaWVyPC9zcGFuPjwvZGl2PgkJCTwvZGl2PgoJCQk=
    http_version: null
  recorded_at: Thu, 02 Apr 2020 09:18:33 GMT
- request:
    method: get
    uri: https://www.immobilier-surmesure.com/nos-biens/appartement-4-pieces-paris-20eme-arrondissement/
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 02 Apr 2020 09:18:33 GMT
      Server:
      - Apache
      Vary:
      - User-Agent,Accept-Encoding
      Last-Modified:
      - Wed, 01 Apr 2020 10:46:53 GMT
      Accept-Ranges:
      - bytes
      Cache-Control:
      - max-age=0, no-cache, no-store, must-revalidate
      Pragma:
      - no-cache
      Expires:
      - Mon, 29 Oct 1923 20:30:00 GMT
      Content-Length:
      - '11420'
      Content-Type:
      - text/html; charset=UTF-8
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: null
  recorded_at: Thu, 02 Apr 2020 09:18:33 GMT
- request:
    method: get
    uri: https://www.immobilier-surmesure.com/nos-biens/appartement-paris-20e/
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 301
      message: Moved Permanently
    headers:
      Date:
      - Thu, 02 Apr 2020 09:18:34 GMT
      Server:
      - Apache
      Expires:
      - Thu, 02 Apr 2020 10:18:34 GMT
      Cache-Control:
      - max-age=3600
      X-Redirect-By:
      - redirection
      Location:
      - https://www.immobilier-surmesure.com/agences/agence-immobiliere-de-paris-20e/
      Transfer-Encoding:
      - chunked
      Content-Type:
      - text/html; charset=UTF-8
    body:
      encoding: UTF-8
      string: "<!-- html is corrupted -->"
    http_version: null
  recorded_at: Thu, 02 Apr 2020 09:18:34 GMT
- request:
    method: get
    uri: https://www.immobilier-surmesure.com/agences/agence-immobiliere-de-paris-20e/
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 02 Apr 2020 09:18:34 GMT
      Server:
      - Apache
      Vary:
      - User-Agent,Accept-Encoding
      Last-Modified:
      - Wed, 01 Apr 2020 10:43:35 GMT
      Accept-Ranges:
      - bytes
      Cache-Control:
      - max-age=0, no-cache, no-store, must-revalidate
      Pragma:
      - no-cache
      Expires:
      - Mon, 29 Oct 1923 20:30:00 GMT
      Content-Length:
      - '13443'
      Content-Type:
      - text/html; charset=UTF-8
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: null
  recorded_at: Thu, 02 Apr 2020 09:18:34 GMT
- request:
    method: get
    uri: https://www.immobilier-surmesure.com/nos-biens/appartement-1-piece-studio-paris-20e/
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 02 Apr 2020 09:18:34 GMT
      Server:
      - Apache
      Vary:
      - User-Agent,Accept-Encoding
      Last-Modified:
      - Wed, 01 Apr 2020 09:51:10 GMT
      Accept-Ranges:
      - bytes
      Cache-Control:
      - max-age=0, no-cache, no-store, must-revalidate
      Pragma:
      - no-cache
      Expires:
      - Mon, 29 Oct 1923 20:30:00 GMT
      Content-Length:
      - '11432'
      Content-Type:
      - text/html; charset=UTF-8
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: null
  recorded_at: Thu, 02 Apr 2020 09:18:34 GMT
- request:
    method: get
    uri: https://www.immobilier-surmesure.com/nos-biens/appartement-20eme-top/
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 02 Apr 2020 09:18:34 GMT
      Server:
      - Apache
      Vary:
      - User-Agent,Accept-Encoding
      Last-Modified:
      - Wed, 01 Apr 2020 09:40:54 GMT
      Accept-Ranges:
      - bytes
      Cache-Control:
      - max-age=0, no-cache, no-store, must-revalidate
      Pragma:
      - no-cache
      Expires:
      - Mon, 29 Oct 1923 20:30:00 GMT
      Content-Length:
      - '11130'
      Content-Type:
      - text/html; charset=UTF-8
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: null
  recorded_at: Thu, 02 Apr 2020 09:18:34 GMT
recorded_with: VCR 5.1.0
