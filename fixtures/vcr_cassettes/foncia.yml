---
http_interactions:
- request:
    method: get
    uri: https://fr.foncia.com/achat/chatou-78400--saint-germain-en-laye-78100--fourqueux-78112--le-vesinet-78110--chambourcy-78240--maisons-laffitte-78600--mareil-marly-78750--marly-le-roi-78160--l-etang-la-ville-78620--croissy-sur-seine-78290--montesson-78360--houilles-78800--sartrouville-78500--carrieres-sur-seine-78420--rueil-malmaison-92500/appartement--maison/(params)/on/(tri)/date/(ordre)/desc
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 28 May 2020 15:37:59 GMT
      Set-Cookie:
      - current_property_search_url=%2Fachat%2Fchatou-78400--saint-germain-en-laye-78100--fourqueux-78112--le-vesinet-78110--chambourcy-78240--maisons-laffitte-78600--mareil-marly-78750--marly-le-roi-78160--l-etang-la-ville-78620--croissy-sur-seine-78290--montesson-78360--houilles-78800--sartrouville-78500--carrieres-sur-seine-78420--rueil-malmaison-92500%2Fappartement--maison%2F%28params%29%2Fon%2F%28tri%29%2Fdate%2F%28ordre%29%2Fdesc;
        path=/
      - eZSESSID=lili1c5gu7qgrb1g1vkrgtel26; path=/; secure; HttpOnly
      Cache-Control:
      - public, s-maxage=86400
      Content-Type:
      - text/html; charset=UTF-8
      Vary:
      - Accept-Encoding,Origin
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: null
  recorded_at: Thu, 28 May 2020 15:37:59 GMT
- request:
    method: get
    uri: https://fr.foncia.com/achat/sartrouville-78500/appartement/1290179.htm
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 28 May 2020 11:40:47 GMT
      Cache-Control:
      - public, s-maxage=31536000
      Content-Type:
      - text/html; charset=UTF-8
      Vary:
      - Accept-Encoding,Origin
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: null
  recorded_at: Thu, 28 May 2020 15:37:59 GMT
- request:
    method: get
    uri: https://fr.foncia.com/achat/sartrouville-78500/appartement/1335085.htm
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 28 May 2020 15:37:59 GMT
      Set-Cookie:
      - eZSESSID=9pmuf9lhq4cefdf8g8l6m4ouo5; path=/; secure; HttpOnly
      Cache-Control:
      - public, s-maxage=31536000
      Content-Type:
      - text/html; charset=UTF-8
      Vary:
      - Accept-Encoding,Origin
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: null
  recorded_at: Thu, 28 May 2020 15:38:00 GMT
- request:
    method: get
    uri: https://fr.foncia.com/achat/houilles-78800/maison/1337944.htm
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 28 May 2020 15:38:00 GMT
      Set-Cookie:
      - eZSESSID=q41d5c5e5fb3m5ahvut4nmssh6; path=/; secure; HttpOnly
      Cache-Control:
      - public, s-maxage=31536000
      Content-Type:
      - text/html; charset=UTF-8
      Vary:
      - Accept-Encoding,Origin
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: null
  recorded_at: Thu, 28 May 2020 15:38:00 GMT
- request:
    method: get
    uri: https://fr.foncia.com/achat/sartrouville-78500/appartement/1375155.htm
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Wed, 27 May 2020 19:08:51 GMT
      Cache-Control:
      - public, s-maxage=31536000
      Content-Type:
      - text/html; charset=UTF-8
      Vary:
      - Accept-Encoding,Origin
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: null
  recorded_at: Thu, 28 May 2020 15:38:00 GMT
- request:
    method: get
    uri: https://fr.foncia.com/achat/houilles-78800/maison/1382184.htm
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 28 May 2020 08:39:46 GMT
      Cache-Control:
      - public, s-maxage=31536000
      Content-Type:
      - text/html; charset=UTF-8
      Vary:
      - Accept-Encoding,Origin
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: null
  recorded_at: Thu, 28 May 2020 15:38:00 GMT
- request:
    method: get
    uri: https://fr.foncia.com/achat/sartrouville-78500/appartement/1386023.htm
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 28 May 2020 11:48:12 GMT
      Cache-Control:
      - public, s-maxage=31536000
      Content-Type:
      - text/html; charset=UTF-8
      Vary:
      - Accept-Encoding,Origin
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: null
  recorded_at: Thu, 28 May 2020 15:38:01 GMT
- request:
    method: get
    uri: https://fr.foncia.com/achat/houilles-78800/maison/1389793.htm
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 28 May 2020 15:38:01 GMT
      Set-Cookie:
      - eZSESSID=ijbc40725sfot2j0jcm3e5akf5; path=/; secure; HttpOnly
      Cache-Control:
      - public, s-maxage=31536000
      Content-Type:
      - text/html; charset=UTF-8
      Vary:
      - Accept-Encoding,Origin
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        PCFET0NUWVBFIGh0bWw+CjxodG1sIGxhbmc9ImZyIj4KPGhlYWQ+CiAgICA8bWV0YSBjaGFyc2V0PSJVVEYtOCI+CiAgICA8bWV0YSBodHRwLWVxdWl2PSJYLVVBLUNvbXBhdGlibGUiIGNvbnRlbnQ9IklFPUVkZ2UiPgogICAgPG1ldGEgbmFtZT0idmlld3BvcnQiIGNvbnRlbnQ9IndpZHRoPWRldmljZS13aWR0aCxpbml0aWFsLXNjYWxlPTEsbWluaW11bS1zY2FsZT0xIj4KCiAgICAKICAgIDx0aXRsZT5NYWlzb24gNSBwacOoY2VzIMOgIHZlbmRyZSAtIEhvdWlsbGVzICg3ODgwMCkgLSAxMDAgbTIgLSBGb25jaWE8L3RpdGxlPgoKICAgICAgICAgICAgICAgICAgICA8bWV0YSBuYW1lPSJkZXNjcmlwdGlvbiIgY29udGVudD0iTWFpc29uIDUgcGnDqGNlcyAoMTAwIG0yKSDDoCB2ZW5kcmUgLSBIb3VpbGxlcyAoNzg4MDApIDogSG91aWxsZXMsIHF1YXJ0aWVyIGRlIExhIE1haW4gZGUgRmVyLCBpZMOpYWxlbWVudCBzaXR1w6llLCBhY2PDqHMgw6AgbGEgZ2FyZSBlbiBzZXVsZW1lbnQgMTAgbWluLCB1biBlbnZpcm9ubmVtZW50IGNhbG1lIGV0IHLDqXNpZGVudGllbC4gTm91cyB2b3VzIHByb3Bvc29ucy4uLiI+CgogICAgICAgICAgICAgICAgICAgICAgICA8bGluayByZWw9Imljb24iIHR5cGU9ImltYWdlL3gtaWNvbiIgaHJlZj0iL2Zhdmljb24uaWNvP3ZlcnNpb249MTU4ODA5NzU2MiI+CiAgICAgICAgPGxpbmsgcmVsPSJhcHBsZS10b3VjaC1pY29uLXJldGluYSIgaHJlZj0iL2J1bmRsZXMvZm9uY2lhaW50ZXJuZXQvaW1hZ2VzL2Vudmlyb25tZW50L3RvdWNoLWljb24taXBob25lLXJldGluYS5wbmc/dmVyc2lvbj0xNTg4MDk3NTYyIj4KCiAgICAgICAgICAgICAgICA8bWV0YSBuYW1lPSJhcHBsaWNhdGlvbi1uYW1lIiBjb250ZW50PSJGb25jaWEuY29tIj4KICAgICAgICA8bWV0YSBuYW1lPSJtc2FwcGxpY2F0aW9uLVRpbGVDb2xvciIgY29udGVudD0iIzAwOWViOSI+CiAgICAgICAgPG1ldGEgbmFtZT0ibXNhcHBsaWNhdGlvbi1zcXVhcmU3MHg3MGxvZ28iIGNvbnRlbnQ9InRpbnkucG5nIj4KICAgICAgICA8bWV0YSBuYW1lPSJtc2FwcGxpY2F0aW9uLXNxdWFyZTE1MHgxNTBsb2dvIiBjb250ZW50PSJzcXVhcmUucG5nIj4KICAgICAgICA8bWV0YSBuYW1lPSJtc2FwcGxpY2F0aW9uLXdpZGUzMTB4MTUwbG9nbyIgY29udGVudD0id2lkZS5wbmciPgogICAgICAgIDxtZXRhIG5hbWU9Im1zYXBwbGljYXRpb24tc3F1YXJlMzEweDMxMGxvZ28iIGNvbnRlbnQ9ImxhcmdlLnBuZyI+CgogICAgICAgICAgICAgICAgPG1ldGEgcHJvcGVydHk9Im9nOnRpdGxlIiBjb250ZW50PSJNYWlzb24gNSBwacOoY2VzIMOgIHZlbmRyZSAtIEhvdWlsbGVzICg3ODgwMCkgLSAxMDAgbTIgLSBGb25jaWEiPgogICAgICAgIDxtZXRhIHByb3BlcnR5PSJvZzpzaXRlX25hbWUiIGNvbnRlbnQ9IkZPTkNJQSI+CiAgICAgICAgPG1ldGEgcHJvcGVydHk9Im9nOmRlc2NyaXB0aW9uIiBjb250ZW50PSJNYWlzb24gNSBwacOoY2VzICgxMDAgbTIpIMOgIHZlbmRyZSAtIEhvdWlsbGVzICg3ODgwMCkgOiBIb3VpbGxlcywgcXVhcnRpZXIgZGUgTGEgTWFpbiBkZSBGZXIsIGlkw6lhbGVtZW50IHNpdHXDqWUsIGFjY8OocyDDoCBsYSBnYXJlIGVuIHNldWxlbWVudCAxMCBtaW4sIHVuIGVudmlyb25uZW1lbnQgY2FsbWUgZXQgcsOpc2lkZW50aWVsLiBOb3VzIHZvdXMgcHJvcG9zb25zLi4uIj4KICAgICAgICA8bWV0YSBwcm9wZXJ0eT0ib2c6dXJsIiBjb250ZW50PSJodHRwczovL2ZyLmZvbmNpYS5jb20vYWNoYXQvaG91aWxsZXMtNzg4MDAvbWFpc29uLzEzODk3OTMuaHRtIj4KICAgICAgICA8bWV0YSBwcm9wZXJ0eT0ib2c6aW1hZ2UiIGNvbnRlbnQ9Imh0dHA6Ly9waG90b3MuZnIuZm9uY2lhLmNvbS9taW5pY3AvNjQwLzQ4MC9waG90b3MvMTM4OS83OTMvMTM4OTc5My9ncmFuZC8xMzg5NzkzX2JlOTI0MmI3ZTQxNjVjOWQ1YTVmZjkyYWE3Y2JlNTlmNWViZTNlZTgxNmEzNy5qcGc/ZGF0ZW1haj0yMDIwLTA1LTI1IDE1OjMzOjMwLjk0MSI+CgogICAgICAgIDxtZXRhIG5hbWU9InR3aXR0ZXI6dGl0bGUiIGNvbnRlbnQ9Ik1haXNvbiA1IHBpw6hjZXMgw6AgdmVuZHJlIC0gSG91aWxsZXMgKDc4ODAwKSAtIDEwMCBtMiAtIEZvbmNpYSI+CiAgICAgICAgPG1ldGEgbmFtZT0idHdpdHRlcjppbWFnZTpzcmMiIGNvbnRlbnQ9Imh0dHA6Ly9waG90b3MuZnIuZm9uY2lhLmNvbS9taW5pY3AvNjQwLzQ4MC9waG90b3MvMTM4OS83OTMvMTM4OTc5My9ncmFuZC8xMzg5NzkzX2JlOTI0MmI3ZTQxNjVjOWQ1YTVmZjkyYWE3Y2JlNTlmNWViZTNlZTgxNmEzNy5qcGc/ZGF0ZW1haj0yMDIwLTA1LTI1IDE1OjMzOjMwLjk0MSI+CiAgICAgICAgPG1ldGEgbmFtZT0idHdpdHRlcjpkZXNjcmlwdGlvbiIgY29udGVudD0iTWFpc29uIDUgcGnDqGNlcyAoMTAwIG0yKSDDoCB2ZW5kcmUgLSBIb3VpbGxlcyAoNzg4MDApIDogSG91aWxsZXMsIHF1YXJ0aWVyIGRlIExhIE1haW4gZGUgRmVyLCBpZMOpYWxlbWVudCBzaXR1w6llLCBhY2PDqHMgw6AgbGEgZ2FyZSBlbiBzZXVsZW1lbnQgMTAgbWluLCB1biBlbnZpcm9ubmVtZW50IGNhbG1lIGV0IHLDqXNpZGVudGllbC4gTm91cyB2b3VzIHByb3Bvc29ucy4uLiI+CiAgICAgICAgPG1ldGEgbmFtZT0idHdpdHRlcjpjYXJkIiBjb250ZW50PSJzdW1tYXJ5Ij4KICAgICAgICA8bWV0YSBuYW1lPSJ0d2l0dGVyOnNpdGUiIGNvbnRlbnQ9IkBmb25jaWEiPgogICAgCiAgICAgICAgICAgICAgICA8bGluayByZWw9InN0eWxlc2hlZXQiIGhyZWY9Ii9jb21waWxlZC9zdHlsZXMuY3NzP3ZlcnNpb249MTU4ODA5NzU2MiI+CiAgICAKICAgIDxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij4KICAgIHZhciB0YXJ0ZWF1Y2l0cm9uRm9yY2VDRE4gPSAiL2J1bmRsZXMvZm9uY2lhaW50ZXJuZXQvanMvdGFydGVhdWNpdHJvbi8iOwo8L3NjcmlwdD4KCiAgICA8c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCIgc3JjPSIvY29tcGlsZWQvdGFydGVhdWNpdHJvbi5qcz92ZXJzaW9uPTE1ODgwOTc1NjIiPjwvc2NyaXB0PgoKICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzY3JpcHQ+d2luZG93LmZvbmNpYV9pbnRlcm5ldD17cGFyYW1zOnt9fTwvc2NyaXB0PgogICAgICAgIDwhLS1baWYgSUUgOV0+PHNjcmlwdD5kb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuY2xhc3NOYW1lKz0nIElFOSc7PC9zY3JpcHQ+PCFbZW5kaWZdLS0+CjwhLS1baWYgSUUgMTBdPjxzY3JpcHQ+ZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LmNsYXNzTmFtZSs9JyBJRTEwJzs8L3NjcmlwdD48IVtlbmRpZl0tLT4KCjxzY3JpcHQ+CiFmdW5jdGlvbihhLGIpeyJmdW5jdGlvbiI9PXR5cGVvZiBkZWZpbmUmJmRlZmluZS5hbWQ/ZGVmaW5lKFtdLGZ1bmN0aW9uKCl7cmV0dXJuIGEuc3ZnNGV2ZXJ5Ym9keT1iKCl9KToib2JqZWN0Ij09dHlwZW9mIGV4cG9ydHM/bW9kdWxlLmV4cG9ydHM9YigpOmEuc3ZnNGV2ZXJ5Ym9keT1iKCl9KHRoaXMsZnVuY3Rpb24oKXtmdW5jdGlvbiBhKGEsYil7aWYoYil7dmFyIGM9ZG9jdW1lbnQuY3JlYXRlRG9jdW1lbnRGcmFnbWVudCgpLGQ9IWEuZ2V0QXR0cmlidXRlKCJ2aWV3Qm94IikmJmIuZ2V0QXR0cmlidXRlKCJ2aWV3Qm94Iik7ZCYmYS5zZXRBdHRyaWJ1dGUoInZpZXdCb3giLGQpO2Zvcih2YXIgZT1iLmNsb25lTm9kZSghMCk7ZS5jaGlsZE5vZGVzLmxlbmd0aDspYy5hcHBlbmRDaGlsZChlLmZpcnN0Q2hpbGQpO2EuYXBwZW5kQ2hpbGQoYyl9fWZ1bmN0aW9uIGIoYil7Yi5vbnJlYWR5c3RhdGVjaGFuZ2U9ZnVuY3Rpb24oKXtpZig0PT09Yi5yZWFkeVN0YXRlKXt2YXIgYz1iLl9jYWNoZWREb2N1bWVudDtjfHwoYz1iLl9jYWNoZWREb2N1bWVudD1kb2N1bWVudC5pbXBsZW1lbnRhdGlvbi5jcmVhdGVIVE1MRG9jdW1lbnQoIiIpLGMuYm9keS5pbm5lckhUTUw9Yi5yZXNwb25zZVRleHQsYi5fY2FjaGVkVGFyZ2V0PXt9KSxiLl9lbWJlZHMuc3BsaWNlKDApLm1hcChmdW5jdGlvbihkKXt2YXIgZT1iLl9jYWNoZWRUYXJnZXRbZC5pZF07ZXx8KGU9Yi5fY2FjaGVkVGFyZ2V0W2QuaWRdPWMuZ2V0RWxlbWVudEJ5SWQoZC5pZCkpLGEoZC5zdmcsZSl9KX19LGIub25yZWFkeXN0YXRlY2hhbmdlKCl9ZnVuY3Rpb24gYyhjKXtmdW5jdGlvbiBkKCl7Zm9yKHZhciBjPTA7YzxsLmxlbmd0aDspe3ZhciBnPWxbY10saD1nLnBhcmVudE5vZGU7aWYoaCYmL3N2Zy9pLnRlc3QoaC5ub2RlTmFtZSkpe3ZhciBpPWcuZ2V0QXR0cmlidXRlKCJ4bGluazpocmVmIik7aWYoZSYmKCFmLnZhbGlkYXRlfHxmLnZhbGlkYXRlKGksaCxnKSkpe2gucmVtb3ZlQ2hpbGQoZyk7dmFyIG09aS5zcGxpdCgiIyIpLG49bS5zaGlmdCgpLG89bS5qb2luKCIjIik7aWYobi5sZW5ndGgpe3ZhciBwPWpbbl07cHx8KHA9altuXT1uZXcgWE1MSHR0cFJlcXVlc3QscC5vcGVuKCJHRVQiLG4pLHAuc2VuZCgpLHAuX2VtYmVkcz1bXSkscC5fZW1iZWRzLnB1c2goe3N2ZzpoLGlkOm99KSxiKHApfWVsc2UgYShoLGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKG8pKX19ZWxzZSsrY31rKGQsNjcpfXZhciBlLGY9T2JqZWN0KGMpLGc9L1xiVHJpZGVudFwvWzU2N11cYnxcYk1TSUUgKD86OXwxMClcLjBcYi8saD0vXGJBcHBsZVdlYktpdFwvKFxkKylcYi8saT0vXGJFZGdlXC8xMlwuKFxkKylcYi87ZT0icG9seWZpbGwiaW4gZj9mLnBvbHlmaWxsOmcudGVzdChuYXZpZ2F0b3IudXNlckFnZW50KXx8KG5hdmlnYXRvci51c2VyQWdlbnQubWF0Y2goaSl8fFtdKVsxXTwxMDU0N3x8KG5hdmlnYXRvci51c2VyQWdlbnQubWF0Y2goaCl8fFtdKVsxXTw1Mzc7dmFyIGo9e30saz13aW5kb3cucmVxdWVzdEFuaW1hdGlvbkZyYW1lfHxzZXRUaW1lb3V0LGw9ZG9jdW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoInVzZSIpO2UmJmQoKX1yZXR1cm4gY30pOwo8L3NjcmlwdD4KPHNjcmlwdD5zdmc0ZXZlcnlib2R5KCk8L3NjcmlwdD4KICAgIAogICAgICAgIDxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0IiBzcmM9Imh0dHBzOi8vd3d3LmNpdHlzY2FuLmZyL2Fzc2V0cy9idWlsZC9qcy9saWIvY2l0eXNjYW4td2lkZ2V0LmpzIj48L3NjcmlwdD4KPC9oZWFkPgoKCjxib2R5PgoKICAgIDxzY3JpcHQ+CiAgICAgICAgZGF0YUxheWVyID0gd2luZG93LmRhdGFMYXllciB8fCB7fTsKICAgICAgICB2YXIgb2JqZWN0ID0gewogICAgICAgICAgICAidHlwZVNpdGUiOiAiZ8OpbsOpcmlxdWUiLAogICAgICAgICAgICAiZXNwYWNlIjogImdlbmVyYWwiLAogICAgICAgICAgICAidHlwZVBhZ2UiOiAiY2xhc3NpcXVlIiwKICAgICAgICAgICAgInRlbXBsYXRlIjogInByb2R1aXQiLAogICAgICAgICAgICAidGhlbWUiOiAiYWNoYXQiCiAgICAgICAgfTsKCiAgICAgICAgZGF0YUxheWVyID0gW29iamVjdF07CiAgICA8L3NjcmlwdD4KCjxzY3JpcHQ+CiAgICBkYXRhTGF5ZXIgPSB3aW5kb3cuZGF0YUxheWVyIHx8IFtdOwoKICAgIHZhciBjdXJyZW50UGF0aCA9IHdpbmRvdy5sb2NhdGlvbi5wYXRobmFtZTsKCiAgICAgICAgICAgIHZhciBjb21tb25VcHRpbGFiVmFsdWVzID0gewogICAgICAgICJ0eXBlU2l0ZSI6ICJnw6luw6lyaXF1ZSIsIC8vIEZldGNoZWQgZnJvbSBsYXlvdXQgZ2xvYmFscwogICAgICAgICJlc3BhY2UiOiAiZ2VuZXJhbCIsCiAgICAgICAgInR5cGVQYWdlIjogImNsYXNzaXF1ZSIsCiAgICAgICAgInRlbXBsYXRlIjogImF1dHJlcyIKICAgIH07CgogICAgLy8gRGVwZW5kaW5nIG9uIGN1cnJlbnQgcGF0aG5hbWUsIHdlIGRpc3BhdGNoIGFuIGV2ZW50LCB1c2VkIGZvciBCYWNrLU9mZmljZSBwYWdlcwogICAgc3dpdGNoICh0cnVlKSB7CiAgICAgICAgY2FzZSBjdXJyZW50UGF0aC5pbmRleE9mKCIvYWNoYXQvIikgPT09IDA6IC8vIFBhZ2UgYWNoYXQgKGF2ZWMgcmVjaGVyY2hlIGVuIGNvdXJzKQogICAgICAgICAgICAvLyBFdmVudAogICAgICAgICAgICBkYXRhTGF5ZXIucHVzaCh7ImN1c3RvbUNhdGVnb3JpZSI6ICJlbmdhZ2VtZW50IiwgImN1c3RvbUFjdGlvbiI6ICJpbnRlcmV0IiwgImN1c3RvbUxhYmVsIjogIkFjaGV0ZXIiLCAiZXZlbnQiOiAiY3VzdG9tRXZlbnQifSk7CiAgICAgICAgICAgIGJyZWFrOwogICAgICAgIGNhc2UgY3VycmVudFBhdGguaW5kZXhPZigiL2xvY2F0aW9uLyIpID09PSAwOiAvLyBQYWdlIGxvY2F0aW9uIChhdmVjIHJlY2hlcmNoZSBlbiBjb3VycykKICAgICAgICAgICAgLy8gRXZlbnQKICAgICAgICAgICAgZGF0YUxheWVyLnB1c2goeyJjdXN0b21DYXRlZ29yaWUiOiAiZW5nYWdlbWVudCIsICJjdXN0b21BY3Rpb24iOiAiaW50ZXJldCIsICJjdXN0b21MYWJlbCI6ICJMb3VlciIsICJldmVudCI6ICJjdXN0b21FdmVudCJ9KTsKICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgY2FzZSBjdXJyZW50UGF0aC5pbmRleE9mKCIvcmVjaGVyY2hlL3BhY2stZWFzeWxvYyIpID09PSAwOiAvLyBMYSBwYWdlIHBhY2stZWFzeWxvYwogICAgICAgICAgICBjb21tb25VcHRpbGFiVmFsdWVzLnRoZW1lID0gImxvY2F0aW9uIjsKICAgICAgICAgICAgZGF0YUxheWVyLnB1c2goY29tbW9uVXB0aWxhYlZhbHVlcyk7CiAgICAgICAgICAgIGJyZWFrOwogICAgICAgIGNhc2UgY3VycmVudFBhdGguaW5kZXhPZigiL3JlY2hlcmNoZS9hY2hldGVyLXVuLWJpZW4iKSA9PT0gMDogLy8gTGEgcGFnZSBhY2hldGVyIHVuIGJpZW4KICAgICAgICAgICAgY29tbW9uVXB0aWxhYlZhbHVlcy50aGVtZSA9ICJhY2hhdCI7CiAgICAgICAgICAgIGRhdGFMYXllci5wdXNoKGNvbW1vblVwdGlsYWJWYWx1ZXMpOwogICAgICAgICAgICBicmVhazsKICAgICAgICBjYXNlIGN1cnJlbnRQYXRoLmluZGV4T2YoIi9sZS1ncm91cGUiKSA9PT0gMDogLy8gUGFnZSBvdSBzb3VzLXBhZ2VzICJMZSBncm91cGUiCiAgICAgICAgICAgIGNvbW1vblVwdGlsYWJWYWx1ZXMudGhlbWUgPSAiZ3JvdXBlIjsKICAgICAgICAgICAgZGF0YUxheWVyLnB1c2goY29tbW9uVXB0aWxhYlZhbHVlcyk7CiAgICAgICAgICAgIGJyZWFrOwogICAgICAgIGNhc2UgY3VycmVudFBhdGguaW5kZXhPZigiL2wtaW52ZXN0aXNzZW1lbnQtaW1tb2JpbGllciIpID09PSAwOiAvLyBQYWdlIG91IHNvdXMtcGFnZXMgIkwnaW52ZXN0aXNzZW1lbnQgaW1tb2JpbGllciIKICAgICAgICAgICAgY29tbW9uVXB0aWxhYlZhbHVlcy50aGVtZSA9ICJpbnZlc3Rpc3NlbWVudCI7CiAgICAgICAgICAgIGRhdGFMYXllci5wdXNoKGNvbW1vblVwdGlsYWJWYWx1ZXMpOwogICAgICAgICAgICBicmVhazsKICAgICAgICBjYXNlIGN1cnJlbnRQYXRoLmluZGV4T2YoIi9mYWlyZS1nZXJlci1tYS1sb2NhdGlvbi1wYXItZm9uY2lhIikgPT09IDA6IC8vIFBhZ2Ugb3Ugc291cy1wYWdlcyAiRmFpcmUgZ8OpcmVyIG1hIGxvY2F0aW9uIgogICAgICAgICAgICBjb21tb25VcHRpbGFiVmFsdWVzLnRoZW1lID0gImdlc3Rpb25Mb2NhdGl2ZSI7CiAgICAgICAgICAgIGRhdGFMYXllci5wdXNoKGNvbW1vblVwdGlsYWJWYWx1ZXMpOwogICAgICAgICAgICBicmVhazsKICAgICAgICBjYXNlIGN1cnJlbnRQYXRoLmluZGV4T2YoIi9mYWlyZS1nZXJlci11bmUtY29wcm9wcmlldGUiKSA9PT0gMDogLy8gUGFnZSBvdSBzb3VzLXBhZ2VzICJGYWlyZSBnw6lyZXIgdW5lIGNvcHJvcHJpw6l0w6kiCiAgICAgICAgICAgIGNvbW1vblVwdGlsYWJWYWx1ZXMudGhlbWUgPSAiY29wcm9wcmlldGUiOwogICAgICAgICAgICBkYXRhTGF5ZXIucHVzaChjb21tb25VcHRpbGFiVmFsdWVzKTsKICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgY2FzZSBjdXJyZW50UGF0aC5pbmRleE9mKCIvc2VydmljZXMiKSA9PT0gMDogLy8gUGFnZSBvdSBzb3VzLXBhZ2VzICJGYWlyZSBnw6lyZXIgdW5lIGNvcHJvcHJpw6l0w6kiCiAgICAgICAgICAgIGNvbW1vblVwdGlsYWJWYWx1ZXMudGhlbWUgPSAic2VydmljZXMiOwogICAgICAgICAgICBkYXRhTGF5ZXIucHVzaChjb21tb25VcHRpbGFiVmFsdWVzKTsKICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgY2FzZSBjdXJyZW50UGF0aCA9PT0gJy9tb3QtZGUtcGFzc2Utb3VibGllJzoKICAgICAgICAgICAgY29tbW9uVXB0aWxhYlZhbHVlcy50ZW1wbGF0ZSA9ICJob21lcGFnZSI7CiAgICAgICAgICAgIGRhdGFMYXllci5wdXNoKGNvbW1vblVwdGlsYWJWYWx1ZXMpOwogICAgICAgICAgICBicmVhazsKICAgICAgICBjYXNlIGN1cnJlbnRQYXRoID09PSAnLyc6CiAgICAgICAgICAgIGNvbW1vblVwdGlsYWJWYWx1ZXMudGVtcGxhdGUgPSAiaG9tZXBhZ2UiOwogICAgICAgICAgICBkYXRhTGF5ZXIucHVzaChjb21tb25VcHRpbGFiVmFsdWVzKTsKICAgICAgICAgICAgYnJlYWs7CiAgICB9CiAgICAKICAgIDwvc2NyaXB0Pgo8bm9zY3JpcHQ+PGlmcmFtZSBzcmM9Ii8vd3d3Lmdvb2dsZXRhZ21hbmFnZXIuY29tL25zLmh0bWw/aWQ9R1RNLVBCQlpXRCIgaGVpZ2h0PSIwIiB3aWR0aD0iMCIgc3R5bGU9ImRpc3BsYXk6bm9uZTt2aXNpYmlsaXR5OmhpZGRlbiI+PC9pZnJhbWU+PC9ub3NjcmlwdD4KPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPgogICAgdGFydGVhdWNpdHJvbi51c2VyLmdvb2dsZXRhZ21hbmFnZXJJZCA9ICdHVE0tUEJCWldEJzsKICAgICh0YXJ0ZWF1Y2l0cm9uLmpvYiA9IHRhcnRlYXVjaXRyb24uam9iIHx8IFtdKS5wdXNoKCdnb29nbGV0YWdtYW5hZ2VyX2ZvbmNpYScpOwoKICAgIHRhcnRlYXVjaXRyb24udXNlci5BQlRhc3R5SWQgPSAiMGU2ZDllYTI0NzI4MjA3MmNlM2E4NDEzMGZjOGU3MTIiOwogICAgKHRhcnRlYXVjaXRyb24uam9iID0gdGFydGVhdWNpdHJvbi5qb2IgfHwgW10pLnB1c2goJ2FidGFzdHlfZm9uY2lhJyk7Cjwvc2NyaXB0PgoKPHNjcmlwdD4KICAgICAgICBkYXRhTGF5ZXIgPSB3aW5kb3cuZGF0YUxheWVyIHx8IFtdOwoKICAgICAgICBmdW5jdGlvbiBkZWZlcihtZXRob2QpIHsKICAgICAgICBpZiAod2luZG93LmpRdWVyeSkKICAgICAgICAgICAgbWV0aG9kKCk7CiAgICAgICAgZWxzZQogICAgICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgICAgIGRlZmVyKG1ldGhvZCkKICAgICAgICAgICAgfSwgNTApOwogICAgfQoKICAgIAogICAgCjwvc2NyaXB0PgoKPGRpdiBjbGFzcz0iQm9keVdyYXBwZXIiPgoKICAgIDxoZWFkZXIgY2xhc3M9IkhlYWRlciIgcm9sZT0iYmFubmVyIj4KCiAgICAKICAgIDxkaXYgY2xhc3M9IkhlYWRlci10b3AiPgoKICAgICAgICAgICAgPHVsIGNsYXNzPSJIZWFkZXItdG9wTmF2IEhlYWRlci10b3AtbGVmdCI+CgogICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9mci5mb25jaWEuY29tL25vdHJlLWFtYml0aW9uIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkYXRhLWJlaGF0PSJMZWdyb3VwZSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIExlIGdyb3VwZQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHA6Ly9jYXJyaWVyZS5mb25jaWEuY29tLyIKICAgICAgICAgICAgICAgICAgICAgICAgdGFyZ2V0PSJfYmxhbmsiICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkYXRhLWJlaGF0PSJDYXJyacOocmUiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBDYXJyacOocmUKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwOi8vZm9uY2lhLXJlY3J1dGUudGFsZW50LXNvZnQuY29tL2FjY3VlaWwuYXNweCIKICAgICAgICAgICAgICAgICAgICAgICAgdGFyZ2V0PSJfYmxhbmsiICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkYXRhLWJlaGF0PSJOb3NvZmZyZXNk4oCZZW1wbG9pIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgTm9zIG9mZnJlcyBk4oCZZW1wbG9pCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9mci5mb25jaWEuY29tL21vbi1ndWlkZS1pbW1vIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkYXRhLWJlaGF0PSJNb25HdWlkZUltbW8iPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBNb24gR3VpZGUgSW1tbwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHA6Ly9iZWxsZXNwZXJzb25uZXMuZm9uY2lhLmNvbS8iCiAgICAgICAgICAgICAgICAgICAgICAgIHRhcmdldD0iX2JsYW5rIiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1iZWhhdD0iQmVsbGVzcGVyc29ubmVzIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgQmVsbGVzIHBlcnNvbm5lcwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL2ZyLmZvbmNpYS5jb20vYWN0dWFsaXRlcy1lbi1wZXJpb2RlLWRlLWRlY29uZmluZW1lbnQiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU9ImNvbG9yOiAjRkE4QTAwO2ZvbnQtd2VpZ2h0OiBib2xkOyIgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtYmVoYXQ9IkFjdHVhbGl0w6lzIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgQWN0dWFsaXTDqXMKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgIDwvdWw+CiAgICAKICAgIDx1bCBjbGFzcz0iSGVhZGVyLXRvcE5hdiBIZWFkZXItdG9wLXJpZ2h0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgIDxhICBjbGFzcz0iSWNvbi0tcG9pbnRlciIgaHJlZj0iaHR0cDovL2FnZW5jZS5mb25jaWEuY29tIiBkYXRhLWJlaGF0PSJoZWFkZXJUcm91dmVyQWdlbmNlTGllbiI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBUcm91dmVyIHVuZSBhZ2VuY2UKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdWw+CjwvZGl2PgoKCiAgICA8cCBjbGFzcz0iSGVhZGVyLXNraXBsaW5rIj4KICAgICAgICA8YSBjbGFzcz0iSGVhZGVyLWxvZ28iIGhyZWY9Ii8iPgogICAgICAgICAgICA8aW1nIGNsYXNzPSJIZWFkZXItbG9nby0tZGVza3RvcCIgd2lkdGg9IjY0cHgiIGhlaWdodD0iNjRweCIgc3JjPSJodHRwczovL3Bob3Rvcy5mb25jaWEubmV0L2ltYWdlcy9Gb25jaWFfbG9nb2hfNjZfNjYucG5nIiBhbHQ9IkZvbmNpYSI+CiAgICAgICAgICAgIDxpbWcgY2xhc3M9IkhlYWRlci1sb2dvLS1tb2JpbGUiIHdpZHRoPSIxMDhweCIgaGVpZ2h0PSIzMHB4IiBzcmM9Imh0dHBzOi8vcGhvdG9zLmZvbmNpYS5uZXQvaW1hZ2VzL0ZvbmNpYV9ob21lcGFnZXZfMTA4XzMwLnBuZyIgYWx0PSJGb25jaWEiPgogICAgICAgIDwvYT4KICAgICAgICA8YnV0dG9uIGNsYXNzPSJIZWFkZXItc2tpcGxpbmstbWVudSBJY29uLS1tZW51IiBkYXRhLXdpZGdldD0iUGFuZWxTbGlkZS10cmlnZXIiIGRhdGEtd2lkZ2V0LXNpZGU9ImxlZnQiPk1lbnU8L2J1dHRvbj4KICAgICAgICA8YSBocmVmPSIvbG9naW4iIGNsYXNzPSJIZWFkZXItc2tpcGxpbmstdXNlciBJY29uLS11c2VyLW1hbGUyIj5NeUZPTkNJQTwvYT4KICAgIDwvcD4KCiAgICA8bmF2IGNsYXNzPSJNYWluTmF2IiByb2xlPSJuYXZpZ2F0aW9uIj4KICAgICAgICA8dWwgY2xhc3M9Ik1haW5OYXYtbGlzdCBIZWFkZXItdG9wTmF2Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGkgY2xhc3M9Ik1haW5OYXYtaXRlbSBNYWluTmF2LWl0ZW0tLWxvY2F0aW9uIGZpcnN0Ij4gICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZnIuZm9uY2lhLmNvbS9hY2hhdCIgICAgPkFjaGV0ZXIgPHNwYW4+b3UgbG91ZXI8L3NwYW4+PC9hPiAgICAgICAgICAgIAogICAgPC9saT4KCiAgICAgICAgPGxpIGNsYXNzPSJNYWluTmF2LWl0ZW0gTWFpbk5hdi1pdGVtLS1nZXN0aW9uIj4gICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZnIuZm9uY2lhLmNvbS9mYWlyZS1nZXJlci1tYS1sb2NhdGlvbi1wYXItZm9uY2lhIiAgICA+RmFpcmUgZ8OpcmVyIDxzcGFuPm1hIGxvY2F0aW9uPC9zcGFuPjwvYT4gICAgICAgICAgICAKICAgIDwvbGk+CgogICAgICAgIDxsaSBjbGFzcz0iTWFpbk5hdi1pdGVtIE1haW5OYXYtaXRlbS0tY29wcm8iPiAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9mci5mb25jaWEuY29tL2ZhaXJlLWdlcmVyLXVuZS1jb3Byb3ByaWV0ZSIgICAgPkZhaXJlIGfDqXJlciA8c3Bhbj51bmUgY29wcm9wcmnDqXTDqTwvc3Bhbj48L2E+ICAgICAgICAgICAgCiAgICA8L2xpPgoKICAgICAgICA8bGkgY2xhc3M9Ik1haW5OYXYtaXRlbSBNYWluTmF2LWl0ZW0tLXZlbnRlIj4gICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZnIuZm9uY2lhLmNvbS9lc3RpbWVyLWV0LXZlbmRyZSIgICAgPkVzdGltZXIgPHNwYW4+ZXQgdmVuZHJlPC9zcGFuPjwvYT4gICAgICAgICAgICAKICAgIDwvbGk+CgogICAgICAgIDxsaSBjbGFzcz0iTWFpbk5hdi1pdGVtIE1haW5OYXYtaXRlbS0taW52ZXN0aXNzZW1lbnQiPiAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9mci5mb25jaWEuY29tL2wtaW52ZXN0aXNzZW1lbnQtaW1tb2JpbGllciIgICAgPkludmVzdGlyIDxzcGFuPmRhbnMgbCYjMDM5O2ltbW9iaWxpZXI8L3NwYW4+PC9hPiAgICAgICAgICAgIAogICAgPC9saT4KCiAgICAgICAgPGxpIGNsYXNzPSJNYWluTmF2LWl0ZW0gTWFpbk5hdi1pdGVtLS1sb2NhdGlvbnZhY2FuY2VzIGxhc3QiPiAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly93d3cuZm9uY2lhLWxvY2F0aW9uLXZhY2FuY2VzLmZyLyN1dG1fc291cmNlPWZvbmNpYS5jb20mYW1wO3V0bV9tZWRpdW09bGllbiZhbXA7dXRtX2NhbXBhaWduPWZvbmNpYS5jb20iICAgICB0YXJnZXQ9Il9ibGFuayI+TG9jYXRpb24gPHNwYW4+VmFjYW5jZXM8L3NwYW4+PC9hPiAgICAgICAgICAgIAogICAgPC9saT4KCgogICAgCgoKICAgICAgICAgICAgPGxpIGNsYXNzPSJNYWluTmF2LWl0ZW0gTWFpbk5hdi1pdGVtLS11c2VyIGxhc3QiPgogICAgICAgICAgICAgICAgPGEgaHJlZj0iL2xvZ2luIj5NeUZPTkNJQSA8c3Bhbj5FU1BBQ0UgQ0xJRU5UPC9zcGFuPjwvYT4KICAgICAgICAgICAgPC9saT4KICAgICAgICA8L3VsPgogICAgPC9uYXY+CgogICAgPGRpdiBjbGFzcz0iVXNlck5hdiIgaWQ9Ik15Rm9uY2lhTWVudSI+CgogICAgPGRpdiBjbGFzcz0iVXNlck5hdi1vdmVyZmxvdyAiPgogICAgICAgIAogICAgICAgIDxkaXYgY2xhc3M9IlVzZXJMb2dpbiI+CiAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICA8ZGl2IGNsYXNzPSJVc2VyTG9naW4taW5mbyI+CiAgICAgICAgICAgIDxwIGNsYXNzPSJVc2VyTG9naW4tdGl0bGUiPlByZW1pw6hyZSBjb25uZXhpb24gPzwvcD4KICAgIAoKICAgIAogICAgICAgIDxwIGNsYXNzPSJVc2VyTG9naW4taWxsIj4KICAgICAgICAgICAgICAgIDxpbWcgc3JjPSJodHRwczovL2ZyLmZvbmNpYS5jb20vdmFyL2ZvbmNpYS9zdG9yYWdlL2ltYWdlcy9fYWxpYXNlcy90aHVtYl8yMDVfMjA1L21lZGlhL2ltYWdlcy9haWRlLzM1NzAtMi1mcmUtRlIvQWlkZS5wbmciICBhbHQ9IiIgLz4KICAgICAgICA8L3A+CgogICAgCiAgICAKICAgICAgICAgICAgPHAgY2xhc3M9IlVzZXJMb2dpbi10ZXh0Ij5Mb3JzIGRlIHZvdHJlIHByZW1pw6hyZSBjb25uZXhpb24gw6Agdm90cmUgZXNwYWNlIGNsaWVudCBNeUZvbmNpYSwgdm91cyBkZXZleiBzYWlzaXIgdm90cmUgaWRlbnRpZmlhbnQgZXQgbGUgbW90IGRlIHBhc3NlIHByb3Zpc29pcmUgcXVpIHZvdXMgb250IMOpdMOpIHRyYW5zbWlzIHBhciB2b3RyZSBhZ2VuY2Ugb3Ugc3VyIHZvcyBkb2N1bWVudHMgY29tcHRhYmxlcy48L3A+CiAgICAKCiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pgo8cCBjbGFzcz0iVXNlckxvZ2luLWNyZWF0ZSI+UHJlbWnDqHJlIGNvbm5leGlvbiA/IDxhCiAgICAgICAgICAgICAgICBocmVmPSIvcHJlbWllcmUtY29ubmV4aW9uLWEtbW9uLWVzcGFjZS1jbGllbnQtZm9uY2lhIj5Ew6ljb3V2cmV6IGNvbW1lbnQgdm91cyBjb25uZWN0ZXI8L2E+PC9wPgoKCiAgICAgICAgCiAgICAgICAgPC9kaXY+CgogICAgPC9kaXY+Cgo8L2Rpdj4KCiAgICAgICAgICAgICAgICAgICAgICAgIDwvaGVhZGVyPgogICAgCjwhLS1baWYgbHRlIElFIDkgXT4KPGRpdiBjbGFzcz0iQnJvd3NlckFsZXJ0IEJyb3dzZXJBbGVydC0tdmlzaWJsZSI+CiAgICA8ZGl2IGNsYXNzPSJCcm93c2VyQWxlcnQtaW5uZXIiPgogICAgICAgIDxzcGFuIGNsYXNzPSJCcm93c2VyQWxlcnQtaWNvbiI+CiAgICAgICAgICAgIDxzdmcgY2xhc3M9Imljb24iIHdpZHRoPSIzMiIgaGVpZ2h0PSIzMiIgYXJpYS1oaWRkZW49InRydWUiPjx1c2UgeGxpbms6aHJlZj0iL2J1bmRsZXMvZm9uY2lhaW50ZXJuZXQvc3ZnL2ljb25zLnN2ZyNJY29uLS1pbmZvIj48L3VzZT48L3N2Zz4KICAgICAgICA8L3NwYW4+CiAgICAgICAgPHAgY2xhc3M9IkJyb3dzZXJBbGVydC1tZXNzYWdlIj4KICAgICAgICAgICAgQXR0ZW50aW9uLCB2b3RyZSBuYXZpZ2F0ZXVyIG7igJllc3QgcGFzIMOgIGpvdXIgISBBZmluIGQnYW3DqWxpb3JlciB2b3RyZSBleHDDqXJpZW5jZSBzdXIgY2Ugc2l0ZSBub3VzIHZvdXMgY29uc2VpbGxvbnMgZGUgbWV0dHJlIMOgIGpvdXIgdm90cmUgbmF2aWdhdGV1ciB2ZXJzIHVuZSB2ZXJzaW9uIHBsdXMgcsOpY2VudGUKICAgICAgICA8L3A+CiAgICAgICAgPHNwYW4gY2xhc3M9IkJyb3dzZXJBbGVydC1jbG9zZSI+CiAgICAgICAgICAgIDxidXR0b24gY2xhc3M9IkJyb3dzZXJBbGVydC1jbG9zZUJ0biIgYXJpYS1sYWJlbD0iTWFzcXVlciBjZSBtZXNzYWdlIj4KICAgICAgICAgICAgICAgIDxzdmcgY2xhc3M9Imljb24iIHdpZHRoPSIxMiIgaGVpZ2h0PSIxMiIgYXJpYS1oaWRkZW49InRydWUiPjx1c2UgeGxpbms6aHJlZj0iL2J1bmRsZXMvZm9uY2lhaW50ZXJuZXQvc3ZnL2ljb25zLnN2ZyNJY29uLS1jbG9zZTIiPjwvdXNlPjwvc3ZnPgogICAgICAgICAgICA8L2J1dHRvbj4KICAgICAgICA8L3NwYW4+CiAgICA8L2Rpdj4KPC9kaXY+CjwhW2VuZGlmXS0tPgoKCgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJCcmVhZGNydW1icyI+CiAgICAgICAgICAgIDxwICAgICBjbGFzcz0iQnJlYWRjcnVtYnMtaW5uZXIiIGRhdGEtdHlwZT0ieW9sbyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4+Rm9uY2lhPC9zcGFuPiAgICAgICAgICAgICAgICAgICAgICAgICAgICAKCiAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Ii9hY2hhdCIgICAgIGNsYXNzPSJCcmVhZGNydW1icy1saW5rIj5BY2hhdDwvYT4gICAgICAgICAgICAgICAgICAgICAgICAgICAgCgogICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIvYWNoYXQvaG91aWxsZXMtNzg4MDAiICAgICBjbGFzcz0iQnJlYWRjcnVtYnMtbGluayI+SG91aWxsZXMgKDc4ODAwKTwvYT4gICAgICAgICAgICAgICAgICAgICAgICAgICAgCgogICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3Bhbj5NYWlzb248L3NwYW4+ICAgICAgICAgICAgICAgICAgICAgICAgICAgIAoKICAgIAoKICAgICAgICAgICAgPC9wPgogICAgICAgIDwvZGl2PgogICAgCgoKICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAKICAgIAogICAgPGRpdiBjbGFzcz0iQ29udGVudCI+CgogICAgICAgIDxkaXYgY2xhc3M9IkNvbnRlbnQtYmFuZG8gQ29udGVudC1iYW5kby0tZ3JhZGllbnQiPjwvZGl2PgoKICAgICAgICA8ZGl2IGNsYXNzPSJSZXN1bHRzTmF2IiBkYXRhLXByb3BlcnR5LXJlZmVyZW5jZT0iMTM4OTc5MyI+CgogICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgIDxzZWN0aW9uIGNsYXNzPSJDb250ZW50LXJvdyBDb250ZW50LXJvdy0tYmxlZWQiPgogICAgICAgICAgICAgICAgPGRpdiBpZD0iY2l0eXNjYW4td2lkZ2V0IgogICAgIGRhdGEtY2xpZW50LWtleT0iTnYxQzkyZ1BEYmY0T0o4eXcyIgogICAgIGRhdGEtZXh0LWFkZHJlc3MtaWQ9IlQxMzg5NzkzIgogICAgIGRhdGEtbGFuZ3VhZ2U9ImZyLUZSIgogICAgICAgICAgY2xhc3M9Ik9mZmVyTWFwIj48L2Rpdj4gICAgICAgICAgICA8L3NlY3Rpb24+CiAgICAgICAgICAgICAgICA8c2VjdGlvbiBjbGFzcz0iQ29udGVudC1yb3cgQ29udGVudC1yb3ctLWdyYXkiPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJDb250ZW50LW92ZXJmbG93Ij4KCiAgICAgICAgICAgICAgICA8bWFpbiBjbGFzcz0iQ29udGVudC1tYWluIiByb2xlPSJtYWluIj4KCiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iT2ZmZXJUb3AiPgogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJPZmZlclRvcC1oZWFkIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9Ik9mZmVyVG9wLWJhZGdlIj5FeGNsdXNpZjwvcD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aDEgY2xhc3M9Ik9mZmVyVG9wLXRpdGxlIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBNYWlzb24KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA1IHBpw6hjZXMgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIMOgIHZlbmRyZQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2gxPgogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9Ik9mZmVyVG9wLWZhdiI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIGNsYXNzPSJGYXZCdG4gRmF2QnRuLS1pbmFjdGl2ZSIgYXJpYS1sYWJlbD0iQWpvdXRlciBhdXggZmF2b3JpcyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHN2ZyBjbGFzcz0iaWNvbiIgc3R5bGU9IndpZHRoOjE1cHg7aGVpZ2h0OjE1cHgiIGFyaWEtaGlkZGVuPSJ0cnVlIj48dXNlIHhsaW5rOmhyZWY9Ii9idW5kbGVzL2ZvbmNpYWludGVybmV0L3N2Zy9pY29ucy5zdmcjSWNvbi0tc3RhcjIiPjwvdXNlPjwvc3ZnPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9idXR0b24+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvcD4KCiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Ik9mZmVyVG9wLWNvbHMiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iT2ZmZXJUb3AtY29sIE9mZmVyVG9wLWNvbC0tbGVmdCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9Ik9mZmVyVG9wLXByaWNlIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDUyMCAwMDAmbmJzcDvigqwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3A+CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJPZmZlclRvcC1pbmZvIj5Ib25vcmFpcmVzIGQnYWdlbmNlIMOgIGxhIGNoYXJnZSBkdSB2ZW5kZXVyPC9wPgoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0iT2ZmZXJUb3AtbG9jIiBkYXRhLWd0bS16aXBjb2RlPSI3ODgwMCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzdmcgY2xhc3M9Imljb24iIHN0eWxlPSJ3aWR0aDoxNnB4O2hlaWdodDoxNnB4IiBhcmlhLWhpZGRlbj0idHJ1ZSI+PHVzZSB4bGluazpocmVmPSIvYnVuZGxlcy9mb25jaWFpbnRlcm5ldC9zdmcvaWNvbnMuc3ZnI0ljb24tLXBvaW50ZXIzIj48L3VzZT48L3N2Zz4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgNzg4MDAgSG91aWxsZXMgKDc4ODAwKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iT2ZmZXJUb3AtY29sIE9mZmVyVG9wLWNvbC0tcmlnaHQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Ik1pbmlEYXRhIE1pbmlEYXRhLS1mbGV4Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iTWluaURhdGEtcm93IE1pbmlEYXRhLXJvdy0tYmciPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0iTWluaURhdGEtaXRlbSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDEwMCBtPHN1cD4yPC9zdXA+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9Ik1pbmlEYXRhLWl0ZW0iPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA1IHBpw6hjZXMgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJNaW5pRGF0YS1pdGVtIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgMyBjaGFtYnJlcyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Ik9mZmVyU2xpZGVyIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJPZmZlclNsaWRlci1tYWluIiBpZD0iT2ZmZXJTbGlkZXJNYWluIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHVsIGNsYXNzPSJPZmZlclNsaWRlci1tYWluLXNsaWRlcyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaSBjbGFzcz0iT2ZmZXJTbGlkZXItbWFpbi1pdGVtIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBzcmM9Imh0dHA6Ly9waG90b3MuZnIuZm9uY2lhLmNvbS9taW5pY3AvNjQwLzQ4MC9waG90b3MvMTM4OS83OTMvMTM4OTc5My9ncmFuZC8xMzg5NzkzX2JlOTI0MmI3ZTQxNjVjOWQ1YTVmZjkyYWE3Y2JlNTlmNWViZTNlZTgxNmEzNy5qcGc/ZGF0ZW1haj0yMDIwLTA1LTI1IDE1OjMzOjMwLjk0MSIgd2lkdGg9IjYwMCIgaGVpZ2h0PSI0NTAiIGFsdD0iTWFpc29uIMOgIHZlbmRyZSwgSG91aWxsZXMgKDc4ODAwKSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpIGNsYXNzPSJPZmZlclNsaWRlci1tYWluLWl0ZW0iPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW1nIHNyYz0iaHR0cDovL3Bob3Rvcy5mci5mb25jaWEuY29tL21pbmljcC82NDAvNDgwL3Bob3Rvcy8xMzg5Lzc5My8xMzg5NzkzL2dyYW5kLzEzODk3OTNfYmMwYzY5Yjc1MjMxMDE5YWQxYzk1ZWZjZTdjNDc2YzY1ZWJlM2VlNjI2NThkLmpwZz9kYXRlbWFqPTIwMjAtMDUtMjUgMTU6MzM6MzAuOTcyIiB3aWR0aD0iNjAwIiBoZWlnaHQ9IjQ1MCIgYWx0PSJNYWlzb24gw6AgdmVuZHJlLCBIb3VpbGxlcyAoNzg4MDApIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGkgY2xhc3M9Ik9mZmVyU2xpZGVyLW1haW4taXRlbSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgc3JjPSJodHRwOi8vcGhvdG9zLmZyLmZvbmNpYS5jb20vbWluaWNwLzY0MC80ODAvcGhvdG9zLzEzODkvNzkzLzEzODk3OTMvZ3JhbmQvMTM4OTc5M19lNzMwNTRjMDE2NzNhNzBhM2Y4MjE5NDE2MmM1YjM3ODVlYmUzZWU2OGYyNjYuanBnP2RhdGVtYWo9MjAyMC0wNS0yNSAxNTozMzozMS4wMDMiIHdpZHRoPSI2MDAiIGhlaWdodD0iNDUwIiBhbHQ9Ik1haXNvbiDDoCB2ZW5kcmUsIEhvdWlsbGVzICg3ODgwMCkiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaSBjbGFzcz0iT2ZmZXJTbGlkZXItbWFpbi1pdGVtIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBzcmM9Imh0dHA6Ly9waG90b3MuZnIuZm9uY2lhLmNvbS9taW5pY3AvNjQwLzQ4MC9waG90b3MvMTM4OS83OTMvMTM4OTc5My9ncmFuZC8xMzg5NzkzXzA5ZWYxMGVhMDNjNWIxMTAwNzk3OGU3ZjYyMGZhZTZjNWViZTNlZTc0ZTJmOS5qcGc/ZGF0ZW1haj0yMDIwLTA1LTI1IDE1OjMzOjMxLjMzMSIgd2lkdGg9IjYwMCIgaGVpZ2h0PSI0NTAiIGFsdD0iTWFpc29uIMOgIHZlbmRyZSwgSG91aWxsZXMgKDc4ODAwKSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpIGNsYXNzPSJPZmZlclNsaWRlci1tYWluLWl0ZW0iPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW1nIHNyYz0iaHR0cDovL3Bob3Rvcy5mci5mb25jaWEuY29tL21pbmljcC82NDAvNDgwL3Bob3Rvcy8xMzg5Lzc5My8xMzg5NzkzL2dyYW5kLzEzODk3OTNfN2M3NTIwMTY3ODBmODQyZDY1ZThmOTgzN2VkOTJjZTY1ZWJlM2VlODg3ZWVhLmpwZz9kYXRlbWFqPTIwMjAtMDUtMjUgMTU6MzM6MzEuMzQ2IiB3aWR0aD0iNjAwIiBoZWlnaHQ9IjQ1MCIgYWx0PSJNYWlzb24gw6AgdmVuZHJlLCBIb3VpbGxlcyAoNzg4MDApIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGkgY2xhc3M9Ik9mZmVyU2xpZGVyLW1haW4taXRlbSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgc3JjPSJodHRwOi8vcGhvdG9zLmZyLmZvbmNpYS5jb20vbWluaWNwLzY0MC80ODAvcGhvdG9zLzEzODkvNzkzLzEzODk3OTMvZ3JhbmQvMTM4OTc5M19iYjViMzExMDUyYzEyMTk0MTM2NGQ4YzFlODUwZDFjMDVlYmUzZWU5ODBkZWIuanBnP2RhdGVtYWo9MjAyMC0wNS0yNSAxNTozMzozMS40NTUiIHdpZHRoPSI2MDAiIGhlaWdodD0iNDUwIiBhbHQ9Ik1haXNvbiDDoCB2ZW5kcmUsIEhvdWlsbGVzICg3ODgwMCkiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaSBjbGFzcz0iT2ZmZXJTbGlkZXItbWFpbi1pdGVtIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBzcmM9Imh0dHA6Ly9waG90b3MuZnIuZm9uY2lhLmNvbS9taW5pY3AvNjQwLzQ4MC9waG90b3MvMTM4OS83OTMvMTM4OTc5My9ncmFuZC8xMzg5NzkzXzU0ZWJjMDU5YTU5ZjQwZWUwMTQxODlmMDYzNTMwMmNjNWViZTNlZTllOTA3Yi5qcGc/ZGF0ZW1haj0yMDIwLTA1LTI1IDE1OjMzOjMxLjQ3MSIgd2lkdGg9IjYwMCIgaGVpZ2h0PSI0NTAiIGFsdD0iTWFpc29uIMOgIHZlbmRyZSwgSG91aWxsZXMgKDc4ODAwKSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpIGNsYXNzPSJPZmZlclNsaWRlci1tYWluLWl0ZW0iPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW1nIHNyYz0iaHR0cDovL3Bob3Rvcy5mci5mb25jaWEuY29tL21pbmljcC82NDAvNDgwL3Bob3Rvcy8xMzg5Lzc5My8xMzg5NzkzL2dyYW5kLzEzODk3OTNfNjU2ZGM4MzIyYjNiMjQ5ODBjNThkMDc1NzZjNzQyZDU1ZWJlM2VlYTVkZWIyLmpwZz9kYXRlbWFqPTIwMjAtMDUtMjUgMTU6MzM6MzEuNzk5IiB3aWR0aD0iNjAwIiBoZWlnaHQ9IjQ1MCIgYWx0PSJNYWlzb24gw6AgdmVuZHJlLCBIb3VpbGxlcyAoNzg4MDApIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGkgY2xhc3M9Ik9mZmVyU2xpZGVyLW1haW4taXRlbSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgc3JjPSJodHRwOi8vcGhvdG9zLmZyLmZvbmNpYS5jb20vbWluaWNwLzY0MC80ODAvcGhvdG9zLzEzODkvNzkzLzEzODk3OTMvZ3JhbmQvMTM4OTc5M19mZjc1MDZiMjdjZmM1MzUwNjA1NmU4NmI5YjAzNjUyNjVlYmUzZWVhY2E4ZGYuanBnP2RhdGVtYWo9MjAyMC0wNS0yNSAxNTozMzozMS44MzAiIHdpZHRoPSI2MDAiIGhlaWdodD0iNDUwIiBhbHQ9Ik1haXNvbiDDoCB2ZW5kcmUsIEhvdWlsbGVzICg3ODgwMCkiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaSBjbGFzcz0iT2ZmZXJTbGlkZXItbWFpbi1pdGVtIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBzcmM9Imh0dHA6Ly9waG90b3MuZnIuZm9uY2lhLmNvbS9taW5pY3AvNjQwLzQ4MC9waG90b3MvMTM4OS83OTMvMTM4OTc5My9ncmFuZC8xMzg5NzkzXzY1N2NmYjFkNmFmOTAwYTA4M2FiYmJjOTM4YzQyZTBhNWViZTNlZWIzYTNhNC5qcGc/ZGF0ZW1haj0yMDIwLTA1LTI1IDE1OjMzOjMyLjIwNCIgd2lkdGg9IjYwMCIgaGVpZ2h0PSI0NTAiIGFsdD0iTWFpc29uIMOgIHZlbmRyZSwgSG91aWxsZXMgKDc4ODAwKSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpIGNsYXNzPSJPZmZlclNsaWRlci1tYWluLWl0ZW0iPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW1nIHNyYz0iaHR0cDovL3Bob3Rvcy5mci5mb25jaWEuY29tL21pbmljcC82NDAvNDgwL3Bob3Rvcy8xMzg5Lzc5My8xMzg5NzkzL2dyYW5kLzEzODk3OTNfYTdmYjY5YzhkMDgzOTY1YTE0NWNlOGUwZjVmMjVhOTY1ZWJlM2VlYmEyMzZmLmpwZz9kYXRlbWFqPTIwMjAtMDUtMjUgMTU6MzM6MzIuMjIwIiB3aWR0aD0iNjAwIiBoZWlnaHQ9IjQ1MCIgYWx0PSJNYWlzb24gw6AgdmVuZHJlLCBIb3VpbGxlcyAoNzg4MDApIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGkgY2xhc3M9Ik9mZmVyU2xpZGVyLW1haW4taXRlbSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgc3JjPSJodHRwOi8vcGhvdG9zLmZyLmZvbmNpYS5jb20vbWluaWNwLzY0MC80ODAvcGhvdG9zLzEzODkvNzkzLzEzODk3OTMvZ3JhbmQvMTM4OTc5M18yYzdmNmJmNjBlNTg1MWQyODczYmQ2MjkyZDRkZDAwYjVlYmUzZWU1YjU0ZGIuanBnP2RhdGVtYWo9MjAyMC0wNS0yNSAxNTozMzozMi4yNTEiIHdpZHRoPSI2MDAiIGhlaWdodD0iNDUwIiBhbHQ9Ik1haXNvbiDDoCB2ZW5kcmUsIEhvdWlsbGVzICg3ODgwMCkiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaSBjbGFzcz0iT2ZmZXJTbGlkZXItbWFpbi1pdGVtIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBzcmM9Imh0dHA6Ly9waG90b3MuZnIuZm9uY2lhLmNvbS9taW5pY3AvNjQwLzQ4MC9waG90b3MvMTM4OS83OTMvMTM4OTc5My9ncmFuZC8xMzg5NzkzXzhlMTgxZjYwY2E1OTFiNjljOTZmOGM3ODBlY2ZjZDFjNWViZTNlZTU0MDczMy5qcGc/ZGF0ZW1haj0yMDIwLTA1LTI1IDE1OjMzOjMyLjI4MiIgd2lkdGg9IjYwMCIgaGVpZ2h0PSI0NTAiIGFsdD0iTWFpc29uIMOgIHZlbmRyZSwgSG91aWxsZXMgKDc4ODAwKSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdWw+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJPZmZlclNsaWRlci1tYWluLWNvdW50Ij48L3A+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Ik9mZmVyU2xpZGVyLWNvbnRhaW5lciI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Ik9mZmVyU2xpZGVyLXRodW1icyBPZmZlclNsaWRlci10aHVtYnMtLW1pbmkiIGlkPSJPZmZlclNsaWRlclRodW1icyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dWwgY2xhc3M9Ik9mZmVyU2xpZGVyLXRodW1icy1zbGlkZXMiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaSBjbGFzcz0iT2ZmZXJTbGlkZXItdGh1bWJzLWl0ZW0iPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBzcmM9Imh0dHA6Ly9waG90b3MuZnIuZm9uY2lhLmNvbS9taW5pY3AvNjQwLzQ4MC9waG90b3MvMTM4OS83OTMvMTM4OTc5My9ncmFuZC8xMzg5NzkzX2JlOTI0MmI3ZTQxNjVjOWQ1YTVmZjkyYWE3Y2JlNTlmNWViZTNlZTgxNmEzNy5qcGc/ZGF0ZW1haj0yMDIwLTA1LTI1IDE1OjMzOjMwLjk0MSIgd2lkdGg9IjYwMCIgaGVpZ2h0PSI0NTAiIGFsdD0iTWFpc29uIMOgIHZlbmRyZSwgSG91aWxsZXMgKDc4ODAwKSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpIGNsYXNzPSJPZmZlclNsaWRlci10aHVtYnMtaXRlbSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW1nIHNyYz0iaHR0cDovL3Bob3Rvcy5mci5mb25jaWEuY29tL21pbmljcC82NDAvNDgwL3Bob3Rvcy8xMzg5Lzc5My8xMzg5NzkzL2dyYW5kLzEzODk3OTNfYmMwYzY5Yjc1MjMxMDE5YWQxYzk1ZWZjZTdjNDc2YzY1ZWJlM2VlNjI2NThkLmpwZz9kYXRlbWFqPTIwMjAtMDUtMjUgMTU6MzM6MzAuOTcyIiB3aWR0aD0iNjAwIiBoZWlnaHQ9IjQ1MCIgYWx0PSJNYWlzb24gw6AgdmVuZHJlLCBIb3VpbGxlcyAoNzg4MDApIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGkgY2xhc3M9Ik9mZmVyU2xpZGVyLXRodW1icy1pdGVtIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgc3JjPSJodHRwOi8vcGhvdG9zLmZyLmZvbmNpYS5jb20vbWluaWNwLzY0MC80ODAvcGhvdG9zLzEzODkvNzkzLzEzODk3OTMvZ3JhbmQvMTM4OTc5M19lNzMwNTRjMDE2NzNhNzBhM2Y4MjE5NDE2MmM1YjM3ODVlYmUzZWU2OGYyNjYuanBnP2RhdGVtYWo9MjAyMC0wNS0yNSAxNTozMzozMS4wMDMiIHdpZHRoPSI2MDAiIGhlaWdodD0iNDUwIiBhbHQ9Ik1haXNvbiDDoCB2ZW5kcmUsIEhvdWlsbGVzICg3ODgwMCkiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaSBjbGFzcz0iT2ZmZXJTbGlkZXItdGh1bWJzLWl0ZW0iPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBzcmM9Imh0dHA6Ly9waG90b3MuZnIuZm9uY2lhLmNvbS9taW5pY3AvNjQwLzQ4MC9waG90b3MvMTM4OS83OTMvMTM4OTc5My9ncmFuZC8xMzg5NzkzXzA5ZWYxMGVhMDNjNWIxMTAwNzk3OGU3ZjYyMGZhZTZjNWViZTNlZTc0ZTJmOS5qcGc/ZGF0ZW1haj0yMDIwLTA1LTI1IDE1OjMzOjMxLjMzMSIgd2lkdGg9IjYwMCIgaGVpZ2h0PSI0NTAiIGFsdD0iTWFpc29uIMOgIHZlbmRyZSwgSG91aWxsZXMgKDc4ODAwKSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpIGNsYXNzPSJPZmZlclNsaWRlci10aHVtYnMtaXRlbSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW1nIHNyYz0iaHR0cDovL3Bob3Rvcy5mci5mb25jaWEuY29tL21pbmljcC82NDAvNDgwL3Bob3Rvcy8xMzg5Lzc5My8xMzg5NzkzL2dyYW5kLzEzODk3OTNfN2M3NTIwMTY3ODBmODQyZDY1ZThmOTgzN2VkOTJjZTY1ZWJlM2VlODg3ZWVhLmpwZz9kYXRlbWFqPTIwMjAtMDUtMjUgMTU6MzM6MzEuMzQ2IiB3aWR0aD0iNjAwIiBoZWlnaHQ9IjQ1MCIgYWx0PSJNYWlzb24gw6AgdmVuZHJlLCBIb3VpbGxlcyAoNzg4MDApIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGkgY2xhc3M9Ik9mZmVyU2xpZGVyLXRodW1icy1pdGVtIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgc3JjPSJodHRwOi8vcGhvdG9zLmZyLmZvbmNpYS5jb20vbWluaWNwLzY0MC80ODAvcGhvdG9zLzEzODkvNzkzLzEzODk3OTMvZ3JhbmQvMTM4OTc5M19iYjViMzExMDUyYzEyMTk0MTM2NGQ4YzFlODUwZDFjMDVlYmUzZWU5ODBkZWIuanBnP2RhdGVtYWo9MjAyMC0wNS0yNSAxNTozMzozMS40NTUiIHdpZHRoPSI2MDAiIGhlaWdodD0iNDUwIiBhbHQ9Ik1haXNvbiDDoCB2ZW5kcmUsIEhvdWlsbGVzICg3ODgwMCkiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaSBjbGFzcz0iT2ZmZXJTbGlkZXItdGh1bWJzLWl0ZW0iPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBzcmM9Imh0dHA6Ly9waG90b3MuZnIuZm9uY2lhLmNvbS9taW5pY3AvNjQwLzQ4MC9waG90b3MvMTM4OS83OTMvMTM4OTc5My9ncmFuZC8xMzg5NzkzXzU0ZWJjMDU5YTU5ZjQwZWUwMTQxODlmMDYzNTMwMmNjNWViZTNlZTllOTA3Yi5qcGc/ZGF0ZW1haj0yMDIwLTA1LTI1IDE1OjMzOjMxLjQ3MSIgd2lkdGg9IjYwMCIgaGVpZ2h0PSI0NTAiIGFsdD0iTWFpc29uIMOgIHZlbmRyZSwgSG91aWxsZXMgKDc4ODAwKSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpIGNsYXNzPSJPZmZlclNsaWRlci10aHVtYnMtaXRlbSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW1nIHNyYz0iaHR0cDovL3Bob3Rvcy5mci5mb25jaWEuY29tL21pbmljcC82NDAvNDgwL3Bob3Rvcy8xMzg5Lzc5My8xMzg5NzkzL2dyYW5kLzEzODk3OTNfNjU2ZGM4MzIyYjNiMjQ5ODBjNThkMDc1NzZjNzQyZDU1ZWJlM2VlYTVkZWIyLmpwZz9kYXRlbWFqPTIwMjAtMDUtMjUgMTU6MzM6MzEuNzk5IiB3aWR0aD0iNjAwIiBoZWlnaHQ9IjQ1MCIgYWx0PSJNYWlzb24gw6AgdmVuZHJlLCBIb3VpbGxlcyAoNzg4MDApIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGkgY2xhc3M9Ik9mZmVyU2xpZGVyLXRodW1icy1pdGVtIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgc3JjPSJodHRwOi8vcGhvdG9zLmZyLmZvbmNpYS5jb20vbWluaWNwLzY0MC80ODAvcGhvdG9zLzEzODkvNzkzLzEzODk3OTMvZ3JhbmQvMTM4OTc5M19mZjc1MDZiMjdjZmM1MzUwNjA1NmU4NmI5YjAzNjUyNjVlYmUzZWVhY2E4ZGYuanBnP2RhdGVtYWo9MjAyMC0wNS0yNSAxNTozMzozMS44MzAiIHdpZHRoPSI2MDAiIGhlaWdodD0iNDUwIiBhbHQ9Ik1haXNvbiDDoCB2ZW5kcmUsIEhvdWlsbGVzICg3ODgwMCkiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaSBjbGFzcz0iT2ZmZXJTbGlkZXItdGh1bWJzLWl0ZW0iPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBzcmM9Imh0dHA6Ly9waG90b3MuZnIuZm9uY2lhLmNvbS9taW5pY3AvNjQwLzQ4MC9waG90b3MvMTM4OS83OTMvMTM4OTc5My9ncmFuZC8xMzg5NzkzXzY1N2NmYjFkNmFmOTAwYTA4M2FiYmJjOTM4YzQyZTBhNWViZTNlZWIzYTNhNC5qcGc/ZGF0ZW1haj0yMDIwLTA1LTI1IDE1OjMzOjMyLjIwNCIgd2lkdGg9IjYwMCIgaGVpZ2h0PSI0NTAiIGFsdD0iTWFpc29uIMOgIHZlbmRyZSwgSG91aWxsZXMgKDc4ODAwKSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpIGNsYXNzPSJPZmZlclNsaWRlci10aHVtYnMtaXRlbSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW1nIHNyYz0iaHR0cDovL3Bob3Rvcy5mci5mb25jaWEuY29tL21pbmljcC82NDAvNDgwL3Bob3Rvcy8xMzg5Lzc5My8xMzg5NzkzL2dyYW5kLzEzODk3OTNfYTdmYjY5YzhkMDgzOTY1YTE0NWNlOGUwZjVmMjVhOTY1ZWJlM2VlYmEyMzZmLmpwZz9kYXRlbWFqPTIwMjAtMDUtMjUgMTU6MzM6MzIuMjIwIiB3aWR0aD0iNjAwIiBoZWlnaHQ9IjQ1MCIgYWx0PSJNYWlzb24gw6AgdmVuZHJlLCBIb3VpbGxlcyAoNzg4MDApIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGkgY2xhc3M9Ik9mZmVyU2xpZGVyLXRodW1icy1pdGVtIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgc3JjPSJodHRwOi8vcGhvdG9zLmZyLmZvbmNpYS5jb20vbWluaWNwLzY0MC80ODAvcGhvdG9zLzEzODkvNzkzLzEzODk3OTMvZ3JhbmQvMTM4OTc5M18yYzdmNmJmNjBlNTg1MWQyODczYmQ2MjkyZDRkZDAwYjVlYmUzZWU1YjU0ZGIuanBnP2RhdGVtYWo9MjAyMC0wNS0yNSAxNTozMzozMi4yNTEiIHdpZHRoPSI2MDAiIGhlaWdodD0iNDUwIiBhbHQ9Ik1haXNvbiDDoCB2ZW5kcmUsIEhvdWlsbGVzICg3ODgwMCkiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaSBjbGFzcz0iT2ZmZXJTbGlkZXItdGh1bWJzLWl0ZW0iPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBzcmM9Imh0dHA6Ly9waG90b3MuZnIuZm9uY2lhLmNvbS9taW5pY3AvNjQwLzQ4MC9waG90b3MvMTM4OS83OTMvMTM4OTc5My9ncmFuZC8xMzg5NzkzXzhlMTgxZjYwY2E1OTFiNjljOTZmOGM3ODBlY2ZjZDFjNWViZTNlZTU0MDczMy5qcGc/ZGF0ZW1haj0yMDIwLTA1LTI1IDE1OjMzOjMyLjI4MiIgd2lkdGg9IjYwMCIgaGVpZ2h0PSI0NTAiIGFsdD0iTWFpc29uIMOgIHZlbmRyZSwgSG91aWxsZXMgKDc4ODAwKSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdWw+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0iT2ZmZXJTbGlkZXItZXh0cmEiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGNsYXNzPSJPZmZlclNsaWRlci1leHRyYS1idG4iIGhyZWY9Imh0dHBzOi8vbGl2ZXRvdXIuaXN0YWdpbmcuY29tL2U1MDE0NDk1LTNlYjYtNDk4Mi04NmVhLTljZTQ3NTJmOThjZiIgdGFyZ2V0PSJfYmxhbmsiID4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHN2ZyBjbGFzcz0iaWNvbiIgc3R5bGU9IndpZHRoOjMwcHg7aGVpZ2h0OjMwcHgiIGFyaWEtaGlkZGVuPSJ0cnVlIj48dXNlIHhsaW5rOmhyZWY9Ii9idW5kbGVzL2ZvbmNpYWludGVybmV0L3N2Zy9pY29ucy5zdmcjSWNvbi0tdmlzaXRlMzYwIj48L3VzZT48L3N2Zz4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgVmlzaXRlIDM2MAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBjbGFzcz0iT2ZmZXJTbGlkZXItZXh0cmEtYnRuIiBocmVmPSJodHRwczovL2FwcC5zb2xlbi5jby9jZXJ0aWZpY2F0LXNhMFNjREVfX0owIiB0YXJnZXQ9Il9ibGFuayI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzdmcgY2xhc3M9Imljb24iIHN0eWxlPSJ3aWR0aDozMHB4O2hlaWdodDozMHB4IiBhcmlhLWhpZGRlbj0idHJ1ZSI+PHVzZSB4bGluazpocmVmPSIvYnVuZGxlcy9mb25jaWFpbnRlcm5ldC9zdmcvaWNvbnMuc3ZnI0ljb24tLWVuc29sZWlsbGUiPjwvdXNlPjwvc3ZnPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBDZXJ0aWZpY2F0IGx1bWlub3NpdMOpCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CgoKICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJPZmZlckRldGFpbHMiPgoKICAgICAgICAgICAgICAgICAgICAgICAgPHNlY3Rpb24gY2xhc3M9Ik9mZmVyRGV0YWlscy1zZWN0aW9uIj4KCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0iT2ZmZXJEZXRhaWxzLXJlZiI+UsOpZi4gMTM4OTc5MzwvcD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxoMiBjbGFzcz0iT2ZmZXJEZXRhaWxzLXRpdGxlIj5EZXNjcmlwdGlvbiBkw6l0YWlsbMOpZTwvaDI+CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iT2ZmZXJEZXRhaWxzLWNvbnRlbnQiPgoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cD5Ib3VpbGxlcywgcXVhcnRpZXIgZGUgTGEgTWFpbiBkZSBGZXIsIGlkw6lhbGVtZW50IHNpdHXDqWUsIGFjY8OocyDDoCBsYSBnYXJlIGVuIHNldWxlbWVudCAxMCBtaW4sIHVuIGVudmlyb25uZW1lbnQgY2FsbWUgZXQgcsOpc2lkZW50aWVsLiBOb3VzIHZvdXMgcHJvcG9zb25zIGRlIHZpc2l0ZXIgY2V0dGUgY2hhcm1hbnRlIG1haXNvbiBkZSA1IHBpw6hjZXMgcHJpbmNpcGFsZXMgY29tcG9zw6llIGQndW4gc8Opam91ciBkb3VibGUsIHVuZSBjdWlzaW5lIMOpcXVpcMOpZSwgdW5lIGJ1YW5kZXJpZSwgdW5lIGNoYW1icmUgZW4gcmV6LWRlLWNoYXVzc8OpZS4gQSBsJ8OpdGFnZSwgdW5lIHNhbGxlIGQnZWF1IGV0IGRldXggY2hhbWJyZXMuIEVsbGUgZGlzcG9zZSDDqWdhbGVtZW50IGRlIGNvbWJsZXMgYW3DqW5hZ8OpcyBldCBwb3NzaWJpbGl0w6kgZGUgZmFpcmUgdW5lIHF1YXRyacOobWUgY2hhbWJyZS4gTGUgdG91dCBzdXIgdW4gdGVycmFpbiBkZSAzNzUgbcKyLiBJZMOpYWwgcG91ciB1bmUgZmFtaWxsZS4gQSB2b3RyZSBkaXNwb3NpdGlvbiwgcG91ciB0b3V0IHJlbnNlaWduZW1lbnRzLCBtZSBjb250YWN0ZXIgVGhvbWFzIFNBTlRJQUdPIGF1IDA2LjY3LjE4LjEzLjc3IG91IHBhciBtYWlsIHRob21hcy5zYW50aWFnb0Bmb25jaWEuZnI8L3A+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iT2ZmZXJEZXRhaWxzLWNvbHVtbml6ZSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgZGF0YS13aWRnZXQ9IlRvZ2dsZUJsb2NrTW9iaWxlIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aDMgY2xhc3M9Ik9mZmVyRGV0YWlscy10aXRsZS0tMiIgZGF0YS13aWRnZXQ9IlRvZ2dsZUJsb2NrTW9iaWxlLXRyaWdnZXIiIGRhdGEtYmVoYXQ9ImNhcmFjdER1QmllbiI+Q2FyYWN0w6lyaXN0aXF1ZXMgZGUgbGEgbWFpc29uPC9oMz4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGRhdGEtd2lkZ2V0PSJUb2dnbGVCbG9ja01vYmlsZS1jb250ZW50Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx1bCBjbGFzcz0iTGlzdCBMaXN0LS1kYXRhIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGk+PHNwYW4gY2xhc3M9Ikxpc3QtZGF0YSI+Tm9tYnJlIGRlIHBpw6hjZXM8L3NwYW4+IDxzdHJvbmcgY2xhc3M9Ikxpc3QtdmFsdWUiPjU8L3N0cm9uZz48L2xpPjxsaT48c3BhbiBjbGFzcz0iTGlzdC1kYXRhIj5Db25zdHJ1Y3Rpb248L3NwYW4+IDxzdHJvbmcgY2xhc3M9Ikxpc3QtdmFsdWUiPjE5NTI8L3N0cm9uZz48L2xpPjxsaT48c3BhbiBjbGFzcz0iTGlzdC1kYXRhIj7DiXRhZ2U8L3NwYW4+IDxzdHJvbmcgY2xhc3M9Ikxpc3QtdmFsdWUiPlJEQzwvc3Ryb25nPjwvbGk+PGxpPjxzcGFuIGNsYXNzPSJMaXN0LWRhdGEiPk5vbWJyZSBkZSBjaGFtYnJlczwvc3Bhbj4gPHN0cm9uZyBjbGFzcz0iTGlzdC12YWx1ZSI+Mzwvc3Ryb25nPjwvbGk+PGxpPjxzcGFuIGNsYXNzPSJMaXN0LWRhdGEiPlR5cGUgZGUgY3Vpc2luZTwvc3Bhbj4gPHN0cm9uZyBjbGFzcz0iTGlzdC12YWx1ZSI+SW5kw6lwZW5kYW50ZTwvc3Ryb25nPjwvbGk+PGxpPjxzcGFuIGNsYXNzPSJMaXN0LWRhdGEiPsOJdGF0IGN1aXNpbmU8L3NwYW4+IDxzdHJvbmcgY2xhc3M9Ikxpc3QtdmFsdWUiPkFtw6luYWfDqWUgZXQgw6lxdWlww6llPC9zdHJvbmc+PC9saT48bGk+PHNwYW4gY2xhc3M9Ikxpc3QtZGF0YSI+TW9kZSBjaGF1ZmZhZ2U8L3NwYW4+IDxzdHJvbmcgY2xhc3M9Ikxpc3QtdmFsdWUiPkluZGl2aWR1ZWw8L3N0cm9uZz48L2xpPjxsaT48c3BhbiBjbGFzcz0iTGlzdC1kYXRhIj5OYXR1cmUgY2hhdWZmYWdlPC9zcGFuPiA8c3Ryb25nIGNsYXNzPSJMaXN0LXZhbHVlIj5GdWVsPC9zdHJvbmc+PC9saT48bGk+PHNwYW4gY2xhc3M9J0xpc3QtZGF0YSc+TmIuIFNhbGxlcyBkJ2VhdTwvc3Bhbj4gPHN0cm9uZyBjbGFzcz0nTGlzdC12YWx1ZSc+MTwvc3Ryb25nPjwvbGk+PGxpPjxzcGFuIGNsYXNzPSJMaXN0LWRhdGEiPk5iLiBXQzwvc3Bhbj4gPHN0cm9uZyBjbGFzcz0iTGlzdC12YWx1ZSI+Mjwvc3Ryb25nPjwvbGk+PGxpPjxzcGFuIGNsYXNzPSJMaXN0LWRhdGEiPlR5cGUgZGUgc291cy1zb2w8L3NwYW4+IDxzdHJvbmcgY2xhc3M9Ikxpc3QtdmFsdWUiPlBhcnRpZWw8L3N0cm9uZz48L2xpPjxsaT48c3BhbiBjbGFzcz0iTGlzdC1kYXRhIj5Bc3NhaW5pc3NlbWVudDwvc3Bhbj4gPHN0cm9uZyBjbGFzcz0iTGlzdC12YWx1ZSI+VG91dCDDoCBsJ8OpZ291dDwvc3Ryb25nPjwvbGk+PGxpPjxzcGFuIGNsYXNzPSJMaXN0LWRhdGEiPkNhdMOpZ29yaWU8L3NwYW4+IDxzdHJvbmcgY2xhc3M9Ikxpc3QtdmFsdWUiPkFuY2llbjwvc3Ryb25nPjwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3VsPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHVsIGNsYXNzPSJMaXN0IExpc3QtLWJ1bGxldCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpPk1pdG95ZW5uZXTDqSgpPC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdWw+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBkYXRhLXdpZGdldD0iVG9nZ2xlQmxvY2tNb2JpbGUiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aDMgY2xhc3M9Ik9mZmVyRGV0YWlscy10aXRsZS0tMiIgZGF0YS13aWRnZXQ9IlRvZ2dsZUJsb2NrTW9iaWxlLXRyaWdnZXIiPkluZm9ybWF0aW9uIGNvcHJvcHJpw6l0w6k8L2gzPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGRhdGEtd2lkZ2V0PSJUb2dnbGVCbG9ja01vYmlsZS1jb250ZW50Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHVsIGNsYXNzPSJMaXN0IExpc3QtLWRhdGEiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGk+PHNwYW4gY2xhc3M9Ikxpc3QtZGF0YSI+Q2hhcmdlcyBhbm51ZWxsZXM8L3NwYW4+IDxzdHJvbmcgY2xhc3M9Ikxpc3QtdmFsdWUiPjEyMDAg4oKsPC9zdHJvbmc+PC9saT48bGk+PHNwYW4gY2xhc3M9Ikxpc3QtZGF0YSI+Q29wcm9wcmlldMOpIGVuIGRpZmZpY3VsdMOpPC9zcGFuPiA8c3Ryb25nIGNsYXNzPSJMaXN0LXZhbHVlIj5ub248L3N0cm9uZz48L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdWw+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgZGF0YS13aWRnZXQ9IlRvZ2dsZUJsb2NrTW9iaWxlIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aDMgY2xhc3M9Ik9mZmVyRGV0YWlscy10aXRsZS0tMiIgZGF0YS13aWRnZXQ9IlRvZ2dsZUJsb2NrTW9iaWxlLXRyaWdnZXIiIGRhdGEtYmVoYXQ9InN1cmZhY2VCaWVuIj5TdXJmYWNlczwvaDM+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBkYXRhLXdpZGdldD0iVG9nZ2xlQmxvY2tNb2JpbGUtY29udGVudCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx1bCBjbGFzcz0iTGlzdCBMaXN0LS1kYXRhIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaT48c3BhbiBjbGFzcz0iTGlzdC1kYXRhIj5TdXJmYWNlIGhhYml0YWJsZTwvc3Bhbj4gPHN0cm9uZyBjbGFzcz0iTGlzdC12YWx1ZSI+MTAwIG3Csjwvc3Ryb25nPjwvbGk+PGxpPjxzcGFuIGNsYXNzPSJMaXN0LWRhdGEiPlN1cmZhY2UgdG90YWxlIHRlcnJhaW48L3NwYW4+IDxzdHJvbmcgY2xhc3M9Ikxpc3QtdmFsdWUiPjM3NSBtwrI8L3N0cm9uZz48L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3VsPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAoKCgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGRhdGEtd2lkZ2V0PSJUb2dnbGVCbG9ja01vYmlsZSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGgzIGNsYXNzPSJPZmZlckRldGFpbHMtdGl0bGUtLTIiIGRhdGEtd2lkZ2V0PSJUb2dnbGVCbG9ja01vYmlsZS10cmlnZ2VyIiBkYXRhLWJlaGF0PSJjb21tb2RpdGVzQmllbiI+Q29tbW9kaXTDqXM8L2gzPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgZGF0YS13aWRnZXQ9IlRvZ2dsZUJsb2NrTW9iaWxlLWNvbnRlbnQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dWwgY2xhc3M9Ikxpc3QgTGlzdC0tYnVsbGV0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaT5CYWxjb248L2xpPjxsaT5UZXJyYXNzZTwvbGk+PGxpPkphcmRpbiBwcml2w6k8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3VsPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAoKCgoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBkYXRhLXdpZGdldD0iVG9nZ2xlQmxvY2tNb2JpbGUiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxoMyBjbGFzcz0iT2ZmZXJEZXRhaWxzLXRpdGxlLS0yIiBkYXRhLXdpZGdldD0iVG9nZ2xlQmxvY2tNb2JpbGUtdHJpZ2dlciIgZGF0YS1iZWhhdD0iZGl2ZXJzQmllbiI+RGl2ZXJzPC9oMz4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGRhdGEtd2lkZ2V0PSJUb2dnbGVCbG9ja01vYmlsZS1jb250ZW50Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx1bCBjbGFzcz0iTGlzdCBMaXN0LS1idWxsZXQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaT5FYXU8L2xpPjxsaT5FREY8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC91bD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx1bCBjbGFzcz0iTGlzdCBMaXN0LS1kYXRhIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGk+PHNwYW4gY2xhc3M9Ikxpc3QtZGF0YSI+UGFya2luZyBleHTDqXJpZXVyPC9zcGFuPiA8c3Ryb25nIGNsYXNzPSJMaXN0LXZhbHVlIj4xPC9zdHJvbmc+PC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdWw+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJPZmZlckRldGFpbHMtYmFyZW1lIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cDovL2FnZW5jZS5mb25jaWEuY29tL3NhcnRyb3V2aWxsZS03ODUwMC9hZ2VuY2UtaW1tb2JpbGllcmUvZm9uY2lhLXRyYW5zYWN0aW9uLXNhcnRyb3V2aWxsZS0xMDI0IiByZWw9Im5vZm9sbG93IiB0YXJnZXQ9Il9ibGFuayI+Vm9pciBsZSBiYXLDqG1lIGRlIGwnYWdlbmNlPC9hPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvcD4KCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iTGVnYWxNZW50aW9ucyBMZWdhbE1lbnRpb25zLS1zbWFsbCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgICAgICAgICAgICAgIDwvc2VjdGlvbj4KCiAgICAgICAgICAgICAgICAgICAgICAgIDxzZWN0aW9uIGNsYXNzPSJPZmZlckRldGFpbHMtc2VjdGlvbiIgZGF0YS13aWRnZXQ9IlRvZ2dsZUJsb2NrTW9iaWxlIj4KICAgIDxoMiBjbGFzcz0iT2ZmZXJEZXRhaWxzLXRpdGxlIiBkYXRhLXdpZGdldD0iVG9nZ2xlQmxvY2tNb2JpbGUtdHJpZ2dlciIgZGF0YS1iZWhhdD0iZGlhZ25vc3RpY1BlcmZvcm1hbmNlc0JpZW4iPkRpYWdub3N0aWMgcGVyZm9ybWFuY2VzIMOpbmVyZ8OpdGlxdWVzPC9oMj4KICAgIDxkaXYgY2xhc3M9Ik9mZmVyRGV0YWlscy1jb250ZW50IiBkYXRhLXdpZGdldD0iVG9nZ2xlQmxvY2tNb2JpbGUtY29udGVudCI+CiAgICAgICAgPHAgY2xhc3M9InBvc2l0aW9uTGVmdCI+CiAgICAgICAgICAgIDxpbWcgc3JjPSJodHRwOi8vZHBlLmZvbmNpYS5uZXQvMTc4LzUwLzEvMjAwLzIwMC8xLzAvZGlhZ3JhbW1lRW5lcmdpZS5wbmciIGFsdD0iRGlhZ3JhbW1lIMOpbmVyZ2V0aXF1ZSIgd2lkdGg9IjIwMCIgaGVpZ2h0PSIyMDAiIC8+CiAgICAgICAgPC9wPgogICAgICAgIDxwIGNsYXNzPSJ0ZXh0U21hbGwiPkNvbnNvbW1hdGlvbnMgw6luZXJnw6l0aXF1ZXMgKGVuIMOpbmVyZ2llIHByaW1haXJlKSBwb3VyIGxlIGNoYXVmZmFnZSwgbGEgcHJvZHVjdGlvbiBkJ2VhdSwgY2hhdWRlIHNhbml0YWlyZSBldCBsZSByZWZyb2lkaXNzZW1lbnQuPC9wPgogICAgICAgIDxwIGNsYXNzPSJ0ZXh0U21hbGwiPkluZGljZSBkZSBtZXN1cmUgOiBrV2hFUC9tJnN1cDI7LmFuPC9wPgogICAgPC9kaXY+Cjwvc2VjdGlvbj4KCjxzZWN0aW9uIGNsYXNzPSJPZmZlckRldGFpbHMtc2VjdGlvbiIgZGF0YS13aWRnZXQ9IlRvZ2dsZUJsb2NrTW9iaWxlIj4KICAgIDxoMiBjbGFzcz0iT2ZmZXJEZXRhaWxzLXRpdGxlIiBkYXRhLXdpZGdldD0iVG9nZ2xlQmxvY2tNb2JpbGUtdHJpZ2dlciIgZGF0YS1iZWhhdD0iZ2F6RWZmZXRTZXJyZUJpZW4iPkdheiDDoCBFZmZldCBkZSBTZXJyZTwvaDI+CiAgICA8ZGl2IGNsYXNzPSJPZmZlckRldGFpbHMtY29udGVudCIgZGF0YS13aWRnZXQ9IlRvZ2dsZUJsb2NrTW9iaWxlLWNvbnRlbnQiPgogICAgICAgIDxwIGNsYXNzPSJwb3NpdGlvbkxlZnQiPgogICAgICAgICAgICA8aW1nIHNyYz0iaHR0cDovL2RwZS5mb25jaWEubmV0LzE3OC81MC8xLzIwMC8yMDAvMi8wL2RpYWdyYW1tZUVuZXJnaWUucG5nIiBhbHQ9IkdheiDDoCBFZmZldCBkZSBTZXJyZSIgd2lkdGg9IjIwMCIgaGVpZ2h0PSIyMDAiIC8+CiAgICAgICAgPC9wPgogICAgICAgIDxwIGNsYXNzPSJ0ZXh0U21hbGwiPkluZGljYXRldXIgcXVpIHJhcHBvcnRlIGxhIHF1YW50aXTDqSBkZSBnYXogw6AgZWZmZXQgZGUgc2VycmUgw6ltaXMsIG1lc3Vyw6llIHBhciBzb24gw6lxdWl2YWxlbnQgZW4gZGlveHlkZSBkZSBjYXJib25lLCBhdSBwcm9kdWl0IGludMOpcmlldXIgYnJ1dC48L3A+CiAgICAgICAgPHAgY2xhc3M9InRleHRTbWFsbCI+SW5kaWNlIGRlIG1lc3VyZSA6IEtnw6lxQ08yL20mc3VwMjsuYW48L3A+CiAgICA8L2Rpdj4KPC9zZWN0aW9uPgoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICAgICAgICAgIAo8cCBjbGFzcz0iU2hhcmUiPgogICAgPGEgaWQ9IkZhY2Vib29rIiBocmVmPSJodHRwczovL3d3dy5mYWNlYm9vay5jb20vc2hhcmVyL3NoYXJlci5waHA/dT1odHRwczovL2ZyLmZvbmNpYS5jb20vYWNoYXQvaG91aWxsZXMtNzg4MDAvbWFpc29uLzEzODk3OTMuaHRtIiB0YXJnZXQ9Il9ibGFuayIgY2xhc3M9IlNoYXJlLWl0ZW0gU2hhcmUtRmFjZWJvb2siPgogICAgICAgIDxzdmcgY2xhc3M9Imljb24iIHN0eWxlPSJ3aWR0aDoyNHB4O2hlaWdodDoyNHB4IiBhcmlhLWhpZGRlbj0idHJ1ZSI+PHVzZSB4bGluazpocmVmPSIvYnVuZGxlcy9mb25jaWFpbnRlcm5ldC9zdmcvaWNvbnMuc3ZnI0ljb24tLWZhY2Vib29rIj48L3VzZT48L3N2Zz4KICAgICAgICA8c3BhbiBjbGFzcz0iU2hhcmUtbGFiZWwiPlBhcnRhZ2VyIGNlIGNvbnRlbnUgc3VyIEZhY2Vib29rPC9zcGFuPgogICAgPC9hPgoKICAgIDxhIGlkPSJUd2l0dGVyIiBjbGFzcz0iU2hhcmUtaXRlbSIKICAgICAgIGhyZWY9Imh0dHBzOi8vdHdpdHRlci5jb20vaW50ZW50L3R3ZWV0P3RleHQ9TWFpc29uIDUgcGnDqGNlcyDDoCB2ZW5kcmUmdXJsPWh0dHBzJTNBJTJGJTJGZnIuZm9uY2lhLmNvbSUyRmFjaGF0JTJGaG91aWxsZXMtNzg4MDAlMkZtYWlzb24lMkYxMzg5NzkzLmh0bSZ2aWE9Zm9uY2lhIgogICAgICAgICAgICAgIGRhdGEtc2l6ZT0ibGFyZ2UiCiAgICAgICB0YXJnZXQ9Il9ibGFuayIgPgogICAgICAgIDxzdmcgY2xhc3M9Imljb24iIHN0eWxlPSJ3aWR0aDoyNHB4O2hlaWdodDoyNHB4IiBhcmlhLWhpZGRlbj0idHJ1ZSI+PHVzZSB4bGluazpocmVmPSIvYnVuZGxlcy9mb25jaWFpbnRlcm5ldC9zdmcvaWNvbnMuc3ZnI0ljb24tLXR3aXR0ZXIiPjwvdXNlPjwvc3ZnPgogICAgICAgIDxzcGFuIGNsYXNzPSJTaGFyZS1sYWJlbCI+UGFydGFnZXIgY2UgY29udGVudSBzdXIgVHdpdHRlcjwvc3Bhbj4KICAgIDwvYT4KCiAgICA8YSBpZD0iR29vZ2xlKyIgY2xhc3M9IlNoYXJlLWl0ZW0iIGhyZWY9Imh0dHBzOi8vcGx1cy5nb29nbGUuY29tL3NoYXJlP3VybD1odHRwcyUzQSUyRiUyRmZyLmZvbmNpYS5jb20lMkZhY2hhdCUyRmhvdWlsbGVzLTc4ODAwJTJGbWFpc29uJTJGMTM4OTc5My5odG0iIG9uY2xpY2s9ImphdmFzY3JpcHQ6d2luZG93Lm9wZW4odGhpcy5ocmVmLCcnLCAnbWVudWJhcj1ubyx0b29sYmFyPW5vLHJlc2l6YWJsZT15ZXMsc2Nyb2xsYmFycz15ZXMsaGVpZ2h0PTYwMCx3aWR0aD02MDAnKTtyZXR1cm4gZmFsc2U7Ij4KICAgICAgICA8c3ZnIGNsYXNzPSJpY29uIiBzdHlsZT0id2lkdGg6MjRweDtoZWlnaHQ6MjRweCIgYXJpYS1oaWRkZW49InRydWUiPjx1c2UgeGxpbms6aHJlZj0iL2J1bmRsZXMvZm9uY2lhaW50ZXJuZXQvc3ZnL2ljb25zLnN2ZyNJY29uLS1nb29nbGUiPjwvdXNlPjwvc3ZnPgogICAgICAgIDxzcGFuIGNsYXNzPSJTaGFyZS1sYWJlbCI+UGFydGFnZXIgY2UgY29udGVudSBzdXIgR29vZ2xlICs8L3NwYW4+CiAgICA8L2E+CgogICAgPGEgY2xhc3M9IlNoYXJlLWl0ZW0gTW9kYWwtbGluay0tYWpheCIgaHJlZj0iL3NoYXJlLWNvbnRlbnQtcG9waW4vaHR0cHMlMjUzQSUyNTJGJTI1MkZmci5mb25jaWEuY29tJTI1MkZhY2hhdCUyNTJGaG91aWxsZXMtNzg4MDAlMjUyRm1haXNvbiUyNTJGMTM4OTc5My5odG0iPgogICAgICAgIDxzdmcgY2xhc3M9Imljb24iIHN0eWxlPSJ3aWR0aDoyNHB4O2hlaWdodDoyNHB4IiBhcmlhLWhpZGRlbj0idHJ1ZSI+PHVzZSB4bGluazpocmVmPSIvYnVuZGxlcy9mb25jaWFpbnRlcm5ldC9zdmcvaWNvbnMuc3ZnI0ljb24tLWVudmVsb3BlIj48L3VzZT48L3N2Zz4KICAgICAgICA8c3BhbiBjbGFzcz0iU2hhcmUtbGFiZWwiPkVudm95ZXIgY2UgY29udGVudSDDoCB1biBhbWk8L3NwYW4+CiAgICA8L2E+CgogICAgPGJ1dHRvbiBvbmNsaWNrPSJqYXZhc2NyaXB0OndpbmRvdy5wcmludCgpIiBjbGFzcz0iU2hhcmUtaXRlbSI+CiAgICAgICAgPHN2ZyBjbGFzcz0iaWNvbiIgc3R5bGU9IndpZHRoOjI0cHg7aGVpZ2h0OjI0cHgiIGFyaWEtaGlkZGVuPSJ0cnVlIj48dXNlIHhsaW5rOmhyZWY9Ii9idW5kbGVzL2ZvbmNpYWludGVybmV0L3N2Zy9pY29ucy5zdmcjSWNvbi0tcHJpbnRlciI+PC91c2U+PC9zdmc+CiAgICAgICAgPHNwYW4gY2xhc3M9IlNoYXJlLWxhYmVsIj5JbXByaW1lciBjZSBjb250ZW51PC9zcGFuPgogICAgPC9idXR0b24+CjwvcD4KCgogICAgICAgICAgICAgICAgPC9tYWluPgoKCgogICAgICAgICAgICAgICAgPGFzaWRlIGNsYXNzPSJDb250ZW50LXNpZGViYXIgU2lkZWJhciI+CiAgICAgICAgICAgICAgICAgICAgCiAgICAKCgo8c2VjdGlvbiBjbGFzcz0iT2ZmZXJDb250YWN0Ij4KICAgIDxoMiBjbGFzcz0iT2ZmZXJDb250YWN0LXRpdGxlIj5Db250YWN0ZXIgbCdhZ2VuY2U8L2gyPgogICAgPHNwYW4gY2xhc3M9ImhpZGRlbiIgZGF0YS1pbmZvPSJpZC1hZ2VuY2UiPjEwMjQ8L3NwYW4+CgogICAgPGRpdiBjbGFzcz0iT2ZmZXJDb250YWN0LWNvbnRlbnQiPgogICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJPZmZlckNvbnRhY3QtcmVmZXJlbnQiPlZvdHJlIGNvbnNlaWxsZXIgOiA8c3Ryb25nPlRob21hcyZuYnNwO1NBTlRJQUdPPC9zdHJvbmc+PC9wPgogICAgICAgICAgICAgICAgPHAgY2xhc3M9Ik9mZmVyQ29udGFjdC1hZGRyZXNzIE9mZmVyQ29udGFjdC1hZGRyZXNzLS1jZW50ZXIgcndkLS1ub01vYmlsZSByd2QtLW5vVGFibGV0Ij4KICAgICAgICAgICAgPGEgaHJlZj0iaHR0cDovL2FnZW5jZS5mb25jaWEuY29tL3NhcnRyb3V2aWxsZS03ODUwMC9hZ2VuY2UtaW1tb2JpbGllcmUvZm9uY2lhLXRyYW5zYWN0aW9uLXNhcnRyb3V2aWxsZS0xMDI0IiB0YXJnZXQ9Il9ibGFuayIgY2xhc3M9Ik9mZmVyQ29udGFjdC1hZGRyZXNzLS1sYXJnZSI+CiAgICAgICAgICAgICAgICA8c3Ryb25nPkZvbmNpYSBUcmFuc2FjdGlvbiBTYXJ0cm91dmlsbGU8L3N0cm9uZz4KICAgICAgICAgICAgICAgIDI4IGF2ZW51ZSBkZSBsYSBSw6lwdWJsaXF1ZTxici8+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgNzg1MDAgLSBTYXJ0cm91dmlsbGUKICAgICAgICAgICAgPC9hPgogICAgICAgIDwvcD4KCiAgICAgICAgPHAgY2xhc3M9Ik9mZmVyQ29udGFjdC1jYWxsMmFjdGlvbiI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBjbGFzcz0iT2ZmZXJDb250YWN0LWJ0biBPZmZlckNvbnRhY3QtYnRuLS10ZWwgaWNvbi1DYWxsb3V0IiBkYXRhLXdpZGdldD0iU2hvd1RlbCIgZGF0YS1hbmFseXRpY3M9IjEwMjQgLSBGT05DSUEgdHJhbnNhY3Rpb24tc2FydHJvdXZpbGxlIiBocmVmPSJ0ZWw6MDEzOTE0MTM2NCI+PHNwYW4gY2xhc3M9Ik9mZmVyQ29udGFjdC10ZWxMYWJlbCI+QXBwZWxlciBsJ2FnZW5jZTwvc3Bhbj4gPHNwYW4gY2xhc3M9Ik9mZmVyQ29udGFjdC10ZWxOdW0iIGRhdGEtYmVoYXQ9InRlbEFnZW5jZSI+MDEuMzkuMTQuMTMuNjQ8L3NwYW4+PC9hPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgY2xhc3M9Ik9mZmVyQ29udGFjdC1idG4gT2ZmZXJDb250YWN0LWJ0bi0tbWFpbCBpY29uLU9wZW5lbnZlbG9wZSBNb2RhbC1saW5rIiBocmVmPSIjUG9wdXBDb250YWN0IiBkYXRhLWFuYWx5dGljcz0ibWFpbHRvYWdlbmN5LWJ0biI+w4ljcmlyZSDDoCBsJ2FnZW5jZTwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgPGEgY2xhc3M9Ik9mZmVyQ29udGFjdC1idG4gT2ZmZXJDb250YWN0LWJ0bi0tcGxhbiBpY29uLVBvaW50ZXIiIGhyZWY9Imh0dHA6Ly9hZ2VuY2UuZm9uY2lhLmNvbS9zYXJ0cm91dmlsbGUtNzg1MDAvYWdlbmNlLWltbW9iaWxpZXJlL2ZvbmNpYS10cmFuc2FjdGlvbi1zYXJ0cm91dmlsbGUtMTAyNCIgdGFyZ2V0PSJfYmxhbmsiPgogICAgICAgICAgICA8c3BhbiBjbGFzcz0iT2ZmZXJDb250YWN0LWJ0bi1sYWJlbC0tbW9iaWxlIj5Ucm91dmVyIGwnYWdlbmNlPC9zcGFuPgogICAgICAgICAgICA8c3BhbiBjbGFzcz0iT2ZmZXJDb250YWN0LWJ0bi1sYWJlbC0tZGVza3RvcCIgZGF0YS1iZWhhdD0icGxhbkFnZW5jZSI+UGxhbiBkJ2FjY8OocyBkZSBsJ2FnZW5jZTwvc3Bhbj4KICAgICAgICAgICAgPC9hPgogICAgICAgIDwvcD4KCiAgICA8L2Rpdj4KCjwvc2VjdGlvbj4KCiAgICAKCgoKCjxzZWN0aW9uIGlkPSJQb3B1cENvbnRhY3QiIGNsYXNzPSJNb2RhbCBtZnAtaGlkZSI+CgogICAgPGgzIGNsYXNzPSJNb2RhbC10aXRsZSI+w4ljcmlyZSDDoCBsJ2FnZW5jZTwvaDM+CgogICAgPGRpdiBjbGFzcz0iZm9ybV9jb250ZW50X21vZGFsIj4KICAgICAgICA8cCBjbGFzcz0iT2ZmZXJDb250YWN0LWFkZHJlc3MgT2ZmZXJDb250YWN0LWFkZHJlc3MtLWxlZnQiPgogICAgICAgICAgICA8c3Ryb25nIGlkPSJub21BZ2VuY2VDb250YWN0Ij5Gb25jaWEgVHJhbnNhY3Rpb24gU2FydHJvdXZpbGxlPC9zdHJvbmc+CiAgICAgICAgICAgIDxzcGFuIGlkPSJhZGRyQWdlbmNlQ29udGFjdCI+MjggYXZlbnVlIGRlIGxhIFLDqXB1YmxpcXVlPC9zcGFuPjxici8+CiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGlkPSJ2aWxsZUNQQWdlbmNlQ29udGFjdCI+Nzg1MDAgLSBTYXJ0cm91dmlsbGU8L3NwYW4+PGJyLz4KCiAgICAgICAgICAgIFTDqWwuIDAxLjM5LjE0LjEzLjY0ICZuYnNwOyZuYnNwOyZuYnNwOyBGYXguIDAxLjM5LjY4LjIwLjM2ICAgICAgICA8L3A+CgogICAgICAgIDxmb3JtIG5hbWU9ImZvbmNpYV9hZ2VuY3lfY29udGFjdCIgbWV0aG9kPSJwb3N0IiBhY3Rpb249ImZvbmNpYV9pbnRlcm5ldF9hZ2VuY3lfY29udGFjdCIgaWQ9ImZvbmNpYV9hZ2VuY3lfY29udGFjdCIgY2xhc3M9IkZvcm0iIGRhdGEtZm9ybT0iYWpheF9mb3JtIj4KCiAgICAgICAgPGg0IGNsYXNzPSJGb3JtLXN1YnRpdGxlIj5Wb3VzIMOqdGVzIGludMOpcmVzc8OpKGUpIHBhciBjZSBiaWVuIMOgIHZlbmRyZTwvaDQ+CgogICAgICAgIDxwIGRhdGEtYmVoYXQ9ImNhcmFjdGVyaXN0aXF1ZUJpZW5Db250YWN0QWdlbmNlIj4KICAgICAgICAgICAgPHNwYW4gY2xhc3M9IlRhZyI+TWFpc29uPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9IlRhZyI+NSBwacOoY2VzPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iVGFnIj5Sw6lmLiAxMzg5NzkzPC9zcGFuPgogICAgICAgICAgICA8c3BhbiBjbGFzcz0iVGFnIj5Ib3VpbGxlczwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJUYWciPjEwMG3Csjwvc3Bhbj4KICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJUYWciPjUyMDAwMCAmZXVybzs8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgPC9wPgoKICAgICAgICA8ZGl2IGNsYXNzPSJlcnJvcnNfY29udGFpbmVyIj48L2Rpdj4KICAgICAgICAKICAgICAgICA8aDQgY2xhc3M9IkZvcm0tc3VidGl0bGUiPlZvcyBpbmZvcm1hdGlvbnM8L2g0PgoKICAgICAgICA8ZmllbGRzZXQgY2xhc3M9IkZvcm0tZmllbGRzZXQgRm9ybS1maWVsZHNldC0taW5saW5lIj4KICAgICAgICAgICAgPGxlZ2VuZCBjbGFzcz0iRm9ybS1sYWJlbCBGb3JtLWxhYmVsLS1oaWRkZW4iPkNpdmlsaXTDqTwvbGVnZW5kPgogICAgICAgICAgICAgICAgPHVsPjxsaSBjbGFzcz0iRm9ybS1maWVsZCBGb3JtLWZpZWxkLS1yYWRpbyI+PGlucHV0IHR5cGU9InJhZGlvIiBpZD0iZm9uY2lhX2FnZW5jeV9jb250YWN0X2NpdmlsaXRlXzAiIG5hbWU9ImZvbmNpYV9hZ2VuY3lfY29udGFjdFtjaXZpbGl0ZV0iIHZhbHVlPSJNIiAvPjxsYWJlbCBmb3I9ImZvbmNpYV9hZ2VuY3lfY29udGFjdF9jaXZpbGl0ZV8wIj5NPC9sYWJlbD48L2xpPjxsaSBjbGFzcz0iRm9ybS1maWVsZCBGb3JtLWZpZWxkLS1yYWRpbyI+PGlucHV0IHR5cGU9InJhZGlvIiBpZD0iZm9uY2lhX2FnZW5jeV9jb250YWN0X2NpdmlsaXRlXzEiIG5hbWU9ImZvbmNpYV9hZ2VuY3lfY29udGFjdFtjaXZpbGl0ZV0iIHZhbHVlPSJNbWUiIC8+PGxhYmVsIGZvcj0iZm9uY2lhX2FnZW5jeV9jb250YWN0X2NpdmlsaXRlXzEiPk1tZTwvbGFiZWw+PC9saT48bGkgY2xhc3M9IkZvcm0tZmllbGQgRm9ybS1maWVsZC0tcmFkaW8iPjxpbnB1dCB0eXBlPSJyYWRpbyIgaWQ9ImZvbmNpYV9hZ2VuY3lfY29udGFjdF9jaXZpbGl0ZV8yIiBuYW1lPSJmb25jaWFfYWdlbmN5X2NvbnRhY3RbY2l2aWxpdGVdIiB2YWx1ZT0iTWxsZSIgLz48bGFiZWwgZm9yPSJmb25jaWFfYWdlbmN5X2NvbnRhY3RfY2l2aWxpdGVfMiI+TWxsZTwvbGFiZWw+PC9saT48L3VsPgogICAgICAgIDwvZmllbGRzZXQ+CgogICAgICAgIDxwIGNsYXNzPSJGb3JtLWZpZWxkIEZvcm0tZmllbGQtLXRleHQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGNsYXNzPSJGb3JtLWxhYmVsIEZvcm0tbGFiZWwtLWhpZGRlbiByZXF1aXJlZCIgZm9yPSJmb25jaWFfYWdlbmN5X2NvbnRhY3RfbGFzdF9uYW1lIj5Ob208L2xhYmVsPgogICAgICAgICAgICA8aW5wdXQgdHlwZT0idGV4dCIgaWQ9ImZvbmNpYV9hZ2VuY3lfY29udGFjdF9sYXN0X25hbWUiIG5hbWU9ImZvbmNpYV9hZ2VuY3lfY29udGFjdFtsYXN0X25hbWVdIiByZXF1aXJlZD0icmVxdWlyZWQiIHBsYWNlaG9sZGVyPSJOb20gKiIgLz4KICAgICAgICA8L3A+CgogICAgICAgIDxwIGNsYXNzPSJGb3JtLWZpZWxkIEZvcm0tZmllbGQtLXRleHQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGNsYXNzPSJGb3JtLWxhYmVsIEZvcm0tbGFiZWwtLWhpZGRlbiByZXF1aXJlZCIgZm9yPSJmb25jaWFfYWdlbmN5X2NvbnRhY3RfZmlyc3RfbmFtZSI+UHLDqW5vbTwvbGFiZWw+CiAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJ0ZXh0IiBpZD0iZm9uY2lhX2FnZW5jeV9jb250YWN0X2ZpcnN0X25hbWUiIG5hbWU9ImZvbmNpYV9hZ2VuY3lfY29udGFjdFtmaXJzdF9uYW1lXSIgcmVxdWlyZWQ9InJlcXVpcmVkIiBwbGFjZWhvbGRlcj0iUHLDqW5vbSAqIiAvPgogICAgICAgIDwvcD4KCiAgICAgICAgPHAgY2xhc3M9IkZvcm0tZmllbGQgRm9ybS1maWVsZC0tdGV4dCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgY2xhc3M9IkZvcm0tbGFiZWwgRm9ybS1sYWJlbC0taGlkZGVuIHJlcXVpcmVkIiBmb3I9ImZvbmNpYV9hZ2VuY3lfY29udGFjdF9lbWFpbCI+RW1haWw8L2xhYmVsPgogICAgICAgICAgICA8aW5wdXQgdHlwZT0iZW1haWwiIGlkPSJmb25jaWFfYWdlbmN5X2NvbnRhY3RfZW1haWwiIG5hbWU9ImZvbmNpYV9hZ2VuY3lfY29udGFjdFtlbWFpbF0iIHJlcXVpcmVkPSJyZXF1aXJlZCIgcGxhY2Vob2xkZXI9IkVtYWlsICoiIC8+CiAgICAgICAgPC9wPgoKICAgICAgICA8cCBjbGFzcz0iRm9ybS1maWVsZCBGb3JtLWZpZWxkLS10ZXh0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBjbGFzcz0iRm9ybS1sYWJlbCBGb3JtLWxhYmVsLS1oaWRkZW4gcmVxdWlyZWQiIGZvcj0iZm9uY2lhX2FnZW5jeV9jb250YWN0X3Bob25lIj5Uw6lsw6lwaG9uZTwvbGFiZWw+CiAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJ0ZXh0IiBpZD0iZm9uY2lhX2FnZW5jeV9jb250YWN0X3Bob25lIiBuYW1lPSJmb25jaWFfYWdlbmN5X2NvbnRhY3RbcGhvbmVdIiByZXF1aXJlZD0icmVxdWlyZWQiIHBsYWNlaG9sZGVyPSJUw6lsw6lwaG9uZSAqIiAvPgogICAgICAgIDwvcD4KCiAgICAgICAgPHAgY2xhc3M9IkZvcm0tZmllbGQgRm9ybS1maWVsZC0tY2hlY2tib3giPgogICAgICAgICAgICA8aW5wdXQgdHlwZT0iY2hlY2tib3giIGlkPSJmb25jaWFfYWdlbmN5X2NvbnRhY3RfZm9uY2lhX2N1c3RvbWVyIiBuYW1lPSJmb25jaWFfYWdlbmN5X2NvbnRhY3RbZm9uY2lhX2N1c3RvbWVyXSIgdmFsdWU9IjEiIC8+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgY2xhc3M9IkZvcm0tbGFiZWwiIGZvcj0iZm9uY2lhX2FnZW5jeV9jb250YWN0X2ZvbmNpYV9jdXN0b21lciI+SmUgc3VpcyBkw6lqw6AgY2xpZW50IEZPTkNJQTwvbGFiZWw+CiAgICAgICAgPC9wPgoKICAgICAgICA8ZmllbGRzZXQgY2xhc3M9IkZvcm0tZmllbGRzZXQiPgogICAgICAgICAgICA8bGVnZW5kIGNsYXNzPSJGb3JtLWxlZ2VuZCI+w4ljaMOpYW5jZSBkZSB2b3RyZSBwcm9qZXQ8L2xlZ2VuZD4KICAgICAgICAgICAgICAgIDx1bD48bGkgY2xhc3M9IkZvcm0tZmllbGQgRm9ybS1maWVsZC0tcmFkaW8iPjxpbnB1dCB0eXBlPSJyYWRpbyIgaWQ9ImZvbmNpYV9hZ2VuY3lfY29udGFjdF9lY2hlYW5jZV8wIiBuYW1lPSJmb25jaWFfYWdlbmN5X2NvbnRhY3RbZWNoZWFuY2VdIiB2YWx1ZT0iSW1tw6lkaWF0ZSIgLz48bGFiZWwgZm9yPSJmb25jaWFfYWdlbmN5X2NvbnRhY3RfZWNoZWFuY2VfMCI+SW1tw6lkaWF0ZTwvbGFiZWw+PC9saT48bGkgY2xhc3M9IkZvcm0tZmllbGQgRm9ybS1maWVsZC0tcmFkaW8iPjxpbnB1dCB0eXBlPSJyYWRpbyIgaWQ9ImZvbmNpYV9hZ2VuY3lfY29udGFjdF9lY2hlYW5jZV8xIiBuYW1lPSJmb25jaWFfYWdlbmN5X2NvbnRhY3RbZWNoZWFuY2VdIiB2YWx1ZT0iMSBtb2lzIiAvPjxsYWJlbCBmb3I9ImZvbmNpYV9hZ2VuY3lfY29udGFjdF9lY2hlYW5jZV8xIj4xIG1vaXM8L2xhYmVsPjwvbGk+PGxpIGNsYXNzPSJGb3JtLWZpZWxkIEZvcm0tZmllbGQtLXJhZGlvIj48aW5wdXQgdHlwZT0icmFkaW8iIGlkPSJmb25jaWFfYWdlbmN5X2NvbnRhY3RfZWNoZWFuY2VfMiIgbmFtZT0iZm9uY2lhX2FnZW5jeV9jb250YWN0W2VjaGVhbmNlXSIgdmFsdWU9IjMgbW9pcyBldCBwbHVzIiAvPjxsYWJlbCBmb3I9ImZvbmNpYV9hZ2VuY3lfY29udGFjdF9lY2hlYW5jZV8yIj4zIG1vaXMgZXQgcGx1czwvbGFiZWw+PC9saT48L3VsPgogICAgICAgIDwvZmllbGRzZXQ+CgogICAgICAgIDxmaWVsZHNldCBjbGFzcz0iRm9ybS1maWVsZHNldCI+CiAgICAgICAgICAgIDxsZWdlbmQgY2xhc3M9IkZvcm0tbGVnZW5kIj5Wb3VzIHNvdWhhaXRleiDDqnRyZSBjb250YWN0w6koZSkgOjwvbGVnZW5kPgogICAgICAgICAgICAgICAgPHVsPjxsaSBjbGFzcz0iRm9ybS1maWVsZCBGb3JtLWZpZWxkLS1yYWRpbyI+PGlucHV0IHR5cGU9InJhZGlvIiBpZD0iZm9uY2lhX2FnZW5jeV9jb250YWN0X2NvbnRhY3RfbWV0aG9kXzAiIG5hbWU9ImZvbmNpYV9hZ2VuY3lfY29udGFjdFtjb250YWN0X21ldGhvZF0iIHZhbHVlPSJQYXIgdMOpbMOpcGhvbmUiIC8+PGxhYmVsIGZvcj0iZm9uY2lhX2FnZW5jeV9jb250YWN0X2NvbnRhY3RfbWV0aG9kXzAiPlBhciB0w6lsw6lwaG9uZTwvbGFiZWw+PC9saT48bGkgY2xhc3M9IkZvcm0tZmllbGQgRm9ybS1maWVsZC0tcmFkaW8iPjxpbnB1dCB0eXBlPSJyYWRpbyIgaWQ9ImZvbmNpYV9hZ2VuY3lfY29udGFjdF9jb250YWN0X21ldGhvZF8xIiBuYW1lPSJmb25jaWFfYWdlbmN5X2NvbnRhY3RbY29udGFjdF9tZXRob2RdIiB2YWx1ZT0iUGFyIEVtYWlsIiAvPjxsYWJlbCBmb3I9ImZvbmNpYV9hZ2VuY3lfY29udGFjdF9jb250YWN0X21ldGhvZF8xIj5QYXIgRW1haWw8L2xhYmVsPjwvbGk+PC91bD4KICAgICAgICA8L2ZpZWxkc2V0PgoKICAgICAgICA8cCBjbGFzcz0iRm9ybS1maWVsZCBGb3JtLWZpZWxkLS10ZXh0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBjbGFzcz0iRm9ybS1sYWJlbCIgZm9yPSJmb25jaWFfYWdlbmN5X2NvbnRhY3RfbWVzc2FnZSI+Vm90cmUgbWVzc2FnZTwvbGFiZWw+CiAgICAgICAgICAgIDx0ZXh0YXJlYSBpZD0iZm9uY2lhX2FnZW5jeV9jb250YWN0X21lc3NhZ2UiIG5hbWU9ImZvbmNpYV9hZ2VuY3lfY29udGFjdFttZXNzYWdlXSI+PC90ZXh0YXJlYT4KICAgICAgICA8L3A+CgogICAgICAgIDxkaXYgY2xhc3M9Ik1vZGFsLWZvb3RlciI+CiAgICAgICAgICAgIDxwIGNsYXNzPSJGb3JtLWluZm8iPiogY2hhbXBzIG9ibGlnYXRvaXJlczwvcD4KCiAgICAgICAgICAgIDxwIGNsYXNzPSJGb3JtLWZpZWxkIEZvcm0tZmllbGQtLXN1Ym1pdCBGb3JtLWZpZWxkLS1jZW50ZXIiPgogICAgICAgICAgICAgICAgPGJ1dHRvbiB0eXBlPSJzdWJtaXQiIGlkPSJmb25jaWFfYWdlbmN5X2NvbnRhY3Rfc3VibWl0IiBuYW1lPSJmb25jaWFfYWdlbmN5X2NvbnRhY3Rbc3VibWl0XSIgY2xhc3M9IkJ0biBCdG4tLXZhbGlkIiBkYXRhLWFjdGlvbj0ic3VibWl0X2Zvcm0iIGRhdGEtYW5hbHl0aWNzLXZhbHVlPSIxMDI0IC0gRk9OQ0lBIHRyYW5zYWN0aW9uLXNhcnRyb3V2aWxsZSI+RW52b3llcjwvYnV0dG9uPgogICAgICAgICAgICA8L3A+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9IkxlZ2FsTWVudGlvbnMgTGVnYWxNZW50aW9ucy0tc21hbGwiPgogICAgICAgICAgICAgICAgICAgIDxwPkNlcyBpbmZvcm1hdGlvbnMgc29udCBuw6ljZXNzYWlyZXMgYXUgdHJhaXRlbWVudCBkZSB2b3RyZSBkZW1hbmRlIGV0IMOgIGxhIGdlc3Rpb24gZGUgbm9zIHJlbGF0aW9ucyBjb21tZXJjaWFsZXMuIExlcyBkb25uw6llcyDDoCBjYXJhY3TDqHJlIHBlcnNvbm5lbCByZWN1ZWlsbGllcyBwYXIgRk9OQ0lBIGZvbnQgbCdvYmpldCBkJ3VuIHRyYWl0ZW1lbnQgYXV0b21hdGlzw6kgZGVzdGluw6kgw6AgbGEgZ2VzdGlvbiBldCBhdXggbsOpZ29jaWF0aW9ucyBkZSBiaWVucyBpbW1vYmlsaWVycywgw6AgbGEgZ2VzdGlvbiBkZXMgY2xpZW50cyBldCDDoCBsYSByw6lhbGlzYXRpb24gZCdvcMOpcmF0aW9ucyByZWxhdGl2ZXMgw6AgbGEgcHJvc3BlY3Rpb24uIExhIGNvbW11bmljYXRpb24gZGUgdm9zIGNvb3Jkb25uw6llcyDDqWxlY3Ryb25pcXVlcyBpbXBsaXF1ZSB2b3RyZSBjb25zZW50ZW1lbnQgw6AgcmVjZXZvaXIsIHBhciB2b2llIMOpbGVjdHJvbmlxdWUsIGRlcyBvZmZyZXMgY29tbWVyY2lhbGVzIGRlIGxhIHBhcnQgZGUgRk9OQ0lBIGV0IGRlIHNlcyBwYXJ0ZW5haXJlcyBjb21tZXJjaWF1eCBhdXhxdWVscyBGT05DSUEgcGV1dCDDqnRyZSBhbWVuw6llIMOgIGNvbW11bmlxdWVyIHZvcyBkb25uw6llcyDDoCBjYXJhY3TDqHJlIHBlcnNvbm5lbC4gVG91dGVmb2lzLCB2b3VzIHBvdXZleiB2b3VzIG9wcG9zZXIgc2FucyBmcmFpcyAoaG9ybWlzIGNldXggbGnDqXMgw6AgbGEgdHJhbnNtaXNzaW9uIGR1IHJlZnVzKSBldCBzYW5zIGp1c3RpZmljYXRpb24gw6AgbCd1dGlsaXNhdGlvbiBkZSB2b3MgZG9ubsOpZXMgw6AgZGVzIGZpbnMgZGUgcHJvc3BlY3Rpb24gY29tbWVyY2lhbGUuIENvbmZvcm3DqW1lbnQgw6AgbGEgTG9pIG7CsCA3OC0xNyBkdSA2IGphbnZpZXIgMTk3OCBtb2RpZmnDqWUsIHZvdXMgZGlzcG9zZXogZCd1biBkcm9pdCBkJ2FjY8OocywgZGUgcmVjdGlmaWNhdGlvbiBldCBkJ29wcG9zaXRpb24sIHBvdXIgZGVzIG1vdGlmcyBsw6lnaXRpbWVzLCBhdSB0cmFpdGVtZW50IGRlIHZvcyBkb25uw6llcyDDoCBjYXJhY3TDqHJlIHBlcnNvbm5lbCBxdWUgdm91cyBwb3V2ZXogZXhlcmNlciBlbiB2b3VzIGFkcmVzc2FudCBhdSByZXNwb25zYWJsZSBkdSB0cmFpdGVtZW50LCBGT05DSUEgLSBTZXJ2aWNlIFRyYW5zYWN0aW9uIDEzLCBhdmVudWUgTGVicnVuIC0gOTIxNjAgQU5UT05ZLjwvcD4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9kaXY+CgogICAgICAgIDxpbnB1dCB0eXBlPSJoaWRkZW4iIGlkPSJmb25jaWFfYWdlbmN5X2NvbnRhY3RfcHJvcGVydHlfZGF0YSIgbmFtZT0iZm9uY2lhX2FnZW5jeV9jb250YWN0W3Byb3BlcnR5X2RhdGFdIiB2YWx1ZT0ieyZxdW90O3ByaXhWZW50ZSZxdW90Ozo1MjAwMDAsJnF1b3Q7c3VyZmFjZSZxdW90OzoxMDAsJnF1b3Q7cmVmZXJlbmNlJnF1b3Q7OiZxdW90OzEzODk3OTMmcXVvdDssJnF1b3Q7cHJvcGVydHlUeXBlJnF1b3Q7OiZxdW90O3B1cmNoYXNlJnF1b3Q7LCZxdW90O25iUGllY2VzJnF1b3Q7OjUsJnF1b3Q7bmVnb2NpYXRldXJQcmVub20mcXVvdDs6JnF1b3Q7VGhvbWFzJnF1b3Q7LCZxdW90O3ZpbGxlJnF1b3Q7OiZxdW90O2hvdWlsbGVzJnF1b3Q7LCZxdW90O2NvZGVQb3N0YWwmcXVvdDs6JnF1b3Q7Nzg4MDAmcXVvdDssJnF1b3Q7dHlwZUJpZW4mcXVvdDs6JnF1b3Q7bWFpc29uJnF1b3Q7LCZxdW90O25lZ29jaWF0ZXVyTm9tJnF1b3Q7OiZxdW90O1NBTlRJQUdPJnF1b3Q7LCZxdW90O3Njb3JlJnF1b3Q7OjF9IiAvPgogICAgICAgIDxpbnB1dCB0eXBlPSJoaWRkZW4iIGlkPSJmb25jaWFfYWdlbmN5X2NvbnRhY3RfYWdlbmN5X21haWwiIG5hbWU9ImZvbmNpYV9hZ2VuY3lfY29udGFjdFthZ2VuY3lfbWFpbF0iIHZhbHVlPSJmdC1pZGZub3JkLXNhcnRyb3V2aWxsZSMjZm9uY2lhLmZyIiAvPgoKICAgICAgICAgICAgCgogICAgICAgIDwvZm9ybT4KCiAgICA8L2Rpdj4KCjwvc2VjdGlvbj4KCiAgICAgICAgICAgICAgICA8L2FzaWRlPgoKICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9zZWN0aW9uPgogICAgICAgICAgICAgICAgICAgIDxzZWN0aW9uIGNsYXNzPSJDb250ZW50LXJvdyI+CiAgICA8ZGl2IGNsYXNzPSJDb250ZW50LW92ZXJmbG93Ij4KICAgICAgICA8ZGl2IGNsYXNzPSJPZmZlclJlbGF0ZWQiPgoKICAgICAgICAgICAgPGgyIGNsYXNzPSJPZmZlclJlbGF0ZWQtdGl0bGUiPkJpZW5zIHNpbWlsYWlyZXM8L2gyPgoKICAgICAgICAgICAgPHVsIGNsYXNzPSJPZmZlclJlbGF0ZWQtc2xpZGVzIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpIGNsYXNzPSJPZmZlclJlbGF0ZWQtaXRlbSI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxhIGNsYXNzPSJUZWFzZXJPZmZlck1pbmkiIGhyZWY9Ii9hY2hhdC9ob3VpbGxlcy03ODgwMC9tYWlzb24vMTMzNzk0NC5odG0iPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iVGVhc2VyT2ZmZXJNaW5pLWlsbCIgc3R5bGU9ImJhY2tncm91bmQtaW1hZ2U6IHVybCgnaHR0cDovL3Bob3Rvcy5mci5mb25jaWEuY29tL21pbmljcC82NDAvNDgwL3Bob3Rvcy8xMzM3Lzk0NC8xMzM3OTQ0L2dyYW5kLzEzMzc5NDRfYjAzYWY5YTg3ZDM0NmYwZjYwODdhZjgxNzU3ZWFhODg1ZTQ2ZDhiNjkyYjc5LmpwZz9kYXRlbWFqPTIwMjAtMDItMTQgMTg6MzA6NDEuMTI0JykiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW1nIHNyYz0iaHR0cDovL3Bob3Rvcy5mci5mb25jaWEuY29tL21pbmljcC82NDAvNDgwL3Bob3Rvcy8xMzM3Lzk0NC8xMzM3OTQ0L2dyYW5kLzEzMzc5NDRfYjAzYWY5YTg3ZDM0NmYwZjYwODdhZjgxNzU3ZWFhODg1ZTQ2ZDhiNjkyYjc5LmpwZz9kYXRlbWFqPTIwMjAtMDItMTQgMTg6MzA6NDEuMTI0IiBhbHQ9IiIgLz4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9IlRlYXNlck9mZmVyTWluaS1jb250ZW50Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3Ryb25nIGNsYXNzPSJUZWFzZXJPZmZlck1pbmktdGl0bGUiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgTWFpc29uCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDUgcGnDqGNlcyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgw6AgdmVuZHJlCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9zdHJvbmc+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9IlRlYXNlck9mZmVyTWluaS1wcmljZSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA1OTggMDAwJm5ic3A74oKsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9IlRlYXNlck9mZmVyTWluaS1sb2MiPkhvdWlsbGVzICg3ODgwMCk8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC91bD4KICAgICAgICA8L2Rpdj4KICAgIDwvZGl2Pgo8L3NlY3Rpb24+CgogICAgICAgIAogICAgPC9kaXY+CgoKCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJCcmVhZGNydW1icyI+CiAgICAgICAgICAgIDxwICAgICBjbGFzcz0iQnJlYWRjcnVtYnMtaW5uZXIiIGRhdGEtdHlwZT0ieW9sbyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4+Rm9uY2lhPC9zcGFuPiAgICAgICAgICAgICAgICAgICAgICAgICAgICAKCiAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Ii9hY2hhdCIgICAgIGNsYXNzPSJCcmVhZGNydW1icy1saW5rIj5BY2hhdDwvYT4gICAgICAgICAgICAgICAgICAgICAgICAgICAgCgogICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIvYWNoYXQvaG91aWxsZXMtNzg4MDAiICAgICBjbGFzcz0iQnJlYWRjcnVtYnMtbGluayI+SG91aWxsZXMgNzg4MDA8L2E+ICAgICAgICAgICAgICAgICAgICAgICAgICAgIAoKICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4+TWFpc29uPC9zcGFuPiAgICAgICAgICAgICAgICAgICAgICAgICAgICAKCiAgICAKCiAgICAgICAgICAgIDwvcD4KICAgICAgICA8L2Rpdj4KICAgIAoKCiAgICAgICAgICAgIAogICAgICAgIAo8Zm9vdGVyIGNsYXNzPSJGb290ZXIiIHJvbGU9ImNvbnRlbnRpbmZvIj4KCiAgICA8ZGl2IGNsYXNzPSJGb290ZXItcm93IEZvb3Rlci1yb3ctLWlkZW50aXR5IEZvb3Rlci1yb3ctLWlkZW50aXR5LW1vYmlsZSI+CiAgICAgICAgPGRpdiBjbGFzcz0iRm9vdGVyLTJwYXJ0Ij4KICAgICAgICAgICAgPHAgY2xhc3M9IkZvb3Rlci1wYXJ0MSBGb290ZXItcGFydDEtLWxvZ28iPgogICAgICAgICAgICAgICAgPGltZyB3aWR0aD0iMTU0IiBoZWlnaHQ9IjU2IiBzcmM9Imh0dHBzOi8vcGhvdG9zLmZvbmNpYS5uZXQvaW1hZ2VzL0ZvbmNpYV9sb2dvdl8zMDhfODYucG5nIiBhbHQ9IkZvbmNpYSI+CiAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgPHVsIGNsYXNzPSJGb290ZXItcGFydDIgRm9vdGVyLXBhcnQyLS1saW5rcyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgICAgPGEgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBocmVmPSIvbWVudGlvbnMtbGVnYWxlcyIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkYXRhLWJlaGF0PSJsaW5rLU1lbnRpb25zX2zDqWdhbGVzIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgTWVudGlvbnMgbMOpZ2FsZXMKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICAgIDxhICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaHJlZj0iaHR0cHM6Ly9mci5mb25jaWEuY29tL3BsYW4tZHUtc2l0ZSIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkYXRhLWJlaGF0PSJsaW5rLVBsYW5fZHVfc2l0ZSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFBsYW4gZHUgc2l0ZQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgICAgPGEgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBocmVmPSIvI2ZvbmNpYV9jb25zZW50ZW1lbnRzIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtYmVoYXQ9ImxpbmstR2VzdGlvbl9kZXNfY29va2llcyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEdlc3Rpb24gZGVzIGNvb2tpZXMKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICAgIDxhICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaHJlZj0iL2NoYXJ0ZS1kZS1wcm90ZWN0aW9uLWRlcy1kb25uZWVzIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtYmVoYXQ9ImxpbmstQ2hhcnRlX2RlX3Byb3RlY3Rpb25fZGVzX2Rvbm7DqWVzXyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIENoYXJ0ZSBkZSBwcm90ZWN0aW9uIGRlcyBkb25uw6llcyAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICAgIDxhICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaHJlZj0iL25vdHJlLXByZW9jY3VwYXRpb24tbGEtc2VjdXJpdGUtZGUtdm9zLWRvbm5lZXMiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1iZWhhdD0ibGluay1Tw6ljdXJpdMOpX0luZm9ybWF0aXF1ZSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFPDqWN1cml0w6kgSW5mb3JtYXRpcXVlCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgICA8YSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhyZWY9Ii9zZXJ2aWNlcyIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkYXRhLWJlaGF0PSJsaW5rLVNlcnZpY2VzIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgU2VydmljZXMKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICAgIDxhICB0YXJnZXQ9Il9ibGFuayIgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBocmVmPSJodHRwOi8vcHJlc3Nyb29tLmZvbmNpYS5jb20vIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtYmVoYXQ9ImxpbmstRXNwYWNlX1ByZXNzZSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEVzcGFjZSBQcmVzc2UKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICAgIDxhICB0YXJnZXQ9Il9ibGFuayIgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBocmVmPSJodHRwOi8vZm9uY2lhLXJlY3J1dGUudGFsZW50LXNvZnQuY29tL2FjY3VlaWwuYXNweCIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkYXRhLWJlaGF0PSJsaW5rLU5vc19vZmZyZXNfZOKAmWVtcGxvaSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIE5vcyBvZmZyZXMgZOKAmWVtcGxvaQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgICAgPGEgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBocmVmPSIvYWNoYXQvYXZpcy1jbGllbnRzIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtYmVoYXQ9ImxpbmstQXZpc19jbGllbnRzIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgQXZpcyBjbGllbnRzCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdWw+CiAgICAgICAgPC9kaXY+CiAgICA8L2Rpdj4KCiAgICA8ZGl2IGNsYXNzPSJGb290ZXItcGFydDEgRm9vdGVyLXBhcnQxLS1zb2NpYWwiPgogICAgICAgICAgICAgICAgICAgIDxhIGNsYXNzPSJGb290ZXItLWhhdXQtZGUtcGFnZS0tZGVza3RvcCIgIHRhcmdldD0iX2JsYW5rIiAgaHJlZj0iaHR0cHM6Ly93d3cuZmFjZWJvb2suY29tL0ZvbmNpYSIgZGF0YS1iZWhhdD0ic29jaWFsTGluay1GYWNlYm9vayBtZW51IGRyb2l0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHN2ZyBjbGFzcz0iaWNvbiIgc3R5bGU9IndpZHRoOjM4cHg7aGVpZ2h0OjM4cHgiIGFyaWEtaGlkZGVuPSJ0cnVlIj48dXNlIHhsaW5rOmhyZWY9Ii9idW5kbGVzL2ZvbmNpYWludGVybmV0L3N2Zy9pY29ucy5zdmcjSWNvbi0tZmFjZWJvb2stcmVzcG9uc2l2ZSI+PC91c2U+PC9zdmc+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgIDxhIGNsYXNzPSJGb290ZXItLWhhdXQtZGUtcGFnZSIgIHRhcmdldD0iX2JsYW5rIiAgaHJlZj0iaHR0cHM6Ly93d3cuZmFjZWJvb2suY29tL0ZvbmNpYSIgZGF0YS1iZWhhdD0ic29jaWFsTGluay1GYWNlYm9vayBtZW51IGRyb2l0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHN2ZyBjbGFzcz0iaWNvbiIgc3R5bGU9IndpZHRoOjM4cHg7aGVpZ2h0OjM4cHgiIGFyaWEtaGlkZGVuPSJ0cnVlIj48dXNlIHhsaW5rOmhyZWY9Ii9idW5kbGVzL2ZvbmNpYWludGVybmV0L3N2Zy9pY29ucy5zdmcjSWNvbi0tZmFjZWJvb2syIj48L3VzZT48L3N2Zz4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgICA8YSBjbGFzcz0iRm9vdGVyLS1oYXV0LWRlLXBhZ2UtLWRlc2t0b3AiICB0YXJnZXQ9Il9ibGFuayIgIGhyZWY9Imh0dHBzOi8vdHdpdHRlci5jb20vZm9uY2lhIiBkYXRhLWJlaGF0PSJzb2NpYWxMaW5rLXR3aXR0ZXIgbWVudSBkcm9pdCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzdmcgY2xhc3M9Imljb24iIHN0eWxlPSJ3aWR0aDozOHB4O2hlaWdodDozOHB4IiBhcmlhLWhpZGRlbj0idHJ1ZSI+PHVzZSB4bGluazpocmVmPSIvYnVuZGxlcy9mb25jaWFpbnRlcm5ldC9zdmcvaWNvbnMuc3ZnI0ljb24tLXR3aXR0ZXItcmVwb25zaXZlIj48L3VzZT48L3N2Zz4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgPGEgY2xhc3M9IkZvb3Rlci0taGF1dC1kZS1wYWdlIiAgdGFyZ2V0PSJfYmxhbmsiICBocmVmPSJodHRwczovL3R3aXR0ZXIuY29tL2ZvbmNpYSIgZGF0YS1iZWhhdD0ic29jaWFsTGluay10d2l0dGVyIG1lbnUgZHJvaXQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3ZnIGNsYXNzPSJpY29uIiBzdHlsZT0id2lkdGg6MzhweDtoZWlnaHQ6MzhweCIgYXJpYS1oaWRkZW49InRydWUiPjx1c2UgeGxpbms6aHJlZj0iL2J1bmRsZXMvZm9uY2lhaW50ZXJuZXQvc3ZnL2ljb25zLnN2ZyNJY29uLS10d2l0dGVyMiI+PC91c2U+PC9zdmc+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgICAgPGEgY2xhc3M9IkZvb3Rlci0taGF1dC1kZS1wYWdlLS1kZXNrdG9wIiAgdGFyZ2V0PSJfYmxhbmsiICBocmVmPSJodHRwczovL3d3dy55b3V0dWJlLmNvbS91c2VyL2ZvbmNpYSIgZGF0YS1iZWhhdD0ic29jaWFsTGluay15b3V0dWJlIG1lbnUgZHJvaXQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3ZnIGNsYXNzPSJpY29uIiBzdHlsZT0id2lkdGg6MzhweDtoZWlnaHQ6MzhweCIgYXJpYS1oaWRkZW49InRydWUiPjx1c2UgeGxpbms6aHJlZj0iL2J1bmRsZXMvZm9uY2lhaW50ZXJuZXQvc3ZnL2ljb25zLnN2ZyNJY29uLS15b3V0dWJlLXJlc3BvbnNpdmUiPjwvdXNlPjwvc3ZnPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICA8YSBjbGFzcz0iRm9vdGVyLS1oYXV0LWRlLXBhZ2UiICB0YXJnZXQ9Il9ibGFuayIgIGhyZWY9Imh0dHBzOi8vd3d3LnlvdXR1YmUuY29tL3VzZXIvZm9uY2lhIiBkYXRhLWJlaGF0PSJzb2NpYWxMaW5rLXlvdXR1YmUgbWVudSBkcm9pdCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzdmcgY2xhc3M9Imljb24iIHN0eWxlPSJ3aWR0aDozOHB4O2hlaWdodDozOHB4IiBhcmlhLWhpZGRlbj0idHJ1ZSI+PHVzZSB4bGluazpocmVmPSIvYnVuZGxlcy9mb25jaWFpbnRlcm5ldC9zdmcvaWNvbnMuc3ZnI0ljb24tLXlvdXR1YmUyIj48L3VzZT48L3N2Zz4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgICA8YSBjbGFzcz0iRm9vdGVyLS1oYXV0LWRlLXBhZ2UtLWRlc2t0b3AiICB0YXJnZXQ9Il9ibGFuayIgIGhyZWY9Imh0dHBzOi8vd3d3LmxpbmtlZGluLmNvbS9jb21wYW55Lzc3MjkxNy8iIGRhdGEtYmVoYXQ9InNvY2lhbExpbmstbGlua2VkaW4gbWVudSBkcm9pdCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzdmcgY2xhc3M9Imljb24iIHN0eWxlPSJ3aWR0aDozOHB4O2hlaWdodDozOHB4IiBhcmlhLWhpZGRlbj0idHJ1ZSI+PHVzZSB4bGluazpocmVmPSIvYnVuZGxlcy9mb25jaWFpbnRlcm5ldC9zdmcvaWNvbnMuc3ZnI0ljb24tLWxpbmtlZGluLXJlc3BvbnNpdmUiPjwvdXNlPjwvc3ZnPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICA8YSBjbGFzcz0iRm9vdGVyLS1oYXV0LWRlLXBhZ2UiICB0YXJnZXQ9Il9ibGFuayIgIGhyZWY9Imh0dHBzOi8vd3d3LmxpbmtlZGluLmNvbS9jb21wYW55Lzc3MjkxNy8iIGRhdGEtYmVoYXQ9InNvY2lhbExpbmstbGlua2VkaW4gbWVudSBkcm9pdCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzdmcgY2xhc3M9Imljb24iIHN0eWxlPSJ3aWR0aDozOHB4O2hlaWdodDozOHB4IiBhcmlhLWhpZGRlbj0idHJ1ZSI+PHVzZSB4bGluazpocmVmPSIvYnVuZGxlcy9mb25jaWFpbnRlcm5ldC9zdmcvaWNvbnMuc3ZnI0ljb24tLWxpbmtlZGluIj48L3VzZT48L3N2Zz4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAKICAgICAgICA8YSBjbGFzcz0iRm9vdGVyLS1oYXV0LWRlLXBhZ2UiIGhyZWY9IiMiIG9uQ2xpY2s9IiQoJ2h0bWwsIGJvZHknKS5hbmltYXRlKHtzY3JvbGxUb3A6MH0sICdzbG93Jyk7IHJldHVybiBmYWxzZTsiPgogICAgICAgICAgICA8c3ZnIGNsYXNzPSJpY29uIiBzdHlsZT0id2lkdGg6MzhweDtoZWlnaHQ6MzhweCIgYXJpYS1oaWRkZW49InRydWUiPjx1c2UgeGxpbms6aHJlZj0iL2J1bmRsZXMvZm9uY2lhaW50ZXJuZXQvc3ZnL2ljb25zLnN2ZyNJY29uLS1oYXV0X2RlX3BhZ2VfZ3JpcyI+PC91c2U+PC9zdmc+CiAgICAgICAgPC9hPgogICAgPC9kaXY+CgogICAgPGRpdiBjbGFzcz0iRm9vdGVyLXJvdyBGb290ZXItcm93LS1saW5rczEiPgogICAgICAgIDxkaXYgY2xhc3M9IkZvb3Rlci1jb2xzIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iRm9vdGVyLWNvbCBGb290ZXItY29sLS1sZWZ0Ij4KICAgICAgICAgICAgICAgIDx1bCBjbGFzcz0iRm9vdGVyLW1haW5MaW5rcyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgIGhyZWY9Imh0dHBzOi8vZnIuZm9uY2lhLmNvbS9hY2hhdCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgQWNoZXRlciB1biBiaWVuCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSAgaHJlZj0iL2ZhaXJlLWdlcmVyLW1hLWxvY2F0aW9uLXBhci1mb25jaWEiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEZhaXJlIGfDqXJlciBtYSBsb2NhdGlvbgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgIGhyZWY9Imh0dHBzOi8vZnIuZm9uY2lhLmNvbS9lc3RpbWVyLXNvbi1iaWVuIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBFc3RpbWF0aW9uIGJpZW4gaW1tb2JpbGllcgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgIGhyZWY9Ii9sLWludmVzdGlzc2VtZW50LWltbW9iaWxpZXIiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEludmVzdGlyCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSAgaHJlZj0iL3ZvdHJlLWFjaGF0LWRhbnMtbC1pbW1vYmlsaWVyLW5ldWYtYXZlYy1mb25jaWEiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEFjaGF0IGltbW9iaWxpZXIgbmV1ZiAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3VsPgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iRm9vdGVyLWNvbCBGb290ZXItY29sLS1yaWdodCI+CiAgICAgICAgICAgICAgICA8dWwgY2xhc3M9IkZvb3Rlci1tYWluTGlua3MiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhICB0YXJnZXQ9Il9ibGFuayIgIGhyZWY9Imh0dHBzOi8vZnIuZm9uY2lhLmNvbS9sb2NhdGlvbiI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgTG91ZXIgdW4gYmllbgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgIGhyZWY9Ii9mYWlyZS1nZXJlci11bmUtY29wcm9wcmlldGUiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEZhaXJlIGfDqXJlciB1bmUgY29wcm9wcmnDqXTDqQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgIGhyZWY9Imh0dHBzOi8vZnIuZm9uY2lhLmNvbS9lc3RpbWF0aW9uLWxveWVyIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBFc3RpbWF0aW9uIGxveWVyCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSAgaHJlZj0iL2xvZ2luIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBNeUZvbmNpYQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgIGhyZWY9Imh0dHBzOi8vZnIuZm9uY2lhLmNvbS9hY3R1YWxpdGVzLWVuLXBlcmlvZGUtZGUtY29uZmluZW1lbnQjZmFxYWN0dWFsaXRlcyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgRkFRCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC91bD4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICA8L2Rpdj4KCiAgICA8ZGl2IGNsYXNzPSJGb290ZXItcm93IEZvb3Rlci1yb3ctLWlkZW50aXR5IEZvb3Rlci1yb3ctLWlkZW50aXR5LXJlZiI+CiAgICAgICAgPGRpdiBjbGFzcz0iRm9vdGVyLTJwYXJ0Ij4KICAgICAgICAgICAgPHAgY2xhc3M9IkZvb3Rlci1wYXJ0MSBGb290ZXItcGFydDEtLWxvZ28iPgogICAgICAgICAgICAgICAgPGltZyB3aWR0aD0iMTU0IiBoZWlnaHQ9IjQzIiBzcmM9Imh0dHBzOi8vcGhvdG9zLmZvbmNpYS5uZXQvaW1hZ2VzL0ZvbmNpYV9sb2dvdl8zMDhfODYucG5nIiBhbHQ9IkZvbmNpYSI+CiAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgPHVsIGNsYXNzPSJGb290ZXItcGFydDIgRm9vdGVyLXBhcnQyLS1saW5rcyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgIDxhICAgICAgICAgICAgICAgICAgICAgICAgICAgICBocmVmPSIvbWVudGlvbnMtbGVnYWxlcyIKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtYmVoYXQ9ImxpbmstTWVudGlvbnNfbMOpZ2FsZXMiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgTWVudGlvbnMgbMOpZ2FsZXMKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICA8YSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaHJlZj0iaHR0cHM6Ly9mci5mb25jaWEuY29tL3BsYW4tZHUtc2l0ZSIKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtYmVoYXQ9ImxpbmstUGxhbl9kdV9zaXRlIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFBsYW4gZHUgc2l0ZQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgIDxhICAgICAgICAgICAgICAgICAgICAgICAgICAgICBocmVmPSIvI2ZvbmNpYV9jb25zZW50ZW1lbnRzIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1iZWhhdD0ibGluay1HZXN0aW9uX2Rlc19jb29raWVzIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEdlc3Rpb24gZGVzIGNvb2tpZXMKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICA8YSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaHJlZj0iL2NoYXJ0ZS1kZS1wcm90ZWN0aW9uLWRlcy1kb25uZWVzIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1iZWhhdD0ibGluay1DaGFydGVfZGVfcHJvdGVjdGlvbl9kZXNfZG9ubsOpZXNfIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIENoYXJ0ZSBkZSBwcm90ZWN0aW9uIGRlcyBkb25uw6llcyAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICA8YSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaHJlZj0iL25vdHJlLXByZW9jY3VwYXRpb24tbGEtc2VjdXJpdGUtZGUtdm9zLWRvbm5lZXMiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkYXRhLWJlaGF0PSJsaW5rLVPDqWN1cml0w6lfSW5mb3JtYXRpcXVlIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFPDqWN1cml0w6kgSW5mb3JtYXRpcXVlCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgPGEgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhyZWY9Ii9zZXJ2aWNlcyIKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtYmVoYXQ9ImxpbmstU2VydmljZXMiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgU2VydmljZXMKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICA8YSAgdGFyZ2V0PSJfYmxhbmsiICAgICAgICAgICAgICAgICAgICAgICAgICAgICBocmVmPSJodHRwOi8vcHJlc3Nyb29tLmZvbmNpYS5jb20vIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1iZWhhdD0ibGluay1Fc3BhY2VfUHJlc3NlIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEVzcGFjZSBQcmVzc2UKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICA8YSAgdGFyZ2V0PSJfYmxhbmsiICAgICAgICAgICAgICAgICAgICAgICAgICAgICBocmVmPSJodHRwOi8vZm9uY2lhLXJlY3J1dGUudGFsZW50LXNvZnQuY29tL2FjY3VlaWwuYXNweCIKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtYmVoYXQ9ImxpbmstTm9zX29mZnJlc19k4oCZZW1wbG9pIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIE5vcyBvZmZyZXMgZOKAmWVtcGxvaQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgIDxhICAgICAgICAgICAgICAgICAgICAgICAgICAgICBocmVmPSIvYWNoYXQvYXZpcy1jbGllbnRzIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1iZWhhdD0ibGluay1BdmlzX2NsaWVudHMiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgQXZpcyBjbGllbnRzCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdWw+CiAgICAgICAgPC9kaXY+CiAgICA8L2Rpdj4KCiAgICA8ZGl2IGNsYXNzPSJGb290ZXItcm93IEZvb3Rlci1yb3ctLWVuZCI+CiAgICAgICAgPGRpdiBjbGFzcz0iRm9vdGVyLTJwYXJ0Ij4KICAgICAgICAgICAgPHAgY2xhc3M9IkZvb3Rlci1wYXJ0MiBGb290ZXItcGFydDItLWNvcHkiPgogICAgICAgICAgICAgICAgJmNvcHk7MjAyMCBGb25jaWEgR3JvdXBlCiAgICAgICAgICAgIDwvcD4KICAgICAgICA8L2Rpdj4KICAgIDwvZGl2PgoKPC9mb290ZXI+CjwvZGl2PjwhLS1Cb2R5V3JhcHBlci0tPgoKICAgIDxzY3JpcHQgc3JjPSIvY29tcGlsZWQvY29tbW9uLmpzP3ZlcnNpb249MTU4ODA5NzU2MiI+PC9zY3JpcHQ+CjxzY3JpcHQ+CiAgICBmb25jaWEuc2Vzc2lvbnMuaW5pdCg5MDAwMDAsIDE4MDAwMCk7Cjwvc2NyaXB0PgoKPCEtLVtpZiBsdGUgSUUgOV0+PHNjcmlwdCBzcmM9Ii9jb21waWxlZC9zY3JpcHRzLWllOS5qcz92ZXJzaW9uPTE1ODgwOTc1NjIiPjwvc2NyaXB0PjwhW2VuZGlmXS0tPgoKCiAgICAKPC9ib2R5Pgo8L2h0bWw+Cg==
    http_version: null
  recorded_at: Thu, 28 May 2020 15:38:01 GMT
- request:
    method: get
    uri: https://fr.foncia.com/achat/paris-75/appartement--maison/page-3/(params)/on/(tri)/date/(ordre)/desc
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 28 May 2020 15:38:01 GMT
      Set-Cookie:
      - current_property_search_url=%2Fachat%2Fparis-75%2Fappartement--maison%2F%28params%29%2Fon%2F%28tri%29%2Fdate%2F%28ordre%29%2Fdesc;
        path=/
      - eZSESSID=91tgt7qobftclvhs6ae7t1fhp1; path=/; secure; HttpOnly
      Cache-Control:
      - public, s-maxage=86400
      Content-Type:
      - text/html; charset=UTF-8
      Vary:
      - Accept-Encoding,Origin
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: null
  recorded_at: Thu, 28 May 2020 15:38:02 GMT
- request:
    method: get
    uri: https://fr.foncia.com/achat/paris-75003/appartement/1390646.htm
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 28 May 2020 15:38:02 GMT
      Set-Cookie:
      - eZSESSID=ho77cvpo8kmc4rn4jfaa3tk252; path=/; secure; HttpOnly
      Cache-Control:
      - public, s-maxage=31536000
      Content-Type:
      - text/html; charset=UTF-8
      Vary:
      - Accept-Encoding,Origin
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: null
  recorded_at: Thu, 28 May 2020 15:38:02 GMT
- request:
    method: get
    uri: https://fr.foncia.com/achat/paris-75003/appartement/1403698.htm
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 28 May 2020 15:38:02 GMT
      Set-Cookie:
      - eZSESSID=1l5hhvtv9tkbqchp9tmocl39j5; path=/; secure; HttpOnly
      Cache-Control:
      - public, s-maxage=31536000
      Content-Type:
      - text/html; charset=UTF-8
      Vary:
      - Accept-Encoding,Origin
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: null
  recorded_at: Thu, 28 May 2020 15:38:03 GMT
- request:
    method: get
    uri: https://fr.foncia.com/achat/paris-75004/appartement/1404620.htm
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 28 May 2020 15:38:03 GMT
      Set-Cookie:
      - eZSESSID=5r4adqagoval7j2ert8ihqr3m6; path=/; secure; HttpOnly
      Cache-Control:
      - public, s-maxage=31536000
      Content-Type:
      - text/html; charset=UTF-8
      Vary:
      - Accept-Encoding,Origin
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: null
  recorded_at: Thu, 28 May 2020 15:38:03 GMT
- request:
    method: get
    uri: https://fr.foncia.com/achat/paris-75011/appartement/1185816.htm
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Wed, 27 May 2020 17:16:39 GMT
      Cache-Control:
      - public, s-maxage=31536000
      Content-Type:
      - text/html; charset=UTF-8
      Vary:
      - Accept-Encoding,Origin
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: null
  recorded_at: Thu, 28 May 2020 15:38:03 GMT
- request:
    method: get
    uri: https://fr.foncia.com/achat/paris-75011/appartement/1366087.htm
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 28 May 2020 15:38:04 GMT
      Set-Cookie:
      - eZSESSID=gjgkmbnsukplgga75btftohlp2; path=/; secure; HttpOnly
      Cache-Control:
      - public, s-maxage=31536000
      Content-Type:
      - text/html; charset=UTF-8
      Vary:
      - Accept-Encoding,Origin
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: null
  recorded_at: Thu, 28 May 2020 15:38:04 GMT
- request:
    method: get
    uri: https://fr.foncia.com/achat/paris-75011/appartement/1382532.htm
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Wed, 27 May 2020 17:16:36 GMT
      Cache-Control:
      - public, s-maxage=31536000
      Content-Type:
      - text/html; charset=UTF-8
      Vary:
      - Accept-Encoding,Origin
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: null
  recorded_at: Thu, 28 May 2020 15:38:04 GMT
- request:
    method: get
    uri: https://fr.foncia.com/achat/paris-75011/appartement/1382550.htm
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Wed, 27 May 2020 17:16:36 GMT
      Cache-Control:
      - public, s-maxage=31536000
      Content-Type:
      - text/html; charset=UTF-8
      Vary:
      - Accept-Encoding,Origin
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: null
  recorded_at: Thu, 28 May 2020 15:38:04 GMT
- request:
    method: get
    uri: https://fr.foncia.com/achat/paris-75011/appartement/1387213.htm
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Wed, 27 May 2020 18:12:16 GMT
      Cache-Control:
      - public, s-maxage=31536000
      Content-Type:
      - text/html; charset=UTF-8
      Vary:
      - Accept-Encoding,Origin
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        PCFET0NUWVBFIGh0bWw+CjxodG1sIGxhbmc9ImZyIj4KPGhlYWQ+CiAgICA8bWV0YSBjaGFyc2V0PSJVVEYtOCI+CiAgICA8bWV0YSBodHRwLWVxdWl2PSJYLVVBLUNvbXBhdGlibGUiIGNvbnRlbnQ9IklFPUVkZ2UiPgogICAgPG1ldGEgbmFtZT0idmlld3BvcnQiIGNvbnRlbnQ9IndpZHRoPWRldmljZS13aWR0aCxpbml0aWFsLXNjYWxlPTEsbWluaW11bS1zY2FsZT0xIj4KCiAgICAKICAgIDx0aXRsZT5BcHBhcnRlbWVudCAxIHBpw6hjZSDDoCB2ZW5kcmUgLSBQYXJpcyAxMcOobWUgKDc1MDExKSAtIDcuOTIgbTIgLSBGb25jaWE8L3RpdGxlPgoKICAgICAgICAgICAgICAgICAgICA8bWV0YSBuYW1lPSJkZXNjcmlwdGlvbiIgY29udGVudD0iQXBwYXJ0ZW1lbnQgMSBwacOoY2UgKDcuOTIgbTIpIMOgIHZlbmRyZSAtIFBhcmlzIDExw6htZSAoNzUwMTEpIDogTcKwIE9iZXJrYW1wZgpTaXR1w6kgYXUgZGVybmllciDDqXRhZ2UgZCYjMDM5O3VuZSBjb3Byb3ByacOpdMOpIGRlIGJlbGxlIGZhY3R1cmUsIEZPTkNJQSB2b3VzIHByb3Bvc2UgdW5lIGNoYW1icmUgZGUgYm9ubmUgZm9uY3Rpb25uZWxsZSA6IEFnZW5jZW1lbnQgb3B0aW1pc8OpLCBwZXRpdGUuLi4iPgoKICAgICAgICAgICAgICAgICAgICAgICAgPGxpbmsgcmVsPSJpY29uIiB0eXBlPSJpbWFnZS94LWljb24iIGhyZWY9Ii9mYXZpY29uLmljbz92ZXJzaW9uPTE1ODgwOTc1NTkiPgogICAgICAgIDxsaW5rIHJlbD0iYXBwbGUtdG91Y2gtaWNvbi1yZXRpbmEiIGhyZWY9Ii9idW5kbGVzL2ZvbmNpYWludGVybmV0L2ltYWdlcy9lbnZpcm9ubWVudC90b3VjaC1pY29uLWlwaG9uZS1yZXRpbmEucG5nP3ZlcnNpb249MTU4ODA5NzU1OSI+CgogICAgICAgICAgICAgICAgPG1ldGEgbmFtZT0iYXBwbGljYXRpb24tbmFtZSIgY29udGVudD0iRm9uY2lhLmNvbSI+CiAgICAgICAgPG1ldGEgbmFtZT0ibXNhcHBsaWNhdGlvbi1UaWxlQ29sb3IiIGNvbnRlbnQ9IiMwMDllYjkiPgogICAgICAgIDxtZXRhIG5hbWU9Im1zYXBwbGljYXRpb24tc3F1YXJlNzB4NzBsb2dvIiBjb250ZW50PSJ0aW55LnBuZyI+CiAgICAgICAgPG1ldGEgbmFtZT0ibXNhcHBsaWNhdGlvbi1zcXVhcmUxNTB4MTUwbG9nbyIgY29udGVudD0ic3F1YXJlLnBuZyI+CiAgICAgICAgPG1ldGEgbmFtZT0ibXNhcHBsaWNhdGlvbi13aWRlMzEweDE1MGxvZ28iIGNvbnRlbnQ9IndpZGUucG5nIj4KICAgICAgICA8bWV0YSBuYW1lPSJtc2FwcGxpY2F0aW9uLXNxdWFyZTMxMHgzMTBsb2dvIiBjb250ZW50PSJsYXJnZS5wbmciPgoKICAgICAgICAgICAgICAgIDxtZXRhIHByb3BlcnR5PSJvZzp0aXRsZSIgY29udGVudD0iQXBwYXJ0ZW1lbnQgMSBwacOoY2Ugw6AgdmVuZHJlIC0gUGFyaXMgMTHDqG1lICg3NTAxMSkgLSA3LjkyIG0yIC0gRm9uY2lhIj4KICAgICAgICA8bWV0YSBwcm9wZXJ0eT0ib2c6c2l0ZV9uYW1lIiBjb250ZW50PSJGT05DSUEiPgogICAgICAgIDxtZXRhIHByb3BlcnR5PSJvZzpkZXNjcmlwdGlvbiIgY29udGVudD0iQXBwYXJ0ZW1lbnQgMSBwacOoY2UgKDcuOTIgbTIpIMOgIHZlbmRyZSAtIFBhcmlzIDExw6htZSAoNzUwMTEpIDogTcKwIE9iZXJrYW1wZgpTaXR1w6kgYXUgZGVybmllciDDqXRhZ2UgZCYjMDM5O3VuZSBjb3Byb3ByacOpdMOpIGRlIGJlbGxlIGZhY3R1cmUsIEZPTkNJQSB2b3VzIHByb3Bvc2UgdW5lIGNoYW1icmUgZGUgYm9ubmUgZm9uY3Rpb25uZWxsZSA6IEFnZW5jZW1lbnQgb3B0aW1pc8OpLCBwZXRpdGUuLi4iPgogICAgICAgIDxtZXRhIHByb3BlcnR5PSJvZzp1cmwiIGNvbnRlbnQ9Imh0dHBzOi8vZnIuZm9uY2lhLmNvbS9hY2hhdC9wYXJpcy03NTAxMS9hcHBhcnRlbWVudC8xMzg3MjEzLmh0bSI+CiAgICAgICAgPG1ldGEgcHJvcGVydHk9Im9nOmltYWdlIiBjb250ZW50PSJodHRwOi8vcGhvdG9zLmZyLmZvbmNpYS5jb20vbWluaWNwLzY0MC80ODAvcGhvdG9zLzEzODcvMjEzLzEzODcyMTMvZ3JhbmQvMTM4NzIxM184MmMzMjY4MzIxYTRjY2RjNDA0ZmRiMmQ2NWQ4MmYwZDVlYjUwNDBjODdlYTIuanBnP2RhdGVtYWo9MjAyMC0wNS0wOCAwOTowNTowMS4xMzMiPgoKICAgICAgICA8bWV0YSBuYW1lPSJ0d2l0dGVyOnRpdGxlIiBjb250ZW50PSJBcHBhcnRlbWVudCAxIHBpw6hjZSDDoCB2ZW5kcmUgLSBQYXJpcyAxMcOobWUgKDc1MDExKSAtIDcuOTIgbTIgLSBGb25jaWEiPgogICAgICAgIDxtZXRhIG5hbWU9InR3aXR0ZXI6aW1hZ2U6c3JjIiBjb250ZW50PSJodHRwOi8vcGhvdG9zLmZyLmZvbmNpYS5jb20vbWluaWNwLzY0MC80ODAvcGhvdG9zLzEzODcvMjEzLzEzODcyMTMvZ3JhbmQvMTM4NzIxM184MmMzMjY4MzIxYTRjY2RjNDA0ZmRiMmQ2NWQ4MmYwZDVlYjUwNDBjODdlYTIuanBnP2RhdGVtYWo9MjAyMC0wNS0wOCAwOTowNTowMS4xMzMiPgogICAgICAgIDxtZXRhIG5hbWU9InR3aXR0ZXI6ZGVzY3JpcHRpb24iIGNvbnRlbnQ9IkFwcGFydGVtZW50IDEgcGnDqGNlICg3LjkyIG0yKSDDoCB2ZW5kcmUgLSBQYXJpcyAxMcOobWUgKDc1MDExKSA6IE3CsCBPYmVya2FtcGYKU2l0dcOpIGF1IGRlcm5pZXIgw6l0YWdlIGQmIzAzOTt1bmUgY29wcm9wcmnDqXTDqSBkZSBiZWxsZSBmYWN0dXJlLCBGT05DSUEgdm91cyBwcm9wb3NlIHVuZSBjaGFtYnJlIGRlIGJvbm5lIGZvbmN0aW9ubmVsbGUgOiBBZ2VuY2VtZW50IG9wdGltaXPDqSwgcGV0aXRlLi4uIj4KICAgICAgICA8bWV0YSBuYW1lPSJ0d2l0dGVyOmNhcmQiIGNvbnRlbnQ9InN1bW1hcnkiPgogICAgICAgIDxtZXRhIG5hbWU9InR3aXR0ZXI6c2l0ZSIgY29udGVudD0iQGZvbmNpYSI+CiAgICAKICAgICAgICAgICAgICAgIDxsaW5rIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0iL2NvbXBpbGVkL3N0eWxlcy5jc3M/dmVyc2lvbj0xNTg4MDk3NTU5Ij4KICAgIAogICAgPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPgogICAgdmFyIHRhcnRlYXVjaXRyb25Gb3JjZUNETiA9ICIvYnVuZGxlcy9mb25jaWFpbnRlcm5ldC9qcy90YXJ0ZWF1Y2l0cm9uLyI7Cjwvc2NyaXB0PgoKICAgIDxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0IiBzcmM9Ii9jb21waWxlZC90YXJ0ZWF1Y2l0cm9uLmpzP3ZlcnNpb249MTU4ODA5NzU1OSI+PC9zY3JpcHQ+CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNjcmlwdD53aW5kb3cuZm9uY2lhX2ludGVybmV0PXtwYXJhbXM6e319PC9zY3JpcHQ+CiAgICAgICAgPCEtLVtpZiBJRSA5XT48c2NyaXB0PmRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5jbGFzc05hbWUrPScgSUU5Jzs8L3NjcmlwdD48IVtlbmRpZl0tLT4KPCEtLVtpZiBJRSAxMF0+PHNjcmlwdD5kb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuY2xhc3NOYW1lKz0nIElFMTAnOzwvc2NyaXB0PjwhW2VuZGlmXS0tPgoKPHNjcmlwdD4KIWZ1bmN0aW9uKGEsYil7ImZ1bmN0aW9uIj09dHlwZW9mIGRlZmluZSYmZGVmaW5lLmFtZD9kZWZpbmUoW10sZnVuY3Rpb24oKXtyZXR1cm4gYS5zdmc0ZXZlcnlib2R5PWIoKX0pOiJvYmplY3QiPT10eXBlb2YgZXhwb3J0cz9tb2R1bGUuZXhwb3J0cz1iKCk6YS5zdmc0ZXZlcnlib2R5PWIoKX0odGhpcyxmdW5jdGlvbigpe2Z1bmN0aW9uIGEoYSxiKXtpZihiKXt2YXIgYz1kb2N1bWVudC5jcmVhdGVEb2N1bWVudEZyYWdtZW50KCksZD0hYS5nZXRBdHRyaWJ1dGUoInZpZXdCb3giKSYmYi5nZXRBdHRyaWJ1dGUoInZpZXdCb3giKTtkJiZhLnNldEF0dHJpYnV0ZSgidmlld0JveCIsZCk7Zm9yKHZhciBlPWIuY2xvbmVOb2RlKCEwKTtlLmNoaWxkTm9kZXMubGVuZ3RoOyljLmFwcGVuZENoaWxkKGUuZmlyc3RDaGlsZCk7YS5hcHBlbmRDaGlsZChjKX19ZnVuY3Rpb24gYihiKXtiLm9ucmVhZHlzdGF0ZWNoYW5nZT1mdW5jdGlvbigpe2lmKDQ9PT1iLnJlYWR5U3RhdGUpe3ZhciBjPWIuX2NhY2hlZERvY3VtZW50O2N8fChjPWIuX2NhY2hlZERvY3VtZW50PWRvY3VtZW50LmltcGxlbWVudGF0aW9uLmNyZWF0ZUhUTUxEb2N1bWVudCgiIiksYy5ib2R5LmlubmVySFRNTD1iLnJlc3BvbnNlVGV4dCxiLl9jYWNoZWRUYXJnZXQ9e30pLGIuX2VtYmVkcy5zcGxpY2UoMCkubWFwKGZ1bmN0aW9uKGQpe3ZhciBlPWIuX2NhY2hlZFRhcmdldFtkLmlkXTtlfHwoZT1iLl9jYWNoZWRUYXJnZXRbZC5pZF09Yy5nZXRFbGVtZW50QnlJZChkLmlkKSksYShkLnN2ZyxlKX0pfX0sYi5vbnJlYWR5c3RhdGVjaGFuZ2UoKX1mdW5jdGlvbiBjKGMpe2Z1bmN0aW9uIGQoKXtmb3IodmFyIGM9MDtjPGwubGVuZ3RoOyl7dmFyIGc9bFtjXSxoPWcucGFyZW50Tm9kZTtpZihoJiYvc3ZnL2kudGVzdChoLm5vZGVOYW1lKSl7dmFyIGk9Zy5nZXRBdHRyaWJ1dGUoInhsaW5rOmhyZWYiKTtpZihlJiYoIWYudmFsaWRhdGV8fGYudmFsaWRhdGUoaSxoLGcpKSl7aC5yZW1vdmVDaGlsZChnKTt2YXIgbT1pLnNwbGl0KCIjIiksbj1tLnNoaWZ0KCksbz1tLmpvaW4oIiMiKTtpZihuLmxlbmd0aCl7dmFyIHA9altuXTtwfHwocD1qW25dPW5ldyBYTUxIdHRwUmVxdWVzdCxwLm9wZW4oIkdFVCIsbikscC5zZW5kKCkscC5fZW1iZWRzPVtdKSxwLl9lbWJlZHMucHVzaCh7c3ZnOmgsaWQ6b30pLGIocCl9ZWxzZSBhKGgsZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQobykpfX1lbHNlKytjfWsoZCw2Nyl9dmFyIGUsZj1PYmplY3QoYyksZz0vXGJUcmlkZW50XC9bNTY3XVxifFxiTVNJRSAoPzo5fDEwKVwuMFxiLyxoPS9cYkFwcGxlV2ViS2l0XC8oXGQrKVxiLyxpPS9cYkVkZ2VcLzEyXC4oXGQrKVxiLztlPSJwb2x5ZmlsbCJpbiBmP2YucG9seWZpbGw6Zy50ZXN0KG5hdmlnYXRvci51c2VyQWdlbnQpfHwobmF2aWdhdG9yLnVzZXJBZ2VudC5tYXRjaChpKXx8W10pWzFdPDEwNTQ3fHwobmF2aWdhdG9yLnVzZXJBZ2VudC5tYXRjaChoKXx8W10pWzFdPDUzNzt2YXIgaj17fSxrPXdpbmRvdy5yZXF1ZXN0QW5pbWF0aW9uRnJhbWV8fHNldFRpbWVvdXQsbD1kb2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZSgidXNlIik7ZSYmZCgpfXJldHVybiBjfSk7Cjwvc2NyaXB0Pgo8c2NyaXB0PnN2ZzRldmVyeWJvZHkoKTwvc2NyaXB0PgogICAgCiAgICAgICAgPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiIHNyYz0iaHR0cHM6Ly93d3cuY2l0eXNjYW4uZnIvYXNzZXRzL2J1aWxkL2pzL2xpYi9jaXR5c2Nhbi13aWRnZXQuanMiPjwvc2NyaXB0Pgo8L2hlYWQ+CgoKPGJvZHk+CgogICAgPHNjcmlwdD4KICAgICAgICBkYXRhTGF5ZXIgPSB3aW5kb3cuZGF0YUxheWVyIHx8IHt9OwogICAgICAgIHZhciBvYmplY3QgPSB7CiAgICAgICAgICAgICJ0eXBlU2l0ZSI6ICJnw6luw6lyaXF1ZSIsCiAgICAgICAgICAgICJlc3BhY2UiOiAiZ2VuZXJhbCIsCiAgICAgICAgICAgICJ0eXBlUGFnZSI6ICJjbGFzc2lxdWUiLAogICAgICAgICAgICAidGVtcGxhdGUiOiAicHJvZHVpdCIsCiAgICAgICAgICAgICJ0aGVtZSI6ICJhY2hhdCIKICAgICAgICB9OwoKICAgICAgICBkYXRhTGF5ZXIgPSBbb2JqZWN0XTsKICAgIDwvc2NyaXB0PgoKPHNjcmlwdD4KICAgIGRhdGFMYXllciA9IHdpbmRvdy5kYXRhTGF5ZXIgfHwgW107CgogICAgdmFyIGN1cnJlbnRQYXRoID0gd2luZG93LmxvY2F0aW9uLnBhdGhuYW1lOwoKICAgICAgICAgICAgdmFyIGNvbW1vblVwdGlsYWJWYWx1ZXMgPSB7CiAgICAgICAgInR5cGVTaXRlIjogImfDqW7DqXJpcXVlIiwgLy8gRmV0Y2hlZCBmcm9tIGxheW91dCBnbG9iYWxzCiAgICAgICAgImVzcGFjZSI6ICJnZW5lcmFsIiwKICAgICAgICAidHlwZVBhZ2UiOiAiY2xhc3NpcXVlIiwKICAgICAgICAidGVtcGxhdGUiOiAiYXV0cmVzIgogICAgfTsKCiAgICAvLyBEZXBlbmRpbmcgb24gY3VycmVudCBwYXRobmFtZSwgd2UgZGlzcGF0Y2ggYW4gZXZlbnQsIHVzZWQgZm9yIEJhY2stT2ZmaWNlIHBhZ2VzCiAgICBzd2l0Y2ggKHRydWUpIHsKICAgICAgICBjYXNlIGN1cnJlbnRQYXRoLmluZGV4T2YoIi9hY2hhdC8iKSA9PT0gMDogLy8gUGFnZSBhY2hhdCAoYXZlYyByZWNoZXJjaGUgZW4gY291cnMpCiAgICAgICAgICAgIC8vIEV2ZW50CiAgICAgICAgICAgIGRhdGFMYXllci5wdXNoKHsiY3VzdG9tQ2F0ZWdvcmllIjogImVuZ2FnZW1lbnQiLCAiY3VzdG9tQWN0aW9uIjogImludGVyZXQiLCAiY3VzdG9tTGFiZWwiOiAiQWNoZXRlciIsICJldmVudCI6ICJjdXN0b21FdmVudCJ9KTsKICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgY2FzZSBjdXJyZW50UGF0aC5pbmRleE9mKCIvbG9jYXRpb24vIikgPT09IDA6IC8vIFBhZ2UgbG9jYXRpb24gKGF2ZWMgcmVjaGVyY2hlIGVuIGNvdXJzKQogICAgICAgICAgICAvLyBFdmVudAogICAgICAgICAgICBkYXRhTGF5ZXIucHVzaCh7ImN1c3RvbUNhdGVnb3JpZSI6ICJlbmdhZ2VtZW50IiwgImN1c3RvbUFjdGlvbiI6ICJpbnRlcmV0IiwgImN1c3RvbUxhYmVsIjogIkxvdWVyIiwgImV2ZW50IjogImN1c3RvbUV2ZW50In0pOwogICAgICAgICAgICBicmVhazsKICAgICAgICBjYXNlIGN1cnJlbnRQYXRoLmluZGV4T2YoIi9yZWNoZXJjaGUvcGFjay1lYXN5bG9jIikgPT09IDA6IC8vIExhIHBhZ2UgcGFjay1lYXN5bG9jCiAgICAgICAgICAgIGNvbW1vblVwdGlsYWJWYWx1ZXMudGhlbWUgPSAibG9jYXRpb24iOwogICAgICAgICAgICBkYXRhTGF5ZXIucHVzaChjb21tb25VcHRpbGFiVmFsdWVzKTsKICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgY2FzZSBjdXJyZW50UGF0aC5pbmRleE9mKCIvcmVjaGVyY2hlL2FjaGV0ZXItdW4tYmllbiIpID09PSAwOiAvLyBMYSBwYWdlIGFjaGV0ZXIgdW4gYmllbgogICAgICAgICAgICBjb21tb25VcHRpbGFiVmFsdWVzLnRoZW1lID0gImFjaGF0IjsKICAgICAgICAgICAgZGF0YUxheWVyLnB1c2goY29tbW9uVXB0aWxhYlZhbHVlcyk7CiAgICAgICAgICAgIGJyZWFrOwogICAgICAgIGNhc2UgY3VycmVudFBhdGguaW5kZXhPZigiL2xlLWdyb3VwZSIpID09PSAwOiAvLyBQYWdlIG91IHNvdXMtcGFnZXMgIkxlIGdyb3VwZSIKICAgICAgICAgICAgY29tbW9uVXB0aWxhYlZhbHVlcy50aGVtZSA9ICJncm91cGUiOwogICAgICAgICAgICBkYXRhTGF5ZXIucHVzaChjb21tb25VcHRpbGFiVmFsdWVzKTsKICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgY2FzZSBjdXJyZW50UGF0aC5pbmRleE9mKCIvbC1pbnZlc3Rpc3NlbWVudC1pbW1vYmlsaWVyIikgPT09IDA6IC8vIFBhZ2Ugb3Ugc291cy1wYWdlcyAiTCdpbnZlc3Rpc3NlbWVudCBpbW1vYmlsaWVyIgogICAgICAgICAgICBjb21tb25VcHRpbGFiVmFsdWVzLnRoZW1lID0gImludmVzdGlzc2VtZW50IjsKICAgICAgICAgICAgZGF0YUxheWVyLnB1c2goY29tbW9uVXB0aWxhYlZhbHVlcyk7CiAgICAgICAgICAgIGJyZWFrOwogICAgICAgIGNhc2UgY3VycmVudFBhdGguaW5kZXhPZigiL2ZhaXJlLWdlcmVyLW1hLWxvY2F0aW9uLXBhci1mb25jaWEiKSA9PT0gMDogLy8gUGFnZSBvdSBzb3VzLXBhZ2VzICJGYWlyZSBnw6lyZXIgbWEgbG9jYXRpb24iCiAgICAgICAgICAgIGNvbW1vblVwdGlsYWJWYWx1ZXMudGhlbWUgPSAiZ2VzdGlvbkxvY2F0aXZlIjsKICAgICAgICAgICAgZGF0YUxheWVyLnB1c2goY29tbW9uVXB0aWxhYlZhbHVlcyk7CiAgICAgICAgICAgIGJyZWFrOwogICAgICAgIGNhc2UgY3VycmVudFBhdGguaW5kZXhPZigiL2ZhaXJlLWdlcmVyLXVuZS1jb3Byb3ByaWV0ZSIpID09PSAwOiAvLyBQYWdlIG91IHNvdXMtcGFnZXMgIkZhaXJlIGfDqXJlciB1bmUgY29wcm9wcmnDqXTDqSIKICAgICAgICAgICAgY29tbW9uVXB0aWxhYlZhbHVlcy50aGVtZSA9ICJjb3Byb3ByaWV0ZSI7CiAgICAgICAgICAgIGRhdGFMYXllci5wdXNoKGNvbW1vblVwdGlsYWJWYWx1ZXMpOwogICAgICAgICAgICBicmVhazsKICAgICAgICBjYXNlIGN1cnJlbnRQYXRoLmluZGV4T2YoIi9zZXJ2aWNlcyIpID09PSAwOiAvLyBQYWdlIG91IHNvdXMtcGFnZXMgIkZhaXJlIGfDqXJlciB1bmUgY29wcm9wcmnDqXTDqSIKICAgICAgICAgICAgY29tbW9uVXB0aWxhYlZhbHVlcy50aGVtZSA9ICJzZXJ2aWNlcyI7CiAgICAgICAgICAgIGRhdGFMYXllci5wdXNoKGNvbW1vblVwdGlsYWJWYWx1ZXMpOwogICAgICAgICAgICBicmVhazsKICAgICAgICBjYXNlIGN1cnJlbnRQYXRoID09PSAnL21vdC1kZS1wYXNzZS1vdWJsaWUnOgogICAgICAgICAgICBjb21tb25VcHRpbGFiVmFsdWVzLnRlbXBsYXRlID0gImhvbWVwYWdlIjsKICAgICAgICAgICAgZGF0YUxheWVyLnB1c2goY29tbW9uVXB0aWxhYlZhbHVlcyk7CiAgICAgICAgICAgIGJyZWFrOwogICAgICAgIGNhc2UgY3VycmVudFBhdGggPT09ICcvJzoKICAgICAgICAgICAgY29tbW9uVXB0aWxhYlZhbHVlcy50ZW1wbGF0ZSA9ICJob21lcGFnZSI7CiAgICAgICAgICAgIGRhdGFMYXllci5wdXNoKGNvbW1vblVwdGlsYWJWYWx1ZXMpOwogICAgICAgICAgICBicmVhazsKICAgIH0KICAgIAogICAgPC9zY3JpcHQ+Cjxub3NjcmlwdD48aWZyYW1lIHNyYz0iLy93d3cuZ29vZ2xldGFnbWFuYWdlci5jb20vbnMuaHRtbD9pZD1HVE0tUEJCWldEIiBoZWlnaHQ9IjAiIHdpZHRoPSIwIiBzdHlsZT0iZGlzcGxheTpub25lO3Zpc2liaWxpdHk6aGlkZGVuIj48L2lmcmFtZT48L25vc2NyaXB0Pgo8c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCI+CiAgICB0YXJ0ZWF1Y2l0cm9uLnVzZXIuZ29vZ2xldGFnbWFuYWdlcklkID0gJ0dUTS1QQkJaV0QnOwogICAgKHRhcnRlYXVjaXRyb24uam9iID0gdGFydGVhdWNpdHJvbi5qb2IgfHwgW10pLnB1c2goJ2dvb2dsZXRhZ21hbmFnZXJfZm9uY2lhJyk7CgogICAgdGFydGVhdWNpdHJvbi51c2VyLkFCVGFzdHlJZCA9ICIwZTZkOWVhMjQ3MjgyMDcyY2UzYTg0MTMwZmM4ZTcxMiI7CiAgICAodGFydGVhdWNpdHJvbi5qb2IgPSB0YXJ0ZWF1Y2l0cm9uLmpvYiB8fCBbXSkucHVzaCgnYWJ0YXN0eV9mb25jaWEnKTsKPC9zY3JpcHQ+Cgo8c2NyaXB0PgogICAgICAgIGRhdGFMYXllciA9IHdpbmRvdy5kYXRhTGF5ZXIgfHwgW107CgogICAgICAgIGZ1bmN0aW9uIGRlZmVyKG1ldGhvZCkgewogICAgICAgIGlmICh3aW5kb3cualF1ZXJ5KQogICAgICAgICAgICBtZXRob2QoKTsKICAgICAgICBlbHNlCiAgICAgICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkgewogICAgICAgICAgICAgICAgZGVmZXIobWV0aG9kKQogICAgICAgICAgICB9LCA1MCk7CiAgICB9CgogICAgCiAgICAKPC9zY3JpcHQ+Cgo8ZGl2IGNsYXNzPSJCb2R5V3JhcHBlciI+CgogICAgPGhlYWRlciBjbGFzcz0iSGVhZGVyIiByb2xlPSJiYW5uZXIiPgoKICAgIAogICAgPGRpdiBjbGFzcz0iSGVhZGVyLXRvcCI+CgogICAgICAgICAgICA8dWwgY2xhc3M9IkhlYWRlci10b3BOYXYgSGVhZGVyLXRvcC1sZWZ0Ij4KCiAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL2ZyLmZvbmNpYS5jb20vbm90cmUtYW1iaXRpb24iCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtYmVoYXQ9IkxlZ3JvdXBlIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgTGUgZ3JvdXBlCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cDovL2NhcnJpZXJlLmZvbmNpYS5jb20vIgogICAgICAgICAgICAgICAgICAgICAgICB0YXJnZXQ9Il9ibGFuayIgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtYmVoYXQ9IkNhcnJpw6hyZSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIENhcnJpw6hyZQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHA6Ly9mb25jaWEtcmVjcnV0ZS50YWxlbnQtc29mdC5jb20vYWNjdWVpbC5hc3B4IgogICAgICAgICAgICAgICAgICAgICAgICB0YXJnZXQ9Il9ibGFuayIgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtYmVoYXQ9Ik5vc29mZnJlc2TigJllbXBsb2kiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBOb3Mgb2ZmcmVzIGTigJllbXBsb2kKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL2ZyLmZvbmNpYS5jb20vbW9uLWd1aWRlLWltbW8iCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtYmVoYXQ9Ik1vbkd1aWRlSW1tbyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIE1vbiBHdWlkZSBJbW1vCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cDovL2JlbGxlc3BlcnNvbm5lcy5mb25jaWEuY29tLyIKICAgICAgICAgICAgICAgICAgICAgICAgdGFyZ2V0PSJfYmxhbmsiICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkYXRhLWJlaGF0PSJCZWxsZXNwZXJzb25uZXMiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBCZWxsZXMgcGVyc29ubmVzCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZnIuZm9uY2lhLmNvbS9hY3R1YWxpdGVzLWVuLXBlcmlvZGUtZGUtZGVjb25maW5lbWVudCIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZT0iY29sb3I6ICNGQThBMDA7Zm9udC13ZWlnaHQ6IGJvbGQ7IiAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1iZWhhdD0iQWN0dWFsaXTDqXMiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBBY3R1YWxpdMOpcwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgPC91bD4KICAgIAogICAgPHVsIGNsYXNzPSJIZWFkZXItdG9wTmF2IEhlYWRlci10b3AtcmlnaHQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgPGEgIGNsYXNzPSJJY29uLS1wb2ludGVyIiBocmVmPSJodHRwOi8vYWdlbmNlLmZvbmNpYS5jb20iIGRhdGEtYmVoYXQ9ImhlYWRlclRyb3V2ZXJBZ2VuY2VMaWVuIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFRyb3V2ZXIgdW5lIGFnZW5jZQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC91bD4KPC9kaXY+CgoKICAgIDxwIGNsYXNzPSJIZWFkZXItc2tpcGxpbmsiPgogICAgICAgIDxhIGNsYXNzPSJIZWFkZXItbG9nbyIgaHJlZj0iLyI+CiAgICAgICAgICAgIDxpbWcgY2xhc3M9IkhlYWRlci1sb2dvLS1kZXNrdG9wIiB3aWR0aD0iNjRweCIgaGVpZ2h0PSI2NHB4IiBzcmM9Imh0dHBzOi8vcGhvdG9zLmZvbmNpYS5uZXQvaW1hZ2VzL0ZvbmNpYV9sb2dvaF82Nl82Ni5wbmciIGFsdD0iRm9uY2lhIj4KICAgICAgICAgICAgPGltZyBjbGFzcz0iSGVhZGVyLWxvZ28tLW1vYmlsZSIgd2lkdGg9IjEwOHB4IiBoZWlnaHQ9IjMwcHgiIHNyYz0iaHR0cHM6Ly9waG90b3MuZm9uY2lhLm5ldC9pbWFnZXMvRm9uY2lhX2hvbWVwYWdldl8xMDhfMzAucG5nIiBhbHQ9IkZvbmNpYSI+CiAgICAgICAgPC9hPgogICAgICAgIDxidXR0b24gY2xhc3M9IkhlYWRlci1za2lwbGluay1tZW51IEljb24tLW1lbnUiIGRhdGEtd2lkZ2V0PSJQYW5lbFNsaWRlLXRyaWdlciIgZGF0YS13aWRnZXQtc2lkZT0ibGVmdCI+TWVudTwvYnV0dG9uPgogICAgICAgIDxhIGhyZWY9Ii9sb2dpbiIgY2xhc3M9IkhlYWRlci1za2lwbGluay11c2VyIEljb24tLXVzZXItbWFsZTIiPk15Rk9OQ0lBPC9hPgogICAgPC9wPgoKICAgIDxuYXYgY2xhc3M9Ik1haW5OYXYiIHJvbGU9Im5hdmlnYXRpb24iPgogICAgICAgIDx1bCBjbGFzcz0iTWFpbk5hdi1saXN0IEhlYWRlci10b3BOYXYiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaSBjbGFzcz0iTWFpbk5hdi1pdGVtIE1haW5OYXYtaXRlbS0tbG9jYXRpb24gZmlyc3QiPiAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9mci5mb25jaWEuY29tL2FjaGF0IiAgICA+QWNoZXRlciA8c3Bhbj5vdSBsb3Vlcjwvc3Bhbj48L2E+ICAgICAgICAgICAgCiAgICA8L2xpPgoKICAgICAgICA8bGkgY2xhc3M9Ik1haW5OYXYtaXRlbSBNYWluTmF2LWl0ZW0tLWdlc3Rpb24iPiAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9mci5mb25jaWEuY29tL2ZhaXJlLWdlcmVyLW1hLWxvY2F0aW9uLXBhci1mb25jaWEiICAgID5GYWlyZSBnw6lyZXIgPHNwYW4+bWEgbG9jYXRpb248L3NwYW4+PC9hPiAgICAgICAgICAgIAogICAgPC9saT4KCiAgICAgICAgPGxpIGNsYXNzPSJNYWluTmF2LWl0ZW0gTWFpbk5hdi1pdGVtLS1jb3BybyI+ICAgICAgICA8YSBocmVmPSJodHRwczovL2ZyLmZvbmNpYS5jb20vZmFpcmUtZ2VyZXItdW5lLWNvcHJvcHJpZXRlIiAgICA+RmFpcmUgZ8OpcmVyIDxzcGFuPnVuZSBjb3Byb3ByacOpdMOpPC9zcGFuPjwvYT4gICAgICAgICAgICAKICAgIDwvbGk+CgogICAgICAgIDxsaSBjbGFzcz0iTWFpbk5hdi1pdGVtIE1haW5OYXYtaXRlbS0tdmVudGUiPiAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9mci5mb25jaWEuY29tL2VzdGltZXItZXQtdmVuZHJlIiAgICA+RXN0aW1lciA8c3Bhbj5ldCB2ZW5kcmU8L3NwYW4+PC9hPiAgICAgICAgICAgIAogICAgPC9saT4KCiAgICAgICAgPGxpIGNsYXNzPSJNYWluTmF2LWl0ZW0gTWFpbk5hdi1pdGVtLS1pbnZlc3Rpc3NlbWVudCI+ICAgICAgICA8YSBocmVmPSJodHRwczovL2ZyLmZvbmNpYS5jb20vbC1pbnZlc3Rpc3NlbWVudC1pbW1vYmlsaWVyIiAgICA+SW52ZXN0aXIgPHNwYW4+ZGFucyBsJiMwMzk7aW1tb2JpbGllcjwvc3Bhbj48L2E+ICAgICAgICAgICAgCiAgICA8L2xpPgoKICAgICAgICA8bGkgY2xhc3M9Ik1haW5OYXYtaXRlbSBNYWluTmF2LWl0ZW0tLWxvY2F0aW9udmFjYW5jZXMgbGFzdCI+ICAgICAgICA8YSBocmVmPSJodHRwczovL3d3dy5mb25jaWEtbG9jYXRpb24tdmFjYW5jZXMuZnIvI3V0bV9zb3VyY2U9Zm9uY2lhLmNvbSZhbXA7dXRtX21lZGl1bT1saWVuJmFtcDt1dG1fY2FtcGFpZ249Zm9uY2lhLmNvbSIgICAgIHRhcmdldD0iX2JsYW5rIj5Mb2NhdGlvbiA8c3Bhbj5WYWNhbmNlczwvc3Bhbj48L2E+ICAgICAgICAgICAgCiAgICA8L2xpPgoKCiAgICAKCgogICAgICAgICAgICA8bGkgY2xhc3M9Ik1haW5OYXYtaXRlbSBNYWluTmF2LWl0ZW0tLXVzZXIgbGFzdCI+CiAgICAgICAgICAgICAgICA8YSBocmVmPSIvbG9naW4iPk15Rk9OQ0lBIDxzcGFuPkVTUEFDRSBDTElFTlQ8L3NwYW4+PC9hPgogICAgICAgICAgICA8L2xpPgogICAgICAgIDwvdWw+CiAgICA8L25hdj4KCiAgICA8ZGl2IGNsYXNzPSJVc2VyTmF2IiBpZD0iTXlGb25jaWFNZW51Ij4KCiAgICA8ZGl2IGNsYXNzPSJVc2VyTmF2LW92ZXJmbG93ICI+CiAgICAgICAgCiAgICAgICAgPGRpdiBjbGFzcz0iVXNlckxvZ2luIj4KICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgIDxkaXYgY2xhc3M9IlVzZXJMb2dpbi1pbmZvIj4KICAgICAgICAgICAgPHAgY2xhc3M9IlVzZXJMb2dpbi10aXRsZSI+UHJlbWnDqHJlIGNvbm5leGlvbiA/PC9wPgogICAgCgogICAgCiAgICAgICAgPHAgY2xhc3M9IlVzZXJMb2dpbi1pbGwiPgogICAgICAgICAgICAgICAgPGltZyBzcmM9Imh0dHBzOi8vZnIuZm9uY2lhLmNvbS92YXIvZm9uY2lhL3N0b3JhZ2UvaW1hZ2VzL19hbGlhc2VzL3RodW1iXzIwNV8yMDUvbWVkaWEvaW1hZ2VzL2FpZGUvMzU3MC0yLWZyZS1GUi9BaWRlLnBuZyIgIGFsdD0iIiAvPgogICAgICAgIDwvcD4KCiAgICAKICAgIAogICAgICAgICAgICA8cCBjbGFzcz0iVXNlckxvZ2luLXRleHQiPkxvcnMgZGUgdm90cmUgcHJlbWnDqHJlIGNvbm5leGlvbiDDoCB2b3RyZSBlc3BhY2UgY2xpZW50IE15Rm9uY2lhLCB2b3VzIGRldmV6IHNhaXNpciB2b3RyZSBpZGVudGlmaWFudCBldCBsZSBtb3QgZGUgcGFzc2UgcHJvdmlzb2lyZSBxdWkgdm91cyBvbnQgw6l0w6kgdHJhbnNtaXMgcGFyIHZvdHJlIGFnZW5jZSBvdSBzdXIgdm9zIGRvY3VtZW50cyBjb21wdGFibGVzLjwvcD4KICAgIAoKICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CjxwIGNsYXNzPSJVc2VyTG9naW4tY3JlYXRlIj5QcmVtacOocmUgY29ubmV4aW9uID8gPGEKICAgICAgICAgICAgICAgIGhyZWY9Ii9wcmVtaWVyZS1jb25uZXhpb24tYS1tb24tZXNwYWNlLWNsaWVudC1mb25jaWEiPkTDqWNvdXZyZXogY29tbWVudCB2b3VzIGNvbm5lY3RlcjwvYT48L3A+CgoKICAgICAgICAKICAgICAgICA8L2Rpdj4KCiAgICA8L2Rpdj4KCjwvZGl2PgoKICAgICAgICAgICAgICAgICAgICAgICAgPC9oZWFkZXI+CiAgICAKPCEtLVtpZiBsdGUgSUUgOSBdPgo8ZGl2IGNsYXNzPSJCcm93c2VyQWxlcnQgQnJvd3NlckFsZXJ0LS12aXNpYmxlIj4KICAgIDxkaXYgY2xhc3M9IkJyb3dzZXJBbGVydC1pbm5lciI+CiAgICAgICAgPHNwYW4gY2xhc3M9IkJyb3dzZXJBbGVydC1pY29uIj4KICAgICAgICAgICAgPHN2ZyBjbGFzcz0iaWNvbiIgd2lkdGg9IjMyIiBoZWlnaHQ9IjMyIiBhcmlhLWhpZGRlbj0idHJ1ZSI+PHVzZSB4bGluazpocmVmPSIvYnVuZGxlcy9mb25jaWFpbnRlcm5ldC9zdmcvaWNvbnMuc3ZnI0ljb24tLWluZm8iPjwvdXNlPjwvc3ZnPgogICAgICAgIDwvc3Bhbj4KICAgICAgICA8cCBjbGFzcz0iQnJvd3NlckFsZXJ0LW1lc3NhZ2UiPgogICAgICAgICAgICBBdHRlbnRpb24sIHZvdHJlIG5hdmlnYXRldXIgbuKAmWVzdCBwYXMgw6Agam91ciAhIEFmaW4gZCdhbcOpbGlvcmVyIHZvdHJlIGV4cMOpcmllbmNlIHN1ciBjZSBzaXRlIG5vdXMgdm91cyBjb25zZWlsbG9ucyBkZSBtZXR0cmUgw6Agam91ciB2b3RyZSBuYXZpZ2F0ZXVyIHZlcnMgdW5lIHZlcnNpb24gcGx1cyByw6ljZW50ZQogICAgICAgIDwvcD4KICAgICAgICA8c3BhbiBjbGFzcz0iQnJvd3NlckFsZXJ0LWNsb3NlIj4KICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz0iQnJvd3NlckFsZXJ0LWNsb3NlQnRuIiBhcmlhLWxhYmVsPSJNYXNxdWVyIGNlIG1lc3NhZ2UiPgogICAgICAgICAgICAgICAgPHN2ZyBjbGFzcz0iaWNvbiIgd2lkdGg9IjEyIiBoZWlnaHQ9IjEyIiBhcmlhLWhpZGRlbj0idHJ1ZSI+PHVzZSB4bGluazpocmVmPSIvYnVuZGxlcy9mb25jaWFpbnRlcm5ldC9zdmcvaWNvbnMuc3ZnI0ljb24tLWNsb3NlMiI+PC91c2U+PC9zdmc+CiAgICAgICAgICAgIDwvYnV0dG9uPgogICAgICAgIDwvc3Bhbj4KICAgIDwvZGl2Pgo8L2Rpdj4KPCFbZW5kaWZdLS0+CgoKCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9IkJyZWFkY3J1bWJzIj4KICAgICAgICAgICAgPHAgICAgIGNsYXNzPSJCcmVhZGNydW1icy1pbm5lciIgZGF0YS10eXBlPSJ5b2xvIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3Bhbj5Gb25jaWE8L3NwYW4+ICAgICAgICAgICAgICAgICAgICAgICAgICAgIAoKICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iL2FjaGF0IiAgICAgY2xhc3M9IkJyZWFkY3J1bWJzLWxpbmsiPkFjaGF0PC9hPiAgICAgICAgICAgICAgICAgICAgICAgICAgICAKCiAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Ii9hY2hhdC9wYXJpcy03NTAxMSIgICAgIGNsYXNzPSJCcmVhZGNydW1icy1saW5rIj5QYXJpcyAoNzUwMTEpPC9hPiAgICAgICAgICAgICAgICAgICAgICAgICAgICAKCiAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuPkFwcGFydGVtZW50PC9zcGFuPiAgICAgICAgICAgICAgICAgICAgICAgICAgICAKCiAgICAKCiAgICAgICAgICAgIDwvcD4KICAgICAgICA8L2Rpdj4KICAgIAoKCiAgICAgICAgICAgICAgICAgICAgICAgIAogICAgCiAgICAKICAgIDxkaXYgY2xhc3M9IkNvbnRlbnQiPgoKICAgICAgICA8ZGl2IGNsYXNzPSJDb250ZW50LWJhbmRvIENvbnRlbnQtYmFuZG8tLWdyYWRpZW50Ij48L2Rpdj4KCiAgICAgICAgPGRpdiBjbGFzcz0iUmVzdWx0c05hdiIgZGF0YS1wcm9wZXJ0eS1yZWZlcmVuY2U9IjEzODcyMTMiPgoKICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICA8c2VjdGlvbiBjbGFzcz0iQ29udGVudC1yb3cgQ29udGVudC1yb3ctLWJsZWVkIj4KICAgICAgICAgICAgICAgIDxkaXYgaWQ9ImNpdHlzY2FuLXdpZGdldCIKICAgICBkYXRhLWNsaWVudC1rZXk9Ik52MUM5MmdQRGJmNE9KOHl3MiIKICAgICBkYXRhLWV4dC1hZGRyZXNzLWlkPSJUMTM4NzIxMyIKICAgICBkYXRhLWxhbmd1YWdlPSJmci1GUiIKICAgICAgICAgIGNsYXNzPSJPZmZlck1hcCI+PC9kaXY+ICAgICAgICAgICAgPC9zZWN0aW9uPgogICAgICAgICAgICAgICAgPHNlY3Rpb24gY2xhc3M9IkNvbnRlbnQtcm93IENvbnRlbnQtcm93LS1ncmF5Ij4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iQ29udGVudC1vdmVyZmxvdyI+CgogICAgICAgICAgICAgICAgPG1haW4gY2xhc3M9IkNvbnRlbnQtbWFpbiIgcm9sZT0ibWFpbiI+CgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Ik9mZmVyVG9wIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iT2ZmZXJUb3AtaGVhZCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJPZmZlclRvcC1iYWRnZSI+RXhjbHVzaWY8L3A+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGgxIGNsYXNzPSJPZmZlclRvcC10aXRsZSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgQXBwYXJ0ZW1lbnQKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAxIHBpw6hjZSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgw6AgdmVuZHJlCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2gxPgogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9Ik9mZmVyVG9wLWZhdiI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIGNsYXNzPSJGYXZCdG4gRmF2QnRuLS1pbmFjdGl2ZSIgYXJpYS1sYWJlbD0iQWpvdXRlciBhdXggZmF2b3JpcyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHN2ZyBjbGFzcz0iaWNvbiIgc3R5bGU9IndpZHRoOjE1cHg7aGVpZ2h0OjE1cHgiIGFyaWEtaGlkZGVuPSJ0cnVlIj48dXNlIHhsaW5rOmhyZWY9Ii9idW5kbGVzL2ZvbmNpYWludGVybmV0L3N2Zy9pY29ucy5zdmcjSWNvbi0tc3RhcjIiPjwvdXNlPjwvc3ZnPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9idXR0b24+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvcD4KCiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Ik9mZmVyVG9wLWNvbHMiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iT2ZmZXJUb3AtY29sIE9mZmVyVG9wLWNvbC0tbGVmdCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9Ik9mZmVyVG9wLXByaWNlIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDEwOCAwMDAmbmJzcDvigqwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3A+CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJPZmZlclRvcC1pbmZvIj5Ib25vcmFpcmVzIGQnYWdlbmNlIMOgIGxhIGNoYXJnZSBkdSB2ZW5kZXVyPC9wPgoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0iT2ZmZXJUb3AtbG9jIiBkYXRhLWd0bS16aXBjb2RlPSI3NTAxMSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzdmcgY2xhc3M9Imljb24iIHN0eWxlPSJ3aWR0aDoxNnB4O2hlaWdodDoxNnB4IiBhcmlhLWhpZGRlbj0idHJ1ZSI+PHVzZSB4bGluazpocmVmPSIvYnVuZGxlcy9mb25jaWFpbnRlcm5ldC9zdmcvaWNvbnMuc3ZnI0ljb24tLXBvaW50ZXIzIj48L3VzZT48L3N2Zz4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgNzUwMTEgUGFyaXMgKDc1MDExKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iT2ZmZXJUb3AtY29sIE9mZmVyVG9wLWNvbC0tcmlnaHQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Ik1pbmlEYXRhIE1pbmlEYXRhLS1mbGV4Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iTWluaURhdGEtcm93IE1pbmlEYXRhLXJvdy0tYmciPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0iTWluaURhdGEtaXRlbSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDcuOTIgbTxzdXA+Mjwvc3VwPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJNaW5pRGF0YS1pdGVtIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgMSBwacOoY2UgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iT2ZmZXJTbGlkZXIiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Ik9mZmVyU2xpZGVyLW1haW4iIGlkPSJPZmZlclNsaWRlck1haW4iPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dWwgY2xhc3M9Ik9mZmVyU2xpZGVyLW1haW4tc2xpZGVzIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpIGNsYXNzPSJPZmZlclNsaWRlci1tYWluLWl0ZW0iPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW1nIHNyYz0iaHR0cDovL3Bob3Rvcy5mci5mb25jaWEuY29tL21pbmljcC82NDAvNDgwL3Bob3Rvcy8xMzg3LzIxMy8xMzg3MjEzL2dyYW5kLzEzODcyMTNfODJjMzI2ODMyMWE0Y2NkYzQwNGZkYjJkNjVkODJmMGQ1ZWI1MDQwYzg3ZWEyLmpwZz9kYXRlbWFqPTIwMjAtMDUtMDggMDk6MDU6MDEuMTMzIiB3aWR0aD0iNjAwIiBoZWlnaHQ9IjQ1MCIgYWx0PSJBcHBhcnRlbWVudCDDoCB2ZW5kcmUsIFBhcmlzICg3NTAxMSkiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaSBjbGFzcz0iT2ZmZXJTbGlkZXItbWFpbi1pdGVtIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBzcmM9Imh0dHA6Ly9waG90b3MuZnIuZm9uY2lhLmNvbS9taW5pY3AvNjQwLzQ4MC9waG90b3MvMTM4Ny8yMTMvMTM4NzIxMy9ncmFuZC8xMzg3MjEzXzhlMWFmZjY2ZTRhMzQ4MGVmZTZmYzAzOTJlNWVjZWZlNWUzYzNiNGQ2MTZmYy5qcGc/ZGF0ZW1haj0yMDIwLTA1LTA4IDA5OjA1OjAxLjE2NCIgd2lkdGg9IjYwMCIgaGVpZ2h0PSI0NTAiIGFsdD0iQXBwYXJ0ZW1lbnQgw6AgdmVuZHJlLCBQYXJpcyAoNzUwMTEpIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGkgY2xhc3M9Ik9mZmVyU2xpZGVyLW1haW4taXRlbSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgc3JjPSJodHRwOi8vcGhvdG9zLmZyLmZvbmNpYS5jb20vbWluaWNwLzY0MC80ODAvcGhvdG9zLzEzODcvMjEzLzEzODcyMTMvZ3JhbmQvMTM4NzIxM183YzI3NTBlNzY3OWRkYzhiNjhjNjg0MDkzYzk3ZWExOTVlM2MzOThiYmU4MmQuanBnP2RhdGVtYWo9MjAyMC0wNS0wOCAwOTowNTowMS4xOTYiIHdpZHRoPSI2MDAiIGhlaWdodD0iNDUwIiBhbHQ9IkFwcGFydGVtZW50IMOgIHZlbmRyZSwgUGFyaXMgKDc1MDExKSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpIGNsYXNzPSJPZmZlclNsaWRlci1tYWluLWl0ZW0iPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW1nIHNyYz0iaHR0cDovL3Bob3Rvcy5mci5mb25jaWEuY29tL21pbmljcC82NDAvNDgwL3Bob3Rvcy8xMzg3LzIxMy8xMzg3MjEzL2dyYW5kLzEzODcyMTNfNDg3MDAyNTg5NjA4YWRlYmJkZGMxYjFmYTdmNTgyMGE1ZTM0NTRiODc1NjU0LmpwZz9kYXRlbWFqPTIwMjAtMDUtMDggMDk6MDU6MDEuMjU4IiB3aWR0aD0iNjAwIiBoZWlnaHQ9IjQ1MCIgYWx0PSJBcHBhcnRlbWVudCDDoCB2ZW5kcmUsIFBhcmlzICg3NTAxMSkiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaSBjbGFzcz0iT2ZmZXJTbGlkZXItbWFpbi1pdGVtIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBzcmM9Imh0dHA6Ly9waG90b3MuZnIuZm9uY2lhLmNvbS9taW5pY3AvNjQwLzQ4MC9waG90b3MvMTM4Ny8yMTMvMTM4NzIxMy9ncmFuZC8xMzg3MjEzXzBmNTQyOWI2MmEzYmRlZGE0Y2RmNmJhYTNkNGI3MWI5NWUzYzM5OWRlNjcyMC5qcGc/ZGF0ZW1haj0yMDIwLTA1LTA4IDA5OjA1OjAxLjI3NCIgd2lkdGg9IjYwMCIgaGVpZ2h0PSI0NTAiIGFsdD0iQXBwYXJ0ZW1lbnQgw6AgdmVuZHJlLCBQYXJpcyAoNzUwMTEpIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC91bD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9Ik9mZmVyU2xpZGVyLW1haW4tY291bnQiPjwvcD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iT2ZmZXJTbGlkZXItY29udGFpbmVyIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iT2ZmZXJTbGlkZXItdGh1bWJzIE9mZmVyU2xpZGVyLXRodW1icy0tbWluaSIgaWQ9Ik9mZmVyU2xpZGVyVGh1bWJzIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx1bCBjbGFzcz0iT2ZmZXJTbGlkZXItdGh1bWJzLXNsaWRlcyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpIGNsYXNzPSJPZmZlclNsaWRlci10aHVtYnMtaXRlbSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW1nIHNyYz0iaHR0cDovL3Bob3Rvcy5mci5mb25jaWEuY29tL21pbmljcC82NDAvNDgwL3Bob3Rvcy8xMzg3LzIxMy8xMzg3MjEzL2dyYW5kLzEzODcyMTNfODJjMzI2ODMyMWE0Y2NkYzQwNGZkYjJkNjVkODJmMGQ1ZWI1MDQwYzg3ZWEyLmpwZz9kYXRlbWFqPTIwMjAtMDUtMDggMDk6MDU6MDEuMTMzIiB3aWR0aD0iNjAwIiBoZWlnaHQ9IjQ1MCIgYWx0PSJBcHBhcnRlbWVudCDDoCB2ZW5kcmUsIFBhcmlzICg3NTAxMSkiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaSBjbGFzcz0iT2ZmZXJTbGlkZXItdGh1bWJzLWl0ZW0iPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBzcmM9Imh0dHA6Ly9waG90b3MuZnIuZm9uY2lhLmNvbS9taW5pY3AvNjQwLzQ4MC9waG90b3MvMTM4Ny8yMTMvMTM4NzIxMy9ncmFuZC8xMzg3MjEzXzhlMWFmZjY2ZTRhMzQ4MGVmZTZmYzAzOTJlNWVjZWZlNWUzYzNiNGQ2MTZmYy5qcGc/ZGF0ZW1haj0yMDIwLTA1LTA4IDA5OjA1OjAxLjE2NCIgd2lkdGg9IjYwMCIgaGVpZ2h0PSI0NTAiIGFsdD0iQXBwYXJ0ZW1lbnQgw6AgdmVuZHJlLCBQYXJpcyAoNzUwMTEpIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGkgY2xhc3M9Ik9mZmVyU2xpZGVyLXRodW1icy1pdGVtIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgc3JjPSJodHRwOi8vcGhvdG9zLmZyLmZvbmNpYS5jb20vbWluaWNwLzY0MC80ODAvcGhvdG9zLzEzODcvMjEzLzEzODcyMTMvZ3JhbmQvMTM4NzIxM183YzI3NTBlNzY3OWRkYzhiNjhjNjg0MDkzYzk3ZWExOTVlM2MzOThiYmU4MmQuanBnP2RhdGVtYWo9MjAyMC0wNS0wOCAwOTowNTowMS4xOTYiIHdpZHRoPSI2MDAiIGhlaWdodD0iNDUwIiBhbHQ9IkFwcGFydGVtZW50IMOgIHZlbmRyZSwgUGFyaXMgKDc1MDExKSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpIGNsYXNzPSJPZmZlclNsaWRlci10aHVtYnMtaXRlbSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW1nIHNyYz0iaHR0cDovL3Bob3Rvcy5mci5mb25jaWEuY29tL21pbmljcC82NDAvNDgwL3Bob3Rvcy8xMzg3LzIxMy8xMzg3MjEzL2dyYW5kLzEzODcyMTNfNDg3MDAyNTg5NjA4YWRlYmJkZGMxYjFmYTdmNTgyMGE1ZTM0NTRiODc1NjU0LmpwZz9kYXRlbWFqPTIwMjAtMDUtMDggMDk6MDU6MDEuMjU4IiB3aWR0aD0iNjAwIiBoZWlnaHQ9IjQ1MCIgYWx0PSJBcHBhcnRlbWVudCDDoCB2ZW5kcmUsIFBhcmlzICg3NTAxMSkiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaSBjbGFzcz0iT2ZmZXJTbGlkZXItdGh1bWJzLWl0ZW0iPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBzcmM9Imh0dHA6Ly9waG90b3MuZnIuZm9uY2lhLmNvbS9taW5pY3AvNjQwLzQ4MC9waG90b3MvMTM4Ny8yMTMvMTM4NzIxMy9ncmFuZC8xMzg3MjEzXzBmNTQyOWI2MmEzYmRlZGE0Y2RmNmJhYTNkNGI3MWI5NWUzYzM5OWRlNjcyMC5qcGc/ZGF0ZW1haj0yMDIwLTA1LTA4IDA5OjA1OjAxLjI3NCIgd2lkdGg9IjYwMCIgaGVpZ2h0PSI0NTAiIGFsdD0iQXBwYXJ0ZW1lbnQgw6AgdmVuZHJlLCBQYXJpcyAoNzUwMTEpIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC91bD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJPZmZlclNsaWRlci1leHRyYSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CgoKICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJPZmZlckRldGFpbHMiPgoKICAgICAgICAgICAgICAgICAgICAgICAgPHNlY3Rpb24gY2xhc3M9Ik9mZmVyRGV0YWlscy1zZWN0aW9uIj4KCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0iT2ZmZXJEZXRhaWxzLXJlZiI+UsOpZi4gMTM4NzIxMzwvcD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxoMiBjbGFzcz0iT2ZmZXJEZXRhaWxzLXRpdGxlIj5EZXNjcmlwdGlvbiBkw6l0YWlsbMOpZTwvaDI+CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iT2ZmZXJEZXRhaWxzLWNvbnRlbnQiPgoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cD5NwrAgT2JlcmthbXBmClNpdHXDqSBhdSBkZXJuaWVyIMOpdGFnZSBkJ3VuZSBjb3Byb3ByacOpdMOpIGRlIGJlbGxlIGZhY3R1cmUsIEZPTkNJQSB2b3VzIHByb3Bvc2UgdW5lIGNoYW1icmUgZGUgYm9ubmUgZm9uY3Rpb25uZWxsZSA6IEFnZW5jZW1lbnQgb3B0aW1pc8OpLCBwZXRpdGUgc2FsbGUgZCdlYXUgdW5lIGtpdGNoZW5ldHRlLCB3YyBzYW5pYnJveWV1ci4KQ29udGFjdGVyIERhdmlkIEJFU1NBUklPTiAwNi45OS4zNi40My41NTwvcD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJPZmZlckRldGFpbHMtY29sdW1uaXplIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgZGF0YS13aWRnZXQ9IlRvZ2dsZUJsb2NrTW9iaWxlIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aDMgY2xhc3M9Ik9mZmVyRGV0YWlscy10aXRsZS0tMiIgZGF0YS13aWRnZXQ9IlRvZ2dsZUJsb2NrTW9iaWxlLXRyaWdnZXIiIGRhdGEtYmVoYXQ9ImNhcmFjdER1QmllbiI+Q2FyYWN0w6lyaXN0aXF1ZXMgZHUgYmllbjwvaDM+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBkYXRhLXdpZGdldD0iVG9nZ2xlQmxvY2tNb2JpbGUtY29udGVudCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dWwgY2xhc3M9Ikxpc3QgTGlzdC0tZGF0YSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpPjxzcGFuIGNsYXNzPSJMaXN0LWRhdGEiPk5vbWJyZSBkZSBwacOoY2VzPC9zcGFuPiA8c3Ryb25nIGNsYXNzPSJMaXN0LXZhbHVlIj4xPC9zdHJvbmc+PC9saT48bGk+PHNwYW4gY2xhc3M9Ikxpc3QtZGF0YSI+Q29uc3RydWN0aW9uPC9zcGFuPiA8c3Ryb25nIGNsYXNzPSJMaXN0LXZhbHVlIj4xOTA1PC9zdHJvbmc+PC9saT48bGk+PHNwYW4gY2xhc3M9Ikxpc3QtZGF0YSI+w4l0YWdlPC9zcGFuPiA8c3Ryb25nIGNsYXNzPSJMaXN0LXZhbHVlIj42PC9zdHJvbmc+PC9saT48bGk+PHNwYW4gY2xhc3M9Ikxpc3QtZGF0YSI+Tm9tYnJlIGQnw6l0YWdlczwvc3Bhbj4gPHN0cm9uZyBjbGFzcz0iTGlzdC12YWx1ZSI+Njwvc3Ryb25nPjwvbGk+PGxpPjxzcGFuIGNsYXNzPSJMaXN0LWRhdGEiPlR5cGUgZGUgY3Vpc2luZTwvc3Bhbj4gPHN0cm9uZyBjbGFzcz0iTGlzdC12YWx1ZSI+S2l0Y2hlbmV0dGU8L3N0cm9uZz48L2xpPjxsaT48c3BhbiBjbGFzcz0iTGlzdC1kYXRhIj7DiXRhdCBjdWlzaW5lPC9zcGFuPiA8c3Ryb25nIGNsYXNzPSJMaXN0LXZhbHVlIj5BbcOpbmFnw6llPC9zdHJvbmc+PC9saT48bGk+PHNwYW4gY2xhc3M9Ikxpc3QtZGF0YSI+TW9kZSBjaGF1ZmZhZ2U8L3NwYW4+IDxzdHJvbmcgY2xhc3M9Ikxpc3QtdmFsdWUiPkluZGl2aWR1ZWw8L3N0cm9uZz48L2xpPjxsaT48c3BhbiBjbGFzcz0iTGlzdC1kYXRhIj5OYXR1cmUgY2hhdWZmYWdlPC9zcGFuPiA8c3Ryb25nIGNsYXNzPSJMaXN0LXZhbHVlIj5FbGVjdHJpcXVlPC9zdHJvbmc+PC9saT48bGk+PHNwYW4gY2xhc3M9Ikxpc3QtZGF0YSI+Q2F0w6lnb3JpZTwvc3Bhbj4gPHN0cm9uZyBjbGFzcz0iTGlzdC12YWx1ZSI+QW5jaWVuPC9zdHJvbmc+PC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdWw+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBkYXRhLXdpZGdldD0iVG9nZ2xlQmxvY2tNb2JpbGUiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aDMgY2xhc3M9Ik9mZmVyRGV0YWlscy10aXRsZS0tMiIgZGF0YS13aWRnZXQ9IlRvZ2dsZUJsb2NrTW9iaWxlLXRyaWdnZXIiPkluZm9ybWF0aW9uIGNvcHJvcHJpw6l0w6k8L2gzPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGRhdGEtd2lkZ2V0PSJUb2dnbGVCbG9ja01vYmlsZS1jb250ZW50Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHVsIGNsYXNzPSJMaXN0IExpc3QtLWRhdGEiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGk+PHNwYW4gY2xhc3M9Ikxpc3QtZGF0YSI+Tm9tYnJlIGRlIGxvdHM8L3NwYW4+IDxzdHJvbmcgY2xhc3M9Ikxpc3QtdmFsdWUiPjg5PC9zdHJvbmc+PC9saT48bGk+PHNwYW4gY2xhc3M9Ikxpc3QtZGF0YSI+Q2hhcmdlcyBhbm51ZWxsZXM8L3NwYW4+IDxzdHJvbmcgY2xhc3M9Ikxpc3QtdmFsdWUiPjE4MCDigqw8L3N0cm9uZz48L2xpPjxsaT48c3BhbiBjbGFzcz0iTGlzdC1kYXRhIj5Db3Byb3ByaWV0w6kgZW4gZGlmZmljdWx0w6k8L3NwYW4+IDxzdHJvbmcgY2xhc3M9Ikxpc3QtdmFsdWUiPm5vbjwvc3Ryb25nPjwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC91bD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBkYXRhLXdpZGdldD0iVG9nZ2xlQmxvY2tNb2JpbGUiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxoMyBjbGFzcz0iT2ZmZXJEZXRhaWxzLXRpdGxlLS0yIiBkYXRhLXdpZGdldD0iVG9nZ2xlQmxvY2tNb2JpbGUtdHJpZ2dlciIgZGF0YS1iZWhhdD0ic3VyZmFjZUJpZW4iPlN1cmZhY2VzPC9oMz4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGRhdGEtd2lkZ2V0PSJUb2dnbGVCbG9ja01vYmlsZS1jb250ZW50Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHVsIGNsYXNzPSJMaXN0IExpc3QtLWRhdGEiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpPjxzcGFuIGNsYXNzPSJMaXN0LWRhdGEiPlN1cmZhY2UgaGFiaXRhYmxlPC9zcGFuPiA8c3Ryb25nIGNsYXNzPSJMaXN0LXZhbHVlIj43LjkyIG3Csjwvc3Ryb25nPjwvbGk+PGxpPjxzcGFuIGNsYXNzPSJMaXN0LWRhdGEiPlN1cmZhY2UgQ2FycmV6PC9zcGFuPiA8c3Ryb25nIGNsYXNzPSJMaXN0LXZhbHVlIj43LjkyIG3Csjwvc3Ryb25nPjwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdWw+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCgoKCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCgoKCgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgZGF0YS13aWRnZXQ9IlRvZ2dsZUJsb2NrTW9iaWxlIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aDMgY2xhc3M9Ik9mZmVyRGV0YWlscy10aXRsZS0tMiIgZGF0YS13aWRnZXQ9IlRvZ2dsZUJsb2NrTW9iaWxlLXRyaWdnZXIiIGRhdGEtYmVoYXQ9ImRpdmVyc0JpZW4iPkRpdmVyczwvaDM+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBkYXRhLXdpZGdldD0iVG9nZ2xlQmxvY2tNb2JpbGUtY29udGVudCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dWwgY2xhc3M9Ikxpc3QgTGlzdC0tYnVsbGV0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGk+RGlnaWNvZGU8L2xpPjxsaT5NYWlzb24gZGUgZ2FyZGllbnM8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC91bD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9Ik9mZmVyRGV0YWlscy1iYXJlbWUiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwOi8vYWdlbmNlLmZvbmNpYS5jb20vcGFyaXMtNzUwMTEvYWdlbmNlLWltbW9iaWxpZXJlL2ZvbmNpYS10cmFuc2FjdGlvbi1wYXJpcy12b2x0YWlyZS0xMTMyIiByZWw9Im5vZm9sbG93IiB0YXJnZXQ9Il9ibGFuayI+Vm9pciBsZSBiYXLDqG1lIGRlIGwnYWdlbmNlPC9hPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvcD4KCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iTGVnYWxNZW50aW9ucyBMZWdhbE1lbnRpb25zLS1zbWFsbCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgICAgICAgICAgICAgIDwvc2VjdGlvbj4KCiAgICAgICAgICAgICAgICAgICAgICAgIDxzZWN0aW9uIGNsYXNzPSJPZmZlckRldGFpbHMtc2VjdGlvbiIgZGF0YS13aWRnZXQ9IlRvZ2dsZUJsb2NrTW9iaWxlIj4KICAgIDxoMiBjbGFzcz0iT2ZmZXJEZXRhaWxzLXRpdGxlIiBkYXRhLXdpZGdldD0iVG9nZ2xlQmxvY2tNb2JpbGUtdHJpZ2dlciIgZGF0YS1iZWhhdD0iZGlhZ25vc3RpY1BlcmZvcm1hbmNlc0JpZW4iPkRpYWdub3N0aWMgcGVyZm9ybWFuY2VzIMOpbmVyZ8OpdGlxdWVzPC9oMj4KICAgIDxkaXYgY2xhc3M9Ik9mZmVyRGV0YWlscy1jb250ZW50IiBkYXRhLXdpZGdldD0iVG9nZ2xlQmxvY2tNb2JpbGUtY29udGVudCI+CiAgICAgICAgPHAgY2xhc3M9InBvc2l0aW9uTGVmdCI+CiAgICAgICAgICAgIDxpbWcgc3JjPSJodHRwOi8vZHBlLmZvbmNpYS5uZXQvMjU2LzQ1LzEvMjAwLzIwMC8xLzAvZGlhZ3JhbW1lRW5lcmdpZS5wbmciIGFsdD0iRGlhZ3JhbW1lIMOpbmVyZ2V0aXF1ZSIgd2lkdGg9IjIwMCIgaGVpZ2h0PSIyMDAiIC8+CiAgICAgICAgPC9wPgogICAgICAgIDxwIGNsYXNzPSJ0ZXh0U21hbGwiPkNvbnNvbW1hdGlvbnMgw6luZXJnw6l0aXF1ZXMgKGVuIMOpbmVyZ2llIHByaW1haXJlKSBwb3VyIGxlIGNoYXVmZmFnZSwgbGEgcHJvZHVjdGlvbiBkJ2VhdSwgY2hhdWRlIHNhbml0YWlyZSBldCBsZSByZWZyb2lkaXNzZW1lbnQuPC9wPgogICAgICAgIDxwIGNsYXNzPSJ0ZXh0U21hbGwiPkluZGljZSBkZSBtZXN1cmUgOiBrV2hFUC9tJnN1cDI7LmFuPC9wPgogICAgPC9kaXY+Cjwvc2VjdGlvbj4KCjxzZWN0aW9uIGNsYXNzPSJPZmZlckRldGFpbHMtc2VjdGlvbiIgZGF0YS13aWRnZXQ9IlRvZ2dsZUJsb2NrTW9iaWxlIj4KICAgIDxoMiBjbGFzcz0iT2ZmZXJEZXRhaWxzLXRpdGxlIiBkYXRhLXdpZGdldD0iVG9nZ2xlQmxvY2tNb2JpbGUtdHJpZ2dlciIgZGF0YS1iZWhhdD0iZ2F6RWZmZXRTZXJyZUJpZW4iPkdheiDDoCBFZmZldCBkZSBTZXJyZTwvaDI+CiAgICA8ZGl2IGNsYXNzPSJPZmZlckRldGFpbHMtY29udGVudCIgZGF0YS13aWRnZXQ9IlRvZ2dsZUJsb2NrTW9iaWxlLWNvbnRlbnQiPgogICAgICAgIDxwIGNsYXNzPSJwb3NpdGlvbkxlZnQiPgogICAgICAgICAgICA8aW1nIHNyYz0iaHR0cDovL2RwZS5mb25jaWEubmV0LzI1Ni80NS8xLzIwMC8yMDAvMi8wL2RpYWdyYW1tZUVuZXJnaWUucG5nIiBhbHQ9IkdheiDDoCBFZmZldCBkZSBTZXJyZSIgd2lkdGg9IjIwMCIgaGVpZ2h0PSIyMDAiIC8+CiAgICAgICAgPC9wPgogICAgICAgIDxwIGNsYXNzPSJ0ZXh0U21hbGwiPkluZGljYXRldXIgcXVpIHJhcHBvcnRlIGxhIHF1YW50aXTDqSBkZSBnYXogw6AgZWZmZXQgZGUgc2VycmUgw6ltaXMsIG1lc3Vyw6llIHBhciBzb24gw6lxdWl2YWxlbnQgZW4gZGlveHlkZSBkZSBjYXJib25lLCBhdSBwcm9kdWl0IGludMOpcmlldXIgYnJ1dC48L3A+CiAgICAgICAgPHAgY2xhc3M9InRleHRTbWFsbCI+SW5kaWNlIGRlIG1lc3VyZSA6IEtnw6lxQ08yL20mc3VwMjsuYW48L3A+CiAgICA8L2Rpdj4KPC9zZWN0aW9uPgoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICAgICAgICAgIAo8cCBjbGFzcz0iU2hhcmUiPgogICAgPGEgaWQ9IkZhY2Vib29rIiBocmVmPSJodHRwczovL3d3dy5mYWNlYm9vay5jb20vc2hhcmVyL3NoYXJlci5waHA/dT1odHRwczovL2ZyLmZvbmNpYS5jb20vYWNoYXQvcGFyaXMtNzUwMTEvYXBwYXJ0ZW1lbnQvMTM4NzIxMy5odG0iIHRhcmdldD0iX2JsYW5rIiBjbGFzcz0iU2hhcmUtaXRlbSBTaGFyZS1GYWNlYm9vayI+CiAgICAgICAgPHN2ZyBjbGFzcz0iaWNvbiIgc3R5bGU9IndpZHRoOjI0cHg7aGVpZ2h0OjI0cHgiIGFyaWEtaGlkZGVuPSJ0cnVlIj48dXNlIHhsaW5rOmhyZWY9Ii9idW5kbGVzL2ZvbmNpYWludGVybmV0L3N2Zy9pY29ucy5zdmcjSWNvbi0tZmFjZWJvb2siPjwvdXNlPjwvc3ZnPgogICAgICAgIDxzcGFuIGNsYXNzPSJTaGFyZS1sYWJlbCI+UGFydGFnZXIgY2UgY29udGVudSBzdXIgRmFjZWJvb2s8L3NwYW4+CiAgICA8L2E+CgogICAgPGEgaWQ9IlR3aXR0ZXIiIGNsYXNzPSJTaGFyZS1pdGVtIgogICAgICAgaHJlZj0iaHR0cHM6Ly90d2l0dGVyLmNvbS9pbnRlbnQvdHdlZXQ/dGV4dD1BcHBhcnRlbWVudCAxIHBpw6hjZSDDoCB2ZW5kcmUmdXJsPWh0dHBzJTNBJTJGJTJGZnIuZm9uY2lhLmNvbSUyRmFjaGF0JTJGcGFyaXMtNzUwMTElMkZhcHBhcnRlbWVudCUyRjEzODcyMTMuaHRtJnZpYT1mb25jaWEiCiAgICAgICAgICAgICAgZGF0YS1zaXplPSJsYXJnZSIKICAgICAgIHRhcmdldD0iX2JsYW5rIiA+CiAgICAgICAgPHN2ZyBjbGFzcz0iaWNvbiIgc3R5bGU9IndpZHRoOjI0cHg7aGVpZ2h0OjI0cHgiIGFyaWEtaGlkZGVuPSJ0cnVlIj48dXNlIHhsaW5rOmhyZWY9Ii9idW5kbGVzL2ZvbmNpYWludGVybmV0L3N2Zy9pY29ucy5zdmcjSWNvbi0tdHdpdHRlciI+PC91c2U+PC9zdmc+CiAgICAgICAgPHNwYW4gY2xhc3M9IlNoYXJlLWxhYmVsIj5QYXJ0YWdlciBjZSBjb250ZW51IHN1ciBUd2l0dGVyPC9zcGFuPgogICAgPC9hPgoKICAgIDxhIGlkPSJHb29nbGUrIiBjbGFzcz0iU2hhcmUtaXRlbSIgaHJlZj0iaHR0cHM6Ly9wbHVzLmdvb2dsZS5jb20vc2hhcmU/dXJsPWh0dHBzJTNBJTJGJTJGZnIuZm9uY2lhLmNvbSUyRmFjaGF0JTJGcGFyaXMtNzUwMTElMkZhcHBhcnRlbWVudCUyRjEzODcyMTMuaHRtIiBvbmNsaWNrPSJqYXZhc2NyaXB0OndpbmRvdy5vcGVuKHRoaXMuaHJlZiwnJywgJ21lbnViYXI9bm8sdG9vbGJhcj1ubyxyZXNpemFibGU9eWVzLHNjcm9sbGJhcnM9eWVzLGhlaWdodD02MDAsd2lkdGg9NjAwJyk7cmV0dXJuIGZhbHNlOyI+CiAgICAgICAgPHN2ZyBjbGFzcz0iaWNvbiIgc3R5bGU9IndpZHRoOjI0cHg7aGVpZ2h0OjI0cHgiIGFyaWEtaGlkZGVuPSJ0cnVlIj48dXNlIHhsaW5rOmhyZWY9Ii9idW5kbGVzL2ZvbmNpYWludGVybmV0L3N2Zy9pY29ucy5zdmcjSWNvbi0tZ29vZ2xlIj48L3VzZT48L3N2Zz4KICAgICAgICA8c3BhbiBjbGFzcz0iU2hhcmUtbGFiZWwiPlBhcnRhZ2VyIGNlIGNvbnRlbnUgc3VyIEdvb2dsZSArPC9zcGFuPgogICAgPC9hPgoKICAgIDxhIGNsYXNzPSJTaGFyZS1pdGVtIE1vZGFsLWxpbmstLWFqYXgiIGhyZWY9Ii9zaGFyZS1jb250ZW50LXBvcGluL2h0dHBzJTI1M0ElMjUyRiUyNTJGZnIuZm9uY2lhLmNvbSUyNTJGYWNoYXQlMjUyRnBhcmlzLTc1MDExJTI1MkZhcHBhcnRlbWVudCUyNTJGMTM4NzIxMy5odG0iPgogICAgICAgIDxzdmcgY2xhc3M9Imljb24iIHN0eWxlPSJ3aWR0aDoyNHB4O2hlaWdodDoyNHB4IiBhcmlhLWhpZGRlbj0idHJ1ZSI+PHVzZSB4bGluazpocmVmPSIvYnVuZGxlcy9mb25jaWFpbnRlcm5ldC9zdmcvaWNvbnMuc3ZnI0ljb24tLWVudmVsb3BlIj48L3VzZT48L3N2Zz4KICAgICAgICA8c3BhbiBjbGFzcz0iU2hhcmUtbGFiZWwiPkVudm95ZXIgY2UgY29udGVudSDDoCB1biBhbWk8L3NwYW4+CiAgICA8L2E+CgogICAgPGJ1dHRvbiBvbmNsaWNrPSJqYXZhc2NyaXB0OndpbmRvdy5wcmludCgpIiBjbGFzcz0iU2hhcmUtaXRlbSI+CiAgICAgICAgPHN2ZyBjbGFzcz0iaWNvbiIgc3R5bGU9IndpZHRoOjI0cHg7aGVpZ2h0OjI0cHgiIGFyaWEtaGlkZGVuPSJ0cnVlIj48dXNlIHhsaW5rOmhyZWY9Ii9idW5kbGVzL2ZvbmNpYWludGVybmV0L3N2Zy9pY29ucy5zdmcjSWNvbi0tcHJpbnRlciI+PC91c2U+PC9zdmc+CiAgICAgICAgPHNwYW4gY2xhc3M9IlNoYXJlLWxhYmVsIj5JbXByaW1lciBjZSBjb250ZW51PC9zcGFuPgogICAgPC9idXR0b24+CjwvcD4KCgogICAgICAgICAgICAgICAgPC9tYWluPgoKCgogICAgICAgICAgICAgICAgPGFzaWRlIGNsYXNzPSJDb250ZW50LXNpZGViYXIgU2lkZWJhciI+CiAgICAgICAgICAgICAgICAgICAgCiAgICAKCgo8c2VjdGlvbiBjbGFzcz0iT2ZmZXJDb250YWN0Ij4KICAgIDxoMiBjbGFzcz0iT2ZmZXJDb250YWN0LXRpdGxlIj5Db250YWN0ZXIgbCdhZ2VuY2U8L2gyPgogICAgPHNwYW4gY2xhc3M9ImhpZGRlbiIgZGF0YS1pbmZvPSJpZC1hZ2VuY2UiPjExMzI8L3NwYW4+CgogICAgPGRpdiBjbGFzcz0iT2ZmZXJDb250YWN0LWNvbnRlbnQiPgogICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJPZmZlckNvbnRhY3QtcmVmZXJlbnQiPlZvdHJlIGNvbnNlaWxsZXIgOiA8c3Ryb25nPkRhdmlkJm5ic3A7QkVTU0FSSU9OPC9zdHJvbmc+PC9wPgogICAgICAgICAgICAgICAgPHAgY2xhc3M9Ik9mZmVyQ29udGFjdC1hZGRyZXNzIE9mZmVyQ29udGFjdC1hZGRyZXNzLS1jZW50ZXIgcndkLS1ub01vYmlsZSByd2QtLW5vVGFibGV0Ij4KICAgICAgICAgICAgPGEgaHJlZj0iaHR0cDovL2FnZW5jZS5mb25jaWEuY29tL3BhcmlzLTc1MDExL2FnZW5jZS1pbW1vYmlsaWVyZS9mb25jaWEtdHJhbnNhY3Rpb24tcGFyaXMtdm9sdGFpcmUtMTEzMiIgdGFyZ2V0PSJfYmxhbmsiIGNsYXNzPSJPZmZlckNvbnRhY3QtYWRkcmVzcy0tbGFyZ2UiPgogICAgICAgICAgICAgICAgPHN0cm9uZz5Gb25jaWEgVHJhbnNhY3Rpb24gUGFyaXMgIFZvbHRhaXJlPC9zdHJvbmc+CiAgICAgICAgICAgICAgICAyNSBib3VsZXZhcmQgVm9sdGFpcmU8YnIvPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAyNiBydWUgZGUgTWFsdGU8YnIvPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDc1MDExIC0gUGFyaXMKICAgICAgICAgICAgPC9hPgogICAgICAgIDwvcD4KCiAgICAgICAgPHAgY2xhc3M9Ik9mZmVyQ29udGFjdC1jYWxsMmFjdGlvbiI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBjbGFzcz0iT2ZmZXJDb250YWN0LWJ0biBPZmZlckNvbnRhY3QtYnRuLS10ZWwgaWNvbi1DYWxsb3V0IiBkYXRhLXdpZGdldD0iU2hvd1RlbCIgZGF0YS1hbmFseXRpY3M9IjExMzIgLSBGT05DSUEgdHJhbnNhY3Rpb24tcGFyaXMtdm9sdGFpcmUiIGhyZWY9InRlbDowMTUzMzYxMzAwIj48c3BhbiBjbGFzcz0iT2ZmZXJDb250YWN0LXRlbExhYmVsIj5BcHBlbGVyIGwnYWdlbmNlPC9zcGFuPiA8c3BhbiBjbGFzcz0iT2ZmZXJDb250YWN0LXRlbE51bSIgZGF0YS1iZWhhdD0idGVsQWdlbmNlIj4wMS41My4zNi4xMy4wMDwvc3Bhbj48L2E+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBjbGFzcz0iT2ZmZXJDb250YWN0LWJ0biBPZmZlckNvbnRhY3QtYnRuLS1tYWlsIGljb24tT3BlbmVudmVsb3BlIE1vZGFsLWxpbmsiIGhyZWY9IiNQb3B1cENvbnRhY3QiIGRhdGEtYW5hbHl0aWNzPSJtYWlsdG9hZ2VuY3ktYnRuIj7DiWNyaXJlIMOgIGwnYWdlbmNlPC9hPgogICAgICAgICAgICAgICAgICAgICAgICA8YSBjbGFzcz0iT2ZmZXJDb250YWN0LWJ0biBPZmZlckNvbnRhY3QtYnRuLS1wbGFuIGljb24tUG9pbnRlciIgaHJlZj0iaHR0cDovL2FnZW5jZS5mb25jaWEuY29tL3BhcmlzLTc1MDExL2FnZW5jZS1pbW1vYmlsaWVyZS9mb25jaWEtdHJhbnNhY3Rpb24tcGFyaXMtdm9sdGFpcmUtMTEzMiIgdGFyZ2V0PSJfYmxhbmsiPgogICAgICAgICAgICA8c3BhbiBjbGFzcz0iT2ZmZXJDb250YWN0LWJ0bi1sYWJlbC0tbW9iaWxlIj5Ucm91dmVyIGwnYWdlbmNlPC9zcGFuPgogICAgICAgICAgICA8c3BhbiBjbGFzcz0iT2ZmZXJDb250YWN0LWJ0bi1sYWJlbC0tZGVza3RvcCIgZGF0YS1iZWhhdD0icGxhbkFnZW5jZSI+UGxhbiBkJ2FjY8OocyBkZSBsJ2FnZW5jZTwvc3Bhbj4KICAgICAgICAgICAgPC9hPgogICAgICAgIDwvcD4KCiAgICA8L2Rpdj4KCjwvc2VjdGlvbj4KCiAgICAKCgoKCjxzZWN0aW9uIGlkPSJQb3B1cENvbnRhY3QiIGNsYXNzPSJNb2RhbCBtZnAtaGlkZSI+CgogICAgPGgzIGNsYXNzPSJNb2RhbC10aXRsZSI+w4ljcmlyZSDDoCBsJ2FnZW5jZTwvaDM+CgogICAgPGRpdiBjbGFzcz0iZm9ybV9jb250ZW50X21vZGFsIj4KICAgICAgICA8cCBjbGFzcz0iT2ZmZXJDb250YWN0LWFkZHJlc3MgT2ZmZXJDb250YWN0LWFkZHJlc3MtLWxlZnQiPgogICAgICAgICAgICA8c3Ryb25nIGlkPSJub21BZ2VuY2VDb250YWN0Ij5Gb25jaWEgVHJhbnNhY3Rpb24gUGFyaXMgIFZvbHRhaXJlPC9zdHJvbmc+CiAgICAgICAgICAgIDxzcGFuIGlkPSJhZGRyQWdlbmNlQ29udGFjdCI+MjUgYm91bGV2YXJkIFZvbHRhaXJlPC9zcGFuPjxici8+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAyNiBydWUgZGUgTWFsdGU8YnIvPgogICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBpZD0idmlsbGVDUEFnZW5jZUNvbnRhY3QiPjc1MDExIC0gUGFyaXM8L3NwYW4+PGJyLz4KCiAgICAgICAgICAgIFTDqWwuIDAxLjUzLjM2LjEzLjAwICZuYnNwOyZuYnNwOyZuYnNwOyBGYXguIDAxLjQ5LjI5LjAwLjUxICAgICAgICA8L3A+CgogICAgICAgIDxmb3JtIG5hbWU9ImZvbmNpYV9hZ2VuY3lfY29udGFjdCIgbWV0aG9kPSJwb3N0IiBhY3Rpb249ImZvbmNpYV9pbnRlcm5ldF9hZ2VuY3lfY29udGFjdCIgaWQ9ImZvbmNpYV9hZ2VuY3lfY29udGFjdCIgY2xhc3M9IkZvcm0iIGRhdGEtZm9ybT0iYWpheF9mb3JtIj4KCiAgICAgICAgPGg0IGNsYXNzPSJGb3JtLXN1YnRpdGxlIj5Wb3VzIMOqdGVzIGludMOpcmVzc8OpKGUpIHBhciBjZSBiaWVuIMOgIHZlbmRyZTwvaDQ+CgogICAgICAgIDxwIGRhdGEtYmVoYXQ9ImNhcmFjdGVyaXN0aXF1ZUJpZW5Db250YWN0QWdlbmNlIj4KICAgICAgICAgICAgPHNwYW4gY2xhc3M9IlRhZyI+QXBwYXJ0ZW1lbnQ8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iVGFnIj4xIHBpw6hjZTwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9IlRhZyI+UsOpZi4gMTM4NzIxMzwvc3Bhbj4KICAgICAgICAgICAgPHNwYW4gY2xhc3M9IlRhZyI+UGFyaXM8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iVGFnIj43LjkybcKyPC9zcGFuPgogICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9IlRhZyI+MTA4MDAwICZldXJvOzwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICA8L3A+CgogICAgICAgIDxkaXYgY2xhc3M9ImVycm9yc19jb250YWluZXIiPjwvZGl2PgogICAgICAgIAogICAgICAgIDxoNCBjbGFzcz0iRm9ybS1zdWJ0aXRsZSI+Vm9zIGluZm9ybWF0aW9uczwvaDQ+CgogICAgICAgIDxmaWVsZHNldCBjbGFzcz0iRm9ybS1maWVsZHNldCBGb3JtLWZpZWxkc2V0LS1pbmxpbmUiPgogICAgICAgICAgICA8bGVnZW5kIGNsYXNzPSJGb3JtLWxhYmVsIEZvcm0tbGFiZWwtLWhpZGRlbiI+Q2l2aWxpdMOpPC9sZWdlbmQ+CiAgICAgICAgICAgICAgICA8dWw+PGxpIGNsYXNzPSJGb3JtLWZpZWxkIEZvcm0tZmllbGQtLXJhZGlvIj48aW5wdXQgdHlwZT0icmFkaW8iIGlkPSJmb25jaWFfYWdlbmN5X2NvbnRhY3RfY2l2aWxpdGVfMCIgbmFtZT0iZm9uY2lhX2FnZW5jeV9jb250YWN0W2NpdmlsaXRlXSIgdmFsdWU9Ik0iIC8+PGxhYmVsIGZvcj0iZm9uY2lhX2FnZW5jeV9jb250YWN0X2NpdmlsaXRlXzAiPk08L2xhYmVsPjwvbGk+PGxpIGNsYXNzPSJGb3JtLWZpZWxkIEZvcm0tZmllbGQtLXJhZGlvIj48aW5wdXQgdHlwZT0icmFkaW8iIGlkPSJmb25jaWFfYWdlbmN5X2NvbnRhY3RfY2l2aWxpdGVfMSIgbmFtZT0iZm9uY2lhX2FnZW5jeV9jb250YWN0W2NpdmlsaXRlXSIgdmFsdWU9Ik1tZSIgLz48bGFiZWwgZm9yPSJmb25jaWFfYWdlbmN5X2NvbnRhY3RfY2l2aWxpdGVfMSI+TW1lPC9sYWJlbD48L2xpPjxsaSBjbGFzcz0iRm9ybS1maWVsZCBGb3JtLWZpZWxkLS1yYWRpbyI+PGlucHV0IHR5cGU9InJhZGlvIiBpZD0iZm9uY2lhX2FnZW5jeV9jb250YWN0X2NpdmlsaXRlXzIiIG5hbWU9ImZvbmNpYV9hZ2VuY3lfY29udGFjdFtjaXZpbGl0ZV0iIHZhbHVlPSJNbGxlIiAvPjxsYWJlbCBmb3I9ImZvbmNpYV9hZ2VuY3lfY29udGFjdF9jaXZpbGl0ZV8yIj5NbGxlPC9sYWJlbD48L2xpPjwvdWw+CiAgICAgICAgPC9maWVsZHNldD4KCiAgICAgICAgPHAgY2xhc3M9IkZvcm0tZmllbGQgRm9ybS1maWVsZC0tdGV4dCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgY2xhc3M9IkZvcm0tbGFiZWwgRm9ybS1sYWJlbC0taGlkZGVuIHJlcXVpcmVkIiBmb3I9ImZvbmNpYV9hZ2VuY3lfY29udGFjdF9sYXN0X25hbWUiPk5vbTwvbGFiZWw+CiAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJ0ZXh0IiBpZD0iZm9uY2lhX2FnZW5jeV9jb250YWN0X2xhc3RfbmFtZSIgbmFtZT0iZm9uY2lhX2FnZW5jeV9jb250YWN0W2xhc3RfbmFtZV0iIHJlcXVpcmVkPSJyZXF1aXJlZCIgcGxhY2Vob2xkZXI9Ik5vbSAqIiAvPgogICAgICAgIDwvcD4KCiAgICAgICAgPHAgY2xhc3M9IkZvcm0tZmllbGQgRm9ybS1maWVsZC0tdGV4dCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgY2xhc3M9IkZvcm0tbGFiZWwgRm9ybS1sYWJlbC0taGlkZGVuIHJlcXVpcmVkIiBmb3I9ImZvbmNpYV9hZ2VuY3lfY29udGFjdF9maXJzdF9uYW1lIj5QcsOpbm9tPC9sYWJlbD4KICAgICAgICAgICAgPGlucHV0IHR5cGU9InRleHQiIGlkPSJmb25jaWFfYWdlbmN5X2NvbnRhY3RfZmlyc3RfbmFtZSIgbmFtZT0iZm9uY2lhX2FnZW5jeV9jb250YWN0W2ZpcnN0X25hbWVdIiByZXF1aXJlZD0icmVxdWlyZWQiIHBsYWNlaG9sZGVyPSJQcsOpbm9tICoiIC8+CiAgICAgICAgPC9wPgoKICAgICAgICA8cCBjbGFzcz0iRm9ybS1maWVsZCBGb3JtLWZpZWxkLS10ZXh0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBjbGFzcz0iRm9ybS1sYWJlbCBGb3JtLWxhYmVsLS1oaWRkZW4gcmVxdWlyZWQiIGZvcj0iZm9uY2lhX2FnZW5jeV9jb250YWN0X2VtYWlsIj5FbWFpbDwvbGFiZWw+CiAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJlbWFpbCIgaWQ9ImZvbmNpYV9hZ2VuY3lfY29udGFjdF9lbWFpbCIgbmFtZT0iZm9uY2lhX2FnZW5jeV9jb250YWN0W2VtYWlsXSIgcmVxdWlyZWQ9InJlcXVpcmVkIiBwbGFjZWhvbGRlcj0iRW1haWwgKiIgLz4KICAgICAgICA8L3A+CgogICAgICAgIDxwIGNsYXNzPSJGb3JtLWZpZWxkIEZvcm0tZmllbGQtLXRleHQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGNsYXNzPSJGb3JtLWxhYmVsIEZvcm0tbGFiZWwtLWhpZGRlbiByZXF1aXJlZCIgZm9yPSJmb25jaWFfYWdlbmN5X2NvbnRhY3RfcGhvbmUiPlTDqWzDqXBob25lPC9sYWJlbD4KICAgICAgICAgICAgPGlucHV0IHR5cGU9InRleHQiIGlkPSJmb25jaWFfYWdlbmN5X2NvbnRhY3RfcGhvbmUiIG5hbWU9ImZvbmNpYV9hZ2VuY3lfY29udGFjdFtwaG9uZV0iIHJlcXVpcmVkPSJyZXF1aXJlZCIgcGxhY2Vob2xkZXI9IlTDqWzDqXBob25lICoiIC8+CiAgICAgICAgPC9wPgoKICAgICAgICA8cCBjbGFzcz0iRm9ybS1maWVsZCBGb3JtLWZpZWxkLS1jaGVja2JveCI+CiAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJjaGVja2JveCIgaWQ9ImZvbmNpYV9hZ2VuY3lfY29udGFjdF9mb25jaWFfY3VzdG9tZXIiIG5hbWU9ImZvbmNpYV9hZ2VuY3lfY29udGFjdFtmb25jaWFfY3VzdG9tZXJdIiB2YWx1ZT0iMSIgLz4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBjbGFzcz0iRm9ybS1sYWJlbCIgZm9yPSJmb25jaWFfYWdlbmN5X2NvbnRhY3RfZm9uY2lhX2N1c3RvbWVyIj5KZSBzdWlzIGTDqWrDoCBjbGllbnQgRk9OQ0lBPC9sYWJlbD4KICAgICAgICA8L3A+CgogICAgICAgIDxmaWVsZHNldCBjbGFzcz0iRm9ybS1maWVsZHNldCI+CiAgICAgICAgICAgIDxsZWdlbmQgY2xhc3M9IkZvcm0tbGVnZW5kIj7DiWNow6lhbmNlIGRlIHZvdHJlIHByb2pldDwvbGVnZW5kPgogICAgICAgICAgICAgICAgPHVsPjxsaSBjbGFzcz0iRm9ybS1maWVsZCBGb3JtLWZpZWxkLS1yYWRpbyI+PGlucHV0IHR5cGU9InJhZGlvIiBpZD0iZm9uY2lhX2FnZW5jeV9jb250YWN0X2VjaGVhbmNlXzAiIG5hbWU9ImZvbmNpYV9hZ2VuY3lfY29udGFjdFtlY2hlYW5jZV0iIHZhbHVlPSJJbW3DqWRpYXRlIiAvPjxsYWJlbCBmb3I9ImZvbmNpYV9hZ2VuY3lfY29udGFjdF9lY2hlYW5jZV8wIj5JbW3DqWRpYXRlPC9sYWJlbD48L2xpPjxsaSBjbGFzcz0iRm9ybS1maWVsZCBGb3JtLWZpZWxkLS1yYWRpbyI+PGlucHV0IHR5cGU9InJhZGlvIiBpZD0iZm9uY2lhX2FnZW5jeV9jb250YWN0X2VjaGVhbmNlXzEiIG5hbWU9ImZvbmNpYV9hZ2VuY3lfY29udGFjdFtlY2hlYW5jZV0iIHZhbHVlPSIxIG1vaXMiIC8+PGxhYmVsIGZvcj0iZm9uY2lhX2FnZW5jeV9jb250YWN0X2VjaGVhbmNlXzEiPjEgbW9pczwvbGFiZWw+PC9saT48bGkgY2xhc3M9IkZvcm0tZmllbGQgRm9ybS1maWVsZC0tcmFkaW8iPjxpbnB1dCB0eXBlPSJyYWRpbyIgaWQ9ImZvbmNpYV9hZ2VuY3lfY29udGFjdF9lY2hlYW5jZV8yIiBuYW1lPSJmb25jaWFfYWdlbmN5X2NvbnRhY3RbZWNoZWFuY2VdIiB2YWx1ZT0iMyBtb2lzIGV0IHBsdXMiIC8+PGxhYmVsIGZvcj0iZm9uY2lhX2FnZW5jeV9jb250YWN0X2VjaGVhbmNlXzIiPjMgbW9pcyBldCBwbHVzPC9sYWJlbD48L2xpPjwvdWw+CiAgICAgICAgPC9maWVsZHNldD4KCiAgICAgICAgPGZpZWxkc2V0IGNsYXNzPSJGb3JtLWZpZWxkc2V0Ij4KICAgICAgICAgICAgPGxlZ2VuZCBjbGFzcz0iRm9ybS1sZWdlbmQiPlZvdXMgc291aGFpdGV6IMOqdHJlIGNvbnRhY3TDqShlKSA6PC9sZWdlbmQ+CiAgICAgICAgICAgICAgICA8dWw+PGxpIGNsYXNzPSJGb3JtLWZpZWxkIEZvcm0tZmllbGQtLXJhZGlvIj48aW5wdXQgdHlwZT0icmFkaW8iIGlkPSJmb25jaWFfYWdlbmN5X2NvbnRhY3RfY29udGFjdF9tZXRob2RfMCIgbmFtZT0iZm9uY2lhX2FnZW5jeV9jb250YWN0W2NvbnRhY3RfbWV0aG9kXSIgdmFsdWU9IlBhciB0w6lsw6lwaG9uZSIgLz48bGFiZWwgZm9yPSJmb25jaWFfYWdlbmN5X2NvbnRhY3RfY29udGFjdF9tZXRob2RfMCI+UGFyIHTDqWzDqXBob25lPC9sYWJlbD48L2xpPjxsaSBjbGFzcz0iRm9ybS1maWVsZCBGb3JtLWZpZWxkLS1yYWRpbyI+PGlucHV0IHR5cGU9InJhZGlvIiBpZD0iZm9uY2lhX2FnZW5jeV9jb250YWN0X2NvbnRhY3RfbWV0aG9kXzEiIG5hbWU9ImZvbmNpYV9hZ2VuY3lfY29udGFjdFtjb250YWN0X21ldGhvZF0iIHZhbHVlPSJQYXIgRW1haWwiIC8+PGxhYmVsIGZvcj0iZm9uY2lhX2FnZW5jeV9jb250YWN0X2NvbnRhY3RfbWV0aG9kXzEiPlBhciBFbWFpbDwvbGFiZWw+PC9saT48L3VsPgogICAgICAgIDwvZmllbGRzZXQ+CgogICAgICAgIDxwIGNsYXNzPSJGb3JtLWZpZWxkIEZvcm0tZmllbGQtLXRleHQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGNsYXNzPSJGb3JtLWxhYmVsIiBmb3I9ImZvbmNpYV9hZ2VuY3lfY29udGFjdF9tZXNzYWdlIj5Wb3RyZSBtZXNzYWdlPC9sYWJlbD4KICAgICAgICAgICAgPHRleHRhcmVhIGlkPSJmb25jaWFfYWdlbmN5X2NvbnRhY3RfbWVzc2FnZSIgbmFtZT0iZm9uY2lhX2FnZW5jeV9jb250YWN0W21lc3NhZ2VdIj48L3RleHRhcmVhPgogICAgICAgIDwvcD4KCiAgICAgICAgPGRpdiBjbGFzcz0iTW9kYWwtZm9vdGVyIj4KICAgICAgICAgICAgPHAgY2xhc3M9IkZvcm0taW5mbyI+KiBjaGFtcHMgb2JsaWdhdG9pcmVzPC9wPgoKICAgICAgICAgICAgPHAgY2xhc3M9IkZvcm0tZmllbGQgRm9ybS1maWVsZC0tc3VibWl0IEZvcm0tZmllbGQtLWNlbnRlciI+CiAgICAgICAgICAgICAgICA8YnV0dG9uIHR5cGU9InN1Ym1pdCIgaWQ9ImZvbmNpYV9hZ2VuY3lfY29udGFjdF9zdWJtaXQiIG5hbWU9ImZvbmNpYV9hZ2VuY3lfY29udGFjdFtzdWJtaXRdIiBjbGFzcz0iQnRuIEJ0bi0tdmFsaWQiIGRhdGEtYWN0aW9uPSJzdWJtaXRfZm9ybSIgZGF0YS1hbmFseXRpY3MtdmFsdWU9IjExMzIgLSBGT05DSUEgdHJhbnNhY3Rpb24tcGFyaXMtdm9sdGFpcmUiPkVudm95ZXI8L2J1dHRvbj4KICAgICAgICAgICAgPC9wPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJMZWdhbE1lbnRpb25zIExlZ2FsTWVudGlvbnMtLXNtYWxsIj4KICAgICAgICAgICAgICAgICAgICA8cD5DZXMgaW5mb3JtYXRpb25zIHNvbnQgbsOpY2Vzc2FpcmVzIGF1IHRyYWl0ZW1lbnQgZGUgdm90cmUgZGVtYW5kZSBldCDDoCBsYSBnZXN0aW9uIGRlIG5vcyByZWxhdGlvbnMgY29tbWVyY2lhbGVzLiBMZXMgZG9ubsOpZXMgw6AgY2FyYWN0w6hyZSBwZXJzb25uZWwgcmVjdWVpbGxpZXMgcGFyIEZPTkNJQSBmb250IGwnb2JqZXQgZCd1biB0cmFpdGVtZW50IGF1dG9tYXRpc8OpIGRlc3RpbsOpIMOgIGxhIGdlc3Rpb24gZXQgYXV4IG7DqWdvY2lhdGlvbnMgZGUgYmllbnMgaW1tb2JpbGllcnMsIMOgIGxhIGdlc3Rpb24gZGVzIGNsaWVudHMgZXQgw6AgbGEgcsOpYWxpc2F0aW9uIGQnb3DDqXJhdGlvbnMgcmVsYXRpdmVzIMOgIGxhIHByb3NwZWN0aW9uLiBMYSBjb21tdW5pY2F0aW9uIGRlIHZvcyBjb29yZG9ubsOpZXMgw6lsZWN0cm9uaXF1ZXMgaW1wbGlxdWUgdm90cmUgY29uc2VudGVtZW50IMOgIHJlY2V2b2lyLCBwYXIgdm9pZSDDqWxlY3Ryb25pcXVlLCBkZXMgb2ZmcmVzIGNvbW1lcmNpYWxlcyBkZSBsYSBwYXJ0IGRlIEZPTkNJQSBldCBkZSBzZXMgcGFydGVuYWlyZXMgY29tbWVyY2lhdXggYXV4cXVlbHMgRk9OQ0lBIHBldXQgw6p0cmUgYW1lbsOpZSDDoCBjb21tdW5pcXVlciB2b3MgZG9ubsOpZXMgw6AgY2FyYWN0w6hyZSBwZXJzb25uZWwuIFRvdXRlZm9pcywgdm91cyBwb3V2ZXogdm91cyBvcHBvc2VyIHNhbnMgZnJhaXMgKGhvcm1pcyBjZXV4IGxpw6lzIMOgIGxhIHRyYW5zbWlzc2lvbiBkdSByZWZ1cykgZXQgc2FucyBqdXN0aWZpY2F0aW9uIMOgIGwndXRpbGlzYXRpb24gZGUgdm9zIGRvbm7DqWVzIMOgIGRlcyBmaW5zIGRlIHByb3NwZWN0aW9uIGNvbW1lcmNpYWxlLiBDb25mb3Jtw6ltZW50IMOgIGxhIExvaSBuwrAgNzgtMTcgZHUgNiBqYW52aWVyIDE5NzggbW9kaWZpw6llLCB2b3VzIGRpc3Bvc2V6IGQndW4gZHJvaXQgZCdhY2PDqHMsIGRlIHJlY3RpZmljYXRpb24gZXQgZCdvcHBvc2l0aW9uLCBwb3VyIGRlcyBtb3RpZnMgbMOpZ2l0aW1lcywgYXUgdHJhaXRlbWVudCBkZSB2b3MgZG9ubsOpZXMgw6AgY2FyYWN0w6hyZSBwZXJzb25uZWwgcXVlIHZvdXMgcG91dmV6IGV4ZXJjZXIgZW4gdm91cyBhZHJlc3NhbnQgYXUgcmVzcG9uc2FibGUgZHUgdHJhaXRlbWVudCwgRk9OQ0lBIC0gU2VydmljZSBUcmFuc2FjdGlvbiAxMywgYXZlbnVlIExlYnJ1biAtIDkyMTYwIEFOVE9OWS48L3A+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgoKICAgICAgICA8aW5wdXQgdHlwZT0iaGlkZGVuIiBpZD0iZm9uY2lhX2FnZW5jeV9jb250YWN0X3Byb3BlcnR5X2RhdGEiIG5hbWU9ImZvbmNpYV9hZ2VuY3lfY29udGFjdFtwcm9wZXJ0eV9kYXRhXSIgdmFsdWU9InsmcXVvdDtwcml4VmVudGUmcXVvdDs6MTA4MDAwLCZxdW90O3N1cmZhY2UmcXVvdDs6Ny45MiwmcXVvdDtyZWZlcmVuY2UmcXVvdDs6JnF1b3Q7MTM4NzIxMyZxdW90OywmcXVvdDtwcm9wZXJ0eVR5cGUmcXVvdDs6JnF1b3Q7cHVyY2hhc2UmcXVvdDssJnF1b3Q7bmJQaWVjZXMmcXVvdDs6MSwmcXVvdDtuZWdvY2lhdGV1clByZW5vbSZxdW90OzomcXVvdDtEYXZpZCZxdW90OywmcXVvdDt2aWxsZSZxdW90OzomcXVvdDtwYXJpcyZxdW90OywmcXVvdDtjb2RlUG9zdGFsJnF1b3Q7OiZxdW90Ozc1MDExJnF1b3Q7LCZxdW90O3R5cGVCaWVuJnF1b3Q7OiZxdW90O2FwcGFydGVtZW50JnF1b3Q7LCZxdW90O25lZ29jaWF0ZXVyTm9tJnF1b3Q7OiZxdW90O0JFU1NBUklPTiZxdW90OywmcXVvdDtzY29yZSZxdW90OzoxfSIgLz4KICAgICAgICA8aW5wdXQgdHlwZT0iaGlkZGVuIiBpZD0iZm9uY2lhX2FnZW5jeV9jb250YWN0X2FnZW5jeV9tYWlsIiBuYW1lPSJmb25jaWFfYWdlbmN5X2NvbnRhY3RbYWdlbmN5X21haWxdIiB2YWx1ZT0iZnQtcGFyaXMxMXZvbHRhaXJlIyNmb25jaWEuZnIiIC8+CgogICAgICAgICAgICAKCiAgICAgICAgPC9mb3JtPgoKICAgIDwvZGl2PgoKPC9zZWN0aW9uPgoKICAgICAgICAgICAgICAgIDwvYXNpZGU+CgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L3NlY3Rpb24+CiAgICAgICAgICAgICAgICAgICAgPHNlY3Rpb24gY2xhc3M9IkNvbnRlbnQtcm93Ij4KICAgIDxkaXYgY2xhc3M9IkNvbnRlbnQtb3ZlcmZsb3ciPgogICAgICAgIDxkaXYgY2xhc3M9Ik9mZmVyUmVsYXRlZCI+CgogICAgICAgICAgICA8aDIgY2xhc3M9Ik9mZmVyUmVsYXRlZC10aXRsZSI+QmllbnMgc2ltaWxhaXJlczwvaDI+CgogICAgICAgICAgICA8dWwgY2xhc3M9Ik9mZmVyUmVsYXRlZC1zbGlkZXMiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGkgY2xhc3M9Ik9mZmVyUmVsYXRlZC1pdGVtIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGEgY2xhc3M9IlRlYXNlck9mZmVyTWluaSIgaHJlZj0iL2FjaGF0L3BhcmlzLTc1MDExL2FwcGFydGVtZW50LzEzOTc4NjUuaHRtIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9IlRlYXNlck9mZmVyTWluaS1pbGwiIHN0eWxlPSJiYWNrZ3JvdW5kLWltYWdlOiB1cmwoJ2h0dHA6Ly9waG90b3MuZnIuZm9uY2lhLmNvbS9taW5pY3AvNjQwLzQ4MC9waG90b3MvMTM5Ny84NjUvMTM5Nzg2NS9ncmFuZC8xMzk3ODY1XzNjOGVmZGUzMjFkNjhlOGQ3NWY5NDVmZGYxNjYxY2E4NWU2YjNlN2M5ZWI2ZC5qcGc/ZGF0ZW1haj0yMDIwLTA1LTA4IDA4OjMxOjI5LjM5MCcpIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBzcmM9Imh0dHA6Ly9waG90b3MuZnIuZm9uY2lhLmNvbS9taW5pY3AvNjQwLzQ4MC9waG90b3MvMTM5Ny84NjUvMTM5Nzg2NS9ncmFuZC8xMzk3ODY1XzNjOGVmZGUzMjFkNjhlOGQ3NWY5NDVmZGYxNjYxY2E4NWU2YjNlN2M5ZWI2ZC5qcGc/ZGF0ZW1haj0yMDIwLTA1LTA4IDA4OjMxOjI5LjM5MCIgYWx0PSIiIC8+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJUZWFzZXJPZmZlck1pbmktY29udGVudCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHN0cm9uZyBjbGFzcz0iVGVhc2VyT2ZmZXJNaW5pLXRpdGxlIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEFwcGFydGVtZW50CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDEgcGnDqGNlICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICDDoCB2ZW5kcmUKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3N0cm9uZz4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iVGVhc2VyT2ZmZXJNaW5pLXByaWNlIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDEzOCAwMDAmbmJzcDvigqwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iVGVhc2VyT2ZmZXJNaW5pLWxvYyI+UGFyaXMgKDc1MDExKTwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3VsPgogICAgICAgIDwvZGl2PgogICAgPC9kaXY+Cjwvc2VjdGlvbj4KCiAgICAgICAgCiAgICA8L2Rpdj4KCgoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9IkJyZWFkY3J1bWJzIj4KICAgICAgICAgICAgPHAgICAgIGNsYXNzPSJCcmVhZGNydW1icy1pbm5lciIgZGF0YS10eXBlPSJ5b2xvIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3Bhbj5Gb25jaWE8L3NwYW4+ICAgICAgICAgICAgICAgICAgICAgICAgICAgIAoKICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iL2FjaGF0IiAgICAgY2xhc3M9IkJyZWFkY3J1bWJzLWxpbmsiPkFjaGF0PC9hPiAgICAgICAgICAgICAgICAgICAgICAgICAgICAKCiAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Ii9hY2hhdC9wYXJpcy03NSIgICAgIGNsYXNzPSJCcmVhZGNydW1icy1saW5rIj5QYXJpcyA3NTwvYT4gICAgICAgICAgICAgICAgICAgICAgICAgICAgCgogICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3Bhbj5BcHBhcnRlbWVudDwvc3Bhbj4gICAgICAgICAgICAgICAgICAgICAgICAgICAgCgogICAgCgogICAgICAgICAgICA8L3A+CiAgICAgICAgPC9kaXY+CiAgICAKCgogICAgICAgICAgICAKICAgICAgICAKPGZvb3RlciBjbGFzcz0iRm9vdGVyIiByb2xlPSJjb250ZW50aW5mbyI+CgogICAgPGRpdiBjbGFzcz0iRm9vdGVyLXJvdyBGb290ZXItcm93LS1pZGVudGl0eSBGb290ZXItcm93LS1pZGVudGl0eS1tb2JpbGUiPgogICAgICAgIDxkaXYgY2xhc3M9IkZvb3Rlci0ycGFydCI+CiAgICAgICAgICAgIDxwIGNsYXNzPSJGb290ZXItcGFydDEgRm9vdGVyLXBhcnQxLS1sb2dvIj4KICAgICAgICAgICAgICAgIDxpbWcgd2lkdGg9IjE1NCIgaGVpZ2h0PSI1NiIgc3JjPSJodHRwczovL3Bob3Rvcy5mb25jaWEubmV0L2ltYWdlcy9Gb25jaWFfbG9nb3ZfMzA4Xzg2LnBuZyIgYWx0PSJGb25jaWEiPgogICAgICAgICAgICA8L3A+CiAgICAgICAgICAgIDx1bCBjbGFzcz0iRm9vdGVyLXBhcnQyIEZvb3Rlci1wYXJ0Mi0tbGlua3MiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICAgIDxhICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaHJlZj0iL21lbnRpb25zLWxlZ2FsZXMiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1iZWhhdD0ibGluay1NZW50aW9uc19sw6lnYWxlcyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIE1lbnRpb25zIGzDqWdhbGVzCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgICA8YSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhyZWY9Imh0dHBzOi8vZnIuZm9uY2lhLmNvbS9wbGFuLWR1LXNpdGUiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1iZWhhdD0ibGluay1QbGFuX2R1X3NpdGUiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBQbGFuIGR1IHNpdGUKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICAgIDxhICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaHJlZj0iLyNmb25jaWFfY29uc2VudGVtZW50cyIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkYXRhLWJlaGF0PSJsaW5rLUdlc3Rpb25fZGVzX2Nvb2tpZXMiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBHZXN0aW9uIGRlcyBjb29raWVzCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgICA8YSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhyZWY9Ii9jaGFydGUtZGUtcHJvdGVjdGlvbi1kZXMtZG9ubmVlcyIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkYXRhLWJlaGF0PSJsaW5rLUNoYXJ0ZV9kZV9wcm90ZWN0aW9uX2Rlc19kb25uw6llc18iPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBDaGFydGUgZGUgcHJvdGVjdGlvbiBkZXMgZG9ubsOpZXMgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgICA8YSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhyZWY9Ii9ub3RyZS1wcmVvY2N1cGF0aW9uLWxhLXNlY3VyaXRlLWRlLXZvcy1kb25uZWVzIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtYmVoYXQ9ImxpbmstU8OpY3VyaXTDqV9JbmZvcm1hdGlxdWUiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBTw6ljdXJpdMOpIEluZm9ybWF0aXF1ZQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgICAgPGEgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBocmVmPSIvc2VydmljZXMiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1iZWhhdD0ibGluay1TZXJ2aWNlcyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFNlcnZpY2VzCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgICA8YSAgdGFyZ2V0PSJfYmxhbmsiICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaHJlZj0iaHR0cDovL3ByZXNzcm9vbS5mb25jaWEuY29tLyIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkYXRhLWJlaGF0PSJsaW5rLUVzcGFjZV9QcmVzc2UiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBFc3BhY2UgUHJlc3NlCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgICA8YSAgdGFyZ2V0PSJfYmxhbmsiICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaHJlZj0iaHR0cDovL2ZvbmNpYS1yZWNydXRlLnRhbGVudC1zb2Z0LmNvbS9hY2N1ZWlsLmFzcHgiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1iZWhhdD0ibGluay1Ob3Nfb2ZmcmVzX2TigJllbXBsb2kiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBOb3Mgb2ZmcmVzIGTigJllbXBsb2kKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICAgIDxhICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaHJlZj0iL2FjaGF0L2F2aXMtY2xpZW50cyIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkYXRhLWJlaGF0PSJsaW5rLUF2aXNfY2xpZW50cyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEF2aXMgY2xpZW50cwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3VsPgogICAgICAgIDwvZGl2PgogICAgPC9kaXY+CgogICAgPGRpdiBjbGFzcz0iRm9vdGVyLXBhcnQxIEZvb3Rlci1wYXJ0MS0tc29jaWFsIj4KICAgICAgICAgICAgICAgICAgICA8YSBjbGFzcz0iRm9vdGVyLS1oYXV0LWRlLXBhZ2UtLWRlc2t0b3AiICB0YXJnZXQ9Il9ibGFuayIgIGhyZWY9Imh0dHBzOi8vd3d3LmZhY2Vib29rLmNvbS9Gb25jaWEiIGRhdGEtYmVoYXQ9InNvY2lhbExpbmstRmFjZWJvb2sgbWVudSBkcm9pdCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzdmcgY2xhc3M9Imljb24iIHN0eWxlPSJ3aWR0aDozOHB4O2hlaWdodDozOHB4IiBhcmlhLWhpZGRlbj0idHJ1ZSI+PHVzZSB4bGluazpocmVmPSIvYnVuZGxlcy9mb25jaWFpbnRlcm5ldC9zdmcvaWNvbnMuc3ZnI0ljb24tLWZhY2Vib29rLXJlc3BvbnNpdmUiPjwvdXNlPjwvc3ZnPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICA8YSBjbGFzcz0iRm9vdGVyLS1oYXV0LWRlLXBhZ2UiICB0YXJnZXQ9Il9ibGFuayIgIGhyZWY9Imh0dHBzOi8vd3d3LmZhY2Vib29rLmNvbS9Gb25jaWEiIGRhdGEtYmVoYXQ9InNvY2lhbExpbmstRmFjZWJvb2sgbWVudSBkcm9pdCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzdmcgY2xhc3M9Imljb24iIHN0eWxlPSJ3aWR0aDozOHB4O2hlaWdodDozOHB4IiBhcmlhLWhpZGRlbj0idHJ1ZSI+PHVzZSB4bGluazpocmVmPSIvYnVuZGxlcy9mb25jaWFpbnRlcm5ldC9zdmcvaWNvbnMuc3ZnI0ljb24tLWZhY2Vib29rMiI+PC91c2U+PC9zdmc+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgICAgPGEgY2xhc3M9IkZvb3Rlci0taGF1dC1kZS1wYWdlLS1kZXNrdG9wIiAgdGFyZ2V0PSJfYmxhbmsiICBocmVmPSJodHRwczovL3R3aXR0ZXIuY29tL2ZvbmNpYSIgZGF0YS1iZWhhdD0ic29jaWFsTGluay10d2l0dGVyIG1lbnUgZHJvaXQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3ZnIGNsYXNzPSJpY29uIiBzdHlsZT0id2lkdGg6MzhweDtoZWlnaHQ6MzhweCIgYXJpYS1oaWRkZW49InRydWUiPjx1c2UgeGxpbms6aHJlZj0iL2J1bmRsZXMvZm9uY2lhaW50ZXJuZXQvc3ZnL2ljb25zLnN2ZyNJY29uLS10d2l0dGVyLXJlcG9uc2l2ZSI+PC91c2U+PC9zdmc+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgIDxhIGNsYXNzPSJGb290ZXItLWhhdXQtZGUtcGFnZSIgIHRhcmdldD0iX2JsYW5rIiAgaHJlZj0iaHR0cHM6Ly90d2l0dGVyLmNvbS9mb25jaWEiIGRhdGEtYmVoYXQ9InNvY2lhbExpbmstdHdpdHRlciBtZW51IGRyb2l0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHN2ZyBjbGFzcz0iaWNvbiIgc3R5bGU9IndpZHRoOjM4cHg7aGVpZ2h0OjM4cHgiIGFyaWEtaGlkZGVuPSJ0cnVlIj48dXNlIHhsaW5rOmhyZWY9Ii9idW5kbGVzL2ZvbmNpYWludGVybmV0L3N2Zy9pY29ucy5zdmcjSWNvbi0tdHdpdHRlcjIiPjwvdXNlPjwvc3ZnPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICAgIDxhIGNsYXNzPSJGb290ZXItLWhhdXQtZGUtcGFnZS0tZGVza3RvcCIgIHRhcmdldD0iX2JsYW5rIiAgaHJlZj0iaHR0cHM6Ly93d3cueW91dHViZS5jb20vdXNlci9mb25jaWEiIGRhdGEtYmVoYXQ9InNvY2lhbExpbmsteW91dHViZSBtZW51IGRyb2l0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHN2ZyBjbGFzcz0iaWNvbiIgc3R5bGU9IndpZHRoOjM4cHg7aGVpZ2h0OjM4cHgiIGFyaWEtaGlkZGVuPSJ0cnVlIj48dXNlIHhsaW5rOmhyZWY9Ii9idW5kbGVzL2ZvbmNpYWludGVybmV0L3N2Zy9pY29ucy5zdmcjSWNvbi0teW91dHViZS1yZXNwb25zaXZlIj48L3VzZT48L3N2Zz4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgPGEgY2xhc3M9IkZvb3Rlci0taGF1dC1kZS1wYWdlIiAgdGFyZ2V0PSJfYmxhbmsiICBocmVmPSJodHRwczovL3d3dy55b3V0dWJlLmNvbS91c2VyL2ZvbmNpYSIgZGF0YS1iZWhhdD0ic29jaWFsTGluay15b3V0dWJlIG1lbnUgZHJvaXQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3ZnIGNsYXNzPSJpY29uIiBzdHlsZT0id2lkdGg6MzhweDtoZWlnaHQ6MzhweCIgYXJpYS1oaWRkZW49InRydWUiPjx1c2UgeGxpbms6aHJlZj0iL2J1bmRsZXMvZm9uY2lhaW50ZXJuZXQvc3ZnL2ljb25zLnN2ZyNJY29uLS15b3V0dWJlMiI+PC91c2U+PC9zdmc+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgICAgPGEgY2xhc3M9IkZvb3Rlci0taGF1dC1kZS1wYWdlLS1kZXNrdG9wIiAgdGFyZ2V0PSJfYmxhbmsiICBocmVmPSJodHRwczovL3d3dy5saW5rZWRpbi5jb20vY29tcGFueS83NzI5MTcvIiBkYXRhLWJlaGF0PSJzb2NpYWxMaW5rLWxpbmtlZGluIG1lbnUgZHJvaXQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3ZnIGNsYXNzPSJpY29uIiBzdHlsZT0id2lkdGg6MzhweDtoZWlnaHQ6MzhweCIgYXJpYS1oaWRkZW49InRydWUiPjx1c2UgeGxpbms6aHJlZj0iL2J1bmRsZXMvZm9uY2lhaW50ZXJuZXQvc3ZnL2ljb25zLnN2ZyNJY29uLS1saW5rZWRpbi1yZXNwb25zaXZlIj48L3VzZT48L3N2Zz4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgPGEgY2xhc3M9IkZvb3Rlci0taGF1dC1kZS1wYWdlIiAgdGFyZ2V0PSJfYmxhbmsiICBocmVmPSJodHRwczovL3d3dy5saW5rZWRpbi5jb20vY29tcGFueS83NzI5MTcvIiBkYXRhLWJlaGF0PSJzb2NpYWxMaW5rLWxpbmtlZGluIG1lbnUgZHJvaXQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3ZnIGNsYXNzPSJpY29uIiBzdHlsZT0id2lkdGg6MzhweDtoZWlnaHQ6MzhweCIgYXJpYS1oaWRkZW49InRydWUiPjx1c2UgeGxpbms6aHJlZj0iL2J1bmRsZXMvZm9uY2lhaW50ZXJuZXQvc3ZnL2ljb25zLnN2ZyNJY29uLS1saW5rZWRpbiI+PC91c2U+PC9zdmc+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgCiAgICAgICAgPGEgY2xhc3M9IkZvb3Rlci0taGF1dC1kZS1wYWdlIiBocmVmPSIjIiBvbkNsaWNrPSIkKCdodG1sLCBib2R5JykuYW5pbWF0ZSh7c2Nyb2xsVG9wOjB9LCAnc2xvdycpOyByZXR1cm4gZmFsc2U7Ij4KICAgICAgICAgICAgPHN2ZyBjbGFzcz0iaWNvbiIgc3R5bGU9IndpZHRoOjM4cHg7aGVpZ2h0OjM4cHgiIGFyaWEtaGlkZGVuPSJ0cnVlIj48dXNlIHhsaW5rOmhyZWY9Ii9idW5kbGVzL2ZvbmNpYWludGVybmV0L3N2Zy9pY29ucy5zdmcjSWNvbi0taGF1dF9kZV9wYWdlX2dyaXMiPjwvdXNlPjwvc3ZnPgogICAgICAgIDwvYT4KICAgIDwvZGl2PgoKICAgIDxkaXYgY2xhc3M9IkZvb3Rlci1yb3cgRm9vdGVyLXJvdy0tbGlua3MxIj4KICAgICAgICA8ZGl2IGNsYXNzPSJGb290ZXItY29scyI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9IkZvb3Rlci1jb2wgRm9vdGVyLWNvbC0tbGVmdCI+CiAgICAgICAgICAgICAgICA8dWwgY2xhc3M9IkZvb3Rlci1tYWluTGlua3MiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhICBocmVmPSJodHRwczovL2ZyLmZvbmNpYS5jb20vYWNoYXQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEFjaGV0ZXIgdW4gYmllbgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgIGhyZWY9Ii9mYWlyZS1nZXJlci1tYS1sb2NhdGlvbi1wYXItZm9uY2lhIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBGYWlyZSBnw6lyZXIgbWEgbG9jYXRpb24KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhICBocmVmPSJodHRwczovL2ZyLmZvbmNpYS5jb20vZXN0aW1lci1zb24tYmllbiI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgRXN0aW1hdGlvbiBiaWVuIGltbW9iaWxpZXIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhICBocmVmPSIvbC1pbnZlc3Rpc3NlbWVudC1pbW1vYmlsaWVyIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBJbnZlc3RpcgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgIGhyZWY9Ii92b3RyZS1hY2hhdC1kYW5zLWwtaW1tb2JpbGllci1uZXVmLWF2ZWMtZm9uY2lhIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBBY2hhdCBpbW1vYmlsaWVyIG5ldWYgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC91bD4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9IkZvb3Rlci1jb2wgRm9vdGVyLWNvbC0tcmlnaHQiPgogICAgICAgICAgICAgICAgPHVsIGNsYXNzPSJGb290ZXItbWFpbkxpbmtzIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSAgdGFyZ2V0PSJfYmxhbmsiICBocmVmPSJodHRwczovL2ZyLmZvbmNpYS5jb20vbG9jYXRpb24iPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIExvdWVyIHVuIGJpZW4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhICBocmVmPSIvZmFpcmUtZ2VyZXItdW5lLWNvcHJvcHJpZXRlIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBGYWlyZSBnw6lyZXIgdW5lIGNvcHJvcHJpw6l0w6kKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhICBocmVmPSJodHRwczovL2ZyLmZvbmNpYS5jb20vZXN0aW1hdGlvbi1sb3llciI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgRXN0aW1hdGlvbiBsb3llcgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgIGhyZWY9Ii9sb2dpbiI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgTXlGb25jaWEKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhICBocmVmPSJodHRwczovL2ZyLmZvbmNpYS5jb20vYWN0dWFsaXRlcy1lbi1wZXJpb2RlLWRlLWNvbmZpbmVtZW50I2ZhcWFjdHVhbGl0ZXMiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEZBUQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdWw+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgPC9kaXY+CgogICAgPGRpdiBjbGFzcz0iRm9vdGVyLXJvdyBGb290ZXItcm93LS1pZGVudGl0eSBGb290ZXItcm93LS1pZGVudGl0eS1yZWYiPgogICAgICAgIDxkaXYgY2xhc3M9IkZvb3Rlci0ycGFydCI+CiAgICAgICAgICAgIDxwIGNsYXNzPSJGb290ZXItcGFydDEgRm9vdGVyLXBhcnQxLS1sb2dvIj4KICAgICAgICAgICAgICAgIDxpbWcgd2lkdGg9IjE1NCIgaGVpZ2h0PSI0MyIgc3JjPSJodHRwczovL3Bob3Rvcy5mb25jaWEubmV0L2ltYWdlcy9Gb25jaWFfbG9nb3ZfMzA4Xzg2LnBuZyIgYWx0PSJGb25jaWEiPgogICAgICAgICAgICA8L3A+CiAgICAgICAgICAgIDx1bCBjbGFzcz0iRm9vdGVyLXBhcnQyIEZvb3Rlci1wYXJ0Mi0tbGlua3MiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICA8YSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaHJlZj0iL21lbnRpb25zLWxlZ2FsZXMiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkYXRhLWJlaGF0PSJsaW5rLU1lbnRpb25zX2zDqWdhbGVzIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIE1lbnRpb25zIGzDqWdhbGVzCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgPGEgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhyZWY9Imh0dHBzOi8vZnIuZm9uY2lhLmNvbS9wbGFuLWR1LXNpdGUiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkYXRhLWJlaGF0PSJsaW5rLVBsYW5fZHVfc2l0ZSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBQbGFuIGR1IHNpdGUKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICA8YSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaHJlZj0iLyNmb25jaWFfY29uc2VudGVtZW50cyIKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtYmVoYXQ9ImxpbmstR2VzdGlvbl9kZXNfY29va2llcyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBHZXN0aW9uIGRlcyBjb29raWVzCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgPGEgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhyZWY9Ii9jaGFydGUtZGUtcHJvdGVjdGlvbi1kZXMtZG9ubmVlcyIKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtYmVoYXQ9ImxpbmstQ2hhcnRlX2RlX3Byb3RlY3Rpb25fZGVzX2Rvbm7DqWVzXyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBDaGFydGUgZGUgcHJvdGVjdGlvbiBkZXMgZG9ubsOpZXMgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgPGEgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhyZWY9Ii9ub3RyZS1wcmVvY2N1cGF0aW9uLWxhLXNlY3VyaXRlLWRlLXZvcy1kb25uZWVzIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1iZWhhdD0ibGluay1Tw6ljdXJpdMOpX0luZm9ybWF0aXF1ZSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBTw6ljdXJpdMOpIEluZm9ybWF0aXF1ZQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgIDxhICAgICAgICAgICAgICAgICAgICAgICAgICAgICBocmVmPSIvc2VydmljZXMiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkYXRhLWJlaGF0PSJsaW5rLVNlcnZpY2VzIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFNlcnZpY2VzCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgPGEgIHRhcmdldD0iX2JsYW5rIiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaHJlZj0iaHR0cDovL3ByZXNzcm9vbS5mb25jaWEuY29tLyIKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtYmVoYXQ9ImxpbmstRXNwYWNlX1ByZXNzZSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBFc3BhY2UgUHJlc3NlCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgPGEgIHRhcmdldD0iX2JsYW5rIiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaHJlZj0iaHR0cDovL2ZvbmNpYS1yZWNydXRlLnRhbGVudC1zb2Z0LmNvbS9hY2N1ZWlsLmFzcHgiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkYXRhLWJlaGF0PSJsaW5rLU5vc19vZmZyZXNfZOKAmWVtcGxvaSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBOb3Mgb2ZmcmVzIGTigJllbXBsb2kKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICA8YSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaHJlZj0iL2FjaGF0L2F2aXMtY2xpZW50cyIKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtYmVoYXQ9ImxpbmstQXZpc19jbGllbnRzIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEF2aXMgY2xpZW50cwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3VsPgogICAgICAgIDwvZGl2PgogICAgPC9kaXY+CgogICAgPGRpdiBjbGFzcz0iRm9vdGVyLXJvdyBGb290ZXItcm93LS1lbmQiPgogICAgICAgIDxkaXYgY2xhc3M9IkZvb3Rlci0ycGFydCI+CiAgICAgICAgICAgIDxwIGNsYXNzPSJGb290ZXItcGFydDIgRm9vdGVyLXBhcnQyLS1jb3B5Ij4KICAgICAgICAgICAgICAgICZjb3B5OzIwMjAgRm9uY2lhIEdyb3VwZQogICAgICAgICAgICA8L3A+CiAgICAgICAgPC9kaXY+CiAgICA8L2Rpdj4KCjwvZm9vdGVyPgo8L2Rpdj48IS0tQm9keVdyYXBwZXItLT4KCiAgICA8c2NyaXB0IHNyYz0iL2NvbXBpbGVkL2NvbW1vbi5qcz92ZXJzaW9uPTE1ODgwOTc1NTkiPjwvc2NyaXB0Pgo8c2NyaXB0PgogICAgZm9uY2lhLnNlc3Npb25zLmluaXQoOTAwMDAwLCAxODAwMDApOwo8L3NjcmlwdD4KCjwhLS1baWYgbHRlIElFIDldPjxzY3JpcHQgc3JjPSIvY29tcGlsZWQvc2NyaXB0cy1pZTkuanM/dmVyc2lvbj0xNTg4MDk3NTU5Ij48L3NjcmlwdD48IVtlbmRpZl0tLT4KCgogICAgCjwvYm9keT4KPC9odG1sPgo=
    http_version: null
  recorded_at: Thu, 28 May 2020 15:38:05 GMT
- request:
    method: get
    uri: https://fr.foncia.com/achat/paris-75011/appartement/1391202.htm
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Wed, 27 May 2020 17:16:34 GMT
      Cache-Control:
      - public, s-maxage=31536000
      Content-Type:
      - text/html; charset=UTF-8
      Vary:
      - Accept-Encoding,Origin
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        PCFET0NUWVBFIGh0bWw+CjxodG1sIGxhbmc9ImZyIj4KPGhlYWQ+CiAgICA8bWV0YSBjaGFyc2V0PSJVVEYtOCI+CiAgICA8bWV0YSBodHRwLWVxdWl2PSJYLVVBLUNvbXBhdGlibGUiIGNvbnRlbnQ9IklFPUVkZ2UiPgogICAgPG1ldGEgbmFtZT0idmlld3BvcnQiIGNvbnRlbnQ9IndpZHRoPWRldmljZS13aWR0aCxpbml0aWFsLXNjYWxlPTEsbWluaW11bS1zY2FsZT0xIj4KCiAgICAKICAgIDx0aXRsZT5BcHBhcnRlbWVudCAzIHBpw6hjZXMgw6AgdmVuZHJlIC0gUGFyaXMgMTHDqG1lICg3NTAxMSkgLSA3MSBtMiAtIEZvbmNpYTwvdGl0bGU+CgogICAgICAgICAgICAgICAgICAgIDxtZXRhIG5hbWU9ImRlc2NyaXB0aW9uIiBjb250ZW50PSJBcHBhcnRlbWVudCAzIHBpw6hjZXMgKDcxIG0yKSDDoCB2ZW5kcmUgLSBQYXJpcyAxMcOobWUgKDc1MDExKSA6IE3DqXRybyBDaGVtaW4gVmVydC4gCkEgbGEgbGlzacOocmUgZHUgTWFyYWlzLCBkYW5zIHVuIG1hZ25pZmlxdWUgaW1tZXVibGUgYm91cmdlb2lzLCBkw6ljb3V2cmV6IGNlIDIvMyBwacOoY2VzIGRlIDcxIG3CsiBhdSBzb2wgZXQgNjYgbcKyIGNhcnJleiwgZW4gw6l0YWdlIMOpbGV2w6ksLi4uIj4KCiAgICAgICAgICAgICAgICAgICAgICAgIDxsaW5rIHJlbD0iaWNvbiIgdHlwZT0iaW1hZ2UveC1pY29uIiBocmVmPSIvZmF2aWNvbi5pY28/dmVyc2lvbj0xNTg4MDk3NTU5Ij4KICAgICAgICA8bGluayByZWw9ImFwcGxlLXRvdWNoLWljb24tcmV0aW5hIiBocmVmPSIvYnVuZGxlcy9mb25jaWFpbnRlcm5ldC9pbWFnZXMvZW52aXJvbm1lbnQvdG91Y2gtaWNvbi1pcGhvbmUtcmV0aW5hLnBuZz92ZXJzaW9uPTE1ODgwOTc1NTkiPgoKICAgICAgICAgICAgICAgIDxtZXRhIG5hbWU9ImFwcGxpY2F0aW9uLW5hbWUiIGNvbnRlbnQ9IkZvbmNpYS5jb20iPgogICAgICAgIDxtZXRhIG5hbWU9Im1zYXBwbGljYXRpb24tVGlsZUNvbG9yIiBjb250ZW50PSIjMDA5ZWI5Ij4KICAgICAgICA8bWV0YSBuYW1lPSJtc2FwcGxpY2F0aW9uLXNxdWFyZTcweDcwbG9nbyIgY29udGVudD0idGlueS5wbmciPgogICAgICAgIDxtZXRhIG5hbWU9Im1zYXBwbGljYXRpb24tc3F1YXJlMTUweDE1MGxvZ28iIGNvbnRlbnQ9InNxdWFyZS5wbmciPgogICAgICAgIDxtZXRhIG5hbWU9Im1zYXBwbGljYXRpb24td2lkZTMxMHgxNTBsb2dvIiBjb250ZW50PSJ3aWRlLnBuZyI+CiAgICAgICAgPG1ldGEgbmFtZT0ibXNhcHBsaWNhdGlvbi1zcXVhcmUzMTB4MzEwbG9nbyIgY29udGVudD0ibGFyZ2UucG5nIj4KCiAgICAgICAgICAgICAgICA8bWV0YSBwcm9wZXJ0eT0ib2c6dGl0bGUiIGNvbnRlbnQ9IkFwcGFydGVtZW50IDMgcGnDqGNlcyDDoCB2ZW5kcmUgLSBQYXJpcyAxMcOobWUgKDc1MDExKSAtIDcxIG0yIC0gRm9uY2lhIj4KICAgICAgICA8bWV0YSBwcm9wZXJ0eT0ib2c6c2l0ZV9uYW1lIiBjb250ZW50PSJGT05DSUEiPgogICAgICAgIDxtZXRhIHByb3BlcnR5PSJvZzpkZXNjcmlwdGlvbiIgY29udGVudD0iQXBwYXJ0ZW1lbnQgMyBwacOoY2VzICg3MSBtMikgw6AgdmVuZHJlIC0gUGFyaXMgMTHDqG1lICg3NTAxMSkgOiBNw6l0cm8gQ2hlbWluIFZlcnQuIApBIGxhIGxpc2nDqHJlIGR1IE1hcmFpcywgZGFucyB1biBtYWduaWZpcXVlIGltbWV1YmxlIGJvdXJnZW9pcywgZMOpY291dnJleiBjZSAyLzMgcGnDqGNlcyBkZSA3MSBtwrIgYXUgc29sIGV0IDY2IG3CsiBjYXJyZXosIGVuIMOpdGFnZSDDqWxldsOpLC4uLiI+CiAgICAgICAgPG1ldGEgcHJvcGVydHk9Im9nOnVybCIgY29udGVudD0iaHR0cHM6Ly9mci5mb25jaWEuY29tL2FjaGF0L3BhcmlzLTc1MDExL2FwcGFydGVtZW50LzEzOTEyMDIuaHRtIj4KICAgICAgICA8bWV0YSBwcm9wZXJ0eT0ib2c6aW1hZ2UiIGNvbnRlbnQ9Imh0dHA6Ly9waG90b3MuZnIuZm9uY2lhLmNvbS9taW5pY3AvNjQwLzQ4MC9waG90b3MvMTM5MS8yMDIvMTM5MTIwMi9ncmFuZC8xMzkxMjAyX2MwOTA3N2M2N2IxMDYyODAwZjYxMGQ0NjA4ZGFlMmM3NWU2NzcyZDg1ZjRkNi5qcGc/ZGF0ZW1haj0yMDIwLTA1LTA4IDA4OjQ3OjIyLjE3NyI+CgogICAgICAgIDxtZXRhIG5hbWU9InR3aXR0ZXI6dGl0bGUiIGNvbnRlbnQ9IkFwcGFydGVtZW50IDMgcGnDqGNlcyDDoCB2ZW5kcmUgLSBQYXJpcyAxMcOobWUgKDc1MDExKSAtIDcxIG0yIC0gRm9uY2lhIj4KICAgICAgICA8bWV0YSBuYW1lPSJ0d2l0dGVyOmltYWdlOnNyYyIgY29udGVudD0iaHR0cDovL3Bob3Rvcy5mci5mb25jaWEuY29tL21pbmljcC82NDAvNDgwL3Bob3Rvcy8xMzkxLzIwMi8xMzkxMjAyL2dyYW5kLzEzOTEyMDJfYzA5MDc3YzY3YjEwNjI4MDBmNjEwZDQ2MDhkYWUyYzc1ZTY3NzJkODVmNGQ2LmpwZz9kYXRlbWFqPTIwMjAtMDUtMDggMDg6NDc6MjIuMTc3Ij4KICAgICAgICA8bWV0YSBuYW1lPSJ0d2l0dGVyOmRlc2NyaXB0aW9uIiBjb250ZW50PSJBcHBhcnRlbWVudCAzIHBpw6hjZXMgKDcxIG0yKSDDoCB2ZW5kcmUgLSBQYXJpcyAxMcOobWUgKDc1MDExKSA6IE3DqXRybyBDaGVtaW4gVmVydC4gCkEgbGEgbGlzacOocmUgZHUgTWFyYWlzLCBkYW5zIHVuIG1hZ25pZmlxdWUgaW1tZXVibGUgYm91cmdlb2lzLCBkw6ljb3V2cmV6IGNlIDIvMyBwacOoY2VzIGRlIDcxIG3CsiBhdSBzb2wgZXQgNjYgbcKyIGNhcnJleiwgZW4gw6l0YWdlIMOpbGV2w6ksLi4uIj4KICAgICAgICA8bWV0YSBuYW1lPSJ0d2l0dGVyOmNhcmQiIGNvbnRlbnQ9InN1bW1hcnkiPgogICAgICAgIDxtZXRhIG5hbWU9InR3aXR0ZXI6c2l0ZSIgY29udGVudD0iQGZvbmNpYSI+CiAgICAKICAgICAgICAgICAgICAgIDxsaW5rIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0iL2NvbXBpbGVkL3N0eWxlcy5jc3M/dmVyc2lvbj0xNTg4MDk3NTU5Ij4KICAgIAogICAgPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPgogICAgdmFyIHRhcnRlYXVjaXRyb25Gb3JjZUNETiA9ICIvYnVuZGxlcy9mb25jaWFpbnRlcm5ldC9qcy90YXJ0ZWF1Y2l0cm9uLyI7Cjwvc2NyaXB0PgoKICAgIDxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0IiBzcmM9Ii9jb21waWxlZC90YXJ0ZWF1Y2l0cm9uLmpzP3ZlcnNpb249MTU4ODA5NzU1OSI+PC9zY3JpcHQ+CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNjcmlwdD53aW5kb3cuZm9uY2lhX2ludGVybmV0PXtwYXJhbXM6e319PC9zY3JpcHQ+CiAgICAgICAgPCEtLVtpZiBJRSA5XT48c2NyaXB0PmRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5jbGFzc05hbWUrPScgSUU5Jzs8L3NjcmlwdD48IVtlbmRpZl0tLT4KPCEtLVtpZiBJRSAxMF0+PHNjcmlwdD5kb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuY2xhc3NOYW1lKz0nIElFMTAnOzwvc2NyaXB0PjwhW2VuZGlmXS0tPgoKPHNjcmlwdD4KIWZ1bmN0aW9uKGEsYil7ImZ1bmN0aW9uIj09dHlwZW9mIGRlZmluZSYmZGVmaW5lLmFtZD9kZWZpbmUoW10sZnVuY3Rpb24oKXtyZXR1cm4gYS5zdmc0ZXZlcnlib2R5PWIoKX0pOiJvYmplY3QiPT10eXBlb2YgZXhwb3J0cz9tb2R1bGUuZXhwb3J0cz1iKCk6YS5zdmc0ZXZlcnlib2R5PWIoKX0odGhpcyxmdW5jdGlvbigpe2Z1bmN0aW9uIGEoYSxiKXtpZihiKXt2YXIgYz1kb2N1bWVudC5jcmVhdGVEb2N1bWVudEZyYWdtZW50KCksZD0hYS5nZXRBdHRyaWJ1dGUoInZpZXdCb3giKSYmYi5nZXRBdHRyaWJ1dGUoInZpZXdCb3giKTtkJiZhLnNldEF0dHJpYnV0ZSgidmlld0JveCIsZCk7Zm9yKHZhciBlPWIuY2xvbmVOb2RlKCEwKTtlLmNoaWxkTm9kZXMubGVuZ3RoOyljLmFwcGVuZENoaWxkKGUuZmlyc3RDaGlsZCk7YS5hcHBlbmRDaGlsZChjKX19ZnVuY3Rpb24gYihiKXtiLm9ucmVhZHlzdGF0ZWNoYW5nZT1mdW5jdGlvbigpe2lmKDQ9PT1iLnJlYWR5U3RhdGUpe3ZhciBjPWIuX2NhY2hlZERvY3VtZW50O2N8fChjPWIuX2NhY2hlZERvY3VtZW50PWRvY3VtZW50LmltcGxlbWVudGF0aW9uLmNyZWF0ZUhUTUxEb2N1bWVudCgiIiksYy5ib2R5LmlubmVySFRNTD1iLnJlc3BvbnNlVGV4dCxiLl9jYWNoZWRUYXJnZXQ9e30pLGIuX2VtYmVkcy5zcGxpY2UoMCkubWFwKGZ1bmN0aW9uKGQpe3ZhciBlPWIuX2NhY2hlZFRhcmdldFtkLmlkXTtlfHwoZT1iLl9jYWNoZWRUYXJnZXRbZC5pZF09Yy5nZXRFbGVtZW50QnlJZChkLmlkKSksYShkLnN2ZyxlKX0pfX0sYi5vbnJlYWR5c3RhdGVjaGFuZ2UoKX1mdW5jdGlvbiBjKGMpe2Z1bmN0aW9uIGQoKXtmb3IodmFyIGM9MDtjPGwubGVuZ3RoOyl7dmFyIGc9bFtjXSxoPWcucGFyZW50Tm9kZTtpZihoJiYvc3ZnL2kudGVzdChoLm5vZGVOYW1lKSl7dmFyIGk9Zy5nZXRBdHRyaWJ1dGUoInhsaW5rOmhyZWYiKTtpZihlJiYoIWYudmFsaWRhdGV8fGYudmFsaWRhdGUoaSxoLGcpKSl7aC5yZW1vdmVDaGlsZChnKTt2YXIgbT1pLnNwbGl0KCIjIiksbj1tLnNoaWZ0KCksbz1tLmpvaW4oIiMiKTtpZihuLmxlbmd0aCl7dmFyIHA9altuXTtwfHwocD1qW25dPW5ldyBYTUxIdHRwUmVxdWVzdCxwLm9wZW4oIkdFVCIsbikscC5zZW5kKCkscC5fZW1iZWRzPVtdKSxwLl9lbWJlZHMucHVzaCh7c3ZnOmgsaWQ6b30pLGIocCl9ZWxzZSBhKGgsZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQobykpfX1lbHNlKytjfWsoZCw2Nyl9dmFyIGUsZj1PYmplY3QoYyksZz0vXGJUcmlkZW50XC9bNTY3XVxifFxiTVNJRSAoPzo5fDEwKVwuMFxiLyxoPS9cYkFwcGxlV2ViS2l0XC8oXGQrKVxiLyxpPS9cYkVkZ2VcLzEyXC4oXGQrKVxiLztlPSJwb2x5ZmlsbCJpbiBmP2YucG9seWZpbGw6Zy50ZXN0KG5hdmlnYXRvci51c2VyQWdlbnQpfHwobmF2aWdhdG9yLnVzZXJBZ2VudC5tYXRjaChpKXx8W10pWzFdPDEwNTQ3fHwobmF2aWdhdG9yLnVzZXJBZ2VudC5tYXRjaChoKXx8W10pWzFdPDUzNzt2YXIgaj17fSxrPXdpbmRvdy5yZXF1ZXN0QW5pbWF0aW9uRnJhbWV8fHNldFRpbWVvdXQsbD1kb2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZSgidXNlIik7ZSYmZCgpfXJldHVybiBjfSk7Cjwvc2NyaXB0Pgo8c2NyaXB0PnN2ZzRldmVyeWJvZHkoKTwvc2NyaXB0PgogICAgCiAgICAgICAgPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiIHNyYz0iaHR0cHM6Ly93d3cuY2l0eXNjYW4uZnIvYXNzZXRzL2J1aWxkL2pzL2xpYi9jaXR5c2Nhbi13aWRnZXQuanMiPjwvc2NyaXB0Pgo8L2hlYWQ+CgoKPGJvZHk+CgogICAgPHNjcmlwdD4KICAgICAgICBkYXRhTGF5ZXIgPSB3aW5kb3cuZGF0YUxheWVyIHx8IHt9OwogICAgICAgIHZhciBvYmplY3QgPSB7CiAgICAgICAgICAgICJ0eXBlU2l0ZSI6ICJnw6luw6lyaXF1ZSIsCiAgICAgICAgICAgICJlc3BhY2UiOiAiZ2VuZXJhbCIsCiAgICAgICAgICAgICJ0eXBlUGFnZSI6ICJjbGFzc2lxdWUiLAogICAgICAgICAgICAidGVtcGxhdGUiOiAicHJvZHVpdCIsCiAgICAgICAgICAgICJ0aGVtZSI6ICJhY2hhdCIKICAgICAgICB9OwoKICAgICAgICBkYXRhTGF5ZXIgPSBbb2JqZWN0XTsKICAgIDwvc2NyaXB0PgoKPHNjcmlwdD4KICAgIGRhdGFMYXllciA9IHdpbmRvdy5kYXRhTGF5ZXIgfHwgW107CgogICAgdmFyIGN1cnJlbnRQYXRoID0gd2luZG93LmxvY2F0aW9uLnBhdGhuYW1lOwoKICAgICAgICAgICAgdmFyIGNvbW1vblVwdGlsYWJWYWx1ZXMgPSB7CiAgICAgICAgInR5cGVTaXRlIjogImfDqW7DqXJpcXVlIiwgLy8gRmV0Y2hlZCBmcm9tIGxheW91dCBnbG9iYWxzCiAgICAgICAgImVzcGFjZSI6ICJnZW5lcmFsIiwKICAgICAgICAidHlwZVBhZ2UiOiAiY2xhc3NpcXVlIiwKICAgICAgICAidGVtcGxhdGUiOiAiYXV0cmVzIgogICAgfTsKCiAgICAvLyBEZXBlbmRpbmcgb24gY3VycmVudCBwYXRobmFtZSwgd2UgZGlzcGF0Y2ggYW4gZXZlbnQsIHVzZWQgZm9yIEJhY2stT2ZmaWNlIHBhZ2VzCiAgICBzd2l0Y2ggKHRydWUpIHsKICAgICAgICBjYXNlIGN1cnJlbnRQYXRoLmluZGV4T2YoIi9hY2hhdC8iKSA9PT0gMDogLy8gUGFnZSBhY2hhdCAoYXZlYyByZWNoZXJjaGUgZW4gY291cnMpCiAgICAgICAgICAgIC8vIEV2ZW50CiAgICAgICAgICAgIGRhdGFMYXllci5wdXNoKHsiY3VzdG9tQ2F0ZWdvcmllIjogImVuZ2FnZW1lbnQiLCAiY3VzdG9tQWN0aW9uIjogImludGVyZXQiLCAiY3VzdG9tTGFiZWwiOiAiQWNoZXRlciIsICJldmVudCI6ICJjdXN0b21FdmVudCJ9KTsKICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgY2FzZSBjdXJyZW50UGF0aC5pbmRleE9mKCIvbG9jYXRpb24vIikgPT09IDA6IC8vIFBhZ2UgbG9jYXRpb24gKGF2ZWMgcmVjaGVyY2hlIGVuIGNvdXJzKQogICAgICAgICAgICAvLyBFdmVudAogICAgICAgICAgICBkYXRhTGF5ZXIucHVzaCh7ImN1c3RvbUNhdGVnb3JpZSI6ICJlbmdhZ2VtZW50IiwgImN1c3RvbUFjdGlvbiI6ICJpbnRlcmV0IiwgImN1c3RvbUxhYmVsIjogIkxvdWVyIiwgImV2ZW50IjogImN1c3RvbUV2ZW50In0pOwogICAgICAgICAgICBicmVhazsKICAgICAgICBjYXNlIGN1cnJlbnRQYXRoLmluZGV4T2YoIi9yZWNoZXJjaGUvcGFjay1lYXN5bG9jIikgPT09IDA6IC8vIExhIHBhZ2UgcGFjay1lYXN5bG9jCiAgICAgICAgICAgIGNvbW1vblVwdGlsYWJWYWx1ZXMudGhlbWUgPSAibG9jYXRpb24iOwogICAgICAgICAgICBkYXRhTGF5ZXIucHVzaChjb21tb25VcHRpbGFiVmFsdWVzKTsKICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgY2FzZSBjdXJyZW50UGF0aC5pbmRleE9mKCIvcmVjaGVyY2hlL2FjaGV0ZXItdW4tYmllbiIpID09PSAwOiAvLyBMYSBwYWdlIGFjaGV0ZXIgdW4gYmllbgogICAgICAgICAgICBjb21tb25VcHRpbGFiVmFsdWVzLnRoZW1lID0gImFjaGF0IjsKICAgICAgICAgICAgZGF0YUxheWVyLnB1c2goY29tbW9uVXB0aWxhYlZhbHVlcyk7CiAgICAgICAgICAgIGJyZWFrOwogICAgICAgIGNhc2UgY3VycmVudFBhdGguaW5kZXhPZigiL2xlLWdyb3VwZSIpID09PSAwOiAvLyBQYWdlIG91IHNvdXMtcGFnZXMgIkxlIGdyb3VwZSIKICAgICAgICAgICAgY29tbW9uVXB0aWxhYlZhbHVlcy50aGVtZSA9ICJncm91cGUiOwogICAgICAgICAgICBkYXRhTGF5ZXIucHVzaChjb21tb25VcHRpbGFiVmFsdWVzKTsKICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgY2FzZSBjdXJyZW50UGF0aC5pbmRleE9mKCIvbC1pbnZlc3Rpc3NlbWVudC1pbW1vYmlsaWVyIikgPT09IDA6IC8vIFBhZ2Ugb3Ugc291cy1wYWdlcyAiTCdpbnZlc3Rpc3NlbWVudCBpbW1vYmlsaWVyIgogICAgICAgICAgICBjb21tb25VcHRpbGFiVmFsdWVzLnRoZW1lID0gImludmVzdGlzc2VtZW50IjsKICAgICAgICAgICAgZGF0YUxheWVyLnB1c2goY29tbW9uVXB0aWxhYlZhbHVlcyk7CiAgICAgICAgICAgIGJyZWFrOwogICAgICAgIGNhc2UgY3VycmVudFBhdGguaW5kZXhPZigiL2ZhaXJlLWdlcmVyLW1hLWxvY2F0aW9uLXBhci1mb25jaWEiKSA9PT0gMDogLy8gUGFnZSBvdSBzb3VzLXBhZ2VzICJGYWlyZSBnw6lyZXIgbWEgbG9jYXRpb24iCiAgICAgICAgICAgIGNvbW1vblVwdGlsYWJWYWx1ZXMudGhlbWUgPSAiZ2VzdGlvbkxvY2F0aXZlIjsKICAgICAgICAgICAgZGF0YUxheWVyLnB1c2goY29tbW9uVXB0aWxhYlZhbHVlcyk7CiAgICAgICAgICAgIGJyZWFrOwogICAgICAgIGNhc2UgY3VycmVudFBhdGguaW5kZXhPZigiL2ZhaXJlLWdlcmVyLXVuZS1jb3Byb3ByaWV0ZSIpID09PSAwOiAvLyBQYWdlIG91IHNvdXMtcGFnZXMgIkZhaXJlIGfDqXJlciB1bmUgY29wcm9wcmnDqXTDqSIKICAgICAgICAgICAgY29tbW9uVXB0aWxhYlZhbHVlcy50aGVtZSA9ICJjb3Byb3ByaWV0ZSI7CiAgICAgICAgICAgIGRhdGFMYXllci5wdXNoKGNvbW1vblVwdGlsYWJWYWx1ZXMpOwogICAgICAgICAgICBicmVhazsKICAgICAgICBjYXNlIGN1cnJlbnRQYXRoLmluZGV4T2YoIi9zZXJ2aWNlcyIpID09PSAwOiAvLyBQYWdlIG91IHNvdXMtcGFnZXMgIkZhaXJlIGfDqXJlciB1bmUgY29wcm9wcmnDqXTDqSIKICAgICAgICAgICAgY29tbW9uVXB0aWxhYlZhbHVlcy50aGVtZSA9ICJzZXJ2aWNlcyI7CiAgICAgICAgICAgIGRhdGFMYXllci5wdXNoKGNvbW1vblVwdGlsYWJWYWx1ZXMpOwogICAgICAgICAgICBicmVhazsKICAgICAgICBjYXNlIGN1cnJlbnRQYXRoID09PSAnL21vdC1kZS1wYXNzZS1vdWJsaWUnOgogICAgICAgICAgICBjb21tb25VcHRpbGFiVmFsdWVzLnRlbXBsYXRlID0gImhvbWVwYWdlIjsKICAgICAgICAgICAgZGF0YUxheWVyLnB1c2goY29tbW9uVXB0aWxhYlZhbHVlcyk7CiAgICAgICAgICAgIGJyZWFrOwogICAgICAgIGNhc2UgY3VycmVudFBhdGggPT09ICcvJzoKICAgICAgICAgICAgY29tbW9uVXB0aWxhYlZhbHVlcy50ZW1wbGF0ZSA9ICJob21lcGFnZSI7CiAgICAgICAgICAgIGRhdGFMYXllci5wdXNoKGNvbW1vblVwdGlsYWJWYWx1ZXMpOwogICAgICAgICAgICBicmVhazsKICAgIH0KICAgIAogICAgPC9zY3JpcHQ+Cjxub3NjcmlwdD48aWZyYW1lIHNyYz0iLy93d3cuZ29vZ2xldGFnbWFuYWdlci5jb20vbnMuaHRtbD9pZD1HVE0tUEJCWldEIiBoZWlnaHQ9IjAiIHdpZHRoPSIwIiBzdHlsZT0iZGlzcGxheTpub25lO3Zpc2liaWxpdHk6aGlkZGVuIj48L2lmcmFtZT48L25vc2NyaXB0Pgo8c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCI+CiAgICB0YXJ0ZWF1Y2l0cm9uLnVzZXIuZ29vZ2xldGFnbWFuYWdlcklkID0gJ0dUTS1QQkJaV0QnOwogICAgKHRhcnRlYXVjaXRyb24uam9iID0gdGFydGVhdWNpdHJvbi5qb2IgfHwgW10pLnB1c2goJ2dvb2dsZXRhZ21hbmFnZXJfZm9uY2lhJyk7CgogICAgdGFydGVhdWNpdHJvbi51c2VyLkFCVGFzdHlJZCA9ICIwZTZkOWVhMjQ3MjgyMDcyY2UzYTg0MTMwZmM4ZTcxMiI7CiAgICAodGFydGVhdWNpdHJvbi5qb2IgPSB0YXJ0ZWF1Y2l0cm9uLmpvYiB8fCBbXSkucHVzaCgnYWJ0YXN0eV9mb25jaWEnKTsKPC9zY3JpcHQ+Cgo8c2NyaXB0PgogICAgICAgIGRhdGFMYXllciA9IHdpbmRvdy5kYXRhTGF5ZXIgfHwgW107CgogICAgICAgIGZ1bmN0aW9uIGRlZmVyKG1ldGhvZCkgewogICAgICAgIGlmICh3aW5kb3cualF1ZXJ5KQogICAgICAgICAgICBtZXRob2QoKTsKICAgICAgICBlbHNlCiAgICAgICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkgewogICAgICAgICAgICAgICAgZGVmZXIobWV0aG9kKQogICAgICAgICAgICB9LCA1MCk7CiAgICB9CgogICAgCiAgICAKPC9zY3JpcHQ+Cgo8ZGl2IGNsYXNzPSJCb2R5V3JhcHBlciI+CgogICAgPGhlYWRlciBjbGFzcz0iSGVhZGVyIiByb2xlPSJiYW5uZXIiPgoKICAgIAogICAgPGRpdiBjbGFzcz0iSGVhZGVyLXRvcCI+CgogICAgICAgICAgICA8dWwgY2xhc3M9IkhlYWRlci10b3BOYXYgSGVhZGVyLXRvcC1sZWZ0Ij4KCiAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL2ZyLmZvbmNpYS5jb20vbm90cmUtYW1iaXRpb24iCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtYmVoYXQ9IkxlZ3JvdXBlIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgTGUgZ3JvdXBlCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cDovL2NhcnJpZXJlLmZvbmNpYS5jb20vIgogICAgICAgICAgICAgICAgICAgICAgICB0YXJnZXQ9Il9ibGFuayIgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtYmVoYXQ9IkNhcnJpw6hyZSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIENhcnJpw6hyZQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHA6Ly9mb25jaWEtcmVjcnV0ZS50YWxlbnQtc29mdC5jb20vYWNjdWVpbC5hc3B4IgogICAgICAgICAgICAgICAgICAgICAgICB0YXJnZXQ9Il9ibGFuayIgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtYmVoYXQ9Ik5vc29mZnJlc2TigJllbXBsb2kiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBOb3Mgb2ZmcmVzIGTigJllbXBsb2kKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL2ZyLmZvbmNpYS5jb20vbW9uLWd1aWRlLWltbW8iCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtYmVoYXQ9Ik1vbkd1aWRlSW1tbyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIE1vbiBHdWlkZSBJbW1vCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cDovL2JlbGxlc3BlcnNvbm5lcy5mb25jaWEuY29tLyIKICAgICAgICAgICAgICAgICAgICAgICAgdGFyZ2V0PSJfYmxhbmsiICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkYXRhLWJlaGF0PSJCZWxsZXNwZXJzb25uZXMiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBCZWxsZXMgcGVyc29ubmVzCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZnIuZm9uY2lhLmNvbS9hY3R1YWxpdGVzLWVuLXBlcmlvZGUtZGUtZGVjb25maW5lbWVudCIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZT0iY29sb3I6ICNGQThBMDA7Zm9udC13ZWlnaHQ6IGJvbGQ7IiAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1iZWhhdD0iQWN0dWFsaXTDqXMiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBBY3R1YWxpdMOpcwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgPC91bD4KICAgIAogICAgPHVsIGNsYXNzPSJIZWFkZXItdG9wTmF2IEhlYWRlci10b3AtcmlnaHQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgPGEgIGNsYXNzPSJJY29uLS1wb2ludGVyIiBocmVmPSJodHRwOi8vYWdlbmNlLmZvbmNpYS5jb20iIGRhdGEtYmVoYXQ9ImhlYWRlclRyb3V2ZXJBZ2VuY2VMaWVuIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFRyb3V2ZXIgdW5lIGFnZW5jZQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC91bD4KPC9kaXY+CgoKICAgIDxwIGNsYXNzPSJIZWFkZXItc2tpcGxpbmsiPgogICAgICAgIDxhIGNsYXNzPSJIZWFkZXItbG9nbyIgaHJlZj0iLyI+CiAgICAgICAgICAgIDxpbWcgY2xhc3M9IkhlYWRlci1sb2dvLS1kZXNrdG9wIiB3aWR0aD0iNjRweCIgaGVpZ2h0PSI2NHB4IiBzcmM9Imh0dHBzOi8vcGhvdG9zLmZvbmNpYS5uZXQvaW1hZ2VzL0ZvbmNpYV9sb2dvaF82Nl82Ni5wbmciIGFsdD0iRm9uY2lhIj4KICAgICAgICAgICAgPGltZyBjbGFzcz0iSGVhZGVyLWxvZ28tLW1vYmlsZSIgd2lkdGg9IjEwOHB4IiBoZWlnaHQ9IjMwcHgiIHNyYz0iaHR0cHM6Ly9waG90b3MuZm9uY2lhLm5ldC9pbWFnZXMvRm9uY2lhX2hvbWVwYWdldl8xMDhfMzAucG5nIiBhbHQ9IkZvbmNpYSI+CiAgICAgICAgPC9hPgogICAgICAgIDxidXR0b24gY2xhc3M9IkhlYWRlci1za2lwbGluay1tZW51IEljb24tLW1lbnUiIGRhdGEtd2lkZ2V0PSJQYW5lbFNsaWRlLXRyaWdlciIgZGF0YS13aWRnZXQtc2lkZT0ibGVmdCI+TWVudTwvYnV0dG9uPgogICAgICAgIDxhIGhyZWY9Ii9sb2dpbiIgY2xhc3M9IkhlYWRlci1za2lwbGluay11c2VyIEljb24tLXVzZXItbWFsZTIiPk15Rk9OQ0lBPC9hPgogICAgPC9wPgoKICAgIDxuYXYgY2xhc3M9Ik1haW5OYXYiIHJvbGU9Im5hdmlnYXRpb24iPgogICAgICAgIDx1bCBjbGFzcz0iTWFpbk5hdi1saXN0IEhlYWRlci10b3BOYXYiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaSBjbGFzcz0iTWFpbk5hdi1pdGVtIE1haW5OYXYtaXRlbS0tbG9jYXRpb24gZmlyc3QiPiAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9mci5mb25jaWEuY29tL2FjaGF0IiAgICA+QWNoZXRlciA8c3Bhbj5vdSBsb3Vlcjwvc3Bhbj48L2E+ICAgICAgICAgICAgCiAgICA8L2xpPgoKICAgICAgICA8bGkgY2xhc3M9Ik1haW5OYXYtaXRlbSBNYWluTmF2LWl0ZW0tLWdlc3Rpb24iPiAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9mci5mb25jaWEuY29tL2ZhaXJlLWdlcmVyLW1hLWxvY2F0aW9uLXBhci1mb25jaWEiICAgID5GYWlyZSBnw6lyZXIgPHNwYW4+bWEgbG9jYXRpb248L3NwYW4+PC9hPiAgICAgICAgICAgIAogICAgPC9saT4KCiAgICAgICAgPGxpIGNsYXNzPSJNYWluTmF2LWl0ZW0gTWFpbk5hdi1pdGVtLS1jb3BybyI+ICAgICAgICA8YSBocmVmPSJodHRwczovL2ZyLmZvbmNpYS5jb20vZmFpcmUtZ2VyZXItdW5lLWNvcHJvcHJpZXRlIiAgICA+RmFpcmUgZ8OpcmVyIDxzcGFuPnVuZSBjb3Byb3ByacOpdMOpPC9zcGFuPjwvYT4gICAgICAgICAgICAKICAgIDwvbGk+CgogICAgICAgIDxsaSBjbGFzcz0iTWFpbk5hdi1pdGVtIE1haW5OYXYtaXRlbS0tdmVudGUiPiAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9mci5mb25jaWEuY29tL2VzdGltZXItZXQtdmVuZHJlIiAgICA+RXN0aW1lciA8c3Bhbj5ldCB2ZW5kcmU8L3NwYW4+PC9hPiAgICAgICAgICAgIAogICAgPC9saT4KCiAgICAgICAgPGxpIGNsYXNzPSJNYWluTmF2LWl0ZW0gTWFpbk5hdi1pdGVtLS1pbnZlc3Rpc3NlbWVudCI+ICAgICAgICA8YSBocmVmPSJodHRwczovL2ZyLmZvbmNpYS5jb20vbC1pbnZlc3Rpc3NlbWVudC1pbW1vYmlsaWVyIiAgICA+SW52ZXN0aXIgPHNwYW4+ZGFucyBsJiMwMzk7aW1tb2JpbGllcjwvc3Bhbj48L2E+ICAgICAgICAgICAgCiAgICA8L2xpPgoKICAgICAgICA8bGkgY2xhc3M9Ik1haW5OYXYtaXRlbSBNYWluTmF2LWl0ZW0tLWxvY2F0aW9udmFjYW5jZXMgbGFzdCI+ICAgICAgICA8YSBocmVmPSJodHRwczovL3d3dy5mb25jaWEtbG9jYXRpb24tdmFjYW5jZXMuZnIvI3V0bV9zb3VyY2U9Zm9uY2lhLmNvbSZhbXA7dXRtX21lZGl1bT1saWVuJmFtcDt1dG1fY2FtcGFpZ249Zm9uY2lhLmNvbSIgICAgIHRhcmdldD0iX2JsYW5rIj5Mb2NhdGlvbiA8c3Bhbj5WYWNhbmNlczwvc3Bhbj48L2E+ICAgICAgICAgICAgCiAgICA8L2xpPgoKCiAgICAKCgogICAgICAgICAgICA8bGkgY2xhc3M9Ik1haW5OYXYtaXRlbSBNYWluTmF2LWl0ZW0tLXVzZXIgbGFzdCI+CiAgICAgICAgICAgICAgICA8YSBocmVmPSIvbG9naW4iPk15Rk9OQ0lBIDxzcGFuPkVTUEFDRSBDTElFTlQ8L3NwYW4+PC9hPgogICAgICAgICAgICA8L2xpPgogICAgICAgIDwvdWw+CiAgICA8L25hdj4KCiAgICA8ZGl2IGNsYXNzPSJVc2VyTmF2IiBpZD0iTXlGb25jaWFNZW51Ij4KCiAgICA8ZGl2IGNsYXNzPSJVc2VyTmF2LW92ZXJmbG93ICI+CiAgICAgICAgCiAgICAgICAgPGRpdiBjbGFzcz0iVXNlckxvZ2luIj4KICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgIDxkaXYgY2xhc3M9IlVzZXJMb2dpbi1pbmZvIj4KICAgICAgICAgICAgPHAgY2xhc3M9IlVzZXJMb2dpbi10aXRsZSI+UHJlbWnDqHJlIGNvbm5leGlvbiA/PC9wPgogICAgCgogICAgCiAgICAgICAgPHAgY2xhc3M9IlVzZXJMb2dpbi1pbGwiPgogICAgICAgICAgICAgICAgPGltZyBzcmM9Imh0dHBzOi8vZnIuZm9uY2lhLmNvbS92YXIvZm9uY2lhL3N0b3JhZ2UvaW1hZ2VzL19hbGlhc2VzL3RodW1iXzIwNV8yMDUvbWVkaWEvaW1hZ2VzL2FpZGUvMzU3MC0yLWZyZS1GUi9BaWRlLnBuZyIgIGFsdD0iIiAvPgogICAgICAgIDwvcD4KCiAgICAKICAgIAogICAgICAgICAgICA8cCBjbGFzcz0iVXNlckxvZ2luLXRleHQiPkxvcnMgZGUgdm90cmUgcHJlbWnDqHJlIGNvbm5leGlvbiDDoCB2b3RyZSBlc3BhY2UgY2xpZW50IE15Rm9uY2lhLCB2b3VzIGRldmV6IHNhaXNpciB2b3RyZSBpZGVudGlmaWFudCBldCBsZSBtb3QgZGUgcGFzc2UgcHJvdmlzb2lyZSBxdWkgdm91cyBvbnQgw6l0w6kgdHJhbnNtaXMgcGFyIHZvdHJlIGFnZW5jZSBvdSBzdXIgdm9zIGRvY3VtZW50cyBjb21wdGFibGVzLjwvcD4KICAgIAoKICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CjxwIGNsYXNzPSJVc2VyTG9naW4tY3JlYXRlIj5QcmVtacOocmUgY29ubmV4aW9uID8gPGEKICAgICAgICAgICAgICAgIGhyZWY9Ii9wcmVtaWVyZS1jb25uZXhpb24tYS1tb24tZXNwYWNlLWNsaWVudC1mb25jaWEiPkTDqWNvdXZyZXogY29tbWVudCB2b3VzIGNvbm5lY3RlcjwvYT48L3A+CgoKICAgICAgICAKICAgICAgICA8L2Rpdj4KCiAgICA8L2Rpdj4KCjwvZGl2PgoKICAgICAgICAgICAgICAgICAgICAgICAgPC9oZWFkZXI+CiAgICAKPCEtLVtpZiBsdGUgSUUgOSBdPgo8ZGl2IGNsYXNzPSJCcm93c2VyQWxlcnQgQnJvd3NlckFsZXJ0LS12aXNpYmxlIj4KICAgIDxkaXYgY2xhc3M9IkJyb3dzZXJBbGVydC1pbm5lciI+CiAgICAgICAgPHNwYW4gY2xhc3M9IkJyb3dzZXJBbGVydC1pY29uIj4KICAgICAgICAgICAgPHN2ZyBjbGFzcz0iaWNvbiIgd2lkdGg9IjMyIiBoZWlnaHQ9IjMyIiBhcmlhLWhpZGRlbj0idHJ1ZSI+PHVzZSB4bGluazpocmVmPSIvYnVuZGxlcy9mb25jaWFpbnRlcm5ldC9zdmcvaWNvbnMuc3ZnI0ljb24tLWluZm8iPjwvdXNlPjwvc3ZnPgogICAgICAgIDwvc3Bhbj4KICAgICAgICA8cCBjbGFzcz0iQnJvd3NlckFsZXJ0LW1lc3NhZ2UiPgogICAgICAgICAgICBBdHRlbnRpb24sIHZvdHJlIG5hdmlnYXRldXIgbuKAmWVzdCBwYXMgw6Agam91ciAhIEFmaW4gZCdhbcOpbGlvcmVyIHZvdHJlIGV4cMOpcmllbmNlIHN1ciBjZSBzaXRlIG5vdXMgdm91cyBjb25zZWlsbG9ucyBkZSBtZXR0cmUgw6Agam91ciB2b3RyZSBuYXZpZ2F0ZXVyIHZlcnMgdW5lIHZlcnNpb24gcGx1cyByw6ljZW50ZQogICAgICAgIDwvcD4KICAgICAgICA8c3BhbiBjbGFzcz0iQnJvd3NlckFsZXJ0LWNsb3NlIj4KICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz0iQnJvd3NlckFsZXJ0LWNsb3NlQnRuIiBhcmlhLWxhYmVsPSJNYXNxdWVyIGNlIG1lc3NhZ2UiPgogICAgICAgICAgICAgICAgPHN2ZyBjbGFzcz0iaWNvbiIgd2lkdGg9IjEyIiBoZWlnaHQ9IjEyIiBhcmlhLWhpZGRlbj0idHJ1ZSI+PHVzZSB4bGluazpocmVmPSIvYnVuZGxlcy9mb25jaWFpbnRlcm5ldC9zdmcvaWNvbnMuc3ZnI0ljb24tLWNsb3NlMiI+PC91c2U+PC9zdmc+CiAgICAgICAgICAgIDwvYnV0dG9uPgogICAgICAgIDwvc3Bhbj4KICAgIDwvZGl2Pgo8L2Rpdj4KPCFbZW5kaWZdLS0+CgoKCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9IkJyZWFkY3J1bWJzIj4KICAgICAgICAgICAgPHAgICAgIGNsYXNzPSJCcmVhZGNydW1icy1pbm5lciIgZGF0YS10eXBlPSJ5b2xvIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3Bhbj5Gb25jaWE8L3NwYW4+ICAgICAgICAgICAgICAgICAgICAgICAgICAgIAoKICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iL2FjaGF0IiAgICAgY2xhc3M9IkJyZWFkY3J1bWJzLWxpbmsiPkFjaGF0PC9hPiAgICAgICAgICAgICAgICAgICAgICAgICAgICAKCiAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Ii9hY2hhdC9wYXJpcy03NTAxMSIgICAgIGNsYXNzPSJCcmVhZGNydW1icy1saW5rIj5QYXJpcyAoNzUwMTEpPC9hPiAgICAgICAgICAgICAgICAgICAgICAgICAgICAKCiAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuPkFwcGFydGVtZW50PC9zcGFuPiAgICAgICAgICAgICAgICAgICAgICAgICAgICAKCiAgICAKCiAgICAgICAgICAgIDwvcD4KICAgICAgICA8L2Rpdj4KICAgIAoKCiAgICAgICAgICAgICAgICAgICAgICAgIAogICAgCiAgICAKICAgIDxkaXYgY2xhc3M9IkNvbnRlbnQiPgoKICAgICAgICA8ZGl2IGNsYXNzPSJDb250ZW50LWJhbmRvIENvbnRlbnQtYmFuZG8tLWdyYWRpZW50Ij48L2Rpdj4KCiAgICAgICAgPGRpdiBjbGFzcz0iUmVzdWx0c05hdiIgZGF0YS1wcm9wZXJ0eS1yZWZlcmVuY2U9IjEzOTEyMDIiPgoKICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICA8c2VjdGlvbiBjbGFzcz0iQ29udGVudC1yb3cgQ29udGVudC1yb3ctLWJsZWVkIj4KICAgICAgICAgICAgICAgIDxkaXYgaWQ9ImNpdHlzY2FuLXdpZGdldCIKICAgICBkYXRhLWNsaWVudC1rZXk9Ik52MUM5MmdQRGJmNE9KOHl3MiIKICAgICBkYXRhLWV4dC1hZGRyZXNzLWlkPSJUMTM5MTIwMiIKICAgICBkYXRhLWxhbmd1YWdlPSJmci1GUiIKICAgICAgICAgIGNsYXNzPSJPZmZlck1hcCI+PC9kaXY+ICAgICAgICAgICAgPC9zZWN0aW9uPgogICAgICAgICAgICAgICAgPHNlY3Rpb24gY2xhc3M9IkNvbnRlbnQtcm93IENvbnRlbnQtcm93LS1ncmF5Ij4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iQ29udGVudC1vdmVyZmxvdyI+CgogICAgICAgICAgICAgICAgPG1haW4gY2xhc3M9IkNvbnRlbnQtbWFpbiIgcm9sZT0ibWFpbiI+CgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Ik9mZmVyVG9wIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iT2ZmZXJUb3AtaGVhZCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJPZmZlclRvcC1iYWRnZSI+RXhjbHVzaWY8L3A+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGgxIGNsYXNzPSJPZmZlclRvcC10aXRsZSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgQXBwYXJ0ZW1lbnQKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAzIHBpw6hjZXMgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIMOgIHZlbmRyZQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2gxPgogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9Ik9mZmVyVG9wLWZhdiI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIGNsYXNzPSJGYXZCdG4gRmF2QnRuLS1pbmFjdGl2ZSIgYXJpYS1sYWJlbD0iQWpvdXRlciBhdXggZmF2b3JpcyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHN2ZyBjbGFzcz0iaWNvbiIgc3R5bGU9IndpZHRoOjE1cHg7aGVpZ2h0OjE1cHgiIGFyaWEtaGlkZGVuPSJ0cnVlIj48dXNlIHhsaW5rOmhyZWY9Ii9idW5kbGVzL2ZvbmNpYWludGVybmV0L3N2Zy9pY29ucy5zdmcjSWNvbi0tc3RhcjIiPjwvdXNlPjwvc3ZnPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9idXR0b24+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvcD4KCiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Ik9mZmVyVG9wLWNvbHMiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iT2ZmZXJUb3AtY29sIE9mZmVyVG9wLWNvbC0tbGVmdCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9Ik9mZmVyVG9wLXByaWNlIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDgyMCAwMDAmbmJzcDvigqwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3A+CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJPZmZlclRvcC1pbmZvIj5Ib25vcmFpcmVzIGQnYWdlbmNlIMOgIGxhIGNoYXJnZSBkdSB2ZW5kZXVyPC9wPgoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0iT2ZmZXJUb3AtbG9jIiBkYXRhLWd0bS16aXBjb2RlPSI3NTAxMSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzdmcgY2xhc3M9Imljb24iIHN0eWxlPSJ3aWR0aDoxNnB4O2hlaWdodDoxNnB4IiBhcmlhLWhpZGRlbj0idHJ1ZSI+PHVzZSB4bGluazpocmVmPSIvYnVuZGxlcy9mb25jaWFpbnRlcm5ldC9zdmcvaWNvbnMuc3ZnI0ljb24tLXBvaW50ZXIzIj48L3VzZT48L3N2Zz4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgNzUwMTEgUGFyaXMgKDc1MDExKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iT2ZmZXJUb3AtY29sIE9mZmVyVG9wLWNvbC0tcmlnaHQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Ik1pbmlEYXRhIE1pbmlEYXRhLS1mbGV4Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iTWluaURhdGEtcm93IE1pbmlEYXRhLXJvdy0tYmciPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0iTWluaURhdGEtaXRlbSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDcxIG08c3VwPjI8L3N1cD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3A+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0iTWluaURhdGEtaXRlbSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDMgcGnDqGNlcyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9Ik1pbmlEYXRhLWl0ZW0iPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAxIGNoYW1icmUgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJPZmZlclNsaWRlciI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iT2ZmZXJTbGlkZXItbWFpbiIgaWQ9Ik9mZmVyU2xpZGVyTWFpbiI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx1bCBjbGFzcz0iT2ZmZXJTbGlkZXItbWFpbi1zbGlkZXMiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGkgY2xhc3M9Ik9mZmVyU2xpZGVyLW1haW4taXRlbSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgc3JjPSJodHRwOi8vcGhvdG9zLmZyLmZvbmNpYS5jb20vbWluaWNwLzY0MC80ODAvcGhvdG9zLzEzOTEvMjAyLzEzOTEyMDIvZ3JhbmQvMTM5MTIwMl9jMDkwNzdjNjdiMTA2MjgwMGY2MTBkNDYwOGRhZTJjNzVlNjc3MmQ4NWY0ZDYuanBnP2RhdGVtYWo9MjAyMC0wNS0wOCAwODo0NzoyMi4xNzciIHdpZHRoPSI2MDAiIGhlaWdodD0iNDUwIiBhbHQ9IkFwcGFydGVtZW50IMOgIHZlbmRyZSwgUGFyaXMgKDc1MDExKSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpIGNsYXNzPSJPZmZlclNsaWRlci1tYWluLWl0ZW0iPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW1nIHNyYz0iaHR0cDovL3Bob3Rvcy5mci5mb25jaWEuY29tL21pbmljcC82NDAvNDgwL3Bob3Rvcy8xMzkxLzIwMi8xMzkxMjAyL2dyYW5kLzEzOTEyMDJfMTQ1NDE2MmVmZTM3ZjMzNDc2NjlhOTU2NGUyNjEzYmU1ZTY3NzJiYzI2MTIzLmpwZz9kYXRlbWFqPTIwMjAtMDUtMDggMDg6NDc6MjIuMjA4IiB3aWR0aD0iNjAwIiBoZWlnaHQ9IjQ1MCIgYWx0PSJBcHBhcnRlbWVudCDDoCB2ZW5kcmUsIFBhcmlzICg3NTAxMSkiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaSBjbGFzcz0iT2ZmZXJTbGlkZXItbWFpbi1pdGVtIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBzcmM9Imh0dHA6Ly9waG90b3MuZnIuZm9uY2lhLmNvbS9taW5pY3AvNjQwLzQ4MC9waG90b3MvMTM5MS8yMDIvMTM5MTIwMi9ncmFuZC8xMzkxMjAyX2IwZTU2MGRiN2ZlYjI1ZjI2ODUxMTYzODAzZjQ3MzljNWU2ODliZjk1NzkwNC5qcGc/ZGF0ZW1haj0yMDIwLTA1LTA4IDA4OjQ3OjIyLjIyMyIgd2lkdGg9IjYwMCIgaGVpZ2h0PSI0NTAiIGFsdD0iQXBwYXJ0ZW1lbnQgw6AgdmVuZHJlLCBQYXJpcyAoNzUwMTEpIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGkgY2xhc3M9Ik9mZmVyU2xpZGVyLW1haW4taXRlbSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgc3JjPSJodHRwOi8vcGhvdG9zLmZyLmZvbmNpYS5jb20vbWluaWNwLzY0MC80ODAvcGhvdG9zLzEzOTEvMjAyLzEzOTEyMDIvZ3JhbmQvMTM5MTIwMl81YzdiZTYyNzE5NzNkNjQyYjAzM2VhOTkzYzg3ODdlMjVlNjc3MmJiYTJkZTQuanBnP2RhdGVtYWo9MjAyMC0wNS0wOCAwODo0NzoyMi4yMzkiIHdpZHRoPSI2MDAiIGhlaWdodD0iNDUwIiBhbHQ9IkFwcGFydGVtZW50IMOgIHZlbmRyZSwgUGFyaXMgKDc1MDExKSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpIGNsYXNzPSJPZmZlclNsaWRlci1tYWluLWl0ZW0iPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW1nIHNyYz0iaHR0cDovL3Bob3Rvcy5mci5mb25jaWEuY29tL21pbmljcC82NDAvNDgwL3Bob3Rvcy8xMzkxLzIwMi8xMzkxMjAyL2dyYW5kLzEzOTEyMDJfN2NmYTA3YTFlNmM3ZjNkNGE5MWJhMTVlZWExMGQ0Y2M1ZTY3NzJiYjJhMzJhLmpwZz9kYXRlbWFqPTIwMjAtMDUtMDggMDg6NDc6MjIuMjcwIiB3aWR0aD0iNjAwIiBoZWlnaHQ9IjQ1MCIgYWx0PSJBcHBhcnRlbWVudCDDoCB2ZW5kcmUsIFBhcmlzICg3NTAxMSkiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaSBjbGFzcz0iT2ZmZXJTbGlkZXItbWFpbi1pdGVtIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBzcmM9Imh0dHA6Ly9waG90b3MuZnIuZm9uY2lhLmNvbS9taW5pY3AvNjQwLzQ4MC9waG90b3MvMTM5MS8yMDIvMTM5MTIwMi9ncmFuZC8xMzkxMjAyX2E5YTE5Y2ZlOGFkMzAwZGE4ODhmYzVhOTM4MjhjYzE5NWU2NzcyYmFhOWNjNy5qcGc/ZGF0ZW1haj0yMDIwLTA1LTA4IDA4OjQ3OjIyLjI4NiIgd2lkdGg9IjYwMCIgaGVpZ2h0PSI0NTAiIGFsdD0iQXBwYXJ0ZW1lbnQgw6AgdmVuZHJlLCBQYXJpcyAoNzUwMTEpIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGkgY2xhc3M9Ik9mZmVyU2xpZGVyLW1haW4taXRlbSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgc3JjPSJodHRwOi8vcGhvdG9zLmZyLmZvbmNpYS5jb20vbWluaWNwLzY0MC80ODAvcGhvdG9zLzEzOTEvMjAyLzEzOTEyMDIvZ3JhbmQvMTM5MTIwMl85YzU4MWE3NTRiZWE5ZDI4NWM0ODU0MGY2MjkyZjRlYTVlNjc3MmQxZWNkNzcuanBnP2RhdGVtYWo9MjAyMC0wNS0wOCAwODo0NzoyMi4zMDEiIHdpZHRoPSI2MDAiIGhlaWdodD0iNDUwIiBhbHQ9IkFwcGFydGVtZW50IMOgIHZlbmRyZSwgUGFyaXMgKDc1MDExKSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpIGNsYXNzPSJPZmZlclNsaWRlci1tYWluLWl0ZW0iPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW1nIHNyYz0iaHR0cDovL3Bob3Rvcy5mci5mb25jaWEuY29tL21pbmljcC82NDAvNDgwL3Bob3Rvcy8xMzkxLzIwMi8xMzkxMjAyL2dyYW5kLzEzOTEyMDJfODYyYTRhOGU5NWViZDEyMGJmMWJhOGM5ZjYxYWE5YWQ1ZTY3NzJkMjZkMjEyLmpwZz9kYXRlbWFqPTIwMjAtMDUtMDggMDg6NDc6MjIuMzMzIiB3aWR0aD0iNjAwIiBoZWlnaHQ9IjQ1MCIgYWx0PSJBcHBhcnRlbWVudCDDoCB2ZW5kcmUsIFBhcmlzICg3NTAxMSkiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaSBjbGFzcz0iT2ZmZXJTbGlkZXItbWFpbi1pdGVtIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBzcmM9Imh0dHA6Ly9waG90b3MuZnIuZm9uY2lhLmNvbS9taW5pY3AvNjQwLzQ4MC9waG90b3MvMTM5MS8yMDIvMTM5MTIwMi9ncmFuZC8xMzkxMjAyX2NiYThmYzFmY2ZkNTRlMzhkZTM0MDQwN2QxZjAyMmQ0NWU2NzcyZDJlMDJjNC5qcGc/ZGF0ZW1haj0yMDIwLTA1LTA4IDA4OjQ3OjIyLjM0OCIgd2lkdGg9IjYwMCIgaGVpZ2h0PSI0NTAiIGFsdD0iQXBwYXJ0ZW1lbnQgw6AgdmVuZHJlLCBQYXJpcyAoNzUwMTEpIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGkgY2xhc3M9Ik9mZmVyU2xpZGVyLW1haW4taXRlbSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgc3JjPSJodHRwOi8vcGhvdG9zLmZyLmZvbmNpYS5jb20vbWluaWNwLzY0MC80ODAvcGhvdG9zLzEzOTEvMjAyLzEzOTEyMDIvZ3JhbmQvMTM5MTIwMl8wMjU5YTY0MzA3ZmY4MjAyYjYyNTA1MGFjNmVkYjU0MTVlNjc3MmQ4ZDYwNzAuanBnP2RhdGVtYWo9MjAyMC0wNS0wOCAwODo0NzoyMi4zNjQiIHdpZHRoPSI2MDAiIGhlaWdodD0iNDUwIiBhbHQ9IkFwcGFydGVtZW50IMOgIHZlbmRyZSwgUGFyaXMgKDc1MDExKSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpIGNsYXNzPSJPZmZlclNsaWRlci1tYWluLWl0ZW0iPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW1nIHNyYz0iaHR0cDovL3Bob3Rvcy5mci5mb25jaWEuY29tL21pbmljcC82NDAvNDgwL3Bob3Rvcy8xMzkxLzIwMi8xMzkxMjAyL2dyYW5kLzEzOTEyMDJfOGI1NWQ3OTA0ZjQzMTkyODAyNTJiMDUxMzBmODQyNTY1ZTY3NzJlMjJlYjMxLmpwZz9kYXRlbWFqPTIwMjAtMDUtMDggMDg6NDc6MjIuMzk1IiB3aWR0aD0iNjAwIiBoZWlnaHQ9IjQ1MCIgYWx0PSJBcHBhcnRlbWVudCDDoCB2ZW5kcmUsIFBhcmlzICg3NTAxMSkiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaSBjbGFzcz0iT2ZmZXJTbGlkZXItbWFpbi1pdGVtIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBzcmM9Imh0dHA6Ly9waG90b3MuZnIuZm9uY2lhLmNvbS9taW5pY3AvNjQwLzQ4MC9waG90b3MvMTM5MS8yMDIvMTM5MTIwMi9ncmFuZC8xMzkxMjAyX2YxMjExMDIxNDA5OWMyYWM1MDQwZWI4ODRhNzhjZDI4NWU2NzcyZTJhMGI5ZS5qcGc/ZGF0ZW1haj0yMDIwLTA1LTA4IDA4OjQ3OjIyLjQxMSIgd2lkdGg9IjYwMCIgaGVpZ2h0PSI0NTAiIGFsdD0iQXBwYXJ0ZW1lbnQgw6AgdmVuZHJlLCBQYXJpcyAoNzUwMTEpIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC91bD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9Ik9mZmVyU2xpZGVyLW1haW4tY291bnQiPjwvcD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iT2ZmZXJTbGlkZXItY29udGFpbmVyIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iT2ZmZXJTbGlkZXItdGh1bWJzIE9mZmVyU2xpZGVyLXRodW1icy0tbWluaSIgaWQ9Ik9mZmVyU2xpZGVyVGh1bWJzIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx1bCBjbGFzcz0iT2ZmZXJTbGlkZXItdGh1bWJzLXNsaWRlcyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpIGNsYXNzPSJPZmZlclNsaWRlci10aHVtYnMtaXRlbSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW1nIHNyYz0iaHR0cDovL3Bob3Rvcy5mci5mb25jaWEuY29tL21pbmljcC82NDAvNDgwL3Bob3Rvcy8xMzkxLzIwMi8xMzkxMjAyL2dyYW5kLzEzOTEyMDJfYzA5MDc3YzY3YjEwNjI4MDBmNjEwZDQ2MDhkYWUyYzc1ZTY3NzJkODVmNGQ2LmpwZz9kYXRlbWFqPTIwMjAtMDUtMDggMDg6NDc6MjIuMTc3IiB3aWR0aD0iNjAwIiBoZWlnaHQ9IjQ1MCIgYWx0PSJBcHBhcnRlbWVudCDDoCB2ZW5kcmUsIFBhcmlzICg3NTAxMSkiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaSBjbGFzcz0iT2ZmZXJTbGlkZXItdGh1bWJzLWl0ZW0iPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBzcmM9Imh0dHA6Ly9waG90b3MuZnIuZm9uY2lhLmNvbS9taW5pY3AvNjQwLzQ4MC9waG90b3MvMTM5MS8yMDIvMTM5MTIwMi9ncmFuZC8xMzkxMjAyXzE0NTQxNjJlZmUzN2YzMzQ3NjY5YTk1NjRlMjYxM2JlNWU2NzcyYmMyNjEyMy5qcGc/ZGF0ZW1haj0yMDIwLTA1LTA4IDA4OjQ3OjIyLjIwOCIgd2lkdGg9IjYwMCIgaGVpZ2h0PSI0NTAiIGFsdD0iQXBwYXJ0ZW1lbnQgw6AgdmVuZHJlLCBQYXJpcyAoNzUwMTEpIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGkgY2xhc3M9Ik9mZmVyU2xpZGVyLXRodW1icy1pdGVtIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgc3JjPSJodHRwOi8vcGhvdG9zLmZyLmZvbmNpYS5jb20vbWluaWNwLzY0MC80ODAvcGhvdG9zLzEzOTEvMjAyLzEzOTEyMDIvZ3JhbmQvMTM5MTIwMl9iMGU1NjBkYjdmZWIyNWYyNjg1MTE2MzgwM2Y0NzM5YzVlNjg5YmY5NTc5MDQuanBnP2RhdGVtYWo9MjAyMC0wNS0wOCAwODo0NzoyMi4yMjMiIHdpZHRoPSI2MDAiIGhlaWdodD0iNDUwIiBhbHQ9IkFwcGFydGVtZW50IMOgIHZlbmRyZSwgUGFyaXMgKDc1MDExKSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpIGNsYXNzPSJPZmZlclNsaWRlci10aHVtYnMtaXRlbSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW1nIHNyYz0iaHR0cDovL3Bob3Rvcy5mci5mb25jaWEuY29tL21pbmljcC82NDAvNDgwL3Bob3Rvcy8xMzkxLzIwMi8xMzkxMjAyL2dyYW5kLzEzOTEyMDJfNWM3YmU2MjcxOTczZDY0MmIwMzNlYTk5M2M4Nzg3ZTI1ZTY3NzJiYmEyZGU0LmpwZz9kYXRlbWFqPTIwMjAtMDUtMDggMDg6NDc6MjIuMjM5IiB3aWR0aD0iNjAwIiBoZWlnaHQ9IjQ1MCIgYWx0PSJBcHBhcnRlbWVudCDDoCB2ZW5kcmUsIFBhcmlzICg3NTAxMSkiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaSBjbGFzcz0iT2ZmZXJTbGlkZXItdGh1bWJzLWl0ZW0iPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBzcmM9Imh0dHA6Ly9waG90b3MuZnIuZm9uY2lhLmNvbS9taW5pY3AvNjQwLzQ4MC9waG90b3MvMTM5MS8yMDIvMTM5MTIwMi9ncmFuZC8xMzkxMjAyXzdjZmEwN2ExZTZjN2YzZDRhOTFiYTE1ZWVhMTBkNGNjNWU2NzcyYmIyYTMyYS5qcGc/ZGF0ZW1haj0yMDIwLTA1LTA4IDA4OjQ3OjIyLjI3MCIgd2lkdGg9IjYwMCIgaGVpZ2h0PSI0NTAiIGFsdD0iQXBwYXJ0ZW1lbnQgw6AgdmVuZHJlLCBQYXJpcyAoNzUwMTEpIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGkgY2xhc3M9Ik9mZmVyU2xpZGVyLXRodW1icy1pdGVtIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgc3JjPSJodHRwOi8vcGhvdG9zLmZyLmZvbmNpYS5jb20vbWluaWNwLzY0MC80ODAvcGhvdG9zLzEzOTEvMjAyLzEzOTEyMDIvZ3JhbmQvMTM5MTIwMl9hOWExOWNmZThhZDMwMGRhODg4ZmM1YTkzODI4Y2MxOTVlNjc3MmJhYTljYzcuanBnP2RhdGVtYWo9MjAyMC0wNS0wOCAwODo0NzoyMi4yODYiIHdpZHRoPSI2MDAiIGhlaWdodD0iNDUwIiBhbHQ9IkFwcGFydGVtZW50IMOgIHZlbmRyZSwgUGFyaXMgKDc1MDExKSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpIGNsYXNzPSJPZmZlclNsaWRlci10aHVtYnMtaXRlbSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW1nIHNyYz0iaHR0cDovL3Bob3Rvcy5mci5mb25jaWEuY29tL21pbmljcC82NDAvNDgwL3Bob3Rvcy8xMzkxLzIwMi8xMzkxMjAyL2dyYW5kLzEzOTEyMDJfOWM1ODFhNzU0YmVhOWQyODVjNDg1NDBmNjI5MmY0ZWE1ZTY3NzJkMWVjZDc3LmpwZz9kYXRlbWFqPTIwMjAtMDUtMDggMDg6NDc6MjIuMzAxIiB3aWR0aD0iNjAwIiBoZWlnaHQ9IjQ1MCIgYWx0PSJBcHBhcnRlbWVudCDDoCB2ZW5kcmUsIFBhcmlzICg3NTAxMSkiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaSBjbGFzcz0iT2ZmZXJTbGlkZXItdGh1bWJzLWl0ZW0iPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBzcmM9Imh0dHA6Ly9waG90b3MuZnIuZm9uY2lhLmNvbS9taW5pY3AvNjQwLzQ4MC9waG90b3MvMTM5MS8yMDIvMTM5MTIwMi9ncmFuZC8xMzkxMjAyXzg2MmE0YThlOTVlYmQxMjBiZjFiYThjOWY2MWFhOWFkNWU2NzcyZDI2ZDIxMi5qcGc/ZGF0ZW1haj0yMDIwLTA1LTA4IDA4OjQ3OjIyLjMzMyIgd2lkdGg9IjYwMCIgaGVpZ2h0PSI0NTAiIGFsdD0iQXBwYXJ0ZW1lbnQgw6AgdmVuZHJlLCBQYXJpcyAoNzUwMTEpIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGkgY2xhc3M9Ik9mZmVyU2xpZGVyLXRodW1icy1pdGVtIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgc3JjPSJodHRwOi8vcGhvdG9zLmZyLmZvbmNpYS5jb20vbWluaWNwLzY0MC80ODAvcGhvdG9zLzEzOTEvMjAyLzEzOTEyMDIvZ3JhbmQvMTM5MTIwMl9jYmE4ZmMxZmNmZDU0ZTM4ZGUzNDA0MDdkMWYwMjJkNDVlNjc3MmQyZTAyYzQuanBnP2RhdGVtYWo9MjAyMC0wNS0wOCAwODo0NzoyMi4zNDgiIHdpZHRoPSI2MDAiIGhlaWdodD0iNDUwIiBhbHQ9IkFwcGFydGVtZW50IMOgIHZlbmRyZSwgUGFyaXMgKDc1MDExKSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpIGNsYXNzPSJPZmZlclNsaWRlci10aHVtYnMtaXRlbSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW1nIHNyYz0iaHR0cDovL3Bob3Rvcy5mci5mb25jaWEuY29tL21pbmljcC82NDAvNDgwL3Bob3Rvcy8xMzkxLzIwMi8xMzkxMjAyL2dyYW5kLzEzOTEyMDJfMDI1OWE2NDMwN2ZmODIwMmI2MjUwNTBhYzZlZGI1NDE1ZTY3NzJkOGQ2MDcwLmpwZz9kYXRlbWFqPTIwMjAtMDUtMDggMDg6NDc6MjIuMzY0IiB3aWR0aD0iNjAwIiBoZWlnaHQ9IjQ1MCIgYWx0PSJBcHBhcnRlbWVudCDDoCB2ZW5kcmUsIFBhcmlzICg3NTAxMSkiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaSBjbGFzcz0iT2ZmZXJTbGlkZXItdGh1bWJzLWl0ZW0iPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBzcmM9Imh0dHA6Ly9waG90b3MuZnIuZm9uY2lhLmNvbS9taW5pY3AvNjQwLzQ4MC9waG90b3MvMTM5MS8yMDIvMTM5MTIwMi9ncmFuZC8xMzkxMjAyXzhiNTVkNzkwNGY0MzE5MjgwMjUyYjA1MTMwZjg0MjU2NWU2NzcyZTIyZWIzMS5qcGc/ZGF0ZW1haj0yMDIwLTA1LTA4IDA4OjQ3OjIyLjM5NSIgd2lkdGg9IjYwMCIgaGVpZ2h0PSI0NTAiIGFsdD0iQXBwYXJ0ZW1lbnQgw6AgdmVuZHJlLCBQYXJpcyAoNzUwMTEpIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGkgY2xhc3M9Ik9mZmVyU2xpZGVyLXRodW1icy1pdGVtIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgc3JjPSJodHRwOi8vcGhvdG9zLmZyLmZvbmNpYS5jb20vbWluaWNwLzY0MC80ODAvcGhvdG9zLzEzOTEvMjAyLzEzOTEyMDIvZ3JhbmQvMTM5MTIwMl9mMTIxMTAyMTQwOTljMmFjNTA0MGViODg0YTc4Y2QyODVlNjc3MmUyYTBiOWUuanBnP2RhdGVtYWo9MjAyMC0wNS0wOCAwODo0NzoyMi40MTEiIHdpZHRoPSI2MDAiIGhlaWdodD0iNDUwIiBhbHQ9IkFwcGFydGVtZW50IMOgIHZlbmRyZSwgUGFyaXMgKDc1MDExKSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdWw+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0iT2ZmZXJTbGlkZXItZXh0cmEiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgoKCiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iT2ZmZXJEZXRhaWxzIj4KCiAgICAgICAgICAgICAgICAgICAgICAgIDxzZWN0aW9uIGNsYXNzPSJPZmZlckRldGFpbHMtc2VjdGlvbiI+CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9Ik9mZmVyRGV0YWlscy1yZWYiPlLDqWYuIDEzOTEyMDI8L3A+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aDIgY2xhc3M9Ik9mZmVyRGV0YWlscy10aXRsZSI+RGVzY3JpcHRpb24gZMOpdGFpbGzDqWU8L2gyPgoKICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Ik9mZmVyRGV0YWlscy1jb250ZW50Ij4KCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHA+TcOpdHJvIENoZW1pbiBWZXJ0LiAKQSBsYSBsaXNpw6hyZSBkdSBNYXJhaXMsIGRhbnMgdW4gbWFnbmlmaXF1ZSBpbW1ldWJsZSBib3VyZ2VvaXMsIGTDqWNvdXZyZXogY2UgMi8zIHBpw6hjZXMgZGUgNzEgbcKyIGF1IHNvbCBldCA2NiBtwrIgY2FycmV6LCBlbiDDqXRhZ2Ugw6lsZXbDqSwgdHJhdmVyc2FudCwgY2FsbWUgZXQgbHVtaW5ldXguCkJpZW4gYXR5cGlxdWUgbW9kdWxhYmxlIHNlbG9uIGxlcyBlbnZpZXMgZCdhZ2VuY2VtZW50LiBWZW5kdSBhdmVjIHVuZSBjYXZlLgpDb250YWN0ZXogTWlpY2thZWwgQXJmaSBhdSAwNjQyMTgxODkyPC9wPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Ik9mZmVyRGV0YWlscy1jb2x1bW5pemUiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgZGF0YS13aWRnZXQ9IlRvZ2dsZUJsb2NrTW9iaWxlIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aDMgY2xhc3M9Ik9mZmVyRGV0YWlscy10aXRsZS0tMiIgZGF0YS13aWRnZXQ9IlRvZ2dsZUJsb2NrTW9iaWxlLXRyaWdnZXIiIGRhdGEtYmVoYXQ9ImNhcmFjdER1QmllbiI+Q2FyYWN0w6lyaXN0aXF1ZXMgZHUgYmllbjwvaDM+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBkYXRhLXdpZGdldD0iVG9nZ2xlQmxvY2tNb2JpbGUtY29udGVudCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dWwgY2xhc3M9Ikxpc3QgTGlzdC0tZGF0YSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpPjxzcGFuIGNsYXNzPSJMaXN0LWRhdGEiPk5vbWJyZSBkZSBwacOoY2VzPC9zcGFuPiA8c3Ryb25nIGNsYXNzPSJMaXN0LXZhbHVlIj4zPC9zdHJvbmc+PC9saT48bGk+PHNwYW4gY2xhc3M9Ikxpc3QtZGF0YSI+Q29uc3RydWN0aW9uPC9zcGFuPiA8c3Ryb25nIGNsYXNzPSJMaXN0LXZhbHVlIj4xODkwPC9zdHJvbmc+PC9saT48bGk+PHNwYW4gY2xhc3M9Ikxpc3QtZGF0YSI+w4l0YWdlPC9zcGFuPiA8c3Ryb25nIGNsYXNzPSJMaXN0LXZhbHVlIj40PC9zdHJvbmc+PC9saT48bGk+PHNwYW4gY2xhc3M9Ikxpc3QtZGF0YSI+Tm9tYnJlIGQnw6l0YWdlczwvc3Bhbj4gPHN0cm9uZyBjbGFzcz0iTGlzdC12YWx1ZSI+Njwvc3Ryb25nPjwvbGk+PGxpPjxzcGFuIGNsYXNzPSJMaXN0LWRhdGEiPk5vbWJyZSBkZSBjaGFtYnJlczwvc3Bhbj4gPHN0cm9uZyBjbGFzcz0iTGlzdC12YWx1ZSI+MTwvc3Ryb25nPjwvbGk+PGxpPjxzcGFuIGNsYXNzPSJMaXN0LWRhdGEiPlR5cGUgZGUgY3Vpc2luZTwvc3Bhbj4gPHN0cm9uZyBjbGFzcz0iTGlzdC12YWx1ZSI+SW5kw6lwZW5kYW50ZTwvc3Ryb25nPjwvbGk+PGxpPjxzcGFuIGNsYXNzPSJMaXN0LWRhdGEiPsOJdGF0IGN1aXNpbmU8L3NwYW4+IDxzdHJvbmcgY2xhc3M9Ikxpc3QtdmFsdWUiPkFtw6luYWfDqWUgZXQgw6lxdWlww6llPC9zdHJvbmc+PC9saT48bGk+PHNwYW4gY2xhc3M9Ikxpc3QtZGF0YSI+TW9kZSBjaGF1ZmZhZ2U8L3NwYW4+IDxzdHJvbmcgY2xhc3M9Ikxpc3QtdmFsdWUiPkluZGl2aWR1ZWw8L3N0cm9uZz48L2xpPjxsaT48c3BhbiBjbGFzcz0iTGlzdC1kYXRhIj5OYXR1cmUgY2hhdWZmYWdlPC9zcGFuPiA8c3Ryb25nIGNsYXNzPSJMaXN0LXZhbHVlIj5FbGVjdHJpcXVlPC9zdHJvbmc+PC9saT48bGk+PHNwYW4gY2xhc3M9Ikxpc3QtZGF0YSI+TmIuIFNhbGxlcyBkZSBiYWluPC9zcGFuPiA8c3Ryb25nIGNsYXNzPSJMaXN0LXZhbHVlIj4xPC9zdHJvbmc+PC9saT48bGk+PHNwYW4gY2xhc3M9J0xpc3QtZGF0YSc+TmIuIFNhbGxlcyBkJ2VhdTwvc3Bhbj4gPHN0cm9uZyBjbGFzcz0nTGlzdC12YWx1ZSc+MTwvc3Ryb25nPjwvbGk+PGxpPjxzcGFuIGNsYXNzPSJMaXN0LWRhdGEiPk5iLiBXQzwvc3Bhbj4gPHN0cm9uZyBjbGFzcz0iTGlzdC12YWx1ZSI+MTwvc3Ryb25nPjwvbGk+PGxpPjxzcGFuIGNsYXNzPSJMaXN0LWRhdGEiPkNhdMOpZ29yaWU8L3NwYW4+IDxzdHJvbmcgY2xhc3M9Ikxpc3QtdmFsdWUiPkFuY2llbjwvc3Ryb25nPjwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3VsPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgZGF0YS13aWRnZXQ9IlRvZ2dsZUJsb2NrTW9iaWxlIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGgzIGNsYXNzPSJPZmZlckRldGFpbHMtdGl0bGUtLTIiIGRhdGEtd2lkZ2V0PSJUb2dnbGVCbG9ja01vYmlsZS10cmlnZ2VyIj5JbmZvcm1hdGlvbiBjb3Byb3ByacOpdMOpPC9oMz4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBkYXRhLXdpZGdldD0iVG9nZ2xlQmxvY2tNb2JpbGUtY29udGVudCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx1bCBjbGFzcz0iTGlzdCBMaXN0LS1kYXRhIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpPjxzcGFuIGNsYXNzPSJMaXN0LWRhdGEiPk5vbWJyZSBkZSBsb3RzPC9zcGFuPiA8c3Ryb25nIGNsYXNzPSJMaXN0LXZhbHVlIj4zMDwvc3Ryb25nPjwvbGk+PGxpPjxzcGFuIGNsYXNzPSJMaXN0LWRhdGEiPkNoYXJnZXMgYW5udWVsbGVzPC9zcGFuPiA8c3Ryb25nIGNsYXNzPSJMaXN0LXZhbHVlIj4xOTkyIOKCrDwvc3Ryb25nPjwvbGk+PGxpPjxzcGFuIGNsYXNzPSJMaXN0LWRhdGEiPkNvcHJvcHJpZXTDqSBlbiBkaWZmaWN1bHTDqTwvc3Bhbj4gPHN0cm9uZyBjbGFzcz0iTGlzdC12YWx1ZSI+bm9uPC9zdHJvbmc+PC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3VsPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGRhdGEtd2lkZ2V0PSJUb2dnbGVCbG9ja01vYmlsZSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGgzIGNsYXNzPSJPZmZlckRldGFpbHMtdGl0bGUtLTIiIGRhdGEtd2lkZ2V0PSJUb2dnbGVCbG9ja01vYmlsZS10cmlnZ2VyIiBkYXRhLWJlaGF0PSJzdXJmYWNlQmllbiI+U3VyZmFjZXM8L2gzPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgZGF0YS13aWRnZXQ9IlRvZ2dsZUJsb2NrTW9iaWxlLWNvbnRlbnQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dWwgY2xhc3M9Ikxpc3QgTGlzdC0tZGF0YSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGk+PHNwYW4gY2xhc3M9Ikxpc3QtZGF0YSI+U3VyZmFjZSBoYWJpdGFibGU8L3NwYW4+IDxzdHJvbmcgY2xhc3M9Ikxpc3QtdmFsdWUiPjcxIG3Csjwvc3Ryb25nPjwvbGk+PGxpPjxzcGFuIGNsYXNzPSJMaXN0LWRhdGEiPlN1cmZhY2UgQ2FycmV6PC9zcGFuPiA8c3Ryb25nIGNsYXNzPSJMaXN0LXZhbHVlIj42NiBtwrI8L3N0cm9uZz48L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3VsPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAoKCgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgZGF0YS13aWRnZXQ9IlRvZ2dsZUJsb2NrTW9iaWxlIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aDMgY2xhc3M9Ik9mZmVyRGV0YWlscy10aXRsZS0tMiIgZGF0YS13aWRnZXQ9IlRvZ2dsZUJsb2NrTW9iaWxlLXRyaWdnZXIiIGRhdGEtYmVoYXQ9ImNvbW1vZGl0ZXNCaWVuIj5Db21tb2RpdMOpczwvaDM+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBkYXRhLXdpZGdldD0iVG9nZ2xlQmxvY2tNb2JpbGUtY29udGVudCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx1bCBjbGFzcz0iTGlzdCBMaXN0LS1idWxsZXQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpPkNoZW1pbsOpZTwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdWw+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCgoKCgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGRhdGEtd2lkZ2V0PSJUb2dnbGVCbG9ja01vYmlsZSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGgzIGNsYXNzPSJPZmZlckRldGFpbHMtdGl0bGUtLTIiIGRhdGEtd2lkZ2V0PSJUb2dnbGVCbG9ja01vYmlsZS10cmlnZ2VyIiBkYXRhLWJlaGF0PSJkaXZlcnNCaWVuIj5EaXZlcnM8L2gzPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgZGF0YS13aWRnZXQ9IlRvZ2dsZUJsb2NrTW9iaWxlLWNvbnRlbnQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHVsIGNsYXNzPSJMaXN0IExpc3QtLWJ1bGxldCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpPkludGVycGhvbmU8L2xpPjxsaT5EaWdpY29kZTwvbGk+PGxpPlNvY2nDqXTDqSBkZSBuZXR0b3lhZ2U8L2xpPjxsaT5DaGVtaW7DqWU8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC91bD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9Ik9mZmVyRGV0YWlscy1iYXJlbWUiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwOi8vYWdlbmNlLmZvbmNpYS5jb20vcGFyaXMtNzUwMTEvYWdlbmNlLWltbW9iaWxpZXJlL2ZvbmNpYS10cmFuc2FjdGlvbi1wYXJpcy12b2x0YWlyZS0xMTMyIiByZWw9Im5vZm9sbG93IiB0YXJnZXQ9Il9ibGFuayI+Vm9pciBsZSBiYXLDqG1lIGRlIGwnYWdlbmNlPC9hPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvcD4KCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iTGVnYWxNZW50aW9ucyBMZWdhbE1lbnRpb25zLS1zbWFsbCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgICAgICAgICAgICAgIDwvc2VjdGlvbj4KCiAgICAgICAgICAgICAgICAgICAgICAgIDxzZWN0aW9uIGNsYXNzPSJPZmZlckRldGFpbHMtc2VjdGlvbiIgZGF0YS13aWRnZXQ9IlRvZ2dsZUJsb2NrTW9iaWxlIj4KICAgIDxoMiBjbGFzcz0iT2ZmZXJEZXRhaWxzLXRpdGxlIiBkYXRhLXdpZGdldD0iVG9nZ2xlQmxvY2tNb2JpbGUtdHJpZ2dlciIgZGF0YS1iZWhhdD0iZGlhZ25vc3RpY1BlcmZvcm1hbmNlc0JpZW4iPkRpYWdub3N0aWMgcGVyZm9ybWFuY2VzIMOpbmVyZ8OpdGlxdWVzPC9oMj4KICAgIDxkaXYgY2xhc3M9Ik9mZmVyRGV0YWlscy1jb250ZW50IiBkYXRhLXdpZGdldD0iVG9nZ2xlQmxvY2tNb2JpbGUtY29udGVudCI+CiAgICAgICAgPHAgY2xhc3M9InBvc2l0aW9uTGVmdCI+CiAgICAgICAgICAgIDxpbWcgc3JjPSJodHRwOi8vZHBlLmZvbmNpYS5uZXQvMzIwLzM0LzEvMjAwLzIwMC8xLzAvZGlhZ3JhbW1lRW5lcmdpZS5wbmciIGFsdD0iRGlhZ3JhbW1lIMOpbmVyZ2V0aXF1ZSIgd2lkdGg9IjIwMCIgaGVpZ2h0PSIyMDAiIC8+CiAgICAgICAgPC9wPgogICAgICAgIDxwIGNsYXNzPSJ0ZXh0U21hbGwiPkNvbnNvbW1hdGlvbnMgw6luZXJnw6l0aXF1ZXMgKGVuIMOpbmVyZ2llIHByaW1haXJlKSBwb3VyIGxlIGNoYXVmZmFnZSwgbGEgcHJvZHVjdGlvbiBkJ2VhdSwgY2hhdWRlIHNhbml0YWlyZSBldCBsZSByZWZyb2lkaXNzZW1lbnQuPC9wPgogICAgICAgIDxwIGNsYXNzPSJ0ZXh0U21hbGwiPkluZGljZSBkZSBtZXN1cmUgOiBrV2hFUC9tJnN1cDI7LmFuPC9wPgogICAgPC9kaXY+Cjwvc2VjdGlvbj4KCjxzZWN0aW9uIGNsYXNzPSJPZmZlckRldGFpbHMtc2VjdGlvbiIgZGF0YS13aWRnZXQ9IlRvZ2dsZUJsb2NrTW9iaWxlIj4KICAgIDxoMiBjbGFzcz0iT2ZmZXJEZXRhaWxzLXRpdGxlIiBkYXRhLXdpZGdldD0iVG9nZ2xlQmxvY2tNb2JpbGUtdHJpZ2dlciIgZGF0YS1iZWhhdD0iZ2F6RWZmZXRTZXJyZUJpZW4iPkdheiDDoCBFZmZldCBkZSBTZXJyZTwvaDI+CiAgICA8ZGl2IGNsYXNzPSJPZmZlckRldGFpbHMtY29udGVudCIgZGF0YS13aWRnZXQ9IlRvZ2dsZUJsb2NrTW9iaWxlLWNvbnRlbnQiPgogICAgICAgIDxwIGNsYXNzPSJwb3NpdGlvbkxlZnQiPgogICAgICAgICAgICA8aW1nIHNyYz0iaHR0cDovL2RwZS5mb25jaWEubmV0LzMyMC8zNC8xLzIwMC8yMDAvMi8wL2RpYWdyYW1tZUVuZXJnaWUucG5nIiBhbHQ9IkdheiDDoCBFZmZldCBkZSBTZXJyZSIgd2lkdGg9IjIwMCIgaGVpZ2h0PSIyMDAiIC8+CiAgICAgICAgPC9wPgogICAgICAgIDxwIGNsYXNzPSJ0ZXh0U21hbGwiPkluZGljYXRldXIgcXVpIHJhcHBvcnRlIGxhIHF1YW50aXTDqSBkZSBnYXogw6AgZWZmZXQgZGUgc2VycmUgw6ltaXMsIG1lc3Vyw6llIHBhciBzb24gw6lxdWl2YWxlbnQgZW4gZGlveHlkZSBkZSBjYXJib25lLCBhdSBwcm9kdWl0IGludMOpcmlldXIgYnJ1dC48L3A+CiAgICAgICAgPHAgY2xhc3M9InRleHRTbWFsbCI+SW5kaWNlIGRlIG1lc3VyZSA6IEtnw6lxQ08yL20mc3VwMjsuYW48L3A+CiAgICA8L2Rpdj4KPC9zZWN0aW9uPgoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICAgICAgICAgIAo8cCBjbGFzcz0iU2hhcmUiPgogICAgPGEgaWQ9IkZhY2Vib29rIiBocmVmPSJodHRwczovL3d3dy5mYWNlYm9vay5jb20vc2hhcmVyL3NoYXJlci5waHA/dT1odHRwczovL2ZyLmZvbmNpYS5jb20vYWNoYXQvcGFyaXMtNzUwMTEvYXBwYXJ0ZW1lbnQvMTM5MTIwMi5odG0iIHRhcmdldD0iX2JsYW5rIiBjbGFzcz0iU2hhcmUtaXRlbSBTaGFyZS1GYWNlYm9vayI+CiAgICAgICAgPHN2ZyBjbGFzcz0iaWNvbiIgc3R5bGU9IndpZHRoOjI0cHg7aGVpZ2h0OjI0cHgiIGFyaWEtaGlkZGVuPSJ0cnVlIj48dXNlIHhsaW5rOmhyZWY9Ii9idW5kbGVzL2ZvbmNpYWludGVybmV0L3N2Zy9pY29ucy5zdmcjSWNvbi0tZmFjZWJvb2siPjwvdXNlPjwvc3ZnPgogICAgICAgIDxzcGFuIGNsYXNzPSJTaGFyZS1sYWJlbCI+UGFydGFnZXIgY2UgY29udGVudSBzdXIgRmFjZWJvb2s8L3NwYW4+CiAgICA8L2E+CgogICAgPGEgaWQ9IlR3aXR0ZXIiIGNsYXNzPSJTaGFyZS1pdGVtIgogICAgICAgaHJlZj0iaHR0cHM6Ly90d2l0dGVyLmNvbS9pbnRlbnQvdHdlZXQ/dGV4dD1BcHBhcnRlbWVudCAzIHBpw6hjZXMgw6AgdmVuZHJlJnVybD1odHRwcyUzQSUyRiUyRmZyLmZvbmNpYS5jb20lMkZhY2hhdCUyRnBhcmlzLTc1MDExJTJGYXBwYXJ0ZW1lbnQlMkYxMzkxMjAyLmh0bSZ2aWE9Zm9uY2lhIgogICAgICAgICAgICAgIGRhdGEtc2l6ZT0ibGFyZ2UiCiAgICAgICB0YXJnZXQ9Il9ibGFuayIgPgogICAgICAgIDxzdmcgY2xhc3M9Imljb24iIHN0eWxlPSJ3aWR0aDoyNHB4O2hlaWdodDoyNHB4IiBhcmlhLWhpZGRlbj0idHJ1ZSI+PHVzZSB4bGluazpocmVmPSIvYnVuZGxlcy9mb25jaWFpbnRlcm5ldC9zdmcvaWNvbnMuc3ZnI0ljb24tLXR3aXR0ZXIiPjwvdXNlPjwvc3ZnPgogICAgICAgIDxzcGFuIGNsYXNzPSJTaGFyZS1sYWJlbCI+UGFydGFnZXIgY2UgY29udGVudSBzdXIgVHdpdHRlcjwvc3Bhbj4KICAgIDwvYT4KCiAgICA8YSBpZD0iR29vZ2xlKyIgY2xhc3M9IlNoYXJlLWl0ZW0iIGhyZWY9Imh0dHBzOi8vcGx1cy5nb29nbGUuY29tL3NoYXJlP3VybD1odHRwcyUzQSUyRiUyRmZyLmZvbmNpYS5jb20lMkZhY2hhdCUyRnBhcmlzLTc1MDExJTJGYXBwYXJ0ZW1lbnQlMkYxMzkxMjAyLmh0bSIgb25jbGljaz0iamF2YXNjcmlwdDp3aW5kb3cub3Blbih0aGlzLmhyZWYsJycsICdtZW51YmFyPW5vLHRvb2xiYXI9bm8scmVzaXphYmxlPXllcyxzY3JvbGxiYXJzPXllcyxoZWlnaHQ9NjAwLHdpZHRoPTYwMCcpO3JldHVybiBmYWxzZTsiPgogICAgICAgIDxzdmcgY2xhc3M9Imljb24iIHN0eWxlPSJ3aWR0aDoyNHB4O2hlaWdodDoyNHB4IiBhcmlhLWhpZGRlbj0idHJ1ZSI+PHVzZSB4bGluazpocmVmPSIvYnVuZGxlcy9mb25jaWFpbnRlcm5ldC9zdmcvaWNvbnMuc3ZnI0ljb24tLWdvb2dsZSI+PC91c2U+PC9zdmc+CiAgICAgICAgPHNwYW4gY2xhc3M9IlNoYXJlLWxhYmVsIj5QYXJ0YWdlciBjZSBjb250ZW51IHN1ciBHb29nbGUgKzwvc3Bhbj4KICAgIDwvYT4KCiAgICA8YSBjbGFzcz0iU2hhcmUtaXRlbSBNb2RhbC1saW5rLS1hamF4IiBocmVmPSIvc2hhcmUtY29udGVudC1wb3Bpbi9odHRwcyUyNTNBJTI1MkYlMjUyRmZyLmZvbmNpYS5jb20lMjUyRmFjaGF0JTI1MkZwYXJpcy03NTAxMSUyNTJGYXBwYXJ0ZW1lbnQlMjUyRjEzOTEyMDIuaHRtIj4KICAgICAgICA8c3ZnIGNsYXNzPSJpY29uIiBzdHlsZT0id2lkdGg6MjRweDtoZWlnaHQ6MjRweCIgYXJpYS1oaWRkZW49InRydWUiPjx1c2UgeGxpbms6aHJlZj0iL2J1bmRsZXMvZm9uY2lhaW50ZXJuZXQvc3ZnL2ljb25zLnN2ZyNJY29uLS1lbnZlbG9wZSI+PC91c2U+PC9zdmc+CiAgICAgICAgPHNwYW4gY2xhc3M9IlNoYXJlLWxhYmVsIj5FbnZveWVyIGNlIGNvbnRlbnUgw6AgdW4gYW1pPC9zcGFuPgogICAgPC9hPgoKICAgIDxidXR0b24gb25jbGljaz0iamF2YXNjcmlwdDp3aW5kb3cucHJpbnQoKSIgY2xhc3M9IlNoYXJlLWl0ZW0iPgogICAgICAgIDxzdmcgY2xhc3M9Imljb24iIHN0eWxlPSJ3aWR0aDoyNHB4O2hlaWdodDoyNHB4IiBhcmlhLWhpZGRlbj0idHJ1ZSI+PHVzZSB4bGluazpocmVmPSIvYnVuZGxlcy9mb25jaWFpbnRlcm5ldC9zdmcvaWNvbnMuc3ZnI0ljb24tLXByaW50ZXIiPjwvdXNlPjwvc3ZnPgogICAgICAgIDxzcGFuIGNsYXNzPSJTaGFyZS1sYWJlbCI+SW1wcmltZXIgY2UgY29udGVudTwvc3Bhbj4KICAgIDwvYnV0dG9uPgo8L3A+CgoKICAgICAgICAgICAgICAgIDwvbWFpbj4KCgoKICAgICAgICAgICAgICAgIDxhc2lkZSBjbGFzcz0iQ29udGVudC1zaWRlYmFyIFNpZGViYXIiPgogICAgICAgICAgICAgICAgICAgIAogICAgCgoKPHNlY3Rpb24gY2xhc3M9Ik9mZmVyQ29udGFjdCI+CiAgICA8aDIgY2xhc3M9Ik9mZmVyQ29udGFjdC10aXRsZSI+Q29udGFjdGVyIGwnYWdlbmNlPC9oMj4KICAgIDxzcGFuIGNsYXNzPSJoaWRkZW4iIGRhdGEtaW5mbz0iaWQtYWdlbmNlIj4xMTMyPC9zcGFuPgoKICAgIDxkaXYgY2xhc3M9Ik9mZmVyQ29udGFjdC1jb250ZW50Ij4KICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0iT2ZmZXJDb250YWN0LXJlZmVyZW50Ij5Wb3RyZSBjb25zZWlsbGVyIDogPHN0cm9uZz5NaWNrYWVsJm5ic3A7QVJGSTwvc3Ryb25nPjwvcD4KICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJPZmZlckNvbnRhY3QtYWRkcmVzcyBPZmZlckNvbnRhY3QtYWRkcmVzcy0tY2VudGVyIHJ3ZC0tbm9Nb2JpbGUgcndkLS1ub1RhYmxldCI+CiAgICAgICAgICAgIDxhIGhyZWY9Imh0dHA6Ly9hZ2VuY2UuZm9uY2lhLmNvbS9wYXJpcy03NTAxMS9hZ2VuY2UtaW1tb2JpbGllcmUvZm9uY2lhLXRyYW5zYWN0aW9uLXBhcmlzLXZvbHRhaXJlLTExMzIiIHRhcmdldD0iX2JsYW5rIiBjbGFzcz0iT2ZmZXJDb250YWN0LWFkZHJlc3MtLWxhcmdlIj4KICAgICAgICAgICAgICAgIDxzdHJvbmc+Rm9uY2lhIFRyYW5zYWN0aW9uIFBhcmlzICBWb2x0YWlyZTwvc3Ryb25nPgogICAgICAgICAgICAgICAgMjUgYm91bGV2YXJkIFZvbHRhaXJlPGJyLz4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgMjYgcnVlIGRlIE1hbHRlPGJyLz4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA3NTAxMSAtIFBhcmlzCiAgICAgICAgICAgIDwvYT4KICAgICAgICA8L3A+CgogICAgICAgIDxwIGNsYXNzPSJPZmZlckNvbnRhY3QtY2FsbDJhY3Rpb24iPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgY2xhc3M9Ik9mZmVyQ29udGFjdC1idG4gT2ZmZXJDb250YWN0LWJ0bi0tdGVsIGljb24tQ2FsbG91dCIgZGF0YS13aWRnZXQ9IlNob3dUZWwiIGRhdGEtYW5hbHl0aWNzPSIxMTMyIC0gRk9OQ0lBIHRyYW5zYWN0aW9uLXBhcmlzLXZvbHRhaXJlIiBocmVmPSJ0ZWw6MDE1MzM2MTMwMCI+PHNwYW4gY2xhc3M9Ik9mZmVyQ29udGFjdC10ZWxMYWJlbCI+QXBwZWxlciBsJ2FnZW5jZTwvc3Bhbj4gPHNwYW4gY2xhc3M9Ik9mZmVyQ29udGFjdC10ZWxOdW0iIGRhdGEtYmVoYXQ9InRlbEFnZW5jZSI+MDEuNTMuMzYuMTMuMDA8L3NwYW4+PC9hPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgY2xhc3M9Ik9mZmVyQ29udGFjdC1idG4gT2ZmZXJDb250YWN0LWJ0bi0tbWFpbCBpY29uLU9wZW5lbnZlbG9wZSBNb2RhbC1saW5rIiBocmVmPSIjUG9wdXBDb250YWN0IiBkYXRhLWFuYWx5dGljcz0ibWFpbHRvYWdlbmN5LWJ0biI+w4ljcmlyZSDDoCBsJ2FnZW5jZTwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgPGEgY2xhc3M9Ik9mZmVyQ29udGFjdC1idG4gT2ZmZXJDb250YWN0LWJ0bi0tcGxhbiBpY29uLVBvaW50ZXIiIGhyZWY9Imh0dHA6Ly9hZ2VuY2UuZm9uY2lhLmNvbS9wYXJpcy03NTAxMS9hZ2VuY2UtaW1tb2JpbGllcmUvZm9uY2lhLXRyYW5zYWN0aW9uLXBhcmlzLXZvbHRhaXJlLTExMzIiIHRhcmdldD0iX2JsYW5rIj4KICAgICAgICAgICAgPHNwYW4gY2xhc3M9Ik9mZmVyQ29udGFjdC1idG4tbGFiZWwtLW1vYmlsZSI+VHJvdXZlciBsJ2FnZW5jZTwvc3Bhbj4KICAgICAgICAgICAgPHNwYW4gY2xhc3M9Ik9mZmVyQ29udGFjdC1idG4tbGFiZWwtLWRlc2t0b3AiIGRhdGEtYmVoYXQ9InBsYW5BZ2VuY2UiPlBsYW4gZCdhY2PDqHMgZGUgbCdhZ2VuY2U8L3NwYW4+CiAgICAgICAgICAgIDwvYT4KICAgICAgICA8L3A+CgogICAgPC9kaXY+Cgo8L3NlY3Rpb24+CgogICAgCgoKCgo8c2VjdGlvbiBpZD0iUG9wdXBDb250YWN0IiBjbGFzcz0iTW9kYWwgbWZwLWhpZGUiPgoKICAgIDxoMyBjbGFzcz0iTW9kYWwtdGl0bGUiPsOJY3JpcmUgw6AgbCdhZ2VuY2U8L2gzPgoKICAgIDxkaXYgY2xhc3M9ImZvcm1fY29udGVudF9tb2RhbCI+CiAgICAgICAgPHAgY2xhc3M9Ik9mZmVyQ29udGFjdC1hZGRyZXNzIE9mZmVyQ29udGFjdC1hZGRyZXNzLS1sZWZ0Ij4KICAgICAgICAgICAgPHN0cm9uZyBpZD0ibm9tQWdlbmNlQ29udGFjdCI+Rm9uY2lhIFRyYW5zYWN0aW9uIFBhcmlzICBWb2x0YWlyZTwvc3Ryb25nPgogICAgICAgICAgICA8c3BhbiBpZD0iYWRkckFnZW5jZUNvbnRhY3QiPjI1IGJvdWxldmFyZCBWb2x0YWlyZTwvc3Bhbj48YnIvPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgMjYgcnVlIGRlIE1hbHRlPGJyLz4KICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gaWQ9InZpbGxlQ1BBZ2VuY2VDb250YWN0Ij43NTAxMSAtIFBhcmlzPC9zcGFuPjxici8+CgogICAgICAgICAgICBUw6lsLiAwMS41My4zNi4xMy4wMCAmbmJzcDsmbmJzcDsmbmJzcDsgRmF4LiAwMS40OS4yOS4wMC41MSAgICAgICAgPC9wPgoKICAgICAgICA8Zm9ybSBuYW1lPSJmb25jaWFfYWdlbmN5X2NvbnRhY3QiIG1ldGhvZD0icG9zdCIgYWN0aW9uPSJmb25jaWFfaW50ZXJuZXRfYWdlbmN5X2NvbnRhY3QiIGlkPSJmb25jaWFfYWdlbmN5X2NvbnRhY3QiIGNsYXNzPSJGb3JtIiBkYXRhLWZvcm09ImFqYXhfZm9ybSI+CgogICAgICAgIDxoNCBjbGFzcz0iRm9ybS1zdWJ0aXRsZSI+Vm91cyDDqnRlcyBpbnTDqXJlc3PDqShlKSBwYXIgY2UgYmllbiDDoCB2ZW5kcmU8L2g0PgoKICAgICAgICA8cCBkYXRhLWJlaGF0PSJjYXJhY3RlcmlzdGlxdWVCaWVuQ29udGFjdEFnZW5jZSI+CiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJUYWciPkFwcGFydGVtZW50PC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9IlRhZyI+MyBwacOoY2VzPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iVGFnIj5Sw6lmLiAxMzkxMjAyPC9zcGFuPgogICAgICAgICAgICA8c3BhbiBjbGFzcz0iVGFnIj5QYXJpczwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJUYWciPjcxbcKyPC9zcGFuPgogICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9IlRhZyI+ODIwMDAwICZldXJvOzwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICA8L3A+CgogICAgICAgIDxkaXYgY2xhc3M9ImVycm9yc19jb250YWluZXIiPjwvZGl2PgogICAgICAgIAogICAgICAgIDxoNCBjbGFzcz0iRm9ybS1zdWJ0aXRsZSI+Vm9zIGluZm9ybWF0aW9uczwvaDQ+CgogICAgICAgIDxmaWVsZHNldCBjbGFzcz0iRm9ybS1maWVsZHNldCBGb3JtLWZpZWxkc2V0LS1pbmxpbmUiPgogICAgICAgICAgICA8bGVnZW5kIGNsYXNzPSJGb3JtLWxhYmVsIEZvcm0tbGFiZWwtLWhpZGRlbiI+Q2l2aWxpdMOpPC9sZWdlbmQ+CiAgICAgICAgICAgICAgICA8dWw+PGxpIGNsYXNzPSJGb3JtLWZpZWxkIEZvcm0tZmllbGQtLXJhZGlvIj48aW5wdXQgdHlwZT0icmFkaW8iIGlkPSJmb25jaWFfYWdlbmN5X2NvbnRhY3RfY2l2aWxpdGVfMCIgbmFtZT0iZm9uY2lhX2FnZW5jeV9jb250YWN0W2NpdmlsaXRlXSIgdmFsdWU9Ik0iIC8+PGxhYmVsIGZvcj0iZm9uY2lhX2FnZW5jeV9jb250YWN0X2NpdmlsaXRlXzAiPk08L2xhYmVsPjwvbGk+PGxpIGNsYXNzPSJGb3JtLWZpZWxkIEZvcm0tZmllbGQtLXJhZGlvIj48aW5wdXQgdHlwZT0icmFkaW8iIGlkPSJmb25jaWFfYWdlbmN5X2NvbnRhY3RfY2l2aWxpdGVfMSIgbmFtZT0iZm9uY2lhX2FnZW5jeV9jb250YWN0W2NpdmlsaXRlXSIgdmFsdWU9Ik1tZSIgLz48bGFiZWwgZm9yPSJmb25jaWFfYWdlbmN5X2NvbnRhY3RfY2l2aWxpdGVfMSI+TW1lPC9sYWJlbD48L2xpPjxsaSBjbGFzcz0iRm9ybS1maWVsZCBGb3JtLWZpZWxkLS1yYWRpbyI+PGlucHV0IHR5cGU9InJhZGlvIiBpZD0iZm9uY2lhX2FnZW5jeV9jb250YWN0X2NpdmlsaXRlXzIiIG5hbWU9ImZvbmNpYV9hZ2VuY3lfY29udGFjdFtjaXZpbGl0ZV0iIHZhbHVlPSJNbGxlIiAvPjxsYWJlbCBmb3I9ImZvbmNpYV9hZ2VuY3lfY29udGFjdF9jaXZpbGl0ZV8yIj5NbGxlPC9sYWJlbD48L2xpPjwvdWw+CiAgICAgICAgPC9maWVsZHNldD4KCiAgICAgICAgPHAgY2xhc3M9IkZvcm0tZmllbGQgRm9ybS1maWVsZC0tdGV4dCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgY2xhc3M9IkZvcm0tbGFiZWwgRm9ybS1sYWJlbC0taGlkZGVuIHJlcXVpcmVkIiBmb3I9ImZvbmNpYV9hZ2VuY3lfY29udGFjdF9sYXN0X25hbWUiPk5vbTwvbGFiZWw+CiAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJ0ZXh0IiBpZD0iZm9uY2lhX2FnZW5jeV9jb250YWN0X2xhc3RfbmFtZSIgbmFtZT0iZm9uY2lhX2FnZW5jeV9jb250YWN0W2xhc3RfbmFtZV0iIHJlcXVpcmVkPSJyZXF1aXJlZCIgcGxhY2Vob2xkZXI9Ik5vbSAqIiAvPgogICAgICAgIDwvcD4KCiAgICAgICAgPHAgY2xhc3M9IkZvcm0tZmllbGQgRm9ybS1maWVsZC0tdGV4dCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgY2xhc3M9IkZvcm0tbGFiZWwgRm9ybS1sYWJlbC0taGlkZGVuIHJlcXVpcmVkIiBmb3I9ImZvbmNpYV9hZ2VuY3lfY29udGFjdF9maXJzdF9uYW1lIj5QcsOpbm9tPC9sYWJlbD4KICAgICAgICAgICAgPGlucHV0IHR5cGU9InRleHQiIGlkPSJmb25jaWFfYWdlbmN5X2NvbnRhY3RfZmlyc3RfbmFtZSIgbmFtZT0iZm9uY2lhX2FnZW5jeV9jb250YWN0W2ZpcnN0X25hbWVdIiByZXF1aXJlZD0icmVxdWlyZWQiIHBsYWNlaG9sZGVyPSJQcsOpbm9tICoiIC8+CiAgICAgICAgPC9wPgoKICAgICAgICA8cCBjbGFzcz0iRm9ybS1maWVsZCBGb3JtLWZpZWxkLS10ZXh0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBjbGFzcz0iRm9ybS1sYWJlbCBGb3JtLWxhYmVsLS1oaWRkZW4gcmVxdWlyZWQiIGZvcj0iZm9uY2lhX2FnZW5jeV9jb250YWN0X2VtYWlsIj5FbWFpbDwvbGFiZWw+CiAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJlbWFpbCIgaWQ9ImZvbmNpYV9hZ2VuY3lfY29udGFjdF9lbWFpbCIgbmFtZT0iZm9uY2lhX2FnZW5jeV9jb250YWN0W2VtYWlsXSIgcmVxdWlyZWQ9InJlcXVpcmVkIiBwbGFjZWhvbGRlcj0iRW1haWwgKiIgLz4KICAgICAgICA8L3A+CgogICAgICAgIDxwIGNsYXNzPSJGb3JtLWZpZWxkIEZvcm0tZmllbGQtLXRleHQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGNsYXNzPSJGb3JtLWxhYmVsIEZvcm0tbGFiZWwtLWhpZGRlbiByZXF1aXJlZCIgZm9yPSJmb25jaWFfYWdlbmN5X2NvbnRhY3RfcGhvbmUiPlTDqWzDqXBob25lPC9sYWJlbD4KICAgICAgICAgICAgPGlucHV0IHR5cGU9InRleHQiIGlkPSJmb25jaWFfYWdlbmN5X2NvbnRhY3RfcGhvbmUiIG5hbWU9ImZvbmNpYV9hZ2VuY3lfY29udGFjdFtwaG9uZV0iIHJlcXVpcmVkPSJyZXF1aXJlZCIgcGxhY2Vob2xkZXI9IlTDqWzDqXBob25lICoiIC8+CiAgICAgICAgPC9wPgoKICAgICAgICA8cCBjbGFzcz0iRm9ybS1maWVsZCBGb3JtLWZpZWxkLS1jaGVja2JveCI+CiAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJjaGVja2JveCIgaWQ9ImZvbmNpYV9hZ2VuY3lfY29udGFjdF9mb25jaWFfY3VzdG9tZXIiIG5hbWU9ImZvbmNpYV9hZ2VuY3lfY29udGFjdFtmb25jaWFfY3VzdG9tZXJdIiB2YWx1ZT0iMSIgLz4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBjbGFzcz0iRm9ybS1sYWJlbCIgZm9yPSJmb25jaWFfYWdlbmN5X2NvbnRhY3RfZm9uY2lhX2N1c3RvbWVyIj5KZSBzdWlzIGTDqWrDoCBjbGllbnQgRk9OQ0lBPC9sYWJlbD4KICAgICAgICA8L3A+CgogICAgICAgIDxmaWVsZHNldCBjbGFzcz0iRm9ybS1maWVsZHNldCI+CiAgICAgICAgICAgIDxsZWdlbmQgY2xhc3M9IkZvcm0tbGVnZW5kIj7DiWNow6lhbmNlIGRlIHZvdHJlIHByb2pldDwvbGVnZW5kPgogICAgICAgICAgICAgICAgPHVsPjxsaSBjbGFzcz0iRm9ybS1maWVsZCBGb3JtLWZpZWxkLS1yYWRpbyI+PGlucHV0IHR5cGU9InJhZGlvIiBpZD0iZm9uY2lhX2FnZW5jeV9jb250YWN0X2VjaGVhbmNlXzAiIG5hbWU9ImZvbmNpYV9hZ2VuY3lfY29udGFjdFtlY2hlYW5jZV0iIHZhbHVlPSJJbW3DqWRpYXRlIiAvPjxsYWJlbCBmb3I9ImZvbmNpYV9hZ2VuY3lfY29udGFjdF9lY2hlYW5jZV8wIj5JbW3DqWRpYXRlPC9sYWJlbD48L2xpPjxsaSBjbGFzcz0iRm9ybS1maWVsZCBGb3JtLWZpZWxkLS1yYWRpbyI+PGlucHV0IHR5cGU9InJhZGlvIiBpZD0iZm9uY2lhX2FnZW5jeV9jb250YWN0X2VjaGVhbmNlXzEiIG5hbWU9ImZvbmNpYV9hZ2VuY3lfY29udGFjdFtlY2hlYW5jZV0iIHZhbHVlPSIxIG1vaXMiIC8+PGxhYmVsIGZvcj0iZm9uY2lhX2FnZW5jeV9jb250YWN0X2VjaGVhbmNlXzEiPjEgbW9pczwvbGFiZWw+PC9saT48bGkgY2xhc3M9IkZvcm0tZmllbGQgRm9ybS1maWVsZC0tcmFkaW8iPjxpbnB1dCB0eXBlPSJyYWRpbyIgaWQ9ImZvbmNpYV9hZ2VuY3lfY29udGFjdF9lY2hlYW5jZV8yIiBuYW1lPSJmb25jaWFfYWdlbmN5X2NvbnRhY3RbZWNoZWFuY2VdIiB2YWx1ZT0iMyBtb2lzIGV0IHBsdXMiIC8+PGxhYmVsIGZvcj0iZm9uY2lhX2FnZW5jeV9jb250YWN0X2VjaGVhbmNlXzIiPjMgbW9pcyBldCBwbHVzPC9sYWJlbD48L2xpPjwvdWw+CiAgICAgICAgPC9maWVsZHNldD4KCiAgICAgICAgPGZpZWxkc2V0IGNsYXNzPSJGb3JtLWZpZWxkc2V0Ij4KICAgICAgICAgICAgPGxlZ2VuZCBjbGFzcz0iRm9ybS1sZWdlbmQiPlZvdXMgc291aGFpdGV6IMOqdHJlIGNvbnRhY3TDqShlKSA6PC9sZWdlbmQ+CiAgICAgICAgICAgICAgICA8dWw+PGxpIGNsYXNzPSJGb3JtLWZpZWxkIEZvcm0tZmllbGQtLXJhZGlvIj48aW5wdXQgdHlwZT0icmFkaW8iIGlkPSJmb25jaWFfYWdlbmN5X2NvbnRhY3RfY29udGFjdF9tZXRob2RfMCIgbmFtZT0iZm9uY2lhX2FnZW5jeV9jb250YWN0W2NvbnRhY3RfbWV0aG9kXSIgdmFsdWU9IlBhciB0w6lsw6lwaG9uZSIgLz48bGFiZWwgZm9yPSJmb25jaWFfYWdlbmN5X2NvbnRhY3RfY29udGFjdF9tZXRob2RfMCI+UGFyIHTDqWzDqXBob25lPC9sYWJlbD48L2xpPjxsaSBjbGFzcz0iRm9ybS1maWVsZCBGb3JtLWZpZWxkLS1yYWRpbyI+PGlucHV0IHR5cGU9InJhZGlvIiBpZD0iZm9uY2lhX2FnZW5jeV9jb250YWN0X2NvbnRhY3RfbWV0aG9kXzEiIG5hbWU9ImZvbmNpYV9hZ2VuY3lfY29udGFjdFtjb250YWN0X21ldGhvZF0iIHZhbHVlPSJQYXIgRW1haWwiIC8+PGxhYmVsIGZvcj0iZm9uY2lhX2FnZW5jeV9jb250YWN0X2NvbnRhY3RfbWV0aG9kXzEiPlBhciBFbWFpbDwvbGFiZWw+PC9saT48L3VsPgogICAgICAgIDwvZmllbGRzZXQ+CgogICAgICAgIDxwIGNsYXNzPSJGb3JtLWZpZWxkIEZvcm0tZmllbGQtLXRleHQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGNsYXNzPSJGb3JtLWxhYmVsIiBmb3I9ImZvbmNpYV9hZ2VuY3lfY29udGFjdF9tZXNzYWdlIj5Wb3RyZSBtZXNzYWdlPC9sYWJlbD4KICAgICAgICAgICAgPHRleHRhcmVhIGlkPSJmb25jaWFfYWdlbmN5X2NvbnRhY3RfbWVzc2FnZSIgbmFtZT0iZm9uY2lhX2FnZW5jeV9jb250YWN0W21lc3NhZ2VdIj48L3RleHRhcmVhPgogICAgICAgIDwvcD4KCiAgICAgICAgPGRpdiBjbGFzcz0iTW9kYWwtZm9vdGVyIj4KICAgICAgICAgICAgPHAgY2xhc3M9IkZvcm0taW5mbyI+KiBjaGFtcHMgb2JsaWdhdG9pcmVzPC9wPgoKICAgICAgICAgICAgPHAgY2xhc3M9IkZvcm0tZmllbGQgRm9ybS1maWVsZC0tc3VibWl0IEZvcm0tZmllbGQtLWNlbnRlciI+CiAgICAgICAgICAgICAgICA8YnV0dG9uIHR5cGU9InN1Ym1pdCIgaWQ9ImZvbmNpYV9hZ2VuY3lfY29udGFjdF9zdWJtaXQiIG5hbWU9ImZvbmNpYV9hZ2VuY3lfY29udGFjdFtzdWJtaXRdIiBjbGFzcz0iQnRuIEJ0bi0tdmFsaWQiIGRhdGEtYWN0aW9uPSJzdWJtaXRfZm9ybSIgZGF0YS1hbmFseXRpY3MtdmFsdWU9IjExMzIgLSBGT05DSUEgdHJhbnNhY3Rpb24tcGFyaXMtdm9sdGFpcmUiPkVudm95ZXI8L2J1dHRvbj4KICAgICAgICAgICAgPC9wPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJMZWdhbE1lbnRpb25zIExlZ2FsTWVudGlvbnMtLXNtYWxsIj4KICAgICAgICAgICAgICAgICAgICA8cD5DZXMgaW5mb3JtYXRpb25zIHNvbnQgbsOpY2Vzc2FpcmVzIGF1IHRyYWl0ZW1lbnQgZGUgdm90cmUgZGVtYW5kZSBldCDDoCBsYSBnZXN0aW9uIGRlIG5vcyByZWxhdGlvbnMgY29tbWVyY2lhbGVzLiBMZXMgZG9ubsOpZXMgw6AgY2FyYWN0w6hyZSBwZXJzb25uZWwgcmVjdWVpbGxpZXMgcGFyIEZPTkNJQSBmb250IGwnb2JqZXQgZCd1biB0cmFpdGVtZW50IGF1dG9tYXRpc8OpIGRlc3RpbsOpIMOgIGxhIGdlc3Rpb24gZXQgYXV4IG7DqWdvY2lhdGlvbnMgZGUgYmllbnMgaW1tb2JpbGllcnMsIMOgIGxhIGdlc3Rpb24gZGVzIGNsaWVudHMgZXQgw6AgbGEgcsOpYWxpc2F0aW9uIGQnb3DDqXJhdGlvbnMgcmVsYXRpdmVzIMOgIGxhIHByb3NwZWN0aW9uLiBMYSBjb21tdW5pY2F0aW9uIGRlIHZvcyBjb29yZG9ubsOpZXMgw6lsZWN0cm9uaXF1ZXMgaW1wbGlxdWUgdm90cmUgY29uc2VudGVtZW50IMOgIHJlY2V2b2lyLCBwYXIgdm9pZSDDqWxlY3Ryb25pcXVlLCBkZXMgb2ZmcmVzIGNvbW1lcmNpYWxlcyBkZSBsYSBwYXJ0IGRlIEZPTkNJQSBldCBkZSBzZXMgcGFydGVuYWlyZXMgY29tbWVyY2lhdXggYXV4cXVlbHMgRk9OQ0lBIHBldXQgw6p0cmUgYW1lbsOpZSDDoCBjb21tdW5pcXVlciB2b3MgZG9ubsOpZXMgw6AgY2FyYWN0w6hyZSBwZXJzb25uZWwuIFRvdXRlZm9pcywgdm91cyBwb3V2ZXogdm91cyBvcHBvc2VyIHNhbnMgZnJhaXMgKGhvcm1pcyBjZXV4IGxpw6lzIMOgIGxhIHRyYW5zbWlzc2lvbiBkdSByZWZ1cykgZXQgc2FucyBqdXN0aWZpY2F0aW9uIMOgIGwndXRpbGlzYXRpb24gZGUgdm9zIGRvbm7DqWVzIMOgIGRlcyBmaW5zIGRlIHByb3NwZWN0aW9uIGNvbW1lcmNpYWxlLiBDb25mb3Jtw6ltZW50IMOgIGxhIExvaSBuwrAgNzgtMTcgZHUgNiBqYW52aWVyIDE5NzggbW9kaWZpw6llLCB2b3VzIGRpc3Bvc2V6IGQndW4gZHJvaXQgZCdhY2PDqHMsIGRlIHJlY3RpZmljYXRpb24gZXQgZCdvcHBvc2l0aW9uLCBwb3VyIGRlcyBtb3RpZnMgbMOpZ2l0aW1lcywgYXUgdHJhaXRlbWVudCBkZSB2b3MgZG9ubsOpZXMgw6AgY2FyYWN0w6hyZSBwZXJzb25uZWwgcXVlIHZvdXMgcG91dmV6IGV4ZXJjZXIgZW4gdm91cyBhZHJlc3NhbnQgYXUgcmVzcG9uc2FibGUgZHUgdHJhaXRlbWVudCwgRk9OQ0lBIC0gU2VydmljZSBUcmFuc2FjdGlvbiAxMywgYXZlbnVlIExlYnJ1biAtIDkyMTYwIEFOVE9OWS48L3A+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgoKICAgICAgICA8aW5wdXQgdHlwZT0iaGlkZGVuIiBpZD0iZm9uY2lhX2FnZW5jeV9jb250YWN0X3Byb3BlcnR5X2RhdGEiIG5hbWU9ImZvbmNpYV9hZ2VuY3lfY29udGFjdFtwcm9wZXJ0eV9kYXRhXSIgdmFsdWU9InsmcXVvdDtwcml4VmVudGUmcXVvdDs6ODIwMDAwLCZxdW90O3N1cmZhY2UmcXVvdDs6NzEsJnF1b3Q7cmVmZXJlbmNlJnF1b3Q7OiZxdW90OzEzOTEyMDImcXVvdDssJnF1b3Q7cHJvcGVydHlUeXBlJnF1b3Q7OiZxdW90O3B1cmNoYXNlJnF1b3Q7LCZxdW90O25iUGllY2VzJnF1b3Q7OjMsJnF1b3Q7bmVnb2NpYXRldXJQcmVub20mcXVvdDs6JnF1b3Q7TWlja2FlbCZxdW90OywmcXVvdDt2aWxsZSZxdW90OzomcXVvdDtwYXJpcyZxdW90OywmcXVvdDtjb2RlUG9zdGFsJnF1b3Q7OiZxdW90Ozc1MDExJnF1b3Q7LCZxdW90O3R5cGVCaWVuJnF1b3Q7OiZxdW90O2FwcGFydGVtZW50JnF1b3Q7LCZxdW90O25lZ29jaWF0ZXVyTm9tJnF1b3Q7OiZxdW90O0FSRkkmcXVvdDssJnF1b3Q7c2NvcmUmcXVvdDs6MX0iIC8+CiAgICAgICAgPGlucHV0IHR5cGU9ImhpZGRlbiIgaWQ9ImZvbmNpYV9hZ2VuY3lfY29udGFjdF9hZ2VuY3lfbWFpbCIgbmFtZT0iZm9uY2lhX2FnZW5jeV9jb250YWN0W2FnZW5jeV9tYWlsXSIgdmFsdWU9ImZ0LXBhcmlzMTF2b2x0YWlyZSMjZm9uY2lhLmZyIiAvPgoKICAgICAgICAgICAgCgogICAgICAgIDwvZm9ybT4KCiAgICA8L2Rpdj4KCjwvc2VjdGlvbj4KCiAgICAgICAgICAgICAgICA8L2FzaWRlPgoKICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9zZWN0aW9uPgogICAgICAgICAgICAgICAgICAgIDxzZWN0aW9uIGNsYXNzPSJDb250ZW50LXJvdyI+CiAgICA8ZGl2IGNsYXNzPSJDb250ZW50LW92ZXJmbG93Ij4KICAgICAgICA8ZGl2IGNsYXNzPSJPZmZlclJlbGF0ZWQiPgoKICAgICAgICAgICAgPGgyIGNsYXNzPSJPZmZlclJlbGF0ZWQtdGl0bGUiPkJpZW5zIHNpbWlsYWlyZXM8L2gyPgoKICAgICAgICAgICAgPHVsIGNsYXNzPSJPZmZlclJlbGF0ZWQtc2xpZGVzIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpIGNsYXNzPSJPZmZlclJlbGF0ZWQtaXRlbSI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxhIGNsYXNzPSJUZWFzZXJPZmZlck1pbmkiIGhyZWY9Ii9hY2hhdC9wYXJpcy03NTAxMS9hcHBhcnRlbWVudC8xMzgyNTUwLmh0bSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJUZWFzZXJPZmZlck1pbmktaWxsIiBzdHlsZT0iYmFja2dyb3VuZC1pbWFnZTogdXJsKCdodHRwOi8vcGhvdG9zLmZyLmZvbmNpYS5jb20vbWluaWNwLzY0MC80ODAvcGhvdG9zLzEzODIvNTUwLzEzODI1NTAvZ3JhbmQvMTM4MjU1MF81ODZhMWNhOTkxZjkyYjdkZTE0NjNjY2U0OGM0ZTg5NjVlNjc1ZjQ4MjU0ZTguanBnP2RhdGVtYWo9MjAyMC0wNS0wOCAwODo0MToxMC4yNjEnKSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgc3JjPSJodHRwOi8vcGhvdG9zLmZyLmZvbmNpYS5jb20vbWluaWNwLzY0MC80ODAvcGhvdG9zLzEzODIvNTUwLzEzODI1NTAvZ3JhbmQvMTM4MjU1MF81ODZhMWNhOTkxZjkyYjdkZTE0NjNjY2U0OGM0ZTg5NjVlNjc1ZjQ4MjU0ZTguanBnP2RhdGVtYWo9MjAyMC0wNS0wOCAwODo0MToxMC4yNjEiIGFsdD0iIiAvPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iVGVhc2VyT2ZmZXJNaW5pLWNvbnRlbnQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzdHJvbmcgY2xhc3M9IlRlYXNlck9mZmVyTWluaS10aXRsZSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBBcHBhcnRlbWVudAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAzIHBpw6hjZXMgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIMOgIHZlbmRyZQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvc3Ryb25nPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJUZWFzZXJPZmZlck1pbmktcHJpY2UiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgODgwIDAwMCZuYnNwO+KCrAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJUZWFzZXJPZmZlck1pbmktbG9jIj5QYXJpcyAoNzUwMTEpPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdWw+CiAgICAgICAgPC9kaXY+CiAgICA8L2Rpdj4KPC9zZWN0aW9uPgoKICAgICAgICAKICAgIDwvZGl2PgoKCgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iQnJlYWRjcnVtYnMiPgogICAgICAgICAgICA8cCAgICAgY2xhc3M9IkJyZWFkY3J1bWJzLWlubmVyIiBkYXRhLXR5cGU9InlvbG8iPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuPkZvbmNpYTwvc3Bhbj4gICAgICAgICAgICAgICAgICAgICAgICAgICAgCgogICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIvYWNoYXQiICAgICBjbGFzcz0iQnJlYWRjcnVtYnMtbGluayI+QWNoYXQ8L2E+ICAgICAgICAgICAgICAgICAgICAgICAgICAgIAoKICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iL2FjaGF0L3BhcmlzLTc1IiAgICAgY2xhc3M9IkJyZWFkY3J1bWJzLWxpbmsiPlBhcmlzIDc1PC9hPiAgICAgICAgICAgICAgICAgICAgICAgICAgICAKCiAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuPlBhcmtpbmc8L3NwYW4+ICAgICAgICAgICAgICAgICAgICAgICAgICAgIAoKICAgIAoKICAgICAgICAgICAgPC9wPgogICAgICAgIDwvZGl2PgogICAgCgoKICAgICAgICAgICAgCiAgICAgICAgCjxmb290ZXIgY2xhc3M9IkZvb3RlciIgcm9sZT0iY29udGVudGluZm8iPgoKICAgIDxkaXYgY2xhc3M9IkZvb3Rlci1yb3cgRm9vdGVyLXJvdy0taWRlbnRpdHkgRm9vdGVyLXJvdy0taWRlbnRpdHktbW9iaWxlIj4KICAgICAgICA8ZGl2IGNsYXNzPSJGb290ZXItMnBhcnQiPgogICAgICAgICAgICA8cCBjbGFzcz0iRm9vdGVyLXBhcnQxIEZvb3Rlci1wYXJ0MS0tbG9nbyI+CiAgICAgICAgICAgICAgICA8aW1nIHdpZHRoPSIxNTQiIGhlaWdodD0iNTYiIHNyYz0iaHR0cHM6Ly9waG90b3MuZm9uY2lhLm5ldC9pbWFnZXMvRm9uY2lhX2xvZ292XzMwOF84Ni5wbmciIGFsdD0iRm9uY2lhIj4KICAgICAgICAgICAgPC9wPgogICAgICAgICAgICA8dWwgY2xhc3M9IkZvb3Rlci1wYXJ0MiBGb290ZXItcGFydDItLWxpbmtzIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgICA8YSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhyZWY9Ii9tZW50aW9ucy1sZWdhbGVzIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtYmVoYXQ9ImxpbmstTWVudGlvbnNfbMOpZ2FsZXMiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBNZW50aW9ucyBsw6lnYWxlcwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgICAgPGEgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBocmVmPSJodHRwczovL2ZyLmZvbmNpYS5jb20vcGxhbi1kdS1zaXRlIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtYmVoYXQ9ImxpbmstUGxhbl9kdV9zaXRlIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgUGxhbiBkdSBzaXRlCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgICA8YSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhyZWY9Ii8jZm9uY2lhX2NvbnNlbnRlbWVudHMiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1iZWhhdD0ibGluay1HZXN0aW9uX2Rlc19jb29raWVzIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgR2VzdGlvbiBkZXMgY29va2llcwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgICAgPGEgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBocmVmPSIvY2hhcnRlLWRlLXByb3RlY3Rpb24tZGVzLWRvbm5lZXMiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1iZWhhdD0ibGluay1DaGFydGVfZGVfcHJvdGVjdGlvbl9kZXNfZG9ubsOpZXNfIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgQ2hhcnRlIGRlIHByb3RlY3Rpb24gZGVzIGRvbm7DqWVzIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgICAgPGEgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBocmVmPSIvbm90cmUtcHJlb2NjdXBhdGlvbi1sYS1zZWN1cml0ZS1kZS12b3MtZG9ubmVlcyIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkYXRhLWJlaGF0PSJsaW5rLVPDqWN1cml0w6lfSW5mb3JtYXRpcXVlIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgU8OpY3VyaXTDqSBJbmZvcm1hdGlxdWUKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICAgIDxhICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaHJlZj0iL3NlcnZpY2VzIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtYmVoYXQ9ImxpbmstU2VydmljZXMiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBTZXJ2aWNlcwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgICAgPGEgIHRhcmdldD0iX2JsYW5rIiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhyZWY9Imh0dHA6Ly9wcmVzc3Jvb20uZm9uY2lhLmNvbS8iCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1iZWhhdD0ibGluay1Fc3BhY2VfUHJlc3NlIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgRXNwYWNlIFByZXNzZQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgICAgPGEgIHRhcmdldD0iX2JsYW5rIiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhyZWY9Imh0dHA6Ly9mb25jaWEtcmVjcnV0ZS50YWxlbnQtc29mdC5jb20vYWNjdWVpbC5hc3B4IgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtYmVoYXQ9ImxpbmstTm9zX29mZnJlc19k4oCZZW1wbG9pIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgTm9zIG9mZnJlcyBk4oCZZW1wbG9pCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgICA8YSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhyZWY9Ii9hY2hhdC9hdmlzLWNsaWVudHMiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1iZWhhdD0ibGluay1BdmlzX2NsaWVudHMiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBBdmlzIGNsaWVudHMKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC91bD4KICAgICAgICA8L2Rpdj4KICAgIDwvZGl2PgoKICAgIDxkaXYgY2xhc3M9IkZvb3Rlci1wYXJ0MSBGb290ZXItcGFydDEtLXNvY2lhbCI+CiAgICAgICAgICAgICAgICAgICAgPGEgY2xhc3M9IkZvb3Rlci0taGF1dC1kZS1wYWdlLS1kZXNrdG9wIiAgdGFyZ2V0PSJfYmxhbmsiICBocmVmPSJodHRwczovL3d3dy5mYWNlYm9vay5jb20vRm9uY2lhIiBkYXRhLWJlaGF0PSJzb2NpYWxMaW5rLUZhY2Vib29rIG1lbnUgZHJvaXQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3ZnIGNsYXNzPSJpY29uIiBzdHlsZT0id2lkdGg6MzhweDtoZWlnaHQ6MzhweCIgYXJpYS1oaWRkZW49InRydWUiPjx1c2UgeGxpbms6aHJlZj0iL2J1bmRsZXMvZm9uY2lhaW50ZXJuZXQvc3ZnL2ljb25zLnN2ZyNJY29uLS1mYWNlYm9vay1yZXNwb25zaXZlIj48L3VzZT48L3N2Zz4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgPGEgY2xhc3M9IkZvb3Rlci0taGF1dC1kZS1wYWdlIiAgdGFyZ2V0PSJfYmxhbmsiICBocmVmPSJodHRwczovL3d3dy5mYWNlYm9vay5jb20vRm9uY2lhIiBkYXRhLWJlaGF0PSJzb2NpYWxMaW5rLUZhY2Vib29rIG1lbnUgZHJvaXQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3ZnIGNsYXNzPSJpY29uIiBzdHlsZT0id2lkdGg6MzhweDtoZWlnaHQ6MzhweCIgYXJpYS1oaWRkZW49InRydWUiPjx1c2UgeGxpbms6aHJlZj0iL2J1bmRsZXMvZm9uY2lhaW50ZXJuZXQvc3ZnL2ljb25zLnN2ZyNJY29uLS1mYWNlYm9vazIiPjwvdXNlPjwvc3ZnPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICAgIDxhIGNsYXNzPSJGb290ZXItLWhhdXQtZGUtcGFnZS0tZGVza3RvcCIgIHRhcmdldD0iX2JsYW5rIiAgaHJlZj0iaHR0cHM6Ly90d2l0dGVyLmNvbS9mb25jaWEiIGRhdGEtYmVoYXQ9InNvY2lhbExpbmstdHdpdHRlciBtZW51IGRyb2l0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHN2ZyBjbGFzcz0iaWNvbiIgc3R5bGU9IndpZHRoOjM4cHg7aGVpZ2h0OjM4cHgiIGFyaWEtaGlkZGVuPSJ0cnVlIj48dXNlIHhsaW5rOmhyZWY9Ii9idW5kbGVzL2ZvbmNpYWludGVybmV0L3N2Zy9pY29ucy5zdmcjSWNvbi0tdHdpdHRlci1yZXBvbnNpdmUiPjwvdXNlPjwvc3ZnPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICA8YSBjbGFzcz0iRm9vdGVyLS1oYXV0LWRlLXBhZ2UiICB0YXJnZXQ9Il9ibGFuayIgIGhyZWY9Imh0dHBzOi8vdHdpdHRlci5jb20vZm9uY2lhIiBkYXRhLWJlaGF0PSJzb2NpYWxMaW5rLXR3aXR0ZXIgbWVudSBkcm9pdCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzdmcgY2xhc3M9Imljb24iIHN0eWxlPSJ3aWR0aDozOHB4O2hlaWdodDozOHB4IiBhcmlhLWhpZGRlbj0idHJ1ZSI+PHVzZSB4bGluazpocmVmPSIvYnVuZGxlcy9mb25jaWFpbnRlcm5ldC9zdmcvaWNvbnMuc3ZnI0ljb24tLXR3aXR0ZXIyIj48L3VzZT48L3N2Zz4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgICA8YSBjbGFzcz0iRm9vdGVyLS1oYXV0LWRlLXBhZ2UtLWRlc2t0b3AiICB0YXJnZXQ9Il9ibGFuayIgIGhyZWY9Imh0dHBzOi8vd3d3LnlvdXR1YmUuY29tL3VzZXIvZm9uY2lhIiBkYXRhLWJlaGF0PSJzb2NpYWxMaW5rLXlvdXR1YmUgbWVudSBkcm9pdCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzdmcgY2xhc3M9Imljb24iIHN0eWxlPSJ3aWR0aDozOHB4O2hlaWdodDozOHB4IiBhcmlhLWhpZGRlbj0idHJ1ZSI+PHVzZSB4bGluazpocmVmPSIvYnVuZGxlcy9mb25jaWFpbnRlcm5ldC9zdmcvaWNvbnMuc3ZnI0ljb24tLXlvdXR1YmUtcmVzcG9uc2l2ZSI+PC91c2U+PC9zdmc+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgIDxhIGNsYXNzPSJGb290ZXItLWhhdXQtZGUtcGFnZSIgIHRhcmdldD0iX2JsYW5rIiAgaHJlZj0iaHR0cHM6Ly93d3cueW91dHViZS5jb20vdXNlci9mb25jaWEiIGRhdGEtYmVoYXQ9InNvY2lhbExpbmsteW91dHViZSBtZW51IGRyb2l0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHN2ZyBjbGFzcz0iaWNvbiIgc3R5bGU9IndpZHRoOjM4cHg7aGVpZ2h0OjM4cHgiIGFyaWEtaGlkZGVuPSJ0cnVlIj48dXNlIHhsaW5rOmhyZWY9Ii9idW5kbGVzL2ZvbmNpYWludGVybmV0L3N2Zy9pY29ucy5zdmcjSWNvbi0teW91dHViZTIiPjwvdXNlPjwvc3ZnPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICAgIDxhIGNsYXNzPSJGb290ZXItLWhhdXQtZGUtcGFnZS0tZGVza3RvcCIgIHRhcmdldD0iX2JsYW5rIiAgaHJlZj0iaHR0cHM6Ly93d3cubGlua2VkaW4uY29tL2NvbXBhbnkvNzcyOTE3LyIgZGF0YS1iZWhhdD0ic29jaWFsTGluay1saW5rZWRpbiBtZW51IGRyb2l0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHN2ZyBjbGFzcz0iaWNvbiIgc3R5bGU9IndpZHRoOjM4cHg7aGVpZ2h0OjM4cHgiIGFyaWEtaGlkZGVuPSJ0cnVlIj48dXNlIHhsaW5rOmhyZWY9Ii9idW5kbGVzL2ZvbmNpYWludGVybmV0L3N2Zy9pY29ucy5zdmcjSWNvbi0tbGlua2VkaW4tcmVzcG9uc2l2ZSI+PC91c2U+PC9zdmc+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgIDxhIGNsYXNzPSJGb290ZXItLWhhdXQtZGUtcGFnZSIgIHRhcmdldD0iX2JsYW5rIiAgaHJlZj0iaHR0cHM6Ly93d3cubGlua2VkaW4uY29tL2NvbXBhbnkvNzcyOTE3LyIgZGF0YS1iZWhhdD0ic29jaWFsTGluay1saW5rZWRpbiBtZW51IGRyb2l0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHN2ZyBjbGFzcz0iaWNvbiIgc3R5bGU9IndpZHRoOjM4cHg7aGVpZ2h0OjM4cHgiIGFyaWEtaGlkZGVuPSJ0cnVlIj48dXNlIHhsaW5rOmhyZWY9Ii9idW5kbGVzL2ZvbmNpYWludGVybmV0L3N2Zy9pY29ucy5zdmcjSWNvbi0tbGlua2VkaW4iPjwvdXNlPjwvc3ZnPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgIAogICAgICAgIDxhIGNsYXNzPSJGb290ZXItLWhhdXQtZGUtcGFnZSIgaHJlZj0iIyIgb25DbGljaz0iJCgnaHRtbCwgYm9keScpLmFuaW1hdGUoe3Njcm9sbFRvcDowfSwgJ3Nsb3cnKTsgcmV0dXJuIGZhbHNlOyI+CiAgICAgICAgICAgIDxzdmcgY2xhc3M9Imljb24iIHN0eWxlPSJ3aWR0aDozOHB4O2hlaWdodDozOHB4IiBhcmlhLWhpZGRlbj0idHJ1ZSI+PHVzZSB4bGluazpocmVmPSIvYnVuZGxlcy9mb25jaWFpbnRlcm5ldC9zdmcvaWNvbnMuc3ZnI0ljb24tLWhhdXRfZGVfcGFnZV9ncmlzIj48L3VzZT48L3N2Zz4KICAgICAgICA8L2E+CiAgICA8L2Rpdj4KCiAgICA8ZGl2IGNsYXNzPSJGb290ZXItcm93IEZvb3Rlci1yb3ctLWxpbmtzMSI+CiAgICAgICAgPGRpdiBjbGFzcz0iRm9vdGVyLWNvbHMiPgogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJGb290ZXItY29sIEZvb3Rlci1jb2wtLWxlZnQiPgogICAgICAgICAgICAgICAgPHVsIGNsYXNzPSJGb290ZXItbWFpbkxpbmtzIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSAgaHJlZj0iaHR0cHM6Ly9mci5mb25jaWEuY29tL2FjaGF0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBBY2hldGVyIHVuIGJpZW4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhICBocmVmPSIvZmFpcmUtZ2VyZXItbWEtbG9jYXRpb24tcGFyLWZvbmNpYSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgRmFpcmUgZ8OpcmVyIG1hIGxvY2F0aW9uCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSAgaHJlZj0iaHR0cHM6Ly9mci5mb25jaWEuY29tL2VzdGltZXItc29uLWJpZW4iPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEVzdGltYXRpb24gYmllbiBpbW1vYmlsaWVyCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSAgaHJlZj0iL2wtaW52ZXN0aXNzZW1lbnQtaW1tb2JpbGllciI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgSW52ZXN0aXIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhICBocmVmPSIvdm90cmUtYWNoYXQtZGFucy1sLWltbW9iaWxpZXItbmV1Zi1hdmVjLWZvbmNpYSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgQWNoYXQgaW1tb2JpbGllciBuZXVmIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdWw+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJGb290ZXItY29sIEZvb3Rlci1jb2wtLXJpZ2h0Ij4KICAgICAgICAgICAgICAgIDx1bCBjbGFzcz0iRm9vdGVyLW1haW5MaW5rcyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgIHRhcmdldD0iX2JsYW5rIiAgaHJlZj0iaHR0cHM6Ly9mci5mb25jaWEuY29tL2xvY2F0aW9uIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBMb3VlciB1biBiaWVuCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSAgaHJlZj0iL2ZhaXJlLWdlcmVyLXVuZS1jb3Byb3ByaWV0ZSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgRmFpcmUgZ8OpcmVyIHVuZSBjb3Byb3ByacOpdMOpCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSAgaHJlZj0iaHR0cHM6Ly9mci5mb25jaWEuY29tL2VzdGltYXRpb24tbG95ZXIiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEVzdGltYXRpb24gbG95ZXIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhICBocmVmPSIvbG9naW4iPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIE15Rm9uY2lhCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSAgaHJlZj0iaHR0cHM6Ly9mci5mb25jaWEuY29tL2FjdHVhbGl0ZXMtZW4tcGVyaW9kZS1kZS1jb25maW5lbWVudCNmYXFhY3R1YWxpdGVzIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBGQVEKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3VsPgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgIDwvZGl2PgoKICAgIDxkaXYgY2xhc3M9IkZvb3Rlci1yb3cgRm9vdGVyLXJvdy0taWRlbnRpdHkgRm9vdGVyLXJvdy0taWRlbnRpdHktcmVmIj4KICAgICAgICA8ZGl2IGNsYXNzPSJGb290ZXItMnBhcnQiPgogICAgICAgICAgICA8cCBjbGFzcz0iRm9vdGVyLXBhcnQxIEZvb3Rlci1wYXJ0MS0tbG9nbyI+CiAgICAgICAgICAgICAgICA8aW1nIHdpZHRoPSIxNTQiIGhlaWdodD0iNDMiIHNyYz0iaHR0cHM6Ly9waG90b3MuZm9uY2lhLm5ldC9pbWFnZXMvRm9uY2lhX2xvZ292XzMwOF84Ni5wbmciIGFsdD0iRm9uY2lhIj4KICAgICAgICAgICAgPC9wPgogICAgICAgICAgICA8dWwgY2xhc3M9IkZvb3Rlci1wYXJ0MiBGb290ZXItcGFydDItLWxpbmtzIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgPGEgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhyZWY9Ii9tZW50aW9ucy1sZWdhbGVzIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1iZWhhdD0ibGluay1NZW50aW9uc19sw6lnYWxlcyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBNZW50aW9ucyBsw6lnYWxlcwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgIDxhICAgICAgICAgICAgICAgICAgICAgICAgICAgICBocmVmPSJodHRwczovL2ZyLmZvbmNpYS5jb20vcGxhbi1kdS1zaXRlIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1iZWhhdD0ibGluay1QbGFuX2R1X3NpdGUiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgUGxhbiBkdSBzaXRlCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgPGEgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhyZWY9Ii8jZm9uY2lhX2NvbnNlbnRlbWVudHMiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkYXRhLWJlaGF0PSJsaW5rLUdlc3Rpb25fZGVzX2Nvb2tpZXMiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgR2VzdGlvbiBkZXMgY29va2llcwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgIDxhICAgICAgICAgICAgICAgICAgICAgICAgICAgICBocmVmPSIvY2hhcnRlLWRlLXByb3RlY3Rpb24tZGVzLWRvbm5lZXMiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkYXRhLWJlaGF0PSJsaW5rLUNoYXJ0ZV9kZV9wcm90ZWN0aW9uX2Rlc19kb25uw6llc18iPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgQ2hhcnRlIGRlIHByb3RlY3Rpb24gZGVzIGRvbm7DqWVzIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgIDxhICAgICAgICAgICAgICAgICAgICAgICAgICAgICBocmVmPSIvbm90cmUtcHJlb2NjdXBhdGlvbi1sYS1zZWN1cml0ZS1kZS12b3MtZG9ubmVlcyIKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtYmVoYXQ9ImxpbmstU8OpY3VyaXTDqV9JbmZvcm1hdGlxdWUiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgU8OpY3VyaXTDqSBJbmZvcm1hdGlxdWUKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICA8YSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaHJlZj0iL3NlcnZpY2VzIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1iZWhhdD0ibGluay1TZXJ2aWNlcyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBTZXJ2aWNlcwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgIDxhICB0YXJnZXQ9Il9ibGFuayIgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhyZWY9Imh0dHA6Ly9wcmVzc3Jvb20uZm9uY2lhLmNvbS8iCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkYXRhLWJlaGF0PSJsaW5rLUVzcGFjZV9QcmVzc2UiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgRXNwYWNlIFByZXNzZQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgIDxhICB0YXJnZXQ9Il9ibGFuayIgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhyZWY9Imh0dHA6Ly9mb25jaWEtcmVjcnV0ZS50YWxlbnQtc29mdC5jb20vYWNjdWVpbC5hc3B4IgogICAgICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1iZWhhdD0ibGluay1Ob3Nfb2ZmcmVzX2TigJllbXBsb2kiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgTm9zIG9mZnJlcyBk4oCZZW1wbG9pCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgPGEgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhyZWY9Ii9hY2hhdC9hdmlzLWNsaWVudHMiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkYXRhLWJlaGF0PSJsaW5rLUF2aXNfY2xpZW50cyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBBdmlzIGNsaWVudHMKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC91bD4KICAgICAgICA8L2Rpdj4KICAgIDwvZGl2PgoKICAgIDxkaXYgY2xhc3M9IkZvb3Rlci1yb3cgRm9vdGVyLXJvdy0tZW5kIj4KICAgICAgICA8ZGl2IGNsYXNzPSJGb290ZXItMnBhcnQiPgogICAgICAgICAgICA8cCBjbGFzcz0iRm9vdGVyLXBhcnQyIEZvb3Rlci1wYXJ0Mi0tY29weSI+CiAgICAgICAgICAgICAgICAmY29weTsyMDIwIEZvbmNpYSBHcm91cGUKICAgICAgICAgICAgPC9wPgogICAgICAgIDwvZGl2PgogICAgPC9kaXY+Cgo8L2Zvb3Rlcj4KPC9kaXY+PCEtLUJvZHlXcmFwcGVyLS0+CgogICAgPHNjcmlwdCBzcmM9Ii9jb21waWxlZC9jb21tb24uanM/dmVyc2lvbj0xNTg4MDk3NTU5Ij48L3NjcmlwdD4KPHNjcmlwdD4KICAgIGZvbmNpYS5zZXNzaW9ucy5pbml0KDkwMDAwMCwgMTgwMDAwKTsKPC9zY3JpcHQ+Cgo8IS0tW2lmIGx0ZSBJRSA5XT48c2NyaXB0IHNyYz0iL2NvbXBpbGVkL3NjcmlwdHMtaWU5LmpzP3ZlcnNpb249MTU4ODA5NzU1OSI+PC9zY3JpcHQ+PCFbZW5kaWZdLS0+CgoKICAgIAo8L2JvZHk+CjwvaHRtbD4K
    http_version: null
  recorded_at: Thu, 28 May 2020 15:38:05 GMT
- request:
    method: get
    uri: https://fr.foncia.com/achat/paris-75011/appartement/1393196.htm
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Wed, 27 May 2020 17:16:46 GMT
      Cache-Control:
      - public, s-maxage=31536000
      Content-Type:
      - text/html; charset=UTF-8
      Vary:
      - Accept-Encoding,Origin
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        PCFET0NUWVBFIGh0bWw+CjxodG1sIGxhbmc9ImZyIj4KPGhlYWQ+CiAgICA8bWV0YSBjaGFyc2V0PSJVVEYtOCI+CiAgICA8bWV0YSBodHRwLWVxdWl2PSJYLVVBLUNvbXBhdGlibGUiIGNvbnRlbnQ9IklFPUVkZ2UiPgogICAgPG1ldGEgbmFtZT0idmlld3BvcnQiIGNvbnRlbnQ9IndpZHRoPWRldmljZS13aWR0aCxpbml0aWFsLXNjYWxlPTEsbWluaW11bS1zY2FsZT0xIj4KCiAgICAKICAgIDx0aXRsZT5BcHBhcnRlbWVudCAyIHBpw6hjZXMgw6AgdmVuZHJlIC0gUGFyaXMgMTHDqG1lICg3NTAxMSkgLSAzMy40IG0yIC0gRm9uY2lhPC90aXRsZT4KCiAgICAgICAgICAgICAgICAgICAgPG1ldGEgbmFtZT0iZGVzY3JpcHRpb24iIGNvbnRlbnQ9IkFwcGFydGVtZW50IDIgcGnDqGNlcyAoMzMuNCBtMikgw6AgdmVuZHJlIC0gUGFyaXMgMTHDqG1lICg3NTAxMSkgOiBSVUUgREUgTUFMVEUuCkRhbnMgdW5lIHBldGl0ZSBjb3Byb3ByacOpdMOpIGJpZW4gdGVudWUgw6AgcHJveGltaXTDqSBkdSBNwrAgUkVQVUJMSVFVRSB1biAyIHBpw6hjZXMgbHVtaW5ldXggZW4gZG91YmxlIGV4cG9zaXRpb24gU08vTkUuCkVudGllcmVtZW50IMOgIHJlZmFpcmUsLi4uIj4KCiAgICAgICAgICAgICAgICAgICAgICAgIDxsaW5rIHJlbD0iaWNvbiIgdHlwZT0iaW1hZ2UveC1pY29uIiBocmVmPSIvZmF2aWNvbi5pY28/dmVyc2lvbj0xNTg4MDk3NTU5Ij4KICAgICAgICA8bGluayByZWw9ImFwcGxlLXRvdWNoLWljb24tcmV0aW5hIiBocmVmPSIvYnVuZGxlcy9mb25jaWFpbnRlcm5ldC9pbWFnZXMvZW52aXJvbm1lbnQvdG91Y2gtaWNvbi1pcGhvbmUtcmV0aW5hLnBuZz92ZXJzaW9uPTE1ODgwOTc1NTkiPgoKICAgICAgICAgICAgICAgIDxtZXRhIG5hbWU9ImFwcGxpY2F0aW9uLW5hbWUiIGNvbnRlbnQ9IkZvbmNpYS5jb20iPgogICAgICAgIDxtZXRhIG5hbWU9Im1zYXBwbGljYXRpb24tVGlsZUNvbG9yIiBjb250ZW50PSIjMDA5ZWI5Ij4KICAgICAgICA8bWV0YSBuYW1lPSJtc2FwcGxpY2F0aW9uLXNxdWFyZTcweDcwbG9nbyIgY29udGVudD0idGlueS5wbmciPgogICAgICAgIDxtZXRhIG5hbWU9Im1zYXBwbGljYXRpb24tc3F1YXJlMTUweDE1MGxvZ28iIGNvbnRlbnQ9InNxdWFyZS5wbmciPgogICAgICAgIDxtZXRhIG5hbWU9Im1zYXBwbGljYXRpb24td2lkZTMxMHgxNTBsb2dvIiBjb250ZW50PSJ3aWRlLnBuZyI+CiAgICAgICAgPG1ldGEgbmFtZT0ibXNhcHBsaWNhdGlvbi1zcXVhcmUzMTB4MzEwbG9nbyIgY29udGVudD0ibGFyZ2UucG5nIj4KCiAgICAgICAgICAgICAgICA8bWV0YSBwcm9wZXJ0eT0ib2c6dGl0bGUiIGNvbnRlbnQ9IkFwcGFydGVtZW50IDIgcGnDqGNlcyDDoCB2ZW5kcmUgLSBQYXJpcyAxMcOobWUgKDc1MDExKSAtIDMzLjQgbTIgLSBGb25jaWEiPgogICAgICAgIDxtZXRhIHByb3BlcnR5PSJvZzpzaXRlX25hbWUiIGNvbnRlbnQ9IkZPTkNJQSI+CiAgICAgICAgPG1ldGEgcHJvcGVydHk9Im9nOmRlc2NyaXB0aW9uIiBjb250ZW50PSJBcHBhcnRlbWVudCAyIHBpw6hjZXMgKDMzLjQgbTIpIMOgIHZlbmRyZSAtIFBhcmlzIDExw6htZSAoNzUwMTEpIDogUlVFIERFIE1BTFRFLgpEYW5zIHVuZSBwZXRpdGUgY29wcm9wcmnDqXTDqSBiaWVuIHRlbnVlIMOgIHByb3hpbWl0w6kgZHUgTcKwIFJFUFVCTElRVUUgdW4gMiBwacOoY2VzIGx1bWluZXV4IGVuIGRvdWJsZSBleHBvc2l0aW9uIFNPL05FLgpFbnRpZXJlbWVudCDDoCByZWZhaXJlLC4uLiI+CiAgICAgICAgPG1ldGEgcHJvcGVydHk9Im9nOnVybCIgY29udGVudD0iaHR0cHM6Ly9mci5mb25jaWEuY29tL2FjaGF0L3BhcmlzLTc1MDExL2FwcGFydGVtZW50LzEzOTMxOTYuaHRtIj4KICAgICAgICA8bWV0YSBwcm9wZXJ0eT0ib2c6aW1hZ2UiIGNvbnRlbnQ9Imh0dHA6Ly9waG90b3MuZnIuZm9uY2lhLmNvbS9taW5pY3AvNjQwLzQ4MC9waG90b3MvMTM5My8xOTYvMTM5MzE5Ni9ncmFuZC8xMzkzMTk2XzE0YTFjMjc2YjczZmI0ODBkYjJjZGQ0NzJlMWVlNGYwNWU1NjZlZGEyYmQ0MS5qcGc/ZGF0ZW1haj0yMDIwLTAyLTI2IDE0OjEzOjA2Ljk4MiI+CgogICAgICAgIDxtZXRhIG5hbWU9InR3aXR0ZXI6dGl0bGUiIGNvbnRlbnQ9IkFwcGFydGVtZW50IDIgcGnDqGNlcyDDoCB2ZW5kcmUgLSBQYXJpcyAxMcOobWUgKDc1MDExKSAtIDMzLjQgbTIgLSBGb25jaWEiPgogICAgICAgIDxtZXRhIG5hbWU9InR3aXR0ZXI6aW1hZ2U6c3JjIiBjb250ZW50PSJodHRwOi8vcGhvdG9zLmZyLmZvbmNpYS5jb20vbWluaWNwLzY0MC80ODAvcGhvdG9zLzEzOTMvMTk2LzEzOTMxOTYvZ3JhbmQvMTM5MzE5Nl8xNGExYzI3NmI3M2ZiNDgwZGIyY2RkNDcyZTFlZTRmMDVlNTY2ZWRhMmJkNDEuanBnP2RhdGVtYWo9MjAyMC0wMi0yNiAxNDoxMzowNi45ODIiPgogICAgICAgIDxtZXRhIG5hbWU9InR3aXR0ZXI6ZGVzY3JpcHRpb24iIGNvbnRlbnQ9IkFwcGFydGVtZW50IDIgcGnDqGNlcyAoMzMuNCBtMikgw6AgdmVuZHJlIC0gUGFyaXMgMTHDqG1lICg3NTAxMSkgOiBSVUUgREUgTUFMVEUuCkRhbnMgdW5lIHBldGl0ZSBjb3Byb3ByacOpdMOpIGJpZW4gdGVudWUgw6AgcHJveGltaXTDqSBkdSBNwrAgUkVQVUJMSVFVRSB1biAyIHBpw6hjZXMgbHVtaW5ldXggZW4gZG91YmxlIGV4cG9zaXRpb24gU08vTkUuCkVudGllcmVtZW50IMOgIHJlZmFpcmUsLi4uIj4KICAgICAgICA8bWV0YSBuYW1lPSJ0d2l0dGVyOmNhcmQiIGNvbnRlbnQ9InN1bW1hcnkiPgogICAgICAgIDxtZXRhIG5hbWU9InR3aXR0ZXI6c2l0ZSIgY29udGVudD0iQGZvbmNpYSI+CiAgICAKICAgICAgICAgICAgICAgIDxsaW5rIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0iL2NvbXBpbGVkL3N0eWxlcy5jc3M/dmVyc2lvbj0xNTg4MDk3NTU5Ij4KICAgIAogICAgPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPgogICAgdmFyIHRhcnRlYXVjaXRyb25Gb3JjZUNETiA9ICIvYnVuZGxlcy9mb25jaWFpbnRlcm5ldC9qcy90YXJ0ZWF1Y2l0cm9uLyI7Cjwvc2NyaXB0PgoKICAgIDxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0IiBzcmM9Ii9jb21waWxlZC90YXJ0ZWF1Y2l0cm9uLmpzP3ZlcnNpb249MTU4ODA5NzU1OSI+PC9zY3JpcHQ+CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNjcmlwdD53aW5kb3cuZm9uY2lhX2ludGVybmV0PXtwYXJhbXM6e319PC9zY3JpcHQ+CiAgICAgICAgPCEtLVtpZiBJRSA5XT48c2NyaXB0PmRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5jbGFzc05hbWUrPScgSUU5Jzs8L3NjcmlwdD48IVtlbmRpZl0tLT4KPCEtLVtpZiBJRSAxMF0+PHNjcmlwdD5kb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuY2xhc3NOYW1lKz0nIElFMTAnOzwvc2NyaXB0PjwhW2VuZGlmXS0tPgoKPHNjcmlwdD4KIWZ1bmN0aW9uKGEsYil7ImZ1bmN0aW9uIj09dHlwZW9mIGRlZmluZSYmZGVmaW5lLmFtZD9kZWZpbmUoW10sZnVuY3Rpb24oKXtyZXR1cm4gYS5zdmc0ZXZlcnlib2R5PWIoKX0pOiJvYmplY3QiPT10eXBlb2YgZXhwb3J0cz9tb2R1bGUuZXhwb3J0cz1iKCk6YS5zdmc0ZXZlcnlib2R5PWIoKX0odGhpcyxmdW5jdGlvbigpe2Z1bmN0aW9uIGEoYSxiKXtpZihiKXt2YXIgYz1kb2N1bWVudC5jcmVhdGVEb2N1bWVudEZyYWdtZW50KCksZD0hYS5nZXRBdHRyaWJ1dGUoInZpZXdCb3giKSYmYi5nZXRBdHRyaWJ1dGUoInZpZXdCb3giKTtkJiZhLnNldEF0dHJpYnV0ZSgidmlld0JveCIsZCk7Zm9yKHZhciBlPWIuY2xvbmVOb2RlKCEwKTtlLmNoaWxkTm9kZXMubGVuZ3RoOyljLmFwcGVuZENoaWxkKGUuZmlyc3RDaGlsZCk7YS5hcHBlbmRDaGlsZChjKX19ZnVuY3Rpb24gYihiKXtiLm9ucmVhZHlzdGF0ZWNoYW5nZT1mdW5jdGlvbigpe2lmKDQ9PT1iLnJlYWR5U3RhdGUpe3ZhciBjPWIuX2NhY2hlZERvY3VtZW50O2N8fChjPWIuX2NhY2hlZERvY3VtZW50PWRvY3VtZW50LmltcGxlbWVudGF0aW9uLmNyZWF0ZUhUTUxEb2N1bWVudCgiIiksYy5ib2R5LmlubmVySFRNTD1iLnJlc3BvbnNlVGV4dCxiLl9jYWNoZWRUYXJnZXQ9e30pLGIuX2VtYmVkcy5zcGxpY2UoMCkubWFwKGZ1bmN0aW9uKGQpe3ZhciBlPWIuX2NhY2hlZFRhcmdldFtkLmlkXTtlfHwoZT1iLl9jYWNoZWRUYXJnZXRbZC5pZF09Yy5nZXRFbGVtZW50QnlJZChkLmlkKSksYShkLnN2ZyxlKX0pfX0sYi5vbnJlYWR5c3RhdGVjaGFuZ2UoKX1mdW5jdGlvbiBjKGMpe2Z1bmN0aW9uIGQoKXtmb3IodmFyIGM9MDtjPGwubGVuZ3RoOyl7dmFyIGc9bFtjXSxoPWcucGFyZW50Tm9kZTtpZihoJiYvc3ZnL2kudGVzdChoLm5vZGVOYW1lKSl7dmFyIGk9Zy5nZXRBdHRyaWJ1dGUoInhsaW5rOmhyZWYiKTtpZihlJiYoIWYudmFsaWRhdGV8fGYudmFsaWRhdGUoaSxoLGcpKSl7aC5yZW1vdmVDaGlsZChnKTt2YXIgbT1pLnNwbGl0KCIjIiksbj1tLnNoaWZ0KCksbz1tLmpvaW4oIiMiKTtpZihuLmxlbmd0aCl7dmFyIHA9altuXTtwfHwocD1qW25dPW5ldyBYTUxIdHRwUmVxdWVzdCxwLm9wZW4oIkdFVCIsbikscC5zZW5kKCkscC5fZW1iZWRzPVtdKSxwLl9lbWJlZHMucHVzaCh7c3ZnOmgsaWQ6b30pLGIocCl9ZWxzZSBhKGgsZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQobykpfX1lbHNlKytjfWsoZCw2Nyl9dmFyIGUsZj1PYmplY3QoYyksZz0vXGJUcmlkZW50XC9bNTY3XVxifFxiTVNJRSAoPzo5fDEwKVwuMFxiLyxoPS9cYkFwcGxlV2ViS2l0XC8oXGQrKVxiLyxpPS9cYkVkZ2VcLzEyXC4oXGQrKVxiLztlPSJwb2x5ZmlsbCJpbiBmP2YucG9seWZpbGw6Zy50ZXN0KG5hdmlnYXRvci51c2VyQWdlbnQpfHwobmF2aWdhdG9yLnVzZXJBZ2VudC5tYXRjaChpKXx8W10pWzFdPDEwNTQ3fHwobmF2aWdhdG9yLnVzZXJBZ2VudC5tYXRjaChoKXx8W10pWzFdPDUzNzt2YXIgaj17fSxrPXdpbmRvdy5yZXF1ZXN0QW5pbWF0aW9uRnJhbWV8fHNldFRpbWVvdXQsbD1kb2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZSgidXNlIik7ZSYmZCgpfXJldHVybiBjfSk7Cjwvc2NyaXB0Pgo8c2NyaXB0PnN2ZzRldmVyeWJvZHkoKTwvc2NyaXB0PgogICAgCiAgICAgICAgPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiIHNyYz0iaHR0cHM6Ly93d3cuY2l0eXNjYW4uZnIvYXNzZXRzL2J1aWxkL2pzL2xpYi9jaXR5c2Nhbi13aWRnZXQuanMiPjwvc2NyaXB0Pgo8L2hlYWQ+CgoKPGJvZHk+CgogICAgPHNjcmlwdD4KICAgICAgICBkYXRhTGF5ZXIgPSB3aW5kb3cuZGF0YUxheWVyIHx8IHt9OwogICAgICAgIHZhciBvYmplY3QgPSB7CiAgICAgICAgICAgICJ0eXBlU2l0ZSI6ICJnw6luw6lyaXF1ZSIsCiAgICAgICAgICAgICJlc3BhY2UiOiAiZ2VuZXJhbCIsCiAgICAgICAgICAgICJ0eXBlUGFnZSI6ICJjbGFzc2lxdWUiLAogICAgICAgICAgICAidGVtcGxhdGUiOiAicHJvZHVpdCIsCiAgICAgICAgICAgICJ0aGVtZSI6ICJhY2hhdCIKICAgICAgICB9OwoKICAgICAgICBkYXRhTGF5ZXIgPSBbb2JqZWN0XTsKICAgIDwvc2NyaXB0PgoKPHNjcmlwdD4KICAgIGRhdGFMYXllciA9IHdpbmRvdy5kYXRhTGF5ZXIgfHwgW107CgogICAgdmFyIGN1cnJlbnRQYXRoID0gd2luZG93LmxvY2F0aW9uLnBhdGhuYW1lOwoKICAgICAgICAgICAgdmFyIGNvbW1vblVwdGlsYWJWYWx1ZXMgPSB7CiAgICAgICAgInR5cGVTaXRlIjogImfDqW7DqXJpcXVlIiwgLy8gRmV0Y2hlZCBmcm9tIGxheW91dCBnbG9iYWxzCiAgICAgICAgImVzcGFjZSI6ICJnZW5lcmFsIiwKICAgICAgICAidHlwZVBhZ2UiOiAiY2xhc3NpcXVlIiwKICAgICAgICAidGVtcGxhdGUiOiAiYXV0cmVzIgogICAgfTsKCiAgICAvLyBEZXBlbmRpbmcgb24gY3VycmVudCBwYXRobmFtZSwgd2UgZGlzcGF0Y2ggYW4gZXZlbnQsIHVzZWQgZm9yIEJhY2stT2ZmaWNlIHBhZ2VzCiAgICBzd2l0Y2ggKHRydWUpIHsKICAgICAgICBjYXNlIGN1cnJlbnRQYXRoLmluZGV4T2YoIi9hY2hhdC8iKSA9PT0gMDogLy8gUGFnZSBhY2hhdCAoYXZlYyByZWNoZXJjaGUgZW4gY291cnMpCiAgICAgICAgICAgIC8vIEV2ZW50CiAgICAgICAgICAgIGRhdGFMYXllci5wdXNoKHsiY3VzdG9tQ2F0ZWdvcmllIjogImVuZ2FnZW1lbnQiLCAiY3VzdG9tQWN0aW9uIjogImludGVyZXQiLCAiY3VzdG9tTGFiZWwiOiAiQWNoZXRlciIsICJldmVudCI6ICJjdXN0b21FdmVudCJ9KTsKICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgY2FzZSBjdXJyZW50UGF0aC5pbmRleE9mKCIvbG9jYXRpb24vIikgPT09IDA6IC8vIFBhZ2UgbG9jYXRpb24gKGF2ZWMgcmVjaGVyY2hlIGVuIGNvdXJzKQogICAgICAgICAgICAvLyBFdmVudAogICAgICAgICAgICBkYXRhTGF5ZXIucHVzaCh7ImN1c3RvbUNhdGVnb3JpZSI6ICJlbmdhZ2VtZW50IiwgImN1c3RvbUFjdGlvbiI6ICJpbnRlcmV0IiwgImN1c3RvbUxhYmVsIjogIkxvdWVyIiwgImV2ZW50IjogImN1c3RvbUV2ZW50In0pOwogICAgICAgICAgICBicmVhazsKICAgICAgICBjYXNlIGN1cnJlbnRQYXRoLmluZGV4T2YoIi9yZWNoZXJjaGUvcGFjay1lYXN5bG9jIikgPT09IDA6IC8vIExhIHBhZ2UgcGFjay1lYXN5bG9jCiAgICAgICAgICAgIGNvbW1vblVwdGlsYWJWYWx1ZXMudGhlbWUgPSAibG9jYXRpb24iOwogICAgICAgICAgICBkYXRhTGF5ZXIucHVzaChjb21tb25VcHRpbGFiVmFsdWVzKTsKICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgY2FzZSBjdXJyZW50UGF0aC5pbmRleE9mKCIvcmVjaGVyY2hlL2FjaGV0ZXItdW4tYmllbiIpID09PSAwOiAvLyBMYSBwYWdlIGFjaGV0ZXIgdW4gYmllbgogICAgICAgICAgICBjb21tb25VcHRpbGFiVmFsdWVzLnRoZW1lID0gImFjaGF0IjsKICAgICAgICAgICAgZGF0YUxheWVyLnB1c2goY29tbW9uVXB0aWxhYlZhbHVlcyk7CiAgICAgICAgICAgIGJyZWFrOwogICAgICAgIGNhc2UgY3VycmVudFBhdGguaW5kZXhPZigiL2xlLWdyb3VwZSIpID09PSAwOiAvLyBQYWdlIG91IHNvdXMtcGFnZXMgIkxlIGdyb3VwZSIKICAgICAgICAgICAgY29tbW9uVXB0aWxhYlZhbHVlcy50aGVtZSA9ICJncm91cGUiOwogICAgICAgICAgICBkYXRhTGF5ZXIucHVzaChjb21tb25VcHRpbGFiVmFsdWVzKTsKICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgY2FzZSBjdXJyZW50UGF0aC5pbmRleE9mKCIvbC1pbnZlc3Rpc3NlbWVudC1pbW1vYmlsaWVyIikgPT09IDA6IC8vIFBhZ2Ugb3Ugc291cy1wYWdlcyAiTCdpbnZlc3Rpc3NlbWVudCBpbW1vYmlsaWVyIgogICAgICAgICAgICBjb21tb25VcHRpbGFiVmFsdWVzLnRoZW1lID0gImludmVzdGlzc2VtZW50IjsKICAgICAgICAgICAgZGF0YUxheWVyLnB1c2goY29tbW9uVXB0aWxhYlZhbHVlcyk7CiAgICAgICAgICAgIGJyZWFrOwogICAgICAgIGNhc2UgY3VycmVudFBhdGguaW5kZXhPZigiL2ZhaXJlLWdlcmVyLW1hLWxvY2F0aW9uLXBhci1mb25jaWEiKSA9PT0gMDogLy8gUGFnZSBvdSBzb3VzLXBhZ2VzICJGYWlyZSBnw6lyZXIgbWEgbG9jYXRpb24iCiAgICAgICAgICAgIGNvbW1vblVwdGlsYWJWYWx1ZXMudGhlbWUgPSAiZ2VzdGlvbkxvY2F0aXZlIjsKICAgICAgICAgICAgZGF0YUxheWVyLnB1c2goY29tbW9uVXB0aWxhYlZhbHVlcyk7CiAgICAgICAgICAgIGJyZWFrOwogICAgICAgIGNhc2UgY3VycmVudFBhdGguaW5kZXhPZigiL2ZhaXJlLWdlcmVyLXVuZS1jb3Byb3ByaWV0ZSIpID09PSAwOiAvLyBQYWdlIG91IHNvdXMtcGFnZXMgIkZhaXJlIGfDqXJlciB1bmUgY29wcm9wcmnDqXTDqSIKICAgICAgICAgICAgY29tbW9uVXB0aWxhYlZhbHVlcy50aGVtZSA9ICJjb3Byb3ByaWV0ZSI7CiAgICAgICAgICAgIGRhdGFMYXllci5wdXNoKGNvbW1vblVwdGlsYWJWYWx1ZXMpOwogICAgICAgICAgICBicmVhazsKICAgICAgICBjYXNlIGN1cnJlbnRQYXRoLmluZGV4T2YoIi9zZXJ2aWNlcyIpID09PSAwOiAvLyBQYWdlIG91IHNvdXMtcGFnZXMgIkZhaXJlIGfDqXJlciB1bmUgY29wcm9wcmnDqXTDqSIKICAgICAgICAgICAgY29tbW9uVXB0aWxhYlZhbHVlcy50aGVtZSA9ICJzZXJ2aWNlcyI7CiAgICAgICAgICAgIGRhdGFMYXllci5wdXNoKGNvbW1vblVwdGlsYWJWYWx1ZXMpOwogICAgICAgICAgICBicmVhazsKICAgICAgICBjYXNlIGN1cnJlbnRQYXRoID09PSAnL21vdC1kZS1wYXNzZS1vdWJsaWUnOgogICAgICAgICAgICBjb21tb25VcHRpbGFiVmFsdWVzLnRlbXBsYXRlID0gImhvbWVwYWdlIjsKICAgICAgICAgICAgZGF0YUxheWVyLnB1c2goY29tbW9uVXB0aWxhYlZhbHVlcyk7CiAgICAgICAgICAgIGJyZWFrOwogICAgICAgIGNhc2UgY3VycmVudFBhdGggPT09ICcvJzoKICAgICAgICAgICAgY29tbW9uVXB0aWxhYlZhbHVlcy50ZW1wbGF0ZSA9ICJob21lcGFnZSI7CiAgICAgICAgICAgIGRhdGFMYXllci5wdXNoKGNvbW1vblVwdGlsYWJWYWx1ZXMpOwogICAgICAgICAgICBicmVhazsKICAgIH0KICAgIAogICAgPC9zY3JpcHQ+Cjxub3NjcmlwdD48aWZyYW1lIHNyYz0iLy93d3cuZ29vZ2xldGFnbWFuYWdlci5jb20vbnMuaHRtbD9pZD1HVE0tUEJCWldEIiBoZWlnaHQ9IjAiIHdpZHRoPSIwIiBzdHlsZT0iZGlzcGxheTpub25lO3Zpc2liaWxpdHk6aGlkZGVuIj48L2lmcmFtZT48L25vc2NyaXB0Pgo8c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCI+CiAgICB0YXJ0ZWF1Y2l0cm9uLnVzZXIuZ29vZ2xldGFnbWFuYWdlcklkID0gJ0dUTS1QQkJaV0QnOwogICAgKHRhcnRlYXVjaXRyb24uam9iID0gdGFydGVhdWNpdHJvbi5qb2IgfHwgW10pLnB1c2goJ2dvb2dsZXRhZ21hbmFnZXJfZm9uY2lhJyk7CgogICAgdGFydGVhdWNpdHJvbi51c2VyLkFCVGFzdHlJZCA9ICIwZTZkOWVhMjQ3MjgyMDcyY2UzYTg0MTMwZmM4ZTcxMiI7CiAgICAodGFydGVhdWNpdHJvbi5qb2IgPSB0YXJ0ZWF1Y2l0cm9uLmpvYiB8fCBbXSkucHVzaCgnYWJ0YXN0eV9mb25jaWEnKTsKPC9zY3JpcHQ+Cgo8c2NyaXB0PgogICAgICAgIGRhdGFMYXllciA9IHdpbmRvdy5kYXRhTGF5ZXIgfHwgW107CgogICAgICAgIGZ1bmN0aW9uIGRlZmVyKG1ldGhvZCkgewogICAgICAgIGlmICh3aW5kb3cualF1ZXJ5KQogICAgICAgICAgICBtZXRob2QoKTsKICAgICAgICBlbHNlCiAgICAgICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkgewogICAgICAgICAgICAgICAgZGVmZXIobWV0aG9kKQogICAgICAgICAgICB9LCA1MCk7CiAgICB9CgogICAgCiAgICAKPC9zY3JpcHQ+Cgo8ZGl2IGNsYXNzPSJCb2R5V3JhcHBlciI+CgogICAgPGhlYWRlciBjbGFzcz0iSGVhZGVyIiByb2xlPSJiYW5uZXIiPgoKICAgIAogICAgPGRpdiBjbGFzcz0iSGVhZGVyLXRvcCI+CgogICAgICAgICAgICA8dWwgY2xhc3M9IkhlYWRlci10b3BOYXYgSGVhZGVyLXRvcC1sZWZ0Ij4KCiAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL2ZyLmZvbmNpYS5jb20vbm90cmUtYW1iaXRpb24iCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtYmVoYXQ9IkxlZ3JvdXBlIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgTGUgZ3JvdXBlCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cDovL2NhcnJpZXJlLmZvbmNpYS5jb20vIgogICAgICAgICAgICAgICAgICAgICAgICB0YXJnZXQ9Il9ibGFuayIgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtYmVoYXQ9IkNhcnJpw6hyZSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIENhcnJpw6hyZQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHA6Ly9mb25jaWEtcmVjcnV0ZS50YWxlbnQtc29mdC5jb20vYWNjdWVpbC5hc3B4IgogICAgICAgICAgICAgICAgICAgICAgICB0YXJnZXQ9Il9ibGFuayIgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtYmVoYXQ9Ik5vc29mZnJlc2TigJllbXBsb2kiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBOb3Mgb2ZmcmVzIGTigJllbXBsb2kKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL2ZyLmZvbmNpYS5jb20vbW9uLWd1aWRlLWltbW8iCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtYmVoYXQ9Ik1vbkd1aWRlSW1tbyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIE1vbiBHdWlkZSBJbW1vCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cDovL2JlbGxlc3BlcnNvbm5lcy5mb25jaWEuY29tLyIKICAgICAgICAgICAgICAgICAgICAgICAgdGFyZ2V0PSJfYmxhbmsiICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkYXRhLWJlaGF0PSJCZWxsZXNwZXJzb25uZXMiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBCZWxsZXMgcGVyc29ubmVzCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZnIuZm9uY2lhLmNvbS9hY3R1YWxpdGVzLWVuLXBlcmlvZGUtZGUtZGVjb25maW5lbWVudCIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZT0iY29sb3I6ICNGQThBMDA7Zm9udC13ZWlnaHQ6IGJvbGQ7IiAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1iZWhhdD0iQWN0dWFsaXTDqXMiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBBY3R1YWxpdMOpcwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgPC91bD4KICAgIAogICAgPHVsIGNsYXNzPSJIZWFkZXItdG9wTmF2IEhlYWRlci10b3AtcmlnaHQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgPGEgIGNsYXNzPSJJY29uLS1wb2ludGVyIiBocmVmPSJodHRwOi8vYWdlbmNlLmZvbmNpYS5jb20iIGRhdGEtYmVoYXQ9ImhlYWRlclRyb3V2ZXJBZ2VuY2VMaWVuIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFRyb3V2ZXIgdW5lIGFnZW5jZQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC91bD4KPC9kaXY+CgoKICAgIDxwIGNsYXNzPSJIZWFkZXItc2tpcGxpbmsiPgogICAgICAgIDxhIGNsYXNzPSJIZWFkZXItbG9nbyIgaHJlZj0iLyI+CiAgICAgICAgICAgIDxpbWcgY2xhc3M9IkhlYWRlci1sb2dvLS1kZXNrdG9wIiB3aWR0aD0iNjRweCIgaGVpZ2h0PSI2NHB4IiBzcmM9Imh0dHBzOi8vcGhvdG9zLmZvbmNpYS5uZXQvaW1hZ2VzL0ZvbmNpYV9sb2dvaF82Nl82Ni5wbmciIGFsdD0iRm9uY2lhIj4KICAgICAgICAgICAgPGltZyBjbGFzcz0iSGVhZGVyLWxvZ28tLW1vYmlsZSIgd2lkdGg9IjEwOHB4IiBoZWlnaHQ9IjMwcHgiIHNyYz0iaHR0cHM6Ly9waG90b3MuZm9uY2lhLm5ldC9pbWFnZXMvRm9uY2lhX2hvbWVwYWdldl8xMDhfMzAucG5nIiBhbHQ9IkZvbmNpYSI+CiAgICAgICAgPC9hPgogICAgICAgIDxidXR0b24gY2xhc3M9IkhlYWRlci1za2lwbGluay1tZW51IEljb24tLW1lbnUiIGRhdGEtd2lkZ2V0PSJQYW5lbFNsaWRlLXRyaWdlciIgZGF0YS13aWRnZXQtc2lkZT0ibGVmdCI+TWVudTwvYnV0dG9uPgogICAgICAgIDxhIGhyZWY9Ii9sb2dpbiIgY2xhc3M9IkhlYWRlci1za2lwbGluay11c2VyIEljb24tLXVzZXItbWFsZTIiPk15Rk9OQ0lBPC9hPgogICAgPC9wPgoKICAgIDxuYXYgY2xhc3M9Ik1haW5OYXYiIHJvbGU9Im5hdmlnYXRpb24iPgogICAgICAgIDx1bCBjbGFzcz0iTWFpbk5hdi1saXN0IEhlYWRlci10b3BOYXYiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaSBjbGFzcz0iTWFpbk5hdi1pdGVtIE1haW5OYXYtaXRlbS0tbG9jYXRpb24gZmlyc3QiPiAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9mci5mb25jaWEuY29tL2FjaGF0IiAgICA+QWNoZXRlciA8c3Bhbj5vdSBsb3Vlcjwvc3Bhbj48L2E+ICAgICAgICAgICAgCiAgICA8L2xpPgoKICAgICAgICA8bGkgY2xhc3M9Ik1haW5OYXYtaXRlbSBNYWluTmF2LWl0ZW0tLWdlc3Rpb24iPiAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9mci5mb25jaWEuY29tL2ZhaXJlLWdlcmVyLW1hLWxvY2F0aW9uLXBhci1mb25jaWEiICAgID5GYWlyZSBnw6lyZXIgPHNwYW4+bWEgbG9jYXRpb248L3NwYW4+PC9hPiAgICAgICAgICAgIAogICAgPC9saT4KCiAgICAgICAgPGxpIGNsYXNzPSJNYWluTmF2LWl0ZW0gTWFpbk5hdi1pdGVtLS1jb3BybyI+ICAgICAgICA8YSBocmVmPSJodHRwczovL2ZyLmZvbmNpYS5jb20vZmFpcmUtZ2VyZXItdW5lLWNvcHJvcHJpZXRlIiAgICA+RmFpcmUgZ8OpcmVyIDxzcGFuPnVuZSBjb3Byb3ByacOpdMOpPC9zcGFuPjwvYT4gICAgICAgICAgICAKICAgIDwvbGk+CgogICAgICAgIDxsaSBjbGFzcz0iTWFpbk5hdi1pdGVtIE1haW5OYXYtaXRlbS0tdmVudGUiPiAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9mci5mb25jaWEuY29tL2VzdGltZXItZXQtdmVuZHJlIiAgICA+RXN0aW1lciA8c3Bhbj5ldCB2ZW5kcmU8L3NwYW4+PC9hPiAgICAgICAgICAgIAogICAgPC9saT4KCiAgICAgICAgPGxpIGNsYXNzPSJNYWluTmF2LWl0ZW0gTWFpbk5hdi1pdGVtLS1pbnZlc3Rpc3NlbWVudCI+ICAgICAgICA8YSBocmVmPSJodHRwczovL2ZyLmZvbmNpYS5jb20vbC1pbnZlc3Rpc3NlbWVudC1pbW1vYmlsaWVyIiAgICA+SW52ZXN0aXIgPHNwYW4+ZGFucyBsJiMwMzk7aW1tb2JpbGllcjwvc3Bhbj48L2E+ICAgICAgICAgICAgCiAgICA8L2xpPgoKICAgICAgICA8bGkgY2xhc3M9Ik1haW5OYXYtaXRlbSBNYWluTmF2LWl0ZW0tLWxvY2F0aW9udmFjYW5jZXMgbGFzdCI+ICAgICAgICA8YSBocmVmPSJodHRwczovL3d3dy5mb25jaWEtbG9jYXRpb24tdmFjYW5jZXMuZnIvI3V0bV9zb3VyY2U9Zm9uY2lhLmNvbSZhbXA7dXRtX21lZGl1bT1saWVuJmFtcDt1dG1fY2FtcGFpZ249Zm9uY2lhLmNvbSIgICAgIHRhcmdldD0iX2JsYW5rIj5Mb2NhdGlvbiA8c3Bhbj5WYWNhbmNlczwvc3Bhbj48L2E+ICAgICAgICAgICAgCiAgICA8L2xpPgoKCiAgICAKCgogICAgICAgICAgICA8bGkgY2xhc3M9Ik1haW5OYXYtaXRlbSBNYWluTmF2LWl0ZW0tLXVzZXIgbGFzdCI+CiAgICAgICAgICAgICAgICA8YSBocmVmPSIvbG9naW4iPk15Rk9OQ0lBIDxzcGFuPkVTUEFDRSBDTElFTlQ8L3NwYW4+PC9hPgogICAgICAgICAgICA8L2xpPgogICAgICAgIDwvdWw+CiAgICA8L25hdj4KCiAgICA8ZGl2IGNsYXNzPSJVc2VyTmF2IiBpZD0iTXlGb25jaWFNZW51Ij4KCiAgICA8ZGl2IGNsYXNzPSJVc2VyTmF2LW92ZXJmbG93ICI+CiAgICAgICAgCiAgICAgICAgPGRpdiBjbGFzcz0iVXNlckxvZ2luIj4KICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgIDxkaXYgY2xhc3M9IlVzZXJMb2dpbi1pbmZvIj4KICAgICAgICAgICAgPHAgY2xhc3M9IlVzZXJMb2dpbi10aXRsZSI+UHJlbWnDqHJlIGNvbm5leGlvbiA/PC9wPgogICAgCgogICAgCiAgICAgICAgPHAgY2xhc3M9IlVzZXJMb2dpbi1pbGwiPgogICAgICAgICAgICAgICAgPGltZyBzcmM9Imh0dHBzOi8vZnIuZm9uY2lhLmNvbS92YXIvZm9uY2lhL3N0b3JhZ2UvaW1hZ2VzL19hbGlhc2VzL3RodW1iXzIwNV8yMDUvbWVkaWEvaW1hZ2VzL2FpZGUvMzU3MC0yLWZyZS1GUi9BaWRlLnBuZyIgIGFsdD0iIiAvPgogICAgICAgIDwvcD4KCiAgICAKICAgIAogICAgICAgICAgICA8cCBjbGFzcz0iVXNlckxvZ2luLXRleHQiPkxvcnMgZGUgdm90cmUgcHJlbWnDqHJlIGNvbm5leGlvbiDDoCB2b3RyZSBlc3BhY2UgY2xpZW50IE15Rm9uY2lhLCB2b3VzIGRldmV6IHNhaXNpciB2b3RyZSBpZGVudGlmaWFudCBldCBsZSBtb3QgZGUgcGFzc2UgcHJvdmlzb2lyZSBxdWkgdm91cyBvbnQgw6l0w6kgdHJhbnNtaXMgcGFyIHZvdHJlIGFnZW5jZSBvdSBzdXIgdm9zIGRvY3VtZW50cyBjb21wdGFibGVzLjwvcD4KICAgIAoKICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CjxwIGNsYXNzPSJVc2VyTG9naW4tY3JlYXRlIj5QcmVtacOocmUgY29ubmV4aW9uID8gPGEKICAgICAgICAgICAgICAgIGhyZWY9Ii9wcmVtaWVyZS1jb25uZXhpb24tYS1tb24tZXNwYWNlLWNsaWVudC1mb25jaWEiPkTDqWNvdXZyZXogY29tbWVudCB2b3VzIGNvbm5lY3RlcjwvYT48L3A+CgoKICAgICAgICAKICAgICAgICA8L2Rpdj4KCiAgICA8L2Rpdj4KCjwvZGl2PgoKICAgICAgICAgICAgICAgICAgICAgICAgPC9oZWFkZXI+CiAgICAKPCEtLVtpZiBsdGUgSUUgOSBdPgo8ZGl2IGNsYXNzPSJCcm93c2VyQWxlcnQgQnJvd3NlckFsZXJ0LS12aXNpYmxlIj4KICAgIDxkaXYgY2xhc3M9IkJyb3dzZXJBbGVydC1pbm5lciI+CiAgICAgICAgPHNwYW4gY2xhc3M9IkJyb3dzZXJBbGVydC1pY29uIj4KICAgICAgICAgICAgPHN2ZyBjbGFzcz0iaWNvbiIgd2lkdGg9IjMyIiBoZWlnaHQ9IjMyIiBhcmlhLWhpZGRlbj0idHJ1ZSI+PHVzZSB4bGluazpocmVmPSIvYnVuZGxlcy9mb25jaWFpbnRlcm5ldC9zdmcvaWNvbnMuc3ZnI0ljb24tLWluZm8iPjwvdXNlPjwvc3ZnPgogICAgICAgIDwvc3Bhbj4KICAgICAgICA8cCBjbGFzcz0iQnJvd3NlckFsZXJ0LW1lc3NhZ2UiPgogICAgICAgICAgICBBdHRlbnRpb24sIHZvdHJlIG5hdmlnYXRldXIgbuKAmWVzdCBwYXMgw6Agam91ciAhIEFmaW4gZCdhbcOpbGlvcmVyIHZvdHJlIGV4cMOpcmllbmNlIHN1ciBjZSBzaXRlIG5vdXMgdm91cyBjb25zZWlsbG9ucyBkZSBtZXR0cmUgw6Agam91ciB2b3RyZSBuYXZpZ2F0ZXVyIHZlcnMgdW5lIHZlcnNpb24gcGx1cyByw6ljZW50ZQogICAgICAgIDwvcD4KICAgICAgICA8c3BhbiBjbGFzcz0iQnJvd3NlckFsZXJ0LWNsb3NlIj4KICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz0iQnJvd3NlckFsZXJ0LWNsb3NlQnRuIiBhcmlhLWxhYmVsPSJNYXNxdWVyIGNlIG1lc3NhZ2UiPgogICAgICAgICAgICAgICAgPHN2ZyBjbGFzcz0iaWNvbiIgd2lkdGg9IjEyIiBoZWlnaHQ9IjEyIiBhcmlhLWhpZGRlbj0idHJ1ZSI+PHVzZSB4bGluazpocmVmPSIvYnVuZGxlcy9mb25jaWFpbnRlcm5ldC9zdmcvaWNvbnMuc3ZnI0ljb24tLWNsb3NlMiI+PC91c2U+PC9zdmc+CiAgICAgICAgICAgIDwvYnV0dG9uPgogICAgICAgIDwvc3Bhbj4KICAgIDwvZGl2Pgo8L2Rpdj4KPCFbZW5kaWZdLS0+CgoKCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9IkJyZWFkY3J1bWJzIj4KICAgICAgICAgICAgPHAgICAgIGNsYXNzPSJCcmVhZGNydW1icy1pbm5lciIgZGF0YS10eXBlPSJ5b2xvIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3Bhbj5Gb25jaWE8L3NwYW4+ICAgICAgICAgICAgICAgICAgICAgICAgICAgIAoKICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iL2FjaGF0IiAgICAgY2xhc3M9IkJyZWFkY3J1bWJzLWxpbmsiPkFjaGF0PC9hPiAgICAgICAgICAgICAgICAgICAgICAgICAgICAKCiAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Ii9hY2hhdC9wYXJpcy03NTAxMSIgICAgIGNsYXNzPSJCcmVhZGNydW1icy1saW5rIj5QYXJpcyAoNzUwMTEpPC9hPiAgICAgICAgICAgICAgICAgICAgICAgICAgICAKCiAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuPkFwcGFydGVtZW50PC9zcGFuPiAgICAgICAgICAgICAgICAgICAgICAgICAgICAKCiAgICAKCiAgICAgICAgICAgIDwvcD4KICAgICAgICA8L2Rpdj4KICAgIAoKCiAgICAgICAgICAgICAgICAgICAgICAgIAogICAgCiAgICAKICAgIDxkaXYgY2xhc3M9IkNvbnRlbnQiPgoKICAgICAgICA8ZGl2IGNsYXNzPSJDb250ZW50LWJhbmRvIENvbnRlbnQtYmFuZG8tLWdyYWRpZW50Ij48L2Rpdj4KCiAgICAgICAgPGRpdiBjbGFzcz0iUmVzdWx0c05hdiIgZGF0YS1wcm9wZXJ0eS1yZWZlcmVuY2U9IjEzOTMxOTYiPgoKICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICA8c2VjdGlvbiBjbGFzcz0iQ29udGVudC1yb3cgQ29udGVudC1yb3ctLWJsZWVkIj4KICAgICAgICAgICAgICAgIDxkaXYgaWQ9ImNpdHlzY2FuLXdpZGdldCIKICAgICBkYXRhLWNsaWVudC1rZXk9ImV3TWxiR2Zqcllzd3l3UkgiCiAgICAgZGF0YS1leHQtYWRkcmVzcy1pZD0iVDEzOTMxOTYiCiAgICAgZGF0YS1sYW5ndWFnZT0iZnItRlIiCiAgICAgICAgICBjbGFzcz0iT2ZmZXJNYXAiPjwvZGl2PiAgICAgICAgICAgIDwvc2VjdGlvbj4KICAgICAgICAgICAgICAgIDxzZWN0aW9uIGNsYXNzPSJDb250ZW50LXJvdyBDb250ZW50LXJvdy0tZ3JheSI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9IkNvbnRlbnQtb3ZlcmZsb3ciPgoKICAgICAgICAgICAgICAgIDxtYWluIGNsYXNzPSJDb250ZW50LW1haW4iIHJvbGU9Im1haW4iPgoKICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJPZmZlclRvcCI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Ik9mZmVyVG9wLWhlYWQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxoMSBjbGFzcz0iT2ZmZXJUb3AtdGl0bGUiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEFwcGFydGVtZW50CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgMiBwacOoY2VzICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICDDoCB2ZW5kcmUKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9oMT4KICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJPZmZlclRvcC1mYXYiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz0iRmF2QnRuIEZhdkJ0bi0taW5hY3RpdmUiIGFyaWEtbGFiZWw9IkFqb3V0ZXIgYXV4IGZhdm9yaXMiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzdmcgY2xhc3M9Imljb24iIHN0eWxlPSJ3aWR0aDoxNXB4O2hlaWdodDoxNXB4IiBhcmlhLWhpZGRlbj0idHJ1ZSI+PHVzZSB4bGluazpocmVmPSIvYnVuZGxlcy9mb25jaWFpbnRlcm5ldC9zdmcvaWNvbnMuc3ZnI0ljb24tLXN0YXIyIj48L3VzZT48L3N2Zz4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYnV0dG9uPgogICAgICAgICAgICAgICAgICAgICAgICA8L3A+CgogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJPZmZlclRvcC1jb2xzIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Ik9mZmVyVG9wLWNvbCBPZmZlclRvcC1jb2wtLWxlZnQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJPZmZlclRvcC1wcmljZSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAzNzEgMDAwJm5ic3A74oKsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9wPgoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0iT2ZmZXJUb3AtaW5mbyI+SG9ub3JhaXJlcyBkJ2FnZW5jZSDDoCBsYSBjaGFyZ2UgZHUgdmVuZGV1cjwvcD4KCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9Ik9mZmVyVG9wLWxvYyIgZGF0YS1ndG0temlwY29kZT0iNzUwMTEiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3ZnIGNsYXNzPSJpY29uIiBzdHlsZT0id2lkdGg6MTZweDtoZWlnaHQ6MTZweCIgYXJpYS1oaWRkZW49InRydWUiPjx1c2UgeGxpbms6aHJlZj0iL2J1bmRsZXMvZm9uY2lhaW50ZXJuZXQvc3ZnL2ljb25zLnN2ZyNJY29uLS1wb2ludGVyMyI+PC91c2U+PC9zdmc+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDc1MDExIFBhcmlzICg3NTAxMSkKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3A+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Ik9mZmVyVG9wLWNvbCBPZmZlclRvcC1jb2wtLXJpZ2h0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJNaW5pRGF0YSBNaW5pRGF0YS0tZmxleCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Ik1pbmlEYXRhLXJvdyBNaW5pRGF0YS1yb3ctLWJnIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9Ik1pbmlEYXRhLWl0ZW0iPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAzMy40IG08c3VwPjI8L3N1cD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3A+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0iTWluaURhdGEtaXRlbSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDIgcGnDqGNlcyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJPZmZlclNsaWRlciI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iT2ZmZXJTbGlkZXItbWFpbiIgaWQ9Ik9mZmVyU2xpZGVyTWFpbiI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx1bCBjbGFzcz0iT2ZmZXJTbGlkZXItbWFpbi1zbGlkZXMiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGkgY2xhc3M9Ik9mZmVyU2xpZGVyLW1haW4taXRlbSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgc3JjPSJodHRwOi8vcGhvdG9zLmZyLmZvbmNpYS5jb20vbWluaWNwLzY0MC80ODAvcGhvdG9zLzEzOTMvMTk2LzEzOTMxOTYvZ3JhbmQvMTM5MzE5Nl8xNGExYzI3NmI3M2ZiNDgwZGIyY2RkNDcyZTFlZTRmMDVlNTY2ZWRhMmJkNDEuanBnP2RhdGVtYWo9MjAyMC0wMi0yNiAxNDoxMzowNi45ODIiIHdpZHRoPSI2MDAiIGhlaWdodD0iNDUwIiBhbHQ9IkFwcGFydGVtZW50IMOgIHZlbmRyZSwgUGFyaXMgKDc1MDExKSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpIGNsYXNzPSJPZmZlclNsaWRlci1tYWluLWl0ZW0iPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW1nIHNyYz0iaHR0cDovL3Bob3Rvcy5mci5mb25jaWEuY29tL21pbmljcC82NDAvNDgwL3Bob3Rvcy8xMzkzLzE5Ni8xMzkzMTk2L2dyYW5kLzEzOTMxOTZfMGQ2NGU4ZjFjMzg2MTY1MWU0ZjY4MTMyMGI1MDc2Mzk1ZTRlY2IyM2NlZjJkLmpwZz9kYXRlbWFqPTIwMjAtMDItMjYgMTQ6MTM6MDcuMDEzIiB3aWR0aD0iNjAwIiBoZWlnaHQ9IjQ1MCIgYWx0PSJBcHBhcnRlbWVudCDDoCB2ZW5kcmUsIFBhcmlzICg3NTAxMSkiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaSBjbGFzcz0iT2ZmZXJTbGlkZXItbWFpbi1pdGVtIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBzcmM9Imh0dHA6Ly9waG90b3MuZnIuZm9uY2lhLmNvbS9taW5pY3AvNjQwLzQ4MC9waG90b3MvMTM5My8xOTYvMTM5MzE5Ni9ncmFuZC8xMzkzMTk2XzQ5MWU0NjYxY2Y1MmM5ZjE0MzExZTYxOTA2NzJjNWZmNWU0ZWNiMmUyNWRiOS5qcGc/ZGF0ZW1haj0yMDIwLTAyLTI2IDE0OjEzOjA3LjM0MSIgd2lkdGg9IjYwMCIgaGVpZ2h0PSI0NTAiIGFsdD0iQXBwYXJ0ZW1lbnQgw6AgdmVuZHJlLCBQYXJpcyAoNzUwMTEpIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGkgY2xhc3M9Ik9mZmVyU2xpZGVyLW1haW4taXRlbSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgc3JjPSJodHRwOi8vcGhvdG9zLmZyLmZvbmNpYS5jb20vbWluaWNwLzY0MC80ODAvcGhvdG9zLzEzOTMvMTk2LzEzOTMxOTYvZ3JhbmQvMTM5MzE5Nl9kNjc0NmNlMmVjYWE1N2E0NDYwNGFhMDM5MThmNWQ4OTVlNGVjYmIzOTUzODcuanBnP2RhdGVtYWo9MjAyMC0wMi0yNiAxNDoxMzowNy4zNzIiIHdpZHRoPSI2MDAiIGhlaWdodD0iNDUwIiBhbHQ9IkFwcGFydGVtZW50IMOgIHZlbmRyZSwgUGFyaXMgKDc1MDExKSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpIGNsYXNzPSJPZmZlclNsaWRlci1tYWluLWl0ZW0iPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW1nIHNyYz0iaHR0cDovL3Bob3Rvcy5mci5mb25jaWEuY29tL21pbmljcC82NDAvNDgwL3Bob3Rvcy8xMzkzLzE5Ni8xMzkzMTk2L2dyYW5kLzEzOTMxOTZfYzg5OGQyYWY1M2IyOGUyYjc1Yjk1NDJmY2Y2NTc3YjQ1ZTRlY2JlMjM2ZjMyLmpwZz9kYXRlbWFqPTIwMjAtMDItMjYgMTQ6MTM6MDcuNzAwIiB3aWR0aD0iNjAwIiBoZWlnaHQ9IjQ1MCIgYWx0PSJBcHBhcnRlbWVudCDDoCB2ZW5kcmUsIFBhcmlzICg3NTAxMSkiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaSBjbGFzcz0iT2ZmZXJTbGlkZXItbWFpbi1pdGVtIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBzcmM9Imh0dHA6Ly9waG90b3MuZnIuZm9uY2lhLmNvbS9taW5pY3AvNjQwLzQ4MC9waG90b3MvMTM5My8xOTYvMTM5MzE5Ni9ncmFuZC8xMzkzMTk2XzJhYjZjMDA1NjA4OWJmMmY5ZDRlYWUyMTA3YTQ3MGMwNWU0ZWNiYzg5NjEzNC5qcGc/ZGF0ZW1haj0yMDIwLTAyLTI2IDE0OjEzOjA3Ljc0NiIgd2lkdGg9IjYwMCIgaGVpZ2h0PSI0NTAiIGFsdD0iQXBwYXJ0ZW1lbnQgw6AgdmVuZHJlLCBQYXJpcyAoNzUwMTEpIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGkgY2xhc3M9Ik9mZmVyU2xpZGVyLW1haW4taXRlbSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgc3JjPSJodHRwOi8vcGhvdG9zLmZyLmZvbmNpYS5jb20vbWluaWNwLzY0MC80ODAvcGhvdG9zLzEzOTMvMTk2LzEzOTMxOTYvZ3JhbmQvMTM5MzE5Nl80YTQwZDg5M2I0OWFiMTg5N2E3Y2VhY2RhOGM4NTdmMDVlNGVjYmQzYjUzN2IuanBnP2RhdGVtYWo9MjAyMC0wMi0yNiAxNDoxMzowNy44MDkiIHdpZHRoPSI2MDAiIGhlaWdodD0iNDUwIiBhbHQ9IkFwcGFydGVtZW50IMOgIHZlbmRyZSwgUGFyaXMgKDc1MDExKSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpIGNsYXNzPSJPZmZlclNsaWRlci1tYWluLWl0ZW0iPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW1nIHNyYz0iaHR0cDovL3Bob3Rvcy5mci5mb25jaWEuY29tL21pbmljcC82NDAvNDgwL3Bob3Rvcy8xMzkzLzE5Ni8xMzkzMTk2L2dyYW5kLzEzOTMxOTZfYzNhMzE2ODQxMTNjZDNlYWRhMzM2NTkyNTVhMjg2NDU1ZTRlY2MxYTU5NDhkLmpwZz9kYXRlbWFqPTIwMjAtMDItMjYgMTQ6MTM6MDguMTA1IiB3aWR0aD0iNjAwIiBoZWlnaHQ9IjQ1MCIgYWx0PSJBcHBhcnRlbWVudCDDoCB2ZW5kcmUsIFBhcmlzICg3NTAxMSkiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3VsPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0iT2ZmZXJTbGlkZXItbWFpbi1jb3VudCI+PC9wPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJPZmZlclNsaWRlci1jb250YWluZXIiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJPZmZlclNsaWRlci10aHVtYnMgT2ZmZXJTbGlkZXItdGh1bWJzLS1taW5pIiBpZD0iT2ZmZXJTbGlkZXJUaHVtYnMiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHVsIGNsYXNzPSJPZmZlclNsaWRlci10aHVtYnMtc2xpZGVzIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGkgY2xhc3M9Ik9mZmVyU2xpZGVyLXRodW1icy1pdGVtIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgc3JjPSJodHRwOi8vcGhvdG9zLmZyLmZvbmNpYS5jb20vbWluaWNwLzY0MC80ODAvcGhvdG9zLzEzOTMvMTk2LzEzOTMxOTYvZ3JhbmQvMTM5MzE5Nl8xNGExYzI3NmI3M2ZiNDgwZGIyY2RkNDcyZTFlZTRmMDVlNTY2ZWRhMmJkNDEuanBnP2RhdGVtYWo9MjAyMC0wMi0yNiAxNDoxMzowNi45ODIiIHdpZHRoPSI2MDAiIGhlaWdodD0iNDUwIiBhbHQ9IkFwcGFydGVtZW50IMOgIHZlbmRyZSwgUGFyaXMgKDc1MDExKSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpIGNsYXNzPSJPZmZlclNsaWRlci10aHVtYnMtaXRlbSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW1nIHNyYz0iaHR0cDovL3Bob3Rvcy5mci5mb25jaWEuY29tL21pbmljcC82NDAvNDgwL3Bob3Rvcy8xMzkzLzE5Ni8xMzkzMTk2L2dyYW5kLzEzOTMxOTZfMGQ2NGU4ZjFjMzg2MTY1MWU0ZjY4MTMyMGI1MDc2Mzk1ZTRlY2IyM2NlZjJkLmpwZz9kYXRlbWFqPTIwMjAtMDItMjYgMTQ6MTM6MDcuMDEzIiB3aWR0aD0iNjAwIiBoZWlnaHQ9IjQ1MCIgYWx0PSJBcHBhcnRlbWVudCDDoCB2ZW5kcmUsIFBhcmlzICg3NTAxMSkiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaSBjbGFzcz0iT2ZmZXJTbGlkZXItdGh1bWJzLWl0ZW0iPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBzcmM9Imh0dHA6Ly9waG90b3MuZnIuZm9uY2lhLmNvbS9taW5pY3AvNjQwLzQ4MC9waG90b3MvMTM5My8xOTYvMTM5MzE5Ni9ncmFuZC8xMzkzMTk2XzQ5MWU0NjYxY2Y1MmM5ZjE0MzExZTYxOTA2NzJjNWZmNWU0ZWNiMmUyNWRiOS5qcGc/ZGF0ZW1haj0yMDIwLTAyLTI2IDE0OjEzOjA3LjM0MSIgd2lkdGg9IjYwMCIgaGVpZ2h0PSI0NTAiIGFsdD0iQXBwYXJ0ZW1lbnQgw6AgdmVuZHJlLCBQYXJpcyAoNzUwMTEpIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGkgY2xhc3M9Ik9mZmVyU2xpZGVyLXRodW1icy1pdGVtIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgc3JjPSJodHRwOi8vcGhvdG9zLmZyLmZvbmNpYS5jb20vbWluaWNwLzY0MC80ODAvcGhvdG9zLzEzOTMvMTk2LzEzOTMxOTYvZ3JhbmQvMTM5MzE5Nl9kNjc0NmNlMmVjYWE1N2E0NDYwNGFhMDM5MThmNWQ4OTVlNGVjYmIzOTUzODcuanBnP2RhdGVtYWo9MjAyMC0wMi0yNiAxNDoxMzowNy4zNzIiIHdpZHRoPSI2MDAiIGhlaWdodD0iNDUwIiBhbHQ9IkFwcGFydGVtZW50IMOgIHZlbmRyZSwgUGFyaXMgKDc1MDExKSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpIGNsYXNzPSJPZmZlclNsaWRlci10aHVtYnMtaXRlbSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW1nIHNyYz0iaHR0cDovL3Bob3Rvcy5mci5mb25jaWEuY29tL21pbmljcC82NDAvNDgwL3Bob3Rvcy8xMzkzLzE5Ni8xMzkzMTk2L2dyYW5kLzEzOTMxOTZfYzg5OGQyYWY1M2IyOGUyYjc1Yjk1NDJmY2Y2NTc3YjQ1ZTRlY2JlMjM2ZjMyLmpwZz9kYXRlbWFqPTIwMjAtMDItMjYgMTQ6MTM6MDcuNzAwIiB3aWR0aD0iNjAwIiBoZWlnaHQ9IjQ1MCIgYWx0PSJBcHBhcnRlbWVudCDDoCB2ZW5kcmUsIFBhcmlzICg3NTAxMSkiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaSBjbGFzcz0iT2ZmZXJTbGlkZXItdGh1bWJzLWl0ZW0iPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBzcmM9Imh0dHA6Ly9waG90b3MuZnIuZm9uY2lhLmNvbS9taW5pY3AvNjQwLzQ4MC9waG90b3MvMTM5My8xOTYvMTM5MzE5Ni9ncmFuZC8xMzkzMTk2XzJhYjZjMDA1NjA4OWJmMmY5ZDRlYWUyMTA3YTQ3MGMwNWU0ZWNiYzg5NjEzNC5qcGc/ZGF0ZW1haj0yMDIwLTAyLTI2IDE0OjEzOjA3Ljc0NiIgd2lkdGg9IjYwMCIgaGVpZ2h0PSI0NTAiIGFsdD0iQXBwYXJ0ZW1lbnQgw6AgdmVuZHJlLCBQYXJpcyAoNzUwMTEpIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGkgY2xhc3M9Ik9mZmVyU2xpZGVyLXRodW1icy1pdGVtIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgc3JjPSJodHRwOi8vcGhvdG9zLmZyLmZvbmNpYS5jb20vbWluaWNwLzY0MC80ODAvcGhvdG9zLzEzOTMvMTk2LzEzOTMxOTYvZ3JhbmQvMTM5MzE5Nl80YTQwZDg5M2I0OWFiMTg5N2E3Y2VhY2RhOGM4NTdmMDVlNGVjYmQzYjUzN2IuanBnP2RhdGVtYWo9MjAyMC0wMi0yNiAxNDoxMzowNy44MDkiIHdpZHRoPSI2MDAiIGhlaWdodD0iNDUwIiBhbHQ9IkFwcGFydGVtZW50IMOgIHZlbmRyZSwgUGFyaXMgKDc1MDExKSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpIGNsYXNzPSJPZmZlclNsaWRlci10aHVtYnMtaXRlbSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW1nIHNyYz0iaHR0cDovL3Bob3Rvcy5mci5mb25jaWEuY29tL21pbmljcC82NDAvNDgwL3Bob3Rvcy8xMzkzLzE5Ni8xMzkzMTk2L2dyYW5kLzEzOTMxOTZfYzNhMzE2ODQxMTNjZDNlYWRhMzM2NTkyNTVhMjg2NDU1ZTRlY2MxYTU5NDhkLmpwZz9kYXRlbWFqPTIwMjAtMDItMjYgMTQ6MTM6MDguMTA1IiB3aWR0aD0iNjAwIiBoZWlnaHQ9IjQ1MCIgYWx0PSJBcHBhcnRlbWVudCDDoCB2ZW5kcmUsIFBhcmlzICg3NTAxMSkiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3VsPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9Ik9mZmVyU2xpZGVyLWV4dHJhIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3A+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KCgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Ik9mZmVyRGV0YWlscyI+CgogICAgICAgICAgICAgICAgICAgICAgICA8c2VjdGlvbiBjbGFzcz0iT2ZmZXJEZXRhaWxzLXNlY3Rpb24iPgoKICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJPZmZlckRldGFpbHMtcmVmIj5Sw6lmLiAxMzkzMTk2PC9wPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGgyIGNsYXNzPSJPZmZlckRldGFpbHMtdGl0bGUiPkRlc2NyaXB0aW9uIGTDqXRhaWxsw6llPC9oMj4KCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJPZmZlckRldGFpbHMtY29udGVudCI+CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwPlJVRSBERSBNQUxURS4KRGFucyB1bmUgcGV0aXRlIGNvcHJvcHJpw6l0w6kgYmllbiB0ZW51ZSDDoCBwcm94aW1pdMOpIGR1IE3CsCBSRVBVQkxJUVVFIHVuIDIgcGnDqGNlcyBsdW1pbmV1eCBlbiBkb3VibGUgZXhwb3NpdGlvbiBTTy9ORS4KRW50aWVyZW1lbnQgw6AgcmVmYWlyZSwgSWwgb2ZmcmUgZGUgbm9tYnJldXNlcyBwb3NzaWJpbGl0w6lzIGQnYW3DqW5hZ2VtZW50cy4KVW5lIGNhdmUgZW4gc291cy1zb2wgY29tcGzDqHRlIGNlIGJpZW4uICAKRk9OQ0lBIFZPTFRBSVJFIDAxLjUzLjM2LjEzLjAwPC9wPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Ik9mZmVyRGV0YWlscy1jb2x1bW5pemUiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBkYXRhLXdpZGdldD0iVG9nZ2xlQmxvY2tNb2JpbGUiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxoMyBjbGFzcz0iT2ZmZXJEZXRhaWxzLXRpdGxlLS0yIiBkYXRhLXdpZGdldD0iVG9nZ2xlQmxvY2tNb2JpbGUtdHJpZ2dlciIgZGF0YS1iZWhhdD0iY2FyYWN0RHVCaWVuIj5DYXJhY3TDqXJpc3RpcXVlcyBkdSBiaWVuPC9oMz4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGRhdGEtd2lkZ2V0PSJUb2dnbGVCbG9ja01vYmlsZS1jb250ZW50Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx1bCBjbGFzcz0iTGlzdCBMaXN0LS1kYXRhIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGk+PHNwYW4gY2xhc3M9Ikxpc3QtZGF0YSI+Q2F2ZShzKTwvc3Bhbj4gPHN0cm9uZyBjbGFzcz0iTGlzdC12YWx1ZSI+b3VpPC9zdHJvbmc+PC9saT48bGk+PHNwYW4gY2xhc3M9Ikxpc3QtZGF0YSI+Tm9tYnJlIGRlIHBpw6hjZXM8L3NwYW4+IDxzdHJvbmcgY2xhc3M9Ikxpc3QtdmFsdWUiPjI8L3N0cm9uZz48L2xpPjxsaT48c3BhbiBjbGFzcz0iTGlzdC1kYXRhIj5Db25zdHJ1Y3Rpb248L3NwYW4+IDxzdHJvbmcgY2xhc3M9Ikxpc3QtdmFsdWUiPjE4NzU8L3N0cm9uZz48L2xpPjxsaT48c3BhbiBjbGFzcz0iTGlzdC1kYXRhIj7DiXRhZ2U8L3NwYW4+IDxzdHJvbmcgY2xhc3M9Ikxpc3QtdmFsdWUiPjQ8L3N0cm9uZz48L2xpPjxsaT48c3BhbiBjbGFzcz0iTGlzdC1kYXRhIj5Ob21icmUgZCfDqXRhZ2VzPC9zcGFuPiA8c3Ryb25nIGNsYXNzPSJMaXN0LXZhbHVlIj42PC9zdHJvbmc+PC9saT48bGk+PHNwYW4gY2xhc3M9Ikxpc3QtZGF0YSI+VHlwZSBkZSBjdWlzaW5lPC9zcGFuPiA8c3Ryb25nIGNsYXNzPSJMaXN0LXZhbHVlIj5JbmTDqXBlbmRhbnRlPC9zdHJvbmc+PC9saT48bGk+PHNwYW4gY2xhc3M9Ikxpc3QtZGF0YSI+w4l0YXQgY3Vpc2luZTwvc3Bhbj4gPHN0cm9uZyBjbGFzcz0iTGlzdC12YWx1ZSI+TnVlPC9zdHJvbmc+PC9saT48bGk+PHNwYW4gY2xhc3M9Ikxpc3QtZGF0YSI+TW9kZSBjaGF1ZmZhZ2U8L3NwYW4+IDxzdHJvbmcgY2xhc3M9Ikxpc3QtdmFsdWUiPkluZGl2aWR1ZWw8L3N0cm9uZz48L2xpPjxsaT48c3BhbiBjbGFzcz0iTGlzdC1kYXRhIj5OYXR1cmUgY2hhdWZmYWdlPC9zcGFuPiA8c3Ryb25nIGNsYXNzPSJMaXN0LXZhbHVlIj5FbGVjdHJpcXVlPC9zdHJvbmc+PC9saT48bGk+PHNwYW4gY2xhc3M9Ikxpc3QtZGF0YSI+Q2F0w6lnb3JpZTwvc3Bhbj4gPHN0cm9uZyBjbGFzcz0iTGlzdC12YWx1ZSI+QW5jaWVuPC9zdHJvbmc+PC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdWw+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBkYXRhLXdpZGdldD0iVG9nZ2xlQmxvY2tNb2JpbGUiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aDMgY2xhc3M9Ik9mZmVyRGV0YWlscy10aXRsZS0tMiIgZGF0YS13aWRnZXQ9IlRvZ2dsZUJsb2NrTW9iaWxlLXRyaWdnZXIiPkluZm9ybWF0aW9uIGNvcHJvcHJpw6l0w6k8L2gzPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGRhdGEtd2lkZ2V0PSJUb2dnbGVCbG9ja01vYmlsZS1jb250ZW50Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHVsIGNsYXNzPSJMaXN0IExpc3QtLWRhdGEiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGk+PHNwYW4gY2xhc3M9Ikxpc3QtZGF0YSI+Tm9tYnJlIGRlIGxvdHM8L3NwYW4+IDxzdHJvbmcgY2xhc3M9Ikxpc3QtdmFsdWUiPjIwPC9zdHJvbmc+PC9saT48bGk+PHNwYW4gY2xhc3M9Ikxpc3QtZGF0YSI+Q2hhcmdlcyBhbm51ZWxsZXM8L3NwYW4+IDxzdHJvbmcgY2xhc3M9Ikxpc3QtdmFsdWUiPjEyNjcuOTIg4oKsPC9zdHJvbmc+PC9saT48bGk+PHNwYW4gY2xhc3M9Ikxpc3QtZGF0YSI+Q29wcm9wcmlldMOpIGVuIGRpZmZpY3VsdMOpPC9zcGFuPiA8c3Ryb25nIGNsYXNzPSJMaXN0LXZhbHVlIj5ub248L3N0cm9uZz48L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdWw+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgZGF0YS13aWRnZXQ9IlRvZ2dsZUJsb2NrTW9iaWxlIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aDMgY2xhc3M9Ik9mZmVyRGV0YWlscy10aXRsZS0tMiIgZGF0YS13aWRnZXQ9IlRvZ2dsZUJsb2NrTW9iaWxlLXRyaWdnZXIiIGRhdGEtYmVoYXQ9InN1cmZhY2VCaWVuIj5TdXJmYWNlczwvaDM+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBkYXRhLXdpZGdldD0iVG9nZ2xlQmxvY2tNb2JpbGUtY29udGVudCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx1bCBjbGFzcz0iTGlzdCBMaXN0LS1kYXRhIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaT48c3BhbiBjbGFzcz0iTGlzdC1kYXRhIj5TdXJmYWNlIGhhYml0YWJsZTwvc3Bhbj4gPHN0cm9uZyBjbGFzcz0iTGlzdC12YWx1ZSI+MzMuNCBtwrI8L3N0cm9uZz48L2xpPjxsaT48c3BhbiBjbGFzcz0iTGlzdC1kYXRhIj5TdXJmYWNlIENhcnJlejwvc3Bhbj4gPHN0cm9uZyBjbGFzcz0iTGlzdC12YWx1ZSI+MzMuNCBtwrI8L3N0cm9uZz48L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3VsPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAoKCgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBkYXRhLXdpZGdldD0iVG9nZ2xlQmxvY2tNb2JpbGUiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxoMyBjbGFzcz0iT2ZmZXJEZXRhaWxzLXRpdGxlLS0yIiBkYXRhLXdpZGdldD0iVG9nZ2xlQmxvY2tNb2JpbGUtdHJpZ2dlciIgZGF0YS1iZWhhdD0iY29tbW9kaXRlc0JpZW4iPkNvbW1vZGl0w6lzPC9oMz4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGRhdGEtd2lkZ2V0PSJUb2dnbGVCbG9ja01vYmlsZS1jb250ZW50Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHVsIGNsYXNzPSJMaXN0IExpc3QtLWJ1bGxldCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGk+Q2hlbWluw6llPC9saT48bGk+Q2F2ZShzKTwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdWw+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCgoKCgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBkYXRhLXdpZGdldD0iVG9nZ2xlQmxvY2tNb2JpbGUiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxoMyBjbGFzcz0iT2ZmZXJEZXRhaWxzLXRpdGxlLS0yIiBkYXRhLXdpZGdldD0iVG9nZ2xlQmxvY2tNb2JpbGUtdHJpZ2dlciIgZGF0YS1iZWhhdD0iZGl2ZXJzQmllbiI+RGl2ZXJzPC9oMz4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGRhdGEtd2lkZ2V0PSJUb2dnbGVCbG9ja01vYmlsZS1jb250ZW50Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx1bCBjbGFzcz0iTGlzdCBMaXN0LS1idWxsZXQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaT5EaWdpY29kZTwvbGk+PGxpPlNvY2nDqXTDqSBkZSBuZXR0b3lhZ2U8L2xpPjxsaT5DaGVtaW7DqWU8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC91bD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9Ik9mZmVyRGV0YWlscy1iYXJlbWUiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwOi8vYWdlbmNlLmZvbmNpYS5jb20vcGFyaXMtNzUwMTEvYWdlbmNlLWltbW9iaWxpZXJlL2ZvbmNpYS10cmFuc2FjdGlvbi1wYXJpcy12b2x0YWlyZS0xMTMyIiByZWw9Im5vZm9sbG93IiB0YXJnZXQ9Il9ibGFuayI+Vm9pciBsZSBiYXLDqG1lIGRlIGwnYWdlbmNlPC9hPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvcD4KCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iTGVnYWxNZW50aW9ucyBMZWdhbE1lbnRpb25zLS1zbWFsbCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgICAgICAgICAgICAgIDwvc2VjdGlvbj4KCiAgICAgICAgICAgICAgICAgICAgICAgIAoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICAgICAgICAgIAo8cCBjbGFzcz0iU2hhcmUiPgogICAgPGEgaWQ9IkZhY2Vib29rIiBocmVmPSJodHRwczovL3d3dy5mYWNlYm9vay5jb20vc2hhcmVyL3NoYXJlci5waHA/dT1odHRwczovL2ZyLmZvbmNpYS5jb20vYWNoYXQvcGFyaXMtNzUwMTEvYXBwYXJ0ZW1lbnQvMTM5MzE5Ni5odG0iIHRhcmdldD0iX2JsYW5rIiBjbGFzcz0iU2hhcmUtaXRlbSBTaGFyZS1GYWNlYm9vayI+CiAgICAgICAgPHN2ZyBjbGFzcz0iaWNvbiIgc3R5bGU9IndpZHRoOjI0cHg7aGVpZ2h0OjI0cHgiIGFyaWEtaGlkZGVuPSJ0cnVlIj48dXNlIHhsaW5rOmhyZWY9Ii9idW5kbGVzL2ZvbmNpYWludGVybmV0L3N2Zy9pY29ucy5zdmcjSWNvbi0tZmFjZWJvb2siPjwvdXNlPjwvc3ZnPgogICAgICAgIDxzcGFuIGNsYXNzPSJTaGFyZS1sYWJlbCI+UGFydGFnZXIgY2UgY29udGVudSBzdXIgRmFjZWJvb2s8L3NwYW4+CiAgICA8L2E+CgogICAgPGEgaWQ9IlR3aXR0ZXIiIGNsYXNzPSJTaGFyZS1pdGVtIgogICAgICAgaHJlZj0iaHR0cHM6Ly90d2l0dGVyLmNvbS9pbnRlbnQvdHdlZXQ/dGV4dD1BcHBhcnRlbWVudCAyIHBpw6hjZXMgw6AgdmVuZHJlJnVybD1odHRwcyUzQSUyRiUyRmZyLmZvbmNpYS5jb20lMkZhY2hhdCUyRnBhcmlzLTc1MDExJTJGYXBwYXJ0ZW1lbnQlMkYxMzkzMTk2Lmh0bSZ2aWE9Zm9uY2lhIgogICAgICAgICAgICAgIGRhdGEtc2l6ZT0ibGFyZ2UiCiAgICAgICB0YXJnZXQ9Il9ibGFuayIgPgogICAgICAgIDxzdmcgY2xhc3M9Imljb24iIHN0eWxlPSJ3aWR0aDoyNHB4O2hlaWdodDoyNHB4IiBhcmlhLWhpZGRlbj0idHJ1ZSI+PHVzZSB4bGluazpocmVmPSIvYnVuZGxlcy9mb25jaWFpbnRlcm5ldC9zdmcvaWNvbnMuc3ZnI0ljb24tLXR3aXR0ZXIiPjwvdXNlPjwvc3ZnPgogICAgICAgIDxzcGFuIGNsYXNzPSJTaGFyZS1sYWJlbCI+UGFydGFnZXIgY2UgY29udGVudSBzdXIgVHdpdHRlcjwvc3Bhbj4KICAgIDwvYT4KCiAgICA8YSBpZD0iR29vZ2xlKyIgY2xhc3M9IlNoYXJlLWl0ZW0iIGhyZWY9Imh0dHBzOi8vcGx1cy5nb29nbGUuY29tL3NoYXJlP3VybD1odHRwcyUzQSUyRiUyRmZyLmZvbmNpYS5jb20lMkZhY2hhdCUyRnBhcmlzLTc1MDExJTJGYXBwYXJ0ZW1lbnQlMkYxMzkzMTk2Lmh0bSIgb25jbGljaz0iamF2YXNjcmlwdDp3aW5kb3cub3Blbih0aGlzLmhyZWYsJycsICdtZW51YmFyPW5vLHRvb2xiYXI9bm8scmVzaXphYmxlPXllcyxzY3JvbGxiYXJzPXllcyxoZWlnaHQ9NjAwLHdpZHRoPTYwMCcpO3JldHVybiBmYWxzZTsiPgogICAgICAgIDxzdmcgY2xhc3M9Imljb24iIHN0eWxlPSJ3aWR0aDoyNHB4O2hlaWdodDoyNHB4IiBhcmlhLWhpZGRlbj0idHJ1ZSI+PHVzZSB4bGluazpocmVmPSIvYnVuZGxlcy9mb25jaWFpbnRlcm5ldC9zdmcvaWNvbnMuc3ZnI0ljb24tLWdvb2dsZSI+PC91c2U+PC9zdmc+CiAgICAgICAgPHNwYW4gY2xhc3M9IlNoYXJlLWxhYmVsIj5QYXJ0YWdlciBjZSBjb250ZW51IHN1ciBHb29nbGUgKzwvc3Bhbj4KICAgIDwvYT4KCiAgICA8YSBjbGFzcz0iU2hhcmUtaXRlbSBNb2RhbC1saW5rLS1hamF4IiBocmVmPSIvc2hhcmUtY29udGVudC1wb3Bpbi9odHRwcyUyNTNBJTI1MkYlMjUyRmZyLmZvbmNpYS5jb20lMjUyRmFjaGF0JTI1MkZwYXJpcy03NTAxMSUyNTJGYXBwYXJ0ZW1lbnQlMjUyRjEzOTMxOTYuaHRtIj4KICAgICAgICA8c3ZnIGNsYXNzPSJpY29uIiBzdHlsZT0id2lkdGg6MjRweDtoZWlnaHQ6MjRweCIgYXJpYS1oaWRkZW49InRydWUiPjx1c2UgeGxpbms6aHJlZj0iL2J1bmRsZXMvZm9uY2lhaW50ZXJuZXQvc3ZnL2ljb25zLnN2ZyNJY29uLS1lbnZlbG9wZSI+PC91c2U+PC9zdmc+CiAgICAgICAgPHNwYW4gY2xhc3M9IlNoYXJlLWxhYmVsIj5FbnZveWVyIGNlIGNvbnRlbnUgw6AgdW4gYW1pPC9zcGFuPgogICAgPC9hPgoKICAgIDxidXR0b24gb25jbGljaz0iamF2YXNjcmlwdDp3aW5kb3cucHJpbnQoKSIgY2xhc3M9IlNoYXJlLWl0ZW0iPgogICAgICAgIDxzdmcgY2xhc3M9Imljb24iIHN0eWxlPSJ3aWR0aDoyNHB4O2hlaWdodDoyNHB4IiBhcmlhLWhpZGRlbj0idHJ1ZSI+PHVzZSB4bGluazpocmVmPSIvYnVuZGxlcy9mb25jaWFpbnRlcm5ldC9zdmcvaWNvbnMuc3ZnI0ljb24tLXByaW50ZXIiPjwvdXNlPjwvc3ZnPgogICAgICAgIDxzcGFuIGNsYXNzPSJTaGFyZS1sYWJlbCI+SW1wcmltZXIgY2UgY29udGVudTwvc3Bhbj4KICAgIDwvYnV0dG9uPgo8L3A+CgoKICAgICAgICAgICAgICAgIDwvbWFpbj4KCgoKICAgICAgICAgICAgICAgIDxhc2lkZSBjbGFzcz0iQ29udGVudC1zaWRlYmFyIFNpZGViYXIiPgogICAgICAgICAgICAgICAgICAgIAogICAgCgoKPHNlY3Rpb24gY2xhc3M9Ik9mZmVyQ29udGFjdCI+CiAgICA8aDIgY2xhc3M9Ik9mZmVyQ29udGFjdC10aXRsZSI+Q29udGFjdGVyIGwnYWdlbmNlPC9oMj4KICAgIDxzcGFuIGNsYXNzPSJoaWRkZW4iIGRhdGEtaW5mbz0iaWQtYWdlbmNlIj4xMTMyPC9zcGFuPgoKICAgIDxkaXYgY2xhc3M9Ik9mZmVyQ29udGFjdC1jb250ZW50Ij4KICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0iT2ZmZXJDb250YWN0LXJlZmVyZW50Ij5Wb3RyZSBjb25zZWlsbGVyIDogPHN0cm9uZz5EYXZpZCZuYnNwO0JFU1NBUklPTjwvc3Ryb25nPjwvcD4KICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJPZmZlckNvbnRhY3QtYWRkcmVzcyBPZmZlckNvbnRhY3QtYWRkcmVzcy0tY2VudGVyIHJ3ZC0tbm9Nb2JpbGUgcndkLS1ub1RhYmxldCI+CiAgICAgICAgICAgIDxhIGhyZWY9Imh0dHA6Ly9hZ2VuY2UuZm9uY2lhLmNvbS9wYXJpcy03NTAxMS9hZ2VuY2UtaW1tb2JpbGllcmUvZm9uY2lhLXRyYW5zYWN0aW9uLXBhcmlzLXZvbHRhaXJlLTExMzIiIHRhcmdldD0iX2JsYW5rIiBjbGFzcz0iT2ZmZXJDb250YWN0LWFkZHJlc3MtLWxhcmdlIj4KICAgICAgICAgICAgICAgIDxzdHJvbmc+Rm9uY2lhIFRyYW5zYWN0aW9uIFBhcmlzICBWb2x0YWlyZTwvc3Ryb25nPgogICAgICAgICAgICAgICAgMjUgYm91bGV2YXJkIFZvbHRhaXJlPGJyLz4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgMjYgcnVlIGRlIE1hbHRlPGJyLz4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA3NTAxMSAtIFBhcmlzCiAgICAgICAgICAgIDwvYT4KICAgICAgICA8L3A+CgogICAgICAgIDxwIGNsYXNzPSJPZmZlckNvbnRhY3QtY2FsbDJhY3Rpb24iPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgY2xhc3M9Ik9mZmVyQ29udGFjdC1idG4gT2ZmZXJDb250YWN0LWJ0bi0tdGVsIGljb24tQ2FsbG91dCIgZGF0YS13aWRnZXQ9IlNob3dUZWwiIGRhdGEtYW5hbHl0aWNzPSIxMTMyIC0gRk9OQ0lBIHRyYW5zYWN0aW9uLXBhcmlzLXZvbHRhaXJlIiBocmVmPSJ0ZWw6MDE1MzM2MTMwMCI+PHNwYW4gY2xhc3M9Ik9mZmVyQ29udGFjdC10ZWxMYWJlbCI+QXBwZWxlciBsJ2FnZW5jZTwvc3Bhbj4gPHNwYW4gY2xhc3M9Ik9mZmVyQ29udGFjdC10ZWxOdW0iIGRhdGEtYmVoYXQ9InRlbEFnZW5jZSI+MDEuNTMuMzYuMTMuMDA8L3NwYW4+PC9hPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgY2xhc3M9Ik9mZmVyQ29udGFjdC1idG4gT2ZmZXJDb250YWN0LWJ0bi0tbWFpbCBpY29uLU9wZW5lbnZlbG9wZSBNb2RhbC1saW5rIiBocmVmPSIjUG9wdXBDb250YWN0IiBkYXRhLWFuYWx5dGljcz0ibWFpbHRvYWdlbmN5LWJ0biI+w4ljcmlyZSDDoCBsJ2FnZW5jZTwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgPGEgY2xhc3M9Ik9mZmVyQ29udGFjdC1idG4gT2ZmZXJDb250YWN0LWJ0bi0tcGxhbiBpY29uLVBvaW50ZXIiIGhyZWY9Imh0dHA6Ly9hZ2VuY2UuZm9uY2lhLmNvbS9wYXJpcy03NTAxMS9hZ2VuY2UtaW1tb2JpbGllcmUvZm9uY2lhLXRyYW5zYWN0aW9uLXBhcmlzLXZvbHRhaXJlLTExMzIiIHRhcmdldD0iX2JsYW5rIj4KICAgICAgICAgICAgPHNwYW4gY2xhc3M9Ik9mZmVyQ29udGFjdC1idG4tbGFiZWwtLW1vYmlsZSI+VHJvdXZlciBsJ2FnZW5jZTwvc3Bhbj4KICAgICAgICAgICAgPHNwYW4gY2xhc3M9Ik9mZmVyQ29udGFjdC1idG4tbGFiZWwtLWRlc2t0b3AiIGRhdGEtYmVoYXQ9InBsYW5BZ2VuY2UiPlBsYW4gZCdhY2PDqHMgZGUgbCdhZ2VuY2U8L3NwYW4+CiAgICAgICAgICAgIDwvYT4KICAgICAgICA8L3A+CgogICAgPC9kaXY+Cgo8L3NlY3Rpb24+CgogICAgCgoKCgo8c2VjdGlvbiBpZD0iUG9wdXBDb250YWN0IiBjbGFzcz0iTW9kYWwgbWZwLWhpZGUiPgoKICAgIDxoMyBjbGFzcz0iTW9kYWwtdGl0bGUiPsOJY3JpcmUgw6AgbCdhZ2VuY2U8L2gzPgoKICAgIDxkaXYgY2xhc3M9ImZvcm1fY29udGVudF9tb2RhbCI+CiAgICAgICAgPHAgY2xhc3M9Ik9mZmVyQ29udGFjdC1hZGRyZXNzIE9mZmVyQ29udGFjdC1hZGRyZXNzLS1sZWZ0Ij4KICAgICAgICAgICAgPHN0cm9uZyBpZD0ibm9tQWdlbmNlQ29udGFjdCI+Rm9uY2lhIFRyYW5zYWN0aW9uIFBhcmlzICBWb2x0YWlyZTwvc3Ryb25nPgogICAgICAgICAgICA8c3BhbiBpZD0iYWRkckFnZW5jZUNvbnRhY3QiPjI1IGJvdWxldmFyZCBWb2x0YWlyZTwvc3Bhbj48YnIvPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgMjYgcnVlIGRlIE1hbHRlPGJyLz4KICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gaWQ9InZpbGxlQ1BBZ2VuY2VDb250YWN0Ij43NTAxMSAtIFBhcmlzPC9zcGFuPjxici8+CgogICAgICAgICAgICBUw6lsLiAwMS41My4zNi4xMy4wMCAmbmJzcDsmbmJzcDsmbmJzcDsgRmF4LiAwMS40OS4yOS4wMC41MSAgICAgICAgPC9wPgoKICAgICAgICA8Zm9ybSBuYW1lPSJmb25jaWFfYWdlbmN5X2NvbnRhY3QiIG1ldGhvZD0icG9zdCIgYWN0aW9uPSJmb25jaWFfaW50ZXJuZXRfYWdlbmN5X2NvbnRhY3QiIGlkPSJmb25jaWFfYWdlbmN5X2NvbnRhY3QiIGNsYXNzPSJGb3JtIiBkYXRhLWZvcm09ImFqYXhfZm9ybSI+CgogICAgICAgIDxoNCBjbGFzcz0iRm9ybS1zdWJ0aXRsZSI+Vm91cyDDqnRlcyBpbnTDqXJlc3PDqShlKSBwYXIgY2UgYmllbiDDoCB2ZW5kcmU8L2g0PgoKICAgICAgICA8cCBkYXRhLWJlaGF0PSJjYXJhY3RlcmlzdGlxdWVCaWVuQ29udGFjdEFnZW5jZSI+CiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJUYWciPkFwcGFydGVtZW50PC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9IlRhZyI+MiBwacOoY2VzPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iVGFnIj5Sw6lmLiAxMzkzMTk2PC9zcGFuPgogICAgICAgICAgICA8c3BhbiBjbGFzcz0iVGFnIj5QYXJpczwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJUYWciPjMzLjRtwrI8L3NwYW4+CiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iVGFnIj4zNzEwMDAgJmV1cm87PC9zcGFuPgogICAgICAgICAgICAgICAgICAgIDwvcD4KCiAgICAgICAgPGRpdiBjbGFzcz0iZXJyb3JzX2NvbnRhaW5lciI+PC9kaXY+CiAgICAgICAgCiAgICAgICAgPGg0IGNsYXNzPSJGb3JtLXN1YnRpdGxlIj5Wb3MgaW5mb3JtYXRpb25zPC9oND4KCiAgICAgICAgPGZpZWxkc2V0IGNsYXNzPSJGb3JtLWZpZWxkc2V0IEZvcm0tZmllbGRzZXQtLWlubGluZSI+CiAgICAgICAgICAgIDxsZWdlbmQgY2xhc3M9IkZvcm0tbGFiZWwgRm9ybS1sYWJlbC0taGlkZGVuIj5DaXZpbGl0w6k8L2xlZ2VuZD4KICAgICAgICAgICAgICAgIDx1bD48bGkgY2xhc3M9IkZvcm0tZmllbGQgRm9ybS1maWVsZC0tcmFkaW8iPjxpbnB1dCB0eXBlPSJyYWRpbyIgaWQ9ImZvbmNpYV9hZ2VuY3lfY29udGFjdF9jaXZpbGl0ZV8wIiBuYW1lPSJmb25jaWFfYWdlbmN5X2NvbnRhY3RbY2l2aWxpdGVdIiB2YWx1ZT0iTSIgLz48bGFiZWwgZm9yPSJmb25jaWFfYWdlbmN5X2NvbnRhY3RfY2l2aWxpdGVfMCI+TTwvbGFiZWw+PC9saT48bGkgY2xhc3M9IkZvcm0tZmllbGQgRm9ybS1maWVsZC0tcmFkaW8iPjxpbnB1dCB0eXBlPSJyYWRpbyIgaWQ9ImZvbmNpYV9hZ2VuY3lfY29udGFjdF9jaXZpbGl0ZV8xIiBuYW1lPSJmb25jaWFfYWdlbmN5X2NvbnRhY3RbY2l2aWxpdGVdIiB2YWx1ZT0iTW1lIiAvPjxsYWJlbCBmb3I9ImZvbmNpYV9hZ2VuY3lfY29udGFjdF9jaXZpbGl0ZV8xIj5NbWU8L2xhYmVsPjwvbGk+PGxpIGNsYXNzPSJGb3JtLWZpZWxkIEZvcm0tZmllbGQtLXJhZGlvIj48aW5wdXQgdHlwZT0icmFkaW8iIGlkPSJmb25jaWFfYWdlbmN5X2NvbnRhY3RfY2l2aWxpdGVfMiIgbmFtZT0iZm9uY2lhX2FnZW5jeV9jb250YWN0W2NpdmlsaXRlXSIgdmFsdWU9Ik1sbGUiIC8+PGxhYmVsIGZvcj0iZm9uY2lhX2FnZW5jeV9jb250YWN0X2NpdmlsaXRlXzIiPk1sbGU8L2xhYmVsPjwvbGk+PC91bD4KICAgICAgICA8L2ZpZWxkc2V0PgoKICAgICAgICA8cCBjbGFzcz0iRm9ybS1maWVsZCBGb3JtLWZpZWxkLS10ZXh0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBjbGFzcz0iRm9ybS1sYWJlbCBGb3JtLWxhYmVsLS1oaWRkZW4gcmVxdWlyZWQiIGZvcj0iZm9uY2lhX2FnZW5jeV9jb250YWN0X2xhc3RfbmFtZSI+Tm9tPC9sYWJlbD4KICAgICAgICAgICAgPGlucHV0IHR5cGU9InRleHQiIGlkPSJmb25jaWFfYWdlbmN5X2NvbnRhY3RfbGFzdF9uYW1lIiBuYW1lPSJmb25jaWFfYWdlbmN5X2NvbnRhY3RbbGFzdF9uYW1lXSIgcmVxdWlyZWQ9InJlcXVpcmVkIiBwbGFjZWhvbGRlcj0iTm9tICoiIC8+CiAgICAgICAgPC9wPgoKICAgICAgICA8cCBjbGFzcz0iRm9ybS1maWVsZCBGb3JtLWZpZWxkLS10ZXh0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBjbGFzcz0iRm9ybS1sYWJlbCBGb3JtLWxhYmVsLS1oaWRkZW4gcmVxdWlyZWQiIGZvcj0iZm9uY2lhX2FnZW5jeV9jb250YWN0X2ZpcnN0X25hbWUiPlByw6lub208L2xhYmVsPgogICAgICAgICAgICA8aW5wdXQgdHlwZT0idGV4dCIgaWQ9ImZvbmNpYV9hZ2VuY3lfY29udGFjdF9maXJzdF9uYW1lIiBuYW1lPSJmb25jaWFfYWdlbmN5X2NvbnRhY3RbZmlyc3RfbmFtZV0iIHJlcXVpcmVkPSJyZXF1aXJlZCIgcGxhY2Vob2xkZXI9IlByw6lub20gKiIgLz4KICAgICAgICA8L3A+CgogICAgICAgIDxwIGNsYXNzPSJGb3JtLWZpZWxkIEZvcm0tZmllbGQtLXRleHQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGNsYXNzPSJGb3JtLWxhYmVsIEZvcm0tbGFiZWwtLWhpZGRlbiByZXF1aXJlZCIgZm9yPSJmb25jaWFfYWdlbmN5X2NvbnRhY3RfZW1haWwiPkVtYWlsPC9sYWJlbD4KICAgICAgICAgICAgPGlucHV0IHR5cGU9ImVtYWlsIiBpZD0iZm9uY2lhX2FnZW5jeV9jb250YWN0X2VtYWlsIiBuYW1lPSJmb25jaWFfYWdlbmN5X2NvbnRhY3RbZW1haWxdIiByZXF1aXJlZD0icmVxdWlyZWQiIHBsYWNlaG9sZGVyPSJFbWFpbCAqIiAvPgogICAgICAgIDwvcD4KCiAgICAgICAgPHAgY2xhc3M9IkZvcm0tZmllbGQgRm9ybS1maWVsZC0tdGV4dCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgY2xhc3M9IkZvcm0tbGFiZWwgRm9ybS1sYWJlbC0taGlkZGVuIHJlcXVpcmVkIiBmb3I9ImZvbmNpYV9hZ2VuY3lfY29udGFjdF9waG9uZSI+VMOpbMOpcGhvbmU8L2xhYmVsPgogICAgICAgICAgICA8aW5wdXQgdHlwZT0idGV4dCIgaWQ9ImZvbmNpYV9hZ2VuY3lfY29udGFjdF9waG9uZSIgbmFtZT0iZm9uY2lhX2FnZW5jeV9jb250YWN0W3Bob25lXSIgcmVxdWlyZWQ9InJlcXVpcmVkIiBwbGFjZWhvbGRlcj0iVMOpbMOpcGhvbmUgKiIgLz4KICAgICAgICA8L3A+CgogICAgICAgIDxwIGNsYXNzPSJGb3JtLWZpZWxkIEZvcm0tZmllbGQtLWNoZWNrYm94Ij4KICAgICAgICAgICAgPGlucHV0IHR5cGU9ImNoZWNrYm94IiBpZD0iZm9uY2lhX2FnZW5jeV9jb250YWN0X2ZvbmNpYV9jdXN0b21lciIgbmFtZT0iZm9uY2lhX2FnZW5jeV9jb250YWN0W2ZvbmNpYV9jdXN0b21lcl0iIHZhbHVlPSIxIiAvPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGNsYXNzPSJGb3JtLWxhYmVsIiBmb3I9ImZvbmNpYV9hZ2VuY3lfY29udGFjdF9mb25jaWFfY3VzdG9tZXIiPkplIHN1aXMgZMOpasOgIGNsaWVudCBGT05DSUE8L2xhYmVsPgogICAgICAgIDwvcD4KCiAgICAgICAgPGZpZWxkc2V0IGNsYXNzPSJGb3JtLWZpZWxkc2V0Ij4KICAgICAgICAgICAgPGxlZ2VuZCBjbGFzcz0iRm9ybS1sZWdlbmQiPsOJY2jDqWFuY2UgZGUgdm90cmUgcHJvamV0PC9sZWdlbmQ+CiAgICAgICAgICAgICAgICA8dWw+PGxpIGNsYXNzPSJGb3JtLWZpZWxkIEZvcm0tZmllbGQtLXJhZGlvIj48aW5wdXQgdHlwZT0icmFkaW8iIGlkPSJmb25jaWFfYWdlbmN5X2NvbnRhY3RfZWNoZWFuY2VfMCIgbmFtZT0iZm9uY2lhX2FnZW5jeV9jb250YWN0W2VjaGVhbmNlXSIgdmFsdWU9IkltbcOpZGlhdGUiIC8+PGxhYmVsIGZvcj0iZm9uY2lhX2FnZW5jeV9jb250YWN0X2VjaGVhbmNlXzAiPkltbcOpZGlhdGU8L2xhYmVsPjwvbGk+PGxpIGNsYXNzPSJGb3JtLWZpZWxkIEZvcm0tZmllbGQtLXJhZGlvIj48aW5wdXQgdHlwZT0icmFkaW8iIGlkPSJmb25jaWFfYWdlbmN5X2NvbnRhY3RfZWNoZWFuY2VfMSIgbmFtZT0iZm9uY2lhX2FnZW5jeV9jb250YWN0W2VjaGVhbmNlXSIgdmFsdWU9IjEgbW9pcyIgLz48bGFiZWwgZm9yPSJmb25jaWFfYWdlbmN5X2NvbnRhY3RfZWNoZWFuY2VfMSI+MSBtb2lzPC9sYWJlbD48L2xpPjxsaSBjbGFzcz0iRm9ybS1maWVsZCBGb3JtLWZpZWxkLS1yYWRpbyI+PGlucHV0IHR5cGU9InJhZGlvIiBpZD0iZm9uY2lhX2FnZW5jeV9jb250YWN0X2VjaGVhbmNlXzIiIG5hbWU9ImZvbmNpYV9hZ2VuY3lfY29udGFjdFtlY2hlYW5jZV0iIHZhbHVlPSIzIG1vaXMgZXQgcGx1cyIgLz48bGFiZWwgZm9yPSJmb25jaWFfYWdlbmN5X2NvbnRhY3RfZWNoZWFuY2VfMiI+MyBtb2lzIGV0IHBsdXM8L2xhYmVsPjwvbGk+PC91bD4KICAgICAgICA8L2ZpZWxkc2V0PgoKICAgICAgICA8ZmllbGRzZXQgY2xhc3M9IkZvcm0tZmllbGRzZXQiPgogICAgICAgICAgICA8bGVnZW5kIGNsYXNzPSJGb3JtLWxlZ2VuZCI+Vm91cyBzb3VoYWl0ZXogw6p0cmUgY29udGFjdMOpKGUpIDo8L2xlZ2VuZD4KICAgICAgICAgICAgICAgIDx1bD48bGkgY2xhc3M9IkZvcm0tZmllbGQgRm9ybS1maWVsZC0tcmFkaW8iPjxpbnB1dCB0eXBlPSJyYWRpbyIgaWQ9ImZvbmNpYV9hZ2VuY3lfY29udGFjdF9jb250YWN0X21ldGhvZF8wIiBuYW1lPSJmb25jaWFfYWdlbmN5X2NvbnRhY3RbY29udGFjdF9tZXRob2RdIiB2YWx1ZT0iUGFyIHTDqWzDqXBob25lIiAvPjxsYWJlbCBmb3I9ImZvbmNpYV9hZ2VuY3lfY29udGFjdF9jb250YWN0X21ldGhvZF8wIj5QYXIgdMOpbMOpcGhvbmU8L2xhYmVsPjwvbGk+PGxpIGNsYXNzPSJGb3JtLWZpZWxkIEZvcm0tZmllbGQtLXJhZGlvIj48aW5wdXQgdHlwZT0icmFkaW8iIGlkPSJmb25jaWFfYWdlbmN5X2NvbnRhY3RfY29udGFjdF9tZXRob2RfMSIgbmFtZT0iZm9uY2lhX2FnZW5jeV9jb250YWN0W2NvbnRhY3RfbWV0aG9kXSIgdmFsdWU9IlBhciBFbWFpbCIgLz48bGFiZWwgZm9yPSJmb25jaWFfYWdlbmN5X2NvbnRhY3RfY29udGFjdF9tZXRob2RfMSI+UGFyIEVtYWlsPC9sYWJlbD48L2xpPjwvdWw+CiAgICAgICAgPC9maWVsZHNldD4KCiAgICAgICAgPHAgY2xhc3M9IkZvcm0tZmllbGQgRm9ybS1maWVsZC0tdGV4dCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgY2xhc3M9IkZvcm0tbGFiZWwiIGZvcj0iZm9uY2lhX2FnZW5jeV9jb250YWN0X21lc3NhZ2UiPlZvdHJlIG1lc3NhZ2U8L2xhYmVsPgogICAgICAgICAgICA8dGV4dGFyZWEgaWQ9ImZvbmNpYV9hZ2VuY3lfY29udGFjdF9tZXNzYWdlIiBuYW1lPSJmb25jaWFfYWdlbmN5X2NvbnRhY3RbbWVzc2FnZV0iPjwvdGV4dGFyZWE+CiAgICAgICAgPC9wPgoKICAgICAgICA8ZGl2IGNsYXNzPSJNb2RhbC1mb290ZXIiPgogICAgICAgICAgICA8cCBjbGFzcz0iRm9ybS1pbmZvIj4qIGNoYW1wcyBvYmxpZ2F0b2lyZXM8L3A+CgogICAgICAgICAgICA8cCBjbGFzcz0iRm9ybS1maWVsZCBGb3JtLWZpZWxkLS1zdWJtaXQgRm9ybS1maWVsZC0tY2VudGVyIj4KICAgICAgICAgICAgICAgIDxidXR0b24gdHlwZT0ic3VibWl0IiBpZD0iZm9uY2lhX2FnZW5jeV9jb250YWN0X3N1Ym1pdCIgbmFtZT0iZm9uY2lhX2FnZW5jeV9jb250YWN0W3N1Ym1pdF0iIGNsYXNzPSJCdG4gQnRuLS12YWxpZCIgZGF0YS1hY3Rpb249InN1Ym1pdF9mb3JtIiBkYXRhLWFuYWx5dGljcy12YWx1ZT0iMTEzMiAtIEZPTkNJQSB0cmFuc2FjdGlvbi1wYXJpcy12b2x0YWlyZSI+RW52b3llcjwvYnV0dG9uPgogICAgICAgICAgICA8L3A+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9IkxlZ2FsTWVudGlvbnMgTGVnYWxNZW50aW9ucy0tc21hbGwiPgogICAgICAgICAgICAgICAgICAgIDxwPkNlcyBpbmZvcm1hdGlvbnMgc29udCBuw6ljZXNzYWlyZXMgYXUgdHJhaXRlbWVudCBkZSB2b3RyZSBkZW1hbmRlIGV0IMOgIGxhIGdlc3Rpb24gZGUgbm9zIHJlbGF0aW9ucyBjb21tZXJjaWFsZXMuIExlcyBkb25uw6llcyDDoCBjYXJhY3TDqHJlIHBlcnNvbm5lbCByZWN1ZWlsbGllcyBwYXIgRk9OQ0lBIGZvbnQgbCdvYmpldCBkJ3VuIHRyYWl0ZW1lbnQgYXV0b21hdGlzw6kgZGVzdGluw6kgw6AgbGEgZ2VzdGlvbiBldCBhdXggbsOpZ29jaWF0aW9ucyBkZSBiaWVucyBpbW1vYmlsaWVycywgw6AgbGEgZ2VzdGlvbiBkZXMgY2xpZW50cyBldCDDoCBsYSByw6lhbGlzYXRpb24gZCdvcMOpcmF0aW9ucyByZWxhdGl2ZXMgw6AgbGEgcHJvc3BlY3Rpb24uIExhIGNvbW11bmljYXRpb24gZGUgdm9zIGNvb3Jkb25uw6llcyDDqWxlY3Ryb25pcXVlcyBpbXBsaXF1ZSB2b3RyZSBjb25zZW50ZW1lbnQgw6AgcmVjZXZvaXIsIHBhciB2b2llIMOpbGVjdHJvbmlxdWUsIGRlcyBvZmZyZXMgY29tbWVyY2lhbGVzIGRlIGxhIHBhcnQgZGUgRk9OQ0lBIGV0IGRlIHNlcyBwYXJ0ZW5haXJlcyBjb21tZXJjaWF1eCBhdXhxdWVscyBGT05DSUEgcGV1dCDDqnRyZSBhbWVuw6llIMOgIGNvbW11bmlxdWVyIHZvcyBkb25uw6llcyDDoCBjYXJhY3TDqHJlIHBlcnNvbm5lbC4gVG91dGVmb2lzLCB2b3VzIHBvdXZleiB2b3VzIG9wcG9zZXIgc2FucyBmcmFpcyAoaG9ybWlzIGNldXggbGnDqXMgw6AgbGEgdHJhbnNtaXNzaW9uIGR1IHJlZnVzKSBldCBzYW5zIGp1c3RpZmljYXRpb24gw6AgbCd1dGlsaXNhdGlvbiBkZSB2b3MgZG9ubsOpZXMgw6AgZGVzIGZpbnMgZGUgcHJvc3BlY3Rpb24gY29tbWVyY2lhbGUuIENvbmZvcm3DqW1lbnQgw6AgbGEgTG9pIG7CsCA3OC0xNyBkdSA2IGphbnZpZXIgMTk3OCBtb2RpZmnDqWUsIHZvdXMgZGlzcG9zZXogZCd1biBkcm9pdCBkJ2FjY8OocywgZGUgcmVjdGlmaWNhdGlvbiBldCBkJ29wcG9zaXRpb24sIHBvdXIgZGVzIG1vdGlmcyBsw6lnaXRpbWVzLCBhdSB0cmFpdGVtZW50IGRlIHZvcyBkb25uw6llcyDDoCBjYXJhY3TDqHJlIHBlcnNvbm5lbCBxdWUgdm91cyBwb3V2ZXogZXhlcmNlciBlbiB2b3VzIGFkcmVzc2FudCBhdSByZXNwb25zYWJsZSBkdSB0cmFpdGVtZW50LCBGT05DSUEgLSBTZXJ2aWNlIFRyYW5zYWN0aW9uIDEzLCBhdmVudWUgTGVicnVuIC0gOTIxNjAgQU5UT05ZLjwvcD4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9kaXY+CgogICAgICAgIDxpbnB1dCB0eXBlPSJoaWRkZW4iIGlkPSJmb25jaWFfYWdlbmN5X2NvbnRhY3RfcHJvcGVydHlfZGF0YSIgbmFtZT0iZm9uY2lhX2FnZW5jeV9jb250YWN0W3Byb3BlcnR5X2RhdGFdIiB2YWx1ZT0ieyZxdW90O3ByaXhWZW50ZSZxdW90OzozNzEwMDAsJnF1b3Q7c3VyZmFjZSZxdW90OzozMy40LCZxdW90O3JlZmVyZW5jZSZxdW90OzomcXVvdDsxMzkzMTk2JnF1b3Q7LCZxdW90O3Byb3BlcnR5VHlwZSZxdW90OzomcXVvdDtwdXJjaGFzZSZxdW90OywmcXVvdDtuYlBpZWNlcyZxdW90OzoyLCZxdW90O25lZ29jaWF0ZXVyUHJlbm9tJnF1b3Q7OiZxdW90O0RhdmlkJnF1b3Q7LCZxdW90O3ZpbGxlJnF1b3Q7OiZxdW90O3BhcmlzJnF1b3Q7LCZxdW90O2NvZGVQb3N0YWwmcXVvdDs6JnF1b3Q7NzUwMTEmcXVvdDssJnF1b3Q7dHlwZUJpZW4mcXVvdDs6JnF1b3Q7YXBwYXJ0ZW1lbnQmcXVvdDssJnF1b3Q7bmVnb2NpYXRldXJOb20mcXVvdDs6JnF1b3Q7QkVTU0FSSU9OJnF1b3Q7LCZxdW90O3Njb3JlJnF1b3Q7OjF9IiAvPgogICAgICAgIDxpbnB1dCB0eXBlPSJoaWRkZW4iIGlkPSJmb25jaWFfYWdlbmN5X2NvbnRhY3RfYWdlbmN5X21haWwiIG5hbWU9ImZvbmNpYV9hZ2VuY3lfY29udGFjdFthZ2VuY3lfbWFpbF0iIHZhbHVlPSJmdC1wYXJpczExdm9sdGFpcmUjI2ZvbmNpYS5mciIgLz4KCiAgICAgICAgICAgIAoKICAgICAgICA8L2Zvcm0+CgogICAgPC9kaXY+Cgo8L3NlY3Rpb24+CgogICAgICAgICAgICAgICAgPC9hc2lkZT4KCiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvc2VjdGlvbj4KICAgICAgICAgICAgICAgICAgICA8c2VjdGlvbiBjbGFzcz0iQ29udGVudC1yb3ciPgogICAgPGRpdiBjbGFzcz0iQ29udGVudC1vdmVyZmxvdyI+CiAgICAgICAgPGRpdiBjbGFzcz0iT2ZmZXJSZWxhdGVkIj4KCiAgICAgICAgICAgIDxoMiBjbGFzcz0iT2ZmZXJSZWxhdGVkLXRpdGxlIj5CaWVucyBzaW1pbGFpcmVzPC9oMj4KCiAgICAgICAgICAgIDx1bCBjbGFzcz0iT2ZmZXJSZWxhdGVkLXNsaWRlcyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaSBjbGFzcz0iT2ZmZXJSZWxhdGVkLWl0ZW0iPgogICAgICAgICAgICAgICAgICAgICAgICA8YSBjbGFzcz0iVGVhc2VyT2ZmZXJNaW5pIiBocmVmPSIvYWNoYXQvcGFyaXMtNzUwMTEvYXBwYXJ0ZW1lbnQvMTE4NTgxNi5odG0iPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iVGVhc2VyT2ZmZXJNaW5pLWlsbCIgc3R5bGU9ImJhY2tncm91bmQtaW1hZ2U6IHVybCgnaHR0cDovL3Bob3Rvcy5mci5mb25jaWEuY29tL21pbmljcC82NDAvNDgwL3Bob3Rvcy8xMTg1LzgxNi8xMTg1ODE2L2dyYW5kLzExODU4MTZfMjY2OWJkYTU4ZDMwZGVjMjRiNDIxM2NjOTQxNDMwOWY1ZTYyMDc2ZmFhMDY1LmpwZz9kYXRlbWFqPTIwMjAtMDUtMTMgMTg6MTM6MTYuMzQ4JykiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW1nIHNyYz0iaHR0cDovL3Bob3Rvcy5mci5mb25jaWEuY29tL21pbmljcC82NDAvNDgwL3Bob3Rvcy8xMTg1LzgxNi8xMTg1ODE2L2dyYW5kLzExODU4MTZfMjY2OWJkYTU4ZDMwZGVjMjRiNDIxM2NjOTQxNDMwOWY1ZTYyMDc2ZmFhMDY1LmpwZz9kYXRlbWFqPTIwMjAtMDUtMTMgMTg6MTM6MTYuMzQ4IiBhbHQ9IiIgLz4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9IlRlYXNlck9mZmVyTWluaS1jb250ZW50Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3Ryb25nIGNsYXNzPSJUZWFzZXJPZmZlck1pbmktdGl0bGUiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgQXBwYXJ0ZW1lbnQKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgMiBwacOoY2VzICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICDDoCB2ZW5kcmUKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3N0cm9uZz4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iVGVhc2VyT2ZmZXJNaW5pLXByaWNlIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDM4MCAwMDAmbmJzcDvigqwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iVGVhc2VyT2ZmZXJNaW5pLWxvYyI+UGFyaXMgKDc1MDExKTwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaSBjbGFzcz0iT2ZmZXJSZWxhdGVkLWl0ZW0iPgogICAgICAgICAgICAgICAgICAgICAgICA8YSBjbGFzcz0iVGVhc2VyT2ZmZXJNaW5pIiBocmVmPSIvYWNoYXQvcGFyaXMtNzUwMTEvYXBwYXJ0ZW1lbnQvMTM5MzgyOC5odG0iPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iVGVhc2VyT2ZmZXJNaW5pLWlsbCIgc3R5bGU9ImJhY2tncm91bmQtaW1hZ2U6IHVybCgnaHR0cDovL3Bob3Rvcy5mci5mb25jaWEuY29tL21pbmljcC82NDAvNDgwL3Bob3Rvcy8xMzkzLzgyOC8xMzkzODI4L2dyYW5kLzEzOTM4MjhfZWVkZDg4ZGE1ZTEyMzZkOGFkMjgzN2YyMTI2NGU4MmI1ZWM1MjM0OTc1YTExLmpwZz9kYXRlbWFqPTIwMjAtMDUtMjAgMTQ6NDg6MDUuMjIwJykiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW1nIHNyYz0iaHR0cDovL3Bob3Rvcy5mci5mb25jaWEuY29tL21pbmljcC82NDAvNDgwL3Bob3Rvcy8xMzkzLzgyOC8xMzkzODI4L2dyYW5kLzEzOTM4MjhfZWVkZDg4ZGE1ZTEyMzZkOGFkMjgzN2YyMTI2NGU4MmI1ZWM1MjM0OTc1YTExLmpwZz9kYXRlbWFqPTIwMjAtMDUtMjAgMTQ6NDg6MDUuMjIwIiBhbHQ9IiIgLz4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9IlRlYXNlck9mZmVyTWluaS1jb250ZW50Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3Ryb25nIGNsYXNzPSJUZWFzZXJPZmZlck1pbmktdGl0bGUiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgQXBwYXJ0ZW1lbnQKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgMiBwacOoY2VzICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICDDoCB2ZW5kcmUKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3N0cm9uZz4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iVGVhc2VyT2ZmZXJNaW5pLXByaWNlIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDQ0MCAwMDAmbmJzcDvigqwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iVGVhc2VyT2ZmZXJNaW5pLWxvYyI+UGFyaXMgKDc1MDExKTwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3VsPgogICAgICAgIDwvZGl2PgogICAgPC9kaXY+Cjwvc2VjdGlvbj4KCiAgICAgICAgCiAgICA8L2Rpdj4KCgoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9IkJyZWFkY3J1bWJzIj4KICAgICAgICAgICAgPHAgICAgIGNsYXNzPSJCcmVhZGNydW1icy1pbm5lciIgZGF0YS10eXBlPSJ5b2xvIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3Bhbj5Gb25jaWE8L3NwYW4+ICAgICAgICAgICAgICAgICAgICAgICAgICAgIAoKICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iL2FjaGF0IiAgICAgY2xhc3M9IkJyZWFkY3J1bWJzLWxpbmsiPkFjaGF0PC9hPiAgICAgICAgICAgICAgICAgICAgICAgICAgICAKCiAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Ii9hY2hhdC9wYXJpcy03NSIgICAgIGNsYXNzPSJCcmVhZGNydW1icy1saW5rIj5QYXJpcyA3NTwvYT4gICAgICAgICAgICAgICAgICAgICAgICAgICAgCgogICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIvYWNoYXQvcGFyaXMtNzUvYXBwYXJ0ZW1lbnQiICAgICBjbGFzcz0iQnJlYWRjcnVtYnMtbGluayI+QXBwYXJ0ZW1lbnQ8L2E+ICAgICAgICAgICAgICAgICAgICAgICAgICAgIAoKICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4+KHBhcmFtcyk8L3NwYW4+ICAgICAgICAgICAgICAgICAgICAgICAgICAgIAoKICAgIAoKICAgICAgICAgICAgPC9wPgogICAgICAgIDwvZGl2PgogICAgCgoKICAgICAgICAgICAgCiAgICAgICAgCjxmb290ZXIgY2xhc3M9IkZvb3RlciIgcm9sZT0iY29udGVudGluZm8iPgoKICAgIDxkaXYgY2xhc3M9IkZvb3Rlci1yb3cgRm9vdGVyLXJvdy0taWRlbnRpdHkgRm9vdGVyLXJvdy0taWRlbnRpdHktbW9iaWxlIj4KICAgICAgICA8ZGl2IGNsYXNzPSJGb290ZXItMnBhcnQiPgogICAgICAgICAgICA8cCBjbGFzcz0iRm9vdGVyLXBhcnQxIEZvb3Rlci1wYXJ0MS0tbG9nbyI+CiAgICAgICAgICAgICAgICA8aW1nIHdpZHRoPSIxNTQiIGhlaWdodD0iNTYiIHNyYz0iaHR0cHM6Ly9waG90b3MuZm9uY2lhLm5ldC9pbWFnZXMvRm9uY2lhX2xvZ292XzMwOF84Ni5wbmciIGFsdD0iRm9uY2lhIj4KICAgICAgICAgICAgPC9wPgogICAgICAgICAgICA8dWwgY2xhc3M9IkZvb3Rlci1wYXJ0MiBGb290ZXItcGFydDItLWxpbmtzIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgICA8YSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhyZWY9Ii9tZW50aW9ucy1sZWdhbGVzIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtYmVoYXQ9ImxpbmstTWVudGlvbnNfbMOpZ2FsZXMiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBNZW50aW9ucyBsw6lnYWxlcwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgICAgPGEgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBocmVmPSJodHRwczovL2ZyLmZvbmNpYS5jb20vcGxhbi1kdS1zaXRlIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtYmVoYXQ9ImxpbmstUGxhbl9kdV9zaXRlIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgUGxhbiBkdSBzaXRlCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgICA8YSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhyZWY9Ii8jZm9uY2lhX2NvbnNlbnRlbWVudHMiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1iZWhhdD0ibGluay1HZXN0aW9uX2Rlc19jb29raWVzIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgR2VzdGlvbiBkZXMgY29va2llcwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgICAgPGEgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBocmVmPSIvY2hhcnRlLWRlLXByb3RlY3Rpb24tZGVzLWRvbm5lZXMiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1iZWhhdD0ibGluay1DaGFydGVfZGVfcHJvdGVjdGlvbl9kZXNfZG9ubsOpZXNfIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgQ2hhcnRlIGRlIHByb3RlY3Rpb24gZGVzIGRvbm7DqWVzIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgICAgPGEgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBocmVmPSIvbm90cmUtcHJlb2NjdXBhdGlvbi1sYS1zZWN1cml0ZS1kZS12b3MtZG9ubmVlcyIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkYXRhLWJlaGF0PSJsaW5rLVPDqWN1cml0w6lfSW5mb3JtYXRpcXVlIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgU8OpY3VyaXTDqSBJbmZvcm1hdGlxdWUKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICAgIDxhICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaHJlZj0iL3NlcnZpY2VzIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtYmVoYXQ9ImxpbmstU2VydmljZXMiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBTZXJ2aWNlcwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgICAgPGEgIHRhcmdldD0iX2JsYW5rIiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhyZWY9Imh0dHA6Ly9wcmVzc3Jvb20uZm9uY2lhLmNvbS8iCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1iZWhhdD0ibGluay1Fc3BhY2VfUHJlc3NlIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgRXNwYWNlIFByZXNzZQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgICAgPGEgIHRhcmdldD0iX2JsYW5rIiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhyZWY9Imh0dHA6Ly9mb25jaWEtcmVjcnV0ZS50YWxlbnQtc29mdC5jb20vYWNjdWVpbC5hc3B4IgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtYmVoYXQ9ImxpbmstTm9zX29mZnJlc19k4oCZZW1wbG9pIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgTm9zIG9mZnJlcyBk4oCZZW1wbG9pCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgICA8YSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhyZWY9Ii9hY2hhdC9hdmlzLWNsaWVudHMiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1iZWhhdD0ibGluay1BdmlzX2NsaWVudHMiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBBdmlzIGNsaWVudHMKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC91bD4KICAgICAgICA8L2Rpdj4KICAgIDwvZGl2PgoKICAgIDxkaXYgY2xhc3M9IkZvb3Rlci1wYXJ0MSBGb290ZXItcGFydDEtLXNvY2lhbCI+CiAgICAgICAgICAgICAgICAgICAgPGEgY2xhc3M9IkZvb3Rlci0taGF1dC1kZS1wYWdlLS1kZXNrdG9wIiAgdGFyZ2V0PSJfYmxhbmsiICBocmVmPSJodHRwczovL3d3dy5mYWNlYm9vay5jb20vRm9uY2lhIiBkYXRhLWJlaGF0PSJzb2NpYWxMaW5rLUZhY2Vib29rIG1lbnUgZHJvaXQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3ZnIGNsYXNzPSJpY29uIiBzdHlsZT0id2lkdGg6MzhweDtoZWlnaHQ6MzhweCIgYXJpYS1oaWRkZW49InRydWUiPjx1c2UgeGxpbms6aHJlZj0iL2J1bmRsZXMvZm9uY2lhaW50ZXJuZXQvc3ZnL2ljb25zLnN2ZyNJY29uLS1mYWNlYm9vay1yZXNwb25zaXZlIj48L3VzZT48L3N2Zz4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgPGEgY2xhc3M9IkZvb3Rlci0taGF1dC1kZS1wYWdlIiAgdGFyZ2V0PSJfYmxhbmsiICBocmVmPSJodHRwczovL3d3dy5mYWNlYm9vay5jb20vRm9uY2lhIiBkYXRhLWJlaGF0PSJzb2NpYWxMaW5rLUZhY2Vib29rIG1lbnUgZHJvaXQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3ZnIGNsYXNzPSJpY29uIiBzdHlsZT0id2lkdGg6MzhweDtoZWlnaHQ6MzhweCIgYXJpYS1oaWRkZW49InRydWUiPjx1c2UgeGxpbms6aHJlZj0iL2J1bmRsZXMvZm9uY2lhaW50ZXJuZXQvc3ZnL2ljb25zLnN2ZyNJY29uLS1mYWNlYm9vazIiPjwvdXNlPjwvc3ZnPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICAgIDxhIGNsYXNzPSJGb290ZXItLWhhdXQtZGUtcGFnZS0tZGVza3RvcCIgIHRhcmdldD0iX2JsYW5rIiAgaHJlZj0iaHR0cHM6Ly90d2l0dGVyLmNvbS9mb25jaWEiIGRhdGEtYmVoYXQ9InNvY2lhbExpbmstdHdpdHRlciBtZW51IGRyb2l0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHN2ZyBjbGFzcz0iaWNvbiIgc3R5bGU9IndpZHRoOjM4cHg7aGVpZ2h0OjM4cHgiIGFyaWEtaGlkZGVuPSJ0cnVlIj48dXNlIHhsaW5rOmhyZWY9Ii9idW5kbGVzL2ZvbmNpYWludGVybmV0L3N2Zy9pY29ucy5zdmcjSWNvbi0tdHdpdHRlci1yZXBvbnNpdmUiPjwvdXNlPjwvc3ZnPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICA8YSBjbGFzcz0iRm9vdGVyLS1oYXV0LWRlLXBhZ2UiICB0YXJnZXQ9Il9ibGFuayIgIGhyZWY9Imh0dHBzOi8vdHdpdHRlci5jb20vZm9uY2lhIiBkYXRhLWJlaGF0PSJzb2NpYWxMaW5rLXR3aXR0ZXIgbWVudSBkcm9pdCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzdmcgY2xhc3M9Imljb24iIHN0eWxlPSJ3aWR0aDozOHB4O2hlaWdodDozOHB4IiBhcmlhLWhpZGRlbj0idHJ1ZSI+PHVzZSB4bGluazpocmVmPSIvYnVuZGxlcy9mb25jaWFpbnRlcm5ldC9zdmcvaWNvbnMuc3ZnI0ljb24tLXR3aXR0ZXIyIj48L3VzZT48L3N2Zz4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgICA8YSBjbGFzcz0iRm9vdGVyLS1oYXV0LWRlLXBhZ2UtLWRlc2t0b3AiICB0YXJnZXQ9Il9ibGFuayIgIGhyZWY9Imh0dHBzOi8vd3d3LnlvdXR1YmUuY29tL3VzZXIvZm9uY2lhIiBkYXRhLWJlaGF0PSJzb2NpYWxMaW5rLXlvdXR1YmUgbWVudSBkcm9pdCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzdmcgY2xhc3M9Imljb24iIHN0eWxlPSJ3aWR0aDozOHB4O2hlaWdodDozOHB4IiBhcmlhLWhpZGRlbj0idHJ1ZSI+PHVzZSB4bGluazpocmVmPSIvYnVuZGxlcy9mb25jaWFpbnRlcm5ldC9zdmcvaWNvbnMuc3ZnI0ljb24tLXlvdXR1YmUtcmVzcG9uc2l2ZSI+PC91c2U+PC9zdmc+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgIDxhIGNsYXNzPSJGb290ZXItLWhhdXQtZGUtcGFnZSIgIHRhcmdldD0iX2JsYW5rIiAgaHJlZj0iaHR0cHM6Ly93d3cueW91dHViZS5jb20vdXNlci9mb25jaWEiIGRhdGEtYmVoYXQ9InNvY2lhbExpbmsteW91dHViZSBtZW51IGRyb2l0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHN2ZyBjbGFzcz0iaWNvbiIgc3R5bGU9IndpZHRoOjM4cHg7aGVpZ2h0OjM4cHgiIGFyaWEtaGlkZGVuPSJ0cnVlIj48dXNlIHhsaW5rOmhyZWY9Ii9idW5kbGVzL2ZvbmNpYWludGVybmV0L3N2Zy9pY29ucy5zdmcjSWNvbi0teW91dHViZTIiPjwvdXNlPjwvc3ZnPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICAgIDxhIGNsYXNzPSJGb290ZXItLWhhdXQtZGUtcGFnZS0tZGVza3RvcCIgIHRhcmdldD0iX2JsYW5rIiAgaHJlZj0iaHR0cHM6Ly93d3cubGlua2VkaW4uY29tL2NvbXBhbnkvNzcyOTE3LyIgZGF0YS1iZWhhdD0ic29jaWFsTGluay1saW5rZWRpbiBtZW51IGRyb2l0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHN2ZyBjbGFzcz0iaWNvbiIgc3R5bGU9IndpZHRoOjM4cHg7aGVpZ2h0OjM4cHgiIGFyaWEtaGlkZGVuPSJ0cnVlIj48dXNlIHhsaW5rOmhyZWY9Ii9idW5kbGVzL2ZvbmNpYWludGVybmV0L3N2Zy9pY29ucy5zdmcjSWNvbi0tbGlua2VkaW4tcmVzcG9uc2l2ZSI+PC91c2U+PC9zdmc+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgIDxhIGNsYXNzPSJGb290ZXItLWhhdXQtZGUtcGFnZSIgIHRhcmdldD0iX2JsYW5rIiAgaHJlZj0iaHR0cHM6Ly93d3cubGlua2VkaW4uY29tL2NvbXBhbnkvNzcyOTE3LyIgZGF0YS1iZWhhdD0ic29jaWFsTGluay1saW5rZWRpbiBtZW51IGRyb2l0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHN2ZyBjbGFzcz0iaWNvbiIgc3R5bGU9IndpZHRoOjM4cHg7aGVpZ2h0OjM4cHgiIGFyaWEtaGlkZGVuPSJ0cnVlIj48dXNlIHhsaW5rOmhyZWY9Ii9idW5kbGVzL2ZvbmNpYWludGVybmV0L3N2Zy9pY29ucy5zdmcjSWNvbi0tbGlua2VkaW4iPjwvdXNlPjwvc3ZnPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgIAogICAgICAgIDxhIGNsYXNzPSJGb290ZXItLWhhdXQtZGUtcGFnZSIgaHJlZj0iIyIgb25DbGljaz0iJCgnaHRtbCwgYm9keScpLmFuaW1hdGUoe3Njcm9sbFRvcDowfSwgJ3Nsb3cnKTsgcmV0dXJuIGZhbHNlOyI+CiAgICAgICAgICAgIDxzdmcgY2xhc3M9Imljb24iIHN0eWxlPSJ3aWR0aDozOHB4O2hlaWdodDozOHB4IiBhcmlhLWhpZGRlbj0idHJ1ZSI+PHVzZSB4bGluazpocmVmPSIvYnVuZGxlcy9mb25jaWFpbnRlcm5ldC9zdmcvaWNvbnMuc3ZnI0ljb24tLWhhdXRfZGVfcGFnZV9ncmlzIj48L3VzZT48L3N2Zz4KICAgICAgICA8L2E+CiAgICA8L2Rpdj4KCiAgICA8ZGl2IGNsYXNzPSJGb290ZXItcm93IEZvb3Rlci1yb3ctLWxpbmtzMSI+CiAgICAgICAgPGRpdiBjbGFzcz0iRm9vdGVyLWNvbHMiPgogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJGb290ZXItY29sIEZvb3Rlci1jb2wtLWxlZnQiPgogICAgICAgICAgICAgICAgPHVsIGNsYXNzPSJGb290ZXItbWFpbkxpbmtzIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSAgaHJlZj0iaHR0cHM6Ly9mci5mb25jaWEuY29tL2FjaGF0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBBY2hldGVyIHVuIGJpZW4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhICBocmVmPSIvZmFpcmUtZ2VyZXItbWEtbG9jYXRpb24tcGFyLWZvbmNpYSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgRmFpcmUgZ8OpcmVyIG1hIGxvY2F0aW9uCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSAgaHJlZj0iaHR0cHM6Ly9mci5mb25jaWEuY29tL2VzdGltZXItc29uLWJpZW4iPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEVzdGltYXRpb24gYmllbiBpbW1vYmlsaWVyCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSAgaHJlZj0iL2wtaW52ZXN0aXNzZW1lbnQtaW1tb2JpbGllciI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgSW52ZXN0aXIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhICBocmVmPSIvdm90cmUtYWNoYXQtZGFucy1sLWltbW9iaWxpZXItbmV1Zi1hdmVjLWZvbmNpYSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgQWNoYXQgaW1tb2JpbGllciBuZXVmIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdWw+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJGb290ZXItY29sIEZvb3Rlci1jb2wtLXJpZ2h0Ij4KICAgICAgICAgICAgICAgIDx1bCBjbGFzcz0iRm9vdGVyLW1haW5MaW5rcyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgIHRhcmdldD0iX2JsYW5rIiAgaHJlZj0iaHR0cHM6Ly9mci5mb25jaWEuY29tL2xvY2F0aW9uIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBMb3VlciB1biBiaWVuCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSAgaHJlZj0iL2ZhaXJlLWdlcmVyLXVuZS1jb3Byb3ByaWV0ZSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgRmFpcmUgZ8OpcmVyIHVuZSBjb3Byb3ByacOpdMOpCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSAgaHJlZj0iaHR0cHM6Ly9mci5mb25jaWEuY29tL2VzdGltYXRpb24tbG95ZXIiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEVzdGltYXRpb24gbG95ZXIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhICBocmVmPSIvbG9naW4iPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIE15Rm9uY2lhCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSAgaHJlZj0iaHR0cHM6Ly9mci5mb25jaWEuY29tL2FjdHVhbGl0ZXMtZW4tcGVyaW9kZS1kZS1jb25maW5lbWVudCNmYXFhY3R1YWxpdGVzIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBGQVEKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3VsPgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgIDwvZGl2PgoKICAgIDxkaXYgY2xhc3M9IkZvb3Rlci1yb3cgRm9vdGVyLXJvdy0taWRlbnRpdHkgRm9vdGVyLXJvdy0taWRlbnRpdHktcmVmIj4KICAgICAgICA8ZGl2IGNsYXNzPSJGb290ZXItMnBhcnQiPgogICAgICAgICAgICA8cCBjbGFzcz0iRm9vdGVyLXBhcnQxIEZvb3Rlci1wYXJ0MS0tbG9nbyI+CiAgICAgICAgICAgICAgICA8aW1nIHdpZHRoPSIxNTQiIGhlaWdodD0iNDMiIHNyYz0iaHR0cHM6Ly9waG90b3MuZm9uY2lhLm5ldC9pbWFnZXMvRm9uY2lhX2xvZ292XzMwOF84Ni5wbmciIGFsdD0iRm9uY2lhIj4KICAgICAgICAgICAgPC9wPgogICAgICAgICAgICA8dWwgY2xhc3M9IkZvb3Rlci1wYXJ0MiBGb290ZXItcGFydDItLWxpbmtzIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgPGEgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhyZWY9Ii9tZW50aW9ucy1sZWdhbGVzIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1iZWhhdD0ibGluay1NZW50aW9uc19sw6lnYWxlcyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBNZW50aW9ucyBsw6lnYWxlcwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgIDxhICAgICAgICAgICAgICAgICAgICAgICAgICAgICBocmVmPSJodHRwczovL2ZyLmZvbmNpYS5jb20vcGxhbi1kdS1zaXRlIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1iZWhhdD0ibGluay1QbGFuX2R1X3NpdGUiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgUGxhbiBkdSBzaXRlCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgPGEgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhyZWY9Ii8jZm9uY2lhX2NvbnNlbnRlbWVudHMiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkYXRhLWJlaGF0PSJsaW5rLUdlc3Rpb25fZGVzX2Nvb2tpZXMiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgR2VzdGlvbiBkZXMgY29va2llcwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgIDxhICAgICAgICAgICAgICAgICAgICAgICAgICAgICBocmVmPSIvY2hhcnRlLWRlLXByb3RlY3Rpb24tZGVzLWRvbm5lZXMiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkYXRhLWJlaGF0PSJsaW5rLUNoYXJ0ZV9kZV9wcm90ZWN0aW9uX2Rlc19kb25uw6llc18iPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgQ2hhcnRlIGRlIHByb3RlY3Rpb24gZGVzIGRvbm7DqWVzIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgIDxhICAgICAgICAgICAgICAgICAgICAgICAgICAgICBocmVmPSIvbm90cmUtcHJlb2NjdXBhdGlvbi1sYS1zZWN1cml0ZS1kZS12b3MtZG9ubmVlcyIKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtYmVoYXQ9ImxpbmstU8OpY3VyaXTDqV9JbmZvcm1hdGlxdWUiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgU8OpY3VyaXTDqSBJbmZvcm1hdGlxdWUKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICA8YSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaHJlZj0iL3NlcnZpY2VzIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1iZWhhdD0ibGluay1TZXJ2aWNlcyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBTZXJ2aWNlcwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgIDxhICB0YXJnZXQ9Il9ibGFuayIgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhyZWY9Imh0dHA6Ly9wcmVzc3Jvb20uZm9uY2lhLmNvbS8iCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkYXRhLWJlaGF0PSJsaW5rLUVzcGFjZV9QcmVzc2UiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgRXNwYWNlIFByZXNzZQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgIDxhICB0YXJnZXQ9Il9ibGFuayIgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhyZWY9Imh0dHA6Ly9mb25jaWEtcmVjcnV0ZS50YWxlbnQtc29mdC5jb20vYWNjdWVpbC5hc3B4IgogICAgICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1iZWhhdD0ibGluay1Ob3Nfb2ZmcmVzX2TigJllbXBsb2kiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgTm9zIG9mZnJlcyBk4oCZZW1wbG9pCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgPGEgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhyZWY9Ii9hY2hhdC9hdmlzLWNsaWVudHMiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkYXRhLWJlaGF0PSJsaW5rLUF2aXNfY2xpZW50cyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBBdmlzIGNsaWVudHMKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC91bD4KICAgICAgICA8L2Rpdj4KICAgIDwvZGl2PgoKICAgIDxkaXYgY2xhc3M9IkZvb3Rlci1yb3cgRm9vdGVyLXJvdy0tZW5kIj4KICAgICAgICA8ZGl2IGNsYXNzPSJGb290ZXItMnBhcnQiPgogICAgICAgICAgICA8cCBjbGFzcz0iRm9vdGVyLXBhcnQyIEZvb3Rlci1wYXJ0Mi0tY29weSI+CiAgICAgICAgICAgICAgICAmY29weTsyMDIwIEZvbmNpYSBHcm91cGUKICAgICAgICAgICAgPC9wPgogICAgICAgIDwvZGl2PgogICAgPC9kaXY+Cgo8L2Zvb3Rlcj4KPC9kaXY+PCEtLUJvZHlXcmFwcGVyLS0+CgogICAgPHNjcmlwdCBzcmM9Ii9jb21waWxlZC9jb21tb24uanM/dmVyc2lvbj0xNTg4MDk3NTU5Ij48L3NjcmlwdD4KPHNjcmlwdD4KICAgIGZvbmNpYS5zZXNzaW9ucy5pbml0KDkwMDAwMCwgMTgwMDAwKTsKPC9zY3JpcHQ+Cgo8IS0tW2lmIGx0ZSBJRSA5XT48c2NyaXB0IHNyYz0iL2NvbXBpbGVkL3NjcmlwdHMtaWU5LmpzP3ZlcnNpb249MTU4ODA5NzU1OSI+PC9zY3JpcHQ+PCFbZW5kaWZdLS0+CgoKICAgIAo8L2JvZHk+CjwvaHRtbD4K
    http_version: null
  recorded_at: Thu, 28 May 2020 15:38:05 GMT
- request:
    method: get
    uri: https://fr.foncia.com/achat/paris-75011/appartement/1393828.htm
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Wed, 27 May 2020 17:16:38 GMT
      Cache-Control:
      - public, s-maxage=31536000
      Content-Type:
      - text/html; charset=UTF-8
      Vary:
      - Accept-Encoding,Origin
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: null
  recorded_at: Thu, 28 May 2020 15:38:05 GMT
- request:
    method: get
    uri: https://fr.foncia.com/achat/paris-75011/appartement/1397865.htm
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Wed, 27 May 2020 19:39:45 GMT
      Cache-Control:
      - public, s-maxage=31536000
      Content-Type:
      - text/html; charset=UTF-8
      Vary:
      - Accept-Encoding,Origin
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: null
  recorded_at: Thu, 28 May 2020 15:38:05 GMT
- request:
    method: get
    uri: https://fr.foncia.com/achat/paris-75010/appartement/1270911.htm
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Wed, 27 May 2020 17:16:46 GMT
      Cache-Control:
      - public, s-maxage=31536000
      Content-Type:
      - text/html; charset=UTF-8
      Vary:
      - Accept-Encoding,Origin
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: null
  recorded_at: Thu, 28 May 2020 15:38:05 GMT
- request:
    method: get
    uri: https://fr.foncia.com/achat/paris-75010/appartement/1331435.htm
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Wed, 27 May 2020 17:16:36 GMT
      Cache-Control:
      - public, s-maxage=31536000
      Content-Type:
      - text/html; charset=UTF-8
      Vary:
      - Accept-Encoding,Origin
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        PCFET0NUWVBFIGh0bWw+CjxodG1sIGxhbmc9ImZyIj4KPGhlYWQ+CiAgICA8bWV0YSBjaGFyc2V0PSJVVEYtOCI+CiAgICA8bWV0YSBodHRwLWVxdWl2PSJYLVVBLUNvbXBhdGlibGUiIGNvbnRlbnQ9IklFPUVkZ2UiPgogICAgPG1ldGEgbmFtZT0idmlld3BvcnQiIGNvbnRlbnQ9IndpZHRoPWRldmljZS13aWR0aCxpbml0aWFsLXNjYWxlPTEsbWluaW11bS1zY2FsZT0xIj4KCiAgICAKICAgIDx0aXRsZT5BcHBhcnRlbWVudCAzIHBpw6hjZXMgw6AgdmVuZHJlIC0gUGFyaXMgMTDDqG1lICg3NTAxMCkgLSA4MCBtMiAtIEZvbmNpYTwvdGl0bGU+CgogICAgICAgICAgICAgICAgICAgIDxtZXRhIG5hbWU9ImRlc2NyaXB0aW9uIiBjb250ZW50PSJBcHBhcnRlbWVudCAzIHBpw6hjZXMgKDgwIG0yKSDDoCB2ZW5kcmUgLSBQYXJpcyAxMMOobWUgKDc1MDEwKSA6IEVuIGV4Y2x1c2l2aXTDqSwgw6AgZGV1eCBwYXMgZGUgbGEgUG9ydGUgU3QgTWFydGluIGV0IGRlIGxhIE1haXJpZSBkdSBYIMOobWUsIGF1IDLDqG1lIMOpdGFnZSBhdmVjIGFzY2Vuc2V1ciwgYXBwYXJ0ZW1lbnQgZGUgODAgbcKyIGF2ZWMgdW5lIHNldWxlIGNoYW1icmUuIENlLi4uIj4KCiAgICAgICAgICAgICAgICAgICAgICAgIDxsaW5rIHJlbD0iaWNvbiIgdHlwZT0iaW1hZ2UveC1pY29uIiBocmVmPSIvZmF2aWNvbi5pY28/dmVyc2lvbj0xNTg4MDk3NTU5Ij4KICAgICAgICA8bGluayByZWw9ImFwcGxlLXRvdWNoLWljb24tcmV0aW5hIiBocmVmPSIvYnVuZGxlcy9mb25jaWFpbnRlcm5ldC9pbWFnZXMvZW52aXJvbm1lbnQvdG91Y2gtaWNvbi1pcGhvbmUtcmV0aW5hLnBuZz92ZXJzaW9uPTE1ODgwOTc1NTkiPgoKICAgICAgICAgICAgICAgIDxtZXRhIG5hbWU9ImFwcGxpY2F0aW9uLW5hbWUiIGNvbnRlbnQ9IkZvbmNpYS5jb20iPgogICAgICAgIDxtZXRhIG5hbWU9Im1zYXBwbGljYXRpb24tVGlsZUNvbG9yIiBjb250ZW50PSIjMDA5ZWI5Ij4KICAgICAgICA8bWV0YSBuYW1lPSJtc2FwcGxpY2F0aW9uLXNxdWFyZTcweDcwbG9nbyIgY29udGVudD0idGlueS5wbmciPgogICAgICAgIDxtZXRhIG5hbWU9Im1zYXBwbGljYXRpb24tc3F1YXJlMTUweDE1MGxvZ28iIGNvbnRlbnQ9InNxdWFyZS5wbmciPgogICAgICAgIDxtZXRhIG5hbWU9Im1zYXBwbGljYXRpb24td2lkZTMxMHgxNTBsb2dvIiBjb250ZW50PSJ3aWRlLnBuZyI+CiAgICAgICAgPG1ldGEgbmFtZT0ibXNhcHBsaWNhdGlvbi1zcXVhcmUzMTB4MzEwbG9nbyIgY29udGVudD0ibGFyZ2UucG5nIj4KCiAgICAgICAgICAgICAgICA8bWV0YSBwcm9wZXJ0eT0ib2c6dGl0bGUiIGNvbnRlbnQ9IkFwcGFydGVtZW50IDMgcGnDqGNlcyDDoCB2ZW5kcmUgLSBQYXJpcyAxMMOobWUgKDc1MDEwKSAtIDgwIG0yIC0gRm9uY2lhIj4KICAgICAgICA8bWV0YSBwcm9wZXJ0eT0ib2c6c2l0ZV9uYW1lIiBjb250ZW50PSJGT05DSUEiPgogICAgICAgIDxtZXRhIHByb3BlcnR5PSJvZzpkZXNjcmlwdGlvbiIgY29udGVudD0iQXBwYXJ0ZW1lbnQgMyBwacOoY2VzICg4MCBtMikgw6AgdmVuZHJlIC0gUGFyaXMgMTDDqG1lICg3NTAxMCkgOiBFbiBleGNsdXNpdml0w6ksIMOgIGRldXggcGFzIGRlIGxhIFBvcnRlIFN0IE1hcnRpbiBldCBkZSBsYSBNYWlyaWUgZHUgWCDDqG1lLCBhdSAyw6htZSDDqXRhZ2UgYXZlYyBhc2NlbnNldXIsIGFwcGFydGVtZW50IGRlIDgwIG3CsiBhdmVjIHVuZSBzZXVsZSBjaGFtYnJlLiBDZS4uLiI+CiAgICAgICAgPG1ldGEgcHJvcGVydHk9Im9nOnVybCIgY29udGVudD0iaHR0cHM6Ly9mci5mb25jaWEuY29tL2FjaGF0L3BhcmlzLTc1MDEwL2FwcGFydGVtZW50LzEzMzE0MzUuaHRtIj4KICAgICAgICA8bWV0YSBwcm9wZXJ0eT0ib2c6aW1hZ2UiIGNvbnRlbnQ9Imh0dHA6Ly9waG90b3MuZnIuZm9uY2lhLmNvbS9taW5pY3AvNjQwLzQ4MC9waG90b3MvMTMzMS80MzUvMTMzMTQzNS9ncmFuZC8xMzMxNDM1X2ViNDhhMDkxODRkZTQxOGRlNWE1MWFjMzA5NTZkMzU4NWU0NTUxMWYyNTZlYS5qcGc/ZGF0ZW1haj0yMDIwLTAzLTA5IDExOjAzOjQ0LjQyMSI+CgogICAgICAgIDxtZXRhIG5hbWU9InR3aXR0ZXI6dGl0bGUiIGNvbnRlbnQ9IkFwcGFydGVtZW50IDMgcGnDqGNlcyDDoCB2ZW5kcmUgLSBQYXJpcyAxMMOobWUgKDc1MDEwKSAtIDgwIG0yIC0gRm9uY2lhIj4KICAgICAgICA8bWV0YSBuYW1lPSJ0d2l0dGVyOmltYWdlOnNyYyIgY29udGVudD0iaHR0cDovL3Bob3Rvcy5mci5mb25jaWEuY29tL21pbmljcC82NDAvNDgwL3Bob3Rvcy8xMzMxLzQzNS8xMzMxNDM1L2dyYW5kLzEzMzE0MzVfZWI0OGEwOTE4NGRlNDE4ZGU1YTUxYWMzMDk1NmQzNTg1ZTQ1NTExZjI1NmVhLmpwZz9kYXRlbWFqPTIwMjAtMDMtMDkgMTE6MDM6NDQuNDIxIj4KICAgICAgICA8bWV0YSBuYW1lPSJ0d2l0dGVyOmRlc2NyaXB0aW9uIiBjb250ZW50PSJBcHBhcnRlbWVudCAzIHBpw6hjZXMgKDgwIG0yKSDDoCB2ZW5kcmUgLSBQYXJpcyAxMMOobWUgKDc1MDEwKSA6IEVuIGV4Y2x1c2l2aXTDqSwgw6AgZGV1eCBwYXMgZGUgbGEgUG9ydGUgU3QgTWFydGluIGV0IGRlIGxhIE1haXJpZSBkdSBYIMOobWUsIGF1IDLDqG1lIMOpdGFnZSBhdmVjIGFzY2Vuc2V1ciwgYXBwYXJ0ZW1lbnQgZGUgODAgbcKyIGF2ZWMgdW5lIHNldWxlIGNoYW1icmUuIENlLi4uIj4KICAgICAgICA8bWV0YSBuYW1lPSJ0d2l0dGVyOmNhcmQiIGNvbnRlbnQ9InN1bW1hcnkiPgogICAgICAgIDxtZXRhIG5hbWU9InR3aXR0ZXI6c2l0ZSIgY29udGVudD0iQGZvbmNpYSI+CiAgICAKICAgICAgICAgICAgICAgIDxsaW5rIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0iL2NvbXBpbGVkL3N0eWxlcy5jc3M/dmVyc2lvbj0xNTg4MDk3NTU5Ij4KICAgIAogICAgPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPgogICAgdmFyIHRhcnRlYXVjaXRyb25Gb3JjZUNETiA9ICIvYnVuZGxlcy9mb25jaWFpbnRlcm5ldC9qcy90YXJ0ZWF1Y2l0cm9uLyI7Cjwvc2NyaXB0PgoKICAgIDxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0IiBzcmM9Ii9jb21waWxlZC90YXJ0ZWF1Y2l0cm9uLmpzP3ZlcnNpb249MTU4ODA5NzU1OSI+PC9zY3JpcHQ+CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNjcmlwdD53aW5kb3cuZm9uY2lhX2ludGVybmV0PXtwYXJhbXM6e319PC9zY3JpcHQ+CiAgICAgICAgPCEtLVtpZiBJRSA5XT48c2NyaXB0PmRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5jbGFzc05hbWUrPScgSUU5Jzs8L3NjcmlwdD48IVtlbmRpZl0tLT4KPCEtLVtpZiBJRSAxMF0+PHNjcmlwdD5kb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuY2xhc3NOYW1lKz0nIElFMTAnOzwvc2NyaXB0PjwhW2VuZGlmXS0tPgoKPHNjcmlwdD4KIWZ1bmN0aW9uKGEsYil7ImZ1bmN0aW9uIj09dHlwZW9mIGRlZmluZSYmZGVmaW5lLmFtZD9kZWZpbmUoW10sZnVuY3Rpb24oKXtyZXR1cm4gYS5zdmc0ZXZlcnlib2R5PWIoKX0pOiJvYmplY3QiPT10eXBlb2YgZXhwb3J0cz9tb2R1bGUuZXhwb3J0cz1iKCk6YS5zdmc0ZXZlcnlib2R5PWIoKX0odGhpcyxmdW5jdGlvbigpe2Z1bmN0aW9uIGEoYSxiKXtpZihiKXt2YXIgYz1kb2N1bWVudC5jcmVhdGVEb2N1bWVudEZyYWdtZW50KCksZD0hYS5nZXRBdHRyaWJ1dGUoInZpZXdCb3giKSYmYi5nZXRBdHRyaWJ1dGUoInZpZXdCb3giKTtkJiZhLnNldEF0dHJpYnV0ZSgidmlld0JveCIsZCk7Zm9yKHZhciBlPWIuY2xvbmVOb2RlKCEwKTtlLmNoaWxkTm9kZXMubGVuZ3RoOyljLmFwcGVuZENoaWxkKGUuZmlyc3RDaGlsZCk7YS5hcHBlbmRDaGlsZChjKX19ZnVuY3Rpb24gYihiKXtiLm9ucmVhZHlzdGF0ZWNoYW5nZT1mdW5jdGlvbigpe2lmKDQ9PT1iLnJlYWR5U3RhdGUpe3ZhciBjPWIuX2NhY2hlZERvY3VtZW50O2N8fChjPWIuX2NhY2hlZERvY3VtZW50PWRvY3VtZW50LmltcGxlbWVudGF0aW9uLmNyZWF0ZUhUTUxEb2N1bWVudCgiIiksYy5ib2R5LmlubmVySFRNTD1iLnJlc3BvbnNlVGV4dCxiLl9jYWNoZWRUYXJnZXQ9e30pLGIuX2VtYmVkcy5zcGxpY2UoMCkubWFwKGZ1bmN0aW9uKGQpe3ZhciBlPWIuX2NhY2hlZFRhcmdldFtkLmlkXTtlfHwoZT1iLl9jYWNoZWRUYXJnZXRbZC5pZF09Yy5nZXRFbGVtZW50QnlJZChkLmlkKSksYShkLnN2ZyxlKX0pfX0sYi5vbnJlYWR5c3RhdGVjaGFuZ2UoKX1mdW5jdGlvbiBjKGMpe2Z1bmN0aW9uIGQoKXtmb3IodmFyIGM9MDtjPGwubGVuZ3RoOyl7dmFyIGc9bFtjXSxoPWcucGFyZW50Tm9kZTtpZihoJiYvc3ZnL2kudGVzdChoLm5vZGVOYW1lKSl7dmFyIGk9Zy5nZXRBdHRyaWJ1dGUoInhsaW5rOmhyZWYiKTtpZihlJiYoIWYudmFsaWRhdGV8fGYudmFsaWRhdGUoaSxoLGcpKSl7aC5yZW1vdmVDaGlsZChnKTt2YXIgbT1pLnNwbGl0KCIjIiksbj1tLnNoaWZ0KCksbz1tLmpvaW4oIiMiKTtpZihuLmxlbmd0aCl7dmFyIHA9altuXTtwfHwocD1qW25dPW5ldyBYTUxIdHRwUmVxdWVzdCxwLm9wZW4oIkdFVCIsbikscC5zZW5kKCkscC5fZW1iZWRzPVtdKSxwLl9lbWJlZHMucHVzaCh7c3ZnOmgsaWQ6b30pLGIocCl9ZWxzZSBhKGgsZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQobykpfX1lbHNlKytjfWsoZCw2Nyl9dmFyIGUsZj1PYmplY3QoYyksZz0vXGJUcmlkZW50XC9bNTY3XVxifFxiTVNJRSAoPzo5fDEwKVwuMFxiLyxoPS9cYkFwcGxlV2ViS2l0XC8oXGQrKVxiLyxpPS9cYkVkZ2VcLzEyXC4oXGQrKVxiLztlPSJwb2x5ZmlsbCJpbiBmP2YucG9seWZpbGw6Zy50ZXN0KG5hdmlnYXRvci51c2VyQWdlbnQpfHwobmF2aWdhdG9yLnVzZXJBZ2VudC5tYXRjaChpKXx8W10pWzFdPDEwNTQ3fHwobmF2aWdhdG9yLnVzZXJBZ2VudC5tYXRjaChoKXx8W10pWzFdPDUzNzt2YXIgaj17fSxrPXdpbmRvdy5yZXF1ZXN0QW5pbWF0aW9uRnJhbWV8fHNldFRpbWVvdXQsbD1kb2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZSgidXNlIik7ZSYmZCgpfXJldHVybiBjfSk7Cjwvc2NyaXB0Pgo8c2NyaXB0PnN2ZzRldmVyeWJvZHkoKTwvc2NyaXB0PgogICAgCiAgICAgICAgPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiIHNyYz0iaHR0cHM6Ly93d3cuY2l0eXNjYW4uZnIvYXNzZXRzL2J1aWxkL2pzL2xpYi9jaXR5c2Nhbi13aWRnZXQuanMiPjwvc2NyaXB0Pgo8L2hlYWQ+CgoKPGJvZHk+CgogICAgPHNjcmlwdD4KICAgICAgICBkYXRhTGF5ZXIgPSB3aW5kb3cuZGF0YUxheWVyIHx8IHt9OwogICAgICAgIHZhciBvYmplY3QgPSB7CiAgICAgICAgICAgICJ0eXBlU2l0ZSI6ICJnw6luw6lyaXF1ZSIsCiAgICAgICAgICAgICJlc3BhY2UiOiAiZ2VuZXJhbCIsCiAgICAgICAgICAgICJ0eXBlUGFnZSI6ICJjbGFzc2lxdWUiLAogICAgICAgICAgICAidGVtcGxhdGUiOiAicHJvZHVpdCIsCiAgICAgICAgICAgICJ0aGVtZSI6ICJhY2hhdCIKICAgICAgICB9OwoKICAgICAgICBkYXRhTGF5ZXIgPSBbb2JqZWN0XTsKICAgIDwvc2NyaXB0PgoKPHNjcmlwdD4KICAgIGRhdGFMYXllciA9IHdpbmRvdy5kYXRhTGF5ZXIgfHwgW107CgogICAgdmFyIGN1cnJlbnRQYXRoID0gd2luZG93LmxvY2F0aW9uLnBhdGhuYW1lOwoKICAgICAgICAgICAgdmFyIGNvbW1vblVwdGlsYWJWYWx1ZXMgPSB7CiAgICAgICAgInR5cGVTaXRlIjogImfDqW7DqXJpcXVlIiwgLy8gRmV0Y2hlZCBmcm9tIGxheW91dCBnbG9iYWxzCiAgICAgICAgImVzcGFjZSI6ICJnZW5lcmFsIiwKICAgICAgICAidHlwZVBhZ2UiOiAiY2xhc3NpcXVlIiwKICAgICAgICAidGVtcGxhdGUiOiAiYXV0cmVzIgogICAgfTsKCiAgICAvLyBEZXBlbmRpbmcgb24gY3VycmVudCBwYXRobmFtZSwgd2UgZGlzcGF0Y2ggYW4gZXZlbnQsIHVzZWQgZm9yIEJhY2stT2ZmaWNlIHBhZ2VzCiAgICBzd2l0Y2ggKHRydWUpIHsKICAgICAgICBjYXNlIGN1cnJlbnRQYXRoLmluZGV4T2YoIi9hY2hhdC8iKSA9PT0gMDogLy8gUGFnZSBhY2hhdCAoYXZlYyByZWNoZXJjaGUgZW4gY291cnMpCiAgICAgICAgICAgIC8vIEV2ZW50CiAgICAgICAgICAgIGRhdGFMYXllci5wdXNoKHsiY3VzdG9tQ2F0ZWdvcmllIjogImVuZ2FnZW1lbnQiLCAiY3VzdG9tQWN0aW9uIjogImludGVyZXQiLCAiY3VzdG9tTGFiZWwiOiAiQWNoZXRlciIsICJldmVudCI6ICJjdXN0b21FdmVudCJ9KTsKICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgY2FzZSBjdXJyZW50UGF0aC5pbmRleE9mKCIvbG9jYXRpb24vIikgPT09IDA6IC8vIFBhZ2UgbG9jYXRpb24gKGF2ZWMgcmVjaGVyY2hlIGVuIGNvdXJzKQogICAgICAgICAgICAvLyBFdmVudAogICAgICAgICAgICBkYXRhTGF5ZXIucHVzaCh7ImN1c3RvbUNhdGVnb3JpZSI6ICJlbmdhZ2VtZW50IiwgImN1c3RvbUFjdGlvbiI6ICJpbnRlcmV0IiwgImN1c3RvbUxhYmVsIjogIkxvdWVyIiwgImV2ZW50IjogImN1c3RvbUV2ZW50In0pOwogICAgICAgICAgICBicmVhazsKICAgICAgICBjYXNlIGN1cnJlbnRQYXRoLmluZGV4T2YoIi9yZWNoZXJjaGUvcGFjay1lYXN5bG9jIikgPT09IDA6IC8vIExhIHBhZ2UgcGFjay1lYXN5bG9jCiAgICAgICAgICAgIGNvbW1vblVwdGlsYWJWYWx1ZXMudGhlbWUgPSAibG9jYXRpb24iOwogICAgICAgICAgICBkYXRhTGF5ZXIucHVzaChjb21tb25VcHRpbGFiVmFsdWVzKTsKICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgY2FzZSBjdXJyZW50UGF0aC5pbmRleE9mKCIvcmVjaGVyY2hlL2FjaGV0ZXItdW4tYmllbiIpID09PSAwOiAvLyBMYSBwYWdlIGFjaGV0ZXIgdW4gYmllbgogICAgICAgICAgICBjb21tb25VcHRpbGFiVmFsdWVzLnRoZW1lID0gImFjaGF0IjsKICAgICAgICAgICAgZGF0YUxheWVyLnB1c2goY29tbW9uVXB0aWxhYlZhbHVlcyk7CiAgICAgICAgICAgIGJyZWFrOwogICAgICAgIGNhc2UgY3VycmVudFBhdGguaW5kZXhPZigiL2xlLWdyb3VwZSIpID09PSAwOiAvLyBQYWdlIG91IHNvdXMtcGFnZXMgIkxlIGdyb3VwZSIKICAgICAgICAgICAgY29tbW9uVXB0aWxhYlZhbHVlcy50aGVtZSA9ICJncm91cGUiOwogICAgICAgICAgICBkYXRhTGF5ZXIucHVzaChjb21tb25VcHRpbGFiVmFsdWVzKTsKICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgY2FzZSBjdXJyZW50UGF0aC5pbmRleE9mKCIvbC1pbnZlc3Rpc3NlbWVudC1pbW1vYmlsaWVyIikgPT09IDA6IC8vIFBhZ2Ugb3Ugc291cy1wYWdlcyAiTCdpbnZlc3Rpc3NlbWVudCBpbW1vYmlsaWVyIgogICAgICAgICAgICBjb21tb25VcHRpbGFiVmFsdWVzLnRoZW1lID0gImludmVzdGlzc2VtZW50IjsKICAgICAgICAgICAgZGF0YUxheWVyLnB1c2goY29tbW9uVXB0aWxhYlZhbHVlcyk7CiAgICAgICAgICAgIGJyZWFrOwogICAgICAgIGNhc2UgY3VycmVudFBhdGguaW5kZXhPZigiL2ZhaXJlLWdlcmVyLW1hLWxvY2F0aW9uLXBhci1mb25jaWEiKSA9PT0gMDogLy8gUGFnZSBvdSBzb3VzLXBhZ2VzICJGYWlyZSBnw6lyZXIgbWEgbG9jYXRpb24iCiAgICAgICAgICAgIGNvbW1vblVwdGlsYWJWYWx1ZXMudGhlbWUgPSAiZ2VzdGlvbkxvY2F0aXZlIjsKICAgICAgICAgICAgZGF0YUxheWVyLnB1c2goY29tbW9uVXB0aWxhYlZhbHVlcyk7CiAgICAgICAgICAgIGJyZWFrOwogICAgICAgIGNhc2UgY3VycmVudFBhdGguaW5kZXhPZigiL2ZhaXJlLWdlcmVyLXVuZS1jb3Byb3ByaWV0ZSIpID09PSAwOiAvLyBQYWdlIG91IHNvdXMtcGFnZXMgIkZhaXJlIGfDqXJlciB1bmUgY29wcm9wcmnDqXTDqSIKICAgICAgICAgICAgY29tbW9uVXB0aWxhYlZhbHVlcy50aGVtZSA9ICJjb3Byb3ByaWV0ZSI7CiAgICAgICAgICAgIGRhdGFMYXllci5wdXNoKGNvbW1vblVwdGlsYWJWYWx1ZXMpOwogICAgICAgICAgICBicmVhazsKICAgICAgICBjYXNlIGN1cnJlbnRQYXRoLmluZGV4T2YoIi9zZXJ2aWNlcyIpID09PSAwOiAvLyBQYWdlIG91IHNvdXMtcGFnZXMgIkZhaXJlIGfDqXJlciB1bmUgY29wcm9wcmnDqXTDqSIKICAgICAgICAgICAgY29tbW9uVXB0aWxhYlZhbHVlcy50aGVtZSA9ICJzZXJ2aWNlcyI7CiAgICAgICAgICAgIGRhdGFMYXllci5wdXNoKGNvbW1vblVwdGlsYWJWYWx1ZXMpOwogICAgICAgICAgICBicmVhazsKICAgICAgICBjYXNlIGN1cnJlbnRQYXRoID09PSAnL21vdC1kZS1wYXNzZS1vdWJsaWUnOgogICAgICAgICAgICBjb21tb25VcHRpbGFiVmFsdWVzLnRlbXBsYXRlID0gImhvbWVwYWdlIjsKICAgICAgICAgICAgZGF0YUxheWVyLnB1c2goY29tbW9uVXB0aWxhYlZhbHVlcyk7CiAgICAgICAgICAgIGJyZWFrOwogICAgICAgIGNhc2UgY3VycmVudFBhdGggPT09ICcvJzoKICAgICAgICAgICAgY29tbW9uVXB0aWxhYlZhbHVlcy50ZW1wbGF0ZSA9ICJob21lcGFnZSI7CiAgICAgICAgICAgIGRhdGFMYXllci5wdXNoKGNvbW1vblVwdGlsYWJWYWx1ZXMpOwogICAgICAgICAgICBicmVhazsKICAgIH0KICAgIAogICAgPC9zY3JpcHQ+Cjxub3NjcmlwdD48aWZyYW1lIHNyYz0iLy93d3cuZ29vZ2xldGFnbWFuYWdlci5jb20vbnMuaHRtbD9pZD1HVE0tUEJCWldEIiBoZWlnaHQ9IjAiIHdpZHRoPSIwIiBzdHlsZT0iZGlzcGxheTpub25lO3Zpc2liaWxpdHk6aGlkZGVuIj48L2lmcmFtZT48L25vc2NyaXB0Pgo8c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCI+CiAgICB0YXJ0ZWF1Y2l0cm9uLnVzZXIuZ29vZ2xldGFnbWFuYWdlcklkID0gJ0dUTS1QQkJaV0QnOwogICAgKHRhcnRlYXVjaXRyb24uam9iID0gdGFydGVhdWNpdHJvbi5qb2IgfHwgW10pLnB1c2goJ2dvb2dsZXRhZ21hbmFnZXJfZm9uY2lhJyk7CgogICAgdGFydGVhdWNpdHJvbi51c2VyLkFCVGFzdHlJZCA9ICIwZTZkOWVhMjQ3MjgyMDcyY2UzYTg0MTMwZmM4ZTcxMiI7CiAgICAodGFydGVhdWNpdHJvbi5qb2IgPSB0YXJ0ZWF1Y2l0cm9uLmpvYiB8fCBbXSkucHVzaCgnYWJ0YXN0eV9mb25jaWEnKTsKPC9zY3JpcHQ+Cgo8c2NyaXB0PgogICAgICAgIGRhdGFMYXllciA9IHdpbmRvdy5kYXRhTGF5ZXIgfHwgW107CgogICAgICAgIGZ1bmN0aW9uIGRlZmVyKG1ldGhvZCkgewogICAgICAgIGlmICh3aW5kb3cualF1ZXJ5KQogICAgICAgICAgICBtZXRob2QoKTsKICAgICAgICBlbHNlCiAgICAgICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkgewogICAgICAgICAgICAgICAgZGVmZXIobWV0aG9kKQogICAgICAgICAgICB9LCA1MCk7CiAgICB9CgogICAgCiAgICAKPC9zY3JpcHQ+Cgo8ZGl2IGNsYXNzPSJCb2R5V3JhcHBlciI+CgogICAgPGhlYWRlciBjbGFzcz0iSGVhZGVyIiByb2xlPSJiYW5uZXIiPgoKICAgIAogICAgPGRpdiBjbGFzcz0iSGVhZGVyLXRvcCI+CgogICAgICAgICAgICA8dWwgY2xhc3M9IkhlYWRlci10b3BOYXYgSGVhZGVyLXRvcC1sZWZ0Ij4KCiAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL2ZyLmZvbmNpYS5jb20vbm90cmUtYW1iaXRpb24iCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtYmVoYXQ9IkxlZ3JvdXBlIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgTGUgZ3JvdXBlCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cDovL2NhcnJpZXJlLmZvbmNpYS5jb20vIgogICAgICAgICAgICAgICAgICAgICAgICB0YXJnZXQ9Il9ibGFuayIgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtYmVoYXQ9IkNhcnJpw6hyZSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIENhcnJpw6hyZQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHA6Ly9mb25jaWEtcmVjcnV0ZS50YWxlbnQtc29mdC5jb20vYWNjdWVpbC5hc3B4IgogICAgICAgICAgICAgICAgICAgICAgICB0YXJnZXQ9Il9ibGFuayIgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtYmVoYXQ9Ik5vc29mZnJlc2TigJllbXBsb2kiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBOb3Mgb2ZmcmVzIGTigJllbXBsb2kKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL2ZyLmZvbmNpYS5jb20vbW9uLWd1aWRlLWltbW8iCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtYmVoYXQ9Ik1vbkd1aWRlSW1tbyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIE1vbiBHdWlkZSBJbW1vCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cDovL2JlbGxlc3BlcnNvbm5lcy5mb25jaWEuY29tLyIKICAgICAgICAgICAgICAgICAgICAgICAgdGFyZ2V0PSJfYmxhbmsiICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkYXRhLWJlaGF0PSJCZWxsZXNwZXJzb25uZXMiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBCZWxsZXMgcGVyc29ubmVzCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZnIuZm9uY2lhLmNvbS9hY3R1YWxpdGVzLWVuLXBlcmlvZGUtZGUtZGVjb25maW5lbWVudCIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZT0iY29sb3I6ICNGQThBMDA7Zm9udC13ZWlnaHQ6IGJvbGQ7IiAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1iZWhhdD0iQWN0dWFsaXTDqXMiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBBY3R1YWxpdMOpcwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgPC91bD4KICAgIAogICAgPHVsIGNsYXNzPSJIZWFkZXItdG9wTmF2IEhlYWRlci10b3AtcmlnaHQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgPGEgIGNsYXNzPSJJY29uLS1wb2ludGVyIiBocmVmPSJodHRwOi8vYWdlbmNlLmZvbmNpYS5jb20iIGRhdGEtYmVoYXQ9ImhlYWRlclRyb3V2ZXJBZ2VuY2VMaWVuIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFRyb3V2ZXIgdW5lIGFnZW5jZQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC91bD4KPC9kaXY+CgoKICAgIDxwIGNsYXNzPSJIZWFkZXItc2tpcGxpbmsiPgogICAgICAgIDxhIGNsYXNzPSJIZWFkZXItbG9nbyIgaHJlZj0iLyI+CiAgICAgICAgICAgIDxpbWcgY2xhc3M9IkhlYWRlci1sb2dvLS1kZXNrdG9wIiB3aWR0aD0iNjRweCIgaGVpZ2h0PSI2NHB4IiBzcmM9Imh0dHBzOi8vcGhvdG9zLmZvbmNpYS5uZXQvaW1hZ2VzL0ZvbmNpYV9sb2dvaF82Nl82Ni5wbmciIGFsdD0iRm9uY2lhIj4KICAgICAgICAgICAgPGltZyBjbGFzcz0iSGVhZGVyLWxvZ28tLW1vYmlsZSIgd2lkdGg9IjEwOHB4IiBoZWlnaHQ9IjMwcHgiIHNyYz0iaHR0cHM6Ly9waG90b3MuZm9uY2lhLm5ldC9pbWFnZXMvRm9uY2lhX2hvbWVwYWdldl8xMDhfMzAucG5nIiBhbHQ9IkZvbmNpYSI+CiAgICAgICAgPC9hPgogICAgICAgIDxidXR0b24gY2xhc3M9IkhlYWRlci1za2lwbGluay1tZW51IEljb24tLW1lbnUiIGRhdGEtd2lkZ2V0PSJQYW5lbFNsaWRlLXRyaWdlciIgZGF0YS13aWRnZXQtc2lkZT0ibGVmdCI+TWVudTwvYnV0dG9uPgogICAgICAgIDxhIGhyZWY9Ii9sb2dpbiIgY2xhc3M9IkhlYWRlci1za2lwbGluay11c2VyIEljb24tLXVzZXItbWFsZTIiPk15Rk9OQ0lBPC9hPgogICAgPC9wPgoKICAgIDxuYXYgY2xhc3M9Ik1haW5OYXYiIHJvbGU9Im5hdmlnYXRpb24iPgogICAgICAgIDx1bCBjbGFzcz0iTWFpbk5hdi1saXN0IEhlYWRlci10b3BOYXYiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaSBjbGFzcz0iTWFpbk5hdi1pdGVtIE1haW5OYXYtaXRlbS0tbG9jYXRpb24gZmlyc3QiPiAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9mci5mb25jaWEuY29tL2FjaGF0IiAgICA+QWNoZXRlciA8c3Bhbj5vdSBsb3Vlcjwvc3Bhbj48L2E+ICAgICAgICAgICAgCiAgICA8L2xpPgoKICAgICAgICA8bGkgY2xhc3M9Ik1haW5OYXYtaXRlbSBNYWluTmF2LWl0ZW0tLWdlc3Rpb24iPiAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9mci5mb25jaWEuY29tL2ZhaXJlLWdlcmVyLW1hLWxvY2F0aW9uLXBhci1mb25jaWEiICAgID5GYWlyZSBnw6lyZXIgPHNwYW4+bWEgbG9jYXRpb248L3NwYW4+PC9hPiAgICAgICAgICAgIAogICAgPC9saT4KCiAgICAgICAgPGxpIGNsYXNzPSJNYWluTmF2LWl0ZW0gTWFpbk5hdi1pdGVtLS1jb3BybyI+ICAgICAgICA8YSBocmVmPSJodHRwczovL2ZyLmZvbmNpYS5jb20vZmFpcmUtZ2VyZXItdW5lLWNvcHJvcHJpZXRlIiAgICA+RmFpcmUgZ8OpcmVyIDxzcGFuPnVuZSBjb3Byb3ByacOpdMOpPC9zcGFuPjwvYT4gICAgICAgICAgICAKICAgIDwvbGk+CgogICAgICAgIDxsaSBjbGFzcz0iTWFpbk5hdi1pdGVtIE1haW5OYXYtaXRlbS0tdmVudGUiPiAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9mci5mb25jaWEuY29tL2VzdGltZXItZXQtdmVuZHJlIiAgICA+RXN0aW1lciA8c3Bhbj5ldCB2ZW5kcmU8L3NwYW4+PC9hPiAgICAgICAgICAgIAogICAgPC9saT4KCiAgICAgICAgPGxpIGNsYXNzPSJNYWluTmF2LWl0ZW0gTWFpbk5hdi1pdGVtLS1pbnZlc3Rpc3NlbWVudCI+ICAgICAgICA8YSBocmVmPSJodHRwczovL2ZyLmZvbmNpYS5jb20vbC1pbnZlc3Rpc3NlbWVudC1pbW1vYmlsaWVyIiAgICA+SW52ZXN0aXIgPHNwYW4+ZGFucyBsJiMwMzk7aW1tb2JpbGllcjwvc3Bhbj48L2E+ICAgICAgICAgICAgCiAgICA8L2xpPgoKICAgICAgICA8bGkgY2xhc3M9Ik1haW5OYXYtaXRlbSBNYWluTmF2LWl0ZW0tLWxvY2F0aW9udmFjYW5jZXMgbGFzdCI+ICAgICAgICA8YSBocmVmPSJodHRwczovL3d3dy5mb25jaWEtbG9jYXRpb24tdmFjYW5jZXMuZnIvI3V0bV9zb3VyY2U9Zm9uY2lhLmNvbSZhbXA7dXRtX21lZGl1bT1saWVuJmFtcDt1dG1fY2FtcGFpZ249Zm9uY2lhLmNvbSIgICAgIHRhcmdldD0iX2JsYW5rIj5Mb2NhdGlvbiA8c3Bhbj5WYWNhbmNlczwvc3Bhbj48L2E+ICAgICAgICAgICAgCiAgICA8L2xpPgoKCiAgICAKCgogICAgICAgICAgICA8bGkgY2xhc3M9Ik1haW5OYXYtaXRlbSBNYWluTmF2LWl0ZW0tLXVzZXIgbGFzdCI+CiAgICAgICAgICAgICAgICA8YSBocmVmPSIvbG9naW4iPk15Rk9OQ0lBIDxzcGFuPkVTUEFDRSBDTElFTlQ8L3NwYW4+PC9hPgogICAgICAgICAgICA8L2xpPgogICAgICAgIDwvdWw+CiAgICA8L25hdj4KCiAgICA8ZGl2IGNsYXNzPSJVc2VyTmF2IiBpZD0iTXlGb25jaWFNZW51Ij4KCiAgICA8ZGl2IGNsYXNzPSJVc2VyTmF2LW92ZXJmbG93ICI+CiAgICAgICAgCiAgICAgICAgPGRpdiBjbGFzcz0iVXNlckxvZ2luIj4KICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgIDxkaXYgY2xhc3M9IlVzZXJMb2dpbi1pbmZvIj4KICAgICAgICAgICAgPHAgY2xhc3M9IlVzZXJMb2dpbi10aXRsZSI+UHJlbWnDqHJlIGNvbm5leGlvbiA/PC9wPgogICAgCgogICAgCiAgICAgICAgPHAgY2xhc3M9IlVzZXJMb2dpbi1pbGwiPgogICAgICAgICAgICAgICAgPGltZyBzcmM9Imh0dHBzOi8vZnIuZm9uY2lhLmNvbS92YXIvZm9uY2lhL3N0b3JhZ2UvaW1hZ2VzL19hbGlhc2VzL3RodW1iXzIwNV8yMDUvbWVkaWEvaW1hZ2VzL2FpZGUvMzU3MC0yLWZyZS1GUi9BaWRlLnBuZyIgIGFsdD0iIiAvPgogICAgICAgIDwvcD4KCiAgICAKICAgIAogICAgICAgICAgICA8cCBjbGFzcz0iVXNlckxvZ2luLXRleHQiPkxvcnMgZGUgdm90cmUgcHJlbWnDqHJlIGNvbm5leGlvbiDDoCB2b3RyZSBlc3BhY2UgY2xpZW50IE15Rm9uY2lhLCB2b3VzIGRldmV6IHNhaXNpciB2b3RyZSBpZGVudGlmaWFudCBldCBsZSBtb3QgZGUgcGFzc2UgcHJvdmlzb2lyZSBxdWkgdm91cyBvbnQgw6l0w6kgdHJhbnNtaXMgcGFyIHZvdHJlIGFnZW5jZSBvdSBzdXIgdm9zIGRvY3VtZW50cyBjb21wdGFibGVzLjwvcD4KICAgIAoKICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CjxwIGNsYXNzPSJVc2VyTG9naW4tY3JlYXRlIj5QcmVtacOocmUgY29ubmV4aW9uID8gPGEKICAgICAgICAgICAgICAgIGhyZWY9Ii9wcmVtaWVyZS1jb25uZXhpb24tYS1tb24tZXNwYWNlLWNsaWVudC1mb25jaWEiPkTDqWNvdXZyZXogY29tbWVudCB2b3VzIGNvbm5lY3RlcjwvYT48L3A+CgoKICAgICAgICAKICAgICAgICA8L2Rpdj4KCiAgICA8L2Rpdj4KCjwvZGl2PgoKICAgICAgICAgICAgICAgICAgICAgICAgPC9oZWFkZXI+CiAgICAKPCEtLVtpZiBsdGUgSUUgOSBdPgo8ZGl2IGNsYXNzPSJCcm93c2VyQWxlcnQgQnJvd3NlckFsZXJ0LS12aXNpYmxlIj4KICAgIDxkaXYgY2xhc3M9IkJyb3dzZXJBbGVydC1pbm5lciI+CiAgICAgICAgPHNwYW4gY2xhc3M9IkJyb3dzZXJBbGVydC1pY29uIj4KICAgICAgICAgICAgPHN2ZyBjbGFzcz0iaWNvbiIgd2lkdGg9IjMyIiBoZWlnaHQ9IjMyIiBhcmlhLWhpZGRlbj0idHJ1ZSI+PHVzZSB4bGluazpocmVmPSIvYnVuZGxlcy9mb25jaWFpbnRlcm5ldC9zdmcvaWNvbnMuc3ZnI0ljb24tLWluZm8iPjwvdXNlPjwvc3ZnPgogICAgICAgIDwvc3Bhbj4KICAgICAgICA8cCBjbGFzcz0iQnJvd3NlckFsZXJ0LW1lc3NhZ2UiPgogICAgICAgICAgICBBdHRlbnRpb24sIHZvdHJlIG5hdmlnYXRldXIgbuKAmWVzdCBwYXMgw6Agam91ciAhIEFmaW4gZCdhbcOpbGlvcmVyIHZvdHJlIGV4cMOpcmllbmNlIHN1ciBjZSBzaXRlIG5vdXMgdm91cyBjb25zZWlsbG9ucyBkZSBtZXR0cmUgw6Agam91ciB2b3RyZSBuYXZpZ2F0ZXVyIHZlcnMgdW5lIHZlcnNpb24gcGx1cyByw6ljZW50ZQogICAgICAgIDwvcD4KICAgICAgICA8c3BhbiBjbGFzcz0iQnJvd3NlckFsZXJ0LWNsb3NlIj4KICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz0iQnJvd3NlckFsZXJ0LWNsb3NlQnRuIiBhcmlhLWxhYmVsPSJNYXNxdWVyIGNlIG1lc3NhZ2UiPgogICAgICAgICAgICAgICAgPHN2ZyBjbGFzcz0iaWNvbiIgd2lkdGg9IjEyIiBoZWlnaHQ9IjEyIiBhcmlhLWhpZGRlbj0idHJ1ZSI+PHVzZSB4bGluazpocmVmPSIvYnVuZGxlcy9mb25jaWFpbnRlcm5ldC9zdmcvaWNvbnMuc3ZnI0ljb24tLWNsb3NlMiI+PC91c2U+PC9zdmc+CiAgICAgICAgICAgIDwvYnV0dG9uPgogICAgICAgIDwvc3Bhbj4KICAgIDwvZGl2Pgo8L2Rpdj4KPCFbZW5kaWZdLS0+CgoKCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9IkJyZWFkY3J1bWJzIj4KICAgICAgICAgICAgPHAgICAgIGNsYXNzPSJCcmVhZGNydW1icy1pbm5lciIgZGF0YS10eXBlPSJ5b2xvIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3Bhbj5Gb25jaWE8L3NwYW4+ICAgICAgICAgICAgICAgICAgICAgICAgICAgIAoKICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iL2FjaGF0IiAgICAgY2xhc3M9IkJyZWFkY3J1bWJzLWxpbmsiPkFjaGF0PC9hPiAgICAgICAgICAgICAgICAgICAgICAgICAgICAKCiAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Ii9hY2hhdC9wYXJpcy03NTAxMCIgICAgIGNsYXNzPSJCcmVhZGNydW1icy1saW5rIj5QYXJpcyAoNzUwMTApPC9hPiAgICAgICAgICAgICAgICAgICAgICAgICAgICAKCiAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuPkFwcGFydGVtZW50PC9zcGFuPiAgICAgICAgICAgICAgICAgICAgICAgICAgICAKCiAgICAKCiAgICAgICAgICAgIDwvcD4KICAgICAgICA8L2Rpdj4KICAgIAoKCiAgICAgICAgICAgICAgICAgICAgICAgIAogICAgCiAgICAKICAgIDxkaXYgY2xhc3M9IkNvbnRlbnQiPgoKICAgICAgICA8ZGl2IGNsYXNzPSJDb250ZW50LWJhbmRvIENvbnRlbnQtYmFuZG8tLWdyYWRpZW50Ij48L2Rpdj4KCiAgICAgICAgPGRpdiBjbGFzcz0iUmVzdWx0c05hdiIgZGF0YS1wcm9wZXJ0eS1yZWZlcmVuY2U9IjEzMzE0MzUiPgoKICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICA8c2VjdGlvbiBjbGFzcz0iQ29udGVudC1yb3cgQ29udGVudC1yb3ctLWJsZWVkIj4KICAgICAgICAgICAgICAgIDxkaXYgaWQ9ImNpdHlzY2FuLXdpZGdldCIKICAgICBkYXRhLWNsaWVudC1rZXk9Ik52MUM5MmdQRGJmNE9KOHl3MiIKICAgICBkYXRhLWV4dC1hZGRyZXNzLWlkPSJUMTMzMTQzNSIKICAgICBkYXRhLWxhbmd1YWdlPSJmci1GUiIKICAgICAgICAgIGNsYXNzPSJPZmZlck1hcCI+PC9kaXY+ICAgICAgICAgICAgPC9zZWN0aW9uPgogICAgICAgICAgICAgICAgPHNlY3Rpb24gY2xhc3M9IkNvbnRlbnQtcm93IENvbnRlbnQtcm93LS1ncmF5Ij4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iQ29udGVudC1vdmVyZmxvdyI+CgogICAgICAgICAgICAgICAgPG1haW4gY2xhc3M9IkNvbnRlbnQtbWFpbiIgcm9sZT0ibWFpbiI+CgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Ik9mZmVyVG9wIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iT2ZmZXJUb3AtaGVhZCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJPZmZlclRvcC1iYWRnZSI+RXhjbHVzaWY8L3A+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGgxIGNsYXNzPSJPZmZlclRvcC10aXRsZSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgQXBwYXJ0ZW1lbnQKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAzIHBpw6hjZXMgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIMOgIHZlbmRyZQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2gxPgogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9Ik9mZmVyVG9wLWZhdiI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIGNsYXNzPSJGYXZCdG4gRmF2QnRuLS1pbmFjdGl2ZSIgYXJpYS1sYWJlbD0iQWpvdXRlciBhdXggZmF2b3JpcyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHN2ZyBjbGFzcz0iaWNvbiIgc3R5bGU9IndpZHRoOjE1cHg7aGVpZ2h0OjE1cHgiIGFyaWEtaGlkZGVuPSJ0cnVlIj48dXNlIHhsaW5rOmhyZWY9Ii9idW5kbGVzL2ZvbmNpYWludGVybmV0L3N2Zy9pY29ucy5zdmcjSWNvbi0tc3RhcjIiPjwvdXNlPjwvc3ZnPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9idXR0b24+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvcD4KCiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Ik9mZmVyVG9wLWNvbHMiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iT2ZmZXJUb3AtY29sIE9mZmVyVG9wLWNvbC0tbGVmdCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9Ik9mZmVyVG9wLXByaWNlIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDc5OSAwMDAmbmJzcDvigqwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3A+CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJPZmZlclRvcC1pbmZvIj5Ib25vcmFpcmVzIGQnYWdlbmNlIMOgIGxhIGNoYXJnZSBkdSB2ZW5kZXVyPC9wPgoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0iT2ZmZXJUb3AtbG9jIiBkYXRhLWd0bS16aXBjb2RlPSI3NTAxMCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzdmcgY2xhc3M9Imljb24iIHN0eWxlPSJ3aWR0aDoxNnB4O2hlaWdodDoxNnB4IiBhcmlhLWhpZGRlbj0idHJ1ZSI+PHVzZSB4bGluazpocmVmPSIvYnVuZGxlcy9mb25jaWFpbnRlcm5ldC9zdmcvaWNvbnMuc3ZnI0ljb24tLXBvaW50ZXIzIj48L3VzZT48L3N2Zz4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgNzUwMTAgUGFyaXMgKDc1MDEwKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iT2ZmZXJUb3AtY29sIE9mZmVyVG9wLWNvbC0tcmlnaHQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Ik1pbmlEYXRhIE1pbmlEYXRhLS1mbGV4Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iTWluaURhdGEtcm93IE1pbmlEYXRhLXJvdy0tYmciPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0iTWluaURhdGEtaXRlbSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDgwIG08c3VwPjI8L3N1cD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3A+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0iTWluaURhdGEtaXRlbSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDMgcGnDqGNlcyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9Ik1pbmlEYXRhLWl0ZW0iPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAxIGNoYW1icmUgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJPZmZlclNsaWRlciI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iT2ZmZXJTbGlkZXItbWFpbiIgaWQ9Ik9mZmVyU2xpZGVyTWFpbiI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx1bCBjbGFzcz0iT2ZmZXJTbGlkZXItbWFpbi1zbGlkZXMiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGkgY2xhc3M9Ik9mZmVyU2xpZGVyLW1haW4taXRlbSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgc3JjPSJodHRwOi8vcGhvdG9zLmZyLmZvbmNpYS5jb20vbWluaWNwLzY0MC80ODAvcGhvdG9zLzEzMzEvNDM1LzEzMzE0MzUvZ3JhbmQvMTMzMTQzNV9lYjQ4YTA5MTg0ZGU0MThkZTVhNTFhYzMwOTU2ZDM1ODVlNDU1MTFmMjU2ZWEuanBnP2RhdGVtYWo9MjAyMC0wMy0wOSAxMTowMzo0NC40MjEiIHdpZHRoPSI2MDAiIGhlaWdodD0iNDUwIiBhbHQ9IkFwcGFydGVtZW50IMOgIHZlbmRyZSwgUGFyaXMgKDc1MDEwKSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpIGNsYXNzPSJPZmZlclNsaWRlci1tYWluLWl0ZW0iPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW1nIHNyYz0iaHR0cDovL3Bob3Rvcy5mci5mb25jaWEuY29tL21pbmljcC82NDAvNDgwL3Bob3Rvcy8xMzMxLzQzNS8xMzMxNDM1L2dyYW5kLzEzMzE0MzVfZmZjYTY5NWFlMjhmYjA2NmRiNGVkNDY3OTlhYTJlNTU1ZTNhYzFhYTFkM2Y1LmpwZz9kYXRlbWFqPTIwMjAtMDMtMDkgMTE6MDM6NDQuNDUyIiB3aWR0aD0iNjAwIiBoZWlnaHQ9IjQ1MCIgYWx0PSJBcHBhcnRlbWVudCDDoCB2ZW5kcmUsIFBhcmlzICg3NTAxMCkiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaSBjbGFzcz0iT2ZmZXJTbGlkZXItbWFpbi1pdGVtIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBzcmM9Imh0dHA6Ly9waG90b3MuZnIuZm9uY2lhLmNvbS9taW5pY3AvNjQwLzQ4MC9waG90b3MvMTMzMS80MzUvMTMzMTQzNS9ncmFuZC8xMzMxNDM1X2QwYjQwZjA4MTY5YTgxNWUxNGFmMWMwNWExNmQxMGI2NWUzYWMyZjdjZTVhNC5qcGc/ZGF0ZW1haj0yMDIwLTAzLTA5IDExOjAzOjQ0LjQ4MyIgd2lkdGg9IjYwMCIgaGVpZ2h0PSI0NTAiIGFsdD0iQXBwYXJ0ZW1lbnQgw6AgdmVuZHJlLCBQYXJpcyAoNzUwMTApIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGkgY2xhc3M9Ik9mZmVyU2xpZGVyLW1haW4taXRlbSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgc3JjPSJodHRwOi8vcGhvdG9zLmZyLmZvbmNpYS5jb20vbWluaWNwLzY0MC80ODAvcGhvdG9zLzEzMzEvNDM1LzEzMzE0MzUvZ3JhbmQvMTMzMTQzNV83Nzg1ZWM3MDZmOTU4MDM4NmY5N2Q3Yjc0ZTJlNmQwZDVlM2FjMWZjMDY1YTcuanBnP2RhdGVtYWo9MjAyMC0wMy0wOSAxMTowMzo0NC43MTgiIHdpZHRoPSI2MDAiIGhlaWdodD0iNDUwIiBhbHQ9IkFwcGFydGVtZW50IMOgIHZlbmRyZSwgUGFyaXMgKDc1MDEwKSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpIGNsYXNzPSJPZmZlclNsaWRlci1tYWluLWl0ZW0iPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW1nIHNyYz0iaHR0cDovL3Bob3Rvcy5mci5mb25jaWEuY29tL21pbmljcC82NDAvNDgwL3Bob3Rvcy8xMzMxLzQzNS8xMzMxNDM1L2dyYW5kLzEzMzE0MzVfNGE4N2ZmNzQ1Y2Y3YjczZDQzMTg0MWNiNTFmNTljNjE1ZTNhYzIzOTcxMDM5LmpwZz9kYXRlbWFqPTIwMjAtMDMtMDkgMTE6MDM6NDQuNzQ5IiB3aWR0aD0iNjAwIiBoZWlnaHQ9IjQ1MCIgYWx0PSJBcHBhcnRlbWVudCDDoCB2ZW5kcmUsIFBhcmlzICg3NTAxMCkiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaSBjbGFzcz0iT2ZmZXJTbGlkZXItbWFpbi1pdGVtIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBzcmM9Imh0dHA6Ly9waG90b3MuZnIuZm9uY2lhLmNvbS9taW5pY3AvNjQwLzQ4MC9waG90b3MvMTMzMS80MzUvMTMzMTQzNS9ncmFuZC8xMzMxNDM1XzRkMmNmOTBkM2JkZTg2OTAzYjUzNzNiZjZmMDZhM2E3NWUzYWMyMzQxMDQwMi5qcGc/ZGF0ZW1haj0yMDIwLTAzLTA5IDExOjAzOjQ0Ljc4MCIgd2lkdGg9IjYwMCIgaGVpZ2h0PSI0NTAiIGFsdD0iQXBwYXJ0ZW1lbnQgw6AgdmVuZHJlLCBQYXJpcyAoNzUwMTApIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGkgY2xhc3M9Ik9mZmVyU2xpZGVyLW1haW4taXRlbSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgc3JjPSJodHRwOi8vcGhvdG9zLmZyLmZvbmNpYS5jb20vbWluaWNwLzY0MC80ODAvcGhvdG9zLzEzMzEvNDM1LzEzMzE0MzUvZ3JhbmQvMTMzMTQzNV84MmQ4MWI0MjM3NTY5ODUyMDAxYjI1OTNlZWFkOGYzNzVlM2FjMmEyMTI0NGMuanBnP2RhdGVtYWo9MjAyMC0wMy0wOSAxMTowMzo0NC44MTEiIHdpZHRoPSI2MDAiIGhlaWdodD0iNDUwIiBhbHQ9IkFwcGFydGVtZW50IMOgIHZlbmRyZSwgUGFyaXMgKDc1MDEwKSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpIGNsYXNzPSJPZmZlclNsaWRlci1tYWluLWl0ZW0iPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW1nIHNyYz0iaHR0cDovL3Bob3Rvcy5mci5mb25jaWEuY29tL21pbmljcC82NDAvNDgwL3Bob3Rvcy8xMzMxLzQzNS8xMzMxNDM1L2dyYW5kLzEzMzE0MzVfY2ZhOTllMjViOGNiMTE1NTEzNzkyYjI1OGE0YmE2NWU1ZTNhYzJhYTc3Njg4LmpwZz9kYXRlbWFqPTIwMjAtMDMtMDkgMTE6MDM6NDQuODI3IiB3aWR0aD0iNjAwIiBoZWlnaHQ9IjQ1MCIgYWx0PSJBcHBhcnRlbWVudCDDoCB2ZW5kcmUsIFBhcmlzICg3NTAxMCkiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaSBjbGFzcz0iT2ZmZXJTbGlkZXItbWFpbi1pdGVtIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBzcmM9Imh0dHA6Ly9waG90b3MuZnIuZm9uY2lhLmNvbS9taW5pY3AvNjQwLzQ4MC9waG90b3MvMTMzMS80MzUvMTMzMTQzNS9ncmFuZC8xMzMxNDM1X2EzMzc4NDg1NGZkNDA1MjdkMjkzMTJjODQ1M2NhZTI5NWUzYWMyYjE5NDBkMy5qcGc/ZGF0ZW1haj0yMDIwLTAzLTA5IDExOjAzOjQ0Ljg1OCIgd2lkdGg9IjYwMCIgaGVpZ2h0PSI0NTAiIGFsdD0iQXBwYXJ0ZW1lbnQgw6AgdmVuZHJlLCBQYXJpcyAoNzUwMTApIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGkgY2xhc3M9Ik9mZmVyU2xpZGVyLW1haW4taXRlbSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgc3JjPSJodHRwOi8vcGhvdG9zLmZyLmZvbmNpYS5jb20vbWluaWNwLzY0MC80ODAvcGhvdG9zLzEzMzEvNDM1LzEzMzE0MzUvZ3JhbmQvMTMzMTQzNV8yNmZlODViZDQ5MGFlMjc2OGY1OGM3N2U0OWVmOWI4ZTVlM2FjMWY1NzkwNmQuanBnP2RhdGVtYWo9MjAyMC0wMy0wOSAxMTowMzo0NC44NzQiIHdpZHRoPSI2MDAiIGhlaWdodD0iNDUwIiBhbHQ9IkFwcGFydGVtZW50IMOgIHZlbmRyZSwgUGFyaXMgKDc1MDEwKSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpIGNsYXNzPSJPZmZlclNsaWRlci1tYWluLWl0ZW0iPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW1nIHNyYz0iaHR0cDovL3Bob3Rvcy5mci5mb25jaWEuY29tL21pbmljcC82NDAvNDgwL3Bob3Rvcy8xMzMxLzQzNS8xMzMxNDM1L2dyYW5kLzEzMzE0MzVfZjE2N2NiMDA2YjU1OTE3MGFmMjI5ODMwNjU1ZmQ4MzM1ZTQ1NTE2NmEwOWFmLmpwZz9kYXRlbWFqPTIwMjAtMDMtMDkgMTE6MDM6NDQuOTA1IiB3aWR0aD0iNjAwIiBoZWlnaHQ9IjQ1MCIgYWx0PSJBcHBhcnRlbWVudCDDoCB2ZW5kcmUsIFBhcmlzICg3NTAxMCkiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaSBjbGFzcz0iT2ZmZXJTbGlkZXItbWFpbi1pdGVtIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBzcmM9Imh0dHA6Ly9waG90b3MuZnIuZm9uY2lhLmNvbS9taW5pY3AvNjQwLzQ4MC9waG90b3MvMTMzMS80MzUvMTMzMTQzNS9ncmFuZC8xMzMxNDM1Xzc5ZjQ0NWMxNTNjYjYxZGNkYjE2MTA5ZTY4NjlkMzU3NWUzYWMzNDkyMjJmYS5qcGc/ZGF0ZW1haj0yMDIwLTAzLTA5IDExOjAzOjQ0LjkyMCIgd2lkdGg9IjYwMCIgaGVpZ2h0PSI0NTAiIGFsdD0iQXBwYXJ0ZW1lbnQgw6AgdmVuZHJlLCBQYXJpcyAoNzUwMTApIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGkgY2xhc3M9Ik9mZmVyU2xpZGVyLW1haW4taXRlbSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgc3JjPSJodHRwOi8vcGhvdG9zLmZyLmZvbmNpYS5jb20vbWluaWNwLzY0MC80ODAvcGhvdG9zLzEzMzEvNDM1LzEzMzE0MzUvZ3JhbmQvMTMzMTQzNV84MmYwNDI5MWE0MjlhMmNlMDM3MzAxN2MwODkwOWZkNjVlM2FjMzUzZTFjNzkuanBnP2RhdGVtYWo9MjAyMC0wMy0wOSAxMTowMzo0NC45NTIiIHdpZHRoPSI2MDAiIGhlaWdodD0iNDUwIiBhbHQ9IkFwcGFydGVtZW50IMOgIHZlbmRyZSwgUGFyaXMgKDc1MDEwKSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpIGNsYXNzPSJPZmZlclNsaWRlci1tYWluLWl0ZW0iPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW1nIHNyYz0iaHR0cDovL3Bob3Rvcy5mci5mb25jaWEuY29tL21pbmljcC82NDAvNDgwL3Bob3Rvcy8xMzMxLzQzNS8xMzMxNDM1L2dyYW5kLzEzMzE0MzVfZjljYzMwZjQ5MzkyM2NjZjUyZDFmNzhmYmJmYzM0NDQ1ZTYyMDQyOTU1YTFiLmpwZz9kYXRlbWFqPTIwMjAtMDMtMDkgMTE6MDM6NDUuMjAxIiB3aWR0aD0iNjAwIiBoZWlnaHQ9IjQ1MCIgYWx0PSJBcHBhcnRlbWVudCDDoCB2ZW5kcmUsIFBhcmlzICg3NTAxMCkiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaSBjbGFzcz0iT2ZmZXJTbGlkZXItbWFpbi1pdGVtIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBzcmM9Imh0dHA6Ly9waG90b3MuZnIuZm9uY2lhLmNvbS9taW5pY3AvNjQwLzQ4MC9waG90b3MvMTMzMS80MzUvMTMzMTQzNS9ncmFuZC8xMzMxNDM1XzJkOWEwYTEyY2FhN2ZhYTE2ZDAxODQ5MWEzYmNmYTAwNWU2MjA0MjliYmU0NC5qcGc/ZGF0ZW1haj0yMDIwLTAzLTA5IDExOjAzOjQ1LjI0OCIgd2lkdGg9IjYwMCIgaGVpZ2h0PSI0NTAiIGFsdD0iQXBwYXJ0ZW1lbnQgw6AgdmVuZHJlLCBQYXJpcyAoNzUwMTApIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC91bD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9Ik9mZmVyU2xpZGVyLW1haW4tY291bnQiPjwvcD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iT2ZmZXJTbGlkZXItY29udGFpbmVyIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iT2ZmZXJTbGlkZXItdGh1bWJzIE9mZmVyU2xpZGVyLXRodW1icy0tbWluaSIgaWQ9Ik9mZmVyU2xpZGVyVGh1bWJzIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx1bCBjbGFzcz0iT2ZmZXJTbGlkZXItdGh1bWJzLXNsaWRlcyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpIGNsYXNzPSJPZmZlclNsaWRlci10aHVtYnMtaXRlbSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW1nIHNyYz0iaHR0cDovL3Bob3Rvcy5mci5mb25jaWEuY29tL21pbmljcC82NDAvNDgwL3Bob3Rvcy8xMzMxLzQzNS8xMzMxNDM1L2dyYW5kLzEzMzE0MzVfZWI0OGEwOTE4NGRlNDE4ZGU1YTUxYWMzMDk1NmQzNTg1ZTQ1NTExZjI1NmVhLmpwZz9kYXRlbWFqPTIwMjAtMDMtMDkgMTE6MDM6NDQuNDIxIiB3aWR0aD0iNjAwIiBoZWlnaHQ9IjQ1MCIgYWx0PSJBcHBhcnRlbWVudCDDoCB2ZW5kcmUsIFBhcmlzICg3NTAxMCkiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaSBjbGFzcz0iT2ZmZXJTbGlkZXItdGh1bWJzLWl0ZW0iPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBzcmM9Imh0dHA6Ly9waG90b3MuZnIuZm9uY2lhLmNvbS9taW5pY3AvNjQwLzQ4MC9waG90b3MvMTMzMS80MzUvMTMzMTQzNS9ncmFuZC8xMzMxNDM1X2ZmY2E2OTVhZTI4ZmIwNjZkYjRlZDQ2Nzk5YWEyZTU1NWUzYWMxYWExZDNmNS5qcGc/ZGF0ZW1haj0yMDIwLTAzLTA5IDExOjAzOjQ0LjQ1MiIgd2lkdGg9IjYwMCIgaGVpZ2h0PSI0NTAiIGFsdD0iQXBwYXJ0ZW1lbnQgw6AgdmVuZHJlLCBQYXJpcyAoNzUwMTApIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGkgY2xhc3M9Ik9mZmVyU2xpZGVyLXRodW1icy1pdGVtIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgc3JjPSJodHRwOi8vcGhvdG9zLmZyLmZvbmNpYS5jb20vbWluaWNwLzY0MC80ODAvcGhvdG9zLzEzMzEvNDM1LzEzMzE0MzUvZ3JhbmQvMTMzMTQzNV9kMGI0MGYwODE2OWE4MTVlMTRhZjFjMDVhMTZkMTBiNjVlM2FjMmY3Y2U1YTQuanBnP2RhdGVtYWo9MjAyMC0wMy0wOSAxMTowMzo0NC40ODMiIHdpZHRoPSI2MDAiIGhlaWdodD0iNDUwIiBhbHQ9IkFwcGFydGVtZW50IMOgIHZlbmRyZSwgUGFyaXMgKDc1MDEwKSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpIGNsYXNzPSJPZmZlclNsaWRlci10aHVtYnMtaXRlbSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW1nIHNyYz0iaHR0cDovL3Bob3Rvcy5mci5mb25jaWEuY29tL21pbmljcC82NDAvNDgwL3Bob3Rvcy8xMzMxLzQzNS8xMzMxNDM1L2dyYW5kLzEzMzE0MzVfNzc4NWVjNzA2Zjk1ODAzODZmOTdkN2I3NGUyZTZkMGQ1ZTNhYzFmYzA2NWE3LmpwZz9kYXRlbWFqPTIwMjAtMDMtMDkgMTE6MDM6NDQuNzE4IiB3aWR0aD0iNjAwIiBoZWlnaHQ9IjQ1MCIgYWx0PSJBcHBhcnRlbWVudCDDoCB2ZW5kcmUsIFBhcmlzICg3NTAxMCkiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaSBjbGFzcz0iT2ZmZXJTbGlkZXItdGh1bWJzLWl0ZW0iPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBzcmM9Imh0dHA6Ly9waG90b3MuZnIuZm9uY2lhLmNvbS9taW5pY3AvNjQwLzQ4MC9waG90b3MvMTMzMS80MzUvMTMzMTQzNS9ncmFuZC8xMzMxNDM1XzRhODdmZjc0NWNmN2I3M2Q0MzE4NDFjYjUxZjU5YzYxNWUzYWMyMzk3MTAzOS5qcGc/ZGF0ZW1haj0yMDIwLTAzLTA5IDExOjAzOjQ0Ljc0OSIgd2lkdGg9IjYwMCIgaGVpZ2h0PSI0NTAiIGFsdD0iQXBwYXJ0ZW1lbnQgw6AgdmVuZHJlLCBQYXJpcyAoNzUwMTApIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGkgY2xhc3M9Ik9mZmVyU2xpZGVyLXRodW1icy1pdGVtIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgc3JjPSJodHRwOi8vcGhvdG9zLmZyLmZvbmNpYS5jb20vbWluaWNwLzY0MC80ODAvcGhvdG9zLzEzMzEvNDM1LzEzMzE0MzUvZ3JhbmQvMTMzMTQzNV80ZDJjZjkwZDNiZGU4NjkwM2I1MzczYmY2ZjA2YTNhNzVlM2FjMjM0MTA0MDIuanBnP2RhdGVtYWo9MjAyMC0wMy0wOSAxMTowMzo0NC43ODAiIHdpZHRoPSI2MDAiIGhlaWdodD0iNDUwIiBhbHQ9IkFwcGFydGVtZW50IMOgIHZlbmRyZSwgUGFyaXMgKDc1MDEwKSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpIGNsYXNzPSJPZmZlclNsaWRlci10aHVtYnMtaXRlbSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW1nIHNyYz0iaHR0cDovL3Bob3Rvcy5mci5mb25jaWEuY29tL21pbmljcC82NDAvNDgwL3Bob3Rvcy8xMzMxLzQzNS8xMzMxNDM1L2dyYW5kLzEzMzE0MzVfODJkODFiNDIzNzU2OTg1MjAwMWIyNTkzZWVhZDhmMzc1ZTNhYzJhMjEyNDRjLmpwZz9kYXRlbWFqPTIwMjAtMDMtMDkgMTE6MDM6NDQuODExIiB3aWR0aD0iNjAwIiBoZWlnaHQ9IjQ1MCIgYWx0PSJBcHBhcnRlbWVudCDDoCB2ZW5kcmUsIFBhcmlzICg3NTAxMCkiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaSBjbGFzcz0iT2ZmZXJTbGlkZXItdGh1bWJzLWl0ZW0iPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBzcmM9Imh0dHA6Ly9waG90b3MuZnIuZm9uY2lhLmNvbS9taW5pY3AvNjQwLzQ4MC9waG90b3MvMTMzMS80MzUvMTMzMTQzNS9ncmFuZC8xMzMxNDM1X2NmYTk5ZTI1YjhjYjExNTUxMzc5MmIyNThhNGJhNjVlNWUzYWMyYWE3NzY4OC5qcGc/ZGF0ZW1haj0yMDIwLTAzLTA5IDExOjAzOjQ0LjgyNyIgd2lkdGg9IjYwMCIgaGVpZ2h0PSI0NTAiIGFsdD0iQXBwYXJ0ZW1lbnQgw6AgdmVuZHJlLCBQYXJpcyAoNzUwMTApIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGkgY2xhc3M9Ik9mZmVyU2xpZGVyLXRodW1icy1pdGVtIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgc3JjPSJodHRwOi8vcGhvdG9zLmZyLmZvbmNpYS5jb20vbWluaWNwLzY0MC80ODAvcGhvdG9zLzEzMzEvNDM1LzEzMzE0MzUvZ3JhbmQvMTMzMTQzNV9hMzM3ODQ4NTRmZDQwNTI3ZDI5MzEyYzg0NTNjYWUyOTVlM2FjMmIxOTQwZDMuanBnP2RhdGVtYWo9MjAyMC0wMy0wOSAxMTowMzo0NC44NTgiIHdpZHRoPSI2MDAiIGhlaWdodD0iNDUwIiBhbHQ9IkFwcGFydGVtZW50IMOgIHZlbmRyZSwgUGFyaXMgKDc1MDEwKSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpIGNsYXNzPSJPZmZlclNsaWRlci10aHVtYnMtaXRlbSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW1nIHNyYz0iaHR0cDovL3Bob3Rvcy5mci5mb25jaWEuY29tL21pbmljcC82NDAvNDgwL3Bob3Rvcy8xMzMxLzQzNS8xMzMxNDM1L2dyYW5kLzEzMzE0MzVfMjZmZTg1YmQ0OTBhZTI3NjhmNThjNzdlNDllZjliOGU1ZTNhYzFmNTc5MDZkLmpwZz9kYXRlbWFqPTIwMjAtMDMtMDkgMTE6MDM6NDQuODc0IiB3aWR0aD0iNjAwIiBoZWlnaHQ9IjQ1MCIgYWx0PSJBcHBhcnRlbWVudCDDoCB2ZW5kcmUsIFBhcmlzICg3NTAxMCkiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaSBjbGFzcz0iT2ZmZXJTbGlkZXItdGh1bWJzLWl0ZW0iPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBzcmM9Imh0dHA6Ly9waG90b3MuZnIuZm9uY2lhLmNvbS9taW5pY3AvNjQwLzQ4MC9waG90b3MvMTMzMS80MzUvMTMzMTQzNS9ncmFuZC8xMzMxNDM1X2YxNjdjYjAwNmI1NTkxNzBhZjIyOTgzMDY1NWZkODMzNWU0NTUxNjZhMDlhZi5qcGc/ZGF0ZW1haj0yMDIwLTAzLTA5IDExOjAzOjQ0LjkwNSIgd2lkdGg9IjYwMCIgaGVpZ2h0PSI0NTAiIGFsdD0iQXBwYXJ0ZW1lbnQgw6AgdmVuZHJlLCBQYXJpcyAoNzUwMTApIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGkgY2xhc3M9Ik9mZmVyU2xpZGVyLXRodW1icy1pdGVtIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgc3JjPSJodHRwOi8vcGhvdG9zLmZyLmZvbmNpYS5jb20vbWluaWNwLzY0MC80ODAvcGhvdG9zLzEzMzEvNDM1LzEzMzE0MzUvZ3JhbmQvMTMzMTQzNV83OWY0NDVjMTUzY2I2MWRjZGIxNjEwOWU2ODY5ZDM1NzVlM2FjMzQ5MjIyZmEuanBnP2RhdGVtYWo9MjAyMC0wMy0wOSAxMTowMzo0NC45MjAiIHdpZHRoPSI2MDAiIGhlaWdodD0iNDUwIiBhbHQ9IkFwcGFydGVtZW50IMOgIHZlbmRyZSwgUGFyaXMgKDc1MDEwKSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpIGNsYXNzPSJPZmZlclNsaWRlci10aHVtYnMtaXRlbSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW1nIHNyYz0iaHR0cDovL3Bob3Rvcy5mci5mb25jaWEuY29tL21pbmljcC82NDAvNDgwL3Bob3Rvcy8xMzMxLzQzNS8xMzMxNDM1L2dyYW5kLzEzMzE0MzVfODJmMDQyOTFhNDI5YTJjZTAzNzMwMTdjMDg5MDlmZDY1ZTNhYzM1M2UxYzc5LmpwZz9kYXRlbWFqPTIwMjAtMDMtMDkgMTE6MDM6NDQuOTUyIiB3aWR0aD0iNjAwIiBoZWlnaHQ9IjQ1MCIgYWx0PSJBcHBhcnRlbWVudCDDoCB2ZW5kcmUsIFBhcmlzICg3NTAxMCkiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaSBjbGFzcz0iT2ZmZXJTbGlkZXItdGh1bWJzLWl0ZW0iPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBzcmM9Imh0dHA6Ly9waG90b3MuZnIuZm9uY2lhLmNvbS9taW5pY3AvNjQwLzQ4MC9waG90b3MvMTMzMS80MzUvMTMzMTQzNS9ncmFuZC8xMzMxNDM1X2Y5Y2MzMGY0OTM5MjNjY2Y1MmQxZjc4ZmJiZmMzNDQ0NWU2MjA0Mjk1NWExYi5qcGc/ZGF0ZW1haj0yMDIwLTAzLTA5IDExOjAzOjQ1LjIwMSIgd2lkdGg9IjYwMCIgaGVpZ2h0PSI0NTAiIGFsdD0iQXBwYXJ0ZW1lbnQgw6AgdmVuZHJlLCBQYXJpcyAoNzUwMTApIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGkgY2xhc3M9Ik9mZmVyU2xpZGVyLXRodW1icy1pdGVtIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgc3JjPSJodHRwOi8vcGhvdG9zLmZyLmZvbmNpYS5jb20vbWluaWNwLzY0MC80ODAvcGhvdG9zLzEzMzEvNDM1LzEzMzE0MzUvZ3JhbmQvMTMzMTQzNV8yZDlhMGExMmNhYTdmYWExNmQwMTg0OTFhM2JjZmEwMDVlNjIwNDI5YmJlNDQuanBnP2RhdGVtYWo9MjAyMC0wMy0wOSAxMTowMzo0NS4yNDgiIHdpZHRoPSI2MDAiIGhlaWdodD0iNDUwIiBhbHQ9IkFwcGFydGVtZW50IMOgIHZlbmRyZSwgUGFyaXMgKDc1MDEwKSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdWw+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0iT2ZmZXJTbGlkZXItZXh0cmEiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgY2xhc3M9Ik9mZmVyU2xpZGVyLWV4dHJhLWJ0biIgaHJlZj0iaHR0cHM6Ly9ob21lLmJ5Lm1lL2ZyL3Byb2plY3QvMDIyMDIwLzEzMzE0MzUvZW1iZWQiIHRhcmdldD0iX2JsYW5rIiBkYXRhLWJlaGF0PSJwbGFuVHJvaXNEIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHN2ZyBjbGFzcz0iaWNvbiIgc3R5bGU9IndpZHRoOjMwcHg7aGVpZ2h0OjMwcHgiIGFyaWEtaGlkZGVuPSJ0cnVlIj48dXNlIHhsaW5rOmhyZWY9Ii9idW5kbGVzL2ZvbmNpYWludGVybmV0L3N2Zy9pY29ucy5zdmcjSWNvbi0tcGxhbjNkIj48L3VzZT48L3N2Zz4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgUGxhbiAzZAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CgoKICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJPZmZlckRldGFpbHMiPgoKICAgICAgICAgICAgICAgICAgICAgICAgPHNlY3Rpb24gY2xhc3M9Ik9mZmVyRGV0YWlscy1zZWN0aW9uIj4KCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0iT2ZmZXJEZXRhaWxzLXJlZiI+UsOpZi4gMTMzMTQzNTwvcD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxoMiBjbGFzcz0iT2ZmZXJEZXRhaWxzLXRpdGxlIj5EZXNjcmlwdGlvbiBkw6l0YWlsbMOpZTwvaDI+CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iT2ZmZXJEZXRhaWxzLWNvbnRlbnQiPgoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cD5FbiBleGNsdXNpdml0w6ksIMOgIGRldXggcGFzIGRlIGxhIFBvcnRlIFN0IE1hcnRpbiBldCBkZSBsYSBNYWlyaWUgZHUgWCDDqG1lLCBhdSAyw6htZSDDqXRhZ2UgYXZlYyBhc2NlbnNldXIsIGFwcGFydGVtZW50IGRlIDgwIG3CsiBhdmVjIHVuZSBzZXVsZSBjaGFtYnJlLiBDZSBiaWVuIGF1IGNhY2hldCBwYXJpc2llbiBhdmVjIHVuZSBIU1AgZGUgMiw5MCBtIHBlcm1ldCBsYSBkaXN0cmlidXRpb24gc3VpdmFudGU6IHVuIGx1bWluZXV4IHPDqWpvdXIgZGUgMjMgbcKyIGF2ZWMgY2hlbWluw6llLCB1bmUgc2FsbGUgw6AgbWFuZ2VyIGRlIDIyIG3CsiBhdmVjIGNoZW1pbsOpZSBwcnVzc2llbm5lLCB1bmUgY2hhbWJyZSBhdSBjYWxtZSBzdXIgY291ciBkZSAxNSBtwrIgKHBvc3NpYmlsaXTDqSBkJ2Ftw6luYWdlciB1biBkcmVzc2luZyBldCB1biBjb2luIGJ1cmVhdSkuIFF1ZWxxdWVzIHRyYXZhdXggw6AgcHLDqXZvaXIuIENhdmUuCkNvcHJvcHJpw6l0w6kgZGUgMzAgbG90cwpDaGFyZ2VzIGFubnVlbGxlczogMjIzMiBldXJvcwpIb25vcmFpcmVzIEFnZW5jZSDDoCBjaGFyZ2UgdmVuZGV1cgpGT05DSUE6IE0gUGV0aXQ6IDA2IDgzIDcyIDM0IDMxCk1tZSBNYWFyZWs6IDA2IDA4IDMxIDkzIDcxPC9wPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Ik9mZmVyRGV0YWlscy1jb2x1bW5pemUiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGRhdGEtd2lkZ2V0PSJUb2dnbGVCbG9ja01vYmlsZSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGgzIGNsYXNzPSJPZmZlckRldGFpbHMtdGl0bGUtLTIiIGRhdGEtd2lkZ2V0PSJUb2dnbGVCbG9ja01vYmlsZS10cmlnZ2VyIiBkYXRhLWJlaGF0PSJjYXJhY3REdUJpZW4iPkNhcmFjdMOpcmlzdGlxdWVzIGR1IGJpZW48L2gzPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgZGF0YS13aWRnZXQ9IlRvZ2dsZUJsb2NrTW9iaWxlLWNvbnRlbnQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHVsIGNsYXNzPSJMaXN0IExpc3QtLWRhdGEiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaT48c3BhbiBjbGFzcz0iTGlzdC1kYXRhIj5DYXZlKHMpPC9zcGFuPiA8c3Ryb25nIGNsYXNzPSJMaXN0LXZhbHVlIj5vdWk8L3N0cm9uZz48L2xpPjxsaT48c3BhbiBjbGFzcz0iTGlzdC1kYXRhIj5Ob21icmUgZGUgcGnDqGNlczwvc3Bhbj4gPHN0cm9uZyBjbGFzcz0iTGlzdC12YWx1ZSI+Mzwvc3Ryb25nPjwvbGk+PGxpPjxzcGFuIGNsYXNzPSJMaXN0LWRhdGEiPkNvbnN0cnVjdGlvbjwvc3Bhbj4gPHN0cm9uZyBjbGFzcz0iTGlzdC12YWx1ZSI+MTkwMDwvc3Ryb25nPjwvbGk+PGxpPjxzcGFuIGNsYXNzPSJMaXN0LWRhdGEiPsOJdGFnZTwvc3Bhbj4gPHN0cm9uZyBjbGFzcz0iTGlzdC12YWx1ZSI+Mjwvc3Ryb25nPjwvbGk+PGxpPjxzcGFuIGNsYXNzPSJMaXN0LWRhdGEiPk5vbWJyZSBkJ8OpdGFnZXM8L3NwYW4+IDxzdHJvbmcgY2xhc3M9Ikxpc3QtdmFsdWUiPjY8L3N0cm9uZz48L2xpPjxsaT48c3BhbiBjbGFzcz0iTGlzdC1kYXRhIj5Ob21icmUgZGUgY2hhbWJyZXM8L3NwYW4+IDxzdHJvbmcgY2xhc3M9Ikxpc3QtdmFsdWUiPjE8L3N0cm9uZz48L2xpPjxsaT48c3BhbiBjbGFzcz0iTGlzdC1kYXRhIj5UeXBlIGRlIGN1aXNpbmU8L3NwYW4+IDxzdHJvbmcgY2xhc3M9Ikxpc3QtdmFsdWUiPkluZMOpcGVuZGFudGU8L3N0cm9uZz48L2xpPjxsaT48c3BhbiBjbGFzcz0iTGlzdC1kYXRhIj7DiXRhdCBjdWlzaW5lPC9zcGFuPiA8c3Ryb25nIGNsYXNzPSJMaXN0LXZhbHVlIj5BbcOpbmFnw6llIGV0IMOpcXVpcMOpZTwvc3Ryb25nPjwvbGk+PGxpPjxzcGFuIGNsYXNzPSJMaXN0LWRhdGEiPk1vZGUgY2hhdWZmYWdlPC9zcGFuPiA8c3Ryb25nIGNsYXNzPSJMaXN0LXZhbHVlIj5JbmRpdmlkdWVsPC9zdHJvbmc+PC9saT48bGk+PHNwYW4gY2xhc3M9Ikxpc3QtZGF0YSI+TmF0dXJlIGNoYXVmZmFnZTwvc3Bhbj4gPHN0cm9uZyBjbGFzcz0iTGlzdC12YWx1ZSI+R2F6PC9zdHJvbmc+PC9saT48bGk+PHNwYW4gY2xhc3M9J0xpc3QtZGF0YSc+TmIuIFNhbGxlcyBkJ2VhdTwvc3Bhbj4gPHN0cm9uZyBjbGFzcz0nTGlzdC12YWx1ZSc+MTwvc3Ryb25nPjwvbGk+PGxpPjxzcGFuIGNsYXNzPSJMaXN0LWRhdGEiPk5iLiBXQzwvc3Bhbj4gPHN0cm9uZyBjbGFzcz0iTGlzdC12YWx1ZSI+MTwvc3Ryb25nPjwvbGk+PGxpPjxzcGFuIGNsYXNzPSJMaXN0LWRhdGEiPkNhdMOpZ29yaWU8L3NwYW4+IDxzdHJvbmcgY2xhc3M9Ikxpc3QtdmFsdWUiPkFuY2llbjwvc3Ryb25nPjwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3VsPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgZGF0YS13aWRnZXQ9IlRvZ2dsZUJsb2NrTW9iaWxlIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGgzIGNsYXNzPSJPZmZlckRldGFpbHMtdGl0bGUtLTIiIGRhdGEtd2lkZ2V0PSJUb2dnbGVCbG9ja01vYmlsZS10cmlnZ2VyIj5JbmZvcm1hdGlvbiBjb3Byb3ByacOpdMOpPC9oMz4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBkYXRhLXdpZGdldD0iVG9nZ2xlQmxvY2tNb2JpbGUtY29udGVudCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx1bCBjbGFzcz0iTGlzdCBMaXN0LS1kYXRhIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpPjxzcGFuIGNsYXNzPSJMaXN0LWRhdGEiPk5vbWJyZSBkZSBsb3RzPC9zcGFuPiA8c3Ryb25nIGNsYXNzPSJMaXN0LXZhbHVlIj4zMDwvc3Ryb25nPjwvbGk+PGxpPjxzcGFuIGNsYXNzPSJMaXN0LWRhdGEiPkNoYXJnZXMgYW5udWVsbGVzPC9zcGFuPiA8c3Ryb25nIGNsYXNzPSJMaXN0LXZhbHVlIj4yMjMyIOKCrDwvc3Ryb25nPjwvbGk+PGxpPjxzcGFuIGNsYXNzPSJMaXN0LWRhdGEiPkNvcHJvcHJpZXTDqSBlbiBkaWZmaWN1bHTDqTwvc3Bhbj4gPHN0cm9uZyBjbGFzcz0iTGlzdC12YWx1ZSI+bm9uPC9zdHJvbmc+PC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3VsPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGRhdGEtd2lkZ2V0PSJUb2dnbGVCbG9ja01vYmlsZSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGgzIGNsYXNzPSJPZmZlckRldGFpbHMtdGl0bGUtLTIiIGRhdGEtd2lkZ2V0PSJUb2dnbGVCbG9ja01vYmlsZS10cmlnZ2VyIiBkYXRhLWJlaGF0PSJzdXJmYWNlQmllbiI+U3VyZmFjZXM8L2gzPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgZGF0YS13aWRnZXQ9IlRvZ2dsZUJsb2NrTW9iaWxlLWNvbnRlbnQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dWwgY2xhc3M9Ikxpc3QgTGlzdC0tZGF0YSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGk+PHNwYW4gY2xhc3M9Ikxpc3QtZGF0YSI+U3VyZmFjZSBoYWJpdGFibGU8L3NwYW4+IDxzdHJvbmcgY2xhc3M9Ikxpc3QtdmFsdWUiPjgwIG3Csjwvc3Ryb25nPjwvbGk+PGxpPjxzcGFuIGNsYXNzPSJMaXN0LWRhdGEiPlN1cmZhY2UgQ2FycmV6PC9zcGFuPiA8c3Ryb25nIGNsYXNzPSJMaXN0LXZhbHVlIj43OC44IG3Csjwvc3Ryb25nPjwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdWw+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCgoKCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGRhdGEtd2lkZ2V0PSJUb2dnbGVCbG9ja01vYmlsZSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGgzIGNsYXNzPSJPZmZlckRldGFpbHMtdGl0bGUtLTIiIGRhdGEtd2lkZ2V0PSJUb2dnbGVCbG9ja01vYmlsZS10cmlnZ2VyIiBkYXRhLWJlaGF0PSJjb21tb2RpdGVzQmllbiI+Q29tbW9kaXTDqXM8L2gzPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgZGF0YS13aWRnZXQ9IlRvZ2dsZUJsb2NrTW9iaWxlLWNvbnRlbnQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dWwgY2xhc3M9Ikxpc3QgTGlzdC0tYnVsbGV0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaT5DaGVtaW7DqWU8L2xpPjxsaT5Bc2NlbnNldXI8L2xpPjxsaT5DYXZlKHMpPC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC91bD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKCgoKCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgZGF0YS13aWRnZXQ9IlRvZ2dsZUJsb2NrTW9iaWxlIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aDMgY2xhc3M9Ik9mZmVyRGV0YWlscy10aXRsZS0tMiIgZGF0YS13aWRnZXQ9IlRvZ2dsZUJsb2NrTW9iaWxlLXRyaWdnZXIiIGRhdGEtYmVoYXQ9ImRpdmVyc0JpZW4iPkRpdmVyczwvaDM+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBkYXRhLXdpZGdldD0iVG9nZ2xlQmxvY2tNb2JpbGUtY29udGVudCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dWwgY2xhc3M9Ikxpc3QgTGlzdC0tYnVsbGV0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGk+SW50ZXJwaG9uZTwvbGk+PGxpPkRpZ2ljb2RlPC9saT48bGk+U29jacOpdMOpIGRlIG5ldHRveWFnZTwvbGk+PGxpPkNoZW1pbsOpZTwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3VsPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0iT2ZmZXJEZXRhaWxzLWJhcmVtZSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHA6Ly9hZ2VuY2UuZm9uY2lhLmNvbS9wYXJpcy03NTAxMC9hZ2VuY2UtaW1tb2JpbGllcmUvZm9uY2lhLXRyYW5zYWN0aW9uLXBhcmlzLW1hZ2VudGEtMTEzMyIgcmVsPSJub2ZvbGxvdyIgdGFyZ2V0PSJfYmxhbmsiPlZvaXIgbGUgYmFyw6htZSBkZSBsJ2FnZW5jZTwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3A+CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9IkxlZ2FsTWVudGlvbnMgTGVnYWxNZW50aW9ucy0tc21hbGwiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICAgICAgICAgICAgICA8L3NlY3Rpb24+CgogICAgICAgICAgICAgICAgICAgICAgICAKCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgICAgICAgICAKPHAgY2xhc3M9IlNoYXJlIj4KICAgIDxhIGlkPSJGYWNlYm9vayIgaHJlZj0iaHR0cHM6Ly93d3cuZmFjZWJvb2suY29tL3NoYXJlci9zaGFyZXIucGhwP3U9aHR0cHM6Ly9mci5mb25jaWEuY29tL2FjaGF0L3BhcmlzLTc1MDEwL2FwcGFydGVtZW50LzEzMzE0MzUuaHRtIiB0YXJnZXQ9Il9ibGFuayIgY2xhc3M9IlNoYXJlLWl0ZW0gU2hhcmUtRmFjZWJvb2siPgogICAgICAgIDxzdmcgY2xhc3M9Imljb24iIHN0eWxlPSJ3aWR0aDoyNHB4O2hlaWdodDoyNHB4IiBhcmlhLWhpZGRlbj0idHJ1ZSI+PHVzZSB4bGluazpocmVmPSIvYnVuZGxlcy9mb25jaWFpbnRlcm5ldC9zdmcvaWNvbnMuc3ZnI0ljb24tLWZhY2Vib29rIj48L3VzZT48L3N2Zz4KICAgICAgICA8c3BhbiBjbGFzcz0iU2hhcmUtbGFiZWwiPlBhcnRhZ2VyIGNlIGNvbnRlbnUgc3VyIEZhY2Vib29rPC9zcGFuPgogICAgPC9hPgoKICAgIDxhIGlkPSJUd2l0dGVyIiBjbGFzcz0iU2hhcmUtaXRlbSIKICAgICAgIGhyZWY9Imh0dHBzOi8vdHdpdHRlci5jb20vaW50ZW50L3R3ZWV0P3RleHQ9QXBwYXJ0ZW1lbnQgMyBwacOoY2VzIMOgIHZlbmRyZSZ1cmw9aHR0cHMlM0ElMkYlMkZmci5mb25jaWEuY29tJTJGYWNoYXQlMkZwYXJpcy03NTAxMCUyRmFwcGFydGVtZW50JTJGMTMzMTQzNS5odG0mdmlhPWZvbmNpYSIKICAgICAgICAgICAgICBkYXRhLXNpemU9ImxhcmdlIgogICAgICAgdGFyZ2V0PSJfYmxhbmsiID4KICAgICAgICA8c3ZnIGNsYXNzPSJpY29uIiBzdHlsZT0id2lkdGg6MjRweDtoZWlnaHQ6MjRweCIgYXJpYS1oaWRkZW49InRydWUiPjx1c2UgeGxpbms6aHJlZj0iL2J1bmRsZXMvZm9uY2lhaW50ZXJuZXQvc3ZnL2ljb25zLnN2ZyNJY29uLS10d2l0dGVyIj48L3VzZT48L3N2Zz4KICAgICAgICA8c3BhbiBjbGFzcz0iU2hhcmUtbGFiZWwiPlBhcnRhZ2VyIGNlIGNvbnRlbnUgc3VyIFR3aXR0ZXI8L3NwYW4+CiAgICA8L2E+CgogICAgPGEgaWQ9Ikdvb2dsZSsiIGNsYXNzPSJTaGFyZS1pdGVtIiBocmVmPSJodHRwczovL3BsdXMuZ29vZ2xlLmNvbS9zaGFyZT91cmw9aHR0cHMlM0ElMkYlMkZmci5mb25jaWEuY29tJTJGYWNoYXQlMkZwYXJpcy03NTAxMCUyRmFwcGFydGVtZW50JTJGMTMzMTQzNS5odG0iIG9uY2xpY2s9ImphdmFzY3JpcHQ6d2luZG93Lm9wZW4odGhpcy5ocmVmLCcnLCAnbWVudWJhcj1ubyx0b29sYmFyPW5vLHJlc2l6YWJsZT15ZXMsc2Nyb2xsYmFycz15ZXMsaGVpZ2h0PTYwMCx3aWR0aD02MDAnKTtyZXR1cm4gZmFsc2U7Ij4KICAgICAgICA8c3ZnIGNsYXNzPSJpY29uIiBzdHlsZT0id2lkdGg6MjRweDtoZWlnaHQ6MjRweCIgYXJpYS1oaWRkZW49InRydWUiPjx1c2UgeGxpbms6aHJlZj0iL2J1bmRsZXMvZm9uY2lhaW50ZXJuZXQvc3ZnL2ljb25zLnN2ZyNJY29uLS1nb29nbGUiPjwvdXNlPjwvc3ZnPgogICAgICAgIDxzcGFuIGNsYXNzPSJTaGFyZS1sYWJlbCI+UGFydGFnZXIgY2UgY29udGVudSBzdXIgR29vZ2xlICs8L3NwYW4+CiAgICA8L2E+CgogICAgPGEgY2xhc3M9IlNoYXJlLWl0ZW0gTW9kYWwtbGluay0tYWpheCIgaHJlZj0iL3NoYXJlLWNvbnRlbnQtcG9waW4vaHR0cHMlMjUzQSUyNTJGJTI1MkZmci5mb25jaWEuY29tJTI1MkZhY2hhdCUyNTJGcGFyaXMtNzUwMTAlMjUyRmFwcGFydGVtZW50JTI1MkYxMzMxNDM1Lmh0bSI+CiAgICAgICAgPHN2ZyBjbGFzcz0iaWNvbiIgc3R5bGU9IndpZHRoOjI0cHg7aGVpZ2h0OjI0cHgiIGFyaWEtaGlkZGVuPSJ0cnVlIj48dXNlIHhsaW5rOmhyZWY9Ii9idW5kbGVzL2ZvbmNpYWludGVybmV0L3N2Zy9pY29ucy5zdmcjSWNvbi0tZW52ZWxvcGUiPjwvdXNlPjwvc3ZnPgogICAgICAgIDxzcGFuIGNsYXNzPSJTaGFyZS1sYWJlbCI+RW52b3llciBjZSBjb250ZW51IMOgIHVuIGFtaTwvc3Bhbj4KICAgIDwvYT4KCiAgICA8YnV0dG9uIG9uY2xpY2s9ImphdmFzY3JpcHQ6d2luZG93LnByaW50KCkiIGNsYXNzPSJTaGFyZS1pdGVtIj4KICAgICAgICA8c3ZnIGNsYXNzPSJpY29uIiBzdHlsZT0id2lkdGg6MjRweDtoZWlnaHQ6MjRweCIgYXJpYS1oaWRkZW49InRydWUiPjx1c2UgeGxpbms6aHJlZj0iL2J1bmRsZXMvZm9uY2lhaW50ZXJuZXQvc3ZnL2ljb25zLnN2ZyNJY29uLS1wcmludGVyIj48L3VzZT48L3N2Zz4KICAgICAgICA8c3BhbiBjbGFzcz0iU2hhcmUtbGFiZWwiPkltcHJpbWVyIGNlIGNvbnRlbnU8L3NwYW4+CiAgICA8L2J1dHRvbj4KPC9wPgoKCiAgICAgICAgICAgICAgICA8L21haW4+CgoKCiAgICAgICAgICAgICAgICA8YXNpZGUgY2xhc3M9IkNvbnRlbnQtc2lkZWJhciBTaWRlYmFyIj4KICAgICAgICAgICAgICAgICAgICAKICAgIAoKCjxzZWN0aW9uIGNsYXNzPSJPZmZlckNvbnRhY3QiPgogICAgPGgyIGNsYXNzPSJPZmZlckNvbnRhY3QtdGl0bGUiPkNvbnRhY3RlciBsJ2FnZW5jZTwvaDI+CiAgICA8c3BhbiBjbGFzcz0iaGlkZGVuIiBkYXRhLWluZm89ImlkLWFnZW5jZSI+MTEzMzwvc3Bhbj4KCiAgICA8ZGl2IGNsYXNzPSJPZmZlckNvbnRhY3QtY29udGVudCI+CiAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9Ik9mZmVyQ29udGFjdC1yZWZlcmVudCI+Vm90cmUgY29uc2VpbGxlciA6IDxzdHJvbmc+RnJlZGVyaWMmbmJzcDtQRVRJVDwvc3Ryb25nPjwvcD4KICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJPZmZlckNvbnRhY3QtYWRkcmVzcyBPZmZlckNvbnRhY3QtYWRkcmVzcy0tY2VudGVyIHJ3ZC0tbm9Nb2JpbGUgcndkLS1ub1RhYmxldCI+CiAgICAgICAgICAgIDxhIGhyZWY9Imh0dHA6Ly9hZ2VuY2UuZm9uY2lhLmNvbS9wYXJpcy03NTAxMC9hZ2VuY2UtaW1tb2JpbGllcmUvZm9uY2lhLXRyYW5zYWN0aW9uLXBhcmlzLW1hZ2VudGEtMTEzMyIgdGFyZ2V0PSJfYmxhbmsiIGNsYXNzPSJPZmZlckNvbnRhY3QtYWRkcmVzcy0tbGFyZ2UiPgogICAgICAgICAgICAgICAgPHN0cm9uZz5Gb25jaWEgVHJhbnNhY3Rpb24gUGFyaXMgTWFnZW50YTwvc3Ryb25nPgogICAgICAgICAgICAgICAgNjQgYm91bGV2YXJkIE1hZ2VudGE8YnIvPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDc1MDEwIC0gUGFyaXMKICAgICAgICAgICAgPC9hPgogICAgICAgIDwvcD4KCiAgICAgICAgPHAgY2xhc3M9Ik9mZmVyQ29udGFjdC1jYWxsMmFjdGlvbiI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBjbGFzcz0iT2ZmZXJDb250YWN0LWJ0biBPZmZlckNvbnRhY3QtYnRuLS10ZWwgaWNvbi1DYWxsb3V0IiBkYXRhLXdpZGdldD0iU2hvd1RlbCIgZGF0YS1hbmFseXRpY3M9IjExMzMgLSBGT05DSUEgdHJhbnNhY3Rpb24tcGFyaXMtbWFnZW50YSIgaHJlZj0idGVsOjAxNTUyNjkwOTAiPjxzcGFuIGNsYXNzPSJPZmZlckNvbnRhY3QtdGVsTGFiZWwiPkFwcGVsZXIgbCdhZ2VuY2U8L3NwYW4+IDxzcGFuIGNsYXNzPSJPZmZlckNvbnRhY3QtdGVsTnVtIiBkYXRhLWJlaGF0PSJ0ZWxBZ2VuY2UiPjAxLjU1LjI2LjkwLjkwPC9zcGFuPjwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGNsYXNzPSJPZmZlckNvbnRhY3QtYnRuIE9mZmVyQ29udGFjdC1idG4tLW1haWwgaWNvbi1PcGVuZW52ZWxvcGUgTW9kYWwtbGluayIgaHJlZj0iI1BvcHVwQ29udGFjdCIgZGF0YS1hbmFseXRpY3M9Im1haWx0b2FnZW5jeS1idG4iPsOJY3JpcmUgw6AgbCdhZ2VuY2U8L2E+CiAgICAgICAgICAgICAgICAgICAgICAgIDxhIGNsYXNzPSJPZmZlckNvbnRhY3QtYnRuIE9mZmVyQ29udGFjdC1idG4tLXBsYW4gaWNvbi1Qb2ludGVyIiBocmVmPSJodHRwOi8vYWdlbmNlLmZvbmNpYS5jb20vcGFyaXMtNzUwMTAvYWdlbmNlLWltbW9iaWxpZXJlL2ZvbmNpYS10cmFuc2FjdGlvbi1wYXJpcy1tYWdlbnRhLTExMzMiIHRhcmdldD0iX2JsYW5rIj4KICAgICAgICAgICAgPHNwYW4gY2xhc3M9Ik9mZmVyQ29udGFjdC1idG4tbGFiZWwtLW1vYmlsZSI+VHJvdXZlciBsJ2FnZW5jZTwvc3Bhbj4KICAgICAgICAgICAgPHNwYW4gY2xhc3M9Ik9mZmVyQ29udGFjdC1idG4tbGFiZWwtLWRlc2t0b3AiIGRhdGEtYmVoYXQ9InBsYW5BZ2VuY2UiPlBsYW4gZCdhY2PDqHMgZGUgbCdhZ2VuY2U8L3NwYW4+CiAgICAgICAgICAgIDwvYT4KICAgICAgICA8L3A+CgogICAgPC9kaXY+Cgo8L3NlY3Rpb24+CgogICAgCgoKCgo8c2VjdGlvbiBpZD0iUG9wdXBDb250YWN0IiBjbGFzcz0iTW9kYWwgbWZwLWhpZGUiPgoKICAgIDxoMyBjbGFzcz0iTW9kYWwtdGl0bGUiPsOJY3JpcmUgw6AgbCdhZ2VuY2U8L2gzPgoKICAgIDxkaXYgY2xhc3M9ImZvcm1fY29udGVudF9tb2RhbCI+CiAgICAgICAgPHAgY2xhc3M9Ik9mZmVyQ29udGFjdC1hZGRyZXNzIE9mZmVyQ29udGFjdC1hZGRyZXNzLS1sZWZ0Ij4KICAgICAgICAgICAgPHN0cm9uZyBpZD0ibm9tQWdlbmNlQ29udGFjdCI+Rm9uY2lhIFRyYW5zYWN0aW9uIFBhcmlzIE1hZ2VudGE8L3N0cm9uZz4KICAgICAgICAgICAgPHNwYW4gaWQ9ImFkZHJBZ2VuY2VDb250YWN0Ij42NCBib3VsZXZhcmQgTWFnZW50YTwvc3Bhbj48YnIvPgogICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBpZD0idmlsbGVDUEFnZW5jZUNvbnRhY3QiPjc1MDEwIC0gUGFyaXM8L3NwYW4+PGJyLz4KCiAgICAgICAgICAgIFTDqWwuIDAxLjU1LjI2LjkwLjkwICZuYnNwOyZuYnNwOyZuYnNwOyBGYXguIDAxLjU1LjI2LjkwLjk5ICAgICAgICA8L3A+CgogICAgICAgIDxmb3JtIG5hbWU9ImZvbmNpYV9hZ2VuY3lfY29udGFjdCIgbWV0aG9kPSJwb3N0IiBhY3Rpb249ImZvbmNpYV9pbnRlcm5ldF9hZ2VuY3lfY29udGFjdCIgaWQ9ImZvbmNpYV9hZ2VuY3lfY29udGFjdCIgY2xhc3M9IkZvcm0iIGRhdGEtZm9ybT0iYWpheF9mb3JtIj4KCiAgICAgICAgPGg0IGNsYXNzPSJGb3JtLXN1YnRpdGxlIj5Wb3VzIMOqdGVzIGludMOpcmVzc8OpKGUpIHBhciBjZSBiaWVuIMOgIHZlbmRyZTwvaDQ+CgogICAgICAgIDxwIGRhdGEtYmVoYXQ9ImNhcmFjdGVyaXN0aXF1ZUJpZW5Db250YWN0QWdlbmNlIj4KICAgICAgICAgICAgPHNwYW4gY2xhc3M9IlRhZyI+QXBwYXJ0ZW1lbnQ8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iVGFnIj4zIHBpw6hjZXM8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJUYWciPlLDqWYuIDEzMzE0MzU8L3NwYW4+CiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJUYWciPlBhcmlzPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9IlRhZyI+ODBtwrI8L3NwYW4+CiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iVGFnIj43OTkwMDAgJmV1cm87PC9zcGFuPgogICAgICAgICAgICAgICAgICAgIDwvcD4KCiAgICAgICAgPGRpdiBjbGFzcz0iZXJyb3JzX2NvbnRhaW5lciI+PC9kaXY+CiAgICAgICAgCiAgICAgICAgPGg0IGNsYXNzPSJGb3JtLXN1YnRpdGxlIj5Wb3MgaW5mb3JtYXRpb25zPC9oND4KCiAgICAgICAgPGZpZWxkc2V0IGNsYXNzPSJGb3JtLWZpZWxkc2V0IEZvcm0tZmllbGRzZXQtLWlubGluZSI+CiAgICAgICAgICAgIDxsZWdlbmQgY2xhc3M9IkZvcm0tbGFiZWwgRm9ybS1sYWJlbC0taGlkZGVuIj5DaXZpbGl0w6k8L2xlZ2VuZD4KICAgICAgICAgICAgICAgIDx1bD48bGkgY2xhc3M9IkZvcm0tZmllbGQgRm9ybS1maWVsZC0tcmFkaW8iPjxpbnB1dCB0eXBlPSJyYWRpbyIgaWQ9ImZvbmNpYV9hZ2VuY3lfY29udGFjdF9jaXZpbGl0ZV8wIiBuYW1lPSJmb25jaWFfYWdlbmN5X2NvbnRhY3RbY2l2aWxpdGVdIiB2YWx1ZT0iTSIgLz48bGFiZWwgZm9yPSJmb25jaWFfYWdlbmN5X2NvbnRhY3RfY2l2aWxpdGVfMCI+TTwvbGFiZWw+PC9saT48bGkgY2xhc3M9IkZvcm0tZmllbGQgRm9ybS1maWVsZC0tcmFkaW8iPjxpbnB1dCB0eXBlPSJyYWRpbyIgaWQ9ImZvbmNpYV9hZ2VuY3lfY29udGFjdF9jaXZpbGl0ZV8xIiBuYW1lPSJmb25jaWFfYWdlbmN5X2NvbnRhY3RbY2l2aWxpdGVdIiB2YWx1ZT0iTW1lIiAvPjxsYWJlbCBmb3I9ImZvbmNpYV9hZ2VuY3lfY29udGFjdF9jaXZpbGl0ZV8xIj5NbWU8L2xhYmVsPjwvbGk+PGxpIGNsYXNzPSJGb3JtLWZpZWxkIEZvcm0tZmllbGQtLXJhZGlvIj48aW5wdXQgdHlwZT0icmFkaW8iIGlkPSJmb25jaWFfYWdlbmN5X2NvbnRhY3RfY2l2aWxpdGVfMiIgbmFtZT0iZm9uY2lhX2FnZW5jeV9jb250YWN0W2NpdmlsaXRlXSIgdmFsdWU9Ik1sbGUiIC8+PGxhYmVsIGZvcj0iZm9uY2lhX2FnZW5jeV9jb250YWN0X2NpdmlsaXRlXzIiPk1sbGU8L2xhYmVsPjwvbGk+PC91bD4KICAgICAgICA8L2ZpZWxkc2V0PgoKICAgICAgICA8cCBjbGFzcz0iRm9ybS1maWVsZCBGb3JtLWZpZWxkLS10ZXh0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBjbGFzcz0iRm9ybS1sYWJlbCBGb3JtLWxhYmVsLS1oaWRkZW4gcmVxdWlyZWQiIGZvcj0iZm9uY2lhX2FnZW5jeV9jb250YWN0X2xhc3RfbmFtZSI+Tm9tPC9sYWJlbD4KICAgICAgICAgICAgPGlucHV0IHR5cGU9InRleHQiIGlkPSJmb25jaWFfYWdlbmN5X2NvbnRhY3RfbGFzdF9uYW1lIiBuYW1lPSJmb25jaWFfYWdlbmN5X2NvbnRhY3RbbGFzdF9uYW1lXSIgcmVxdWlyZWQ9InJlcXVpcmVkIiBwbGFjZWhvbGRlcj0iTm9tICoiIC8+CiAgICAgICAgPC9wPgoKICAgICAgICA8cCBjbGFzcz0iRm9ybS1maWVsZCBGb3JtLWZpZWxkLS10ZXh0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBjbGFzcz0iRm9ybS1sYWJlbCBGb3JtLWxhYmVsLS1oaWRkZW4gcmVxdWlyZWQiIGZvcj0iZm9uY2lhX2FnZW5jeV9jb250YWN0X2ZpcnN0X25hbWUiPlByw6lub208L2xhYmVsPgogICAgICAgICAgICA8aW5wdXQgdHlwZT0idGV4dCIgaWQ9ImZvbmNpYV9hZ2VuY3lfY29udGFjdF9maXJzdF9uYW1lIiBuYW1lPSJmb25jaWFfYWdlbmN5X2NvbnRhY3RbZmlyc3RfbmFtZV0iIHJlcXVpcmVkPSJyZXF1aXJlZCIgcGxhY2Vob2xkZXI9IlByw6lub20gKiIgLz4KICAgICAgICA8L3A+CgogICAgICAgIDxwIGNsYXNzPSJGb3JtLWZpZWxkIEZvcm0tZmllbGQtLXRleHQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGNsYXNzPSJGb3JtLWxhYmVsIEZvcm0tbGFiZWwtLWhpZGRlbiByZXF1aXJlZCIgZm9yPSJmb25jaWFfYWdlbmN5X2NvbnRhY3RfZW1haWwiPkVtYWlsPC9sYWJlbD4KICAgICAgICAgICAgPGlucHV0IHR5cGU9ImVtYWlsIiBpZD0iZm9uY2lhX2FnZW5jeV9jb250YWN0X2VtYWlsIiBuYW1lPSJmb25jaWFfYWdlbmN5X2NvbnRhY3RbZW1haWxdIiByZXF1aXJlZD0icmVxdWlyZWQiIHBsYWNlaG9sZGVyPSJFbWFpbCAqIiAvPgogICAgICAgIDwvcD4KCiAgICAgICAgPHAgY2xhc3M9IkZvcm0tZmllbGQgRm9ybS1maWVsZC0tdGV4dCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgY2xhc3M9IkZvcm0tbGFiZWwgRm9ybS1sYWJlbC0taGlkZGVuIHJlcXVpcmVkIiBmb3I9ImZvbmNpYV9hZ2VuY3lfY29udGFjdF9waG9uZSI+VMOpbMOpcGhvbmU8L2xhYmVsPgogICAgICAgICAgICA8aW5wdXQgdHlwZT0idGV4dCIgaWQ9ImZvbmNpYV9hZ2VuY3lfY29udGFjdF9waG9uZSIgbmFtZT0iZm9uY2lhX2FnZW5jeV9jb250YWN0W3Bob25lXSIgcmVxdWlyZWQ9InJlcXVpcmVkIiBwbGFjZWhvbGRlcj0iVMOpbMOpcGhvbmUgKiIgLz4KICAgICAgICA8L3A+CgogICAgICAgIDxwIGNsYXNzPSJGb3JtLWZpZWxkIEZvcm0tZmllbGQtLWNoZWNrYm94Ij4KICAgICAgICAgICAgPGlucHV0IHR5cGU9ImNoZWNrYm94IiBpZD0iZm9uY2lhX2FnZW5jeV9jb250YWN0X2ZvbmNpYV9jdXN0b21lciIgbmFtZT0iZm9uY2lhX2FnZW5jeV9jb250YWN0W2ZvbmNpYV9jdXN0b21lcl0iIHZhbHVlPSIxIiAvPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGNsYXNzPSJGb3JtLWxhYmVsIiBmb3I9ImZvbmNpYV9hZ2VuY3lfY29udGFjdF9mb25jaWFfY3VzdG9tZXIiPkplIHN1aXMgZMOpasOgIGNsaWVudCBGT05DSUE8L2xhYmVsPgogICAgICAgIDwvcD4KCiAgICAgICAgPGZpZWxkc2V0IGNsYXNzPSJGb3JtLWZpZWxkc2V0Ij4KICAgICAgICAgICAgPGxlZ2VuZCBjbGFzcz0iRm9ybS1sZWdlbmQiPsOJY2jDqWFuY2UgZGUgdm90cmUgcHJvamV0PC9sZWdlbmQ+CiAgICAgICAgICAgICAgICA8dWw+PGxpIGNsYXNzPSJGb3JtLWZpZWxkIEZvcm0tZmllbGQtLXJhZGlvIj48aW5wdXQgdHlwZT0icmFkaW8iIGlkPSJmb25jaWFfYWdlbmN5X2NvbnRhY3RfZWNoZWFuY2VfMCIgbmFtZT0iZm9uY2lhX2FnZW5jeV9jb250YWN0W2VjaGVhbmNlXSIgdmFsdWU9IkltbcOpZGlhdGUiIC8+PGxhYmVsIGZvcj0iZm9uY2lhX2FnZW5jeV9jb250YWN0X2VjaGVhbmNlXzAiPkltbcOpZGlhdGU8L2xhYmVsPjwvbGk+PGxpIGNsYXNzPSJGb3JtLWZpZWxkIEZvcm0tZmllbGQtLXJhZGlvIj48aW5wdXQgdHlwZT0icmFkaW8iIGlkPSJmb25jaWFfYWdlbmN5X2NvbnRhY3RfZWNoZWFuY2VfMSIgbmFtZT0iZm9uY2lhX2FnZW5jeV9jb250YWN0W2VjaGVhbmNlXSIgdmFsdWU9IjEgbW9pcyIgLz48bGFiZWwgZm9yPSJmb25jaWFfYWdlbmN5X2NvbnRhY3RfZWNoZWFuY2VfMSI+MSBtb2lzPC9sYWJlbD48L2xpPjxsaSBjbGFzcz0iRm9ybS1maWVsZCBGb3JtLWZpZWxkLS1yYWRpbyI+PGlucHV0IHR5cGU9InJhZGlvIiBpZD0iZm9uY2lhX2FnZW5jeV9jb250YWN0X2VjaGVhbmNlXzIiIG5hbWU9ImZvbmNpYV9hZ2VuY3lfY29udGFjdFtlY2hlYW5jZV0iIHZhbHVlPSIzIG1vaXMgZXQgcGx1cyIgLz48bGFiZWwgZm9yPSJmb25jaWFfYWdlbmN5X2NvbnRhY3RfZWNoZWFuY2VfMiI+MyBtb2lzIGV0IHBsdXM8L2xhYmVsPjwvbGk+PC91bD4KICAgICAgICA8L2ZpZWxkc2V0PgoKICAgICAgICA8ZmllbGRzZXQgY2xhc3M9IkZvcm0tZmllbGRzZXQiPgogICAgICAgICAgICA8bGVnZW5kIGNsYXNzPSJGb3JtLWxlZ2VuZCI+Vm91cyBzb3VoYWl0ZXogw6p0cmUgY29udGFjdMOpKGUpIDo8L2xlZ2VuZD4KICAgICAgICAgICAgICAgIDx1bD48bGkgY2xhc3M9IkZvcm0tZmllbGQgRm9ybS1maWVsZC0tcmFkaW8iPjxpbnB1dCB0eXBlPSJyYWRpbyIgaWQ9ImZvbmNpYV9hZ2VuY3lfY29udGFjdF9jb250YWN0X21ldGhvZF8wIiBuYW1lPSJmb25jaWFfYWdlbmN5X2NvbnRhY3RbY29udGFjdF9tZXRob2RdIiB2YWx1ZT0iUGFyIHTDqWzDqXBob25lIiAvPjxsYWJlbCBmb3I9ImZvbmNpYV9hZ2VuY3lfY29udGFjdF9jb250YWN0X21ldGhvZF8wIj5QYXIgdMOpbMOpcGhvbmU8L2xhYmVsPjwvbGk+PGxpIGNsYXNzPSJGb3JtLWZpZWxkIEZvcm0tZmllbGQtLXJhZGlvIj48aW5wdXQgdHlwZT0icmFkaW8iIGlkPSJmb25jaWFfYWdlbmN5X2NvbnRhY3RfY29udGFjdF9tZXRob2RfMSIgbmFtZT0iZm9uY2lhX2FnZW5jeV9jb250YWN0W2NvbnRhY3RfbWV0aG9kXSIgdmFsdWU9IlBhciBFbWFpbCIgLz48bGFiZWwgZm9yPSJmb25jaWFfYWdlbmN5X2NvbnRhY3RfY29udGFjdF9tZXRob2RfMSI+UGFyIEVtYWlsPC9sYWJlbD48L2xpPjwvdWw+CiAgICAgICAgPC9maWVsZHNldD4KCiAgICAgICAgPHAgY2xhc3M9IkZvcm0tZmllbGQgRm9ybS1maWVsZC0tdGV4dCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgY2xhc3M9IkZvcm0tbGFiZWwiIGZvcj0iZm9uY2lhX2FnZW5jeV9jb250YWN0X21lc3NhZ2UiPlZvdHJlIG1lc3NhZ2U8L2xhYmVsPgogICAgICAgICAgICA8dGV4dGFyZWEgaWQ9ImZvbmNpYV9hZ2VuY3lfY29udGFjdF9tZXNzYWdlIiBuYW1lPSJmb25jaWFfYWdlbmN5X2NvbnRhY3RbbWVzc2FnZV0iPjwvdGV4dGFyZWE+CiAgICAgICAgPC9wPgoKICAgICAgICA8ZGl2IGNsYXNzPSJNb2RhbC1mb290ZXIiPgogICAgICAgICAgICA8cCBjbGFzcz0iRm9ybS1pbmZvIj4qIGNoYW1wcyBvYmxpZ2F0b2lyZXM8L3A+CgogICAgICAgICAgICA8cCBjbGFzcz0iRm9ybS1maWVsZCBGb3JtLWZpZWxkLS1zdWJtaXQgRm9ybS1maWVsZC0tY2VudGVyIj4KICAgICAgICAgICAgICAgIDxidXR0b24gdHlwZT0ic3VibWl0IiBpZD0iZm9uY2lhX2FnZW5jeV9jb250YWN0X3N1Ym1pdCIgbmFtZT0iZm9uY2lhX2FnZW5jeV9jb250YWN0W3N1Ym1pdF0iIGNsYXNzPSJCdG4gQnRuLS12YWxpZCIgZGF0YS1hY3Rpb249InN1Ym1pdF9mb3JtIiBkYXRhLWFuYWx5dGljcy12YWx1ZT0iMTEzMyAtIEZPTkNJQSB0cmFuc2FjdGlvbi1wYXJpcy1tYWdlbnRhIj5FbnZveWVyPC9idXR0b24+CiAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iTGVnYWxNZW50aW9ucyBMZWdhbE1lbnRpb25zLS1zbWFsbCI+CiAgICAgICAgICAgICAgICAgICAgPHA+Q2VzIGluZm9ybWF0aW9ucyBzb250IG7DqWNlc3NhaXJlcyBhdSB0cmFpdGVtZW50IGRlIHZvdHJlIGRlbWFuZGUgZXQgw6AgbGEgZ2VzdGlvbiBkZSBub3MgcmVsYXRpb25zIGNvbW1lcmNpYWxlcy4gTGVzIGRvbm7DqWVzIMOgIGNhcmFjdMOocmUgcGVyc29ubmVsIHJlY3VlaWxsaWVzIHBhciBGT05DSUEgZm9udCBsJ29iamV0IGQndW4gdHJhaXRlbWVudCBhdXRvbWF0aXPDqSBkZXN0aW7DqSDDoCBsYSBnZXN0aW9uIGV0IGF1eCBuw6lnb2NpYXRpb25zIGRlIGJpZW5zIGltbW9iaWxpZXJzLCDDoCBsYSBnZXN0aW9uIGRlcyBjbGllbnRzIGV0IMOgIGxhIHLDqWFsaXNhdGlvbiBkJ29ww6lyYXRpb25zIHJlbGF0aXZlcyDDoCBsYSBwcm9zcGVjdGlvbi4gTGEgY29tbXVuaWNhdGlvbiBkZSB2b3MgY29vcmRvbm7DqWVzIMOpbGVjdHJvbmlxdWVzIGltcGxpcXVlIHZvdHJlIGNvbnNlbnRlbWVudCDDoCByZWNldm9pciwgcGFyIHZvaWUgw6lsZWN0cm9uaXF1ZSwgZGVzIG9mZnJlcyBjb21tZXJjaWFsZXMgZGUgbGEgcGFydCBkZSBGT05DSUEgZXQgZGUgc2VzIHBhcnRlbmFpcmVzIGNvbW1lcmNpYXV4IGF1eHF1ZWxzIEZPTkNJQSBwZXV0IMOqdHJlIGFtZW7DqWUgw6AgY29tbXVuaXF1ZXIgdm9zIGRvbm7DqWVzIMOgIGNhcmFjdMOocmUgcGVyc29ubmVsLiBUb3V0ZWZvaXMsIHZvdXMgcG91dmV6IHZvdXMgb3Bwb3NlciBzYW5zIGZyYWlzIChob3JtaXMgY2V1eCBsacOpcyDDoCBsYSB0cmFuc21pc3Npb24gZHUgcmVmdXMpIGV0IHNhbnMganVzdGlmaWNhdGlvbiDDoCBsJ3V0aWxpc2F0aW9uIGRlIHZvcyBkb25uw6llcyDDoCBkZXMgZmlucyBkZSBwcm9zcGVjdGlvbiBjb21tZXJjaWFsZS4gQ29uZm9ybcOpbWVudCDDoCBsYSBMb2kgbsKwIDc4LTE3IGR1IDYgamFudmllciAxOTc4IG1vZGlmacOpZSwgdm91cyBkaXNwb3NleiBkJ3VuIGRyb2l0IGQnYWNjw6hzLCBkZSByZWN0aWZpY2F0aW9uIGV0IGQnb3Bwb3NpdGlvbiwgcG91ciBkZXMgbW90aWZzIGzDqWdpdGltZXMsIGF1IHRyYWl0ZW1lbnQgZGUgdm9zIGRvbm7DqWVzIMOgIGNhcmFjdMOocmUgcGVyc29ubmVsIHF1ZSB2b3VzIHBvdXZleiBleGVyY2VyIGVuIHZvdXMgYWRyZXNzYW50IGF1IHJlc3BvbnNhYmxlIGR1IHRyYWl0ZW1lbnQsIEZPTkNJQSAtIFNlcnZpY2UgVHJhbnNhY3Rpb24gMTMsIGF2ZW51ZSBMZWJydW4gLSA5MjE2MCBBTlRPTlkuPC9wPgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2Rpdj4KCiAgICAgICAgPGlucHV0IHR5cGU9ImhpZGRlbiIgaWQ9ImZvbmNpYV9hZ2VuY3lfY29udGFjdF9wcm9wZXJ0eV9kYXRhIiBuYW1lPSJmb25jaWFfYWdlbmN5X2NvbnRhY3RbcHJvcGVydHlfZGF0YV0iIHZhbHVlPSJ7JnF1b3Q7cHJpeFZlbnRlJnF1b3Q7Ojc5OTAwMCwmcXVvdDtzdXJmYWNlJnF1b3Q7OjgwLCZxdW90O3JlZmVyZW5jZSZxdW90OzomcXVvdDsxMzMxNDM1JnF1b3Q7LCZxdW90O3Byb3BlcnR5VHlwZSZxdW90OzomcXVvdDtwdXJjaGFzZSZxdW90OywmcXVvdDtuYlBpZWNlcyZxdW90OzozLCZxdW90O25lZ29jaWF0ZXVyUHJlbm9tJnF1b3Q7OiZxdW90O0ZyZWRlcmljJnF1b3Q7LCZxdW90O3ZpbGxlJnF1b3Q7OiZxdW90O3BhcmlzJnF1b3Q7LCZxdW90O2NvZGVQb3N0YWwmcXVvdDs6JnF1b3Q7NzUwMTAmcXVvdDssJnF1b3Q7dHlwZUJpZW4mcXVvdDs6JnF1b3Q7YXBwYXJ0ZW1lbnQmcXVvdDssJnF1b3Q7bmVnb2NpYXRldXJOb20mcXVvdDs6JnF1b3Q7UEVUSVQmcXVvdDssJnF1b3Q7c2NvcmUmcXVvdDs6MX0iIC8+CiAgICAgICAgPGlucHV0IHR5cGU9ImhpZGRlbiIgaWQ9ImZvbmNpYV9hZ2VuY3lfY29udGFjdF9hZ2VuY3lfbWFpbCIgbmFtZT0iZm9uY2lhX2FnZW5jeV9jb250YWN0W2FnZW5jeV9tYWlsXSIgdmFsdWU9ImZ0LXBhcmlzMTBtYWdlbnRhIyNmb25jaWEuZnIiIC8+CgogICAgICAgICAgICAKCiAgICAgICAgPC9mb3JtPgoKICAgIDwvZGl2PgoKPC9zZWN0aW9uPgoKICAgICAgICAgICAgICAgIDwvYXNpZGU+CgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L3NlY3Rpb24+CiAgICAgICAgCiAgICA8L2Rpdj4KCgoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9IkJyZWFkY3J1bWJzIj4KICAgICAgICAgICAgPHAgICAgIGNsYXNzPSJCcmVhZGNydW1icy1pbm5lciIgZGF0YS10eXBlPSJ5b2xvIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3Bhbj5Gb25jaWE8L3NwYW4+ICAgICAgICAgICAgICAgICAgICAgICAgICAgIAoKICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iL2FjaGF0IiAgICAgY2xhc3M9IkJyZWFkY3J1bWJzLWxpbmsiPkFjaGF0PC9hPiAgICAgICAgICAgICAgICAgICAgICAgICAgICAKCiAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Ii9hY2hhdC9wYXJpcy03NTAxOSIgICAgIGNsYXNzPSJCcmVhZGNydW1icy1saW5rIj5QYXJpcyA3NTAxOTwvYT4gICAgICAgICAgICAgICAgICAgICAgICAgICAgCgogICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3Bhbj5QYXJraW5nPC9zcGFuPiAgICAgICAgICAgICAgICAgICAgICAgICAgICAKCiAgICAKCiAgICAgICAgICAgIDwvcD4KICAgICAgICA8L2Rpdj4KICAgIAoKCiAgICAgICAgICAgIAogICAgICAgIAo8Zm9vdGVyIGNsYXNzPSJGb290ZXIiIHJvbGU9ImNvbnRlbnRpbmZvIj4KCiAgICA8ZGl2IGNsYXNzPSJGb290ZXItcm93IEZvb3Rlci1yb3ctLWlkZW50aXR5IEZvb3Rlci1yb3ctLWlkZW50aXR5LW1vYmlsZSI+CiAgICAgICAgPGRpdiBjbGFzcz0iRm9vdGVyLTJwYXJ0Ij4KICAgICAgICAgICAgPHAgY2xhc3M9IkZvb3Rlci1wYXJ0MSBGb290ZXItcGFydDEtLWxvZ28iPgogICAgICAgICAgICAgICAgPGltZyB3aWR0aD0iMTU0IiBoZWlnaHQ9IjU2IiBzcmM9Imh0dHBzOi8vcGhvdG9zLmZvbmNpYS5uZXQvaW1hZ2VzL0ZvbmNpYV9sb2dvdl8zMDhfODYucG5nIiBhbHQ9IkZvbmNpYSI+CiAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgPHVsIGNsYXNzPSJGb290ZXItcGFydDIgRm9vdGVyLXBhcnQyLS1saW5rcyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgICAgPGEgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBocmVmPSIvbWVudGlvbnMtbGVnYWxlcyIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkYXRhLWJlaGF0PSJsaW5rLU1lbnRpb25zX2zDqWdhbGVzIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgTWVudGlvbnMgbMOpZ2FsZXMKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICAgIDxhICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaHJlZj0iaHR0cHM6Ly9mci5mb25jaWEuY29tL3BsYW4tZHUtc2l0ZSIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkYXRhLWJlaGF0PSJsaW5rLVBsYW5fZHVfc2l0ZSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFBsYW4gZHUgc2l0ZQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgICAgPGEgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBocmVmPSIvI2ZvbmNpYV9jb25zZW50ZW1lbnRzIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtYmVoYXQ9ImxpbmstR2VzdGlvbl9kZXNfY29va2llcyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEdlc3Rpb24gZGVzIGNvb2tpZXMKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICAgIDxhICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaHJlZj0iL2NoYXJ0ZS1kZS1wcm90ZWN0aW9uLWRlcy1kb25uZWVzIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtYmVoYXQ9ImxpbmstQ2hhcnRlX2RlX3Byb3RlY3Rpb25fZGVzX2Rvbm7DqWVzXyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIENoYXJ0ZSBkZSBwcm90ZWN0aW9uIGRlcyBkb25uw6llcyAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICAgIDxhICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaHJlZj0iL25vdHJlLXByZW9jY3VwYXRpb24tbGEtc2VjdXJpdGUtZGUtdm9zLWRvbm5lZXMiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1iZWhhdD0ibGluay1Tw6ljdXJpdMOpX0luZm9ybWF0aXF1ZSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFPDqWN1cml0w6kgSW5mb3JtYXRpcXVlCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgICA8YSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhyZWY9Ii9zZXJ2aWNlcyIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkYXRhLWJlaGF0PSJsaW5rLVNlcnZpY2VzIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgU2VydmljZXMKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICAgIDxhICB0YXJnZXQ9Il9ibGFuayIgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBocmVmPSJodHRwOi8vcHJlc3Nyb29tLmZvbmNpYS5jb20vIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtYmVoYXQ9ImxpbmstRXNwYWNlX1ByZXNzZSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEVzcGFjZSBQcmVzc2UKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICAgIDxhICB0YXJnZXQ9Il9ibGFuayIgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBocmVmPSJodHRwOi8vZm9uY2lhLXJlY3J1dGUudGFsZW50LXNvZnQuY29tL2FjY3VlaWwuYXNweCIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkYXRhLWJlaGF0PSJsaW5rLU5vc19vZmZyZXNfZOKAmWVtcGxvaSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIE5vcyBvZmZyZXMgZOKAmWVtcGxvaQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgICAgPGEgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBocmVmPSIvYWNoYXQvYXZpcy1jbGllbnRzIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtYmVoYXQ9ImxpbmstQXZpc19jbGllbnRzIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgQXZpcyBjbGllbnRzCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdWw+CiAgICAgICAgPC9kaXY+CiAgICA8L2Rpdj4KCiAgICA8ZGl2IGNsYXNzPSJGb290ZXItcGFydDEgRm9vdGVyLXBhcnQxLS1zb2NpYWwiPgogICAgICAgICAgICAgICAgICAgIDxhIGNsYXNzPSJGb290ZXItLWhhdXQtZGUtcGFnZS0tZGVza3RvcCIgIHRhcmdldD0iX2JsYW5rIiAgaHJlZj0iaHR0cHM6Ly93d3cuZmFjZWJvb2suY29tL0ZvbmNpYSIgZGF0YS1iZWhhdD0ic29jaWFsTGluay1GYWNlYm9vayBtZW51IGRyb2l0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHN2ZyBjbGFzcz0iaWNvbiIgc3R5bGU9IndpZHRoOjM4cHg7aGVpZ2h0OjM4cHgiIGFyaWEtaGlkZGVuPSJ0cnVlIj48dXNlIHhsaW5rOmhyZWY9Ii9idW5kbGVzL2ZvbmNpYWludGVybmV0L3N2Zy9pY29ucy5zdmcjSWNvbi0tZmFjZWJvb2stcmVzcG9uc2l2ZSI+PC91c2U+PC9zdmc+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgIDxhIGNsYXNzPSJGb290ZXItLWhhdXQtZGUtcGFnZSIgIHRhcmdldD0iX2JsYW5rIiAgaHJlZj0iaHR0cHM6Ly93d3cuZmFjZWJvb2suY29tL0ZvbmNpYSIgZGF0YS1iZWhhdD0ic29jaWFsTGluay1GYWNlYm9vayBtZW51IGRyb2l0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHN2ZyBjbGFzcz0iaWNvbiIgc3R5bGU9IndpZHRoOjM4cHg7aGVpZ2h0OjM4cHgiIGFyaWEtaGlkZGVuPSJ0cnVlIj48dXNlIHhsaW5rOmhyZWY9Ii9idW5kbGVzL2ZvbmNpYWludGVybmV0L3N2Zy9pY29ucy5zdmcjSWNvbi0tZmFjZWJvb2syIj48L3VzZT48L3N2Zz4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgICA8YSBjbGFzcz0iRm9vdGVyLS1oYXV0LWRlLXBhZ2UtLWRlc2t0b3AiICB0YXJnZXQ9Il9ibGFuayIgIGhyZWY9Imh0dHBzOi8vdHdpdHRlci5jb20vZm9uY2lhIiBkYXRhLWJlaGF0PSJzb2NpYWxMaW5rLXR3aXR0ZXIgbWVudSBkcm9pdCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzdmcgY2xhc3M9Imljb24iIHN0eWxlPSJ3aWR0aDozOHB4O2hlaWdodDozOHB4IiBhcmlhLWhpZGRlbj0idHJ1ZSI+PHVzZSB4bGluazpocmVmPSIvYnVuZGxlcy9mb25jaWFpbnRlcm5ldC9zdmcvaWNvbnMuc3ZnI0ljb24tLXR3aXR0ZXItcmVwb25zaXZlIj48L3VzZT48L3N2Zz4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgPGEgY2xhc3M9IkZvb3Rlci0taGF1dC1kZS1wYWdlIiAgdGFyZ2V0PSJfYmxhbmsiICBocmVmPSJodHRwczovL3R3aXR0ZXIuY29tL2ZvbmNpYSIgZGF0YS1iZWhhdD0ic29jaWFsTGluay10d2l0dGVyIG1lbnUgZHJvaXQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3ZnIGNsYXNzPSJpY29uIiBzdHlsZT0id2lkdGg6MzhweDtoZWlnaHQ6MzhweCIgYXJpYS1oaWRkZW49InRydWUiPjx1c2UgeGxpbms6aHJlZj0iL2J1bmRsZXMvZm9uY2lhaW50ZXJuZXQvc3ZnL2ljb25zLnN2ZyNJY29uLS10d2l0dGVyMiI+PC91c2U+PC9zdmc+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgICAgPGEgY2xhc3M9IkZvb3Rlci0taGF1dC1kZS1wYWdlLS1kZXNrdG9wIiAgdGFyZ2V0PSJfYmxhbmsiICBocmVmPSJodHRwczovL3d3dy55b3V0dWJlLmNvbS91c2VyL2ZvbmNpYSIgZGF0YS1iZWhhdD0ic29jaWFsTGluay15b3V0dWJlIG1lbnUgZHJvaXQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3ZnIGNsYXNzPSJpY29uIiBzdHlsZT0id2lkdGg6MzhweDtoZWlnaHQ6MzhweCIgYXJpYS1oaWRkZW49InRydWUiPjx1c2UgeGxpbms6aHJlZj0iL2J1bmRsZXMvZm9uY2lhaW50ZXJuZXQvc3ZnL2ljb25zLnN2ZyNJY29uLS15b3V0dWJlLXJlc3BvbnNpdmUiPjwvdXNlPjwvc3ZnPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICA8YSBjbGFzcz0iRm9vdGVyLS1oYXV0LWRlLXBhZ2UiICB0YXJnZXQ9Il9ibGFuayIgIGhyZWY9Imh0dHBzOi8vd3d3LnlvdXR1YmUuY29tL3VzZXIvZm9uY2lhIiBkYXRhLWJlaGF0PSJzb2NpYWxMaW5rLXlvdXR1YmUgbWVudSBkcm9pdCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzdmcgY2xhc3M9Imljb24iIHN0eWxlPSJ3aWR0aDozOHB4O2hlaWdodDozOHB4IiBhcmlhLWhpZGRlbj0idHJ1ZSI+PHVzZSB4bGluazpocmVmPSIvYnVuZGxlcy9mb25jaWFpbnRlcm5ldC9zdmcvaWNvbnMuc3ZnI0ljb24tLXlvdXR1YmUyIj48L3VzZT48L3N2Zz4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgICA8YSBjbGFzcz0iRm9vdGVyLS1oYXV0LWRlLXBhZ2UtLWRlc2t0b3AiICB0YXJnZXQ9Il9ibGFuayIgIGhyZWY9Imh0dHBzOi8vd3d3LmxpbmtlZGluLmNvbS9jb21wYW55Lzc3MjkxNy8iIGRhdGEtYmVoYXQ9InNvY2lhbExpbmstbGlua2VkaW4gbWVudSBkcm9pdCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzdmcgY2xhc3M9Imljb24iIHN0eWxlPSJ3aWR0aDozOHB4O2hlaWdodDozOHB4IiBhcmlhLWhpZGRlbj0idHJ1ZSI+PHVzZSB4bGluazpocmVmPSIvYnVuZGxlcy9mb25jaWFpbnRlcm5ldC9zdmcvaWNvbnMuc3ZnI0ljb24tLWxpbmtlZGluLXJlc3BvbnNpdmUiPjwvdXNlPjwvc3ZnPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICA8YSBjbGFzcz0iRm9vdGVyLS1oYXV0LWRlLXBhZ2UiICB0YXJnZXQ9Il9ibGFuayIgIGhyZWY9Imh0dHBzOi8vd3d3LmxpbmtlZGluLmNvbS9jb21wYW55Lzc3MjkxNy8iIGRhdGEtYmVoYXQ9InNvY2lhbExpbmstbGlua2VkaW4gbWVudSBkcm9pdCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzdmcgY2xhc3M9Imljb24iIHN0eWxlPSJ3aWR0aDozOHB4O2hlaWdodDozOHB4IiBhcmlhLWhpZGRlbj0idHJ1ZSI+PHVzZSB4bGluazpocmVmPSIvYnVuZGxlcy9mb25jaWFpbnRlcm5ldC9zdmcvaWNvbnMuc3ZnI0ljb24tLWxpbmtlZGluIj48L3VzZT48L3N2Zz4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAKICAgICAgICA8YSBjbGFzcz0iRm9vdGVyLS1oYXV0LWRlLXBhZ2UiIGhyZWY9IiMiIG9uQ2xpY2s9IiQoJ2h0bWwsIGJvZHknKS5hbmltYXRlKHtzY3JvbGxUb3A6MH0sICdzbG93Jyk7IHJldHVybiBmYWxzZTsiPgogICAgICAgICAgICA8c3ZnIGNsYXNzPSJpY29uIiBzdHlsZT0id2lkdGg6MzhweDtoZWlnaHQ6MzhweCIgYXJpYS1oaWRkZW49InRydWUiPjx1c2UgeGxpbms6aHJlZj0iL2J1bmRsZXMvZm9uY2lhaW50ZXJuZXQvc3ZnL2ljb25zLnN2ZyNJY29uLS1oYXV0X2RlX3BhZ2VfZ3JpcyI+PC91c2U+PC9zdmc+CiAgICAgICAgPC9hPgogICAgPC9kaXY+CgogICAgPGRpdiBjbGFzcz0iRm9vdGVyLXJvdyBGb290ZXItcm93LS1saW5rczEiPgogICAgICAgIDxkaXYgY2xhc3M9IkZvb3Rlci1jb2xzIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iRm9vdGVyLWNvbCBGb290ZXItY29sLS1sZWZ0Ij4KICAgICAgICAgICAgICAgIDx1bCBjbGFzcz0iRm9vdGVyLW1haW5MaW5rcyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgIGhyZWY9Imh0dHBzOi8vZnIuZm9uY2lhLmNvbS9hY2hhdCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgQWNoZXRlciB1biBiaWVuCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSAgaHJlZj0iL2ZhaXJlLWdlcmVyLW1hLWxvY2F0aW9uLXBhci1mb25jaWEiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEZhaXJlIGfDqXJlciBtYSBsb2NhdGlvbgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgIGhyZWY9Imh0dHBzOi8vZnIuZm9uY2lhLmNvbS9lc3RpbWVyLXNvbi1iaWVuIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBFc3RpbWF0aW9uIGJpZW4gaW1tb2JpbGllcgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgIGhyZWY9Ii9sLWludmVzdGlzc2VtZW50LWltbW9iaWxpZXIiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEludmVzdGlyCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSAgaHJlZj0iL3ZvdHJlLWFjaGF0LWRhbnMtbC1pbW1vYmlsaWVyLW5ldWYtYXZlYy1mb25jaWEiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEFjaGF0IGltbW9iaWxpZXIgbmV1ZiAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3VsPgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iRm9vdGVyLWNvbCBGb290ZXItY29sLS1yaWdodCI+CiAgICAgICAgICAgICAgICA8dWwgY2xhc3M9IkZvb3Rlci1tYWluTGlua3MiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhICB0YXJnZXQ9Il9ibGFuayIgIGhyZWY9Imh0dHBzOi8vZnIuZm9uY2lhLmNvbS9sb2NhdGlvbiI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgTG91ZXIgdW4gYmllbgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgIGhyZWY9Ii9mYWlyZS1nZXJlci11bmUtY29wcm9wcmlldGUiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEZhaXJlIGfDqXJlciB1bmUgY29wcm9wcmnDqXTDqQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgIGhyZWY9Imh0dHBzOi8vZnIuZm9uY2lhLmNvbS9lc3RpbWF0aW9uLWxveWVyIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBFc3RpbWF0aW9uIGxveWVyCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSAgaHJlZj0iL2xvZ2luIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBNeUZvbmNpYQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgIGhyZWY9Imh0dHBzOi8vZnIuZm9uY2lhLmNvbS9hY3R1YWxpdGVzLWVuLXBlcmlvZGUtZGUtY29uZmluZW1lbnQjZmFxYWN0dWFsaXRlcyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgRkFRCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC91bD4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICA8L2Rpdj4KCiAgICA8ZGl2IGNsYXNzPSJGb290ZXItcm93IEZvb3Rlci1yb3ctLWlkZW50aXR5IEZvb3Rlci1yb3ctLWlkZW50aXR5LXJlZiI+CiAgICAgICAgPGRpdiBjbGFzcz0iRm9vdGVyLTJwYXJ0Ij4KICAgICAgICAgICAgPHAgY2xhc3M9IkZvb3Rlci1wYXJ0MSBGb290ZXItcGFydDEtLWxvZ28iPgogICAgICAgICAgICAgICAgPGltZyB3aWR0aD0iMTU0IiBoZWlnaHQ9IjQzIiBzcmM9Imh0dHBzOi8vcGhvdG9zLmZvbmNpYS5uZXQvaW1hZ2VzL0ZvbmNpYV9sb2dvdl8zMDhfODYucG5nIiBhbHQ9IkZvbmNpYSI+CiAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgPHVsIGNsYXNzPSJGb290ZXItcGFydDIgRm9vdGVyLXBhcnQyLS1saW5rcyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgIDxhICAgICAgICAgICAgICAgICAgICAgICAgICAgICBocmVmPSIvbWVudGlvbnMtbGVnYWxlcyIKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtYmVoYXQ9ImxpbmstTWVudGlvbnNfbMOpZ2FsZXMiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgTWVudGlvbnMgbMOpZ2FsZXMKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICA8YSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaHJlZj0iaHR0cHM6Ly9mci5mb25jaWEuY29tL3BsYW4tZHUtc2l0ZSIKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtYmVoYXQ9ImxpbmstUGxhbl9kdV9zaXRlIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFBsYW4gZHUgc2l0ZQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgIDxhICAgICAgICAgICAgICAgICAgICAgICAgICAgICBocmVmPSIvI2ZvbmNpYV9jb25zZW50ZW1lbnRzIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1iZWhhdD0ibGluay1HZXN0aW9uX2Rlc19jb29raWVzIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEdlc3Rpb24gZGVzIGNvb2tpZXMKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICA8YSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaHJlZj0iL2NoYXJ0ZS1kZS1wcm90ZWN0aW9uLWRlcy1kb25uZWVzIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1iZWhhdD0ibGluay1DaGFydGVfZGVfcHJvdGVjdGlvbl9kZXNfZG9ubsOpZXNfIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIENoYXJ0ZSBkZSBwcm90ZWN0aW9uIGRlcyBkb25uw6llcyAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICA8YSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaHJlZj0iL25vdHJlLXByZW9jY3VwYXRpb24tbGEtc2VjdXJpdGUtZGUtdm9zLWRvbm5lZXMiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkYXRhLWJlaGF0PSJsaW5rLVPDqWN1cml0w6lfSW5mb3JtYXRpcXVlIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFPDqWN1cml0w6kgSW5mb3JtYXRpcXVlCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgPGEgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhyZWY9Ii9zZXJ2aWNlcyIKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtYmVoYXQ9ImxpbmstU2VydmljZXMiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgU2VydmljZXMKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICA8YSAgdGFyZ2V0PSJfYmxhbmsiICAgICAgICAgICAgICAgICAgICAgICAgICAgICBocmVmPSJodHRwOi8vcHJlc3Nyb29tLmZvbmNpYS5jb20vIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1iZWhhdD0ibGluay1Fc3BhY2VfUHJlc3NlIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEVzcGFjZSBQcmVzc2UKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICA8YSAgdGFyZ2V0PSJfYmxhbmsiICAgICAgICAgICAgICAgICAgICAgICAgICAgICBocmVmPSJodHRwOi8vZm9uY2lhLXJlY3J1dGUudGFsZW50LXNvZnQuY29tL2FjY3VlaWwuYXNweCIKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtYmVoYXQ9ImxpbmstTm9zX29mZnJlc19k4oCZZW1wbG9pIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIE5vcyBvZmZyZXMgZOKAmWVtcGxvaQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgIDxhICAgICAgICAgICAgICAgICAgICAgICAgICAgICBocmVmPSIvYWNoYXQvYXZpcy1jbGllbnRzIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1iZWhhdD0ibGluay1BdmlzX2NsaWVudHMiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgQXZpcyBjbGllbnRzCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdWw+CiAgICAgICAgPC9kaXY+CiAgICA8L2Rpdj4KCiAgICA8ZGl2IGNsYXNzPSJGb290ZXItcm93IEZvb3Rlci1yb3ctLWVuZCI+CiAgICAgICAgPGRpdiBjbGFzcz0iRm9vdGVyLTJwYXJ0Ij4KICAgICAgICAgICAgPHAgY2xhc3M9IkZvb3Rlci1wYXJ0MiBGb290ZXItcGFydDItLWNvcHkiPgogICAgICAgICAgICAgICAgJmNvcHk7MjAyMCBGb25jaWEgR3JvdXBlCiAgICAgICAgICAgIDwvcD4KICAgICAgICA8L2Rpdj4KICAgIDwvZGl2PgoKPC9mb290ZXI+CjwvZGl2PjwhLS1Cb2R5V3JhcHBlci0tPgoKICAgIDxzY3JpcHQgc3JjPSIvY29tcGlsZWQvY29tbW9uLmpzP3ZlcnNpb249MTU4ODA5NzU1OSI+PC9zY3JpcHQ+CjxzY3JpcHQ+CiAgICBmb25jaWEuc2Vzc2lvbnMuaW5pdCg5MDAwMDAsIDE4MDAwMCk7Cjwvc2NyaXB0PgoKPCEtLVtpZiBsdGUgSUUgOV0+PHNjcmlwdCBzcmM9Ii9jb21waWxlZC9zY3JpcHRzLWllOS5qcz92ZXJzaW9uPTE1ODgwOTc1NTkiPjwvc2NyaXB0PjwhW2VuZGlmXS0tPgoKCiAgICAKPC9ib2R5Pgo8L2h0bWw+Cg==
    http_version: null
  recorded_at: Thu, 28 May 2020 15:38:06 GMT
- request:
    method: get
    uri: https://fr.foncia.com/achat/paris-75010/appartement/1354246.htm
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Wed, 27 May 2020 17:16:41 GMT
      Cache-Control:
      - public, s-maxage=31536000
      Content-Type:
      - text/html; charset=UTF-8
      Vary:
      - Accept-Encoding,Origin
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: null
  recorded_at: Thu, 28 May 2020 15:38:06 GMT
recorded_with: VCR 5.1.0
