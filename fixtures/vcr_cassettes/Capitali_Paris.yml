---
http_interactions:
- request:
    method: get
    uri: http://www.capitali-paris.com/catalog/advanced_search_result.php?C_27=1&C_27_REPLACE=1&C_27_search=EGAL&C_27_type=UNIQUE&C_28=Vente&C_28_search=EGAL&C_28_type=UNIQUE&C_30_MAX=&C_30_MIN=0&C_30_search=COMPRIS&C_30_type=NUMBER&C_34_MIN=&C_34_search=SUPERIEUR&C_34_type=NUMBER&C_65=Paris&C_65_REPLACE=Paris&C_65_search=CONTIENT&C_65_type=TEXT&action=update_search&page=1&search_id=1664043544559140&sort=0
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Wed, 15 Apr 2020 15:38:59 GMT
      Server:
      - Apache
      Set-Cookie:
      - C_65_cookie=Paris
      - MOLSESSION=S1265|Xpcql|Xpcql; path=/
      - ac3_sessionId=d93nsnuqi8qrfh77mms4btvkt1; path=/; domain=www.capitali-paris.com
      - last_search=1664043544559140; expires=Sat, 25-Apr-2020 15:38:59 GMT; Max-Age=864000;
        path=/
      Expires:
      - Thu, 19 Nov 1981 08:52:00 GMT
      Cache-Control:
      - no-store, no-cache, must-revalidate, post-check=0, pre-check=0, public
      Pragma:
      - no-cache
      Vary:
      - Accept-Encoding
      Content-Length:
      - '11466'
      Content-Type:
      - text/html; charset=iso-8859-1
      Strict-Transport-Security:
      - max-age=63072000; includeSubDomains; preload;
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: null
  recorded_at: Wed, 15 Apr 2020 15:38:59 GMT
- request:
    method: get
    uri: http://www.capitali-paris.com/fiches/3-33-27_16540041/passage-de-clichy.html?offset=0&page=1&search_id=1664043544559140&sort=0
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Wed, 15 Apr 2020 15:38:59 GMT
      Server:
      - Apache
      Set-Cookie:
      - MOLSESSION=S1566|Xpcql|Xpcql; path=/
      - ac3_sessionId=kgo2fps5uo2f936ks3qpd8ra12; path=/; domain=www.capitali-paris.com
      Expires:
      - Thu, 19 Nov 1981 08:52:00 GMT
      Cache-Control:
      - no-store, no-cache, must-revalidate, post-check=0, pre-check=0, public
      Pragma:
      - no-cache
      Vary:
      - Accept-Encoding
      Content-Length:
      - '14860'
      Content-Type:
      - text/html; charset=iso-8859-1
      Strict-Transport-Security:
      - max-age=63072000; includeSubDomains; preload;
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: null
  recorded_at: Wed, 15 Apr 2020 15:38:59 GMT
recorded_with: VCR 5.1.0
