---
http_interactions:
- request:
    method: get
    uri: http://www.villagebleu.com/recherche,incl_recherche_mobilefirst_ajax.htm?annlistepg=1&ci=750056&idqfix=1&idtt=2&idtypebien=1&lang=fr&tri=d_dt_crea
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Cache-Control:
      - private
      Content-Type:
      - text/html; charset=utf-8
      Server:
      - Microsoft-IIS/10.0
      X-Aspnet-Version:
      - 4.0.30319
      X-S:
      - PRD-IIS-ID3X-04
      Cache:
      - max-age=10
      Set-Cookie:
      - ASP.NET_SessionId=zvt41hwceyy2kj4brq3fiyc5; path=/; HttpOnly; SameSite=Lax
      - dtCookie=v_4_srv_1_sn_90E0E8141C9DF4AE8AF11282CC02FD5A_perc_100000_ol_0_mul_1;
        Path=/; Domain=.villagebleu.com
      X-Powered-By:
      - ASP.NET
      Access-Control-Allow-Origin:
      - "*"
      X-Oneagent-Js-Injection:
      - 'true'
      X-Ruxit-Js-Agent:
      - 'true'
      Date:
      - Thu, 02 Apr 2020 16:27:58 GMT
      Content-Length:
      - '5441'
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        CTxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij4NCiAgICAgICAgdmFyIHR5cGVMb2NhbGl0ZSA9ICIiOw0KCQl2YXIgbGllbkFsZXJ0ZT0gJ2h0dHA6Ly93d3cudmlsbGFnZWJsZXUuY29tL3JlY2hlcmNoZSxpbmNsX3JlY2hlcmNoZV9tb2JpbGVmaXJzdF9hamF4Lmh0bSc7DQoJCXZhciBtYXhwYWdlID0gJyc7DQoJCXZhciBidG5hY3Rpb24gPSAnY2hvaXgtc2VsZWN0aW9uLXJlZmluZSc7DQoJCXZhciBidG5uZXV0cmUgPSAnY2hvaXgtbmV1dHJlLXJlZmluZSc7DQoJCXZhciBwcmVzZGVmYXVsdCA9ICdtb2JpbGVmaXJzdCc7DQoJCXZhciBweGJ0dz0nJzsNCgk8L3NjcmlwdD4NCjxkaXYgaWQ9InJlY2hlcmNoZS1yZXN1bHRhdHMtbGlzdGluZy1jb250ZW50Ij4NCiAgICA8ZGl2IGNsYXNzPSJyb3ctZmx1aWQgbWFyZ2luLWJvdHRvbS0xMCI+DQogICAgICAgICAgICA8ZGl2IGNsYXNzPSJzcGFuMTIiPg0KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Im1hcmdpbi1ib3R0b20tNSI+DQogICAgICAgIDxzcGFuIGNsYXNzPSJyZW1vdmUtZmlsdGVyIiBkYXRhLXFyeT0iY2kiPkxvY2FsaXTDqTxpIGNsYXNzPSJzbWFsbGVzdCBnZW5lcmFsIHR5cG9pY29uLXJlbW92ZSBtYXJnaW4tbGVmdC01Ij48L2k+PC9zcGFuPg0KICAgICAgICA8c3BhbiBjbGFzcz0icmVtb3ZlLWZpbHRlciIgZGF0YS1xcnk9ImlkdHlwZWJpZW4iPkFwcGFydGVtZW50PGkgY2xhc3M9InNtYWxsZXN0IGdlbmVyYWwgdHlwb2ljb24tcmVtb3ZlIG1hcmdpbi1sZWZ0LTUiPjwvaT48L3NwYW4+DQo8L2Rpdj4NCiAgICAgICAgICAgIDwvZGl2Pg0KICAgIDwvZGl2Pg0KICAgIDxkaXYgaWQ9InJlY2hlcmNoZS1yZXN1bHRhdHMtbGlzdGluZyI+DQogICAgICAgIDxkaXYgY2xhc3M9ImFubm9uY2Utcm93IGFubm9uY2Utcm93LTIiPg0KPGRpdiBjbGFzcz0iYW5ub25jZSIgaWQ9ImFubm9uY2UzODE5OSI+DQogICAgICAgIDxkaXYgY2xhc3M9ImJvdXRvbi1ham91dGVyLXNlbGVjdGlvbi1kZXRhaWwiIGRhdGEtaWRhbm5vbmNlPSIzODE5OSIgZGF0YS1pZHB1YmxpY2F0aW9uPSI1NTY5ODIiPg0KICAgICAgICAgICAgPGkgY2xhc3M9Im1mLWljb24tc3RhciI+PC9pPg0KICAgICAgICA8L2Rpdj4NCiAgICA8YSBocmVmPSJodHRwOi8vd3d3LnZpbGxhZ2VibGV1LmNvbS9hbm5vbmNlcy9hY2hhdC9hcHBhcnRlbWVudC9wYXJpcy0xN2VtZS03NS8zODE5OS5odG0iIHRpdGxlPSJWZW50ZSBhcHBhcnRlbWVudCBQQVJJUyI+DQogICAgICAgIDxkaXYgY2xhc3M9ImFubm9uY2UtaW1nIiBzdHlsZT0iYmFja2dyb3VuZC1pbWFnZTogdXJsKGh0dHBzOi8vcmVzLmNsb3VkaW5hcnkuY29tL2RyYWZnaTlmcC9pbWFnZS91cGxvYWQvY19maWxsLGhfNjAwLHdfODAwL3YxNTg0MjMwNDAwL2Fubm9uY2VzLzgzMzcvMzgxOTkvMzYxMTI0OTdhLmpwZyk7Ij4NCiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iYW5ub25jZS10YWdzIj4NCiAgICAgICAgPGRpdiBjbGFzcz0iYW5ub25jZS10YWcgYW5ub25jZS10YWctbmV3Ij4NCiAgICAgICAgICAgIE5vdXZlYXUNCiAgICAgICAgPC9kaXY+DQo8L2Rpdj4NCiAgICAgICAgPC9kaXY+DQogICAgICAgIDxkaXYgY2xhc3M9ImFubm9uY2UtY29udGVudCI+DQogICAgICAgICAgICA8ZGl2IGNsYXNzPSJhbm5vbmNlLWNvbnRlbnQtbGVmdCI+DQogICAgICAgICAgICAgICAgPGgzIGNsYXNzPSJhbm5vbmNlLXR5cGUiPg0KICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iYW5ub25jZS10eXBldHJhbnNhY3Rpb24iPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIFZlbnRlDQogICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4NCiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImFubm9uY2UtdHlwZWJpZW4iPg0KICAgICAgICAgICAgICAgIEFwcGFydGVtZW50DQo8L3NwYW4+DQogICAgICAgICAgICAgICAgPC9oMz4NCiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJhbm5vbmNlLXNwZWNzIj4NCiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJhbm5vbmNlLXN1cmZhY2UiPjE1OCw4IG3Csg0KPC9zcGFuPg0KICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImFubm9uY2UtcGllY2VzIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLQ0KCTQNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwacOoY2VzDQogICAgICAgICAgICAgICAgICAgICAgICA8L3NwYW4+DQogICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgPGg0IGNsYXNzPSJhbm5vbmNlLXZpbGxlIj4NCiAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9Im1mLWljb24tbG9jYWxpc2F0aW9uIHR5cG8tYWN0aW9uIj48L2k+Jm5ic3A7DQogICAgUGFyaXMNCiAgICAgICAgICAgICAgICA8L2g0Pg0KICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICA8ZGl2IGNsYXNzPSJhbm5vbmNlLWNvbnRlbnQtcmlnaHQiPg0KICAgICAgICAgICAgPGRpdiBjbGFzcz0iYW5ub25jZS1wcml4Ij4NCiAgICAgICAgICAgICAgICAywqAyNjTCoDAwMCA8c3BhbiBjbGFzcz0ic21hbGxlciB1cHBlcmNhc2UiPuKCrDwvc3Bhbj4NCiAgICAgICAgICAgIDwvZGl2Pg0KICAgIDxkaXYgY2xhc3M9ImFubm9uY2UtcmVmIj4NCiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJhbm5vbmNlLXJlZi1sZ2QiPlLDqWYuIDwvc3Bhbj4NCiAgICAgICAgMTU2DQogICAgPC9kaXY+DQogICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgPC9kaXY+DQogICAgPC9hPg0KPC9kaXY+DQo8ZGl2IGNsYXNzPSJhbm5vbmNlIiBpZD0iYW5ub25jZTIyNTc3Ij4NCiAgICAgICAgPGRpdiBjbGFzcz0iYm91dG9uLWFqb3V0ZXItc2VsZWN0aW9uLWRldGFpbCIgZGF0YS1pZGFubm9uY2U9IjIyNTc3IiBkYXRhLWlkcHVibGljYXRpb249IjEwMDYwMTkiPg0KICAgICAgICAgICAgPGkgY2xhc3M9Im1mLWljb24tc3RhciI+PC9pPg0KICAgICAgICA8L2Rpdj4NCiAgICA8YSBocmVmPSJodHRwOi8vd3d3LnZpbGxhZ2VibGV1LmNvbS9hbm5vbmNlcy9hY2hhdC9hcHBhcnRlbWVudC9wYXJpcy0xMWVtZS03NS8yMjU3Ny5odG0iIHRpdGxlPSJWZW50ZSBhcHBhcnRlbWVudCBQQVJJUyI+DQogICAgICAgIDxkaXYgY2xhc3M9ImFubm9uY2UtaW1nIiBzdHlsZT0iYmFja2dyb3VuZC1pbWFnZTogdXJsKGh0dHBzOi8vcmVzLmNsb3VkaW5hcnkuY29tL2RyYWZnaTlmcC9pbWFnZS91cGxvYWQvY19maWxsLGhfNjAwLHdfODAwL3YxL2Fubm9uY2VzLzQwNzYwNi8yMjU3Ny8zMzY5NzQzNmEuanBnKTsiPg0KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJhbm5vbmNlLXRhZ3MiPg0KPC9kaXY+DQogICAgICAgIDwvZGl2Pg0KICAgICAgICA8ZGl2IGNsYXNzPSJhbm5vbmNlLWNvbnRlbnQiPg0KICAgICAgICAgICAgPGRpdiBjbGFzcz0iYW5ub25jZS1jb250ZW50LWxlZnQiPg0KICAgICAgICAgICAgICAgIDxoMyBjbGFzcz0iYW5ub25jZS10eXBlIj4NCiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImFubm9uY2UtdHlwZXRyYW5zYWN0aW9uIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBWZW50ZQ0KICAgICAgICAgICAgICAgICAgICA8L3NwYW4+DQogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJhbm5vbmNlLXR5cGViaWVuIj4NCiAgICAgICAgICAgICAgICBBcHBhcnRlbWVudA0KPC9zcGFuPg0KICAgICAgICAgICAgICAgIDwvaDM+DQogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iYW5ub25jZS1zcGVjcyI+DQogICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iYW5ub25jZS1zdXJmYWNlIj4yNywzIG3Csg0KPC9zcGFuPg0KICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImFubm9uY2UtcGllY2VzIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLQ0KCTINCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwacOoY2VzDQogICAgICAgICAgICAgICAgICAgICAgICA8L3NwYW4+DQogICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgPGg0IGNsYXNzPSJhbm5vbmNlLXZpbGxlIj4NCiAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9Im1mLWljb24tbG9jYWxpc2F0aW9uIHR5cG8tYWN0aW9uIj48L2k+Jm5ic3A7DQogICAgUGFyaXMNCiAgICAgICAgICAgICAgICA8L2g0Pg0KICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICA8ZGl2IGNsYXNzPSJhbm5vbmNlLWNvbnRlbnQtcmlnaHQiPg0KICAgICAgICAgICAgPGRpdiBjbGFzcz0iYW5ub25jZS1wcml4Ij4NCiAgICAgICAgICAgICAgICAyNjXCoDAwMCA8c3BhbiBjbGFzcz0ic21hbGxlciB1cHBlcmNhc2UiPuKCrDwvc3Bhbj4NCiAgICAgICAgICAgIDwvZGl2Pg0KICAgIDxkaXYgY2xhc3M9ImFubm9uY2UtcmVmIj4NCiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJhbm5vbmNlLXJlZi1sZ2QiPlLDqWYuIDwvc3Bhbj4NCiAgICAgICAgMTENCiAgICA8L2Rpdj4NCiAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICA8L2Rpdj4NCiAgICA8L2E+DQo8L2Rpdj4NCiAgICAgICAgPC9kaXY+DQoJPC9kaXY+DQo8L2Rpdj4NCiAgICA8IS0tTE9BREVSLS0+DQogICAgPGRpdiBjbGFzcz0ibGF5ZXIgZGlzcGxheS1ub25lIGZpeGUgdG9wIHJpZ2h0IGxlZnQgYm90dG9tIHJvdy1mbHVpZCBoZWlnaHQtMTAwLXBvdXJjZW50Ij4NCiAgICAJPGRpdiBjbGFzcz0iejI1IHNwYW4xMiBtYXJnaW4tdG9wLTIwMCI+DQogICAgCQk8ZGl2IGNsYXNzPSJyb3ctZmx1aWQiPg0KICAgIAkJCTxkaXYgY2xhc3M9InNwYW40Ij48L2Rpdj4NCiAgICAJCQk8ZGl2IGNsYXNzPSIgc3BhbjQgcGFnaW5hdGlvbi1jZW50ZXJlZCBwYWRkaW5nLTEwIG1hcmdpbi10b3AtMTAgYm94LXNoYWRvdyBiZy13aGl0ZSBwYWRkaW5nLTEwIG1hcmdpbi0xMCByYWRpdXMtNSBib3JkZXItc29saWQtd2hpdGUtMiI+DQogICAgCQkJCTxpbWcgc3JjPSIvei93ZWJhZ2VuY3kvc2xhZ2VuY2VfWF9WNS9pbWFnZXMvY2FydG8vYWpheC1sb2FkZXIuZ2lmIiBhbHQ9ImxvYWRlciIgLz4NCiAgICAJCQkJPHAgY2xhc3M9InR5cG8tYmxhY2sgcGFnaW5hdGlvbi1jZW50ZXJlZCI+DQogICAgCQkJCQlWZXVpbGxleiBwYXRpZW50ZXINCiAgICAJCQkJPC9wPg0KICAgIAkJCTwvZGl2Pg0KICAgIAkJPC9kaXY+DQogICAgCTwvZGl2Pg0KICAgIAk8ZGl2IGNsYXNzPSJhYnNvbHV0ZSBiZy1waWN0dXJlIG9wYWNpdHktNyB0b3AgcmlnaHQgbGVmdCBib3R0b20gei0yNSIgPjwvZGl2Pg0KICAgIDwvZGl2Pg0KICAgIDwhLS0gRklOTE9BREVSLS0+DQo8IS0tIElEM3ggdjUuMC43Mzk1LjQzMDkwICgwKSAtIFBSRC1JSVMtSUQzWC0wNCAtIDAwLjk2Ny4xMzMgLSBmdWxsIC0gMDIvMDQvMjAyMCAxODoyNzo1OCAtIHJlY2hlcmNoZVxpbmNsX3JlY2hlcmNoZV9tb2JpbGVmaXJzdF9hamF4Lmh0bSAtLT4=
    http_version: null
  recorded_at: Thu, 02 Apr 2020 16:27:58 GMT
- request:
    method: get
    uri: http://www.villagebleu.com/annonces/achat/appartement/paris-17eme-75/38199.htm
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Cache-Control:
      - private
      Content-Type:
      - text/html; charset=utf-8
      Vary:
      - User-Agent
      Server:
      - Microsoft-IIS/10.0
      X-Aspnet-Version:
      - 4.0.30319
      X-S:
      - PRD-IIS-ID3X-04
      - PRD-IIS-ID3X-04
      Cache:
      - max-age=10
      - max-age=10
      Set-Cookie:
      - ASP.NET_SessionId=4j3y1nqppxpdsurdqykywhll; path=/; HttpOnly; SameSite=Lax
      - dtCookie=v_4_srv_1_sn_F684294DA262FFC8937ED28AA51AF7C1_perc_100000_ol_0_mul_1;
        Path=/; Domain=.villagebleu.com
      X-Powered-By:
      - ASP.NET
      Access-Control-Allow-Origin:
      - "*"
      X-Oneagent-Js-Injection:
      - 'true'
      X-Ruxit-Js-Agent:
      - 'true'
      Date:
      - Thu, 02 Apr 2020 16:28:01 GMT
      Content-Length:
      - '48503'
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: null
  recorded_at: Thu, 02 Apr 2020 16:28:02 GMT
- request:
    method: get
    uri: http://www.villagebleu.com/annonces/achat/appartement/paris-11eme-75/22577.htm
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Cache-Control:
      - private
      Content-Type:
      - text/html; charset=utf-8
      Vary:
      - User-Agent
      Server:
      - Microsoft-IIS/10.0
      X-Aspnet-Version:
      - 4.0.30319
      X-S:
      - PRD-IIS-ID3X-04
      - PRD-IIS-ID3X-04
      Cache:
      - max-age=10
      - max-age=10
      Set-Cookie:
      - ASP.NET_SessionId=vdxpozezt5pyrhd1cksks4hj; path=/; HttpOnly; SameSite=Lax
      - dtCookie=v_4_srv_3_sn_765EDACED8966F4984B9D067CDFACB8F_perc_100000_ol_0_mul_1;
        Path=/; Domain=.villagebleu.com
      X-Powered-By:
      - ASP.NET
      Access-Control-Allow-Origin:
      - "*"
      X-Oneagent-Js-Injection:
      - 'true'
      X-Ruxit-Js-Agent:
      - 'true'
      Date:
      - Thu, 02 Apr 2020 16:28:05 GMT
      Content-Length:
      - '40424'
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: null
  recorded_at: Thu, 02 Apr 2020 16:28:06 GMT
recorded_with: VCR 5.1.0
