---
http_interactions:
- request:
    method: get
    uri: https://www.century21.fr/annonces/achat-maison-appartement/v-paris/s-0-/st-0-/b-0-/tri-date-desc/page-1/
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Tue, 31 Mar 2020 16:38:33 GMT
      Content-Type:
      - text/html; charset=utf-8
      Content-Length:
      - '27098'
      Server:
      - Apache
      Cache-Control:
      - max-age=300
      Set-Cookie:
      - num_par_page=30; Path=/
      - tri=date|desc; Path=/
      Vary:
      - Accept-Encoding,User-Agent
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        <!DOCTYPE html>
<!--[if lt IE 7 ]> <html lang="fr" class="no-js ie6"> <![endif]--><!--[if IE 7 ]><html lang="fr" class="no-js ie7"> <![endif]--><!--[if IE 8 ]><html lang="fr" class="no-js ie8"> <![endif]--><!--[if IE 9 ]>    <html lang="fr" class="no-js ie9"> <![endif]--><!--[if (gt IE 9)|!(IE)]><!--><html lang="fr" class="no-js"><!--<![endif]-->
  <head prefix="og: http://ogp.me/ns# fb: http://ogp.me/ns/fb# article: http://ogp.me/ns/article#">
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <!--[if lt IE 9]><script src="http://html5shim.googlecode.com/svn/trunk/html5.js"></script><![endif]-->
    <meta charset="utf-8" />
    
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1" /><script type="text/javascript">(window.NREUM||(NREUM={})).loader_config={licenseKey:"57291cc109",applicationID:"24270498"};window.NREUM||(NREUM={}),__nr_require=function(e,n,t){function r(t){if(!n[t]){var i=n[t]={exports:{}};e[t][0].call(i.exports,function(n){var i=e[t][1][n];return r(i||n)},i,i.exports)}return n[t].exports}if("function"==typeof __nr_require)return __nr_require;for(var i=0;i<t.length;i++)r(t[i]);return r}({1:[function(e,n,t){function r(){}function i(e,n,t){return function(){return o(e,[u.now()].concat(f(arguments)),n?null:this,t),n?void 0:this}}var o=e("handle"),a=e(4),f=e(5),c=e("ee").get("tracer"),u=e("loader"),s=NREUM;"undefined"==typeof window.newrelic&&(newrelic=s);var p=["setPageViewName","setCustomAttribute","setErrorHandler","finished","addToTrace","inlineHit","addRelease"],l="api-",d=l+"ixn-";a(p,function(e,n){s[n]=i(l+n,!0,"api")}),s.addPageAction=i(l+"addPageAction",!0),s.setCurrentRouteName=i(l+"routeName",!0),n.exports=newrelic,s.interaction=function(){return(new r).get()};var m=r.prototype={createTracer:function(e,n){var t={},r=this,i="function"==typeof n;return o(d+"tracer",[u.now(),e,t],r),function(){if(c.emit((i?"":"no-")+"fn-start",[u.now(),r,i],t),i)try{return n.apply(this,arguments)}catch(e){throw c.emit("fn-err",[arguments,this,e],t),e}finally{c.emit("fn-end",[u.now()],t)}}}};a("actionText,setName,setAttribute,save,ignore,onEnd,getContext,end,get".split(","),function(e,n){m[n]=i(d+n)}),newrelic.noticeError=function(e,n){"string"==typeof e&&(e=new Error(e)),o("err",[e,u.now(),!1,n])}},{}],2:[function(e,n,t){function r(e,n){var t=e.getEntries();t.forEach(function(e){"first-paint"===e.name?c("timing",["fp",Math.floor(e.startTime)]):"first-contentful-paint"===e.name&&c("timing",["fcp",Math.floor(e.startTime)])})}function i(e,n){var t=e.getEntries();t.length>0&&c("lcp",[t[t.length-1]])}function o(e){if(e instanceof s&&!l){var n,t=Math.round(e.timeStamp);n=t>1e12?Date.now()-t:u.now()-t,l=!0,c("timing",["fi",t,{type:e.type,fid:n}])}}if(!("init"in NREUM&&"page_view_timing"in NREUM.init&&"enabled"in NREUM.init.page_view_timing&&NREUM.init.page_view_timing.enabled===!1)){var a,f,c=e("handle"),u=e("loader"),s=NREUM.o.EV;if("PerformanceObserver"in window&&"function"==typeof window.PerformanceObserver){a=new PerformanceObserver(r),f=new PerformanceObserver(i);try{a.observe({entryTypes:["paint"]}),f.observe({entryTypes:["largest-contentful-paint"]})}catch(p){}}if("addEventListener"in document){var l=!1,d=["click","keydown","mousedown","pointerdown","touchstart"];d.forEach(function(e){document.addEventListener(e,o,!1)})}}},{}],3:[function(e,n,t){function r(e,n){if(!i)return!1;if(e!==i)return!1;if(!n)return!0;if(!o)return!1;for(var t=o.split("."),r=n.split("."),a=0;a<r.length;a++)if(r[a]!==t[a])return!1;return!0}var i=null,o=null,a=/Version\/(\S+)\s+Safari/;if(navigator.userAgent){var f=navigator.userAgent,c=f.match(a);c&&f.indexOf("Chrome")===-1&&f.indexOf("Chromium")===-1&&(i="Safari",o=c[1])}n.exports={agent:i,version:o,match:r}},{}],4:[function(e,n,t){function r(e,n){var t=[],r="",o=0;for(r in e)i.call(e,r)&&(t[o]=n(r,e[r]),o+=1);return t}var i=Object.prototype.hasOwnProperty;n.exports=r},{}],5:[function(e,n,t){function r(e,n,t){n||(n=0),"undefined"==typeof t&&(t=e?e.length:0);for(var r=-1,i=t-n||0,o=Array(i<0?0:i);++r<i;)o[r]=e[n+r];return o}n.exports=r},{}],6:[function(e,n,t){n.exports={exists:"undefined"!=typeof window.performance&&window.performance.timing&&"undefined"!=typeof window.performance.timing.navigationStart}},{}],ee:[function(e,n,t){function r(){}function i(e){function n(e){return e&&e instanceof r?e:e?c(e,f,o):o()}function t(t,r,i,o){if(!l.aborted||o){e&&e(t,r,i);for(var a=n(i),f=v(t),c=f.length,u=0;u<c;u++)f[u].apply(a,r);var p=s[y[t]];return p&&p.push([b,t,r,a]),a}}function d(e,n){h[e]=v(e).concat(n)}function m(e,n){var t=h[e];if(t)for(var r=0;r<t.length;r++)t[r]===n&&t.splice(r,1)}function v(e){return h[e]||[]}function g(e){return p[e]=p[e]||i(t)}function w(e,n){u(e,function(e,t){n=n||"feature",y[t]=n,n in s||(s[n]=[])})}var h={},y={},b={on:d,addEventListener:d,removeEventListener:m,emit:t,get:g,listeners:v,context:n,buffer:w,abort:a,aborted:!1};return b}function o(){return new r}function a(){(s.api||s.feature)&&(l.aborted=!0,s=l.backlog={})}var f="nr@context",c=e("gos"),u=e(4),s={},p={},l=n.exports=i();l.backlog=s},{}],gos:[function(e,n,t){function r(e,n,t){if(i.call(e,n))return e[n];var r=t();if(Object.defineProperty&&Object.keys)try{return Object.defineProperty(e,n,{value:r,writable:!0,enumerable:!1}),r}catch(o){}return e[n]=r,r}var i=Object.prototype.hasOwnProperty;n.exports=r},{}],handle:[function(e,n,t){function r(e,n,t,r){i.buffer([e],r),i.emit(e,n,t)}var i=e("ee").get("handle");n.exports=r,r.ee=i},{}],id:[function(e,n,t){function r(e){var n=typeof e;return!e||"object"!==n&&"function"!==n?-1:e===window?0:a(e,o,function(){return i++})}var i=1,o="nr@id",a=e("gos");n.exports=r},{}],loader:[function(e,n,t){function r(){if(!x++){var e=E.info=NREUM.info,n=d.getElementsByTagName("script")[0];if(setTimeout(s.abort,3e4),!(e&&e.licenseKey&&e.applicationID&&n))return s.abort();u(y,function(n,t){e[n]||(e[n]=t)}),c("mark",["onload",a()+E.offset],null,"api");var t=d.createElement("script");t.src="https://"+e.agent,n.parentNode.insertBefore(t,n)}}function i(){"complete"===d.readyState&&o()}function o(){c("mark",["domContent",a()+E.offset],null,"api")}function a(){return O.exists&&performance.now?Math.round(performance.now()):(f=Math.max((new Date).getTime(),f))-E.offset}var f=(new Date).getTime(),c=e("handle"),u=e(4),s=e("ee"),p=e(3),l=window,d=l.document,m="addEventListener",v="attachEvent",g=l.XMLHttpRequest,w=g&&g.prototype;NREUM.o={ST:setTimeout,SI:l.setImmediate,CT:clearTimeout,XHR:g,REQ:l.Request,EV:l.Event,PR:l.Promise,MO:l.MutationObserver};var h=""+location,y={beacon:"bam.nr-data.net",errorBeacon:"bam.nr-data.net",agent:"js-agent.newrelic.com/nr-1167.min.js"},b=g&&w&&w[m]&&!/CriOS/.test(navigator.userAgent),E=n.exports={offset:f,now:a,origin:h,features:{},xhrWrappable:b,userAgent:p};e(1),e(2),d[m]?(d[m]("DOMContentLoaded",o,!1),l[m]("load",r,!1)):(d[v]("onreadystatechange",i),l[v]("onload",r)),c("mark",["firstbyte",f],null,"api");var x=0,O=e(6)},{}],"wrap-function":[function(e,n,t){function r(e){return!(e&&e instanceof Function&&e.apply&&!e[a])}var i=e("ee"),o=e(5),a="nr@original",f=Object.prototype.hasOwnProperty,c=!1;n.exports=function(e,n){function t(e,n,t,i){function nrWrapper(){var r,a,f,c;try{a=this,r=o(arguments),f="function"==typeof t?t(r,a):t||{}}catch(u){l([u,"",[r,a,i],f])}s(n+"start",[r,a,i],f);try{return c=e.apply(a,r)}catch(p){throw s(n+"err",[r,a,p],f),p}finally{s(n+"end",[r,a,c],f)}}return r(e)?e:(n||(n=""),nrWrapper[a]=e,p(e,nrWrapper),nrWrapper)}function u(e,n,i,o){i||(i="");var a,f,c,u="-"===i.charAt(0);for(c=0;c<n.length;c++)f=n[c],a=e[f],r(a)||(e[f]=t(a,u?f+i:i,o,f))}function s(t,r,i){if(!c||n){var o=c;c=!0;try{e.emit(t,r,i,n)}catch(a){l([a,t,r,i])}c=o}}function p(e,n){if(Object.defineProperty&&Object.keys)try{var t=Object.keys(e);return t.forEach(function(t){Object.defineProperty(n,t,{get:function(){return e[t]},set:function(n){return e[t]=n,n}})}),n}catch(r){l([r])}for(var i in e)f.call(e,i)&&(n[i]=e[i]);return n}function l(n){try{e.emit("internal-error",n)}catch(t){}}return e||(e=i),t.inPlace=u,t.flag=a,t}},{}]},{},["loader"]);</script><script type="text/javascript">window.NREUM||(NREUM={});NREUM.info={"beacon":"bam.nr-data.net","queueTime":0,"licenseKey":"57291cc109","agent":"","transactionName":"ZAZbZxFSC0FQWxULVl1Mf0YNUBFbXlZOBlNSDV5cPEMMX1RWFQdaW01PWgZEFl1TUgQBTUBZe1oGXSlbQkw3C1xE","applicationID":"24270498","errorBeacon":"bam.nr-data.net","applicationTime":195}</script>
    <meta name="verify-v1" content="vaH6Ww2qTnhkQOiN1kEHkZbdVNn0U5jLvWPO/+NwOIQ=" />
    
  
      <meta name="ROBOTS" content="index, follow" />
      <meta name="googlebot" content="index, follow" />
  


  
    
      
      
        <link rel="next" href="../page-2/" />
      
    
  

    
    <title>
  
      Vente maison appartement  à PARIS (75) | CENTURY 21
  
</title>
    <meta name="description" content="Consultez nos 243 biens à vendre à PARIS. Achetez votre  dans les meilleures conditions avec l’expertise des agences CENTURY 21" />
    <meta name="keywords" content="Agences Immobilières, Immobilier, Achat, Vente, Location, Appartement, Maison, Parking, Terrain, Agence, Taux, Prix, Petites annonces">
    
        <meta property="twitter:account_id" content="1510100551" />
        <meta property="fb:admins" content="741613563" />
    

	<script type="text/javascript">
        function redirect_etendu()
        {
            var url = String(document.location);

            if (url.indexOf('#etendu#') != -1)
            {
                window.location.assign("/")
            }
        }
        redirect_etendu();
    </script>

    
    <meta property="og:title" content="Agences immobilières CENTURY 21 : Immobilier, achat, vente, location et activités de gestion immobilière | CENTURY 21" />
    <meta property="og:type" content="website" />
    <meta property="og:url" content="https://www.century21.fr/annonces/achat-maison-appartement/v-paris/s-0-/st-0-/b-0-/tri-date-desc/page-1/" />
    <meta property="og:site_name" content="www.century21.fr" />
    <meta property="og:image" content="https://www.century21.fr/theme/generic/css/images/logo_century21-fb.png"/>

    <meta name="twitter:card" content="summary" />
    <meta name="twitter:site" content="www.century21.fr"/>
    <meta name="twitter:creator" content="@Century21France"/>
    <meta  name="twitter:image" content="https://www.century21.fr/theme/generic/css/images/logo_century21-fb.png"/>

    

    <link rel="canonical" href="https://www.century21.fr/annonces/achat-maison-appartement/v-paris/s-0-/st-0-/b-0-/page-1/" />
    <!--[if gt IE 5 ]><link href="/theme/generic/css/styles-ie.css" rel="stylesheet" /><![endif]-->
    <!--[if IE 6 ]><link href="/theme/generic/css/styles-ie6.css" rel="stylesheet" /><![endif]-->
    <!--[if IE 7 ]><link href="/theme/generic/css/styles-ie7.css" rel="stylesheet" /><![endif]-->
    <!--[if IE 8 ]><link href="/theme/generic/css/styles-ie8.css" rel="stylesheet" /><![endif]-->

    
    
    <link href="/theme/bootstrap/css/bootstrap.used.css" rel="stylesheet" />
    <link rel="stylesheet" href="/css/jquery-ui.css">
  	<link rel="stylesheet" type="text/css" href="/theme/generic/css/qualitelis.css" media="all"/>
    <link rel="stylesheet" type="text/css" href="/theme/generic/css/qualitelis-agence.css" media="all"/>
    <link rel="stylesheet" href="/theme/generic/css/font-awesome/4.3.0/css/font-awesome.min.css">
    <link rel="stylesheet" type="text/css" href="/theme/generic/js/lib/owl-carousel-v2/assets/owl.carousel.css" />
  	<link rel="stylesheet" type="text/css" href="/theme/generic/js/lib/owl-carousel-v2/assets/owl.theme.default.min.css" />
    <link rel="stylesheet" type="text/css" href="/theme/generic/css/jquery.lightbox-0.5.css" media="all"/>
    <link rel="stylesheet" type="text/css" href="/theme/generic/js/lib/fancyapps-fancyBox/source/jquery.fancybox.css" media="all"/>
    <link rel="stylesheet" type="text/css" href="/theme/generic/js/lib/rateyo/jquery.rateyo.css" media="all"/>
    <link rel="stylesheet" type="text/css" href="/theme/generic/css/styles.css" media="all"/>
    <link rel="stylesheet" type="text/css" href="/css/common.css" media="all"/>
    <link rel="stylesheet" type="text/css" href="/theme/generic/css/print.css" media="print"/>
    <link rel="stylesheet" type="text/css" href="/theme/slider/css/styles.css" media="all"/>
    <link rel="stylesheet" type="text/css" href="/theme/generic/js/lib/odometer-0.4.6/css/odometer-theme-default.css" />
    <link rel="stylesheet" href="/theme/generic/css/c-combien/launch-defil-number.css">
    <link rel="stylesheet" type="text/css" href="/theme/generic/css/style-new-c21.css" media="all"/>
    <link href="/theme/generic/css/tailwind.css" rel="stylesheet">
    
    
     
  
  <link rel="stylesheet" type="text/css" href="/theme/generic/js/lib/odometer-0.4.6/css/odometer-theme-default.css" />
  <link rel="stylesheet" href="/theme/generic/css/c-combien/launch-defil-number.css">
  <link rel="stylesheet" type="text/css" href="/theme/generic/css/styles-liste-biens.css" media="all"/>
  

    
    <script type="text/javascript">
	  var IS_MOBILE = false;
	  var is_ice = "false";
      var HTTP_STATIC = "";
      var HTTP_PROTOCOL = "https";
      var TYPE_SITE = "NATIONAL";
  	  var SITE_TYPE = "NATIONAL";
      var DEBUG = false;
      var PARTICIPE_COLLECTE = 0;
	  var dateServer = new Date();
	  var anneeServer = dateServer.getFullYear();
	  var moisServer = dateServer.getMonth()+1;
	  var moisBg = (parseInt(dateServer.getMonth()+1) <10) ? '0' + parseInt(dateServer.getMonth()+1) : dateServer.getMonth()+1;
	  var heureBg = dateServer.getHours();
      var RECAPTCHA_PUBLIC_KEY =  "6LfQV88UAAAAADg8fB8wzTXISqSepbOVVR_0AeNb";
      
	  

	  


      
		var gaProperty = 'UA-3333689-1'
      
      if (window != top) top.location.href = window.location.href ;
      
    </script>
    <!--[if IE]><link rel="shortcut icon" href="/theme/generic/css/images/favicon.ico"><![endif]-->
    <link rel="icon" href="/theme/generic/css/images/favicon-16x16.png" />
    <link rel="apple-touch-icon" href="/theme/generic/css/images/apple-touch-icon.png" />


	
    
    <script type="text/javascript" src="/theme/generic/js/lib/jquery.js"></script>
    <script type="text/javascript" src="/theme/generic/js/uid-gen.js"></script>
    <script type="text/javascript" src="/theme/generic/js/lib/jquery-ui.js"></script>
    <script type="text/javascript" src="/theme/generic/js/lib/jquery.ui.touch-punch.min.js"></script>
	<script type="text/javascript" src="/theme/generic/js/lib/jquery-cookie.js"></script>
    <script type="text/javascript" src="/theme/generic/js/lib/jquery-slider-ui.js"></script>
    <script src="/theme/generic/js/lib/fancyapps-fancyBox/source/jquery.fancybox.js"></script>
    
    <script type="text/javascript" src="/theme/generic/js/lib/jquery.placeholder.js"></script>
    <script type="text/javascript" src="/theme/generic/js/lib/jtruncate.js"></script>
    <script type="text/javascript" src="/theme/bootstrap/js/bootstrap.min.js"></script>
    <script type="text/javascript" src="/theme/generic/js/lib/jquery-loader.js"></script>

    <script type="text/javascript" src="/theme/generic/js/lib/jcarousellite_1.0.1.min.js"></script>
    <script src="/theme/generic/js/lib/owl-carousel-v2/owl.carousel.js"></script>
    <script type="text/javascript" src="/theme/generic/js/lib/jquery.lightbox-0.5.min.js"></script>
    <script type="text/javascript" src="/theme/generic/js/lib/jquery-animation-background.js"></script>
    <script type="text/javascript" src="/theme/generic/js/lib/jquery-easing.js"></script>
    <script type="text/javascript" src="/theme/generic/js/lib/jquery-boxShadow.js"></script>
    <script type="text/javascript" src="/theme/generic/js/lib/rateyo/jquery.rateyo.js"></script>
    <script type="text/javascript" src="/theme/generic/js/scripts.js"></script>
    <script type="text/javascript" src="/theme/generic/js/scripts-star-rating.js"></script>
    <script type="text/javascript" src="/js/calculette.js"></script>
    <script type="text/javascript" src="/js/dept.js"></script>
    <script src="https://www.google.com/recaptcha/api.js?render=6LfQV88UAAAAADg8fB8wzTXISqSepbOVVR_0AeNb"></script>
    <script type="text/javascript" src="/js/common.js?t=2"></script>
    <script type="text/javascript" src="/js/jquery.tokeninput.js"></script>
    
    

    
    
    
 	<script>
      $(document).ready(function(){
		  
		  var sizeListe = $("li.annonce").length;
		   if(sizeListe >= 3){
			 var idItem1 = $("li.annonce:eq(0)").find(".contentAnnonce").data("uid");
			 var idItem2 = $("li.annonce:eq(1)").find(".contentAnnonce").data("uid");
			 var idItem3 = $("li.annonce:eq(2)").find(".contentAnnonce").data("uid");

			 dataLayer.push({
				'product_liste_id1' : ''+idItem1+'',
				'product_liste_id2' : ''+idItem2+'',
				'product_liste_id3' : ''+idItem3+''
			 });
		   }
      });
    </script>
  
    <script>
      var CURRENT_LOCATION = '/annonces/achat-maison-appartement/v-paris/s-0-/st-0-/b-0-/tri-date-desc/page-1/';
      var URL_DETAIL = '/trouver_logement/detail/';
	  var type_transac = "Acheteur";
      function get_alerte_add_url() {
        return get_hash_or_pathname()+'alerte/';
      }
     $(document).ready(function(){
	   
	   if(DEBUG){
		 call_popup_boost();
	   } else {
		 if(!$.cookie("c21_popup_laterale")){
		   $.cookie("c21_popup_laterale",1,{ expires : 1, path : '/' });
		   call_popup_boost();
		 }
	   }

    });
    </script>
    
    <script src="/js/jquery.ba-hashchange.min.js"></script>
    <script src="/theme/generic/js/scripts-liste-biens.js"></script>
    
  

    <meta property="fb:admins" content="100001097395315" />
    <script>
      var ACTIVITE_CENTURA = "";
      var CACHE_POPUP_ANNONCE = {};
      var UID_BIEN = [];
      var overPopupService = 0;
      var DEV_ENV = false;

      
      

      
      function fix_articles(){
      $('.articles_cont').each(function(){

      
      if ($(this).find('.articles').length && $(this).find('.articles').html().trim() == ''){
      $(this).hide();
      }

      
      var link = $(this).find('.articles_link').attr('href');
      $(this).find('.get_articles_link').attr('href', link);
      });
      }

      $(document).ready(function() {
       /* fix_articles();*/
      });

      

      //if (!_gaq.push) _gaq.push = function () { };

		

			var _gaq = _gaq || [];
			_gaq.push(['_setAccount', 'UA-3333689-1']);
			_gaq.push(['_setDomainName', 'century21.fr']);
			_gaq.push(['_setAllowLinker', true]);
			_gaq.push(['_trackPageview']);

			(function() {
                var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
                ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
                var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
			})();


		
	
    </script>


    
	<script>
	  dataLayer =  [{
		  		

            'env_work': 'Prod',
            'env_site': 'SITE NATIONAL',
            'env_device': 'Desktop',
            'env_template': 'Generique',
            'event' : '',
            'pagename': 'Vente maison appartement  à PARIS (75) | CENTURY 21',
            'pageCategory1': '/annonces/achat-maison-appartement/v-paris/s-0-/st-0-/b-0-/tri-date-desc/page-1/',
            'pageCategory2': '',
            'pageCategory3': '',
            'visitorStatus': '',
            'type compte' : ''
           // 'ip': ''

				   
					}];


 
	</script>
    
    
    <script>
		(function(w,d,s,l,i)
		{
			w[l]=w[l]||[];
			w[l].push({'gtm.start': new Date().getTime(),event:'gtm.js'});
			var f=d.getElementsByTagName(s)[0],j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';
			j.async=true;
			j.src='https://www.googletagmanager.com/gtm.js?id='+i+dl;
			f.parentNode.insertBefore(j,f);
		})
		(window,document,'script','dataLayer','GTM-P8DRVBV');


	</script>

  

	
	<script>
    (function(h,o,t,j,a,r){
        h.hj=h.hj||function(){(h.hj.q=h.hj.q||[]).push(arguments)};
        h._hjSettings={hjid:1294600,hjsv:6};
        a=o.getElementsByTagName('head')[0];
        r=o.createElement('script');r.async=1;
        r.src=t+h._hjSettings.hjid+j+h._hjSettings.hjsv;
        a.appendChild(r);
    })(window,document,'https://static.hotjar.com/c/hotjar-','.js?sv=');
	</script>
	


	
	
  </head>

  <body id="site" class="LISTEBIEN2 relooking base-site-nat">
  	<!-- Google Tag Manager (noscript) -->
		<noscript>
			<iframe src="https://www.googletagmanager.com/ns.html?id=GTM-P8DRVBV" height="0" width="0" style="display:none;visibility:hidden"></iframe>
		</noscript>
	<!-- End Google Tag Manager (noscript) -->
  
  
  
    
    


    
       <div id="mainDeviceDetection">
          <div id="imgDeviceDetection">
              <span id="textDeviceDetection">
                Découvrez plus de 70.000 biens<br />
                dont plusieurs milliers proposés<br />
                Mandat Confiance / Exclusivité
              </span>
              <div class="contentDevice">
	              <a id="btnDeviceApplication" class="cursor" onclick="google_tag_event('landing-page-mobile,btn-telecharger-application,'+$(this).attr('href')+'');">T&Eacute;L&Eacute;CHARGER L'APPLI</a>
              </div>
              <div class="contentDevice">
              	<a id="btnToSiteDeviceDetection" class="cursor" onclick="google_tag_event('landing-page-mobile,Click,btn-continuer-sur-le-site');">Continuer sur century21.fr</a>
              </div>
              <div class="contentDevice">
              	<a id="btnStopDisplayDeviceDetection" class="cursor" onclick="google_tag_event('landing-page-mobile,Click,btn-ne-plus-afficher');">Ne plus me proposer</a>
              </div>
          </div>
        </div>
   
    <div id="main">
        <!--BANDEAU MESSAGE COOKIE CNIL-->
        <div id="bandeauCookie">
        </div>

      <div id="lineTop">
        <div class="mid">
          <div class="content">
            <ul class="posL">
              
              <li><span><a href="/fiches/a_propos/" onclick="google_tag_event('Menu,Click,A Propos');">A propos de CENTURY 21</a></span></li>
              <li><span><a href="/fiches/a_propos/century21/international/" onclick="google_tag_event('Menu,Click,International');">International</a></span></li>
              <li><span><a href="/trouver_agence/" onclick="google_tag_event('Menu,Click,Nos Agences Immobilières');">Nos agences immobilières</a></span></li>
              <li><span><a href="/fiches/a_propos/le_blog_immobilier/" onclick="google_tag_event('Menu,Click,Blog Immobilier');">Blog immobilier</a></span></li>
              
            </ul>
            <ul class="posR">
            	
            	<li>
                	<form id="rechercheSITE" action="/text_search/" method="get">
                  	<input type="text" id="inputRECHERCHESITE" name="q" placeholder="Rechercher sur le site" />
                  	<a id="btnMOTEURFULLTEXT">OK</a>
                	</form>
              	</li>
              	
			  
             	<li>
					<a id="btnMONCOMPTE2" href="/accounts/">
						Mon compte
					</a>
			 	</li>
              
              
			 <li class="social">
				<a rel="noopener" href="https://www.facebook.com/Century21France" target="_blank" onclick="google_tag_event('Menu,Click,Facebook');" title="Facebook"><i class="fa fa-2x fa-facebook" aria-hidden="true"></i></a>
			 </li>
			

			
			<li class="social">
				  <a rel="noopener" href="https://twitter.com/century21fr" target="_blank" onclick="google_tag_event('Menu,Click,Twitter');" title="Twitter"><i class="fa fa-2x fa-twitter" aria-hidden="true"></i></a>
			 </li>
			
            
			<li class="social">
				  <a rel="noopener" href="https://www.linkedin.com/company/century-21-france/" target="_blank" onclick="google_tag_event('Menu,Click,Linkedin');" title="Linkedin"><i class="fa fa-linkedin fa-2x" aria-hidden="true"></i></a>
			 </li>
			
            
			<li class="social">
				  <a rel="noopener" href="https://www.instagram.com/century21fr/" target="_blank" onclick="google_tag_event('Menu,Click,Instagram');" title="Instagram"><i class="fa fa-instagram fa-2x" aria-hidden="true"></i></a>
			</li>
			
            
            <li class="social">
				  <a rel="noopener" href="https://www.youtube.com/user/century21france" target="_blank" onclick="google_tag_event('Menu,Click,Youtube');" title="Youtube"><i class="fa fa-youtube fa-2x" aria-hidden="true"></i></a>
			</li>
            
             
              <li>
             	<a rel="noopener" class="picto-bot-c21" href="https://www.messenger.com/t/Century21France" target="_blank" onclick="google_tag_event('Menu,Click,Messenger');">
             		<img src="/theme/generic/css/images/op-marque/bot-messenger-century21.svg" alt="le Bot CENTURY 21" height="24px" width="24px" title="le Bot CENTURY 21">
             	</a>
             </li>
             
            </ul>
          </div>
        </div>
      </div>
      
      
      

      
      <header id="mainHeader">
        
        <div class="mid o-top-bar__content tw-flex tw-items-center tw-bg-c21-gold">
          <div class="content tw-container tw-mx-auto">
          	<ul>
          		<li>
          			<a href="/" id="btnLogo"
               title="Retour à l'accueil CENTURY 21, N°1 des agences immobilières dans le monde">
          				<img src="/theme/generic/css/images/op-marque/logo_c21.svg" alt="Retour à l'accueil CENTURY 21, N°1 des agences immobilières dans le monde" width="200px" height="23px" />
          				
					</a>
				</li>
          		<li class="link-nav">
          			<a class="active" href="/acheter/" onclick="google_tag_event('Menu,Click,Acheter');">ACHETER</a>
          		</li>
          		<li class="link-nav">
          			<a  href="/louer/" onclick="google_tag_event('Menu,Click,Louer');">LOUER</a>
          		</li>
          		<li class="link-nav">
          			<a  href="/outils/vendre/" onclick="google_tag_event('Menu,Click,Vendre');">VENDRE</a>
          		</li>
          		<li class="link-nav">
          			<a  href="/outils/faire_gerer/" onclick="google_tag_event('Menu,Click,Faire Gerer');">FAIRE G&Eacute;RER</a>
          		</li>
          		<li class="link-nav">
          			<a href="/commerce_entreprises/" onclick="google_tag_event('Menu,Click,Entreprise Et Commerce');">ENTREPRISE ET COMMERCE</a>
          		</li>
          		<li>
          			<a rel="noopener" href="https://www.lesmeilleurstalents.com" target="_blank" onclick="google_tag_event('Menu,Click,Offres Emploi');">OFFRES D'EMPLOI</a>
          		</li>
          		<li><a rel="noopener" href="https://franchise.century21.fr/" target="_blank" onclick="google_tag_event('Menu,Click,Devenir Franchise');">DEVENIR FRANCHIS&Eacute;</a></li>
          	</ul>
          </div>
          <div class="print_content displayNone">
            <span class="titre_h2">CENTURY 21, N°1 des agences immobilières dans le monde</span>
          </div>
        </div>
        
        
      </header>
      
      

      	
      	


      

      
      
      

      
      <div id="page">
        <div class="mid">
          
          
          <div class="content">
            <div class="wrap">
              
              

              

              


              <div class="outils_top_right">
                
  
  

  

              </div>

              


              

              



              

  <span id="bloc_liste_biens">
    



<script>
  var UID_BIEN = UID_BIEN.concat(["2039788296","2129159693","1602757943","2099077435","2004247382","2091692427","2077468281","2031279843","2057160839","2113977400","2109144007","2100529070","2005934505","1279568267","2053306151","2113274702","2121208422","2064867740","1988294646","2074915600","2068879842","1798013111","2056430563","2094400260","2109679537","2114653641","2097459157","2094532162","2051666729","1994116901"]);
  
var PAGE_TITLE = "Vente maison appartement  à PARIS (75) | CENTURY 21";
</script>





<h1 class="fwbPlus">Maison, Appartement à vendre  Paris</h1>



	
		<h2 class="resume_recherche txtAC">Maison - Appartement -  PARIS</h2>
	



<link rel="stylesheet" type="text/css" href="/theme/generic/css/styles-liste-biens-new.css" media="all"/>
<link rel="stylesheet" type="text/css" href="/theme/generic/css/style-new-c21-acheter.css" media="all"/>









<div class="mgtPlus">
        <button id="TRI" class="bcsecondPlus">TRIER</button>
        <button id="AFF" class="bcsecondPlus">AFFINER</button>
        <button id="btnALERTE2"  class="bcsecondPlus purple" onclick="google_tag_event('bien,liste-bien,clic-CREER-ALERTE');alerte_popup();">créer une alerte</button>
    </div>
    
    <div id="blocRECHERCHE" class="blocRECHERCHE dbplus " style="display:none">
            
<div id="moteurAFFINEE" >  
	<form id="formRECHAFFINEE" name="formRECHAFFINEE" action="." method="POST" onSubmit="return checkTypedField(this.localisation, $('#msg_erreur_ou'))">
    	<input id="id_agence" name="agence" type="hidden" />    
		
		<ul>
			<li>
				<div class="zone-label">
					<label>Vous recherchez</label>
				</div>
				<div class="zone-field zone-checkbox mumBOX">
					
						<div class="BTN"><input id="id_types_biens_0" name="types_biens" type="hidden" value="maison" /><a id="btn-id_types_biens_0" class="actif types_biens" onclick="styledCheckBox.check(this, 'types_biens', 'maison')"> Maison</a></div>
						<div class="BTN"><input id="id_types_biens_1" name="types_biens" type="hidden" value="appartement" /><a id="btn-id_types_biens_1" class="actif types_biens" onclick="styledCheckBox.check(this, 'types_biens', 'appartement')"> Appartement</a></div>
						<div class="morePOPUP"></div>
						<div class="boxMORE" id="typeUNIVERS">
						  
							  
							  <div class="BTN"><a id="btn-id_age_bien_0" class="inactif age_bien" onclick="styledCheckBox.check(this, 'age_bien', 'ancien')"> Ancien</a></div>
							  
							  <div class="BTN"><a id="btn-id_age_bien_1" class="inactif age_bien" onclick="styledCheckBox.check(this, 'age_bien', 'neuf')"> Neuf</a></div>
							  								  
						  
						  <div class="BTN"><a id="btn-id_types_biens_2" class="inactif types_biens" onclick="styledCheckBox.check(this, 'types_biens', 'terrain')"> Terrain</a></div>
						  <div class="BTN"><a id="btn-id_types_biens_3" class="inactif types_biens" onclick="styledCheckBox.check(this, 'types_biens', 'parking')"> Parking</a></div>
						  
							  <div class="BTN"><a id="btn-id_types_biens_6" class="inactif types_biens" onclick="styledCheckBox.check(this, 'types_biens', 'immeuble')"> Immeuble</a></div>
							  <div class="BTN"><a id="btn-id_types_biens_7" class="inactif types_biens" onclick="styledCheckBox.check(this, 'types_biens', 'divers')"> Divers</a></div>
						  
						</div>
					
				</div>
			</li>
			<li id="moteurAffineeTop">
				<div class="zone-label">
					<label>A quel endroit</label>
				</div>
				<div class="zone-field">					
					<input class="fL" id="id_localisation" name="localisation" placeholder="Ville, code postal" type="text" value="v-paris" /><script>$(document).ready(function() {$("#id_localisation").tokenInput("/autocomplete/localite/", {tokenLimit:null,theme:"facebook", prePopulate:[{"id": "v-paris", "name": "paris"}],onReady:function(){recupSelection('id_localisation');},preventDuplicates:true,hintText:"",placeholder:"Département, Ville, Code Postal, arrdt...",searchingText:"Recherche en cours...",onAdd:function(item){reverseListe(item,"id_localisation");}}); });</script>
			    	<ul id="msg_erreur_ou" class="errorlist displayNone"><li>Vous devez renseigner un lieu au minimum.</li></ul>
          			<input id="hiddenVal" type="hidden" />
				</div>
			</li>
			<li>
				<div class="zone-label">
					<label>Étendre à</label>        				
				</div>
				<div class="zone-field">
					<select class="customSELECT" id="id_etendue" name="etendue">
<option value="0"></option>
<option value="5">5 km</option>
<option value="10">10 km</option>
<option value="15">15 km</option>
</select>
				</div>
			</li>
			<li>
				<div class="zone-label">
					
					<label>Budget maxi</label>
					
				</div>
				<div class="zone-field">
					<div id="slider-id_budget_max" class="slider"></div>
<input type="hidden"  id="id_budget_max" name="budget_max" value="1000000" />
<script>$(document).ready(function() { initSliderSelect("id_budget_max",0,1000000,20000,"€",1000000); });</script>
					
				</div>
			</li>
			<li>
				<div class="zone-label">
					<label>Surface mini</label>
				</div>
				<div class="zone-field">
					<div id="slider-id_surface_min" class="slider"></div>
<input type="hidden"  id="id_surface_min" name="surface_min" value="0" />
<script>$(document).ready(function() { initSliderSelect("id_surface_min",0,400,10,"m²",0); });</script>
					
				</div>
			</li>
			
			<li>
				<div class="zone-label">
					<label>Terrain mini</label>        
				</div>
				<div class="zone-field">
					<div id="slider-id_surface_terrain_min" class="slider"></div>
<input type="hidden"  id="id_surface_terrain_min" name="surface_terrain_min" value="0" />
<script>$(document).ready(function() { initSliderSelect("id_surface_terrain_min",0,4000,10,"m²",0); });</script>
					
				</div>
			</li>
			
			<li>
				<div class="zone-label">
					<label>Nombre de pièces</label>
				</div>
				<div class="zone-field zone-checkbox">
					
						<div class="BTN"><a id="btn-id_nombres_de_pieces_0" class="inactif nombres_de_pieces" onclick="styledCheckBox.check(this, 'nombres_de_pieces', '1')"> 1</a></div>
					
						<div class="BTN"><a id="btn-id_nombres_de_pieces_1" class="inactif nombres_de_pieces" onclick="styledCheckBox.check(this, 'nombres_de_pieces', '2')"> 2</a></div>
					
						<div class="BTN"><a id="btn-id_nombres_de_pieces_2" class="inactif nombres_de_pieces" onclick="styledCheckBox.check(this, 'nombres_de_pieces', '3')"> 3</a></div>
					
						<div class="BTN"><a id="btn-id_nombres_de_pieces_3" class="inactif nombres_de_pieces" onclick="styledCheckBox.check(this, 'nombres_de_pieces', '4')"> 4</a></div>
					
						<div class="BTN"><a id="btn-id_nombres_de_pieces_4" class="inactif nombres_de_pieces" onclick="styledCheckBox.check(this, 'nombres_de_pieces', '5')"> 5+</a></div>
					
				</div>
			</li>
			<li>
				<a class="underline fL black font16" href="/commerce_entreprises/acheter/" onclick="google_tag_event('page-univer,moteur-vente,clic-btn-ICE-popup-QUOI');">Entreprise / Commerce</a>
				<div class="lienMoreRech floatR">
				  
				  <div id="div_ref_moteur_affinee" class="rechParRef">
					<a id="fermerRechParRef" class="pictoBtnFermer"></a>
					<div class="content_rechParRef">
					  <label>Référence ?</label>
					  <input type="text" placeholder="Entrez votre référence" name="reference" id="form_RECHAFFINEE_ref">
					  <input type="hidden" name="type_transaction" value="vente">
					  <a id="btnRECHERCHE_REF" class="gris">Rechercher</a>
					  <div id="result_bien_ref" style="display: none;"></div>
					</div>
				  </div>
				  
				  <a id="ref_moteur_affinee" class="lienRECH_REF black underline font16">Rechercher par référence</a>				  
				</div>
				
			</li>			
			<li>				
			    
					<div class="blocPLUSDECRITERE">
					  
						  
							  <ul>
								  
									<li><div class="BTN"><a id="btn-id_affinage_0" class="inactif affinage" onclick="styledCheckBox.check(this, 'affinage', 'photo')"> Photo (243)</a></div></li>						
								  
									<li><div class="BTN"><a id="btn-id_affinage_1" class="inactif affinage" onclick="styledCheckBox.check(this, 'affinage', 'visite_virtuelle')"> Vid&eacute;o et/ou visite virtuelle (5)</a></div></li>						
								  
									<li><div class="BTN"><a id="btn-id_affinage_2" class="inactif affinage" onclick="styledCheckBox.check(this, 'affinage', 'chauffage_individuel')"> Chauffage Individuel (158)</a></div></li>						
								  
									<li><div class="BTN"><a id="btn-id_affinage_3" class="inactif affinage" onclick="styledCheckBox.check(this, 'affinage', 'chauffage_collectif')"> Chauffage Collectif (85)</a></div></li>						
								  
									<li><div class="BTN"><a id="btn-id_affinage_4" class="inactif affinage" onclick="styledCheckBox.check(this, 'affinage', 'parking')"> Parking (40)</a></div></li>						
								  
									<li><div class="BTN"><a id="btn-id_affinage_5" class="inactif affinage" onclick="styledCheckBox.check(this, 'affinage', 'terrasse_balcon_jardin')"> Terrasse / Balcon / Jardin (60)</a></div></li>						
								  
									<li><div class="BTN"><a id="btn-id_affinage_6" class="inactif affinage" onclick="styledCheckBox.check(this, 'affinage', 'cheminee')"> Chemin&eacute;e (30)</a></div></li>						
								  
									<li><div class="BTN"><a id="btn-id_affinage_7" class="inactif affinage" onclick="styledCheckBox.check(this, 'affinage', 'piscine')"> Piscine (1)</a></div></li>						
								  
									<li><div class="BTN"><a id="btn-id_affinage_8" class="inactif affinage" onclick="styledCheckBox.check(this, 'affinage', 'cave_ou_sous_sol')"> Cave et/ou sous-sol (146)</a></div></li>						
								  
									<li><div class="BTN"><a id="btn-id_affinage_9" class="inactif affinage" onclick="styledCheckBox.check(this, 'affinage', 'acces_handicape')"> Acc&egrave;s Handicap&eacute; (5)</a></div></li>						
								  
							  </ul>
						 
					 
				   </div>
			  
			</li>
		</ul>
					
			<div class="zone-btn-extra">
				<ul>
					
					<li>
						<a id="btnALERTE" onclick="google_tag_event('bien,liste-bien,clic-CREER-ALERTE');">
							Cr&eacute;er une alerte
						</a>
					</li>
					
					
					<li>
						<a id="lienPLUSCRITERES" class="bouton-critere" onclick="google_tag_event('bien,liste-bien,clic-PLUS-CRITERES');">
							+ de critères
						</a>
					</li>
					
				</ul>
			</div>
		
	</form>
</div>
        </div>
        <div class="reset"></div>
        
        <div id="blocPAGINATION" class="pagination zoneTOP bc_plus" style="display:none;">
                
                <div class="btnCRITERE_TRI">
                    <ul>
                        
                        
                        <li>
                            <a href="#" onclick="return load_liste_biens('?tri=prix&order=asc')">
                                    <span>Prix</span><span class="tri_neutre"></span>
                                </a>
                            </li>
                            
                            
                        
                        <li>
                            <a href="#" onclick="return load_liste_biens('?tri=surface&order=asc')">
                                    <span>Surface</span><span class="tri_neutre"></span>
                                </a>
                            </li>
                            
                            
                        
                        <li>
                            <a href="#" onclick="return load_liste_biens('?tri=nb_pieces&order=asc')">
                                    <span>Nb Pièces</span><span class="tri_neutre"></span>
                                </a>
                            </li>
                            
                            
                        
                        <li>
                            <a href="#" onclick="return load_liste_biens('?tri=ville&order=asc')">
                                    <span>Ville</span><span class="tri_neutre"></span>
                                </a>
                            </li>
                            
                            
                        
                        <li>
                            <a href="#" onclick="return load_liste_biens('?tri=dpe&order=asc')">
                                    <span>DPE</span><span class="tri_neutre"></span>
                                </a>
                            </li>
                            
                            
                        
                        <li>
                            <a href="#" onclick="return load_liste_biens('?tri=exclusivite&order=asc')">
                                    <span>Exclusivité</span><span class="tri_neutre"></span>
                                </a>
                            </li>
                            
                            
                        
                        <li>
                            <a class="actif" href="#" onclick="return load_liste_biens('?tri=date&order=asc')">		<span>Date</span><span class="tri_desc"></span>
                            </a>
                        </li>
                        
                            
                        </ul>
                    </div>
                    
                </div>
                
                <div class="reset"></div>
                <div class="margL20">
                    <h2 class="titreSeparation titreSeparation txtA_plusplus">
                            
                            243
                            annonces  correspondent  &agrave; votre recherche.
                            
                        </h2>
                    </div>
                    
		
		<div class="reset"></div>
		<!-- <div class="margL20">
				 <div class="titreSeparation titreSeparation">
			
					243
					annonces correspondant &agrave; votre recherche.
				
					</div>
		</div> -->
		<div class="annonce_et_plus_infos">
			<div id="blocANNONCES">
				<ul class="annoncesListeBien">
				
				<li  class="annonce">
					<script>	
				google_tag_event('bien,vu_sur_listing,202_3291_43928');
</script>
<div class="contentAnnonce" id="bien_2039788296" data-uid="2039788296">
	<div class="zone-photo-exclu">
	    <a href="/trouver_logement/detail/2039788296/" onclick="google_tag_event('bien,clic_sur_listing,202_3291_43928');return go_detail(this);">
            <div class="price">1 030 000&euro; <span class="font20"></span></div>
            
            <p class="pixM photoAnnonce" onmouseover="popup_annonce('2039788296','202_3291_43928',$(this));return false;">
              <img width="220" height="146" src="/imagesBien/202/3291/c21_202_3291_43928_9_2A765804-C7F5-4FFD-9A77-EFDAC380DE7D.jpg" alt="Vente appartement - PARIS (75014) - 89.7 m² - 4 pi&egrave;ces" />
            </p>
		</a>
	</div>
    <div class="zone-text-loupe">  
	    <a href="/trouver_logement/detail/2039788296/" onclick="google_tag_event('bien,clic_sur_listing,202_3291_43928');return go_detail(this);">
          <h3>
            
            PARIS&nbsp;&nbsp;<span class="font14">75014</span>
            
          </h3>
          <h4 class="detail_vignette">
	          Appartement F4 <br />89,74 m&sup2; , 4 pièces
          </h4>
		  <span class="infoZOOM">Voir détail</span>
		</a>
	</div>
</div>

				</li>
					
					
				
				<li  class="annonce">
					<script>	
				google_tag_event('bien,vu_sur_listing,202_2947_5208');
</script>
<div class="contentAnnonce" id="bien_2129159693" data-uid="2129159693">
	<div class="zone-photo-exclu">
	    <a href="/trouver_logement/detail/2129159693/" onclick="google_tag_event('bien,clic_sur_listing,202_2947_5208');return go_detail(this);">
            <div class="price">187 000&euro; <span class="font20"></span></div>
            
            <span class="infoEXCLU">
             
               Mandat Confiance / Exclusivité
            </span>
            
            <p class="pixM photoAnnonce" onmouseover="popup_annonce('2129159693','202_2947_5208',$(this));return false;">
              <img width="220" height="146" src="/imagesBien/202/2947/c21_202_2947_5208_9_364945EE-5511-4684-ACDE-F45231CAE46D.jpg" alt="Vente appartement - PARIS (75013) - 15.5 m² - 1 pi&egrave;ce" />
            </p>
		</a>
	</div>
    <div class="zone-text-loupe">  
	    <a href="/trouver_logement/detail/2129159693/" onclick="google_tag_event('bien,clic_sur_listing,202_2947_5208');return go_detail(this);">
          <h3>
            
            PARIS&nbsp;&nbsp;<span class="font14">75013</span>
            
          </h3>
          <h4 class="detail_vignette">
	          Appartement F1 <br />15,5 m&sup2; , 1 pièce
          </h4>
		  <span class="infoZOOM">Voir détail</span>
		</a>
	</div>
</div>

				</li>
					
					
				
				<li  class="annonce margR0">
					<script>	
				google_tag_event('bien,vu_sur_listing,202_557_43238');
</script>
<div class="contentAnnonce" id="bien_1602757943" data-uid="1602757943">
	<div class="zone-photo-exclu">
	    <a href="/trouver_logement/detail/1602757943/" onclick="google_tag_event('bien,clic_sur_listing,202_557_43238');return go_detail(this);">
            <div class="price">749 000&euro; <span class="font20"></span></div>
            
            <span class="infoEXCLU">
             
               Mandat Confiance / Exclusivité
            </span>
            
            <p class="pixM photoAnnonce" onmouseover="popup_annonce('1602757943','202_557_43238',$(this));return false;">
              <img width="220" height="146" src="/imagesBien/202/557/c21_202_557_43238_9_4EAFCFE4-5A54-40D2-8E78-C660C1CEAAB8.jpg" alt="Vente appartement - PARIS (75012) - 59.0 m² - 3 pi&egrave;ces" />
            </p>
		</a>
	</div>
    <div class="zone-text-loupe">  
	    <a href="/trouver_logement/detail/1602757943/" onclick="google_tag_event('bien,clic_sur_listing,202_557_43238');return go_detail(this);">
          <h3>
            
            PARIS&nbsp;&nbsp;<span class="font14">75012</span>
            
          </h3>
          <h4 class="detail_vignette">
	          Appartement F3 <br />59,0 m&sup2; , 3 pièces
          </h4>
		  <span class="infoZOOM">Voir détail</span>
		</a>
	</div>
</div>

				</li>
					
					
				
				<li  class="annonce">
					<script>	
				google_tag_event('bien,vu_sur_listing,202_480_26458');
</script>
<div class="contentAnnonce" id="bien_2099077435" data-uid="2099077435">
	<div class="zone-photo-exclu">
	    <a href="/trouver_logement/detail/2099077435/" onclick="google_tag_event('bien,clic_sur_listing,202_480_26458');return go_detail(this);">
            <div class="price">1 260 000&euro; <span class="font20"></span></div>
            
            <span class="infoEXCLU">
             
               Mandat Confiance / Exclusivité
            </span>
            
            <p class="pixM photoAnnonce" onmouseover="popup_annonce('2099077435','202_480_26458',$(this));return false;">
              <img width="220" height="146" src="/imagesBien/202/480/c21_202_480_26458_9_012A40E3-D585-4BAE-A8E9-1ECBB3660562.jpg" alt="Vente appartement - PARIS (75012) - 102.0 m² - 5 pi&egrave;ces" />
            </p>
		</a>
	</div>
    <div class="zone-text-loupe">  
	    <a href="/trouver_logement/detail/2099077435/" onclick="google_tag_event('bien,clic_sur_listing,202_480_26458');return go_detail(this);">
          <h3>
            
            PARIS&nbsp;&nbsp;<span class="font14">75012</span>
            
          </h3>
          <h4 class="detail_vignette">
	          Appartement F5 <br />102,05 m&sup2; , 5 pièces
          </h4>
		  <span class="infoZOOM">Voir détail</span>
		</a>
	</div>
</div>

				</li>
					
					
				
				<li  class="annonce">
					<script>	
				google_tag_event('bien,vu_sur_listing,202_480_26343');
</script>
<div class="contentAnnonce" id="bien_2004247382" data-uid="2004247382">
	<div class="zone-photo-exclu">
	    <a href="/trouver_logement/detail/2004247382/" onclick="google_tag_event('bien,clic_sur_listing,202_480_26343');return go_detail(this);">
            <div class="price">383 000&euro; <span class="font20"></span></div>
            
            <span class="infoEXCLU">
             
               Mandat Confiance / Exclusivité
            </span>
            
            <p class="pixM photoAnnonce" onmouseover="popup_annonce('2004247382','202_480_26343',$(this));return false;">
              <img width="220" height="146" src="/imagesBien/202/480/c21_202_480_26343_9_E3CF7D2C-54F2-4AFE-B84D-E52912EAADD1.jpg" alt="Vente appartement - PARIS (75012) - 36.0 m² - 2 pi&egrave;ces" />
            </p>
		</a>
	</div>
    <div class="zone-text-loupe">  
	    <a href="/trouver_logement/detail/2004247382/" onclick="google_tag_event('bien,clic_sur_listing,202_480_26343');return go_detail(this);">
          <h3>
            
            PARIS&nbsp;&nbsp;<span class="font14">75012</span>
            
          </h3>
          <h4 class="detail_vignette">
	          Appartement F2 <br />36,0 m&sup2; , 2 pièces
          </h4>
		  <span class="infoZOOM">Voir détail</span>
		</a>
	</div>
</div>

				</li>
					
					
				
				<li  class="annonce margR0">
					<script>	
				google_tag_event('bien,vu_sur_listing,202_467_11592');
</script>
<div class="contentAnnonce" id="bien_2091692427" data-uid="2091692427">
	<div class="zone-photo-exclu">
	    <a href="/trouver_logement/detail/2091692427/" onclick="google_tag_event('bien,clic_sur_listing,202_467_11592');return go_detail(this);">
            <div class="price">1 086 500&euro; <span class="font20"></span></div>
            
            <p class="pixM photoAnnonce" onmouseover="popup_annonce('2091692427','202_467_11592',$(this));return false;">
              <img width="220" height="146" src="/imagesBien/202/467/c21_202_467_11592_9_8C9DF0FF-A71D-4E60-B836-9FBB18DFD690.jpg" alt="Vente appartement - PARIS (75006) - 70.0 m² - 3 pi&egrave;ces" />
            </p>
		</a>
	</div>
    <div class="zone-text-loupe">  
	    <a href="/trouver_logement/detail/2091692427/" onclick="google_tag_event('bien,clic_sur_listing,202_467_11592');return go_detail(this);">
          <h3>
            
            PARIS&nbsp;&nbsp;<span class="font14">75006</span>
            
          </h3>
          <h4 class="detail_vignette">
	          Appartement F3 <br />70,0 m&sup2; , 3 pièces
          </h4>
		  <span class="infoZOOM">Voir détail</span>
		</a>
	</div>
</div>

				</li>
					
					
				
				<li  class="annonce">
					<script>	
				google_tag_event('bien,vu_sur_listing,202_2700_9397');
</script>
<div class="contentAnnonce" id="bien_2077468281" data-uid="2077468281">
	<div class="zone-photo-exclu">
	    <a href="/trouver_logement/detail/2077468281/" onclick="google_tag_event('bien,clic_sur_listing,202_2700_9397');return go_detail(this);">
            <div class="price">1 354 700&euro; <span class="font20"></span></div>
            
            <span class="infoEXCLU">
             
               Mandat Confiance / Exclusivité
            </span>
            
            <p class="pixM photoAnnonce" onmouseover="popup_annonce('2077468281','202_2700_9397',$(this));return false;">
              <img width="220" height="146" src="/imagesBien/202/2700/c21_202_2700_9397_9_39781619-848C-47E7-BACF-60A7075521F4.jpg" alt="Vente appartement - PARIS (75005) - 69.6 m² - 3 pi&egrave;ces" />
            </p>
		</a>
	</div>
    <div class="zone-text-loupe">  
	    <a href="/trouver_logement/detail/2077468281/" onclick="google_tag_event('bien,clic_sur_listing,202_2700_9397');return go_detail(this);">
          <h3>
            
            PARIS&nbsp;&nbsp;<span class="font14">75005</span>
            
          </h3>
          <h4 class="detail_vignette">
	          Appartement F3 <br />69,6 m&sup2; , 3 pièces
          </h4>
		  <span class="infoZOOM">Voir détail</span>
		</a>
	</div>
</div>

				</li>
					
					
				
				<li  class="annonce">
					<script>	
				google_tag_event('bien,vu_sur_listing,202_2154_20978');
</script>
<div class="contentAnnonce" id="bien_2031279843" data-uid="2031279843">
	<div class="zone-photo-exclu">
	    <a href="/trouver_logement/detail/2031279843/" onclick="google_tag_event('bien,clic_sur_listing,202_2154_20978');return go_detail(this);">
            <div class="price">420 000&euro; <span class="font20"></span></div>
            
            <p class="pixM photoAnnonce" onmouseover="popup_annonce('2031279843','202_2154_20978',$(this));return false;">
              <img width="220" height="146" src="/imagesBien/202/2154/c21_202_2154_20978_9_1121916D-B30E-4790-B796-749034AFF1FE.jpg" alt="Vente appartement - PARIS (75009) - 34.3 m² - 1 pi&egrave;ce" />
            </p>
		</a>
	</div>
    <div class="zone-text-loupe">  
	    <a href="/trouver_logement/detail/2031279843/" onclick="google_tag_event('bien,clic_sur_listing,202_2154_20978');return go_detail(this);">
          <h3>
            
            PARIS&nbsp;&nbsp;<span class="font14">75009</span>
            
          </h3>
          <h4 class="detail_vignette">
	          Appartement F1 <br />34,26 m&sup2; , 1 pièce
          </h4>
		  <span class="infoZOOM">Voir détail</span>
		</a>
	</div>
</div>

				</li>
					
					
				
				<li  class="annonce margR0">
					<script>	
				google_tag_event('bien,vu_sur_listing,202_470_8635');
</script>
<div class="contentAnnonce" id="bien_2057160839" data-uid="2057160839">
	<div class="zone-photo-exclu">
	    <a href="/trouver_logement/detail/2057160839/" onclick="google_tag_event('bien,clic_sur_listing,202_470_8635');return go_detail(this);">
            <div class="price">1 048 000&euro; <span class="font20"></span></div>
            
            <span class="infoEXCLU">
             
               Mandat Confiance / Exclusivité
            </span>
            
            <p class="pixM photoAnnonce" onmouseover="popup_annonce('2057160839','202_470_8635',$(this));return false;">
              <img width="220" height="146" src="/imagesBien/202/470/c21_202_470_8635_9_DD0B0BD7-70E5-47EE-AE87-F895681FEC55.jpg" alt="Vente appartement - PARIS (75016) - 92.1 m² - 5 pi&egrave;ces" />
            </p>
		</a>
	</div>
    <div class="zone-text-loupe">  
	    <a href="/trouver_logement/detail/2057160839/" onclick="google_tag_event('bien,clic_sur_listing,202_470_8635');return go_detail(this);">
          <h3>
            
            PARIS&nbsp;&nbsp;<span class="font14">75016</span>
            
          </h3>
          <h4 class="detail_vignette">
	          Appartement F5 <br />92,08 m&sup2; , 5 pièces
          </h4>
		  <span class="infoZOOM">Voir détail</span>
		</a>
	</div>
</div>

				</li>
					
					
						<!--code fonctionel pour les deux sites commerce et sites

<div id="bannerOpEstim" class="medium" title="test bannieres">
	<ul>
		<li>Vous voulez vendre ?</li>
		
		<li>
			Combien vaut votre bien ?<br>
			Combien d'acheteurs sont intéressés ?
		</li>
						
	</ul>
	
	<a href="/estimation-immobiliere" onClick="google_tag_event('Banniere-728x85,Click,Evaluateur');">Testez ici
		 <i class="fa fa-caret-right" aria-hidden="true"></i></a>
		
</div>

-->



<!-- update code partie test pour ice-->

<a  id="bannerOpEstim" class="medium" title="Vous voulez vendre ?" 
	href="/estimation-immobiliere" onClick="google_tag_event('Banniere-728x85,Click,Evaluateur');">
	<ul>
		<li>Découvrez combien vaut votre bien</li>
		
		<li>
			<div class="zone-defilement-number banner medium">
	<ul>
		<li>ENTRE</li>
		<li class="defil-number tranche-1"></li>
		<li>ET</li>
		<li class="defil-number tranche-2"></li>
	</ul>
</div>
<script src="/theme/generic/js/lib/odometer-0.4.6/odometer.min.js"></script>
<script src="/theme/generic/js/c-combien/launch-defil-number.js"></script>
		</li>		
	</ul>

	<div class="cta">Je découvre</div>
</a>
	


	
					
				
				<li  class="annonce">
					<script>	
				google_tag_event('bien,vu_sur_listing,202_3181_2721');
</script>
<div class="contentAnnonce" id="bien_2113977400" data-uid="2113977400">
	<div class="zone-photo-exclu">
	    <a href="/trouver_logement/detail/2113977400/" onclick="google_tag_event('bien,clic_sur_listing,202_3181_2721');return go_detail(this);">
            <div class="price">475 000&euro; <span class="font20"></span></div>
            
            <span class="infoEXCLU">
             
               Mandat Confiance / Exclusivité
            </span>
            
            <p class="pixM photoAnnonce" onmouseover="popup_annonce('2113977400','202_3181_2721',$(this));return false;">
              <img width="220" height="146" src="/imagesBien/202/3181/c21_202_3181_2721_9_6A950E73-C935-4C8C-B97D-6FCE87069341.jpg" alt="Vente appartement - PARIS (75013) - 52.2 m² - 2 pi&egrave;ces" />
            </p>
		</a>
	</div>
    <div class="zone-text-loupe">  
	    <a href="/trouver_logement/detail/2113977400/" onclick="google_tag_event('bien,clic_sur_listing,202_3181_2721');return go_detail(this);">
          <h3>
            
            PARIS&nbsp;&nbsp;<span class="font14">75013</span>
            
          </h3>
          <h4 class="detail_vignette">
	          Appartement T2 <br />52,2 m&sup2; , 2 pièces
          </h4>
		  <span class="infoZOOM">Voir détail</span>
		</a>
	</div>
</div>

				</li>
					
					
				
				<li  class="annonce">
					<script>	
				google_tag_event('bien,vu_sur_listing,202_3181_2714');
</script>
<div class="contentAnnonce" id="bien_2109144007" data-uid="2109144007">
	<div class="zone-photo-exclu">
	    <a href="/trouver_logement/detail/2109144007/" onclick="google_tag_event('bien,clic_sur_listing,202_3181_2714');return go_detail(this);">
            <div class="price">595 000&euro; <span class="font20"></span></div>
            
            <span class="infoEXCLU">
             
               Mandat Confiance / Exclusivité
            </span>
            
            <p class="pixM photoAnnonce" onmouseover="popup_annonce('2109144007','202_3181_2714',$(this));return false;">
              <img width="220" height="146" src="/imagesBien/202/3181/c21_202_3181_2714_9_57A94D2E-DD54-4F54-B66D-3C7C37360201.jpg" alt="Vente appartement - PARIS (75006) - 36.2 m² - 1 pi&egrave;ce" />
            </p>
		</a>
	</div>
    <div class="zone-text-loupe">  
	    <a href="/trouver_logement/detail/2109144007/" onclick="google_tag_event('bien,clic_sur_listing,202_3181_2714');return go_detail(this);">
          <h3>
            
            PARIS&nbsp;&nbsp;<span class="font14">75006</span>
            
          </h3>
          <h4 class="detail_vignette">
	          Appartement F1 <br />36,18 m&sup2; , 1 pièce
          </h4>
		  <span class="infoZOOM">Voir détail</span>
		</a>
	</div>
</div>

				</li>
					
					
				
				<li  class="annonce margR0">
					<script>	
				google_tag_event('bien,vu_sur_listing,202_3181_2695');
</script>
<div class="contentAnnonce" id="bien_2100529070" data-uid="2100529070">
	<div class="zone-photo-exclu">
	    <a href="/trouver_logement/detail/2100529070/" onclick="google_tag_event('bien,clic_sur_listing,202_3181_2695');return go_detail(this);">
            <div class="price">1 110 000&euro; <span class="font20"></span></div>
            
            <span class="infoEXCLU">
             
               Mandat Confiance / Exclusivité
            </span>
            
            <p class="pixM photoAnnonce" onmouseover="popup_annonce('2100529070','202_3181_2695',$(this));return false;">
              <img width="220" height="146" src="/imagesBien/202/3181/c21_202_3181_2695_9_834278D2-8D27-4F77-9CAD-A7A90D808D9C.jpg" alt="Vente appartement - PARIS (75014) - 80.0 m² - 3 pi&egrave;ces" />
            </p>
		</a>
	</div>
    <div class="zone-text-loupe">  
	    <a href="/trouver_logement/detail/2100529070/" onclick="google_tag_event('bien,clic_sur_listing,202_3181_2695');return go_detail(this);">
          <h3>
            
            PARIS&nbsp;&nbsp;<span class="font14">75014</span>
            
          </h3>
          <h4 class="detail_vignette">
	          Appartement F3 <br />80,0 m&sup2; , 3 pièces
          </h4>
		  <span class="infoZOOM">Voir détail</span>
		</a>
	</div>
</div>

				</li>
					
					
				
				<li  class="annonce">
					<script>	
				google_tag_event('bien,vu_sur_listing,202_3181_2616');
</script>
<div class="contentAnnonce" id="bien_2005934505" data-uid="2005934505">
	<div class="zone-photo-exclu">
	    <a href="/trouver_logement/detail/2005934505/" onclick="google_tag_event('bien,clic_sur_listing,202_3181_2616');return go_detail(this);">
            <div class="price">1 595 000&euro; <span class="font20"></span></div>
            
            <p class="pixM photoAnnonce" onmouseover="popup_annonce('2005934505','202_3181_2616',$(this));return false;">
              <img width="220" height="146" src="/imagesBien/202/3181/c21_202_3181_2616_9_6A301C58-DF91-4A8C-AB8A-7BCED27DEE92.jpg" alt="Vente appartement - PARIS (75006) - 61.0 m² - 2 pi&egrave;ces" />
            </p>
		</a>
	</div>
    <div class="zone-text-loupe">  
	    <a href="/trouver_logement/detail/2005934505/" onclick="google_tag_event('bien,clic_sur_listing,202_3181_2616');return go_detail(this);">
          <h3>
            
            PARIS&nbsp;&nbsp;<span class="font14">75006</span>
            
          </h3>
          <h4 class="detail_vignette">
	          Appartement F2 <br />61,0 m&sup2; , 2 pièces
          </h4>
		  <span class="infoZOOM">Voir détail</span>
		</a>
	</div>
</div>

				</li>
					
					
				
				<li  class="annonce">
					<script>	
				google_tag_event('bien,vu_sur_listing,202_3181_1902');
</script>
<div class="contentAnnonce" id="bien_1279568267" data-uid="1279568267">
	<div class="zone-photo-exclu">
	    <a href="/trouver_logement/detail/1279568267/" onclick="google_tag_event('bien,clic_sur_listing,202_3181_1902');return go_detail(this);">
            <div class="price">3 600 000&euro; <span class="font20"></span></div>
            
            <p class="pixM photoAnnonce" onmouseover="popup_annonce('1279568267','202_3181_1902',$(this));return false;">
              <img width="220" height="146" src="/imagesBien/202/3181/c21_202_3181_1902_9_1C70CE1B-9BA5-4A37-AA3C-D54E388CE8E2.jpg" alt="Vente appartement - PARIS (75006) - 194.3 m² - 7 pi&egrave;ces" />
            </p>
		</a>
	</div>
    <div class="zone-text-loupe">  
	    <a href="/trouver_logement/detail/1279568267/" onclick="google_tag_event('bien,clic_sur_listing,202_3181_1902');return go_detail(this);">
          <h3>
            
            PARIS&nbsp;&nbsp;<span class="font14">75006</span>
            
          </h3>
          <h4 class="detail_vignette">
	          Appartement T7 <br />194,35 m&sup2; , 7 pièces
          </h4>
		  <span class="infoZOOM">Voir détail</span>
		</a>
	</div>
</div>

				</li>
					
					
				
				<li  class="annonce margR0">
					<script>	
				google_tag_event('bien,vu_sur_listing,202_2154_20991');
</script>
<div class="contentAnnonce" id="bien_2053306151" data-uid="2053306151">
	<div class="zone-photo-exclu">
	    <a href="/trouver_logement/detail/2053306151/" onclick="google_tag_event('bien,clic_sur_listing,202_2154_20991');return go_detail(this);">
            <div class="price">785 000&euro; <span class="font20"></span></div>
            
            <span class="infoEXCLU">
             
               Mandat Confiance / Exclusivité
            </span>
            
            <p class="pixM photoAnnonce" onmouseover="popup_annonce('2053306151','202_2154_20991',$(this));return false;">
              <img width="220" height="146" src="/imagesBien/202/2154/c21_202_2154_20991_9_1AE7E8B3-DB78-4E79-BF74-AED07CD10622.jpg" alt="Vente appartement - PARIS (75009) - 54.6 m² - 4 pi&egrave;ces" />
            </p>
		</a>
	</div>
    <div class="zone-text-loupe">  
	    <a href="/trouver_logement/detail/2053306151/" onclick="google_tag_event('bien,clic_sur_listing,202_2154_20991');return go_detail(this);">
          <h3>
            
            PARIS&nbsp;&nbsp;<span class="font14">75009</span>
            
          </h3>
          <h4 class="detail_vignette">
	          Appartement Duplex <br />54,6 m&sup2; , 4 pièces
          </h4>
		  <span class="infoZOOM">Voir détail</span>
		</a>
	</div>
</div>

				</li>
					
					
				
				<li  class="annonce">
					<script>	
				google_tag_event('bien,vu_sur_listing,202_557_43949');
</script>
<div class="contentAnnonce" id="bien_2113274702" data-uid="2113274702">
	<div class="zone-photo-exclu">
	    <a href="/trouver_logement/detail/2113274702/" onclick="google_tag_event('bien,clic_sur_listing,202_557_43949');return go_detail(this);">
            <div class="price">1 750 000&euro; <span class="font20"></span></div>
            
            <span class="infoEXCLU">
             
               Mandat Confiance / Exclusivité
            </span>
            
            <p class="pixM photoAnnonce" onmouseover="popup_annonce('2113274702','202_557_43949',$(this));return false;">
              <img width="220" height="146" src="/imagesBien/202/557/c21_202_557_43949_9_E2CC46EA-97FA-4BFC-9679-BA397D7DFD3F.jpg" alt="Vente appartement - PARIS (75012) - 138.0 m² - 6 pi&egrave;ces" />
            </p>
		</a>
	</div>
    <div class="zone-text-loupe">  
	    <a href="/trouver_logement/detail/2113274702/" onclick="google_tag_event('bien,clic_sur_listing,202_557_43949');return go_detail(this);">
          <h3>
            
            PARIS&nbsp;&nbsp;<span class="font14">75012</span>
            
          </h3>
          <h4 class="detail_vignette">
	          Appartement <br />138,02 m&sup2; , 6 pièces
          </h4>
		  <span class="infoZOOM">Voir détail</span>
		</a>
	</div>
</div>

				</li>
					
					
				
				<li  class="annonce">
					<script>	
				google_tag_event('bien,vu_sur_listing,202_452_20525');
</script>
<div class="contentAnnonce" id="bien_2121208422" data-uid="2121208422">
	<div class="zone-photo-exclu">
	    <a href="/trouver_logement/detail/2121208422/" onclick="google_tag_event('bien,clic_sur_listing,202_452_20525');return go_detail(this);">
            <div class="price">425 000&euro; <span class="font20"></span></div>
            
            <p class="pixM photoAnnonce" onmouseover="popup_annonce('2121208422','202_452_20525',$(this));return false;">
              <img width="220" height="146" src="/imagesBien/202/452/c21_202_452_20525_9_09AADBB6-BF43-4276-B984-33032B9CBD9C.jpg" alt="Vente appartement - PARIS (75015) - 43.4 m² - 2 pi&egrave;ces" />
            </p>
		</a>
	</div>
    <div class="zone-text-loupe">  
	    <a href="/trouver_logement/detail/2121208422/" onclick="google_tag_event('bien,clic_sur_listing,202_452_20525');return go_detail(this);">
          <h3>
            
            PARIS&nbsp;&nbsp;<span class="font14">75015</span>
            
          </h3>
          <h4 class="detail_vignette">
	          Appartement F2 <br />43,38 m&sup2; , 2 pièces
          </h4>
		  <span class="infoZOOM">Voir détail</span>
		</a>
	</div>
</div>

				</li>
					
					
				
				<li  class="annonce margR0">
					<script>	
				google_tag_event('bien,vu_sur_listing,202_3196_158');
</script>
<div class="contentAnnonce" id="bien_2064867740" data-uid="2064867740">
	<div class="zone-photo-exclu">
	    <a href="/trouver_logement/detail/2064867740/" onclick="google_tag_event('bien,clic_sur_listing,202_3196_158');return go_detail(this);">
            <div class="price">359 000&euro; <span class="font20"></span></div>
            
            <p class="pixM photoAnnonce" onmouseover="popup_annonce('2064867740','202_3196_158',$(this));return false;">
              <img width="220" height="146" src="/imagesBien/202/3196/c21_202_3196_158_9_A660E053-B02E-4469-8730-B2AF7104E09F.jpg" alt="Vente appartement - PARIS (75003) - 26.0 m² - 2 pi&egrave;ces" />
            </p>
		</a>
	</div>
    <div class="zone-text-loupe">  
	    <a href="/trouver_logement/detail/2064867740/" onclick="google_tag_event('bien,clic_sur_listing,202_3196_158');return go_detail(this);">
          <h3>
            
            PARIS&nbsp;&nbsp;<span class="font14">75003</span>
            
          </h3>
          <h4 class="detail_vignette">
	          Appartement F2 <br />26,0 m&sup2; , 2 pièces
          </h4>
		  <span class="infoZOOM">Voir détail</span>
		</a>
	</div>
</div>

				</li>
					
					
				
				<li  class="annonce">
					<script>	
				google_tag_event('bien,vu_sur_listing,202_2907_26053');
</script>
<div class="contentAnnonce" id="bien_1988294646" data-uid="1988294646">
	<div class="zone-photo-exclu">
	    <a href="/trouver_logement/detail/1988294646/" onclick="google_tag_event('bien,clic_sur_listing,202_2907_26053');return go_detail(this);">
            <div class="price">779 000&euro; <span class="font20"></span></div>
            
            <span class="infoEXCLU">
             
               Mandat Confiance / Exclusivité
            </span>
            
            <p class="pixM photoAnnonce" onmouseover="popup_annonce('1988294646','202_2907_26053',$(this));return false;">
              <img width="220" height="146" src="/imagesBien/202/2907/c21_202_2907_26053_9_8A4FA6B6-3FD4-464F-8BCB-02C91FFD0FF7.jpg" alt="Vente appartement - PARIS (75012) - 64.0 m² - 3 pi&egrave;ces" />
            </p>
		</a>
	</div>
    <div class="zone-text-loupe">  
	    <a href="/trouver_logement/detail/1988294646/" onclick="google_tag_event('bien,clic_sur_listing,202_2907_26053');return go_detail(this);">
          <h3>
            
            PARIS&nbsp;&nbsp;<span class="font14">75012</span>
            
          </h3>
          <h4 class="detail_vignette">
	          Appartement F3 <br />64,0 m&sup2; , 3 pièces
          </h4>
		  <span class="infoZOOM">Voir détail</span>
		</a>
	</div>
</div>

				</li>
					
					
				
				<li  class="annonce">
					<script>	
				google_tag_event('bien,vu_sur_listing,202_3165_1044');
</script>
<div class="contentAnnonce" id="bien_2074915600" data-uid="2074915600">
	<div class="zone-photo-exclu">
	    <a href="/trouver_logement/detail/2074915600/" onclick="google_tag_event('bien,clic_sur_listing,202_3165_1044');return go_detail(this);">
            <div class="price">432 990&euro; <span class="font20"></span></div>
            
            <p class="pixM photoAnnonce" onmouseover="popup_annonce('2074915600','202_3165_1044',$(this));return false;">
              <img width="220" height="146" src="/imagesBien/202/3165/c21_202_3165_1044_9_8CD67CEE-E1E0-4EAE-B07E-A042DA8FC158.jpg" alt="Vente appartement - PARIS (75015) - 36.0 m² - 2 pi&egrave;ces" />
            </p>
		</a>
	</div>
    <div class="zone-text-loupe">  
	    <a href="/trouver_logement/detail/2074915600/" onclick="google_tag_event('bien,clic_sur_listing,202_3165_1044');return go_detail(this);">
          <h3>
            
            PARIS&nbsp;&nbsp;<span class="font14">75015</span>
            
          </h3>
          <h4 class="detail_vignette">
	          Appartement F2 <br />36,0 m&sup2; , 2 pièces
          </h4>
		  <span class="infoZOOM">Voir détail</span>
		</a>
	</div>
</div>

				</li>
					
					
				
				<li  class="annonce margR0">
					<script>	
				google_tag_event('bien,vu_sur_listing,202_1131_23256');
</script>
<div class="contentAnnonce" id="bien_2068879842" data-uid="2068879842">
	<div class="zone-photo-exclu">
	    <a href="/trouver_logement/detail/2068879842/" onclick="google_tag_event('bien,clic_sur_listing,202_1131_23256');return go_detail(this);">
            <div class="price">835 000&euro; <span class="font20"></span></div>
            
            <span class="infoEXCLU">
             
               Mandat Confiance / Exclusivité
            </span>
            
            <p class="pixM photoAnnonce" onmouseover="popup_annonce('2068879842','202_1131_23256',$(this));return false;">
              <img width="220" height="146" src="/imagesBien/202/1131/c21_202_1131_23256_9_1B953BBF-BA62-4818-A40A-15EAFBF196B9.jpg" alt="Vente appartement - PARIS (75015) - 67.5 m² - 3 pi&egrave;ces" />
            </p>
		</a>
	</div>
    <div class="zone-text-loupe">  
	    <a href="/trouver_logement/detail/2068879842/" onclick="google_tag_event('bien,clic_sur_listing,202_1131_23256');return go_detail(this);">
          <h3>
            
            PARIS&nbsp;&nbsp;<span class="font14">75015</span>
            
          </h3>
          <h4 class="detail_vignette">
	          Appartement T3 <br />67,5 m&sup2; , 3 pièces
          </h4>
		  <span class="infoZOOM">Voir détail</span>
		</a>
	</div>
</div>

				</li>
					
					
				
				<li  class="annonce">
					<script>	
				google_tag_event('bien,vu_sur_listing,202_480_25968');
</script>
<div class="contentAnnonce" id="bien_1798013111" data-uid="1798013111">
	<div class="zone-photo-exclu">
	    <a href="/trouver_logement/detail/1798013111/" onclick="google_tag_event('bien,clic_sur_listing,202_480_25968');return go_detail(this);">
            <div class="price">277 000&euro; <span class="font20"></span></div>
            
            <span class="infoEXCLU">
             
               Mandat Confiance / Exclusivité
            </span>
            
            <p class="pixM photoAnnonce" onmouseover="popup_annonce('1798013111','202_480_25968',$(this));return false;">
              <img width="220" height="146" src="/imagesBien/202/480/c21_202_480_25968_9_692125BB-E917-4C7B-B29C-E2504C8758A1.jpg" alt="Vente appartement - PARIS (75012) - 26.1 m² - 1 pi&egrave;ce" />
            </p>
		</a>
	</div>
    <div class="zone-text-loupe">  
	    <a href="/trouver_logement/detail/1798013111/" onclick="google_tag_event('bien,clic_sur_listing,202_480_25968');return go_detail(this);">
          <h3>
            
            PARIS&nbsp;&nbsp;<span class="font14">75012</span>
            
          </h3>
          <h4 class="detail_vignette">
	          Appartement F1 <br />26,05 m&sup2; , 1 pièce
          </h4>
		  <span class="infoZOOM">Voir détail</span>
		</a>
	</div>
</div>

				</li>
					
					
				
				<li  class="annonce">
					<script>	
				google_tag_event('bien,vu_sur_listing,202_2463_15792');
</script>
<div class="contentAnnonce" id="bien_2056430563" data-uid="2056430563">
	<div class="zone-photo-exclu">
	    <a href="/trouver_logement/detail/2056430563/" onclick="google_tag_event('bien,clic_sur_listing,202_2463_15792');return go_detail(this);">
            <div class="price">636 000&euro; <span class="font20"></span></div>
            
            <span class="infoEXCLU">
             
               Mandat Confiance / Exclusivité
            </span>
            
            <p class="pixM photoAnnonce" onmouseover="popup_annonce('2056430563','202_2463_15792',$(this));return false;">
              <img width="220" height="146" src="/imagesBien/202/2463/c21_202_2463_15792_9_A23BC488-2699-42BE-BF99-8A5192CA937E.jpg" alt="Vente appartement - PARIS (75004) - 40.8 m² - 2 pi&egrave;ces" />
            </p>
		</a>
	</div>
    <div class="zone-text-loupe">  
	    <a href="/trouver_logement/detail/2056430563/" onclick="google_tag_event('bien,clic_sur_listing,202_2463_15792');return go_detail(this);">
          <h3>
            
            PARIS&nbsp;&nbsp;<span class="font14">75004</span>
            
          </h3>
          <h4 class="detail_vignette">
	          Appartement F2 <br />40,79 m&sup2; , 2 pièces
          </h4>
		  <span class="infoZOOM">Voir détail</span>
		</a>
	</div>
</div>

				</li>
					
					
				
				<li  class="annonce margR0">
					<script>	
				google_tag_event('bien,vu_sur_listing,202_1110_19483');
</script>
<div class="contentAnnonce" id="bien_2094400260" data-uid="2094400260">
	<div class="zone-photo-exclu">
	    <a href="/trouver_logement/detail/2094400260/" onclick="google_tag_event('bien,clic_sur_listing,202_1110_19483');return go_detail(this);">
            <div class="price">517 000&euro; <span class="font20"></span></div>
            
            <span class="infoEXCLU">
             
               Mandat Confiance / Exclusivité
            </span>
            
            <p class="pixM photoAnnonce" onmouseover="popup_annonce('2094400260','202_1110_19483',$(this));return false;">
              <img width="220" height="146" src="/imagesBien/202/1110/c21_202_1110_19483_9_5DCFCBFC-F06B-4D3D-B991-93F734D44A62.jpg" alt="Vente appartement - PARIS (75019) - 36.1 m² - 2 pi&egrave;ces" />
            </p>
		</a>
	</div>
    <div class="zone-text-loupe">  
	    <a href="/trouver_logement/detail/2094400260/" onclick="google_tag_event('bien,clic_sur_listing,202_1110_19483');return go_detail(this);">
          <h3>
            
            PARIS&nbsp;&nbsp;<span class="font14">75019</span>
            
          </h3>
          <h4 class="detail_vignette">
	          Appartement Duplex <br />36,06 m&sup2; , 2 pièces
          </h4>
		  <span class="infoZOOM">Voir détail</span>
		</a>
	</div>
</div>

				</li>
					
					
				
				<li  class="annonce">
					<script>	
				google_tag_event('bien,vu_sur_listing,202_3291_43960');
</script>
<div class="contentAnnonce" id="bien_2109679537" data-uid="2109679537">
	<div class="zone-photo-exclu">
	    <a href="/trouver_logement/detail/2109679537/" onclick="google_tag_event('bien,clic_sur_listing,202_3291_43960');return go_detail(this);">
            <div class="price">420 000&euro; <span class="font20"></span></div>
            
            <span class="infoEXCLU">
             
               Mandat Confiance / Exclusivité
            </span>
            
            <p class="pixM photoAnnonce" onmouseover="popup_annonce('2109679537','202_3291_43960',$(this));return false;">
              <img width="220" height="146" src="/imagesBien/202/3291/c21_202_3291_43960_9_57C2A1D0-F198-4CF6-9445-50E3F7BA1B0F.jpg" alt="Vente appartement - PARIS (75014) - 43.0 m² - 2 pi&egrave;ces" />
            </p>
		</a>
	</div>
    <div class="zone-text-loupe">  
	    <a href="/trouver_logement/detail/2109679537/" onclick="google_tag_event('bien,clic_sur_listing,202_3291_43960');return go_detail(this);">
          <h3>
            
            PARIS&nbsp;&nbsp;<span class="font14">75014</span>
            
          </h3>
          <h4 class="detail_vignette">
	          Appartement F2 <br />43,0 m&sup2; , 2 pièces
          </h4>
		  <span class="infoZOOM">Voir détail</span>
		</a>
	</div>
</div>

				</li>
					
					
				
				<li  class="annonce">
					<script>	
				google_tag_event('bien,vu_sur_listing,202_3088_16192');
</script>
<div class="contentAnnonce" id="bien_2114653641" data-uid="2114653641">
	<div class="zone-photo-exclu">
	    <a href="/trouver_logement/detail/2114653641/" onclick="google_tag_event('bien,clic_sur_listing,202_3088_16192');return go_detail(this);">
            <div class="price">510 000&euro; <span class="font20"></span></div>
            
            <span class="infoEXCLU">
             
               Mandat Confiance / Exclusivité
            </span>
            
            <p class="pixM photoAnnonce" onmouseover="popup_annonce('2114653641','202_3088_16192',$(this));return false;">
              <img width="220" height="146" src="/imagesBien/202/3088/c21_202_3088_16192_9_58A6FC08-C608-433E-81C4-F3BDB4A34AA5.jpg" alt="Vente appartement - PARIS (75014) - 40.0 m² - 2 pi&egrave;ces" />
            </p>
		</a>
	</div>
    <div class="zone-text-loupe">  
	    <a href="/trouver_logement/detail/2114653641/" onclick="google_tag_event('bien,clic_sur_listing,202_3088_16192');return go_detail(this);">
          <h3>
            
            PARIS&nbsp;&nbsp;<span class="font14">75014</span>
            
          </h3>
          <h4 class="detail_vignette">
	          Appartement F2 <br />40,0 m&sup2; , 2 pièces
          </h4>
		  <span class="infoZOOM">Voir détail</span>
		</a>
	</div>
</div>

				</li>
					
					
				
				<li  class="annonce margR0">
					<script>	
				google_tag_event('bien,vu_sur_listing,202_3332_619');
</script>
<div class="contentAnnonce" id="bien_2097459157" data-uid="2097459157">
	<div class="zone-photo-exclu">
	    <a href="/trouver_logement/detail/2097459157/" onclick="google_tag_event('bien,clic_sur_listing,202_3332_619');return go_detail(this);">
            <div class="price">1 415 000&euro; <span class="font20"></span></div>
            
            <p class="pixM photoAnnonce" onmouseover="popup_annonce('2097459157','202_3332_619',$(this));return false;">
              <img width="220" height="146" src="/imagesBien/202/3332/c21_202_3332_619_9_2863B904-98F2-4D32-8AFE-D8F6760711ED.jpg" alt="Vente appartement - PARIS (75020) - 144.0 m² - 6 pi&egrave;ces" />
            </p>
		</a>
	</div>
    <div class="zone-text-loupe">  
	    <a href="/trouver_logement/detail/2097459157/" onclick="google_tag_event('bien,clic_sur_listing,202_3332_619');return go_detail(this);">
          <h3>
            
            PARIS&nbsp;&nbsp;<span class="font14">75020</span>
            
          </h3>
          <h4 class="detail_vignette">
	          Appartement F6 <br />144,0 m&sup2; , 6 pièces
          </h4>
		  <span class="infoZOOM">Voir détail</span>
		</a>
	</div>
</div>

				</li>
					
					
				
				<li  class="annonce">
					<script>	
				google_tag_event('bien,vu_sur_listing,202_470_8663');
</script>
<div class="contentAnnonce" id="bien_2094532162" data-uid="2094532162">
	<div class="zone-photo-exclu">
	    <a href="/trouver_logement/detail/2094532162/" onclick="google_tag_event('bien,clic_sur_listing,202_470_8663');return go_detail(this);">
            <div class="price">1 300 000&euro; <span class="font20"></span></div>
            
            <p class="pixM photoAnnonce" onmouseover="popup_annonce('2094532162','202_470_8663',$(this));return false;">
              <img width="220" height="146" src="/imagesBien/202/470/c21_202_470_8663_9_078A80DE-8248-413D-9047-0DA66AFBB416.jpg" alt="Vente appartement - PARIS (75016) - 129.5 m² - 7 pi&egrave;ces" />
            </p>
		</a>
	</div>
    <div class="zone-text-loupe">  
	    <a href="/trouver_logement/detail/2094532162/" onclick="google_tag_event('bien,clic_sur_listing,202_470_8663');return go_detail(this);">
          <h3>
            
            PARIS&nbsp;&nbsp;<span class="font14">75016</span>
            
          </h3>
          <h4 class="detail_vignette">
	          Appartement F7 <br />129,5 m&sup2; , 7 pièces
          </h4>
		  <span class="infoZOOM">Voir détail</span>
		</a>
	</div>
</div>

				</li>
					
					
				
				<li  class="annonce">
					<script>	
				google_tag_event('bien,vu_sur_listing,202_470_8627');
</script>
<div class="contentAnnonce" id="bien_2051666729" data-uid="2051666729">
	<div class="zone-photo-exclu">
	    <a href="/trouver_logement/detail/2051666729/" onclick="google_tag_event('bien,clic_sur_listing,202_470_8627');return go_detail(this);">
            <div class="price">580 000&euro; <span class="font20"></span></div>
            
            <span class="infoEXCLU">
             
               Mandat Confiance / Exclusivité
            </span>
            
            <p class="pixM photoAnnonce" onmouseover="popup_annonce('2051666729','202_470_8627',$(this));return false;">
              <img width="220" height="146" src="/imagesBien/202/470/c21_202_470_8627_9_BC1FFE07-004C-4D22-9DFA-1A0088B5EDE2.jpg" alt="Vente appartement - PARIS (75016) - 61.0 m² - 3 pi&egrave;ces" />
            </p>
		</a>
	</div>
    <div class="zone-text-loupe">  
	    <a href="/trouver_logement/detail/2051666729/" onclick="google_tag_event('bien,clic_sur_listing,202_470_8627');return go_detail(this);">
          <h3>
            
            PARIS&nbsp;&nbsp;<span class="font14">75016</span>
            
          </h3>
          <h4 class="detail_vignette">
	          Appartement F3 <br />61,0 m&sup2; , 3 pièces
          </h4>
		  <span class="infoZOOM">Voir détail</span>
		</a>
	</div>
</div>

				</li>
					
					
				
				<li id="derniereAnnonce" class="annonce margR0">
					<script>	
				google_tag_event('bien,vu_sur_listing,202_470_8543');
</script>
<div class="contentAnnonce" id="bien_1994116901" data-uid="1994116901">
	<div class="zone-photo-exclu">
	    <a href="/trouver_logement/detail/1994116901/" onclick="google_tag_event('bien,clic_sur_listing,202_470_8543');return go_detail(this);">
            <div class="price">957 800&euro; <span class="font20"></span></div>
            
            <p class="pixM photoAnnonce" onmouseover="popup_annonce('1994116901','202_470_8543',$(this));return false;">
              <img width="220" height="146" src="/imagesBien/202/470/c21_202_470_8543_9_00914C8C-107D-4691-B83E-BB857F12C0AF.jpg" alt="Vente appartement - PARIS (75016) - 79.1 m² - 4 pi&egrave;ces" />
            </p>
		</a>
	</div>
    <div class="zone-text-loupe">  
	    <a href="/trouver_logement/detail/1994116901/" onclick="google_tag_event('bien,clic_sur_listing,202_470_8543');return go_detail(this);">
          <h3>
            
            PARIS&nbsp;&nbsp;<span class="font14">75016</span>
            
          </h3>
          <h4 class="detail_vignette">
	          Appartement F4 <br />79,1 m&sup2; , 4 pièces
          </h4>
		  <span class="infoZOOM">Voir détail</span>
		</a>
	</div>
</div>

				</li>
					
					
				
				
				
				</ul>
		
				
				<div id="blocPAGINATION" class="zoneFOOTER">
					
<div class="pagination_seo">
    <div class="elementL">
        <div class="btnNB_PAGE">
            <ul >
                
                

                <li class="active">
                  <a href="/annonces/achat-maison-appartement/v-paris/s-0-/st-0-/b-0-/tri-date-desc/page-1/" onclick="return load_liste_biens('?num_page=1')">1</a></li>
                

                <li >
                  <a href="/annonces/achat-maison-appartement/v-paris/s-0-/st-0-/b-0-/tri-date-desc/page-2/" onclick="return load_liste_biens('?num_page=2')">2</a></li>
                

                <li >
                  <a href="/annonces/achat-maison-appartement/v-paris/s-0-/st-0-/b-0-/tri-date-desc/page-3/" onclick="return load_liste_biens('?num_page=3')">3</a></li>
                

                <li >
                  <a href="/annonces/achat-maison-appartement/v-paris/s-0-/st-0-/b-0-/tri-date-desc/page-4/" onclick="return load_liste_biens('?num_page=4')">4</a></li>
                
                
                <li class="no-active"><a>...</a></li>
                <li><a href="/annonces/achat-maison-appartement/v-paris/s-0-/st-0-/b-0-/tri-date-desc/page-9/" onclick="return load_liste_biens('?num_page=9')">Fin</a></li>
                <li class="btnSUIV_PREC suivant"><a href="/annonces/achat-maison-appartement/v-paris/s-0-/st-0-/b-0-/tri-date-desc/page-2/" onclick="return load_liste_biens('?num_page=2')">suivant</a></li>
                
            </ul>
          
        </div>
    </div><!-- /elementL -->
    <div class="elementR">
        <div class="btnNB_ANNONCE">
            <label>biens / page</label>
            <select name="num_par_page" class="customSELECT ">
                
                <option selected="selected">
                    30
                </option>
                
                <option >
                    60
                </option>
                
                <option >
                    90
                </option>
                
            </select>
        </div>
    </div><!-- /elementR -->
</div><!-- /pagination_seo -->


				<div class="reset"></div>
				</div>
				<div class="reset"></div>
			</div>
		
			
			
		</div>
		
<!-- 
<div id="blocRECHERCHE" style="display:block">
  
<div id="moteurAFFINEE" >  
	<form id="formRECHAFFINEE" name="formRECHAFFINEE" action="." method="POST" onSubmit="return checkTypedField(this.localisation, $('#msg_erreur_ou'))">
    	<input id="id_agence" name="agence" type="hidden" />    
		
		<ul>
			<li>
				<div class="zone-label">
					<label>Vous recherchez</label>
				</div>
				<div class="zone-field zone-checkbox mumBOX">
					
						<div class="BTN"><input id="id_types_biens_0" name="types_biens" type="hidden" value="maison" /><a id="btn-id_types_biens_0" class="actif types_biens" onclick="styledCheckBox.check(this, 'types_biens', 'maison')"> Maison</a></div>
						<div class="BTN"><input id="id_types_biens_1" name="types_biens" type="hidden" value="appartement" /><a id="btn-id_types_biens_1" class="actif types_biens" onclick="styledCheckBox.check(this, 'types_biens', 'appartement')"> Appartement</a></div>
						<div class="morePOPUP"></div>
						<div class="boxMORE" id="typeUNIVERS">
						  
							  
							  <div class="BTN"><a id="btn-id_age_bien_0" class="inactif age_bien" onclick="styledCheckBox.check(this, 'age_bien', 'ancien')"> Ancien</a></div>
							  
							  <div class="BTN"><a id="btn-id_age_bien_1" class="inactif age_bien" onclick="styledCheckBox.check(this, 'age_bien', 'neuf')"> Neuf</a></div>
							  								  
						  
						  <div class="BTN"><a id="btn-id_types_biens_2" class="inactif types_biens" onclick="styledCheckBox.check(this, 'types_biens', 'terrain')"> Terrain</a></div>
						  <div class="BTN"><a id="btn-id_types_biens_3" class="inactif types_biens" onclick="styledCheckBox.check(this, 'types_biens', 'parking')"> Parking</a></div>
						  
							  <div class="BTN"><a id="btn-id_types_biens_6" class="inactif types_biens" onclick="styledCheckBox.check(this, 'types_biens', 'immeuble')"> Immeuble</a></div>
							  <div class="BTN"><a id="btn-id_types_biens_7" class="inactif types_biens" onclick="styledCheckBox.check(this, 'types_biens', 'divers')"> Divers</a></div>
						  
						</div>
					
				</div>
			</li>
			<li id="moteurAffineeTop">
				<div class="zone-label">
					<label>A quel endroit</label>
				</div>
				<div class="zone-field">					
					<input class="fL" id="id_localisation" name="localisation" placeholder="Ville, code postal" type="text" value="v-paris" /><script>$(document).ready(function() {$("#id_localisation").tokenInput("/autocomplete/localite/", {tokenLimit:null,theme:"facebook", prePopulate:[{"id": "v-paris", "name": "paris"}],onReady:function(){recupSelection('id_localisation');},preventDuplicates:true,hintText:"",placeholder:"Département, Ville, Code Postal, arrdt...",searchingText:"Recherche en cours...",onAdd:function(item){reverseListe(item,"id_localisation");}}); });</script>
			    	<ul id="msg_erreur_ou" class="errorlist displayNone"><li>Vous devez renseigner un lieu au minimum.</li></ul>
          			<input id="hiddenVal" type="hidden" />
				</div>
			</li>
			<li>
				<div class="zone-label">
					<label>Étendre à</label>        				
				</div>
				<div class="zone-field">
					<select class="customSELECT" id="id_etendue" name="etendue">
<option value="0"></option>
<option value="5">5 km</option>
<option value="10">10 km</option>
<option value="15">15 km</option>
</select>
				</div>
			</li>
			<li>
				<div class="zone-label">
					
					<label>Budget maxi</label>
					
				</div>
				<div class="zone-field">
					<div id="slider-id_budget_max" class="slider"></div>
<input type="hidden"  id="id_budget_max" name="budget_max" value="1000000" />
<script>$(document).ready(function() { initSliderSelect("id_budget_max",0,1000000,20000,"€",1000000); });</script>
					
				</div>
			</li>
			<li>
				<div class="zone-label">
					<label>Surface mini</label>
				</div>
				<div class="zone-field">
					<div id="slider-id_surface_min" class="slider"></div>
<input type="hidden"  id="id_surface_min" name="surface_min" value="0" />
<script>$(document).ready(function() { initSliderSelect("id_surface_min",0,400,10,"m²",0); });</script>
					
				</div>
			</li>
			
			<li>
				<div class="zone-label">
					<label>Terrain mini</label>        
				</div>
				<div class="zone-field">
					<div id="slider-id_surface_terrain_min" class="slider"></div>
<input type="hidden"  id="id_surface_terrain_min" name="surface_terrain_min" value="0" />
<script>$(document).ready(function() { initSliderSelect("id_surface_terrain_min",0,4000,10,"m²",0); });</script>
					
				</div>
			</li>
			
			<li>
				<div class="zone-label">
					<label>Nombre de pièces</label>
				</div>
				<div class="zone-field zone-checkbox">
					
						<div class="BTN"><a id="btn-id_nombres_de_pieces_0" class="inactif nombres_de_pieces" onclick="styledCheckBox.check(this, 'nombres_de_pieces', '1')"> 1</a></div>
					
						<div class="BTN"><a id="btn-id_nombres_de_pieces_1" class="inactif nombres_de_pieces" onclick="styledCheckBox.check(this, 'nombres_de_pieces', '2')"> 2</a></div>
					
						<div class="BTN"><a id="btn-id_nombres_de_pieces_2" class="inactif nombres_de_pieces" onclick="styledCheckBox.check(this, 'nombres_de_pieces', '3')"> 3</a></div>
					
						<div class="BTN"><a id="btn-id_nombres_de_pieces_3" class="inactif nombres_de_pieces" onclick="styledCheckBox.check(this, 'nombres_de_pieces', '4')"> 4</a></div>
					
						<div class="BTN"><a id="btn-id_nombres_de_pieces_4" class="inactif nombres_de_pieces" onclick="styledCheckBox.check(this, 'nombres_de_pieces', '5')"> 5+</a></div>
					
				</div>
			</li>
			<li>
				<a class="underline fL black font16" href="/commerce_entreprises/acheter/" onclick="google_tag_event('page-univer,moteur-vente,clic-btn-ICE-popup-QUOI');">Entreprise / Commerce</a>
				<div class="lienMoreRech floatR">
				  
				  <div id="div_ref_moteur_affinee" class="rechParRef">
					<a id="fermerRechParRef" class="pictoBtnFermer"></a>
					<div class="content_rechParRef">
					  <label>Référence ?</label>
					  <input type="text" placeholder="Entrez votre référence" name="reference" id="form_RECHAFFINEE_ref">
					  <input type="hidden" name="type_transaction" value="vente">
					  <a id="btnRECHERCHE_REF" class="gris">Rechercher</a>
					  <div id="result_bien_ref" style="display: none;"></div>
					</div>
				  </div>
				  
				  <a id="ref_moteur_affinee" class="lienRECH_REF black underline font16">Rechercher par référence</a>				  
				</div>
				
			</li>			
			<li>				
			    
					<div class="blocPLUSDECRITERE">
					  
						  
							  <ul>
								  
									<li><div class="BTN"><a id="btn-id_affinage_0" class="inactif affinage" onclick="styledCheckBox.check(this, 'affinage', 'photo')"> Photo (243)</a></div></li>						
								  
									<li><div class="BTN"><a id="btn-id_affinage_1" class="inactif affinage" onclick="styledCheckBox.check(this, 'affinage', 'visite_virtuelle')"> Vid&eacute;o et/ou visite virtuelle (5)</a></div></li>						
								  
									<li><div class="BTN"><a id="btn-id_affinage_2" class="inactif affinage" onclick="styledCheckBox.check(this, 'affinage', 'chauffage_individuel')"> Chauffage Individuel (158)</a></div></li>						
								  
									<li><div class="BTN"><a id="btn-id_affinage_3" class="inactif affinage" onclick="styledCheckBox.check(this, 'affinage', 'chauffage_collectif')"> Chauffage Collectif (85)</a></div></li>						
								  
									<li><div class="BTN"><a id="btn-id_affinage_4" class="inactif affinage" onclick="styledCheckBox.check(this, 'affinage', 'parking')"> Parking (40)</a></div></li>						
								  
									<li><div class="BTN"><a id="btn-id_affinage_5" class="inactif affinage" onclick="styledCheckBox.check(this, 'affinage', 'terrasse_balcon_jardin')"> Terrasse / Balcon / Jardin (60)</a></div></li>						
								  
									<li><div class="BTN"><a id="btn-id_affinage_6" class="inactif affinage" onclick="styledCheckBox.check(this, 'affinage', 'cheminee')"> Chemin&eacute;e (30)</a></div></li>						
								  
									<li><div class="BTN"><a id="btn-id_affinage_7" class="inactif affinage" onclick="styledCheckBox.check(this, 'affinage', 'piscine')"> Piscine (1)</a></div></li>						
								  
									<li><div class="BTN"><a id="btn-id_affinage_8" class="inactif affinage" onclick="styledCheckBox.check(this, 'affinage', 'cave_ou_sous_sol')"> Cave et/ou sous-sol (146)</a></div></li>						
								  
									<li><div class="BTN"><a id="btn-id_affinage_9" class="inactif affinage" onclick="styledCheckBox.check(this, 'affinage', 'acces_handicape')"> Acc&egrave;s Handicap&eacute; (5)</a></div></li>						
								  
							  </ul>
						 
					 
				   </div>
			  
			</li>
		</ul>
					
			<div class="zone-btn-extra">
				<ul>
					
					<li>
						<a id="btnALERTE" onclick="google_tag_event('bien,liste-bien,clic-CREER-ALERTE');">
							Cr&eacute;er une alerte
						</a>
					</li>
					
					
					<li>
						<a id="lienPLUSCRITERES" class="bouton-critere" onclick="google_tag_event('bien,liste-bien,clic-PLUS-CRITERES');">
							+ de critères
						</a>
					</li>
					
				</ul>
			</div>
		
	</form>
</div>
</div>
<div class="reset"></div>
 -->

<!-- test semantic_bosster -->
<!--  -->

<!-- <div id="blocPAGINATION" class="zoneTOP">
  
  <div class="btnCRITERE_TRI">
    <ul>
     	<li><label>Trier par : </label></li>
      
          
          <li>
          	<a href="#" onclick="return load_liste_biens('?tri=prix&order=asc')">
				<span>Prix</span><span class="tri_neutre"></span>
          	</a>
          </li>
          
      
          
          <li>
          	<a href="#" onclick="return load_liste_biens('?tri=surface&order=asc')">
				<span>Surface</span><span class="tri_neutre"></span>
          	</a>
          </li>
          
      
          
          <li>
          	<a href="#" onclick="return load_liste_biens('?tri=nb_pieces&order=asc')">
				<span>Nb Pièces</span><span class="tri_neutre"></span>
          	</a>
          </li>
          
      
          
          <li>
          	<a href="#" onclick="return load_liste_biens('?tri=ville&order=asc')">
				<span>Ville</span><span class="tri_neutre"></span>
          	</a>
          </li>
          
      
          
          <li>
          	<a href="#" onclick="return load_liste_biens('?tri=dpe&order=asc')">
				<span>DPE</span><span class="tri_neutre"></span>
          	</a>
          </li>
          
      
          
          <li>
          	<a href="#" onclick="return load_liste_biens('?tri=exclusivite&order=asc')">
				<span>Exclusivité</span><span class="tri_neutre"></span>
          	</a>
          </li>
          
      
          
          <li>
          	<a class="actif" href="#" onclick="return load_liste_biens('?tri=date&order=asc')">		<span>Date</span><span class="tri_desc"></span>
          	</a>
          </li>
          
      
    </ul>
  </div>
  
</div> -->
<hr>
<div class="reset"></div>
		
		<section  class="infos-agence-mobile">
				<div id="plus_infos">
						
							
<link rel="stylesheet" type="text/css" href="/js/leaflet/leaflet.css" />
<link rel="stylesheet" type="text/css" href="/js/mappy/L.Mappy.css" />
<script type="text/javascript" src="/js/leaflet/leaflet.js"></script>
<script type="text/javascript" src="/js/mappy/L.Mappy.js"></script>
<script type="text/javascript" src="/js/gmap.js"></script>
<script>

  var AGENCES = [{"nom": "CENTURY 21 Charles Michels", "tel": "0153953838", "uid": 81330, "ville": "PARIS", "adresse": "78  avenue Emile Zola", "source": "202/734/webmaster_1_202_734_0_2_0.jpg", "lat": 48.8465569172967, "mail": "charles.michels@century21.fr", "lng": 2.28673057497178, "cp": "75015"}, {"nom": "CENTURY 21 Olympiades", "tel": "0158892121", "uid": 81558, "ville": "PARIS", "adresse": "72  rue de Tolbiac", "source": "202/2257/webmaster_1_202_2257_0_2_0.jpg", "lat": 48.8271813948225, "mail": "olympiades@century21.fr", "lng": 2.36723259053568, "cp": "75013"}, {"nom": "CENTURY 21 Lutèce Immobilier", "tel": "0153621321", "uid": 82336, "ville": "PARIS", "adresse": "164  rue de Tolbiac", "source": "202/1102/webmaster_1_202_1102_0_2_0.jpg", "lat": 48.8259622623299, "mail": "lutece.immobilier@century21france.fr", "lng": 2.35281029064438, "cp": "75013"}, {"nom": "CENTURY 21 Bolivar Jourdain", "tel": "0153198686", "uid": 82450, "ville": "PARIS", "adresse": "36  avenue Simon Bolivar", "source": "202/1110/webmaster_1_202_1110_0_2_0.jpg", "lat": 48.8751221724964, "mail": "bolivar.jourdain@century21france.fr", "lng": 2.38249503548675, "cp": "75019"}, {"nom": "CENTURY 21 Patrimoine 17", "tel": "0142260800", "uid": 82638, "ville": "PARIS", "adresse": "52  rue des Moines", "source": "202/438/webmaster_1_202_438_0_2_0.jpg", "lat": 48.8899805779889, "mail": "ag438@century21france.fr", "lng": 2.3205775033522, "cp": "75017"}, {"nom": "CENTURY 21 Action Pierre Vaugirard", "tel": "0156085621", "uid": 82666, "ville": "PARIS", "adresse": "377  bis rue de Vaugirard", "source": "202/1131/webmaster_1_202_1131_0_2_0.jpg", "lat": 48.8359516882755, "mail": "actionpierrevaugirard@century21.fr", "lng": 2.29378071696251, "cp": "75015"}, {"nom": "CENTURY 21 Sorim", "tel": "0142590909", "uid": 82696, "ville": "PARIS", "adresse": "43  rue Ordener", "source": "202/442/webmaster_1_202_442_0_2_0.jpg", "lat": 48.890898805604, "mail": "ag442@century21france.fr", "lng": 2.35286068864379, "cp": "75018"}, {"nom": "CENTURY 21 Agimmo", "tel": "0148289050", "uid": 82724, "ville": "PARIS", "adresse": "49  rue de Vouillé", "source": "202/452/webmaster_1_202_452_0_2_0.jpg", "lat": 48.8338022597724, "mail": "agimmo@century21.fr", "lng": 2.30857876930722, "cp": "75015"}, {"nom": "CENTURY 21 Alpha Hoche", "tel": "0145630660", "uid": 82788, "ville": "PARIS", "adresse": "225  rue du Faubourg Saint Honoré", "source": "202/467/webmaster_1_202_467_0_2_0.jpg", "lat": 48.8773128460139, "mail": "alpha.hoche@century21france.fr", "lng": 2.2997818970859, "cp": "75008"}, {"nom": "CENTURY 21 Alpha Marais", "tel": "0142727081", "uid": 82792, "ville": "PARIS", "adresse": "45  rue de Turenne", "source": "202/468/webmaster_1_202_468_0_2_0.jpg", "lat": 48.857654, "mail": "Alpha.Marais@century21france.fr", "lng": 2.364374, "cp": "75003"}, {"nom": "CENTURY 21 Via Conseil 16ème", "tel": "0146517000", "uid": 82824, "ville": "PARIS", "adresse": "218  avenue de Versailles", "source": "202/470/webmaster_1_202_470_0_2_0.jpg", "lat": 48.8384187508261, "mail": "via.conseil@century21france.fr", "lng": 2.25908743759738, "cp": "75016"}, {"nom": "CENTURY 21 Nation", "tel": "0143610207", "uid": 82888, "ville": "PARIS", "adresse": "88  avenue du Dr Arnold Netter", "source": "202/480/webmaster_1_202_480_0_2_0.jpg", "lat": 48.8467585253953, "mail": "netter@century21.fr", "lng": 2.40621648674461, "cp": "75012"}, {"nom": "CENTURY 21 Magenta La Fayette", "tel": "0156350808", "uid": 82900, "ville": "PARIS", "adresse": "129  rue La Fayette", "source": "202/481/webmaster_1_202_481_0_2_0.jpg", "lat": 48.8786616787653, "mail": "magenta.lafayette@century21france.fr", "lng": 2.35446618185836, "cp": "75010"}, {"nom": "CENTURY 21 Chaumont", "tel": "0142001200", "uid": 82904, "ville": "PARIS", "adresse": "81  avenue Jean Jaurès", "source": "202/482/webmaster_1_202_482_0_2_0.jpg", "lat": 48.8850321321996, "mail": "chaumont@century21france.fr", "lng": 2.3785975163288, "cp": "75019"}, {"nom": "CENTURY 21 Olympierre", "tel": "0140510607", "uid": 82912, "ville": "PARIS", "adresse": "27  rue des Boulangers", "source": "202/483/webmaster_1_202_483_0_2_0.jpg", "lat": 48.84612774772, "mail": "olympierre@century21france.fr", "lng": 2.35232972572927, "cp": "75005"}, {"nom": "CENTURY 21 Etude Saint-Georges", "tel": "0153251721", "uid": 83099, "ville": "PARIS", "adresse": "34  rue Notre Dame de Lorette", "source": "202/2154/webmaster_1_202_2154_0_2_0.jpg", "lat": 48.8787354015208, "mail": "etude.saintgeorges@century21france.fr", "lng": 2.33725584581265, "cp": "75009"}, {"nom": "CENTURY 21 Immo'Villiers 17", "tel": "0143182727", "uid": 83275, "ville": "PARIS", "adresse": "19 bis  rue Legendre", "source": "202/670/webmaster_1_202_670_0_2_0.jpg", "lat": 48.8835731164359, "mail": "ag670@century21france.fr", "lng": 2.31313545756574, "cp": "75017"}, {"nom": "CENTURY 21 Daumesnil", "tel": "0143449293", "uid": 83429, "ville": "PARIS", "adresse": "57  boulevard de Reuilly", "source": "202/682/webmaster_1_202_682_0_2_0.jpg", "lat": 48.839769, "mail": "daumesnil@century21france.fr", "lng": 2.398069, "cp": "75012"}, {"nom": "CENTURY 21 Habitat Espace Conseil", "tel": "0153689999", "uid": 83822, "ville": "PARIS", "adresse": "126  rue Lecourbe", "source": "202/69/webmaster_1_202_69_0_2_0.jpg", "lat": 48.8423527956073, "mail": "c21.hec@century21france.fr", "lng": 2.30164986956957, "cp": "75015"}, {"nom": "CENTURY 21 Horeca Paris", "tel": "0156334700", "uid": 83878, "ville": "PARIS", "adresse": "107  rue de Tocqueville", "source": "202/1001/webmaster_1_202_1001_0_2_0.jpg", "lat": 48.8886213270667, "mail": "horeca.paris@century21.fr", "lng": 2.3058965521867, "cp": "75017"}, {"nom": "CENTURY 21 Prestige Montmartre", "tel": "0144927521", "uid": 83958, "ville": "PARIS", "adresse": "56  rue Caulaincourt", "source": "202/88/webmaster_1_202_88_0_2_0.jpg", "lat": 48.8894366920885, "mail": "prestigemontmartre@century21.fr", "lng": 2.33549570664646, "cp": "75018"}, {"nom": "CENTURY 21 Patrimoine 17", "tel": "0153068210", "uid": 84150, "ville": "PARIS", "adresse": "60  rue des Batignolles", "source": "202/1027/webmaster_1_202_1027_0_2_0.jpg", "lat": 48.8862896588532, "mail": "batignolles17@century21france.fr", "lng": 2.31878487751824, "cp": "75017"}, {"nom": "CENTURY 21 Chorus", "tel": "0153466000", "uid": 85029, "ville": "PARIS", "adresse": "86  avenue Ledru-Rollin", "source": "202/557/webmaster_1_202_557_0_2_0.jpg", "lat": 48.8503568246458, "mail": "chorus@century21.fr", "lng": 2.37521389581224, "cp": "75012"}, {"nom": "CENTURY 21 Gambetta Immobilier", "tel": "0144626767", "uid": 85235, "ville": "PARIS", "adresse": "83  avenue Gambetta", "source": "/202/715/webmaster_1_202_715_0_2_0.jpg", "lat": 48.8653828953831, "mail": "gambetta.paris@century21france.fr", "lng": 2.39881058817649, "cp": "75020"}, {"nom": "CENTURY 21 Voltaire", "tel": "0140095290", "uid": 85243, "ville": "PARIS", "adresse": "139  boulevard Voltaire", "source": "202/716/webmaster_1_202_716_0_2_0.jpg", "lat": 48.8558639529702, "mail": "voltaire@century21france.fr", "lng": 2.3835122546365, "cp": "75011"}, {"nom": "CENTURY 21 Agence Luxembourg", "tel": "0156814050", "uid": 6332562, "ville": "PARIS", "adresse": "131  boulevard Saint Michel", "source": "202/2335/webmaster_1_202_2335_0_2_0.jpg", "lat": 48.842172242268, "mail": "agence.luxembourg@century21.fr", "lng": 2.33805792329048, "cp": "75005"}, {"nom": "CENTURY 21 Chorus Bastille", "tel": "0158301100", "uid": 16040714, "ville": "PARIS", "adresse": "62  rue de la Roquette", "source": "202/2383/webmaster_1_202_2383_0_2_0.jpg", "lat": 48.8553486322452, "mail": "bastille@century21.fr", "lng": 2.37410087890511, "cp": "75011"}, {"nom": "CENTURY 21 Alexandre Dumas", "tel": "0140242440", "uid": 22175154, "ville": "PARIS", "adresse": "11  rue de Bagnolet", "source": "202/2401/webmaster_1_202_2401_0_2_0.jpg", "lat": 48.8567527287395, "mail": "alexandredumas@century21france.fr", "lng": 2.39536462219252, "cp": "75020"}, {"nom": "CENTURY 21 Pyrénées", "tel": "0140333200", "uid": 34687797, "ville": "PARIS", "adresse": "373  rue des Pyrénées", "source": "202/2434/webmaster_1_202_2434_0_2_0.jpg", "lat": 48.8734913941775, "mail": "adp@century21.fr", "lng": 2.38976642583447, "cp": "75020"}, {"nom": "CENTURY 21 Saint-Fargeau", "tel": "0140302090", "uid": 39391308, "ville": "PARIS", "adresse": "100  avenue Gambetta", "source": "202/2451/webmaster_1_202_2451_0_2_0.jpg", "lat": 48.8709757461874, "mail": "saint-fargeau@century21france.fr", "lng": 2.40382843368033, "cp": "75020"}, {"nom": "CENTURY 21 Alpha Saint Paul", "tel": "0144619080", "uid": 43452909, "ville": "PARIS", "adresse": "16  rue Ferdinand Duval", "source": "202/2463/webmaster_1_202_2463_0_2_0.jpg", "lat": 48.8563866680324, "mail": "alpha.saintpaul@century21france.fr", "lng": 2.35951509095563, "cp": "75004"}, {"nom": "CENTURY 21 Arts et Métiers", "tel": "0144610404", "uid": 55444173, "ville": "PARIS", "adresse": "4  rue du Vertbois", "source": "202/2494/webmaster_1_202_2494_0_2_0.jpg", "lat": 48.8666045551998, "mail": "artsetmetiers@century21.fr", "lng": 2.36011073388355, "cp": "75003"}, {"nom": "CENTURY 21 Quai Ouest", "tel": "0145572121", "uid": 69518522, "ville": "PARIS", "adresse": "32  avenue Félix Faure", "source": "202/2516/webmaster_1_202_2516_0_2_0.jpg", "lat": 48.8416414033486, "mail": "quai.ouest@century21.fr", "lng": 2.28908969043514, "cp": "75015"}, {"nom": "CENTURY 21 St Martin Immobilier", "tel": "0155269040", "uid": 70829026, "ville": "PARIS", "adresse": "212  rue du Faubourg Saint Martin", "source": "202/2531/webmaster_1_202_2531_0_2_0.jpg", "lat": 48.8798255082469, "mail": "st.martin@century21france.fr", "lng": 2.36368710724081, "cp": "75010"}, {"nom": "CENTURY 21 Lutèce Immobilier", "tel": "0153802121", "uid": 81031455, "ville": "PARIS", "adresse": "241  rue de Tolbiac", "source": "202/2550/webmaster_1_202_2550_0_2_0.jpg", "lat": 48.8262688703193, "mail": "lutece.montsouris@century21.fr", "lng": 2.34261132818857, "cp": "75013"}, {"nom": "CENTURY 21 Etude Duvernet", "tel": "0145411100", "uid": 81211101, "ville": "PARIS", "adresse": "47  rue Boulard", "source": "202/2554/webmaster_1_202_2554_0_2_0.jpg", "lat": 48.8321575346833, "mail": "etude.duvernet@century21france.fr", "lng": 2.32758739067898, "cp": "75014"}, {"nom": "CENTURY 21 Flandre Crimée", "tel": "0140055555", "uid": 98849352, "ville": "PARIS", "adresse": "104  rue de Flandre", "source": "202/2571/webmaster_1_202_2571_0_2_0.jpg", "lat": 48.8912306668077, "mail": "flandrecrimee@century21france.fr", "lng": 2.37782959252593, "cp": "75019"}, {"nom": "CENTURY 21 Bonsergent", "tel": "0142021616", "uid": 98849354, "ville": "PARIS", "adresse": "21  boulevard Magenta", "source": "202/2572/webmaster_1_202_2572_0_2_0.jpg", "lat": 48.8707803754864, "mail": "bonsergent@century21france.fr", "lng": 2.36084589494029, "cp": "75010"}, {"nom": "CENTURY 21 Patrimoine 17", "tel": "0153313150", "uid": 99454257, "ville": "PARIS", "adresse": "55  rue de la Jonquière", "source": "202/2576/webmaster_1_202_2576_0_2_0.jpg", "lat": 48.8937526200904, "mail": "ag2576@century21france.fr", "lng": 2.32194433873913, "cp": "75017"}, {"nom": "CENTURY 21 Quartier Latin", "tel": "0140510910", "uid": 134300326, "ville": "PARIS", "adresse": "40  rue Monge", "source": "202/2651/webmaster_1_202_2651_0_2_0.jpg", "lat": 48.8457183331338, "mail": "quartier.latin@century21.fr", "lng": 2.35188196353229, "cp": "75005"}, {"nom": "CENTURY 21 Chorus", "tel": "0153466005", "uid": 139694518, "ville": "PARIS", "adresse": "77 avenue avenue Ledru-Rollin", "source": null, "lat": 48.8502503317269, "mail": "chorus.gestion@century21.fr", "lng": 2.37492171984232, "cp": "75012"}, {"nom": "CENTURY 21 Alpha Saint Louis", "tel": "0155421021", "uid": 148798407, "ville": "PARIS", "adresse": "3  Quai Bourbon", "source": "202/2700/webmaster_1_202_2700_0_2_0.jpg", "lat": 48.8524514438238, "mail": "alphaenlile@century21.fr", "lng": 2.35684313549948, "cp": "75004"}, {"nom": "CENTURY 21 Patrimoine 17", "tel": "0153313951", "uid": 188961559, "ville": "PARIS", "adresse": "20-22  rue du Docteur Heulin", "source": null, "lat": 48.8902127171499, "mail": "ag2768@century21.fr", "lng": 2.32354290220742, "cp": "75017"}, {"nom": "CENTURY 21 Chorus Saint-Antoine", "tel": "0156064200", "uid": 188961567, "ville": "PARIS", "adresse": "8  rue Faidherbe", "source": "202/2770/webmaster_1_202_2770_0_2_0.jpg", "lat": 48.8506340628567, "mail": "st.antoine@century21.fr", "lng": 2.38439708015574, "cp": "75011"}, {"nom": "CENTURY 21 Tour Eiffel", "tel": "0142190000", "uid": 219854021, "ville": "PARIS", "adresse": "47  avenue Bosquet", "source": "202/2814/webmaster_1_202_2814_0_2_0.jpg", "lat": 48.8575569589541, "mail": "toureiffel@century21.fr", "lng": 2.30434463249262, "cp": "75007"}, {"nom": "CENTURY 21 Passy Muette", "tel": "0144050506", "uid": 267164250, "ville": "PARIS", "adresse": "36  rue Scheffer", "source": "/202/2864/webmaster_1_202_2864_0_2_0.jpg", "lat": 48.8620442948597, "mail": "passymuette@century21.fr", "lng": 2.2821779661569, "cp": "75016"}, {"nom": "CENTURY 21 Nation", "tel": "0143454202", "uid": 345972627, "ville": "PARIS", "adresse": "2-4  cours de Vincennes", "source": "202/2907/webmaster_1_202_2907_0_2_0.jpg", "lat": 48.8477043379283, "mail": "nation@century21france.fr", "lng": 2.39954829258339, "cp": "75012"}, {"nom": "CENTURY 21 Oberkampf", "tel": "0155289410", "uid": 371322030, "ville": "PARIS", "adresse": "8-10  rue Oberkampf", "source": "202/2923/webmaster_1_202_2923_0_2_0.jpg", "lat": 48.8630492789453, "mail": "oberkampf@century21.fr", "lng": 2.36849522092056, "cp": "75011"}, {"nom": "CENTURY 21 Parmentier - Saint Maur", "tel": "0155285555", "uid": 387844904, "ville": "PARIS", "adresse": "74  avenue de la République", "source": "202/2932/webmaster_1_202_2932_0_2_0.jpg", "lat": 48.8644524836186, "mail": "parmentier@century21france.fr", "lng": 2.37859036249624, "cp": "75011"}, {"nom": "CENTURY 21 Arago - Les Gobelins", "tel": "0185341969", "uid": 400806883, "ville": "PARIS", "adresse": "44  Avenue des Gobelins", "source": "202/2947/webmaster_1_202_2947_0_2_0.jpg", "lat": 48.8345440464065, "mail": "gobelins@century21.fr", "lng": 2.35335778417268, "cp": "75013"}, {"nom": "CENTURY 21 Joffrin Immobilier", "tel": "0142552121", "uid": 604687969, "ville": "PARIS", "adresse": "122  rue Ordener", "source": "202/3048/webmaster_1_202_3048_0_2_0.jpg", "lat": 48.8932368617995, "mail": "joffrin.immobilier@century21france.fr", "lng": 2.3393385275282, "cp": "75018"}, {"nom": "CENTURY 21 République", "tel": "0140210050", "uid": 629233377, "ville": "PARIS", "adresse": "17  avenue de la République", "source": "202/3057/webmaster_1_202_3057_0_2_0.jpg", "lat": 48.8661508584876, "mail": "republique@century21france.fr", "lng": 2.37021602960059, "cp": "75011"}, {"nom": "CENTURY 21 Synergic", "tel": "0156811730", "uid": 665613858, "ville": "PARIS", "adresse": "61  boulevard Sébastopol", "source": null, "lat": 48.8630626267719, "mail": "patricia.morillon@century21.fr", "lng": 2.35069804298468, "cp": "75001"}, {"nom": "CENTURY 21 La Motte Picquet", "tel": "0142736030", "uid": 681716974, "ville": "PARIS", "adresse": "119  boulevard de Grenelle", "source": "202/3071/webmaster_1_202_3071_0_2_0.jpg", "lat": 48.8489408865373, "mail": "motte.picquet@century21.fr", "lng": 2.29886902756388, "cp": "75015"}, {"nom": "CENTURY 21 Alésia", "tel": "0140642040", "uid": 744277796, "ville": "PARIS", "adresse": "20 bis  rue d'Alésia", "source": "202/3088/webmaster_1_202_3088_0_2_0.jpg", "lat": 48.8278481262309, "mail": "century21.alesia@century21.fr", "lng": 2.331762454212, "cp": "75014"}, {"nom": "CENTURY 21 Cadet - Rochechouart", "tel": "0140097016", "uid": 806887182, "ville": "PARIS", "adresse": "41  rue de Maubeuge", "source": "202/3104/webmaster_1_202_3104_0_2_0.jpg", "lat": 48.8787790076879, "mail": "cadet-rochechouart@century21.fr", "lng": 2.34639659048518, "cp": "75009"}, {"nom": "CENTURY 21 Agence des Ternes", "tel": "0158053121", "uid": 825318752, "ville": "PARIS", "adresse": "203  boulevard Pereire", "source": "202/3111/webmaster_1_202_3111_0_2_0.jpg", "lat": 48.8812280505957, "mail": "agencedesternes@century21.fr", "lng": 2.29074810537077, "cp": "75017"}, {"nom": "CENTURY 21 Arago - Les Gobelins", "tel": "0173771840", "uid": 864929004, "ville": "PARIS", "adresse": "39  Boulevard Arago", "source": "202/3119/webmaster_1_202_3119_0_2_0.jpg", "lat": 48.8353030443972, "mail": "gobelins@century21.fr", "lng": 2.34731209384111, "cp": "75013"}, {"nom": "CENTURY 21 Actif Immobilier", "tel": "0156543850", "uid": 1020651539, "ville": "PARIS", "adresse": "79  rue Daguerre", "source": "202/3165/webmaster_1_202_3165_0_2_0.jpg", "lat": 48.8356091459823, "mail": "actifimmo-daguerre@century21.fr", "lng": 2.32505107051595, "cp": "75014"}, {"nom": "CENTURY 21 Auteuil Immobilier", "tel": "0142151621", "uid": 1031248009, "ville": "PARIS", "adresse": "110  avenue Mozart", "source": "202/3168/webmaster_1_202_3168_0_2_0.jpg", "lat": 48.849974, "mail": "auteuil@century21.fr", "lng": 2.266849, "cp": "75016"}, {"nom": "CENTURY 21 Assas Raspail", "tel": "0142227218", "uid": 1086088080, "ville": "PARIS", "adresse": "131  boulevard Raspail", "source": "202/3181/webmaster_1_202_3181_0_2_0.jpg", "lat": 48.8440635577031, "mail": "assas.raspail@century21.fr", "lng": 2.32914242979191, "cp": "75006"}, {"nom": "CENTURY 21 Victor Hugo", "tel": "0144051646", "uid": 1123227048, "ville": "PARIS", "adresse": "50  rue Copernic", "source": null, "lat": 48.8695635894947, "mail": "vht.paris@century21.fr", "lng": 2.28649879914201, "cp": "75016"}, {"nom": "CENTURY 21 Les Abbesses", "tel": "0144599000", "uid": 1133330062, "ville": "PARIS", "adresse": "52  rue d'Orsel", "source": "202/3200/webmaster_1_202_3200_0_2_0.jpg", "lat": 48.8835283774165, "mail": "lesabbesses@century21.fr", "lng": 2.34117408247193, "cp": "75018"}, {"nom": "CENTURY 21 Plaisance Pernety", "tel": "0140440480", "uid": 1149503010, "ville": "PARIS", "adresse": "103  rue Raymond Losserand", "source": "202/3202/webmaster_1_202_3202_0_2_0.jpg", "lat": 48.8331000277822, "mail": "plaisancepernety@century21.fr", "lng": 2.31664079879795, "cp": "75014"}, {"nom": "CENTURY 21 Alpha Saint-Germain", "tel": "0144071313", "uid": 1187926686, "ville": "PARIS", "adresse": "49  quai des Grands Augustins", "source": "202/3220/webmaster_1_202_3220_0_2_0.jpg", "lat": 48.8551004051071, "mail": "alphasaintgermain@century21.fr", "lng": 2.34172159310336, "cp": "75006"}, {"nom": "CENTURY 21 Lutèce Immobilier", "tel": "0148000021", "uid": 1323236341, "ville": "PARIS", "adresse": "165  rue de Tolbiac", "source": "202/3251/webmaster_1_202_3251_0_2_0.jpg", "lat": 48.8259887393002, "mail": "lutece@century21.fr", "lng": 2.35447747424424, "cp": "75013"}, {"nom": "CENTURY 21 Porte d'Orléans", "tel": "0145435151", "uid": 1427915226, "ville": "PARIS", "adresse": "130  boulevard Brune", "source": "202/3291/webmaster_1_202_3291_0_2_0.jpg", "lat": 48.8235122627026, "mail": "portedorleans@century21.fr", "lng": 2.32381298183535, "cp": "75014"}, {"nom": "CENTURY 21 Horeca Gestion", "tel": "0142291003", "uid": 1447394225, "ville": "PARIS", "adresse": "221  rue Championnet", "source": "202/3302/webmaster_1_202_3302_0_2_0.jpg", "lat": 48.8934519989409, "mail": "horeca.gestion@century21.fr", "lng": 2.32967278560913, "cp": "75018"}, {"nom": "CENTURY 21 Agence de la Mairie", "tel": "0140331460", "uid": 1527153263, "ville": "PARIS", "adresse": "3  avenue Parmentier", "source": "202/3332/webmaster_1_202_3332_0_2_0.jpg", "lat": 48.8592291375295, "mail": "agencedelamairie@century21.fr", "lng": 2.37935008249613, "cp": "75011"}, {"nom": "CENTURY 21 Syndixis", "tel": "0158622034", "uid": 1543266843, "ville": "PARIS", "adresse": "50  rue de Ponthieu", "source": "202/3311/webmaster_1_202_3311_0_2_0.jpg", "lat": 48.8716131041084, "mail": "syndixis@century21.fr", "lng": 2.30682403090957, "cp": "75008"}, {"nom": "CENTURY 21 Pasteur", "tel": "0187449494", "uid": 1545133212, "ville": "PARIS", "adresse": "43  Boulevard Pasteur", "source": "202/3334/webmaster_1_202_3334_0_2_0.jpg", "lat": 48.8424896355461, "mail": "pasteur@century21.fr", "lng": 2.31328571878311, "cp": "75015"}, {"nom": "CENTURY 21 Quartier des Théâtres", "tel": "0140400909", "uid": 1596326263, "ville": "PARIS", "adresse": "73  rue de Clichy", "source": "202/3354/webmaster_1_202_3354_0_2_0.jpg", "lat": 48.8821357357134, "mail": "quartierdestheatres@century21.fr", "lng": 2.32801135610802, "cp": "75009"}, {"nom": "CENTURY 21 Arts et Métiers", "tel": "0158535240", "uid": 1611652713, "ville": "PARIS", "adresse": "58  rue de Turbigo", "source": null, "lat": 48.865830868776, "mail": "gestion.artsetmetiers@century21.fr", "lng": 2.35794963981379, "cp": "75003"}, {"nom": "CENTURY 21 Cadet - Rochechouart", "tel": "0140097016", "uid": 1615444302, "ville": "PARIS", "adresse": "9  bis rue de Maubeuge", "source": null, "lat": 48.8769868822833, "mail": "cadet-rochechouart@century21.fr", "lng": 2.34210187254717, "cp": "75009"}, {"nom": "CENTURY 21 Agimmo", "tel": "0145669074", "uid": 1998146070, "ville": "PARIS", "adresse": "19  rue Corbon", "source": null, "lat": 48.8354454293711, "mail": "corbon@century21.fr", "lng": 2.30265655161504, "cp": "75015"}, {"nom": "CENTURY 21 Actif Immobilier", "tel": "0143354325", "uid": 1998146093, "ville": "PARIS", "adresse": "136  boulevard du Montparnasse", "source": null, "lat": 48.8409828001587, "mail": "actifimmo-vavin@century21.fr", "lng": 2.33224554022499, "cp": "75014"}];
  function init_gmap(){
     V5Map.init({
         'clientId': 'century21',
         'name' : 'agence',
         'points' : AGENCES,
         'infoWindow' : infoWindowAgenceContentLight,
     });
  }




</script>




<div id="moduleNOTREAG" class="module238 full-block">
    
      <div>
        <h2>Découvrez cette agence à
          PARIS
        </h2>

          <a class="lienNOMAG" href="/trouver_agence/agence/1086088080/" target="_blank">
          <img src="/imagesBien/202/3181/webmaster_1_202_3181_0_2_0.jpg"  
          alt="Agence immobilièreCENTURY 21 Assas Raspail, 75006 PARIS" class="image-agence" />
          </a>
          <a class="lienNOMAG" href="/trouver_agence/agence/1086088080/" target="_blank">CENTURY 21 Assas Raspail</a>
         
        </div>
        <div>
            
            
            <div class="titreACTUAG">L'actualité de cette agence</div>
    
            <p class="txtACTU">
            Bonjour à tous, Afin de respecter les instructions gouvernementales, votre agence Century 21 Assas Raspail a fermé dès le lundi 16 mars l’accès au public ...
            </p>
            
            <a href="https://www.century21-assas-raspail-paris-6.com/actus/2125155463/"
               target="_blank"
               class="link-suite">
                Lire la suite
            </a>
            
            
            

            
          
          <!-- Qualitelis -->	  
          <div class="qualitelis_glob">
            <div class="note_glob">
              <div class="W100ON100">
              <span class="font16">Les clients notent cette agence</span>
              </div>
              <div class="reset"></div>
              <!-- Emplacement note sur 10 plus nombre avis sur agence -->
              <div class="res_note W100ON100">
              <span class="note_ag">9,5/10</span>
              <div class="my-rating3" data-rating3="9,5"></div>
              <div class="reset"></div>
              <span class="zone-avis">
                <a href="https://www.century21-assas-raspail-paris-6.com/agence/avis-clients/">
                <span class="underline">103 avis</span>
              </a>
              sur cette agence
              </span>
            </div>
            </div>
            <div class="reset"></div>
            <div class="qualitelis">Certifié par <img src="/theme/generic/css/images/qualitelis/qualitelis.svg"  class="logo-qualitelis" alt="Qualitelis"></div>
          </div>

            
        
    
          </div>
        <div>
            <a class="link-plus-info" href="/trouver_agence/agence/1086088080/" target="_blank">Voir la fiche de cette agence</a>
            
            
            <a class="link-plus-info" href="https://www.century21-assas-raspail-paris-6.com" target="_blank">Voir le site de cette agence</a>
        
            <ul>
                
                <li>
                  
                  <a class="link-plus-info" href="https://www.century21-assas-raspail-paris-6.com/annonces/achat/">
                  
                    6 biens &agrave; vendre dans cette agence
                  </a>
                </li>
                
                
                <li>
                  
                  <a class="link-plus-info" href="https://www.century21-assas-raspail-paris-6.com/annonces/location/">
                  
                    5 biens &agrave; louer dans cette agence
                  </a>
                </li>
                
            </ul>
        </div>

      <div>
        
       
        
      </div>

      

     


</div>








<div id="moduleGOOGLEMAP" class="module238" style="display: none">
    <ul>
      <li id="map_tab_agence" onclick="showAgences()" class="mapActive">Trouvez d'autres agences</li>
      
    </ul>
    <div class="reset"></div>

    <div class="map_google">
      <div id="mapCanvas" style="width:239px;height:240px">
      </div>
    </div>
</div>





<div id="moduleEDITOVILLE" class="module238">
    <h2>PARIS&nbsp;en clin d'oeil</h2>
  <img src="/imagesBien/202/cms/687840690/Metro_de_Paris_-_Ligne_7_-_Les_Gobelins_paris 13/Metro_de_Paris_-_Ligne_7_-_Les_Gobelins_paris 13__cmsbig.jpg" 
  alt="Paris 13ème - © By Flick Upload bot via fr.wikimedia.org" class="image-agence" />
    <div class="reset"></div>
    <div class="titreACTUAG">
      PARIS <br />
      75013 - Paris - ILE-DE-FRANCE
    </div>

    
      <a href="/edito/ville/paris-13eme/"></a>
       <p class="txtACTU"> Même s’il abrita des édifices religieux dès le Haut Moyen Age, puis des manufactures textiles au XVème siècle, le ...</p>
      </a>
    

    <a class="link-suite" href="/edito/ville/paris-13eme/">
      En savoir plus sur PARIS...</a>

</div>











  



<div id="moduleETAPEACHAT" class="module238">
  <h2>Les étapes pour bien acheter</h2>
  <ul class="articles">
	
	<li><a class="lienFLECHEGRIS" href="/edito/article/tout-ce-quil-faut-savoir-sur-le-nouveau-pret-a-taux-zero/">Tout ce qu&#39;il faut savoir sur le nouveau prêt à taux zéro</a></li>
	
	<li><a class="lienFLECHEGRIS" href="/edito/article/droit-de-passage-comment-ca-marche/">Droit de passage : comment ça marche ?</a></li>
	
	<li><a class="lienFLECHEGRIS" href="/edito/article/la-residence-secondaire-fait-rever-les-francais-de-la-a-sau/">La résidence secondaire fait rêver les Français. De là à sauter le pas…</a></li>
	
	<li><a class="lienFLECHEGRIS" href="/edito/article/bien-choisir-son-syndic-de-copropriete/">Bien choisir son syndic de copropriété</a></li>
	
	<li><a class="lienFLECHEGRIS" href="/edito/article/tout-comprendre-du-teg-taux-effectif-global/">Tout comprendre du TEG (taux effectif global)</a></li>
	
<ul>

</div>











						
				</div>
			<div class="reset"></div>
		</section>
		

<div class="reset"></div>


<script>
 
 

  
    var page_number = "";
  
 


  

 
  var h = document.location.hash;

  if (h && h[1]=='/') document.location.href=h.substr(1)

  $(".blocRECHERCHE").slideUp();




  
$("#AFF").click(function() {
      $( ".blocRECHERCHE" ).slideToggle( "slow" );
      $( ".pagination" ).slideUp( "slow" );
      $("#TRI").removeClass('tt');
      $(this).toggleClass( "tt" );

});
$("#modifier2").click(function() {
      $( ".blocRECHERCHE" ).slideToggle( "slow" );
      $( ".pagination" ).slideUp( "slow" );
      $("#TRI").removeClass('tt');
      $(this).toggleClass( "tt" );

});
$("#modifier3").click(function() {
      $( ".blocRECHERCHE" ).slideToggle( "slow" );
      $( ".pagination" ).slideUp( "slow" );
      $("#TRI").removeClass('tt');
      $(this).toggleClass( "tt" );
      scrollTop();
     
      

});
$("#TRI").click(function() {
     $( ".pagination" ).slideToggle( "slow" );
      $( ".blocRECHERCHE" ).slideUp( "slow" );
      $("#AFF").removeClass('tt');
     $(this).toggleClass( "tt" );
     

});
$("#TRI2").click(function() {
     $( ".pagination2" ).slideToggle( "slow" );
      $( ".blocRECHERCHE" ).slideUp( "slow" );
      $("#AFF").removeClass('tt');
     $(this).toggleClass( "tt" );

});

 
  

</script>
<script>
if ($('#btnALERTE2').length > 0  || $('#btnALERTE3').length > 0)  {
  $('#btnALERTE').css('display','none');
}

    //   $(".h1_page").remove()
    
        
      //   $(".pagination").stop(true,true).slideUp();
/*
  if($(".blocRECHERCHE").length){
    $("#AFF").click(function() {
      
    if (showAffiner) {

         $(".pagination").stop(true,true).slideDown();
         $(".blocRECHERCHE").stop(true,true).slideUp();
        $( "#AFF" ).removeClass( "bcfirstPlus" ).addClass( "bcsecondPlus" );
        showAffiner = !showAffiner;
     
    }
    else {
        $(".pagination").stop(true,true).slideUp()
        $(".blocRECHERCHE").stop(true,true).slideDown();
        $( "#TRI" ).removeClass( "bcfirstPlus" ).addClass( "bcsecondPlus" );
        $( "#AFF" ).removeClass( "bcsecondPlus" ).addClass( "bcfirstPlus" );
        showAffiner = !showAffiner;

    }
    });
}

if($(".blocRECHERCHE").length){
    $("#TRI").click(function() {
    if (showAffiner2) {
        $(".blocRECHERCHE").stop(true,true).slideUp();
        $(".pagination").stop(true,true).slideUp();
        $( "#TRI" ).removeClass( "bcfirstPlus" ).addClass( "bcsecondPlus" );
        showAffiner2 = !showAffiner2;
    }else{
        $(".pagination").stop(true,true).slideDown();
        $(".blocRECHERCHE").stop(true,true).slideUp();
        $( "#AFF" ).removeClass( "bcfirstPlus" ).addClass( "bcsecondPlus" );
        $( "#TRI" ).removeClass( "bcsecondPlus" ).addClass( "bcfirstPlus" );
        showAffiner2 = !showAffiner2;
      
    }
    });
}

var tri2 = false;
$("#TRI2").click(function() {
    if (tri2) {
        $(".pagination2").stop(true,true).slideUp();
        tri2 = !tri2;     
    }
    else {

        $(".pagination2").stop(true,true).slideDown();
        tri2 = !tri2; 
    }
    });

var showAffiner2 = false;
$("#modifier2").click(function() {
    if (showAffiner2) {
        $(".blocRECHERCHE2").stop(true,true).slideUp();
        showAffiner2 = !showAffiner2;
    }
    else {
        $(".blocRECHERCHE2").stop(true,true).slideDown();
        showAffiner2 = !showAffiner2;
    }
    });

    // var showAffiner3 = false;
$("#modifier3").click(function() {
    if (!showAffiner) {
        $(".blocRECHERCHE").stop(true,true).slideDown();
        $(".pagination").stop(true,true).slideUp();
        $( "#TRI" ).removeClass( "bcfirstPlus" ).addClass( "bcsecondPlus" );
        $( "#AFF" ).removeClass( "bcsecondPlus" ).addClass( "bcfirstPlus" );
      showAffiner = !showAffiner;
    }
    scrollTop();
  //  $('html, body').animate({scrollTop: $('#blocANNONCES').offset().top}, "slow");
    });
*/


</script>



 

  </span>
  <span class="reset"></span>


              
            </div>
          </div>
        </div>
      </div>
      

      
      <footer id="mainFooter">
        <div class="mid">
          
          
           <div class="content">
			  <div class="mentions_fixe">
          <ul>
              <li><a href="/fiches/protection-des-donnees/">Politique de protection des données</a></li>
            <li><a href="/fiches/mentions/">Mentions légales</a></li>
            <li><a href="/fiches/credits/">Crédits</a></li>
            <li><a href="/contactez_nous/">Nous contacter</a></li>
           
          </ul>
			  </div>
			  <div class="reset"></div>
			 
				  

				  <div class="reset"></div>

				  
				  <div class="reset"></div>
         	
          </div>
        </div>
      </footer>
      
      
      
    </div>
        
        
    
    
    <div id="mainBACKGROUND" style="background:url(/theme/generic/css/images/images-fonds/SN-page-interne-D.jpg) no-repeat top right/cover;">
        <div class="mid"></div>
    </div>
    
    
    <script>
      $(document).ready(function(){ $('form input.token_input').tokenInput("/autocomplete/localite/", {theme: 'facebook', hintText:'',placeholder:'Saisissez votre choix ici...'}); });
    </script>
    








  	
  	
  </body>
  <!--site national -->
</html>

    http_version: null
  recorded_at: Tue, 31 Mar 2020 16:38:33 GMT
- request:
    method: get
    uri: https://www.century21.fr/trouver_logement/detail/2039788296/
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Tue, 31 Mar 2020 16:38:33 GMT
      Content-Type:
      - text/html; charset=utf-8
      Content-Length:
      - '30830'
      Server:
      - Apache
      Expires:
      - Wed, 01 Apr 2020 02:51:05 GMT
      Cache-Control:
      - max-age=43200
      Last-Modified:
      - Tue, 31 Mar 2020 14:51:05 GMT
      Vary:
      - Accept-Encoding,User-Agent
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        <!DOCTYPE html>
<!--[if lt IE 7 ]> <html lang="fr" class="no-js ie6"> <![endif]--><!--[if IE 7 ]><html lang="fr" class="no-js ie7"> <![endif]--><!--[if IE 8 ]><html lang="fr" class="no-js ie8"> <![endif]--><!--[if IE 9 ]>    <html lang="fr" class="no-js ie9"> <![endif]--><!--[if (gt IE 9)|!(IE)]><!--><html lang="fr" class="no-js"><!--<![endif]-->
  <head prefix="og: http://ogp.me/ns# fb: http://ogp.me/ns/fb# article: http://ogp.me/ns/article#">
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <!--[if lt IE 9]><script src="http://html5shim.googlecode.com/svn/trunk/html5.js"></script><![endif]-->
    <meta charset="utf-8" />
    
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1" /><script type="text/javascript">(window.NREUM||(NREUM={})).loader_config={licenseKey:"57291cc109",applicationID:"24270498"};window.NREUM||(NREUM={}),__nr_require=function(e,n,t){function r(t){if(!n[t]){var i=n[t]={exports:{}};e[t][0].call(i.exports,function(n){var i=e[t][1][n];return r(i||n)},i,i.exports)}return n[t].exports}if("function"==typeof __nr_require)return __nr_require;for(var i=0;i<t.length;i++)r(t[i]);return r}({1:[function(e,n,t){function r(){}function i(e,n,t){return function(){return o(e,[u.now()].concat(f(arguments)),n?null:this,t),n?void 0:this}}var o=e("handle"),a=e(4),f=e(5),c=e("ee").get("tracer"),u=e("loader"),s=NREUM;"undefined"==typeof window.newrelic&&(newrelic=s);var p=["setPageViewName","setCustomAttribute","setErrorHandler","finished","addToTrace","inlineHit","addRelease"],l="api-",d=l+"ixn-";a(p,function(e,n){s[n]=i(l+n,!0,"api")}),s.addPageAction=i(l+"addPageAction",!0),s.setCurrentRouteName=i(l+"routeName",!0),n.exports=newrelic,s.interaction=function(){return(new r).get()};var m=r.prototype={createTracer:function(e,n){var t={},r=this,i="function"==typeof n;return o(d+"tracer",[u.now(),e,t],r),function(){if(c.emit((i?"":"no-")+"fn-start",[u.now(),r,i],t),i)try{return n.apply(this,arguments)}catch(e){throw c.emit("fn-err",[arguments,this,e],t),e}finally{c.emit("fn-end",[u.now()],t)}}}};a("actionText,setName,setAttribute,save,ignore,onEnd,getContext,end,get".split(","),function(e,n){m[n]=i(d+n)}),newrelic.noticeError=function(e,n){"string"==typeof e&&(e=new Error(e)),o("err",[e,u.now(),!1,n])}},{}],2:[function(e,n,t){function r(e,n){var t=e.getEntries();t.forEach(function(e){"first-paint"===e.name?c("timing",["fp",Math.floor(e.startTime)]):"first-contentful-paint"===e.name&&c("timing",["fcp",Math.floor(e.startTime)])})}function i(e,n){var t=e.getEntries();t.length>0&&c("lcp",[t[t.length-1]])}function o(e){if(e instanceof s&&!l){var n,t=Math.round(e.timeStamp);n=t>1e12?Date.now()-t:u.now()-t,l=!0,c("timing",["fi",t,{type:e.type,fid:n}])}}if(!("init"in NREUM&&"page_view_timing"in NREUM.init&&"enabled"in NREUM.init.page_view_timing&&NREUM.init.page_view_timing.enabled===!1)){var a,f,c=e("handle"),u=e("loader"),s=NREUM.o.EV;if("PerformanceObserver"in window&&"function"==typeof window.PerformanceObserver){a=new PerformanceObserver(r),f=new PerformanceObserver(i);try{a.observe({entryTypes:["paint"]}),f.observe({entryTypes:["largest-contentful-paint"]})}catch(p){}}if("addEventListener"in document){var l=!1,d=["click","keydown","mousedown","pointerdown","touchstart"];d.forEach(function(e){document.addEventListener(e,o,!1)})}}},{}],3:[function(e,n,t){function r(e,n){if(!i)return!1;if(e!==i)return!1;if(!n)return!0;if(!o)return!1;for(var t=o.split("."),r=n.split("."),a=0;a<r.length;a++)if(r[a]!==t[a])return!1;return!0}var i=null,o=null,a=/Version\/(\S+)\s+Safari/;if(navigator.userAgent){var f=navigator.userAgent,c=f.match(a);c&&f.indexOf("Chrome")===-1&&f.indexOf("Chromium")===-1&&(i="Safari",o=c[1])}n.exports={agent:i,version:o,match:r}},{}],4:[function(e,n,t){function r(e,n){var t=[],r="",o=0;for(r in e)i.call(e,r)&&(t[o]=n(r,e[r]),o+=1);return t}var i=Object.prototype.hasOwnProperty;n.exports=r},{}],5:[function(e,n,t){function r(e,n,t){n||(n=0),"undefined"==typeof t&&(t=e?e.length:0);for(var r=-1,i=t-n||0,o=Array(i<0?0:i);++r<i;)o[r]=e[n+r];return o}n.exports=r},{}],6:[function(e,n,t){n.exports={exists:"undefined"!=typeof window.performance&&window.performance.timing&&"undefined"!=typeof window.performance.timing.navigationStart}},{}],ee:[function(e,n,t){function r(){}function i(e){function n(e){return e&&e instanceof r?e:e?c(e,f,o):o()}function t(t,r,i,o){if(!l.aborted||o){e&&e(t,r,i);for(var a=n(i),f=v(t),c=f.length,u=0;u<c;u++)f[u].apply(a,r);var p=s[y[t]];return p&&p.push([b,t,r,a]),a}}function d(e,n){h[e]=v(e).concat(n)}function m(e,n){var t=h[e];if(t)for(var r=0;r<t.length;r++)t[r]===n&&t.splice(r,1)}function v(e){return h[e]||[]}function g(e){return p[e]=p[e]||i(t)}function w(e,n){u(e,function(e,t){n=n||"feature",y[t]=n,n in s||(s[n]=[])})}var h={},y={},b={on:d,addEventListener:d,removeEventListener:m,emit:t,get:g,listeners:v,context:n,buffer:w,abort:a,aborted:!1};return b}function o(){return new r}function a(){(s.api||s.feature)&&(l.aborted=!0,s=l.backlog={})}var f="nr@context",c=e("gos"),u=e(4),s={},p={},l=n.exports=i();l.backlog=s},{}],gos:[function(e,n,t){function r(e,n,t){if(i.call(e,n))return e[n];var r=t();if(Object.defineProperty&&Object.keys)try{return Object.defineProperty(e,n,{value:r,writable:!0,enumerable:!1}),r}catch(o){}return e[n]=r,r}var i=Object.prototype.hasOwnProperty;n.exports=r},{}],handle:[function(e,n,t){function r(e,n,t,r){i.buffer([e],r),i.emit(e,n,t)}var i=e("ee").get("handle");n.exports=r,r.ee=i},{}],id:[function(e,n,t){function r(e){var n=typeof e;return!e||"object"!==n&&"function"!==n?-1:e===window?0:a(e,o,function(){return i++})}var i=1,o="nr@id",a=e("gos");n.exports=r},{}],loader:[function(e,n,t){function r(){if(!x++){var e=E.info=NREUM.info,n=d.getElementsByTagName("script")[0];if(setTimeout(s.abort,3e4),!(e&&e.licenseKey&&e.applicationID&&n))return s.abort();u(y,function(n,t){e[n]||(e[n]=t)}),c("mark",["onload",a()+E.offset],null,"api");var t=d.createElement("script");t.src="https://"+e.agent,n.parentNode.insertBefore(t,n)}}function i(){"complete"===d.readyState&&o()}function o(){c("mark",["domContent",a()+E.offset],null,"api")}function a(){return O.exists&&performance.now?Math.round(performance.now()):(f=Math.max((new Date).getTime(),f))-E.offset}var f=(new Date).getTime(),c=e("handle"),u=e(4),s=e("ee"),p=e(3),l=window,d=l.document,m="addEventListener",v="attachEvent",g=l.XMLHttpRequest,w=g&&g.prototype;NREUM.o={ST:setTimeout,SI:l.setImmediate,CT:clearTimeout,XHR:g,REQ:l.Request,EV:l.Event,PR:l.Promise,MO:l.MutationObserver};var h=""+location,y={beacon:"bam.nr-data.net",errorBeacon:"bam.nr-data.net",agent:"js-agent.newrelic.com/nr-1167.min.js"},b=g&&w&&w[m]&&!/CriOS/.test(navigator.userAgent),E=n.exports={offset:f,now:a,origin:h,features:{},xhrWrappable:b,userAgent:p};e(1),e(2),d[m]?(d[m]("DOMContentLoaded",o,!1),l[m]("load",r,!1)):(d[v]("onreadystatechange",i),l[v]("onload",r)),c("mark",["firstbyte",f],null,"api");var x=0,O=e(6)},{}],"wrap-function":[function(e,n,t){function r(e){return!(e&&e instanceof Function&&e.apply&&!e[a])}var i=e("ee"),o=e(5),a="nr@original",f=Object.prototype.hasOwnProperty,c=!1;n.exports=function(e,n){function t(e,n,t,i){function nrWrapper(){var r,a,f,c;try{a=this,r=o(arguments),f="function"==typeof t?t(r,a):t||{}}catch(u){l([u,"",[r,a,i],f])}s(n+"start",[r,a,i],f);try{return c=e.apply(a,r)}catch(p){throw s(n+"err",[r,a,p],f),p}finally{s(n+"end",[r,a,c],f)}}return r(e)?e:(n||(n=""),nrWrapper[a]=e,p(e,nrWrapper),nrWrapper)}function u(e,n,i,o){i||(i="");var a,f,c,u="-"===i.charAt(0);for(c=0;c<n.length;c++)f=n[c],a=e[f],r(a)||(e[f]=t(a,u?f+i:i,o,f))}function s(t,r,i){if(!c||n){var o=c;c=!0;try{e.emit(t,r,i,n)}catch(a){l([a,t,r,i])}c=o}}function p(e,n){if(Object.defineProperty&&Object.keys)try{var t=Object.keys(e);return t.forEach(function(t){Object.defineProperty(n,t,{get:function(){return e[t]},set:function(n){return e[t]=n,n}})}),n}catch(r){l([r])}for(var i in e)f.call(e,i)&&(n[i]=e[i]);return n}function l(n){try{e.emit("internal-error",n)}catch(t){}}return e||(e=i),t.inPlace=u,t.flag=a,t}},{}]},{},["loader"]);</script><script type="text/javascript">window.NREUM||(NREUM={});NREUM.info={"beacon":"bam.nr-data.net","queueTime":1,"licenseKey":"57291cc109","agent":"","transactionName":"ZAZbZxFSC0FQWxULVl1Mf0YNUBFbXlZOFAwdAFZeDlwLHFJZAgpcbAFQVg0JEkBQSBEHXWwVUFYU","applicationID":"24270498","errorBeacon":"bam.nr-data.net","applicationTime":28}</script>
    <meta name="verify-v1" content="vaH6Ww2qTnhkQOiN1kEHkZbdVNn0U5jLvWPO/+NwOIQ=" />
    
    <meta name="ROBOTS" content="index, follow" />
    <meta name="googlebot" content="index, follow" />
    
    
    <title>Appartement f4 4 pièces à vendre – PARIS (75014) – Ref. 43928 | CENTURY 21</title>
    <meta name="description" content="Appartement f4 à vendre de 4 pi&egrave;ces et de 89 m2 à PARIS . Consultez vite nos annonces immobilières de biens en vente - Century21.fr" />
    <meta name="keywords" content="Agences Immobilières, Immobilier, Achat, Vente, Location, Appartement, Maison, Parking, Terrain, Agence, Taux, Prix, Petites annonces">
    
        <meta property="twitter:account_id" content="1510100551" />
        <meta property="fb:admins" content="741613563" />
    

	<script type="text/javascript">
        function redirect_etendu()
        {
            var url = String(document.location);

            if (url.indexOf('#etendu#') != -1)
            {
                window.location.assign("/")
            }
        }
        redirect_etendu();
    </script>

    
    <meta property="og:title" content="Appartement f4 4 pièces à vendre – PARIS (75014) – Ref. 43928 | CENTURY 21"/>
    <meta property="og:description" content="Appartement f4 à vendre de 4 pi&egrave;ces et de 89 m2 à PARIS . Consultez vite nos annonces immobilières de biens en vente - Century21.fr"/>
    <meta property="og:image" content="https://www.century21.fr/imagesBien/202/3291/c21_202_3291_43928_8_2A765804-C7F5-4FFD-9A77-EFDAC380DE7D.jpg"/>
    
    
    <meta name="twitter:card" content= "summary" />    
    <meta name="twitter:site" content="@Century21France"/>
    <meta name="twitter:creator" content="@Century21France"/>    
    <meta  name="twitter:image" content="https://www.century21.fr/imagesBien/202/3291/c21_202_3291_43928_8_2A765804-C7F5-4FFD-9A77-EFDAC380DE7D.jpg"/>



    <link rel="canonical" href="https://www.century21.fr/trouver_logement/detail/2039788296/" />
    <!--[if gt IE 5 ]><link href="/theme/generic/css/styles-ie.css" rel="stylesheet" /><![endif]-->
    <!--[if IE 6 ]><link href="/theme/generic/css/styles-ie6.css" rel="stylesheet" /><![endif]-->
    <!--[if IE 7 ]><link href="/theme/generic/css/styles-ie7.css" rel="stylesheet" /><![endif]-->
    <!--[if IE 8 ]><link href="/theme/generic/css/styles-ie8.css" rel="stylesheet" /><![endif]-->

    
    
    <link href="/theme/bootstrap/css/bootstrap.used.css" rel="stylesheet" />
    <link rel="stylesheet" href="/css/jquery-ui.css">
  	<link rel="stylesheet" type="text/css" href="/theme/generic/css/qualitelis.css" media="all"/>
    <link rel="stylesheet" type="text/css" href="/theme/generic/css/qualitelis-agence.css" media="all"/>
    <link rel="stylesheet" href="/theme/generic/css/font-awesome/4.3.0/css/font-awesome.min.css">
    <link rel="stylesheet" type="text/css" href="/theme/generic/js/lib/owl-carousel-v2/assets/owl.carousel.css" />
  	<link rel="stylesheet" type="text/css" href="/theme/generic/js/lib/owl-carousel-v2/assets/owl.theme.default.min.css" />
    <link rel="stylesheet" type="text/css" href="/theme/generic/css/jquery.lightbox-0.5.css" media="all"/>
    <link rel="stylesheet" type="text/css" href="/theme/generic/js/lib/fancyapps-fancyBox/source/jquery.fancybox.css" media="all"/>
    <link rel="stylesheet" type="text/css" href="/theme/generic/js/lib/rateyo/jquery.rateyo.css" media="all"/>
    <link rel="stylesheet" type="text/css" href="/theme/generic/css/styles.css" media="all"/>
    <link rel="stylesheet" type="text/css" href="/css/common.css" media="all"/>
    <link rel="stylesheet" type="text/css" href="/theme/generic/css/print.css" media="print"/>
    <link rel="stylesheet" type="text/css" href="/theme/slider/css/styles.css" media="all"/>
    <link rel="stylesheet" type="text/css" href="/theme/generic/js/lib/odometer-0.4.6/css/odometer-theme-default.css" />
    <link rel="stylesheet" href="/theme/generic/css/c-combien/launch-defil-number.css">
    <link rel="stylesheet" type="text/css" href="/theme/generic/css/style-new-c21.css" media="all"/>
    <link href="/theme/generic/css/tailwind.css" rel="stylesheet">
    
    
    
  
  <link rel="stylesheet" type="text/css" href="/theme/generic/js/lib/owl-carousel-v2/assets/owl.carousel.css" />
  <link rel="stylesheet" type="text/css" href="/theme/generic/js/lib/owl-carousel-v2/assets/owl.theme.default.min.css" />
  <link rel="stylesheet" type="text/css" href="/theme/generic/js/lib/fancyapps-fancyBox/source/jquery.fancybox.css" media="all" />
  <link rel="stylesheet" type="text/css" href="/theme/generic/css/styles-a-proximite.css" media="all" />
  <link rel="stylesheet" type="text/css" href="/theme/generic/css/styles-detail-biens.css" media="all" />
  <link rel="stylesheet" href="/js/leaflet/leaflet.css" />
  <link rel="stylesheet" href="/js/mappy/L.Mappy.css" />
  
  

    
    <script type="text/javascript">
	  var IS_MOBILE = false;
	  var is_ice = "false";
      var HTTP_STATIC = "";
      var HTTP_PROTOCOL = "https";
      var TYPE_SITE = "NATIONAL";
  	  var SITE_TYPE = "NATIONAL";
      var DEBUG = false;
      var PARTICIPE_COLLECTE = 0;
	  var dateServer = new Date();
	  var anneeServer = dateServer.getFullYear();
	  var moisServer = dateServer.getMonth()+1;
	  var moisBg = (parseInt(dateServer.getMonth()+1) <10) ? '0' + parseInt(dateServer.getMonth()+1) : dateServer.getMonth()+1;
	  var heureBg = dateServer.getHours();
      var RECAPTCHA_PUBLIC_KEY =  "6LfQV88UAAAAADg8fB8wzTXISqSepbOVVR_0AeNb";
      
	  

	  


      
		var gaProperty = 'UA-3333689-1'
      
      if (window != top) top.location.href = window.location.href ;
      
    </script>
    <!--[if IE]><link rel="shortcut icon" href="/theme/generic/css/images/favicon.ico"><![endif]-->
    <link rel="icon" href="/theme/generic/css/images/favicon-16x16.png" />
    <link rel="apple-touch-icon" href="/theme/generic/css/images/apple-touch-icon.png" />


	
    
    <script type="text/javascript" src="/theme/generic/js/lib/jquery.js"></script>
    <script type="text/javascript" src="/theme/generic/js/uid-gen.js"></script>
    <script type="text/javascript" src="/theme/generic/js/lib/jquery-ui.js"></script>
    <script type="text/javascript" src="/theme/generic/js/lib/jquery.ui.touch-punch.min.js"></script>
	<script type="text/javascript" src="/theme/generic/js/lib/jquery-cookie.js"></script>
    <script type="text/javascript" src="/theme/generic/js/lib/jquery-slider-ui.js"></script>
    <script src="/theme/generic/js/lib/fancyapps-fancyBox/source/jquery.fancybox.js"></script>
    
    <script type="text/javascript" src="/theme/generic/js/lib/jquery.placeholder.js"></script>
    <script type="text/javascript" src="/theme/generic/js/lib/jtruncate.js"></script>
    <script type="text/javascript" src="/theme/bootstrap/js/bootstrap.min.js"></script>
    <script type="text/javascript" src="/theme/generic/js/lib/jquery-loader.js"></script>

    <script type="text/javascript" src="/theme/generic/js/lib/jcarousellite_1.0.1.min.js"></script>
    <script src="/theme/generic/js/lib/owl-carousel-v2/owl.carousel.js"></script>
    <script type="text/javascript" src="/theme/generic/js/lib/jquery.lightbox-0.5.min.js"></script>
    <script type="text/javascript" src="/theme/generic/js/lib/jquery-animation-background.js"></script>
    <script type="text/javascript" src="/theme/generic/js/lib/jquery-easing.js"></script>
    <script type="text/javascript" src="/theme/generic/js/lib/jquery-boxShadow.js"></script>
    <script type="text/javascript" src="/theme/generic/js/lib/rateyo/jquery.rateyo.js"></script>
    <script type="text/javascript" src="/theme/generic/js/scripts.js"></script>
    <script type="text/javascript" src="/theme/generic/js/scripts-star-rating.js"></script>
    <script type="text/javascript" src="/js/calculette.js"></script>
    <script type="text/javascript" src="/js/dept.js"></script>
    <script src="https://www.google.com/recaptcha/api.js?render=6LfQV88UAAAAADg8fB8wzTXISqSepbOVVR_0AeNb"></script>
    <script type="text/javascript" src="/js/common.js?t=2"></script>
    <script type="text/javascript" src="/js/jquery.tokeninput.js"></script>
    
    

    
    
    
  <!--[if lt IE 9]><script language="javascript" type="text/javascript" src="/theme/generic/js/lib/jquery.jqplot/excanvas.js"></script><![endif]-->
  <script type="text/javascript">
   
   	var points =  [];
   	var bien = false;
   	points = [{"capital_social": "10.000€", "ville": "PARIS", "code": 3291, "tel": "01 45 43 51 51 ", "uid": 1427915226, "ref_reseau": 81317, "non_detention_fonds": true, "region_nom": "ILE-DE-FRANCE", "coordonnees_siege_social": "130 boulevard Brune 75014 PARIS", "complement_adresse": null, "lng": 2.32381298183535, "departement_nom": "Paris", "nom_garant": "", "numero_cartepro": "CPI 7501 2017 000 019 847", "nom_departement": "Paris", "adresse_garant": "", "etat_membre_cartepro": "France", "source": "202/3291/webmaster_1_202_3291_0_2_0.jpg", "forme_juridique": "", "sites_all": {"AGENCE": {"url_fr": "www.century21-porte-d-orleans-paris-14.com", "ref_type_maquette": 1, "uid": 540777952, "affiche_c21": 1, "url_fr_aff": "century21-porte-d-orleans-paris-14.com", "analytique": "UA-38806423-1", "type_site_web": "AGENCE", "url_en": "www.century21-porte-d-orleans-paris-14.com", "url_facebook": "https://www.facebook.com/pages/CENTURY-21-Immonov/152408441558180", "affiche_facebook_likebox": true}}, "siret": "82966726000014", "mail": "portedorleans@century21.fr", "ville_rcs": "", "nb_locations_ice": 0, "activites_agence": [{"activite_agence": "Location", "euid": "4"}, {"activite_agence": "Transaction", "euid": "1"}], "nom": "CENTURY 21 Porte d'Orléans", "adresse_emetteur_cartepro": "27, avenue de Friedland - 75008 Paris", "url_mediateur": "https://medimmoconso.fr/adresser-une-reclamation/", "sites": {"AGENCE": {"url_fr": "www.century21-porte-d-orleans-paris-14.com", "ref_type_maquette": 1, "uid": 540777952, "affiche_c21": 1, "url_fr_aff": "century21-porte-d-orleans-paris-14.com", "analytique": "UA-38806423-1", "type_site_web": "AGENCE", "url_en": "www.century21-porte-d-orleans-paris-14.com", "url_facebook": "https://www.facebook.com/pages/CENTURY-21-Immonov/152408441558180", "affiche_facebook_likebox": true}}, "nb_ventes": 6, "adresse": "130  boulevard Brune", "departement": "75", "nom_mediateur": "Association MEDIMMOCONSO", "code_rcs": "829667260 RCS de PARIS", "nb_locations": 1, "lat": 48.8235122627026, "region_uid": 13, "code_postal": "75014", "raison_sociale": "SASU FORTUNA HOME CONSEIL", "absolute_url": "/trouver_agence/agence/1427915226/", "nb_ventes_ice": 0, "email_mediateur": "contact@medimmoconso.fr", "num_decla_tva": "82966726000014", "horaires": [{"nom": "Lundi", "aprem": false, "debut_1": "09:30", "debut_2": "", "sans_interruption": true, "fin_2": "19:30", "fin_1": "", "matin": false, "actif": true}, {"nom": "Mardi", "aprem": false, "debut_1": "09:30", "debut_2": "", "sans_interruption": true, "fin_2": "19:30", "fin_1": "", "matin": false, "actif": true}, {"nom": "Mercredi", "aprem": false, "debut_1": "09:30", "debut_2": "", "sans_interruption": true, "fin_2": "19:30", "fin_1": "", "matin": false, "actif": true}, {"nom": "Jeudi", "aprem": false, "debut_1": "09:30", "debut_2": "", "sans_interruption": true, "fin_2": "19:30", "fin_1": "", "matin": false, "actif": true}, {"nom": "Vendredi", "aprem": false, "debut_1": "09:30", "debut_2": "", "sans_interruption": true, "fin_2": "19:30", "fin_1": "", "matin": false, "actif": true}, {"nom": "Samedi", "aprem": false, "debut_1": "09:30", "debut_2": "", "sans_interruption": true, "fin_2": "17:00", "fin_1": "", "matin": false, "actif": true}], "adresse_mediateur": "1 Allée du Parc de Mesemena - Bât A - CS25222 - 44505 LA BAULE CEDEX", "ref_agence": 1427915226, "numero_orias": "", "nom_emetteur_cartepro": "CCI de Paris Île-de-France", "euid": "202_3291"}];
    
        bien = [{ 'type': "bien-semi-geolocalise", 'agence': {"capital_social": "10.000€", "ville": "PARIS", "code": 3291, "tel": "01 45 43 51 51 ", "uid": 1427915226, "ref_reseau": 81317, "non_detention_fonds": true, "region_nom": "ILE-DE-FRANCE", "coordonnees_siege_social": "130 boulevard Brune 75014 PARIS", "complement_adresse": null, "lng": 2.32381298183535, "departement_nom": "Paris", "nom_garant": "", "numero_cartepro": "CPI 7501 2017 000 019 847", "nom_departement": "Paris", "adresse_garant": "", "etat_membre_cartepro": "France", "source": "202/3291/webmaster_1_202_3291_0_2_0.jpg", "forme_juridique": "", "sites_all": {"AGENCE": {"url_fr": "www.century21-porte-d-orleans-paris-14.com", "ref_type_maquette": 1, "uid": 540777952, "affiche_c21": 1, "url_fr_aff": "century21-porte-d-orleans-paris-14.com", "analytique": "UA-38806423-1", "type_site_web": "AGENCE", "url_en": "www.century21-porte-d-orleans-paris-14.com", "url_facebook": "https://www.facebook.com/pages/CENTURY-21-Immonov/152408441558180", "affiche_facebook_likebox": true}}, "siret": "82966726000014", "mail": "portedorleans@century21.fr", "ville_rcs": "", "nb_locations_ice": 0, "activites_agence": [{"activite_agence": "Location", "euid": "4"}, {"activite_agence": "Transaction", "euid": "1"}], "nom": "CENTURY 21 Porte d'Orléans", "adresse_emetteur_cartepro": "27, avenue de Friedland - 75008 Paris", "url_mediateur": "https://medimmoconso.fr/adresser-une-reclamation/", "sites": {"AGENCE": {"url_fr": "www.century21-porte-d-orleans-paris-14.com", "ref_type_maquette": 1, "uid": 540777952, "affiche_c21": 1, "url_fr_aff": "century21-porte-d-orleans-paris-14.com", "analytique": "UA-38806423-1", "type_site_web": "AGENCE", "url_en": "www.century21-porte-d-orleans-paris-14.com", "url_facebook": "https://www.facebook.com/pages/CENTURY-21-Immonov/152408441558180", "affiche_facebook_likebox": true}}, "nb_ventes": 6, "adresse": "130  boulevard Brune", "departement": "75", "nom_mediateur": "Association MEDIMMOCONSO", "code_rcs": "829667260 RCS de PARIS", "nb_locations": 1, "lat": 48.8235122627026, "region_uid": 13, "code_postal": "75014", "raison_sociale": "SASU FORTUNA HOME CONSEIL", "absolute_url": "/trouver_agence/agence/1427915226/", "nb_ventes_ice": 0, "email_mediateur": "contact@medimmoconso.fr", "num_decla_tva": "82966726000014", "horaires": [{"nom": "Lundi", "aprem": false, "debut_1": "09:30", "debut_2": "", "sans_interruption": true, "fin_2": "19:30", "fin_1": "", "matin": false, "actif": true}, {"nom": "Mardi", "aprem": false, "debut_1": "09:30", "debut_2": "", "sans_interruption": true, "fin_2": "19:30", "fin_1": "", "matin": false, "actif": true}, {"nom": "Mercredi", "aprem": false, "debut_1": "09:30", "debut_2": "", "sans_interruption": true, "fin_2": "19:30", "fin_1": "", "matin": false, "actif": true}, {"nom": "Jeudi", "aprem": false, "debut_1": "09:30", "debut_2": "", "sans_interruption": true, "fin_2": "19:30", "fin_1": "", "matin": false, "actif": true}, {"nom": "Vendredi", "aprem": false, "debut_1": "09:30", "debut_2": "", "sans_interruption": true, "fin_2": "19:30", "fin_1": "", "matin": false, "actif": true}, {"nom": "Samedi", "aprem": false, "debut_1": "09:30", "debut_2": "", "sans_interruption": true, "fin_2": "17:00", "fin_1": "", "matin": false, "actif": true}], "adresse_mediateur": "1 Allée du Parc de Mesemena - Bât A - CS25222 - 44505 LA BAULE CEDEX", "ref_agence": 1427915226, "numero_orias": "", "nom_emetteur_cartepro": "CCI de Paris Île-de-France", "euid": "202_3291"} }];
        
            bien[0].lng = 2.3236;
            bien[0].lat = 48.8257;
        

    
   
   
   var ONGLETS = [
   ];
   var printUrl = "/trouver_logement/detail/2039788296/print/";
   

   function get_alerte_add_url() {
     return null;
   }   
   var HTTP_STATIC = "";	
   $(document).ready(function() { 
	   
	   dataLayer.push({
		  'product_page_id' : '2039788296',
		  'product_page_euid' : '202_3291_43928'
	   });
	   init_menuSUBWAY();
   });
  </script>
  
  <script src="/theme/generic/js/lib/owl-carousel-v2/owl.carousel.js"></script>
  <script src="/theme/generic/js/lib/fancyapps-fancyBox/source/jquery.fancybox.js"></script>
  <script type="text/javascript" src="/js/gmap.js"></script>

  <script src="/theme/generic/js/scripts-detail-biens.js"></script>
  <script src="/js/leaflet/leaflet.js"></script>
  <script type="text/javascript" src="/js/mappy/L.Mappy.js"></script>  
  


    <meta property="fb:admins" content="100001097395315" />
    <script>
      var ACTIVITE_CENTURA = "";
      var CACHE_POPUP_ANNONCE = {};
      var UID_BIEN = [];
      var overPopupService = 0;
      var DEV_ENV = false;

      
      

      
      function fix_articles(){
      $('.articles_cont').each(function(){

      
      if ($(this).find('.articles').length && $(this).find('.articles').html().trim() == ''){
      $(this).hide();
      }

      
      var link = $(this).find('.articles_link').attr('href');
      $(this).find('.get_articles_link').attr('href', link);
      });
      }

      $(document).ready(function() {
       /* fix_articles();*/
      });

      

      //if (!_gaq.push) _gaq.push = function () { };

		

			var _gaq = _gaq || [];
			_gaq.push(['_setAccount', 'UA-3333689-1']);
			_gaq.push(['_setDomainName', 'century21.fr']);
			_gaq.push(['_setAllowLinker', true]);
			_gaq.push(['_trackPageview']);

			(function() {
                var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
                ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
                var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
			})();


		
	
    </script>


    
	<script>
	  dataLayer =  [{
		  		

            'env_work': 'Prod',
            'env_site': 'SITE NATIONAL',
            'env_device': 'Desktop',
            'env_template': 'Generique',
            'event' : '',
            'pagename': 'Appartement F4 &agrave; vendre - 4 pi&egrave;ces - 89 m2 - PARIS - 75014 - ILE-DE-FRANCE',
            'pageCategory1': '/trouver_logement/detail/2039788296/',
            'pageCategory2': '',
            'pageCategory3': '',
            'visitorStatus': '',
            'type compte' : ''
           // 'ip': ''

				   
					}];


 
	</script>
    
    
    <script>
		(function(w,d,s,l,i)
		{
			w[l]=w[l]||[];
			w[l].push({'gtm.start': new Date().getTime(),event:'gtm.js'});
			var f=d.getElementsByTagName(s)[0],j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';
			j.async=true;
			j.src='https://www.googletagmanager.com/gtm.js?id='+i+dl;
			f.parentNode.insertBefore(j,f);
		})
		(window,document,'script','dataLayer','GTM-P8DRVBV');


	</script>

  

	
	<script>
    (function(h,o,t,j,a,r){
        h.hj=h.hj||function(){(h.hj.q=h.hj.q||[]).push(arguments)};
        h._hjSettings={hjid:1294600,hjsv:6};
        a=o.getElementsByTagName('head')[0];
        r=o.createElement('script');r.async=1;
        r.src=t+h._hjSettings.hjid+j+h._hjSettings.hjsv;
        a.appendChild(r);
    })(window,document,'https://static.hotjar.com/c/hotjar-','.js?sv=');
	</script>
	


	
	
  </head>

  <body id="site" class="detail_bien relooking page-xl base-site-nat">
  	<!-- Google Tag Manager (noscript) -->
		<noscript>
			<iframe src="https://www.googletagmanager.com/ns.html?id=GTM-P8DRVBV" height="0" width="0" style="display:none;visibility:hidden"></iframe>
		</noscript>
	<!-- End Google Tag Manager (noscript) -->
  
  
  
    
    


    
    <div id="main">
        <!--BANDEAU MESSAGE COOKIE CNIL-->
        <div id="bandeauCookie">
        </div>

      <div id="lineTop">
        <div class="mid">
          <div class="content">
            <ul class="posL">
              
              <li><span><a href="/fiches/a_propos/" onclick="google_tag_event('Menu,Click,A Propos');">A propos de CENTURY 21</a></span></li>
              <li><span><a href="/fiches/a_propos/century21/international/" onclick="google_tag_event('Menu,Click,International');">International</a></span></li>
              <li><span><a href="/trouver_agence/" onclick="google_tag_event('Menu,Click,Nos Agences Immobilières');">Nos agences immobilières</a></span></li>
              <li><span><a href="/fiches/a_propos/le_blog_immobilier/" onclick="google_tag_event('Menu,Click,Blog Immobilier');">Blog immobilier</a></span></li>
              
            </ul>
            <ul class="posR">
            	
            	<li>
                	<form id="rechercheSITE" action="/text_search/" method="get">
                  	<input type="text" id="inputRECHERCHESITE" name="q" placeholder="Rechercher sur le site" />
                  	<a id="btnMOTEURFULLTEXT">OK</a>
                	</form>
              	</li>
              	
			  
             	<li>
					<a id="btnMONCOMPTE2" href="/accounts/">
						Mon compte
					</a>
			 	</li>
              
              
			 <li class="social">
				<a rel="noopener" href="https://www.facebook.com/Century21France" target="_blank" onclick="google_tag_event('Menu,Click,Facebook');" title="Facebook"><i class="fa fa-2x fa-facebook" aria-hidden="true"></i></a>
			 </li>
			

			
			<li class="social">
				  <a rel="noopener" href="https://twitter.com/century21fr" target="_blank" onclick="google_tag_event('Menu,Click,Twitter');" title="Twitter"><i class="fa fa-2x fa-twitter" aria-hidden="true"></i></a>
			 </li>
			
            
			<li class="social">
				  <a rel="noopener" href="https://www.linkedin.com/company/century-21-france/" target="_blank" onclick="google_tag_event('Menu,Click,Linkedin');" title="Linkedin"><i class="fa fa-linkedin fa-2x" aria-hidden="true"></i></a>
			 </li>
			
            
			<li class="social">
				  <a rel="noopener" href="https://www.instagram.com/century21fr/" target="_blank" onclick="google_tag_event('Menu,Click,Instagram');" title="Instagram"><i class="fa fa-instagram fa-2x" aria-hidden="true"></i></a>
			</li>
			
            
            <li class="social">
				  <a rel="noopener" href="https://www.youtube.com/user/century21france" target="_blank" onclick="google_tag_event('Menu,Click,Youtube');" title="Youtube"><i class="fa fa-youtube fa-2x" aria-hidden="true"></i></a>
			</li>
            
             
              <li>
             	<a rel="noopener" class="picto-bot-c21" href="https://www.messenger.com/t/Century21France" target="_blank" onclick="google_tag_event('Menu,Click,Messenger');">
             		<img src="/theme/generic/css/images/op-marque/bot-messenger-century21.svg" alt="le Bot CENTURY 21" height="24px" width="24px" title="le Bot CENTURY 21">
             	</a>
             </li>
             
            </ul>
          </div>
        </div>
      </div>
      
      
      

      
      <header id="mainHeader">
        
        <div class="mid o-top-bar__content tw-flex tw-items-center tw-bg-c21-gold">
          <div class="content tw-container tw-mx-auto">
          	<ul>
          		<li>
          			<a href="/" id="btnLogo"
               title="Retour à l'accueil CENTURY 21, N°1 des agences immobilières dans le monde">
          				<img src="/theme/generic/css/images/op-marque/logo_c21.svg" alt="Retour à l'accueil CENTURY 21, N°1 des agences immobilières dans le monde" width="200px" height="23px" />
          				
					</a>
				</li>
          		<li class="link-nav">
          			<a class="active" href="/acheter/" onclick="google_tag_event('Menu,Click,Acheter');">ACHETER</a>
          		</li>
          		<li class="link-nav">
          			<a  href="/louer/" onclick="google_tag_event('Menu,Click,Louer');">LOUER</a>
          		</li>
          		<li class="link-nav">
          			<a  href="/outils/vendre/" onclick="google_tag_event('Menu,Click,Vendre');">VENDRE</a>
          		</li>
          		<li class="link-nav">
          			<a  href="/outils/faire_gerer/" onclick="google_tag_event('Menu,Click,Faire Gerer');">FAIRE G&Eacute;RER</a>
          		</li>
          		<li class="link-nav">
          			<a href="/commerce_entreprises/" onclick="google_tag_event('Menu,Click,Entreprise Et Commerce');">ENTREPRISE ET COMMERCE</a>
          		</li>
          		<li>
          			<a rel="noopener" href="https://www.lesmeilleurstalents.com" target="_blank" onclick="google_tag_event('Menu,Click,Offres Emploi');">OFFRES D'EMPLOI</a>
          		</li>
          		<li><a rel="noopener" href="https://franchise.century21.fr/" target="_blank" onclick="google_tag_event('Menu,Click,Devenir Franchise');">DEVENIR FRANCHIS&Eacute;</a></li>
          	</ul>
          </div>
          <div class="print_content displayNone">
            <span class="titre_h2">CENTURY 21, N°1 des agences immobilières dans le monde</span>
          </div>
        </div>
        
        
      </header>
      
      

      	
      	


      

      
      
      

      
      <div id="page">
        <div class="mid">
          
          
<!--FOND OPAQUE POUR DETAIL DE BIEN-->
<div class="fondDetail"></div>

<!-- AFFICHER LE NUM TEL DE LAG-->

<div id="numTelDiv" class="numTelAg miniPopupService">
  <a id="fermerNumTel" class="pictoBtnFermer floatR margT10 margR15"></a>
    
    <span class="telAg">
      Tél : 01 45 43 51 51 
    </span>
    
</div>


<!--code ag :3291 -->

 <div id="contactAgDiv" class="form-design ajax_form_container tw-hidden displayNone">
  <div class="content_contactAg">
  
   <form id="contact_agence_form" method="post" action="/trouver_agence/contact_agence/1427915226/" class="recaptchav3"
        onsubmit="contact_agence(this);google_tag_event('bien,envoi_msg_ag,3291'); return false;">
    <input type="hidden" name="g-recaptcha-response"/>
    
    
    <input type="hidden" name="activite_centura" value=""/>
    <label for="id_nom">Nom* :</label>
    <input id="id_nom" name="nom" type="text" />
    
    <div class="reset"></div>
    <label for="id_mail">Email* :</label>
    <input id="id_mail" name="mail" type="email" />
    
    <div class="reset"></div>
    <label for="id_telephone">Téléphone* :</label>
    <input id="id_telephone" name="telephone" type="text" />
    
    <div class="reset"></div>
    <textarea cols="40" id="id_message" name="message" placeholder="Tapez votre message ici *" rows="10">
Je suis intéressé par le bien : APPARTEMENT F4 - 1 030 000 €   - PARIS (75014) - réf : 43928</textarea>
    
    
    <input id="id_reference_bien" name="reference_bien" type="hidden" />
    
    <input id="id_uid_bien" name="uid_bien" type="hidden" value="2039788296" />
    
    <input id="id_nom_programme" name="nom_programme" type="hidden" />
    
    <input id="id_ville_programme" name="ville_programme" type="hidden" />
    
    <input id="id_ice" name="ice" type="hidden" value="false" />
    
    <div class="reset"></div>
    <br>
    <div class="zone-optin-form-estim">
	<label for="id_optin_contact" class="tw-pointer font16">
		<input id="id_optin_contact" name="optin_contact" type="checkbox" style="width: 30px;min-width: 30px;height: 30px;">
	  Je souhaite pouvoir être recontacté pour être informé de toutes les actualités CENTURY&nbsp;21
	</label>
	</div>
   <br>
    <div class="reset"></div>
    <input type="button" onclick="google_tag_event('Envoi Message Detail Bien,Click,Envoi Message Detail Bien_Achat'); contact_agence($('#contact_agence_form'));" value="Envoyer" class="fR moreYellow black margT10">
    <div class="reset"></div>
    <br><br>
    <p class="font10 LH12 justify">
		Century 21 collecte des données à caractère personnel afin de permettre au service réclamation de traiter au mieux votre demande. Les données mentionnées d'un * sont obligatoires. Conformément à la règlementation, vous disposez d'un droit d'accès, de rectification, de portabilité, d'effacement, de limitation du traitement et d'opposition au traitement. Ces droits peuvent être exercés à l'adresse <img style="display: inline-block; vertical-align: text-bottom;" src="/theme/generic/css/images/dpo-mail-black-10px.png">. Pour plus d'information <a class="link-mention black underline" href="/fiches/protection-des-donnees/" target="_blank">cliquez ici</a>.
	</p>
  </form>
  <script>
	$(document).ready(function(){
		if(window.location.href.indexOf("commerce_entreprises") > -1) {
       		$(".link-mention").attr("href","/commerce_entreprises/fiches/protection-des-donnees/");
    	}
	});
</script>
  
  </div>
</div>




          <div class="content">
            <div class="wrap">
              
<div id="boite-outil2">
	<ul>
    	<li>
        	<a class="btn-add" title="Ajouter à ma sélection" onclick="toggleSelection(this,'/accounts/selection/add/2039788296/','/accounts/selection/del/2039788296/');google_tag_event('bien-boite-outil-V2,Click,ajouter-a-ma-selection');">
            	<i class="fa fa-star fa-3x"></i>
            </a>
        </li>
    	<li><a class="tool_print" onclick="google_tag_event('Impression_fiche,Click,Impression_fiche');" title="Imprimer"><i class="fa fa-print fa-3x"></i></a></li>
    	<li>
        	<a class="btnSendFriend" rel="/mailer_un_ami/?url=/trouver_logement/detail/2039788296/" onclick="google_tag_event('bien-boite-outil-V2,Click,btn-envoi-ami');" title="Envoyer à un ami">
        		<i class="fa fa-envelope-o fa-3x"></i>
            </a>
        </li>
    	<li><a class="fancybox" href="#popupReseauxSociauxAG" onclick="google_tag_event('bien-boite-outil-V2,Click,partager-reseaux-sociaux');" title="Partager sur les réseaux sociaux"><i class="fa fa-share-alt fa-3x"></i></a>
        </li>
        
        
    </ul>
</div>


              

              

<div id="filAriane">
  <ol itemscope itemtype="http://schema.org/BreadcrumbList">
    
   <li itemprop="itemListElement" itemscope itemtype="http://schema.org/ListItem">
    
    <a href="/" itemprop="item">
        <span itemprop="name">Immobilier</span>
      </a>
      <meta itemprop="position" content="1">
   </li>
    
   <li itemprop="itemListElement" itemscope itemtype="http://schema.org/ListItem">
    
    <span class="fL margR10">›</span>
    
    <a href="/acheter/" itemprop="item">
        <span itemprop="name">Achat</span>
      </a>
      <meta itemprop="position" content="2">
   </li>
    
   <li itemprop="itemListElement" itemscope itemtype="http://schema.org/ListItem">
    
    <span class="fL margR10">›</span>
    
    <a href="/edito/achat-appartement/" itemprop="item">
        <span itemprop="name">Achat Appartement</span>
      </a>
      <meta itemprop="position" content="3">
   </li>
    
   <li itemprop="itemListElement" itemscope itemtype="http://schema.org/ListItem">
    
    <span class="fL margR10">›</span>
    
    <a href="/annonces/achat-appartement/cp-75014/s-0-/st-0-/b-0-/page-1/" itemprop="item">
        <span itemprop="name">Achat Appartement PARIS (75014)</span>
      </a>
      <meta itemprop="position" content="4">
   </li>
    
  </ol>
</div>



              <div class="outils_top_right">
                
    
    	<a class="btnRetourPage fR"></a>
    
    
    
    <div class="reset"></div>

              </div>

              
	<div class="reset"></div>
	<h1 class="h1_page">Appartement F4 &agrave; vendre - 4 pi&egrave;ces - 89 m2 - PARIS - 75014 - ILE-DE-FRANCE</h1>


              

              



              
<div class="fondAnnonce">
  






	
	
        <div id="focusAnnonceV2">
          <div class="displayNone">
            
            <div id="popupReseauxSociauxAG">
                <script>
                    $("#popupReseauxSociauxAG").ready(function(){
                        $('head').append( $('<link rel="stylesheet" type="text/css" />').attr('href', '/theme/generic/js/lib/rrssb-master-v2/css/rrssb.css') );
                        $.getScript("/theme/generic/js/lib/rrssb-master-v2/js/rrssb.min.js");
                    });
                </script>
                <strong class="font20">
                    Partager cette annonce sur :
                </strong>
                <ul class="rrssb-buttons clearfix">
                    <li class="rrssb-facebook">
                        <!-- Replace with your URL. For best results, make sure you page has the proper FB Open Graph tags in header:
                        https://developers.facebook.com/docs/opengraph/howtos/maximizing-distribution-media-content/ -->
                        <a href="https://www.facebook.com/sharer/sharer.php?u=www.century21.fr/trouver_logement/detail/2039788296/" class="popup"
                           onClick="google_tag_event('Partage_Facebook,Share,Partage_Facebook');">
                            <span class="rrssb-icon">
                                <svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" width="28px" height="28px" viewBox="0 0 28 28" enable-background="new 0 0 28 28" xml:space="preserve">
                                    <path d="M27.825,4.783c0-2.427-2.182-4.608-4.608-4.608H4.783c-2.422,0-4.608,2.182-4.608,4.608v18.434
                                        c0,2.427,2.181,4.608,4.608,4.608H14V17.379h-3.379v-4.608H14v-1.795c0-3.089,2.335-5.885,5.192-5.885h3.718v4.608h-3.726
                                        c-0.408,0-0.884,0.492-0.884,1.236v1.836h4.609v4.608h-4.609v10.446h4.916c2.422,0,4.608-2.188,4.608-4.608V4.783z"/>
                                </svg>
                            </span>
                            <span class="rrssb-text">facebook</span>
                        </a>
                    </li>
                    <li class="rrssb-twitter">
                        <!-- Replace href with your Meta and URL information  -->
                        <a href="https://twitter.com/intent/tweet/?text=Annonce:&amp;url=https%3A//www.century21.fr/trouver_logement/detail/2039788296/&amp;hashtags=century21" 						
						
						class="popup"
                           onClick="google_tag_event('Partage_Twitter,Share,Partage_Twitter');">
                            <span class="rrssb-icon">
                                <svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
                                     width="28px" height="28px" viewBox="0 0 28 28" enable-background="new 0 0 28 28" xml:space="preserve">
                                <path d="M24.253,8.756C24.689,17.08,18.297,24.182,9.97,24.62c-3.122,0.162-6.219-0.646-8.861-2.32
                                    c2.703,0.179,5.376-0.648,7.508-2.321c-2.072-0.247-3.818-1.661-4.489-3.638c0.801,0.128,1.62,0.076,2.399-0.155
                                    C4.045,15.72,2.215,13.6,2.115,11.077c0.688,0.275,1.426,0.407,2.168,0.386c-2.135-1.65-2.729-4.621-1.394-6.965
                                    C5.575,7.816,9.54,9.84,13.803,10.071c-0.842-2.739,0.694-5.64,3.434-6.482c2.018-0.623,4.212,0.044,5.546,1.683
                                    c1.186-0.213,2.318-0.662,3.329-1.317c-0.385,1.256-1.247,2.312-2.399,2.942c1.048-0.106,2.069-0.394,3.019-0.851
                                    C26.275,7.229,25.39,8.196,24.253,8.756z"/>
                                </svg>
                           </span>
                            <span class="rrssb-text">twitter</span>
                        </a>
                    </li>   
                    <li class="rrssb-linkedin">
                        <!-- Replace href with your meta and URL information -->
                        <a href="http://www.linkedin.com/shareArticle?mini=true&amp;url=www.century21.fr/trouver_logement/detail/2039788296/" class="popup"
                           onClick="google_tag_event('Partage_Linkedin,Share,Partage_Linkedin');">
                            <span class="rrssb-icon">
                                <svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" width="28px" height="28px" viewBox="0 0 28 28" enable-background="new 0 0 28 28" xml:space="preserve">
                                    <path d="M25.424,15.887v8.447h-4.896v-7.882c0-1.979-0.709-3.331-2.48-3.331c-1.354,0-2.158,0.911-2.514,1.803
                                        c-0.129,0.315-0.162,0.753-0.162,1.194v8.216h-4.899c0,0,0.066-13.349,0-14.731h4.899v2.088c-0.01,0.016-0.023,0.032-0.033,0.048
                                        h0.033V11.69c0.65-1.002,1.812-2.435,4.414-2.435C23.008,9.254,25.424,11.361,25.424,15.887z M5.348,2.501
                                        c-1.676,0-2.772,1.092-2.772,2.539c0,1.421,1.066,2.538,2.717,2.546h0.032c1.709,0,2.771-1.132,2.771-2.546
                                        C8.054,3.593,7.019,2.501,5.343,2.501H5.348z M2.867,24.334h4.897V9.603H2.867V24.334z"/>
                                </svg>
                            </span>
                            <span class="rrssb-text">linkedin</span>
                        </a>
                    </li>
                </ul>
            </div>

            

          </div>
          



	<script type="text/javascript">
    	$(document).ready(function() {
            init_galleriePhotoBien();
			if($(".btn-trans-lang").length){
				show_translate_text();
			}
            
    		$.map(['/imagesBien/202/3291/c21_202_3291_43928_8_2A765804-C7F5-4FFD-9A77-EFDAC380DE7D.jpg','/imagesBien/202/3291/c21_202_3291_43928_8_DED95FEA-E29A-40C3-8CB4-AFF4C7A1161C.jpg','/imagesBien/202/3291/c21_202_3291_43928_8_21732030-D805-48B3-BB01-5D2138701A2F.jpg','/imagesBien/202/3291/c21_202_3291_43928_8_6B0884C9-B38E-457B-B0B5-15B338A3E7CC.jpg','/imagesBien/202/3291/c21_202_3291_43928_8_78F0E4C3-1340-4024-B261-E504305A940C.jpg','/imagesBien/202/3291/c21_202_3291_43928_8_B368BA7C-F2F5-4C7C-A8EF-755AC360051F.jpg','/imagesBien/202/3291/c21_202_3291_43928_8_A224F1E4-157D-4703-B390-F4D74A43DB05.jpg','/imagesBien/202/3291/c21_202_3291_43928_8_D5190FB8-4F07-434D-A831-AB860B049BC3.jpg'], function(i) { var image=new Image(); image.src=i; return image; });
    	});

		function show_popup_calculette(){
			var popup = document.getElementById("popup_calculette");
			popup.classList.remove("displayNone");
    		popup.classList.add("show");
		}
		function close_popup_calculette(){
			var popup = document.getElementById("popup_calculette");
    		popup.classList.remove("show");
			popup.classList.add("displayNone");
		}
	</script>

    <section class="tarif">
           <span class="yellow">
            <b>1 030 000 &euro;</b><span class="condition-prix"></span>
            
            <div class="reset"></div>
            <a class="link_calculette yellow font14" data-fancybox-type="iframe" data-type="custom-url" data-url="https://www.panoranet.com/credit-immobilier/formulaire-mob/immo.php?pagevoulue=calcu&act=cap1&code=SP7BGR&montant_pret=1030000&calcul_auto=1" data-width="1100">Estimer votre mensualité</a>
            
        </span>

    
    <ul>
      
      <li>Honoraires charge vendeur</li>
      
    </ul>
    

        <div class="reset"></div>
    </section>
    <div class="reset"></div>
	<!--OPTIONS  + PHOTO -->
	<div class="zone_option_photo">
    	<!--OPTIONS DISPONIBLES-->
		<section class="optionDispo">
			<ul>
								

						
						
						<li class="photo active">
							<a class="btn-panel" data-panel="galeriePIX">
								<i class="fa fa-camera fa-lg"></i>
								8 PHOTOS
							</a>
						</li>
						

						
						

						
						
						<li class="localisation">
							<a class="btn-panel" data-panel="zoneMAP">
								<i class="fa fa-map-marker fa-lg"></i>
								POSITION
							</a>
						</li>
						

						
						

						<!--yma start update exclusivité et btn estimation-->
						
						

						
						
								
										
										<!--bloc national-->
										<li class="exclu yma-bloc-combien">
									
										<a class="btn-faire-estimer" title="et vous ? combien vaut votre bien "
										href="/estimation-immobiliere"
										onclick="google_tag_event('bien,Click,demande-estimation');" target="_blank">
											<div class="text-content">et vous ? <span>combien</span> vaut votre bien ?</div>
										</a>
										</li>
										
									
								
						

						<!--end update exclusivité-->
					</ul>
				</section>

            	<!--GALERIE + BARRE DE CONTACT-->
				<div class="zone-galerie-contact">
					<!--GALERIE PHOTO -->
					<div id="galeriePIX" class="panel-detail">
						<div id="formatL">
						
							
								<div class="galerie-load"><img src="/multimedias/images/chargement.gif" /></div>
								<a id="galPrec" class="yellow"><i class="fa fa-angle-left fa-5x"></i></a>
								<a id="galSuiv" class="yellow"><i class="fa fa-angle-right fa-5x"></i></a>

								<div class="zone-galerie">
								
									<div class="gal-item">
										<a class="fancybox" rel="gallery1" href="/imagesBien/202/3291/c21_202_3291_43928_1_2A765804-C7F5-4FFD-9A77-EFDAC380DE7D.jpg" title="Appartement F4 &agrave; vendre - 4 pi&egrave;ces - 89 m2 - PARIS - 75014 - ILE-DE-FRANCE">
										<img class="img-owl-bien" height="338" src="/imagesBien/202/3291/c21_202_3291_43928_8_2A765804-C7F5-4FFD-9A77-EFDAC380DE7D.jpg" title="Appartement F4 &agrave; vendre - 4 pi&egrave;ces - 89 m2 - PARIS - 75014 - ILE-DE-FRANCE" alt="Appartement F4 &agrave; vendre - 4 pi&egrave;ces - 89 m2 - PARIS - 75014 - ILE-DE-FRANCE"/>
										
										</a>
									</div>
								
									<div class="gal-item">
										<a class="fancybox" rel="gallery1" href="/imagesBien/202/3291/c21_202_3291_43928_1_DED95FEA-E29A-40C3-8CB4-AFF4C7A1161C.jpg" title="Appartement F4 &agrave; vendre - 4 pi&egrave;ces - 89 m2 - PARIS - 75014 - ILE-DE-FRANCE">
										<img class="img-owl-bien" height="338" src="/imagesBien/202/3291/c21_202_3291_43928_8_DED95FEA-E29A-40C3-8CB4-AFF4C7A1161C.jpg" title="Appartement F4 &agrave; vendre - 4 pi&egrave;ces - 89 m2 - PARIS - 75014 - ILE-DE-FRANCE" alt="Appartement F4 &agrave; vendre - 4 pi&egrave;ces - 89 m2 - PARIS - 75014 - ILE-DE-FRANCE"/>
										
										</a>
									</div>
								
									<div class="gal-item">
										<a class="fancybox" rel="gallery1" href="/imagesBien/202/3291/c21_202_3291_43928_1_21732030-D805-48B3-BB01-5D2138701A2F.jpg" title="Appartement F4 &agrave; vendre - 4 pi&egrave;ces - 89 m2 - PARIS - 75014 - ILE-DE-FRANCE">
										<img class="img-owl-bien" height="338" src="/imagesBien/202/3291/c21_202_3291_43928_8_21732030-D805-48B3-BB01-5D2138701A2F.jpg" title="Appartement F4 &agrave; vendre - 4 pi&egrave;ces - 89 m2 - PARIS - 75014 - ILE-DE-FRANCE" alt="Appartement F4 &agrave; vendre - 4 pi&egrave;ces - 89 m2 - PARIS - 75014 - ILE-DE-FRANCE"/>
										
										</a>
									</div>
								
									<div class="gal-item">
										<a class="fancybox" rel="gallery1" href="/imagesBien/202/3291/c21_202_3291_43928_1_6B0884C9-B38E-457B-B0B5-15B338A3E7CC.jpg" title="Appartement F4 &agrave; vendre - 4 pi&egrave;ces - 89 m2 - PARIS - 75014 - ILE-DE-FRANCE">
										<img class="img-owl-bien" height="338" src="/imagesBien/202/3291/c21_202_3291_43928_8_6B0884C9-B38E-457B-B0B5-15B338A3E7CC.jpg" title="Appartement F4 &agrave; vendre - 4 pi&egrave;ces - 89 m2 - PARIS - 75014 - ILE-DE-FRANCE" alt="Appartement F4 &agrave; vendre - 4 pi&egrave;ces - 89 m2 - PARIS - 75014 - ILE-DE-FRANCE"/>
										
										</a>
									</div>
								
									<div class="gal-item">
										<a class="fancybox" rel="gallery1" href="/imagesBien/202/3291/c21_202_3291_43928_1_78F0E4C3-1340-4024-B261-E504305A940C.jpg" title="Appartement F4 &agrave; vendre - 4 pi&egrave;ces - 89 m2 - PARIS - 75014 - ILE-DE-FRANCE">
										<img class="img-owl-bien" height="338" src="/imagesBien/202/3291/c21_202_3291_43928_8_78F0E4C3-1340-4024-B261-E504305A940C.jpg" title="Appartement F4 &agrave; vendre - 4 pi&egrave;ces - 89 m2 - PARIS - 75014 - ILE-DE-FRANCE" alt="Appartement F4 &agrave; vendre - 4 pi&egrave;ces - 89 m2 - PARIS - 75014 - ILE-DE-FRANCE"/>
										
										</a>
									</div>
								
									<div class="gal-item">
										<a class="fancybox" rel="gallery1" href="/imagesBien/202/3291/c21_202_3291_43928_1_B368BA7C-F2F5-4C7C-A8EF-755AC360051F.jpg" title="Appartement F4 &agrave; vendre - 4 pi&egrave;ces - 89 m2 - PARIS - 75014 - ILE-DE-FRANCE">
										<img class="img-owl-bien" height="338" src="/imagesBien/202/3291/c21_202_3291_43928_8_B368BA7C-F2F5-4C7C-A8EF-755AC360051F.jpg" title="Appartement F4 &agrave; vendre - 4 pi&egrave;ces - 89 m2 - PARIS - 75014 - ILE-DE-FRANCE" alt="Appartement F4 &agrave; vendre - 4 pi&egrave;ces - 89 m2 - PARIS - 75014 - ILE-DE-FRANCE"/>
										
										</a>
									</div>
								
									<div class="gal-item">
										<a class="fancybox" rel="gallery1" href="/imagesBien/202/3291/c21_202_3291_43928_1_A224F1E4-157D-4703-B390-F4D74A43DB05.jpg" title="Appartement F4 &agrave; vendre - 4 pi&egrave;ces - 89 m2 - PARIS - 75014 - ILE-DE-FRANCE">
										<img class="img-owl-bien" height="338" src="/imagesBien/202/3291/c21_202_3291_43928_8_A224F1E4-157D-4703-B390-F4D74A43DB05.jpg" title="Appartement F4 &agrave; vendre - 4 pi&egrave;ces - 89 m2 - PARIS - 75014 - ILE-DE-FRANCE" alt="Appartement F4 &agrave; vendre - 4 pi&egrave;ces - 89 m2 - PARIS - 75014 - ILE-DE-FRANCE"/>
										
										</a>
									</div>
								
									<div class="gal-item">
										<a class="fancybox" rel="gallery1" href="/imagesBien/202/3291/c21_202_3291_43928_1_D5190FB8-4F07-434D-A831-AB860B049BC3.jpg" title="Appartement F4 &agrave; vendre - 4 pi&egrave;ces - 89 m2 - PARIS - 75014 - ILE-DE-FRANCE">
										<img class="img-owl-bien" height="338" src="/imagesBien/202/3291/c21_202_3291_43928_8_D5190FB8-4F07-434D-A831-AB860B049BC3.jpg" title="Appartement F4 &agrave; vendre - 4 pi&egrave;ces - 89 m2 - PARIS - 75014 - ILE-DE-FRANCE" alt="Appartement F4 &agrave; vendre - 4 pi&egrave;ces - 89 m2 - PARIS - 75014 - ILE-DE-FRANCE"/>
										
										</a>
									</div>
								
									<div class="gal-item slide-contact">
										<img src="/theme/generic/css/images/contacter-l-agence-immobiliere.jpg" alt="Contacter l'agence">
										<span class="title-carousel-contact">Contacter l'agence :</span>
										<div class="contact-carousel">
										
											<a class="btn-contact contact-tel" data-tel="01 45 43 51 51 " onclick="google_tag_event('Voir Telephone,Click,Voir Telephone_Acheteur');"><i class="fa fa-phone" aria-hidden="true"></i> Par téléphone</a>
										
										</div>
										<div class="contact-carousel">
											<a class="afficheContactAg btn-contact" title="Envoyer un message à l'agence CENTURY 21 Porte d&#39;Orléans"><i class="fa fa-envelope-o" aria-hidden="true"></i> Par message</a>
										</div>
									</div>
								</div>
							
						
						</div>
						<div class="reset"></div>
					</div>

						<!--POUR CSS PRINT -->
						
						<div id="imgPrint" class="displayNone">
							<img src="/imagesBien/202/3291/c21_202_3291_43928_1_2A765804-C7F5-4FFD-9A77-EFDAC380DE7D.jpg" alt="Appartement F4 &agrave; vendre - 4 pi&egrave;ces - 89 m2 - PARIS - 75014 - ILE-DE-FRANCE"/>
						</div>
						
					<!--FIN GALERIE PHOTO -->
					<div class="reset"></div>

					<!-- CARTE KELQUARTIER -->
					<div id="zoneMAP" class="panel-detail">
						
<div id="mapCanvas" style="width:100%; height: 440px; margin:auto;">

</div>

<div class="reset"></div>


<ul class="cat-map zone-cat">
    
    <div class="glob-cat">
        <li data-cat="cat-agence" class="active title_cat"><span>Agence</span></li>
        <ul id="cat-agence" class="cat-attr">
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-agence.svg" />
                	<a data-layerName="agence" data-rayon="5" class="twimmo actif poi-agence">Agence</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-biens-vendus.svg" />
                	<a data-layerName="biens-vendus" data-rayon="5" class="twimmo inactif poi-biens-vendus">Biens Vendus</a>
                </div>
            </li>
            
        </ul>
	</div>
    
    <div class="glob-cat">
        <li data-cat="cat-transport" class=" title_cat"><span>Transport</span></li>
        <ul id="cat-transport" class="cat-attr">
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-aeroport.svg" />
                	<a data-layerName="aeroport" data-rayon="5" class="twimmo inactif poi-aeroport">Aéroport</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-autolib.svg" />
                	<a data-layerName="autolib" data-rayon="5" class="twimmo inactif poi-autolib">Autolib&#39;</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-bus.svg" />
                	<a data-layerName="bus" data-rayon="5" class="twimmo inactif poi-bus">Bus</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-ferry.svg" />
                	<a data-layerName="ferry" data-rayon="5" class="twimmo inactif poi-ferry">Ferry</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-gare.svg" />
                	<a data-layerName="gare" data-rayon="5" class="twimmo inactif poi-gare">Gare</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-location-de-velo.svg" />
                	<a data-layerName="location-de-velo" data-rayon="5" class="twimmo inactif poi-location-de-velo">Location De Vélo</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-metro.svg" />
                	<a data-layerName="metro" data-rayon="5" class="twimmo inactif poi-metro">Métro</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-parking.svg" />
                	<a data-layerName="parking" data-rayon="5" class="twimmo inactif poi-parking">Parking</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-parking-velo.svg" />
                	<a data-layerName="parking-velo" data-rayon="5" class="twimmo inactif poi-parking-velo">Parking Vélo</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-rer.svg" />
                	<a data-layerName="rer" data-rayon="5" class="twimmo inactif poi-rer">Rer</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-taxi.svg" />
                	<a data-layerName="taxi" data-rayon="5" class="twimmo inactif poi-taxi">Taxi</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-station-service.svg" />
                	<a data-layerName="station-service" data-rayon="5" class="twimmo inactif poi-station-service">Station Serice</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-tramway.svg" />
                	<a data-layerName="tramway" data-rayon="5" class="twimmo inactif poi-tramway">Tramway</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-velib.svg" />
                	<a data-layerName="velib" data-rayon="5" class="twimmo inactif poi-velib">Vélib&#39;</a>
                </div>
            </li>
            
        </ul>
	</div>
    
    <div class="glob-cat">
        <li data-cat="cat-education-enfance" class=" title_cat"><span>Éducation &amp; Enfance</span></li>
        <ul id="cat-education-enfance" class="cat-attr">
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-creche.svg" />
                	<a data-layerName="creche" data-rayon="5" class="twimmo inactif poi-creche">Crèche</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-ludotheque.svg" />
                	<a data-layerName="ludotheque" data-rayon="5" class="twimmo inactif poi-ludotheque">Ludothèque</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-ecole-maternelle.svg" />
                	<a data-layerName="ecole-maternelle" data-rayon="5" class="twimmo inactif poi-ecole-maternelle">École Maternelle</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-ecole-primaire.svg" />
                	<a data-layerName="ecole-primaire" data-rayon="5" class="twimmo inactif poi-ecole-primaire">École Primaire</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-college.svg" />
                	<a data-layerName="college" data-rayon="5" class="twimmo inactif poi-college">Collège</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-lycee.svg" />
                	<a data-layerName="lycee" data-rayon="5" class="twimmo inactif poi-lycee">Lycée</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-enseignement-superieur.svg" />
                	<a data-layerName="enseignement-superieur" data-rayon="5" class="twimmo inactif poi-enseignement-superieur">Enseignement Supérieur</a>
                </div>
            </li>
            
        </ul>
	</div>
    
    <div class="glob-cat">
        <li data-cat="cat-commerce-service" class=" title_cat"><span>Commerce &amp; Service</span></li>
        <ul id="cat-commerce-service" class="cat-attr">
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-banque.svg" />
                	<a data-layerName="banque" data-rayon="5" class="twimmo inactif poi-banque">Banque</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-bar.svg" />
                	<a data-layerName="bar" data-rayon="5" class="twimmo inactif poi-bar">Bar</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-boucherie.svg" />
                	<a data-layerName="boucherie" data-rayon="5" class="twimmo inactif poi-boucherie">Boucherie</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-boulangerie.svg" />
                	<a data-layerName="boulangerie" data-rayon="5" class="twimmo inactif poi-boulangerie">Boulangerie</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-poste.svg" />
                	<a data-layerName="poste" data-rayon="5" class="twimmo inactif poi-poste">Bureau De Poste</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-marche-de-quartier.svg" />
                	<a data-layerName="marche-de-quartier" data-rayon="5" class="twimmo inactif poi-marche-de-quartier">Marché De Quartier</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-presse-et-tabac.svg" />
                	<a data-layerName="presse-et-tabac" data-rayon="5" class="twimmo inactif poi-presse-et-tabac">Presse &amp; Tabac</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-restaurant.svg" />
                	<a data-layerName="restaurant" data-rayon="5" class="twimmo inactif poi-restaurant">Restaurant</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-superette.svg" />
                	<a data-layerName="superette" data-rayon="5" class="twimmo inactif poi-superette">Supérette</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-supermarche-et-hypermarche.svg" />
                	<a data-layerName="supermarche-et-hypermarche" data-rayon="5" class="twimmo inactif poi-supermarche-et-hypermarche">Supermarché Et Hypermarché</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-centre-commercial.svg" />
                	<a data-layerName="centre-commercial" data-rayon="5" class="twimmo inactif poi-centre-commercial">Centre Commercial</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-hotel.svg" />
                	<a data-layerName="hotel" data-rayon="5" class="twimmo inactif poi-hotel">Hôtel</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-residence-de-tourisme-village-etpparc.svg" />
                	<a data-layerName="residence-de-tourisme-village-et-parc" data-rayon="5" class="twimmo inactif poi-residence-de-tourisme-village-et-parc">Résidence De Tourisme, Village Et Parc</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-camping.svg" />
                	<a data-layerName="camping" data-rayon="5" class="twimmo inactif poi-camping">Camping</a>
                </div>
            </li>
            
        </ul>
	</div>
    
    <div class="glob-cat">
        <li data-cat="cat-loisir-sports" class=" title_cat"><span>Loisir &amp; Sports</span></li>
        <ul id="cat-loisir-sports" class="cat-attr">
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-cinemas.svg" />
                	<a data-layerName="cinemas" data-rayon="5" class="twimmo inactif poi-cinemas">Cinémas</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-parc-jardin-et-square.svg" />
                	<a data-layerName="parc-jardin-et-square" data-rayon="5" class="twimmo inactif poi-parc-jardin-et-square">Parc, Jardin Et Square</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-salle-de-musculation-fitness.svg" />
                	<a data-layerName="salle-de-musculation-fitness" data-rayon="5" class="twimmo inactif poi-salle-de-musculation-fitness">Salle De Musculation/Fitness </a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-terrain-et-salle-de-sport.svg" />
                	<a data-layerName="terrain-et-salle-de-sport" data-rayon="5" class="twimmo inactif poi-terrain-et-salle-de-sport">Terrain Et Salle De Sport</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-billard-bowling-paintball.svg" />
                	<a data-layerName="billard-bowling-paintball" data-rayon="5" class="twimmo inactif poi-billard-bowling-paintball">Billard, Bowling &amp; Paintball</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-equitation.svg" />
                	<a data-layerName="equitation" data-rayon="5" class="twimmo inactif poi-equitation">Équitation</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-escalade.svg" />
                	<a data-layerName="escalade" data-rayon="5" class="twimmo inactif poi-escalade">Escalade</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-natation-sports-nautiques.svg" />
                	<a data-layerName="natation-sports-nautiques" data-rayon="5" class="twimmo inactif poi-natation-sports-nautiques">Natation, Sports Nautiques</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-peche.svg" />
                	<a data-layerName="peche" data-rayon="5" class="twimmo inactif poi-peche">Pêche</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-randonnee.svg" />
                	<a data-layerName="randonnee" data-rayon="5" class="twimmo inactif poi-randonnee">Randonnée</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-sport-mecanique.svg" />
                	<a data-layerName="sport-mecanique" data-rayon="5" class="twimmo inactif poi-sport-mecanique">Sport Mécanique</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-tennis.svg" />
                	<a data-layerName="tennis" data-rayon="5" class="twimmo inactif poi-tennis">Tennis</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-vtt.svg" />
                	<a data-layerName="vtt" data-rayon="5" class="twimmo inactif poi-vtt">Vtt</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-casino.svg" />
                	<a data-layerName="casino" data-rayon="5" class="twimmo inactif poi-casino">Casino</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-golf.svg" />
                	<a data-layerName="golf" data-rayon="5" class="twimmo inactif poi-golf">Golf</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-sport-aerien.svg" />
                	<a data-layerName="sport-aerien" data-rayon="5" class="twimmo inactif poi-sport-aerien">Sport Aérien</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-ski.svg" />
                	<a data-layerName="ski" data-rayon="5" class="twimmo inactif poi-ski">Ski</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-base-de-loisirs.svg" />
                	<a data-layerName="base-de-loisirs" data-rayon="5" class="twimmo inactif poi-base-de-loisirs">Base De Loisirs</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-aquarium.svg" />
                	<a data-layerName="aquarium" data-rayon="5" class="twimmo inactif poi-aquarium">Aquarium</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-parc-dattraction.svg" />
                	<a data-layerName="parc-dattraction" data-rayon="5" class="twimmo inactif poi-parc-dattraction">Parc D&#39;Attraction</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-zoo.svg" />
                	<a data-layerName="zoo" data-rayon="5" class="twimmo inactif poi-zoo">Zoo</a>
                </div>
            </li>
            
        </ul>
	</div>
    
    <div class="glob-cat">
        <li data-cat="cat-culture-tourisme" class=" title_cat"><span>Culture &amp; Tourisme</span></li>
        <ul id="cat-culture-tourisme" class="cat-attr">
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-monument-historique.svg" />
                	<a data-layerName="monument-historique" data-rayon="5" class="twimmo inactif poi-monument-historique">Monument Historique</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-theatre.svg" />
                	<a data-layerName="theatre" data-rayon="5" class="twimmo inactif poi-theatre">Théâtre</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-musee.svg" />
                	<a data-layerName="musee" data-rayon="5" class="twimmo inactif poi-musee">Musée</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-festival.svg" />
                	<a data-layerName="festival" data-rayon="5" class="twimmo inactif poi-festival">Festival</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-agglomeration.svg" />
                	<a data-layerName="agglomeration" data-rayon="5" class="twimmo inactif poi-agglomeration">Agglomération</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-centre-ville.svg" />
                	<a data-layerName="centre-ville" data-rayon="5" class="twimmo inactif poi-centre-ville">Centre Ville</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-ville.svg" />
                	<a data-layerName="ville" data-rayon="5" class="twimmo inactif poi-ville">Ville</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-bibliotheque.svg" />
                	<a data-layerName="bibliotheque" data-rayon="5" class="twimmo inactif poi-bibliotheque">Bibliothèque</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-incontournable.svg" />
                	<a data-layerName="incontournable" data-rayon="5" class="twimmo inactif poi-incontournable">Incontournable</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-plage.svg" />
                	<a data-layerName="plage" data-rayon="5" class="twimmo inactif poi-plage">Plage</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-baignade-en-lac-et-riviere.svg" />
                	<a data-layerName="baignade-en-lac-et-riviere" data-rayon="5" class="twimmo inactif poi-baignade-en-lac-et-riviere">Baignade En Lac Et Rivière</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-mer.svg" />
                	<a data-layerName="mer" data-rayon="5" class="twimmo inactif poi-mer">Mer</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-montagne.svg" />
                	<a data-layerName="montagne" data-rayon="5" class="twimmo inactif poi-montagne">Montagne</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-campagne.svg" />
                	<a data-layerName="campagne" data-rayon="5" class="twimmo inactif poi-campagne">Campagne</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-lac.svg" />
                	<a data-layerName="lac" data-rayon="5" class="twimmo inactif poi-lac">Lac</a>
                </div>
            </li>
            
        </ul>
	</div>
    
    <div class="glob-cat">
        <li data-cat="cat-sante-prevention" class=" title_cat"><span>Santé &amp; Prévention</span></li>
        <ul id="cat-sante-prevention" class="cat-attr">
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-hopital.svg" />
                	<a data-layerName="hopital" data-rayon="5" class="twimmo inactif poi-hopital">Hôpital</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-medecine-generaliste.svg" />
                	<a data-layerName="medecine-generaliste" data-rayon="5" class="twimmo inactif poi-medecine-generaliste">Médecine Généraliste</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-medecine-specialiste.svg" />
                	<a data-layerName="medecine-specialiste" data-rayon="5" class="twimmo inactif poi-medecine-specialiste">Médecine Spécialiste</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-pharmacie.svg" />
                	<a data-layerName="pharmacie" data-rayon="5" class="twimmo inactif poi-pharmacie">Pharmacie</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-antennes-relais.svg" />
                	<a data-layerName="antennes-relais" data-rayon="5" class="twimmo inactif poi-antennes-relais">Antennes Relais</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-etablissement-polluant.svg" />
                	<a data-layerName="etablissement-polluant" data-rayon="5" class="twimmo inactif poi-etablissement-polluant">Établissement Polluant</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-site-polue.svg" />
                	<a data-layerName="site-polue" data-rayon="5" class="twimmo inactif poi-site-polue">Site Polué</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-site-potentiellement-polue.svg" />
                	<a data-layerName="site-potentiellement-polue" data-rayon="5" class="twimmo inactif poi-site-potentiellement-polue">Site Potentiellement Polué</a>
                </div>
            </li>
            
        </ul>
	</div>
    
    <div class="glob-cat">
        <li data-cat="cat-service-public" class=" title_cat"><span>Service Public</span></li>
        <ul id="cat-service-public" class="cat-attr">
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-caf.svg" />
                	<a data-layerName="caf" data-rayon="5" class="twimmo inactif poi-caf">Caf</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-cpam.svg" />
                	<a data-layerName="cpam" data-rayon="5" class="twimmo inactif poi-cpam">Cpam</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-gendarmerie.svg" />
                	<a data-layerName="gendarmerie" data-rayon="5" class="twimmo inactif poi-gendarmerie">Gendarmerie</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-greffe.svg" />
                	<a data-layerName="greffe" data-rayon="5" class="twimmo inactif poi-greffe">Greffe</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-mairie.svg" />
                	<a data-layerName="mairie" data-rayon="5" class="twimmo inactif poi-mairie">Mairie</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-pole-emploi.svg" />
                	<a data-layerName="pole-emploi" data-rayon="5" class="twimmo inactif poi-pole-emploi">Pôle Emploi</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-police.svg" />
                	<a data-layerName="police" data-rayon="5" class="twimmo inactif poi-police">Police</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-prefecture.svg" />
                	<a data-layerName="prefecture" data-rayon="5" class="twimmo inactif poi-prefecture">Préfecture</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-service-des-impots-des-entreprises.svg" />
                	<a data-layerName="service-des-impots-des-entreprises" data-rayon="5" class="twimmo inactif poi-service-des-impots-des-entreprises">Service Des Impôts Des Entreprises</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-service-des-impots-des-particulier.svg" />
                	<a data-layerName="service-des-impots-des-particulier" data-rayon="5" class="twimmo inactif poi-service-des-impots-des-particulier">Service Des Impôts Des Particuliers</a>
                </div>
            </li>
            
        </ul>
	</div>
    
</ul>
<div class="reset"></div>


<div class="zone-cat">
	<form>
        
        <ul id="cat-agence">
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-agence.svg" />
                	<a data-layerName="agence" data-rayon="5" class="twimmo actif poi-agence">Agence</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-biens-vendus.svg" />
                	<a data-layerName="biens-vendus" data-rayon="5" class="twimmo inactif poi-biens-vendus">Biens Vendus</a>
                </div>
            </li>
            
        </ul>
        
        <ul id="cat-transport">
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-aeroport.svg" />
                	<a data-layerName="aeroport" data-rayon="5" class="twimmo inactif poi-aeroport">Aéroport</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-autolib.svg" />
                	<a data-layerName="autolib" data-rayon="5" class="twimmo inactif poi-autolib">Autolib&#39;</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-bus.svg" />
                	<a data-layerName="bus" data-rayon="5" class="twimmo inactif poi-bus">Bus</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-ferry.svg" />
                	<a data-layerName="ferry" data-rayon="5" class="twimmo inactif poi-ferry">Ferry</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-gare.svg" />
                	<a data-layerName="gare" data-rayon="5" class="twimmo inactif poi-gare">Gare</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-location-de-velo.svg" />
                	<a data-layerName="location-de-velo" data-rayon="5" class="twimmo inactif poi-location-de-velo">Location De Vélo</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-metro.svg" />
                	<a data-layerName="metro" data-rayon="5" class="twimmo inactif poi-metro">Métro</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-parking.svg" />
                	<a data-layerName="parking" data-rayon="5" class="twimmo inactif poi-parking">Parking</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-parking-velo.svg" />
                	<a data-layerName="parking-velo" data-rayon="5" class="twimmo inactif poi-parking-velo">Parking Vélo</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-rer.svg" />
                	<a data-layerName="rer" data-rayon="5" class="twimmo inactif poi-rer">Rer</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-taxi.svg" />
                	<a data-layerName="taxi" data-rayon="5" class="twimmo inactif poi-taxi">Taxi</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-station-service.svg" />
                	<a data-layerName="station-service" data-rayon="5" class="twimmo inactif poi-station-service">Station Serice</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-tramway.svg" />
                	<a data-layerName="tramway" data-rayon="5" class="twimmo inactif poi-tramway">Tramway</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-velib.svg" />
                	<a data-layerName="velib" data-rayon="5" class="twimmo inactif poi-velib">Vélib&#39;</a>
                </div>
            </li>
            
        </ul>
        
        <ul id="cat-education-enfance">
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-creche.svg" />
                	<a data-layerName="creche" data-rayon="5" class="twimmo inactif poi-creche">Crèche</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-ludotheque.svg" />
                	<a data-layerName="ludotheque" data-rayon="5" class="twimmo inactif poi-ludotheque">Ludothèque</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-ecole-maternelle.svg" />
                	<a data-layerName="ecole-maternelle" data-rayon="5" class="twimmo inactif poi-ecole-maternelle">École Maternelle</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-ecole-primaire.svg" />
                	<a data-layerName="ecole-primaire" data-rayon="5" class="twimmo inactif poi-ecole-primaire">École Primaire</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-college.svg" />
                	<a data-layerName="college" data-rayon="5" class="twimmo inactif poi-college">Collège</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-lycee.svg" />
                	<a data-layerName="lycee" data-rayon="5" class="twimmo inactif poi-lycee">Lycée</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-enseignement-superieur.svg" />
                	<a data-layerName="enseignement-superieur" data-rayon="5" class="twimmo inactif poi-enseignement-superieur">Enseignement Supérieur</a>
                </div>
            </li>
            
        </ul>
        
        <ul id="cat-commerce-service">
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-banque.svg" />
                	<a data-layerName="banque" data-rayon="5" class="twimmo inactif poi-banque">Banque</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-bar.svg" />
                	<a data-layerName="bar" data-rayon="5" class="twimmo inactif poi-bar">Bar</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-boucherie.svg" />
                	<a data-layerName="boucherie" data-rayon="5" class="twimmo inactif poi-boucherie">Boucherie</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-boulangerie.svg" />
                	<a data-layerName="boulangerie" data-rayon="5" class="twimmo inactif poi-boulangerie">Boulangerie</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-poste.svg" />
                	<a data-layerName="poste" data-rayon="5" class="twimmo inactif poi-poste">Bureau De Poste</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-marche-de-quartier.svg" />
                	<a data-layerName="marche-de-quartier" data-rayon="5" class="twimmo inactif poi-marche-de-quartier">Marché De Quartier</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-presse-et-tabac.svg" />
                	<a data-layerName="presse-et-tabac" data-rayon="5" class="twimmo inactif poi-presse-et-tabac">Presse &amp; Tabac</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-restaurant.svg" />
                	<a data-layerName="restaurant" data-rayon="5" class="twimmo inactif poi-restaurant">Restaurant</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-superette.svg" />
                	<a data-layerName="superette" data-rayon="5" class="twimmo inactif poi-superette">Supérette</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-supermarche-et-hypermarche.svg" />
                	<a data-layerName="supermarche-et-hypermarche" data-rayon="5" class="twimmo inactif poi-supermarche-et-hypermarche">Supermarché Et Hypermarché</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-centre-commercial.svg" />
                	<a data-layerName="centre-commercial" data-rayon="5" class="twimmo inactif poi-centre-commercial">Centre Commercial</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-hotel.svg" />
                	<a data-layerName="hotel" data-rayon="5" class="twimmo inactif poi-hotel">Hôtel</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-residence-de-tourisme-village-etpparc.svg" />
                	<a data-layerName="residence-de-tourisme-village-et-parc" data-rayon="5" class="twimmo inactif poi-residence-de-tourisme-village-et-parc">Résidence De Tourisme, Village Et Parc</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-camping.svg" />
                	<a data-layerName="camping" data-rayon="5" class="twimmo inactif poi-camping">Camping</a>
                </div>
            </li>
            
        </ul>
        
        <ul id="cat-loisir-sports">
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-cinemas.svg" />
                	<a data-layerName="cinemas" data-rayon="5" class="twimmo inactif poi-cinemas">Cinémas</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-parc-jardin-et-square.svg" />
                	<a data-layerName="parc-jardin-et-square" data-rayon="5" class="twimmo inactif poi-parc-jardin-et-square">Parc, Jardin Et Square</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-salle-de-musculation-fitness.svg" />
                	<a data-layerName="salle-de-musculation-fitness" data-rayon="5" class="twimmo inactif poi-salle-de-musculation-fitness">Salle De Musculation/Fitness </a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-terrain-et-salle-de-sport.svg" />
                	<a data-layerName="terrain-et-salle-de-sport" data-rayon="5" class="twimmo inactif poi-terrain-et-salle-de-sport">Terrain Et Salle De Sport</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-billard-bowling-paintball.svg" />
                	<a data-layerName="billard-bowling-paintball" data-rayon="5" class="twimmo inactif poi-billard-bowling-paintball">Billard, Bowling &amp; Paintball</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-equitation.svg" />
                	<a data-layerName="equitation" data-rayon="5" class="twimmo inactif poi-equitation">Équitation</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-escalade.svg" />
                	<a data-layerName="escalade" data-rayon="5" class="twimmo inactif poi-escalade">Escalade</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-natation-sports-nautiques.svg" />
                	<a data-layerName="natation-sports-nautiques" data-rayon="5" class="twimmo inactif poi-natation-sports-nautiques">Natation, Sports Nautiques</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-peche.svg" />
                	<a data-layerName="peche" data-rayon="5" class="twimmo inactif poi-peche">Pêche</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-randonnee.svg" />
                	<a data-layerName="randonnee" data-rayon="5" class="twimmo inactif poi-randonnee">Randonnée</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-sport-mecanique.svg" />
                	<a data-layerName="sport-mecanique" data-rayon="5" class="twimmo inactif poi-sport-mecanique">Sport Mécanique</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-tennis.svg" />
                	<a data-layerName="tennis" data-rayon="5" class="twimmo inactif poi-tennis">Tennis</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-vtt.svg" />
                	<a data-layerName="vtt" data-rayon="5" class="twimmo inactif poi-vtt">Vtt</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-casino.svg" />
                	<a data-layerName="casino" data-rayon="5" class="twimmo inactif poi-casino">Casino</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-golf.svg" />
                	<a data-layerName="golf" data-rayon="5" class="twimmo inactif poi-golf">Golf</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-sport-aerien.svg" />
                	<a data-layerName="sport-aerien" data-rayon="5" class="twimmo inactif poi-sport-aerien">Sport Aérien</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-ski.svg" />
                	<a data-layerName="ski" data-rayon="5" class="twimmo inactif poi-ski">Ski</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-base-de-loisirs.svg" />
                	<a data-layerName="base-de-loisirs" data-rayon="5" class="twimmo inactif poi-base-de-loisirs">Base De Loisirs</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-aquarium.svg" />
                	<a data-layerName="aquarium" data-rayon="5" class="twimmo inactif poi-aquarium">Aquarium</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-parc-dattraction.svg" />
                	<a data-layerName="parc-dattraction" data-rayon="5" class="twimmo inactif poi-parc-dattraction">Parc D&#39;Attraction</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-zoo.svg" />
                	<a data-layerName="zoo" data-rayon="5" class="twimmo inactif poi-zoo">Zoo</a>
                </div>
            </li>
            
        </ul>
        
        <ul id="cat-culture-tourisme">
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-monument-historique.svg" />
                	<a data-layerName="monument-historique" data-rayon="5" class="twimmo inactif poi-monument-historique">Monument Historique</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-theatre.svg" />
                	<a data-layerName="theatre" data-rayon="5" class="twimmo inactif poi-theatre">Théâtre</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-musee.svg" />
                	<a data-layerName="musee" data-rayon="5" class="twimmo inactif poi-musee">Musée</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-festival.svg" />
                	<a data-layerName="festival" data-rayon="5" class="twimmo inactif poi-festival">Festival</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-agglomeration.svg" />
                	<a data-layerName="agglomeration" data-rayon="5" class="twimmo inactif poi-agglomeration">Agglomération</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-centre-ville.svg" />
                	<a data-layerName="centre-ville" data-rayon="5" class="twimmo inactif poi-centre-ville">Centre Ville</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-ville.svg" />
                	<a data-layerName="ville" data-rayon="5" class="twimmo inactif poi-ville">Ville</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-bibliotheque.svg" />
                	<a data-layerName="bibliotheque" data-rayon="5" class="twimmo inactif poi-bibliotheque">Bibliothèque</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-incontournable.svg" />
                	<a data-layerName="incontournable" data-rayon="5" class="twimmo inactif poi-incontournable">Incontournable</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-plage.svg" />
                	<a data-layerName="plage" data-rayon="5" class="twimmo inactif poi-plage">Plage</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-baignade-en-lac-et-riviere.svg" />
                	<a data-layerName="baignade-en-lac-et-riviere" data-rayon="5" class="twimmo inactif poi-baignade-en-lac-et-riviere">Baignade En Lac Et Rivière</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-mer.svg" />
                	<a data-layerName="mer" data-rayon="5" class="twimmo inactif poi-mer">Mer</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-montagne.svg" />
                	<a data-layerName="montagne" data-rayon="5" class="twimmo inactif poi-montagne">Montagne</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-campagne.svg" />
                	<a data-layerName="campagne" data-rayon="5" class="twimmo inactif poi-campagne">Campagne</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-lac.svg" />
                	<a data-layerName="lac" data-rayon="5" class="twimmo inactif poi-lac">Lac</a>
                </div>
            </li>
            
        </ul>
        
        <ul id="cat-sante-prevention">
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-hopital.svg" />
                	<a data-layerName="hopital" data-rayon="5" class="twimmo inactif poi-hopital">Hôpital</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-medecine-generaliste.svg" />
                	<a data-layerName="medecine-generaliste" data-rayon="5" class="twimmo inactif poi-medecine-generaliste">Médecine Généraliste</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-medecine-specialiste.svg" />
                	<a data-layerName="medecine-specialiste" data-rayon="5" class="twimmo inactif poi-medecine-specialiste">Médecine Spécialiste</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-pharmacie.svg" />
                	<a data-layerName="pharmacie" data-rayon="5" class="twimmo inactif poi-pharmacie">Pharmacie</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-antennes-relais.svg" />
                	<a data-layerName="antennes-relais" data-rayon="5" class="twimmo inactif poi-antennes-relais">Antennes Relais</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-etablissement-polluant.svg" />
                	<a data-layerName="etablissement-polluant" data-rayon="5" class="twimmo inactif poi-etablissement-polluant">Établissement Polluant</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-site-polue.svg" />
                	<a data-layerName="site-polue" data-rayon="5" class="twimmo inactif poi-site-polue">Site Polué</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-site-potentiellement-polue.svg" />
                	<a data-layerName="site-potentiellement-polue" data-rayon="5" class="twimmo inactif poi-site-potentiellement-polue">Site Potentiellement Polué</a>
                </div>
            </li>
            
        </ul>
        
        <ul id="cat-service-public">
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-caf.svg" />
                	<a data-layerName="caf" data-rayon="5" class="twimmo inactif poi-caf">Caf</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-cpam.svg" />
                	<a data-layerName="cpam" data-rayon="5" class="twimmo inactif poi-cpam">Cpam</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-gendarmerie.svg" />
                	<a data-layerName="gendarmerie" data-rayon="5" class="twimmo inactif poi-gendarmerie">Gendarmerie</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-greffe.svg" />
                	<a data-layerName="greffe" data-rayon="5" class="twimmo inactif poi-greffe">Greffe</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-mairie.svg" />
                	<a data-layerName="mairie" data-rayon="5" class="twimmo inactif poi-mairie">Mairie</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-pole-emploi.svg" />
                	<a data-layerName="pole-emploi" data-rayon="5" class="twimmo inactif poi-pole-emploi">Pôle Emploi</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-police.svg" />
                	<a data-layerName="police" data-rayon="5" class="twimmo inactif poi-police">Police</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-prefecture.svg" />
                	<a data-layerName="prefecture" data-rayon="5" class="twimmo inactif poi-prefecture">Préfecture</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-service-des-impots-des-entreprises.svg" />
                	<a data-layerName="service-des-impots-des-entreprises" data-rayon="5" class="twimmo inactif poi-service-des-impots-des-entreprises">Service Des Impôts Des Entreprises</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-service-des-impots-des-particulier.svg" />
                	<a data-layerName="service-des-impots-des-particulier" data-rayon="5" class="twimmo inactif poi-service-des-impots-des-particulier">Service Des Impôts Des Particuliers</a>
                </div>
            </li>
            
        </ul>
        
    </form>
</div>

					</div>
					<!-- FIN CARTE KELQUARTIER -->
					<div class="reset"></div>
					<!--BARRE DE CONTACT -->
					<span class="barre-NoFixe"></span>
					<section class="barre-contact">
						<div class="content-barre-contact">
							<span class="infos_fixe margR10">
								<p class="white bold font14 margB5 center">Réf: 43928</p>
								<p class="yellow bold font18 center">1 030 000 &euro; </p>
							</span>
							<ul class="lireMoreUNDER_ANNONCE version-orange ">
				
							  <li>
				
								<a class="btn-contact contact-tel" data-tel="01 45 43 51 51 " onclick="google_tag_event('Voir Telephone,Click,Voir Telephone_Acheteur');">
									Voir le téléphone
								</a>
				
						</li>
				
				
							  <li style="display: block; margin: 0 auto !important;">
								<a class="afficheContactAg btn-contact center-block" title="Envoyer un message à l'agence CENTURY 21 Porte d&#39;Orléans">Envoyer un message</a>
							  </li>
				
							  
							  
								  
									  <li>
										<a class="afficheVotreAg btn-contact" onclick="google_tag_event('bien,Affiche-votreagence,3291');" title="L'agence CENTURY 21 Porte d&#39;Orléans est à votre disposition">
											Votre agence
										</a>
									  </li>
								   
							
							</ul>
							<div class="reset"></div>
						</div>
					</section>
				</div>
		</div>

            <div class="reset"></div>

            <section class="precision">
                <span class="bold font20 margB10 inlineblock">Description</span>
                <span class="yellow font20 margL20 bold">Réf: 43928</span>
				
				
				<span class="fR">
                	
                        <!-- to delete si c'est ok
							 <a class="yellow bold font20"
                          href="//www.century21.fr/outils/vendre/?utm_source=century21&utm_medium=btn-fiche-bien&utm_content=v1&utm_campaign=btn-fiche-bien-estimation"
                          onclick="google_tag_event('bien,Click,demande-estimation');">
                              Faire estimer mon bien
						  </a>
						  -->
                    
                    <div class="reset"></div>
				</span>
				
			
                <div class="reset"></div>

                <span class="block margB5">
                        
                                
                        
                </span>

                
                <div class="desc-fr">
                    <p class="font16 LH19 justify">
                      PARIS 14 - ALESIA / PLAISANCE : 4 PIECES + CAVE - RESIDENCE DE STANDING 2004 KAUFMANN & BROAD.<br /><br />Au 3e étage avec ascenseur d'un immeuble de qualité sécurisé et bien entretenu avec accès PMR, cet appartement se compose d'une entrée, d'une belle pièce de vie lumineuse de 26 m2 (exposée Ouest) avec une belle terrasse de 8 m2 sur cour avec vue dégagée, d'une cuisine indépendante aménagée et équipée, de trois belles chambres (de 10, 10.5 et 12m2) avec placards, dont une suite parentale avec sa salle d'eau, d'une salle de bain et de 2 WC indépendants. <br />Secteur très recherché.<br /><br />Une cave et un parking boxé (avec prise pour véhicule électrique).complètent ce bien.<br /><br />A proximité des commerces et des transports (idéalement situé à 2 min de la ligne 13 et 5 minutes de la ligne 4).
                    </p>
				</div>
                


                
                <div class="desc-uk displayNone">
                	<p class="font16 LH19 justify">
                        
                                
                        
                    </p>
                </div>
                <div class="reset"></div>
                
                
            </section>
        </div>
	


</div>
<div class="reset"></div>

<script>	
  google_tag_event('bien,page_detail_ouverte,202_3291_43928');	
  google_tag_event('bien,page_detail_achat_ouverte,appartement');
</script>




<div id="moreFarWRAP">
  <div id="moreFar">
    <span id="ancreMENU"></span>
    <a id="hauteurScroll" class="hauteurFixe" rel="680"></a>

    <section id="ficheDetail" class="slide slide1">

		<h2>Fiche détaillée du bien immobilier</h2>
      	<div class="zone-contenu-slide">
		  
		  
		  
		  

<div class="col-gauche-slide">


<div class="box">
  <span class="fiche-subtitle">Vue globale</span>
  
<ul>
  
  
  <li><span class="titreDetail">Type d'appartement</span> : F4</li>
  
  
  <li><span class="titreDetail">Surface totale</span> : 89,7 m<sup>2</sup></li>
  
  
  <li><span class="titreDetail">Surface habitable</span> : 89,7 m<sup>2</sup></li>
  
  
  

  
  <li><span class="titreDetail">
      <div class="posL">
        <div id="descDetailPiece" class="descriptionLongue">
          <a  id="fermerDescLongue" class="pictoBtnFermer floatR"></a>
          <ul>
            
            <li>Entrée (6,2 m<sup>2</sup>)</li>
            
            <li>Séjour (25,8 m<sup>2</sup>)</li>
            
            <li>Dégagement (5,1 m<sup>2</sup>)</li>
            
            <li>chambre 1 (12,1 m<sup>2</sup>)</li>
            
            <li>Salle d&#39;eau (3,1 m<sup>2</sup>)</li>
            
            <li>WC (1,4 m<sup>2</sup>)</li>
            
            <li>Salle de bains (3,8 m<sup>2</sup>)</li>
            
            <li>Chambre 2 (10 m<sup>2</sup>)</li>
            
            <li>Chambre 3 (10,5 m<sup>2</sup>)</li>
            
            <li>Cuisine (9 m<sup>2</sup>)</li>
            
            <li>WC (1,5 m<sup>2</sup>)</li>
            
            <li>Terrasse (8,5 m<sup>2</sup>)</li>
            
          </ul>
        </div>
      </div>Nombre de pièces :</span>4 <a class="lienPlusDetail" id="lienDetailPiece">[Voir en détail]</a>
  </li>
  

  
  
  
  
  

</ul>

</div>



<div class="box">
    <span class="fiche-subtitle">Equipement </span>
  <ul>
    
    <li><span class="titreDetail">WC séparés</span></li>
    
    <li><span class="titreDetail">Porte</span> : Blindée</li>
    
    <li><span class="titreDetail">Chauffage</span> : Collectif  urbain</li>
    
    <li><span class="titreDetail">Ascenseur</span></li>
    
    <li><span class="titreDetail">Digicode</span></li>
    
    <li><span class="titreDetail">Interphone</span></li>
    
    <li><span class="titreDetail">Videophone</span></li>
    
  </ul>
</div>



<div class="box">
  <span class="fiche-subtitle">Les Plus</span>
  <ul>
    
    
    
    
    
    <li class="picto jardin">Terrasse</li>
    <li class="picto vue" title="cour et calme">cour et calme</li>
    
    
  </ul>
</div>

<div class="box">

<span class="fiche-subtitle">&Agrave; savoir</span>
  <ul>
      
    
    
    <li><span class="titreDetail">Charges / mois</span> : 435 €</li>
    
    <li><span class="titreDetail">Taxe foncière</span> : 970 €</li>
    
    
    
    
     

  </ul>

  

  
</div>
<div class="box statistiques">
  <span class="fiche-subtitle gtest">Les performances énergétiques</span>
  
      
          
          <ul id="dep1" class="DEP">
            <li><span>241</span></li>
          </ul>
          
      
      
      <ul id="dep2" class="DEP">
        <li><span>48</span></li>
      </ul>
      
  


</div>

<!--DPE POUR PRINT-->

<div id="DPE_PRINT">
<span>Les performances énergétiques</span>
<br />

    
      <div class="fL font16 margR20">
          
          
          
          
          
              <b>Valeur DPE : 241 [rang E]</b>
          
          
          
          <br /><br />
          <img src="/theme/generic/css/images/bg_dpe-LEFT.jpg" />
      </div>
    
    
      <div class="fL font16">
          
          
          
          
          
              <b>Valeur GES : 48 [rang E]</b>
          
          
          
          <br /><br />
          <img src="/theme/generic/css/images/bg_dpe-Right.jpg" />
      </div>
    

</div>

<div class="box">
	<h3 class="margT20">Tout savoir sur les diagnostics</h3>
      <ul class="fL">
        <li class="arrow">
          <h4><a href="/edito/article/le-diagnostic-de-performance-energetique-dpe-visible-et/">Le Diagnostic de Performance Energétique
    </a></h4></li>
        <li class="arrow">
          <h4><a href="/edito/article/diagnostics-obligations-liees-a-la-transaction/">Diagnostics liés à la transaction</a></h4></li>
        <li class="arrow">
          <h4><a href="/edito/article/location-recapitulation-des-diagnostics-et-autres-obligati/">Diagnostics liés à la location
    </a></h4></li>
        <li class="arrow"><h4><a href="/edito/article/votre-installation-electrique-est-elle-sure/"> Installation électrique
    </a></h4></li>
      </ul>
</div>



<div class="box statistiques" id="Copropriete">

	<span class="fiche-subtitle">Copropriété</span>
    <ul class="W250 fL margR5">
	
		<li><span class="titreDetail">Nombre de Lots</span> : 17</li>
	
	
		<li><span class="titreDetail">Charges courantes par an</span> : 5228,0  €</li>
	
	
    <li><span class="titreDetail">Pas de procédure en cours</span></li></ul>
	

</div><div class="reset"></div>



  
        
	<a href="/imagesBien/202/3291/v5/bareme_honoraires.pdf" target="_blank" class="ffDW underline black">
	  Pour consulter les barèmes d'honoraires de l'agence, cliquez ici
	</a>
        
  
</div>


<!--COLONNE DROITE-->
<div class="col-droite-slide">
    
    
    <!--CALCULETTE-->
	  
	  <div id="calculetteCREDIT">	 	
		
		<br>
    <iframe class="borderBox" frameborder="0" src="https://www.panoranet.com/credit-immobilier/formulaire-mob/immo.php?pagevoulue=calcu&act=cap1&code=SP7BGR&montant_pret=1030000&calcul_auto=1" width="100%" height="1240px"></iframe>
			  
	  </div>    
	

    
    

    <!--SITE PROPRIO, IMAGINE21, TOUT SAVOIR SUR DPE-->
    <div class="box displayNone">      
      
      
    </div>
</div>
   
		</div>
    </section>
    
    
    <section class="margT10">
    	<!--code fonctionel pour les deux sites commerce et sites

<div id="bannerOpEstim" title="test bannieres">
	<ul>
		<li>Vous voulez vendre ?</li>
		
		<li>
			Combien vaut votre bien ?<br>
			Combien d'acheteurs sont intéressés ?
		</li>
						
	</ul>
	
	<a href="/estimation-immobiliere" onClick="google_tag_event('Banniere Detail,Click,Evaluateur');">Testez ici
		 <i class="fa fa-caret-right" aria-hidden="true"></i></a>
		
</div>

-->



<!-- update code partie test pour ice-->

<a  id="bannerOpEstim" title="Vous voulez vendre ?" 
	href="/estimation-immobiliere" onClick="google_tag_event('Banniere Detail,Click,Evaluateur');">
	<ul>
		<li>Découvrez combien vaut votre bien</li>
		
		<li>
			<div class="zone-defilement-number banner ">
	<ul>
		<li>ENTRE</li>
		<li class="defil-number tranche-1"></li>
		<li>ET</li>
		<li class="defil-number tranche-2"></li>
	</ul>
</div>
<script src="/theme/generic/js/lib/odometer-0.4.6/odometer.min.js"></script>
<script src="/theme/generic/js/c-combien/launch-defil-number.js"></script>
		</li>		
	</ul>

	<div class="cta">Je découvre</div>
</a>
	


		
    </section>    
    
    <section id="annoncesSimilaires" class="slide slide2">
       <h2 class="margB10">Biens approchants</h2>
        
<div class="zoneCarousel carousel-bien-approchants">
  
  
  <div class="prevCarouselLAST navCarousel btnPrec">
  	<i class="fa fa-angle-left fa-5x" aria-hidden="true"></i>
  </div>
  
  <div class="carouselLAST ">
    <ul class="carrousel carrouselXL annoncesSimilaires">      
      
      <li class="annonce">
        

          <div class="contentAnnonce" id="bien_2103387284" data-uid="2103387284">
            <div class="zone-photo-exclu">
                <a href="/trouver_logement/detail/2103387284/" onclick="google_tag_event('bien,clic_sur_listing,202_3291_43951');return go_detail(this);">
                      <div class="price">930 000&euro; <span class="font20"></span></div>
                      
                      <span class="infoEXCLU">
                      
                        Mandat Confiance / Exclusivité
                      </span>
                      
                      <p class="pixM photoAnnonce" onmouseover="popup_annonce('2103387284','202_3291_43951',$(this));return false;">
                        <img width="220" height="146" src="/imagesBien/202/3291/c21_202_3291_43951_9_C29070CF-ED28-4F98-A5B6-1D497C741B4D.jpg" alt="Vente appartement - PARIS (75014) - 87.0 m² - 3 pi&egrave;ces" />
                      </p>
              </a>
            </div>
              <div class="zone-text-loupe">  
                <a href="/trouver_logement/detail/2103387284/" onclick="google_tag_event('bien,clic_sur_listing,202_3291_43951');return go_detail(this);">
                    <h3>
                      
                      PARIS&nbsp;&nbsp;<span class="font14">75014</span>
                      
                    </h3>
                    <h4 class="detail_vignette">
                      Appartement F3 <br />87,0 m&sup2; , 3 pièces
                    </h4>
                <span class="infoZOOM">Voir détail</span>
              </a>
            </div>
          </div>
      </li>
      
      <li class="annonce">
        

          <div class="contentAnnonce" id="bien_1843593641" data-uid="1843593641">
            <div class="zone-photo-exclu">
                <a href="/trouver_logement/detail/1843593641/" onclick="google_tag_event('bien,clic_sur_listing,202_470_8355');return go_detail(this);">
                      <div class="price">998 000&euro; <span class="font20"></span></div>
                      
                      <p class="pixM photoAnnonce" onmouseover="popup_annonce('1843593641','202_470_8355',$(this));return false;">
                        <img width="220" height="146" src="/imagesBien/202/470/c21_202_470_8355_9_3E751A61-B2FC-40A4-A1DF-906AA94DAB9E.jpg" alt="Vente appartement - PARIS (75016) - 80.0 m² - 3 pi&egrave;ces" />
                      </p>
              </a>
            </div>
              <div class="zone-text-loupe">  
                <a href="/trouver_logement/detail/1843593641/" onclick="google_tag_event('bien,clic_sur_listing,202_470_8355');return go_detail(this);">
                    <h3>
                      
                      PARIS&nbsp;&nbsp;<span class="font14">75016</span>
                      
                    </h3>
                    <h4 class="detail_vignette">
                      Appartement F3 <br />80,0 m&sup2; , 3 pièces
                    </h4>
                <span class="infoZOOM">Voir détail</span>
              </a>
            </div>
          </div>
      </li>
      
      <li class="annonce">
        

          <div class="contentAnnonce" id="bien_2057160839" data-uid="2057160839">
            <div class="zone-photo-exclu">
                <a href="/trouver_logement/detail/2057160839/" onclick="google_tag_event('bien,clic_sur_listing,202_470_8635');return go_detail(this);">
                      <div class="price">1 048 000&euro; <span class="font20"></span></div>
                      
                      <span class="infoEXCLU">
                      
                        Mandat Confiance / Exclusivité
                      </span>
                      
                      <p class="pixM photoAnnonce" onmouseover="popup_annonce('2057160839','202_470_8635',$(this));return false;">
                        <img width="220" height="146" src="/imagesBien/202/470/c21_202_470_8635_9_DD0B0BD7-70E5-47EE-AE87-F895681FEC55.jpg" alt="Vente appartement - PARIS (75016) - 92.1 m² - 5 pi&egrave;ces" />
                      </p>
              </a>
            </div>
              <div class="zone-text-loupe">  
                <a href="/trouver_logement/detail/2057160839/" onclick="google_tag_event('bien,clic_sur_listing,202_470_8635');return go_detail(this);">
                    <h3>
                      
                      PARIS&nbsp;&nbsp;<span class="font14">75016</span>
                      
                    </h3>
                    <h4 class="detail_vignette">
                      Appartement F5 <br />92,08 m&sup2; , 5 pièces
                    </h4>
                <span class="infoZOOM">Voir détail</span>
              </a>
            </div>
          </div>
      </li>
      
      <li class="annonce">
        

          <div class="contentAnnonce" id="bien_2076004797" data-uid="2076004797">
            <div class="zone-photo-exclu">
                <a href="/trouver_logement/detail/2076004797/" onclick="google_tag_event('bien,clic_sur_listing,202_3394_646');return go_detail(this);">
                      <div class="price">1 050 000&euro; <span class="font20"></span></div>
                      
                      <span class="infoEXCLU">
                      
                        Mandat Confiance / Exclusivité
                      </span>
                      
                      <p class="pixM photoAnnonce" onmouseover="popup_annonce('2076004797','202_3394_646',$(this));return false;">
                        <img width="220" height="146" src="/imagesBien/202/3394/c21_202_3394_646_9_13A9F1A6-4D9E-4FE5-BAF0-65FF40B060B7.jpg" alt="Vente appartement - PARIS (75016) - 84.8 m² - 3 pi&egrave;ces" />
                      </p>
              </a>
            </div>
              <div class="zone-text-loupe">  
                <a href="/trouver_logement/detail/2076004797/" onclick="google_tag_event('bien,clic_sur_listing,202_3394_646');return go_detail(this);">
                    <h3>
                      
                      PARIS&nbsp;&nbsp;<span class="font14">75016</span>
                      
                    </h3>
                    <h4 class="detail_vignette">
                      Appartement F3 <br />84,8 m&sup2; , 3 pièces
                    </h4>
                <span class="infoZOOM">Voir détail</span>
              </a>
            </div>
          </div>
      </li>
      
      <li class="annonce">
        

          <div class="contentAnnonce" id="bien_2072702374" data-uid="2072702374">
            <div class="zone-photo-exclu">
                <a href="/trouver_logement/detail/2072702374/" onclick="google_tag_event('bien,clic_sur_listing,202_2554_9327');return go_detail(this);">
                      <div class="price">1 050 000&euro; <span class="font20"></span></div>
                      
                      <span class="infoEXCLU">
                      
                        Mandat Confiance / Exclusivité
                      </span>
                      
                      <p class="pixM photoAnnonce" onmouseover="popup_annonce('2072702374','202_2554_9327',$(this));return false;">
                        <img width="220" height="146" src="/imagesBien/202/2554/c21_202_2554_9327_9_49867882-1DDA-4886-B85C-2479CF95C764.jpg" alt="Vente appartement - PARIS (75014) - 87.2 m² - 4 pi&egrave;ces" />
                      </p>
              </a>
            </div>
              <div class="zone-text-loupe">  
                <a href="/trouver_logement/detail/2072702374/" onclick="google_tag_event('bien,clic_sur_listing,202_2554_9327');return go_detail(this);">
                    <h3>
                      
                      PARIS&nbsp;&nbsp;<span class="font14">75014</span>
                      
                    </h3>
                    <h4 class="detail_vignette">
                      Appartement F4 <br />87,24 m&sup2; , 4 pièces
                    </h4>
                <span class="infoZOOM">Voir détail</span>
              </a>
            </div>
          </div>
      </li>
      
      <li class="annonce">
        

          <div class="contentAnnonce" id="bien_2100529070" data-uid="2100529070">
            <div class="zone-photo-exclu">
                <a href="/trouver_logement/detail/2100529070/" onclick="google_tag_event('bien,clic_sur_listing,202_3181_2695');return go_detail(this);">
                      <div class="price">1 110 000&euro; <span class="font20"></span></div>
                      
                      <span class="infoEXCLU">
                      
                        Mandat Confiance / Exclusivité
                      </span>
                      
                      <p class="pixM photoAnnonce" onmouseover="popup_annonce('2100529070','202_3181_2695',$(this));return false;">
                        <img width="220" height="146" src="/imagesBien/202/3181/c21_202_3181_2695_9_834278D2-8D27-4F77-9CAD-A7A90D808D9C.jpg" alt="Vente appartement - PARIS (75014) - 80.0 m² - 3 pi&egrave;ces" />
                      </p>
              </a>
            </div>
              <div class="zone-text-loupe">  
                <a href="/trouver_logement/detail/2100529070/" onclick="google_tag_event('bien,clic_sur_listing,202_3181_2695');return go_detail(this);">
                    <h3>
                      
                      PARIS&nbsp;&nbsp;<span class="font14">75014</span>
                      
                    </h3>
                    <h4 class="detail_vignette">
                      Appartement F3 <br />80,0 m&sup2; , 3 pièces
                    </h4>
                <span class="infoZOOM">Voir détail</span>
              </a>
            </div>
          </div>
      </li>
      
      <li class="annonce">
        

          <div class="contentAnnonce" id="bien_2098155519" data-uid="2098155519">
            <div class="zone-photo-exclu">
                <a href="/trouver_logement/detail/2098155519/" onclick="google_tag_event('bien,clic_sur_listing,202_2464_14171');return go_detail(this);">
                      <div class="price">825 000&euro; <span class="font20"></span></div>
                      
                      <span class="infoEXCLU">
                      
                        Mandat Confiance / Exclusivité
                      </span>
                      
                      <p class="pixM photoAnnonce" onmouseover="popup_annonce('2098155519','202_2464_14171',$(this));return false;">
                        <img width="220" height="146" src="/imagesBien/202/2464/c21_202_2464_14171_9_A8C71947-8656-4560-9465-6E9ABEAA12D0.jpg" alt="Vente appartement - CHARENTON LE PONT (94220) - 94.9 m² - 4 pi&egrave;ces" />
                      </p>
              </a>
            </div>
              <div class="zone-text-loupe">  
                <a href="/trouver_logement/detail/2098155519/" onclick="google_tag_event('bien,clic_sur_listing,202_2464_14171');return go_detail(this);">
                    <h3>
                      
                      CHARENTON LE PONT&nbsp;&nbsp;<span class="font14">94220</span>
                      
                    </h3>
                    <h4 class="detail_vignette">
                      Appartement F4 <br />94,9 m&sup2; , 4 pièces
                    </h4>
                <span class="infoZOOM">Voir détail</span>
              </a>
            </div>
          </div>
      </li>
      
      <li class="annonce">
        

          <div class="contentAnnonce" id="bien_2111022185" data-uid="2111022185">
            <div class="zone-photo-exclu">
                <a href="/trouver_logement/detail/2111022185/" onclick="google_tag_event('bien,clic_sur_listing,202_52_7065');return go_detail(this);">
                      <div class="price">835 000&euro; <span class="font20"></span></div>
                      
                      <p class="pixM photoAnnonce" onmouseover="popup_annonce('2111022185','202_52_7065',$(this));return false;">
                        <img width="220" height="146" src="/imagesBien/202/52/c21_202_52_7065_9_B2B8CCF3-A38A-4E0A-9103-BC8FD81C4043.jpg" alt="Vente appartement - PARIS (75011) - 86.0 m² - 4 pi&egrave;ces" />
                      </p>
              </a>
            </div>
              <div class="zone-text-loupe">  
                <a href="/trouver_logement/detail/2111022185/" onclick="google_tag_event('bien,clic_sur_listing,202_52_7065');return go_detail(this);">
                    <h3>
                      
                      PARIS&nbsp;&nbsp;<span class="font14">75011</span>
                      
                    </h3>
                    <h4 class="detail_vignette">
                      Appartement F4 <br />86,0 m&sup2; , 4 pièces
                    </h4>
                <span class="infoZOOM">Voir détail</span>
              </a>
            </div>
          </div>
      </li>
      
      <li class="annonce">
        

          <div class="contentAnnonce" id="bien_2039088480" data-uid="2039088480">
            <div class="zone-photo-exclu">
                <a href="/trouver_logement/detail/2039088480/" onclick="google_tag_event('bien,clic_sur_listing,202_2963_5373');return go_detail(this);">
                      <div class="price">835 000&euro; <span class="font20"></span></div>
                      
                      <p class="pixM photoAnnonce" onmouseover="popup_annonce('2039088480','202_2963_5373',$(this));return false;">
                        <img width="220" height="146" src="/imagesBien/202/2963/c21_202_2963_5373_9_2A17DF34-9072-43BD-947D-2816270149D3.jpg" alt="Vente appartement - PARIS (75011) - 86.2 m² - 4 pi&egrave;ces" />
                      </p>
              </a>
            </div>
              <div class="zone-text-loupe">  
                <a href="/trouver_logement/detail/2039088480/" onclick="google_tag_event('bien,clic_sur_listing,202_2963_5373');return go_detail(this);">
                    <h3>
                      
                      PARIS&nbsp;&nbsp;<span class="font14">75011</span>
                      
                    </h3>
                    <h4 class="detail_vignette">
                      Appartement F4 <br />86,25 m&sup2; , 4 pièces
                    </h4>
                <span class="infoZOOM">Voir détail</span>
              </a>
            </div>
          </div>
      </li>
      
      <li class="annonce">
        

          <div class="contentAnnonce" id="bien_2103972240" data-uid="2103972240">
            <div class="zone-photo-exclu">
                <a href="/trouver_logement/detail/2103972240/" onclick="google_tag_event('bien,clic_sur_listing,202_2531_8782');return go_detail(this);">
                      <div class="price">840 000&euro; <span class="font20"></span></div>
                      
                      <span class="infoEXCLU">
                      
                        Mandat Confiance / Exclusivité
                      </span>
                      
                      <p class="pixM photoAnnonce" onmouseover="popup_annonce('2103972240','202_2531_8782',$(this));return false;">
                        <img width="220" height="146" src="/imagesBien/202/2531/c21_202_2531_8782_9_5026621A-2F44-4F01-ABC4-EDCCFFFD05D0.jpg" alt="Vente appartement - PARIS (75010) - 76.1 m² - 4 pi&egrave;ces" />
                      </p>
              </a>
            </div>
              <div class="zone-text-loupe">  
                <a href="/trouver_logement/detail/2103972240/" onclick="google_tag_event('bien,clic_sur_listing,202_2531_8782');return go_detail(this);">
                    <h3>
                      
                      PARIS&nbsp;&nbsp;<span class="font14">75010</span>
                      
                    </h3>
                    <h4 class="detail_vignette">
                      Appartement F4 <br />76,12 m&sup2; , 4 pièces
                    </h4>
                <span class="infoZOOM">Voir détail</span>
              </a>
            </div>
          </div>
      </li>
      
    </ul>
  </div>
  
  <div class="suivCarouselLAST navCarousel btnSuiv">
  	<i class="fa fa-angle-right fa-5x" aria-hidden="true"></i>
  </div>
  
</div>
<script type="text/javascript">
    UID_BIEN = UID_BIEN.concat(["2103387284","1843593641","2057160839","2076004797","2072702374","2100529070","2098155519","2111022185","2039088480","2103972240"]);
</script>

<div class="reset"></div>


    </section>
    <section id="decouvrirVille" class="slide slide3">
        
<link rel="stylesheet" type="text/css" href="/theme/generic/js/lib/jquery.jqplot/jquery.jqplot.min.css" />
<script>

 
  var CP = 75014;
  var CODE_INSEE = 75114;
 
  var BIENS_PAR_TYPE = [["divers", 1, "/annonces/achat-divers/cp-75014/s-0-/st-0-/b-0-/page-1/"], ["appartement", 16, "/annonces/achat-appartement/cp-75014/s-0-/st-0-/b-0-/page-1/"], ["parking", 1, "/annonces/achat-parking/cp-75014/s-0-/st-0-/b-0-/page-1/"]];
  var PRIX_MOYENS = [["Maison", 808111.0], ["Appartement", 499309.0]];
  var LOCALISATION_RESTREINTE = false;
     $.getScript("/theme/generic/js/lib/jquery.jqplot/my.jqplot.js", function() {
        $.getScript("/js/stats_ville.js", function () {
        fix_articles();
     });
  });
  

</script>

<h2>
  <a href="/edito/ville/paris-14eme/" class="yellow">
    Découvrir Paris 14
    </a>
</h2>



  <div id="graphVILLE" class="line">
    <ul class="menuGraph">
      <li id="menu-graph1" class="BTN">Prix moyens</li>
      <li id="menu-graph2" class="BTN">Biens à vendre</li>
      <li id="menu-graph3" class="BTN insee">Les habitants</li>
      
        <li id="menu-graph4" class="BTN impot">Taux et taxes</li>

      
      
    </ul>
    <ul class="contentGraph">
      <li id="graph1" class="graph">
          <div id="graphique1" class="graph" style="width:295px;height:210px;">
          </div>
          <div class="infos">
            <h3>Prix moyens constatés en région ILE-DE-FRANCE</h3>
              <ul>
              </ul>
          </div>
          <div class="reset"></div>
      </li>
      <li id="graph2" class="graph">
          <div id="graphique2" class="graph" style="width:295px;height:210px;">
          </div>
          <div class="infos">
              <h3>Biens à vendre à Paris 14</h3>
              <ul></ul>
          </div>
          <div class="reset"></div>
      </li>
      <li id="graph3" class="graph insee">
          <div id="graphique3" class="graph" style="width:295px;height:210px;">
          </div>
          <div class="infos">
            <h3>Les habitants de Paris 14</h3>
              <ul></ul>
          </div>
          <div class="reset"></div>
      </li>
      
      <li id="graph4" class="graph impot">
          <div id="graphique4" class="graph" style="width:295px;height:210px;">
          </div>
          <div class="infos">
              <h3>Taux d'impositions à Paris 14</h3>
              <ul></ul>
          </div>
          <div class="reset"></div>
      </li>

      
      
  </ul>
    <div class="reset"></div>
  </div>


<div class="reset"></div>

<div class="edito-ville-ajax">
	<div class="line">
	  <h3>Paris 14 en un clin d'œil</h3>
	</div>

	
	<div class="box">
	  <a href="/edito/ville/paris-14eme/"><img src="/imagesBien/202/cms/687841137/Observatoire_Paris_14/Observatoire_Paris_14__cmsbig.jpg" alt="Paris 14è - © By Xamnu via fr.wikimedia.org" /></a>
	</div>
	

	<div class="box">
	  <ul>
		
		<li><span class="titreDetail">Commune : </span>PARIS</li>
		<li><span class="titreDetail">Code postal : </span>75014</li>
		
		<li id="insee-population-cont"><span class="titreDetail">Population : </span><span id="insee-population"></span></li>
		<li><span class="titreDetail">Département : </span>Paris (75)</li>
		<li><span class="titreDetail">Région : </span>ILE-DE-FRANCE</li>
	  </ul>

	  
	  <h3>Les villes à proximité</h3>
	  <ul>
		
		<li class="arrow"><h4><a href="/annonces/achat-appartement/v-montrouge/s-0-/st-0-/b-0-/page-1/">MONTROUGE</a></h4></li>
		
		<li class="arrow"><h4><a href="/annonces/achat-appartement/cp-75005/s-0-/st-0-/b-0-/page-1/">PARIS 5</a></h4></li>
		
		<li class="arrow"><h4><a href="/annonces/achat-appartement/cp-75006/s-0-/st-0-/b-0-/page-1/">PARIS 6</a></h4></li>
		
		<li class="arrow"><h4><a href="/annonces/achat-appartement/v-malakoff/s-0-/st-0-/b-0-/page-1/">MALAKOFF</a></h4></li>
		
		<li class="arrow"><h4><a href="/annonces/achat-appartement/cp-75007/s-0-/st-0-/b-0-/page-1/">PARIS 7</a></h4></li>
		
	  </ul>
	  

	</div>
	<div class="box">

	  
	  <h3>Tout savoir sur Paris 14</h3>
	  <div class="edito">
		<p>Formé de la réunion d’une partie des anciens 11e et 12e arrondissements, de Gentilly et de Montrouge, le 14e arrondissement s’urbanisa et se lotit après-guerre pour l’essentiel.</p>
		<div class="arrow">
		  <h4><a href="/edito/ville/paris-14eme/">Paris 14</a></h4>
		</div>
	  </div>
	  

	</div>
	<!--
	<div class="box articles_cont">
	  <span>Nos experts parlent de : Paris 14</span>
	  
	</div>
	-->
	<div class="reset"></div>
</div>
    </section>
    <section id="acheterMaison" class="slide slide4">
        
<h2>Tout savoir pour acheter un appartement</h2>
<div class="zone-article-ajax">


	<div class="box articles_cont">
	  <h3>Acheter son appartement</h3>
	  

<ul class="articles margB15">
  
    <li class="XXS">
      <div class="pix">
        <a href="/edito/article/bruits-de-voisinage-quelle-reglementation/"><img src="/imagesBien/202/cms/1374034966/Bruit/Bruit__cmsicon.png" alt="Bruits de voisinage : quelle réglementation ? "  title="Bruits de voisinage : quelle réglementation ? "/></a>
      </div>
      <div class="edito">
        <h4><a href="/edito/article/bruits-de-voisinage-quelle-reglementation/">Bruits de voisinage : quelle réglementation ? </a></h4>
        
          <p>Un locataire a l'habitude de s'exercer au piano après le dîner ? Vos jeunes ...</p>
        
      </div>
      <div class="reset"></div>
    </li>
  
    <li class="XXS">
      <div class="pix">
        <a href="/edito/article/reduisez-votre-fiscalite-avec-le-credit-dimpot-pour-la-tran/"><img src="/imagesBien/202/cms/1870111259/CITE-Article/CITE-Article__cmsicon.png" alt="Réduisez votre fiscalité avec le crédit d’impôt pour la transition énergétique (CITE)."  title="Réduisez votre fiscalité avec le crédit d’impôt pour la transition énergétique (CITE)."/></a>
      </div>
      <div class="edito">
        <h4><a href="/edito/article/reduisez-votre-fiscalite-avec-le-credit-dimpot-pour-la-tran/">Réduisez votre fiscalité avec le crédit d’impôt pour la transition énergétique (CITE).</a></h4>
        
          <p>Au-delà des nombreuses aides existantes destinées à favoriser les performances énergétiques de votre habitation, un ...</p>
        
      </div>
      <div class="reset"></div>
    </li>
  
</ul>

    
        <div><h4 class="arrow">
        
            <a href="/edito/article/acheter/conseil-achat-immobilier/?type_bien=2&amp;type_article=1">
        
        Voir tous nos conseils sur l&#39;achat d&#39;un bien immobilier
        </a></h4></div>
    



	</div>
	<div class="box">
	  <h3 >Pour bien acheter</h3>
	  <ul class="articles">
  
    <li class="arrow"><h4><a href="/edito/article/le-logement-ideal-des-francais-enquete-exclusive-2016/">Le logement idéal des français - ...</a></h4></li>
  
    <li class="arrow"><h4><a href="/edito/article/la-propriete-en-indivision-se-determine-par-lacte-notarie-e/">La propriété en indivision se détermine ...</a></h4></li>
  
    <li class="arrow"><h4><a href="/edito/article/fiscalite-exploiter-au-mieux-le-credit-dimpot-economie-d/">Fiscalité : exploiter au mieux le ...</a></h4></li>
  
    <li class="arrow"><h4><a href="/edito/article/investir-avant-le-31-decembre-un-bon-choix/">Investir avant le 31 décembre : ...</a></h4></li>
  
    <li class="arrow"><h4><a href="/edito/article/reforme-des-apl-chronique-dune-catastrophe-annoncee/">Réforme des APL : chronique d’une ...</a></h4></li>
  
</ul>


	</div>
	<div class="box">
	  
		<h3>Appartements à louer</h3>
		<ul>
		  
			<li class="arrow"><h4><a href="/annonces/achat-appartement/cp-75014/s-0-/st-0-/b-0-/page-1/">PARIS 14ème (16 appartements)</a></h4></li>
		  
			<li class="arrow"><h4><a href="/annonces/achat-appartement/v-montrouge/s-0-/st-0-/b-0-/page-1/">MONTROUGE (8 appartements)</a></h4></li>
		  
			<li class="arrow"><h4><a href="/annonces/achat-appartement/cp-75005/s-0-/st-0-/b-0-/page-1/">PARIS 5ème (8 appartements)</a></h4></li>
		  
			<li class="arrow"><h4><a href="/annonces/achat-appartement/cp-75006/s-0-/st-0-/b-0-/page-1/">PARIS 6ème (7 appartements)</a></h4></li>
		  
			<li class="arrow"><h4><a href="/annonces/achat-appartement/v-malakoff/s-0-/st-0-/b-0-/page-1/">MALAKOFF (2 appartements)</a></h4></li>
		  
		</ul>
	  
	</div>
</div>
<div class="reset"></div>
<script>
  if (typeof fix_articles != 'undefined'){
      fix_articles();
  }
</script>

    </section>
    <section id="votreAgence" class="slide slide5">
        

<h2>Votre agence immobilière </h2>
<div class="zone-ag-ajax equal">
	<div class="box equal50">
	  <a href="/trouver_agence/agence/1427915226/">
			<img src="/imagesBien/202/3291/webmaster_1_202_3291_0_2_0.jpg" alt="CENTURY 21 Porte d&#39;Orléans"/>
			<h3 class="noBorder tt"><a href="/trouver_agence/agence/1427915226/">CENTURY 21 Porte d&#39;Orléans</a></h3>
			<ul class="coordonneesAgence">
			<li>130  boulevard Brune</li>
			
			<li>75014 PARIS</li>
			</ul>
		</a>


		<a id="yma-mentions">Mentions légales</a>
		
		
		<div id="" class="yma-mentions-content " style="display: none">
		 
		 
         		
                                
         			        <ul>    
		<li><strong>Raison sociale : </strong>SASU FORTUNA HOME CONSEIL</li>				
		<li><strong>RCS </strong> 829667260 RCS de PARIS</li>
		<li><strong> au capital de :</strong> 10.000€   &euro; </li>
		<li><strong>Adresse du siège Social :</strong> 130 boulevard Brune 75014 PARIS</li>
		<li><strong>Téléphone :</strong> 01 45 43 51 51 </li>
		
		<li><strong>Adresse mail :</strong><img class="img-mail" src="/imagesBien/202/3291/contact.png" /></li>
		
		<li><strong>Numéro de déclaration de TVA :</strong> 82966726000014</li>
		<li>Le titre professionnel d'agent immobilier est régi par la loi n°70-9 du 2 janvier 1970 (dite "loi Hoguet")<br/> et son décret d'application n°72-678 du 20 juillet 1972</li>             

		
        <li><strong>Carte professionnelle n° :</strong> CPI 7501 2017 000 019 847 délivrée par la CCI de : CCI de Paris Île-de-France , 27, avenue de Friedland - 75008 Paris, France
    	</li>
		
		
    	
		
		<li>
			<strong>Barèmes d'honoraires :</strong>
			<a href="/imagesBien/202/3291/v5/bareme_honoraires.pdf" target="_blank" class="ffDW underline black">
				Pour consulter les barèmes d'honoraires de l'agence, cliquez ici
			</a>
		</li>
		
		
		<li class="margT20">
			<strong class="font16">
				La société SASU FORTUNA HOME CONSEIL ne doit recevoir ni détenir d'autres fonds, effets ou valeurs que ceux représentatifs de sa rémunération ou de ses honoraires.
			</strong>
		</li>
		
		<li>
			<br>
                        En cas de litige avec la société SASU FORTUNA HOME CONSEIL relatif à l'exécution d'un contrat de vente ou de prestation de services, le consommateur est informé qu'il a la possibilité de saisir le médiateur de la consommation dans les conditions prévues aux articles L 611-1 et suivants du Code de la consommation, dont les coordonnées et le site Internet sont : Association MEDIMMOCONSO, 1 Allée du Parc de Mesemena - Bât A - CS25222 - 44505 LA BAULE CEDEX  - Mail :contact@medimmoconso.fr    - Site Internet : https://medimmoconso.fr/adresser-une-reclamation/  .
		</li>						
	</ul>
	<br><br>

                                 
         		
         	
         	
				         	
				<a class="underline black" href="https://www.century21-porte-d-orleans-paris-14.com/mentions_legales/" target="_blank">Voir nos mentions légales complètes</a>
				
     		
	 </div>


	</div>
	<div class="box equal50">

	  
	  
	  <strong class="font14 underline" >L’actualité de notre agence</strong>
	  <p>
		Située au sud de la capitale, découvrez le 14e arrondissement de Paris. Voisin des communes de Montrouge, Gentilly, Vanves, et Malakoff, Paris 14e dispose d’un important réseau de bus, métro, tramway et train pour se déplacer sur toute l’agglomération parisienne et de la petite couronne. Le 14e arrondissement bénéficie aussi ...
	  </p>
		<div class="arrow arrow-right"><a href="http://www.century21-porte-d-orleans-paris-14.com/actus/2052417145/" target="_blank" 
			class="font14 underline grey4 ">Lire la suite</a></div>
	  
		
		<!-- changement d'emplacement-->
		<div class="box WAUTO link-infos-agances">
				<ul>
				
				<li class="arrow"><h4><a rel="//www.century21-porte-d-orleans-paris-14.com" class="noFOLLOW btn-link-infos-agances" target="_blank" title="Site web de l'agence">Site web de l'agence</a></h4></li>
				
				<li class="arrow"><h4><a rel="/trouver_agence/agence/1427915226/" class="noFOLLOW btn-link-infos-agances" title="Fiche de l'agence">Fiche de l'agence</a></h4></li>
				<li class="arrow">
					
				
					<div class="reset"></div>
				</li>
				<li class="jump"></li>
				
				<li class="arrow">
					
						<a class="yellow" href="//www.century21-porte-d-orleans-paris-14.com/annonces/achat/" target="_blank">
							6 biens &agrave; vendre</a>
					
				</li>
				
				
				<li class="arrow">
					
						<a class="yellow" href="//www.century21-porte-d-orleans-paris-14.com/annonces/location" target="_blank">
							1 bien &agrave; louer
						</a>
					
				</li>
				
				
				</ul>
		</div>
		<!-- changement d'emplacement-->
	</div>






	<div class="reset"></div>
	
	
	
	
		
		<div class="foot-content2">
			<div class="center content_qualitelis">
				<div id="header" class="displayFlexSpace">
					<div class="parole_clients">
						<img src="/theme/generic/css/images/op-marque/pdc.svg" width="258" alt="">
					</div>
					<div class="box_note">
						<div class="displayFlexCenter flex-flow">
							<span class="font16 bold" itemprop="name">NOTE GLOBALE<br>DE L'AGENCE</span>
							<div class="my-rating" data-rating="9,2"></div>
						</div>						
						<div class="displayFlexCenter font40 bold">
							<span> 9,2/10</span>
						</div>
						<div class="flex-flow displayFlexCenter">
							<span class="font16 bold">NOMBRE D'AVIS<br>SUR L'AGENCE</span>

							<span class=""><a href="https://www.century21-porte-d-orleans-paris-14.com/agence/avis-clients/"><span class="font22 black bold">83</span></a></span>
						</div>
					</div>
					<div class="box_qualitelis box_certifie_par">Certifié par <img class="qualitelis-img" src="/theme/generic/css/images/qualitelis/qualitelis.svg" alt="Qualitelis"></div>
				</div>			
				<div class="reset"></div>				
				<h2 class="h2_style">Nos clients donnent leur avis</h2>
				<div class="reset"></div>				
				
				<div class="relative">					
					
						
							
							<div class="tem_clients">
								<div class="box box3">
									<div class="note">
										<h3 class="bold">10/10</h3>
										<div class="my-rating2" data-rating2="10"></div>
									</div>
									<div class="txt">
										<p>
											Je recommande l&#39;agence Century 21 Immonov qui a su m&#39;accompagner tout au long de mon projet d&#39;achat immobilier. Une agence très compétente, efficace …&nbsp;
											
											
												<a class="popin_a" data-target="popin_1">
													<span>Lire la suite <i class="fa fa-chevron-right" aria-hidden="true"></i></span>
												</a>
											
										</p>
									</div>
									<div class="reset"></div>
									<div class="profil">
										<div class="img-client">
											
											
											
												<img src="/theme/generic/css/images/qualitelis/avatars/mixte-4.svg" alt="">
											
										</div>
										<div class="info">
											<span class="h3_style">Amelie K.</span>
											<div class="reset"></div>
											<span><div class="date_com" data-date="2019-12-08"></div>
												
													Client Acheteur
																							
												
													après acte de vente
												
											</span>
										</div>
									</div>
									
									<div class="reset"></div>
									<div class="rep_ag">
										<a class="white popin_a bold" data-target="popin_1">
											<img class="W10" src="/theme/generic/css/images/qualitelis/boite_message.svg" alt="Réponse de l'agence C21">  L'agence a répondu à ce commentaire <i class="fa fa-angle-right" aria-hidden="true"></i>
										</a>
									</div>
									
									<div class="reset"></div>
								</div>
							</div>

							<div id="popin_1" class="displayNone popin_glob">
								<div class="popin_first">
									<div class="profil">
										<div class="img-client">
											
											
											
												<img src="/theme/generic/css/images/qualitelis/avatars/mixte-4.svg" alt="">
											
										</div>								
										<div class="info" data-date="2019-12-08">
											<span class="h3_style margR5">
												<span class="margR5">
													Amelie K.
												</span>
												10/10
											</span>
											<span class="my-rating2" data-rating2="10"></span>
											<div class="reset"></div>
											<span class="info_client"><div class="date_com" data-date="2019-12-08"></div>&nbsp;-
												
													Client Acheteur
																							
												
													après la signature de l'acte de vente
												
											</span>
										</div>
									</div>
									<div class="reset"></div>
									<div class="txt">
										<p>
											Je recommande l&#39;agence Century 21 Immonov qui a su m&#39;accompagner tout au long de mon projet d&#39;achat immobilier. Une agence très compétente, efficace et très agréable.
										</p>
									</div>
								</div>
								
								<div class="popin_second">
									<div class="profil">
										<div class="img-client">
											
											
										</div>
										<div class="info">
											<span class="h3_style">Patrice NGUYEN</span><br>
											
											<span>Directeur d&#39;agence de CENTURY 21 Porte d&#39;Orléans</span>
										</div>
									</div>
									<div class="txt">
										<p>
											Merci pour votre commentaire,  nous mettons tout en oeuvre tous les jours pour cela ! A très bientôt
										</p>
									</div>
								</div>
								
								<a class="buton-close">
									<i class="fa fa-times fa-2x" aria-hidden="true"></i>
								</a>
							</div>
							
						
					
						
							
							<div class="tem_clients">
								<div class="box box3">
									<div class="note">
										<h3 class="bold">10/10</h3>
										<div class="my-rating2" data-rating2="10"></div>
									</div>
									<div class="txt">
										<p>
											Agence très professionnelle et réactive.&nbsp;
											
											
												<a class="popin_a" data-target="popin_2">
													<span>Lire la suite <i class="fa fa-chevron-right" aria-hidden="true"></i></span>
												</a>
											
										</p>
									</div>
									<div class="reset"></div>
									<div class="profil">
										<div class="img-client">
											
												<img src="/theme/generic/css/images/qualitelis/avatars/homme-2.svg" alt="">
											
											
											
										</div>
										<div class="info">
											<span class="h3_style">David G.</span>
											<div class="reset"></div>
											<span><div class="date_com" data-date="2019-11-24"></div>
												
													Client Acheteur
																							
												
													après compromis de vente
												
											</span>
										</div>
									</div>
									
									<div class="reset"></div>
									<div class="rep_ag">
										<a class="white popin_a bold" data-target="popin_2">
											<img class="W10" src="/theme/generic/css/images/qualitelis/boite_message.svg" alt="Réponse de l'agence C21">  L'agence a répondu à ce commentaire <i class="fa fa-angle-right" aria-hidden="true"></i>
										</a>
									</div>
									
									<div class="reset"></div>
								</div>
							</div>

							<div id="popin_2" class="displayNone popin_glob">
								<div class="popin_first">
									<div class="profil">
										<div class="img-client">
											
												<img src="/theme/generic/css/images/qualitelis/avatars/homme-2.svg" alt="">
											
											
											
										</div>								
										<div class="info" data-date="2019-11-24">
											<span class="h3_style margR5">
												<span class="margR5">
													David G.
												</span>
												10/10
											</span>
											<span class="my-rating2" data-rating2="10"></span>
											<div class="reset"></div>
											<span class="info_client"><div class="date_com" data-date="2019-11-24"></div>&nbsp;-
												
													Client Acheteur
																							
												
													ayant signé un compromis de vente
												
											</span>
										</div>
									</div>
									<div class="reset"></div>
									<div class="txt">
										<p>
											Agence très professionnelle et réactive.
										</p>
									</div>
								</div>
								
								<div class="popin_second">
									<div class="profil">
										<div class="img-client">
											
											
										</div>
										<div class="info">
											<span class="h3_style">Patrice NGUYEN</span><br>
											
											<span>Directeur d&#39;agence de CENTURY 21 Porte d&#39;Orléans</span>
										</div>
									</div>
									<div class="txt">
										<p>
											Merci Monsieur,  à très bientôt pour la suite !
										</p>
									</div>
								</div>
								
								<a class="buton-close">
									<i class="fa fa-times fa-2x" aria-hidden="true"></i>
								</a>
							</div>
							
						
					
						
							
							<div class="tem_clients">
								<div class="box box3">
									<div class="note">
										<h3 class="bold">10/10</h3>
										<div class="my-rating2" data-rating2="10"></div>
									</div>
									<div class="txt">
										<p>
											Nous venons de conclure une vente à cascade avec Century 21.  Afin de pouvoir acheter un nouvel appartement, nous devions nécessairement mettre en ve…&nbsp;
											
											
												<a class="popin_a" data-target="popin_3">
													<span>Lire la suite <i class="fa fa-chevron-right" aria-hidden="true"></i></span>
												</a>
											
										</p>
									</div>
									<div class="reset"></div>
									<div class="profil">
										<div class="img-client">
											
																					
												<img src="/theme/generic/css/images/qualitelis/avatars/femme-4.svg" alt="">
											
											
										</div>
										<div class="info">
											<span class="h3_style">Sofia G.</span>
											<div class="reset"></div>
											<span><div class="date_com" data-date="2019-08-13"></div>
												
													Client Acheteur
																							
												
													après acte de vente
												
											</span>
										</div>
									</div>
									
									<div class="reset"></div>
									<div class="rep_ag">
										<a class="white popin_a bold" data-target="popin_3">
											<img class="W10" src="/theme/generic/css/images/qualitelis/boite_message.svg" alt="Réponse de l'agence C21">  L'agence a répondu à ce commentaire <i class="fa fa-angle-right" aria-hidden="true"></i>
										</a>
									</div>
									
									<div class="reset"></div>
								</div>
							</div>

							<div id="popin_3" class="displayNone popin_glob">
								<div class="popin_first">
									<div class="profil">
										<div class="img-client">
											
																					
												<img src="/theme/generic/css/images/qualitelis/avatars/femme-4.svg" alt="">
											
											
										</div>								
										<div class="info" data-date="2019-08-13">
											<span class="h3_style margR5">
												<span class="margR5">
													Sofia G.
												</span>
												10/10
											</span>
											<span class="my-rating2" data-rating2="10"></span>
											<div class="reset"></div>
											<span class="info_client"><div class="date_com" data-date="2019-08-13"></div>&nbsp;-
												
													Client Acheteur
																							
												
													après la signature de l'acte de vente
												
											</span>
										</div>
									</div>
									<div class="reset"></div>
									<div class="txt">
										<p>
											Nous venons de conclure une vente à cascade avec Century 21.  Afin de pouvoir acheter un nouvel appartement, nous devions nécessairement mettre en vente le notre et grâce au suivi des deux agences Century 21 nous avons pu assurer le bon déroulement de l&#39;opération.
										</p>
									</div>
								</div>
								
								<div class="popin_second">
									<div class="profil">
										<div class="img-client">
											
											
										</div>
										<div class="info">
											<span class="h3_style">Patrice NGUYEN</span><br>
											
											<span>Directeur d&#39;agence de CENTURY 21 Porte d&#39;Orléans</span>
										</div>
									</div>
									<div class="txt">
										<p>
											Un vrai challenge d&#39;avoir coordonner vos 2 transactions. Un plaisir d&#39;avoir travailler avec vous ! Merci !
										</p>
									</div>
								</div>
								
								<a class="buton-close">
									<i class="fa fa-times fa-2x" aria-hidden="true"></i>
								</a>
							</div>
							
						
					
				</div>
				<div class="page_avis">
					
					<a href="https://www.century21-porte-d-orleans-paris-14.com/agence/avis-clients/" target="_blank">
						<i class="fa fa-angle-right" aria-hidden="true"></i> Voir tous les avis
					</a>
					
				</div>
				
			</div>
		</div>
		
		<script>
			function convertDateToText(maDate){
				var txtDate = maDate.split('-');
				txtDate = txtDate.join('-');
				var newDate = new Date(txtDate);
				var options = {year: "numeric", month: "long", day: "numeric"};

				return newDate.toLocaleDateString("fr-FR", options);
			}
			var IS_MOBILE = IS_MOBILE;
			if (IS_MOBILE !== 'undefined') {
				$(".popin_a").each(function(){
					var popin;
					$(this).click(function(){
						popin = $("#" + $(this).data("target"));
						// Init de la date de reponse de l'ag
						if($(".date-custom").length){
							$(".date-custom").each(function(){			
								$(this).html(convertDateToText($(this).data("date")));
							});
						}
						popin.fadeIn();
						popin.find(".buton-close").click(function(){
							popin.fadeOut();
						});
					});
				});
			} else {
				$(".popin_a").each(function(){
					var popin;
					$(this).click(function(){
						popin = $("#" + $(this).data("target"));
						// Init de la date de reponse de l'ag
						if($(".date-custom").length){
							$(".date-custom").each(function(){			
								$(this).html(convertDateToText($(this).data("date")));
							});
						}
						popin.fadeIn();
						popin.find(".buton-close").click(function(){
							popin.fadeOut();
						});
					});
				});
			}

			$(".date_com").each(function(){
				if($(this).data("date")){
					$(this).html(convertDateToText($(this).data("date")));
				}
			});	


		</script>


	<div class="resset"></div>
	
</div>
<!-- 202_3291_43928 -->
<script language="javascript">
	/* Slidedown des mentions légales sur la page détail d'une agence */
    if($('#link_mention_legales_detail_agence').length > 0){
        $('#link_mention_legales_detail_agence').click(function(){
            $('#mention_legales_detail_agence').slideDown();
            return false;
        });
        $('#mention_legales_detail_agence').mouseleave(function(){
            $('#mention_legales_detail_agence').slideUp();
        });

        $('#mention_legales_detail_agence #fermerDescLongue').click(function(){
            $('#mention_legales_detail_agence').slideUp();
        });

    }

    makeLinksNoFollow();

    $('#detailNumTelEtape4').click(function(){
      $.ajax({
        type: "post",
        url: "/click_tel/1427915226/"
      });
		});
		
$("#yma-mentions").click(function(){
  $(".yma-mentions-content").slideToggle();
});

</script>




    </section>

    <div class="reset"></div>
  </div>
</div>



<script>
 $('.afficheNumTel').click(function(){
   $.ajax({
     type: "get",
     url: "/click_tel/1427915226/"
   });
 });
</script>





              
            </div>
          </div>
        </div>
      </div>
      

      
      <footer id="mainFooter">
        <div class="mid">
          
          
           <div class="content">
			  <div class="mentions_fixe">
          <ul>
              <li><a href="/fiches/protection-des-donnees/">Politique de protection des données</a></li>
            <li><a href="/fiches/mentions/">Mentions légales</a></li>
            <li><a href="/fiches/credits/">Crédits</a></li>
            <li><a href="/contactez_nous/">Nous contacter</a></li>
           
          </ul>
			  </div>
			  <div class="reset"></div>
			 
				  
				  <div class="fL tw-ml-1">
					<a id="showFooter" class="flecheDown"></a>
				  </div>
				  

				  <div class="reset"></div>

				  
				  <div class="global_footer">
					<div class="zone_lien_footer">
					
					<div class="box25 paddL10">
					  
						<h2>Achat appartement autour de PARIS (75014)</h2>
						
					  <ul>
						
						<li><a href="/annonces/achat-appartement/v-montrouge/s-0-/st-0-/b-0-/page-1/"><h3>Achat appartement MONTROUGE</h3></a></li>
						
						<li><a href="/annonces/achat-appartement/cp-75005/s-0-/st-0-/b-0-/page-1/"><h3>Achat appartement PARIS 5ième</h3></a></li>
						
						<li><a href="/annonces/achat-appartement/cp-75006/s-0-/st-0-/b-0-/page-1/"><h3>Achat appartement PARIS 6ième</h3></a></li>
						
						<li><a href="/annonces/achat-appartement/v-malakoff/s-0-/st-0-/b-0-/page-1/"><h3>Achat appartement MALAKOFF</h3></a></li>
						
						<li><a href="/annonces/achat-appartement/cp-75007/s-0-/st-0-/b-0-/page-1/"><h3>Achat appartement PARIS 7ième</h3></a></li>
						
						<li><a href="/annonces/achat-appartement/cp-75013/s-0-/st-0-/b-0-/page-1/"><h3>Achat appartement PARIS 13ième</h3></a></li>
						
						<li><a href="/annonces/achat-appartement/cp-75015/s-0-/st-0-/b-0-/page-1/"><h3>Achat appartement PARIS 15ième</h3></a></li>
						
						<li><a href="/annonces/achat-appartement/cpv-92220_bagneux/s-0-/st-0-/b-0-/page-1/"><h3>Achat appartement BAGNEUX</h3></a></li>
						
						<li><a href="/annonces/achat-appartement/cp-75004/s-0-/st-0-/b-0-/page-1/"><h3>Achat appartement PARIS 4ième</h3></a></li>
						
						<li><a href="/annonces/achat-appartement/cp-75001/s-0-/st-0-/b-0-/page-1/"><h3>Achat appartement PARIS 1ier</h3></a></li>
						
						<li><a href="/annonces/achat-appartement/cp-75008/s-0-/st-0-/b-0-/page-1/"><h3>Achat appartement PARIS 8ième</h3></a></li>
						
						<li><a href="/annonces/achat-appartement/v-l+hay+les+roses/s-0-/st-0-/b-0-/page-1/"><h3>Achat appartement L HAY LES ROSES</h3></a></li>
						
						<li><a href="/annonces/achat-appartement/v-le+kremlin+bicetre/s-0-/st-0-/b-0-/page-1/"><h3>Achat appartement LE KREMLIN BICETRE</h3></a></li>
						
						<li><a href="/annonces/achat-appartement/cp-75003/s-0-/st-0-/b-0-/page-1/"><h3>Achat appartement PARIS 3ième</h3></a></li>
						
						<li><a href="/annonces/achat-appartement/cpv-92320_chatillon/s-0-/st-0-/b-0-/page-1/"><h3>Achat appartement CHATILLON</h3></a></li>
						
					  </ul>
					</div>
					
					<div class="box25 paddL10">
					  
						<h2>Autres appartements a vendre à PARIS (75014)</h2>
						
					  <ul>
						
						<li><a href="/trouver_logement/detail/2129159693/"><h3>appartement &agrave; vendre - 1 pi&egrave;ce - 15 m2 - PARIS - 75013 - ILE-DE-FRANCE</h3></a></li>
						
						<li><a href="/trouver_logement/detail/1602757943/"><h3>appartement &agrave; vendre - 3 pi&egrave;ces - 59 m2 - PARIS - 75012 - ILE-DE-FRANCE</h3></a></li>
						
						<li><a href="/trouver_logement/detail/2099077435/"><h3>appartement &agrave; vendre - 5 pi&egrave;ces - 102 m2 - PARIS - 75012 - ILE-DE-FRANCE</h3></a></li>
						
						<li><a href="/trouver_logement/detail/2004247382/"><h3>appartement &agrave; vendre - 2 pi&egrave;ces - 36 m2 - PARIS - 75012 - ILE-DE-FRANCE</h3></a></li>
						
						<li><a href="/trouver_logement/detail/2091692427/"><h3>appartement &agrave; vendre - 3 pi&egrave;ces - 70 m2 - PARIS - 75006 - ILE-DE-FRANCE</h3></a></li>
						
						<li><a href="/trouver_logement/detail/2077468281/"><h3>appartement &agrave; vendre - 3 pi&egrave;ces - 69 m2 - PARIS - 75005 - ILE-DE-FRANCE</h3></a></li>
						
						<li><a href="/trouver_logement/detail/2031279843/"><h3>appartement &agrave; vendre - 1 pi&egrave;ce - 34 m2 - PARIS - 75009 - ILE-DE-FRANCE</h3></a></li>
						
						<li><a href="/trouver_logement/detail/2057160839/"><h3>appartement &agrave; vendre - 5 pi&egrave;ces - 92 m2 - PARIS - 75016 - ILE-DE-FRANCE</h3></a></li>
						
						<li><a href="/trouver_logement/detail/2113977400/"><h3>appartement &agrave; vendre - 2 pi&egrave;ces - 52 m2 - PARIS - 75013 - ILE-DE-FRANCE</h3></a></li>
						
						<li><a href="/trouver_logement/detail/2109144007/"><h3>appartement &agrave; vendre - 1 pi&egrave;ce - 36 m2 - PARIS - 75006 - ILE-DE-FRANCE</h3></a></li>
						
						<li><a href="/trouver_logement/detail/2100529070/"><h3>appartement &agrave; vendre - 3 pi&egrave;ces - 80 m2 - PARIS - 75014 - ILE-DE-FRANCE</h3></a></li>
						
						<li><a href="/trouver_logement/detail/2005934505/"><h3>appartement &agrave; vendre - 2 pi&egrave;ces - 61 m2 - PARIS - 75006 - ILE-DE-FRANCE</h3></a></li>
						
						<li><a href="/trouver_logement/detail/1279568267/"><h3>appartement &agrave; vendre - 7 pi&egrave;ces - 194 m2 - PARIS - 75006 - ILE-DE-FRANCE</h3></a></li>
						
						<li><a href="/trouver_logement/detail/2053306151/"><h3>appartement &agrave; vendre - 4 pi&egrave;ces - 54 m2 - PARIS - 75009 - ILE-DE-FRANCE</h3></a></li>
						
						<li><a href="/trouver_logement/detail/2113274702/"><h3>appartement &agrave; vendre - 6 pi&egrave;ces - 138 m2 - PARIS - 75012 - ILE-DE-FRANCE</h3></a></li>
						
					  </ul>
					</div>
					
					<div class="box25 paddL10">
					  <a href="/edito/departement/paris-un-departement-qui-nen-est-pas-un/">
						<h2>Immobilier à  Paris </h2>
						</a>
					  <ul>
						
					  </ul>
					</div>
					
					<div class="box25 paddL10">
					  <a href="/annonces/achat-appartement/v-paris/s-0-/st-0-/b-0-/page-1/">
						<h2>Achat appartement Paris</h2>
						</a>
					  <ul>
						
					  </ul>
					</div>
					
					<div class="box25 paddL10">
					  <a href="/edito/region/ile-de-france/">
						<h2>Immobilier en ILE-DE-FRANCE </h2>
						</a>
					  <ul>
						
					  </ul>
					</div>
					
					<div class="box25 paddL10">
					  <a href="/edito/ville/paris-14eme/">
						<h2>Immobilier PARIS</h2>
						</a>
					  <ul>
						
					  </ul>
					</div>
					
					  </div>
					  <div class="zone_logo_footer">
						<img src="/theme/generic/css/images/op-marque/sceau_c21.svg">
					  </div>
				  </div>
				  
				  <div class="reset"></div>
         	
          </div>
        </div>
      </footer>
      
<!-- ==========================================================================
  HTML TO ADD FOR PRINT VERSION
  ========================================================================== -->

<div class="print-box print-note displayNone">
  <div class="print-box-title">
    Notes
  </div>
  <div class="print-box-content print-note-content">
    Date :<hr />
    Notes :
  </div>
</div>

<div class="print-box print-contact displayNone">
    <div class="print-box-title">Contact</div>
    <div class="print-box-content print-contact-content">
       <p>
          <span class="print-contact-name">CENTURY 21 Porte d&#39;Orléans</span><br />
          130  boulevard Brune<br />
          
          75014 PARIS <br />
          <span class="print-contact-phone">
            
            01 45 43 51 51 
            
          </span><br />
          portedorleans@century21.fr
        </p>
    </div>
</div>

<!-- ==========================================================================
  END HTML TO ADD FOR PRINT VERSION
  ========================================================================== -->

      
    </div>
        
    
    <img class="print_content displayNone" id="print-footer" src="/img/print-footer.png" />

    
    
    <div id="mainBACKGROUND" style="background:url(/theme/generic/css/images/images-fonds/SN-page-interne-D.jpg) no-repeat top right/cover;">
        <div class="mid"></div>
    </div>
    
    
    <script>
      $(document).ready(function(){ $('form input.token_input').tokenInput("/autocomplete/localite/", {theme: 'facebook', hintText:'',placeholder:'Saisissez votre choix ici...'}); });
    </script>
    








  	
  	
  </body>
  <!--site national -->
</html>

    http_version: null
  recorded_at: Tue, 31 Mar 2020 16:38:33 GMT
- request:
    method: get
    uri: https://www.century21.fr/trouver_logement/detail/2129159693/
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Tue, 31 Mar 2020 16:38:34 GMT
      Content-Type:
      - text/html; charset=utf-8
      Content-Length:
      - '29545'
      Server:
      - Apache
      Expires:
      - Wed, 01 Apr 2020 02:55:14 GMT
      Cache-Control:
      - max-age=43200
      Last-Modified:
      - Tue, 31 Mar 2020 14:55:14 GMT
      Vary:
      - Accept-Encoding,User-Agent
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        <!DOCTYPE html>
<!--[if lt IE 7 ]> <html lang="fr" class="no-js ie6"> <![endif]--><!--[if IE 7 ]><html lang="fr" class="no-js ie7"> <![endif]--><!--[if IE 8 ]><html lang="fr" class="no-js ie8"> <![endif]--><!--[if IE 9 ]>    <html lang="fr" class="no-js ie9"> <![endif]--><!--[if (gt IE 9)|!(IE)]><!--><html lang="fr" class="no-js"><!--<![endif]-->
  <head prefix="og: http://ogp.me/ns# fb: http://ogp.me/ns/fb# article: http://ogp.me/ns/article#">
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <!--[if lt IE 9]><script src="http://html5shim.googlecode.com/svn/trunk/html5.js"></script><![endif]-->
    <meta charset="utf-8" />
    
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1" /><script type="text/javascript">(window.NREUM||(NREUM={})).loader_config={licenseKey:"57291cc109",applicationID:"24270498"};window.NREUM||(NREUM={}),__nr_require=function(e,n,t){function r(t){if(!n[t]){var i=n[t]={exports:{}};e[t][0].call(i.exports,function(n){var i=e[t][1][n];return r(i||n)},i,i.exports)}return n[t].exports}if("function"==typeof __nr_require)return __nr_require;for(var i=0;i<t.length;i++)r(t[i]);return r}({1:[function(e,n,t){function r(){}function i(e,n,t){return function(){return o(e,[u.now()].concat(f(arguments)),n?null:this,t),n?void 0:this}}var o=e("handle"),a=e(4),f=e(5),c=e("ee").get("tracer"),u=e("loader"),s=NREUM;"undefined"==typeof window.newrelic&&(newrelic=s);var p=["setPageViewName","setCustomAttribute","setErrorHandler","finished","addToTrace","inlineHit","addRelease"],l="api-",d=l+"ixn-";a(p,function(e,n){s[n]=i(l+n,!0,"api")}),s.addPageAction=i(l+"addPageAction",!0),s.setCurrentRouteName=i(l+"routeName",!0),n.exports=newrelic,s.interaction=function(){return(new r).get()};var m=r.prototype={createTracer:function(e,n){var t={},r=this,i="function"==typeof n;return o(d+"tracer",[u.now(),e,t],r),function(){if(c.emit((i?"":"no-")+"fn-start",[u.now(),r,i],t),i)try{return n.apply(this,arguments)}catch(e){throw c.emit("fn-err",[arguments,this,e],t),e}finally{c.emit("fn-end",[u.now()],t)}}}};a("actionText,setName,setAttribute,save,ignore,onEnd,getContext,end,get".split(","),function(e,n){m[n]=i(d+n)}),newrelic.noticeError=function(e,n){"string"==typeof e&&(e=new Error(e)),o("err",[e,u.now(),!1,n])}},{}],2:[function(e,n,t){function r(e,n){var t=e.getEntries();t.forEach(function(e){"first-paint"===e.name?c("timing",["fp",Math.floor(e.startTime)]):"first-contentful-paint"===e.name&&c("timing",["fcp",Math.floor(e.startTime)])})}function i(e,n){var t=e.getEntries();t.length>0&&c("lcp",[t[t.length-1]])}function o(e){if(e instanceof s&&!l){var n,t=Math.round(e.timeStamp);n=t>1e12?Date.now()-t:u.now()-t,l=!0,c("timing",["fi",t,{type:e.type,fid:n}])}}if(!("init"in NREUM&&"page_view_timing"in NREUM.init&&"enabled"in NREUM.init.page_view_timing&&NREUM.init.page_view_timing.enabled===!1)){var a,f,c=e("handle"),u=e("loader"),s=NREUM.o.EV;if("PerformanceObserver"in window&&"function"==typeof window.PerformanceObserver){a=new PerformanceObserver(r),f=new PerformanceObserver(i);try{a.observe({entryTypes:["paint"]}),f.observe({entryTypes:["largest-contentful-paint"]})}catch(p){}}if("addEventListener"in document){var l=!1,d=["click","keydown","mousedown","pointerdown","touchstart"];d.forEach(function(e){document.addEventListener(e,o,!1)})}}},{}],3:[function(e,n,t){function r(e,n){if(!i)return!1;if(e!==i)return!1;if(!n)return!0;if(!o)return!1;for(var t=o.split("."),r=n.split("."),a=0;a<r.length;a++)if(r[a]!==t[a])return!1;return!0}var i=null,o=null,a=/Version\/(\S+)\s+Safari/;if(navigator.userAgent){var f=navigator.userAgent,c=f.match(a);c&&f.indexOf("Chrome")===-1&&f.indexOf("Chromium")===-1&&(i="Safari",o=c[1])}n.exports={agent:i,version:o,match:r}},{}],4:[function(e,n,t){function r(e,n){var t=[],r="",o=0;for(r in e)i.call(e,r)&&(t[o]=n(r,e[r]),o+=1);return t}var i=Object.prototype.hasOwnProperty;n.exports=r},{}],5:[function(e,n,t){function r(e,n,t){n||(n=0),"undefined"==typeof t&&(t=e?e.length:0);for(var r=-1,i=t-n||0,o=Array(i<0?0:i);++r<i;)o[r]=e[n+r];return o}n.exports=r},{}],6:[function(e,n,t){n.exports={exists:"undefined"!=typeof window.performance&&window.performance.timing&&"undefined"!=typeof window.performance.timing.navigationStart}},{}],ee:[function(e,n,t){function r(){}function i(e){function n(e){return e&&e instanceof r?e:e?c(e,f,o):o()}function t(t,r,i,o){if(!l.aborted||o){e&&e(t,r,i);for(var a=n(i),f=v(t),c=f.length,u=0;u<c;u++)f[u].apply(a,r);var p=s[y[t]];return p&&p.push([b,t,r,a]),a}}function d(e,n){h[e]=v(e).concat(n)}function m(e,n){var t=h[e];if(t)for(var r=0;r<t.length;r++)t[r]===n&&t.splice(r,1)}function v(e){return h[e]||[]}function g(e){return p[e]=p[e]||i(t)}function w(e,n){u(e,function(e,t){n=n||"feature",y[t]=n,n in s||(s[n]=[])})}var h={},y={},b={on:d,addEventListener:d,removeEventListener:m,emit:t,get:g,listeners:v,context:n,buffer:w,abort:a,aborted:!1};return b}function o(){return new r}function a(){(s.api||s.feature)&&(l.aborted=!0,s=l.backlog={})}var f="nr@context",c=e("gos"),u=e(4),s={},p={},l=n.exports=i();l.backlog=s},{}],gos:[function(e,n,t){function r(e,n,t){if(i.call(e,n))return e[n];var r=t();if(Object.defineProperty&&Object.keys)try{return Object.defineProperty(e,n,{value:r,writable:!0,enumerable:!1}),r}catch(o){}return e[n]=r,r}var i=Object.prototype.hasOwnProperty;n.exports=r},{}],handle:[function(e,n,t){function r(e,n,t,r){i.buffer([e],r),i.emit(e,n,t)}var i=e("ee").get("handle");n.exports=r,r.ee=i},{}],id:[function(e,n,t){function r(e){var n=typeof e;return!e||"object"!==n&&"function"!==n?-1:e===window?0:a(e,o,function(){return i++})}var i=1,o="nr@id",a=e("gos");n.exports=r},{}],loader:[function(e,n,t){function r(){if(!x++){var e=E.info=NREUM.info,n=d.getElementsByTagName("script")[0];if(setTimeout(s.abort,3e4),!(e&&e.licenseKey&&e.applicationID&&n))return s.abort();u(y,function(n,t){e[n]||(e[n]=t)}),c("mark",["onload",a()+E.offset],null,"api");var t=d.createElement("script");t.src="https://"+e.agent,n.parentNode.insertBefore(t,n)}}function i(){"complete"===d.readyState&&o()}function o(){c("mark",["domContent",a()+E.offset],null,"api")}function a(){return O.exists&&performance.now?Math.round(performance.now()):(f=Math.max((new Date).getTime(),f))-E.offset}var f=(new Date).getTime(),c=e("handle"),u=e(4),s=e("ee"),p=e(3),l=window,d=l.document,m="addEventListener",v="attachEvent",g=l.XMLHttpRequest,w=g&&g.prototype;NREUM.o={ST:setTimeout,SI:l.setImmediate,CT:clearTimeout,XHR:g,REQ:l.Request,EV:l.Event,PR:l.Promise,MO:l.MutationObserver};var h=""+location,y={beacon:"bam.nr-data.net",errorBeacon:"bam.nr-data.net",agent:"js-agent.newrelic.com/nr-1167.min.js"},b=g&&w&&w[m]&&!/CriOS/.test(navigator.userAgent),E=n.exports={offset:f,now:a,origin:h,features:{},xhrWrappable:b,userAgent:p};e(1),e(2),d[m]?(d[m]("DOMContentLoaded",o,!1),l[m]("load",r,!1)):(d[v]("onreadystatechange",i),l[v]("onload",r)),c("mark",["firstbyte",f],null,"api");var x=0,O=e(6)},{}],"wrap-function":[function(e,n,t){function r(e){return!(e&&e instanceof Function&&e.apply&&!e[a])}var i=e("ee"),o=e(5),a="nr@original",f=Object.prototype.hasOwnProperty,c=!1;n.exports=function(e,n){function t(e,n,t,i){function nrWrapper(){var r,a,f,c;try{a=this,r=o(arguments),f="function"==typeof t?t(r,a):t||{}}catch(u){l([u,"",[r,a,i],f])}s(n+"start",[r,a,i],f);try{return c=e.apply(a,r)}catch(p){throw s(n+"err",[r,a,p],f),p}finally{s(n+"end",[r,a,c],f)}}return r(e)?e:(n||(n=""),nrWrapper[a]=e,p(e,nrWrapper),nrWrapper)}function u(e,n,i,o){i||(i="");var a,f,c,u="-"===i.charAt(0);for(c=0;c<n.length;c++)f=n[c],a=e[f],r(a)||(e[f]=t(a,u?f+i:i,o,f))}function s(t,r,i){if(!c||n){var o=c;c=!0;try{e.emit(t,r,i,n)}catch(a){l([a,t,r,i])}c=o}}function p(e,n){if(Object.defineProperty&&Object.keys)try{var t=Object.keys(e);return t.forEach(function(t){Object.defineProperty(n,t,{get:function(){return e[t]},set:function(n){return e[t]=n,n}})}),n}catch(r){l([r])}for(var i in e)f.call(e,i)&&(n[i]=e[i]);return n}function l(n){try{e.emit("internal-error",n)}catch(t){}}return e||(e=i),t.inPlace=u,t.flag=a,t}},{}]},{},["loader"]);</script><script type="text/javascript">window.NREUM||(NREUM={});NREUM.info={"beacon":"bam.nr-data.net","queueTime":1,"licenseKey":"57291cc109","agent":"","transactionName":"ZAZbZxFSC0FQWxULVl1Mf0YNUBFbXlZOFAwdAFZeDlwLHFJZAgpcbAFQVg0JEkBQSBEHXWwVUFYU","applicationID":"24270498","errorBeacon":"bam.nr-data.net","applicationTime":20}</script>
    <meta name="verify-v1" content="vaH6Ww2qTnhkQOiN1kEHkZbdVNn0U5jLvWPO/+NwOIQ=" />
    
    <meta name="ROBOTS" content="index, follow" />
    <meta name="googlebot" content="index, follow" />
    
    
    <title>Appartement f1 1 pièce à vendre – PARIS (75013) – Ref. 5208 | CENTURY 21</title>
    <meta name="description" content="Appartement f1 à vendre de 1 pi&egrave;ce et de 15 m2 à PARIS . Consultez vite nos annonces immobilières de biens en vente - Century21.fr" />
    <meta name="keywords" content="Agences Immobilières, Immobilier, Achat, Vente, Location, Appartement, Maison, Parking, Terrain, Agence, Taux, Prix, Petites annonces">
    
        <meta property="twitter:account_id" content="1510100551" />
        <meta property="fb:admins" content="741613563" />
    

	<script type="text/javascript">
        function redirect_etendu()
        {
            var url = String(document.location);

            if (url.indexOf('#etendu#') != -1)
            {
                window.location.assign("/")
            }
        }
        redirect_etendu();
    </script>

    
    <meta property="og:title" content="Appartement f1 1 pièce à vendre – PARIS (75013) – Ref. 5208 | CENTURY 21"/>
    <meta property="og:description" content="Appartement f1 à vendre de 1 pi&egrave;ce et de 15 m2 à PARIS . Consultez vite nos annonces immobilières de biens en vente - Century21.fr"/>
    <meta property="og:image" content="https://www.century21.fr/imagesBien/202/2947/c21_202_2947_5208_8_364945EE-5511-4684-ACDE-F45231CAE46D.jpg"/>
    
    
    <meta name="twitter:card" content= "summary" />    
    <meta name="twitter:site" content="@Century21France"/>
    <meta name="twitter:creator" content="@Century21France"/>    
    <meta  name="twitter:image" content="https://www.century21.fr/imagesBien/202/2947/c21_202_2947_5208_8_364945EE-5511-4684-ACDE-F45231CAE46D.jpg"/>



    <link rel="canonical" href="https://www.century21.fr/trouver_logement/detail/2129159693/" />
    <!--[if gt IE 5 ]><link href="/theme/generic/css/styles-ie.css" rel="stylesheet" /><![endif]-->
    <!--[if IE 6 ]><link href="/theme/generic/css/styles-ie6.css" rel="stylesheet" /><![endif]-->
    <!--[if IE 7 ]><link href="/theme/generic/css/styles-ie7.css" rel="stylesheet" /><![endif]-->
    <!--[if IE 8 ]><link href="/theme/generic/css/styles-ie8.css" rel="stylesheet" /><![endif]-->

    
    
    <link href="/theme/bootstrap/css/bootstrap.used.css" rel="stylesheet" />
    <link rel="stylesheet" href="/css/jquery-ui.css">
  	<link rel="stylesheet" type="text/css" href="/theme/generic/css/qualitelis.css" media="all"/>
    <link rel="stylesheet" type="text/css" href="/theme/generic/css/qualitelis-agence.css" media="all"/>
    <link rel="stylesheet" href="/theme/generic/css/font-awesome/4.3.0/css/font-awesome.min.css">
    <link rel="stylesheet" type="text/css" href="/theme/generic/js/lib/owl-carousel-v2/assets/owl.carousel.css" />
  	<link rel="stylesheet" type="text/css" href="/theme/generic/js/lib/owl-carousel-v2/assets/owl.theme.default.min.css" />
    <link rel="stylesheet" type="text/css" href="/theme/generic/css/jquery.lightbox-0.5.css" media="all"/>
    <link rel="stylesheet" type="text/css" href="/theme/generic/js/lib/fancyapps-fancyBox/source/jquery.fancybox.css" media="all"/>
    <link rel="stylesheet" type="text/css" href="/theme/generic/js/lib/rateyo/jquery.rateyo.css" media="all"/>
    <link rel="stylesheet" type="text/css" href="/theme/generic/css/styles.css" media="all"/>
    <link rel="stylesheet" type="text/css" href="/css/common.css" media="all"/>
    <link rel="stylesheet" type="text/css" href="/theme/generic/css/print.css" media="print"/>
    <link rel="stylesheet" type="text/css" href="/theme/slider/css/styles.css" media="all"/>
    <link rel="stylesheet" type="text/css" href="/theme/generic/js/lib/odometer-0.4.6/css/odometer-theme-default.css" />
    <link rel="stylesheet" href="/theme/generic/css/c-combien/launch-defil-number.css">
    <link rel="stylesheet" type="text/css" href="/theme/generic/css/style-new-c21.css" media="all"/>
    <link href="/theme/generic/css/tailwind.css" rel="stylesheet">
    
    
    
  
  <link rel="stylesheet" type="text/css" href="/theme/generic/js/lib/owl-carousel-v2/assets/owl.carousel.css" />
  <link rel="stylesheet" type="text/css" href="/theme/generic/js/lib/owl-carousel-v2/assets/owl.theme.default.min.css" />
  <link rel="stylesheet" type="text/css" href="/theme/generic/js/lib/fancyapps-fancyBox/source/jquery.fancybox.css" media="all" />
  <link rel="stylesheet" type="text/css" href="/theme/generic/css/styles-a-proximite.css" media="all" />
  <link rel="stylesheet" type="text/css" href="/theme/generic/css/styles-detail-biens.css" media="all" />
  <link rel="stylesheet" href="/js/leaflet/leaflet.css" />
  <link rel="stylesheet" href="/js/mappy/L.Mappy.css" />
  
  

    
    <script type="text/javascript">
	  var IS_MOBILE = false;
	  var is_ice = "false";
      var HTTP_STATIC = "";
      var HTTP_PROTOCOL = "https";
      var TYPE_SITE = "NATIONAL";
  	  var SITE_TYPE = "NATIONAL";
      var DEBUG = false;
      var PARTICIPE_COLLECTE = 0;
	  var dateServer = new Date();
	  var anneeServer = dateServer.getFullYear();
	  var moisServer = dateServer.getMonth()+1;
	  var moisBg = (parseInt(dateServer.getMonth()+1) <10) ? '0' + parseInt(dateServer.getMonth()+1) : dateServer.getMonth()+1;
	  var heureBg = dateServer.getHours();
      var RECAPTCHA_PUBLIC_KEY =  "6LfQV88UAAAAADg8fB8wzTXISqSepbOVVR_0AeNb";
      
	  

	  


      
		var gaProperty = 'UA-3333689-1'
      
      if (window != top) top.location.href = window.location.href ;
      
    </script>
    <!--[if IE]><link rel="shortcut icon" href="/theme/generic/css/images/favicon.ico"><![endif]-->
    <link rel="icon" href="/theme/generic/css/images/favicon-16x16.png" />
    <link rel="apple-touch-icon" href="/theme/generic/css/images/apple-touch-icon.png" />


	
    
    <script type="text/javascript" src="/theme/generic/js/lib/jquery.js"></script>
    <script type="text/javascript" src="/theme/generic/js/uid-gen.js"></script>
    <script type="text/javascript" src="/theme/generic/js/lib/jquery-ui.js"></script>
    <script type="text/javascript" src="/theme/generic/js/lib/jquery.ui.touch-punch.min.js"></script>
	<script type="text/javascript" src="/theme/generic/js/lib/jquery-cookie.js"></script>
    <script type="text/javascript" src="/theme/generic/js/lib/jquery-slider-ui.js"></script>
    <script src="/theme/generic/js/lib/fancyapps-fancyBox/source/jquery.fancybox.js"></script>
    
    <script type="text/javascript" src="/theme/generic/js/lib/jquery.placeholder.js"></script>
    <script type="text/javascript" src="/theme/generic/js/lib/jtruncate.js"></script>
    <script type="text/javascript" src="/theme/bootstrap/js/bootstrap.min.js"></script>
    <script type="text/javascript" src="/theme/generic/js/lib/jquery-loader.js"></script>

    <script type="text/javascript" src="/theme/generic/js/lib/jcarousellite_1.0.1.min.js"></script>
    <script src="/theme/generic/js/lib/owl-carousel-v2/owl.carousel.js"></script>
    <script type="text/javascript" src="/theme/generic/js/lib/jquery.lightbox-0.5.min.js"></script>
    <script type="text/javascript" src="/theme/generic/js/lib/jquery-animation-background.js"></script>
    <script type="text/javascript" src="/theme/generic/js/lib/jquery-easing.js"></script>
    <script type="text/javascript" src="/theme/generic/js/lib/jquery-boxShadow.js"></script>
    <script type="text/javascript" src="/theme/generic/js/lib/rateyo/jquery.rateyo.js"></script>
    <script type="text/javascript" src="/theme/generic/js/scripts.js"></script>
    <script type="text/javascript" src="/theme/generic/js/scripts-star-rating.js"></script>
    <script type="text/javascript" src="/js/calculette.js"></script>
    <script type="text/javascript" src="/js/dept.js"></script>
    <script src="https://www.google.com/recaptcha/api.js?render=6LfQV88UAAAAADg8fB8wzTXISqSepbOVVR_0AeNb"></script>
    <script type="text/javascript" src="/js/common.js?t=2"></script>
    <script type="text/javascript" src="/js/jquery.tokeninput.js"></script>
    
    

    
    
    
  <!--[if lt IE 9]><script language="javascript" type="text/javascript" src="/theme/generic/js/lib/jquery.jqplot/excanvas.js"></script><![endif]-->
  <script type="text/javascript">
   
   	var points =  [];
   	var bien = false;
   	points = [{"capital_social": "7000 €", "ville": "PARIS", "code": 2947, "tel": "01 85 34 19 69 ", "uid": 400806883, "ref_reseau": 81317, "non_detention_fonds": false, "region_nom": "ILE-DE-FRANCE", "coordonnees_siege_social": "44 avenue des Gobelins - 75013 PARIS", "complement_adresse": null, "lng": 2.35335778417268, "departement_nom": "Paris", "nom_garant": "GALIAN  N° 43158L", "numero_cartepro": "CPI 7501 2015 000 000 589", "nom_departement": "Paris", "adresse_garant": "89 Rue La Boétie, 75008 Paris", "etat_membre_cartepro": "FRANCE", "source": "202/2947/webmaster_1_202_2947_0_2_0.jpg", "forme_juridique": "", "sites_all": {"GROUPEINTERMEDIAIRE": {"url_fr": "www.century21-croulebarbe.com", "ref_type_maquette": 1, "uid": 1188608470, "affiche_c21": 1, "url_fr_aff": "century21-croulebarbe.com", "analytique": "UA-24342689-2", "type_site_web": "GROUPEINTERMEDIAIRE", "url_en": "en.century21-croulebarbe.com", "url_facebook": null, "affiche_facebook_likebox": true}, "AGENCE": {"url_fr": "www.century21-arago-paris-13.com", "ref_type_maquette": 1, "uid": 409071782, "affiche_c21": 1, "url_fr_aff": "century21-arago-paris-13.com", "analytique": "UA-24342689-1", "type_site_web": "AGENCE", "url_en": "en.century21-arago-paris-13.com", "url_facebook": "https://www.facebook.com/pages/CENTURY-21-Arago-%C3%A0-Paris-13/176519412397109", "affiche_facebook_likebox": true}}, "siret": "524847878", "mail": "gobelins@century21.fr", "ville_rcs": "", "nb_locations_ice": 0, "activites_agence": [{"activite_agence": "Gestion Locative", "euid": "2"}, {"activite_agence": "Location", "euid": "4"}, {"activite_agence": "Transaction", "euid": "1"}], "nom": "CENTURY 21 Arago - Les Gobelins", "adresse_emetteur_cartepro": "27 avenue de Friedland 75008 PARIS", "url_mediateur": "https://medimmoconso.fr/adresser-une-reclamation/", "sites": {"GROUPEINTERMEDIAIRE": {"url_fr": "www.century21-croulebarbe.com", "ref_type_maquette": 1, "uid": 1188608470, "affiche_c21": 1, "url_fr_aff": "century21-croulebarbe.com", "analytique": "UA-24342689-2", "type_site_web": "GROUPEINTERMEDIAIRE", "url_en": "en.century21-croulebarbe.com", "url_facebook": null, "affiche_facebook_likebox": true}, "AGENCE": {"url_fr": "www.century21-arago-paris-13.com", "ref_type_maquette": 1, "uid": 409071782, "affiche_c21": 1, "url_fr_aff": "century21-arago-paris-13.com", "analytique": "UA-24342689-1", "type_site_web": "AGENCE", "url_en": "en.century21-arago-paris-13.com", "url_facebook": "https://www.facebook.com/pages/CENTURY-21-Arago-%C3%A0-Paris-13/176519412397109", "affiche_facebook_likebox": true}}, "nb_ventes": 6, "adresse": "44  Avenue des Gobelins", "departement": "75", "nom_mediateur": "Association MEDIMMOCONSO", "code_rcs": "524847878", "nb_locations": 3, "lat": 48.8345440464065, "region_uid": 13, "code_postal": "75013", "raison_sociale": "CBHF", "absolute_url": "/trouver_agence/agence/400806883/", "nb_ventes_ice": 0, "email_mediateur": "contact@medimmoconso.fr", "num_decla_tva": "", "horaires": [{"nom": "Lundi", "aprem": false, "debut_1": "09:00", "debut_2": "", "sans_interruption": true, "fin_2": "19:30", "fin_1": "", "sur_rdv_matin": false, "matin": false, "actif": true, "sur_rdv_aprem": false}, {"nom": "Mardi", "aprem": false, "debut_1": "09:00", "debut_2": "", "sans_interruption": true, "fin_2": "19:30", "fin_1": "", "sur_rdv_matin": false, "matin": false, "actif": true, "sur_rdv_aprem": false}, {"nom": "Mercredi", "aprem": false, "debut_1": "09:00", "debut_2": "", "sans_interruption": true, "fin_2": "19:30", "fin_1": "", "sur_rdv_matin": false, "matin": false, "actif": true, "sur_rdv_aprem": false}, {"nom": "Jeudi", "aprem": false, "debut_1": "09:00", "debut_2": "", "sans_interruption": true, "fin_2": "19:30", "fin_1": "", "sur_rdv_matin": false, "matin": false, "actif": true, "sur_rdv_aprem": false}, {"nom": "Vendredi", "aprem": false, "debut_1": "09:00", "debut_2": "", "sans_interruption": true, "fin_2": "19:30", "fin_1": "", "sur_rdv_matin": false, "matin": false, "actif": true, "sur_rdv_aprem": false}, {"nom": "Samedi", "aprem": false, "debut_1": "09:30", "debut_2": "", "sans_interruption": true, "fin_2": "18:30", "fin_1": "", "sur_rdv_matin": false, "matin": false, "actif": true, "sur_rdv_aprem": false}], "adresse_mediateur": "1 Allée du Parc de Mesemena - Bât A - CS25222 - 44505 LA BAULE CEDEX", "ref_agence": 400806883, "numero_orias": "", "nom_emetteur_cartepro": "CCI PARIS IDF", "euid": "202_2947"}];
    
        bien = [{ 'type': "bien-semi-geolocalise", 'agence': {"capital_social": "7000 €", "ville": "PARIS", "code": 2947, "tel": "01 85 34 19 69 ", "uid": 400806883, "ref_reseau": 81317, "non_detention_fonds": false, "region_nom": "ILE-DE-FRANCE", "coordonnees_siege_social": "44 avenue des Gobelins - 75013 PARIS", "complement_adresse": null, "lng": 2.35335778417268, "departement_nom": "Paris", "nom_garant": "GALIAN  N° 43158L", "numero_cartepro": "CPI 7501 2015 000 000 589", "nom_departement": "Paris", "adresse_garant": "89 Rue La Boétie, 75008 Paris", "etat_membre_cartepro": "FRANCE", "source": "202/2947/webmaster_1_202_2947_0_2_0.jpg", "forme_juridique": "", "sites_all": {"GROUPEINTERMEDIAIRE": {"url_fr": "www.century21-croulebarbe.com", "ref_type_maquette": 1, "uid": 1188608470, "affiche_c21": 1, "url_fr_aff": "century21-croulebarbe.com", "analytique": "UA-24342689-2", "type_site_web": "GROUPEINTERMEDIAIRE", "url_en": "en.century21-croulebarbe.com", "url_facebook": null, "affiche_facebook_likebox": true}, "AGENCE": {"url_fr": "www.century21-arago-paris-13.com", "ref_type_maquette": 1, "uid": 409071782, "affiche_c21": 1, "url_fr_aff": "century21-arago-paris-13.com", "analytique": "UA-24342689-1", "type_site_web": "AGENCE", "url_en": "en.century21-arago-paris-13.com", "url_facebook": "https://www.facebook.com/pages/CENTURY-21-Arago-%C3%A0-Paris-13/176519412397109", "affiche_facebook_likebox": true}}, "siret": "524847878", "mail": "gobelins@century21.fr", "ville_rcs": "", "nb_locations_ice": 0, "activites_agence": [{"activite_agence": "Gestion Locative", "euid": "2"}, {"activite_agence": "Location", "euid": "4"}, {"activite_agence": "Transaction", "euid": "1"}], "nom": "CENTURY 21 Arago - Les Gobelins", "adresse_emetteur_cartepro": "27 avenue de Friedland 75008 PARIS", "url_mediateur": "https://medimmoconso.fr/adresser-une-reclamation/", "sites": {"GROUPEINTERMEDIAIRE": {"url_fr": "www.century21-croulebarbe.com", "ref_type_maquette": 1, "uid": 1188608470, "affiche_c21": 1, "url_fr_aff": "century21-croulebarbe.com", "analytique": "UA-24342689-2", "type_site_web": "GROUPEINTERMEDIAIRE", "url_en": "en.century21-croulebarbe.com", "url_facebook": null, "affiche_facebook_likebox": true}, "AGENCE": {"url_fr": "www.century21-arago-paris-13.com", "ref_type_maquette": 1, "uid": 409071782, "affiche_c21": 1, "url_fr_aff": "century21-arago-paris-13.com", "analytique": "UA-24342689-1", "type_site_web": "AGENCE", "url_en": "en.century21-arago-paris-13.com", "url_facebook": "https://www.facebook.com/pages/CENTURY-21-Arago-%C3%A0-Paris-13/176519412397109", "affiche_facebook_likebox": true}}, "nb_ventes": 6, "adresse": "44  Avenue des Gobelins", "departement": "75", "nom_mediateur": "Association MEDIMMOCONSO", "code_rcs": "524847878", "nb_locations": 3, "lat": 48.8345440464065, "region_uid": 13, "code_postal": "75013", "raison_sociale": "CBHF", "absolute_url": "/trouver_agence/agence/400806883/", "nb_ventes_ice": 0, "email_mediateur": "contact@medimmoconso.fr", "num_decla_tva": "", "horaires": [{"nom": "Lundi", "aprem": false, "debut_1": "09:00", "debut_2": "", "sans_interruption": true, "fin_2": "19:30", "fin_1": "", "sur_rdv_matin": false, "matin": false, "actif": true, "sur_rdv_aprem": false}, {"nom": "Mardi", "aprem": false, "debut_1": "09:00", "debut_2": "", "sans_interruption": true, "fin_2": "19:30", "fin_1": "", "sur_rdv_matin": false, "matin": false, "actif": true, "sur_rdv_aprem": false}, {"nom": "Mercredi", "aprem": false, "debut_1": "09:00", "debut_2": "", "sans_interruption": true, "fin_2": "19:30", "fin_1": "", "sur_rdv_matin": false, "matin": false, "actif": true, "sur_rdv_aprem": false}, {"nom": "Jeudi", "aprem": false, "debut_1": "09:00", "debut_2": "", "sans_interruption": true, "fin_2": "19:30", "fin_1": "", "sur_rdv_matin": false, "matin": false, "actif": true, "sur_rdv_aprem": false}, {"nom": "Vendredi", "aprem": false, "debut_1": "09:00", "debut_2": "", "sans_interruption": true, "fin_2": "19:30", "fin_1": "", "sur_rdv_matin": false, "matin": false, "actif": true, "sur_rdv_aprem": false}, {"nom": "Samedi", "aprem": false, "debut_1": "09:30", "debut_2": "", "sans_interruption": true, "fin_2": "18:30", "fin_1": "", "sur_rdv_matin": false, "matin": false, "actif": true, "sur_rdv_aprem": false}], "adresse_mediateur": "1 Allée du Parc de Mesemena - Bât A - CS25222 - 44505 LA BAULE CEDEX", "ref_agence": 400806883, "numero_orias": "", "nom_emetteur_cartepro": "CCI PARIS IDF", "euid": "202_2947"} }];
        
            bien[0].lng = 2.3535;
            bien[0].lat = 48.8242;
        

    
   
   
   var ONGLETS = [
   ];
   var printUrl = "/trouver_logement/detail/2129159693/print/";
   

   function get_alerte_add_url() {
     return null;
   }   
   var HTTP_STATIC = "";	
   $(document).ready(function() { 
	   
	   dataLayer.push({
		  'product_page_id' : '2129159693',
		  'product_page_euid' : '202_2947_5208'
	   });
	   init_menuSUBWAY();
   });
  </script>
  
  <script src="/theme/generic/js/lib/owl-carousel-v2/owl.carousel.js"></script>
  <script src="/theme/generic/js/lib/fancyapps-fancyBox/source/jquery.fancybox.js"></script>
  <script type="text/javascript" src="/js/gmap.js"></script>

  <script src="/theme/generic/js/scripts-detail-biens.js"></script>
  <script src="/js/leaflet/leaflet.js"></script>
  <script type="text/javascript" src="/js/mappy/L.Mappy.js"></script>  
  


    <meta property="fb:admins" content="100001097395315" />
    <script>
      var ACTIVITE_CENTURA = "";
      var CACHE_POPUP_ANNONCE = {};
      var UID_BIEN = [];
      var overPopupService = 0;
      var DEV_ENV = false;

      
      

      
      function fix_articles(){
      $('.articles_cont').each(function(){

      
      if ($(this).find('.articles').length && $(this).find('.articles').html().trim() == ''){
      $(this).hide();
      }

      
      var link = $(this).find('.articles_link').attr('href');
      $(this).find('.get_articles_link').attr('href', link);
      });
      }

      $(document).ready(function() {
       /* fix_articles();*/
      });

      

      //if (!_gaq.push) _gaq.push = function () { };

		

			var _gaq = _gaq || [];
			_gaq.push(['_setAccount', 'UA-3333689-1']);
			_gaq.push(['_setDomainName', 'century21.fr']);
			_gaq.push(['_setAllowLinker', true]);
			_gaq.push(['_trackPageview']);

			(function() {
                var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
                ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
                var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
			})();


		
	
    </script>


    
	<script>
	  dataLayer =  [{
		  		

            'env_work': 'Prod',
            'env_site': 'SITE NATIONAL',
            'env_device': 'Desktop',
            'env_template': 'Generique',
            'event' : '',
            'pagename': 'Appartement F1 &agrave; vendre - 1 pi&egrave;ce - 15 m2 - PARIS - 75013 - ILE-DE-FRANCE',
            'pageCategory1': '/trouver_logement/detail/2129159693/',
            'pageCategory2': '',
            'pageCategory3': '',
            'visitorStatus': '',
            'type compte' : ''
           // 'ip': ''

				   
					}];


 
	</script>
    
    
    <script>
		(function(w,d,s,l,i)
		{
			w[l]=w[l]||[];
			w[l].push({'gtm.start': new Date().getTime(),event:'gtm.js'});
			var f=d.getElementsByTagName(s)[0],j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';
			j.async=true;
			j.src='https://www.googletagmanager.com/gtm.js?id='+i+dl;
			f.parentNode.insertBefore(j,f);
		})
		(window,document,'script','dataLayer','GTM-P8DRVBV');


	</script>

  

	
	<script>
    (function(h,o,t,j,a,r){
        h.hj=h.hj||function(){(h.hj.q=h.hj.q||[]).push(arguments)};
        h._hjSettings={hjid:1294600,hjsv:6};
        a=o.getElementsByTagName('head')[0];
        r=o.createElement('script');r.async=1;
        r.src=t+h._hjSettings.hjid+j+h._hjSettings.hjsv;
        a.appendChild(r);
    })(window,document,'https://static.hotjar.com/c/hotjar-','.js?sv=');
	</script>
	


	
	
  </head>

  <body id="site" class="detail_bien relooking page-xl base-site-nat">
  	<!-- Google Tag Manager (noscript) -->
		<noscript>
			<iframe src="https://www.googletagmanager.com/ns.html?id=GTM-P8DRVBV" height="0" width="0" style="display:none;visibility:hidden"></iframe>
		</noscript>
	<!-- End Google Tag Manager (noscript) -->
  
  
  
    
    


    
    <div id="main">
        <!--BANDEAU MESSAGE COOKIE CNIL-->
        <div id="bandeauCookie">
        </div>

      <div id="lineTop">
        <div class="mid">
          <div class="content">
            <ul class="posL">
              
              <li><span><a href="/fiches/a_propos/" onclick="google_tag_event('Menu,Click,A Propos');">A propos de CENTURY 21</a></span></li>
              <li><span><a href="/fiches/a_propos/century21/international/" onclick="google_tag_event('Menu,Click,International');">International</a></span></li>
              <li><span><a href="/trouver_agence/" onclick="google_tag_event('Menu,Click,Nos Agences Immobilières');">Nos agences immobilières</a></span></li>
              <li><span><a href="/fiches/a_propos/le_blog_immobilier/" onclick="google_tag_event('Menu,Click,Blog Immobilier');">Blog immobilier</a></span></li>
              
            </ul>
            <ul class="posR">
            	
            	<li>
                	<form id="rechercheSITE" action="/text_search/" method="get">
                  	<input type="text" id="inputRECHERCHESITE" name="q" placeholder="Rechercher sur le site" />
                  	<a id="btnMOTEURFULLTEXT">OK</a>
                	</form>
              	</li>
              	
			  
             	<li>
					<a id="btnMONCOMPTE2" href="/accounts/">
						Mon compte
					</a>
			 	</li>
              
              
			 <li class="social">
				<a rel="noopener" href="https://www.facebook.com/Century21France" target="_blank" onclick="google_tag_event('Menu,Click,Facebook');" title="Facebook"><i class="fa fa-2x fa-facebook" aria-hidden="true"></i></a>
			 </li>
			

			
			<li class="social">
				  <a rel="noopener" href="https://twitter.com/century21fr" target="_blank" onclick="google_tag_event('Menu,Click,Twitter');" title="Twitter"><i class="fa fa-2x fa-twitter" aria-hidden="true"></i></a>
			 </li>
			
            
			<li class="social">
				  <a rel="noopener" href="https://www.linkedin.com/company/century-21-france/" target="_blank" onclick="google_tag_event('Menu,Click,Linkedin');" title="Linkedin"><i class="fa fa-linkedin fa-2x" aria-hidden="true"></i></a>
			 </li>
			
            
			<li class="social">
				  <a rel="noopener" href="https://www.instagram.com/century21fr/" target="_blank" onclick="google_tag_event('Menu,Click,Instagram');" title="Instagram"><i class="fa fa-instagram fa-2x" aria-hidden="true"></i></a>
			</li>
			
            
            <li class="social">
				  <a rel="noopener" href="https://www.youtube.com/user/century21france" target="_blank" onclick="google_tag_event('Menu,Click,Youtube');" title="Youtube"><i class="fa fa-youtube fa-2x" aria-hidden="true"></i></a>
			</li>
            
             
              <li>
             	<a rel="noopener" class="picto-bot-c21" href="https://www.messenger.com/t/Century21France" target="_blank" onclick="google_tag_event('Menu,Click,Messenger');">
             		<img src="/theme/generic/css/images/op-marque/bot-messenger-century21.svg" alt="le Bot CENTURY 21" height="24px" width="24px" title="le Bot CENTURY 21">
             	</a>
             </li>
             
            </ul>
          </div>
        </div>
      </div>
      
      
      

      
      <header id="mainHeader">
        
        <div class="mid o-top-bar__content tw-flex tw-items-center tw-bg-c21-gold">
          <div class="content tw-container tw-mx-auto">
          	<ul>
          		<li>
          			<a href="/" id="btnLogo"
               title="Retour à l'accueil CENTURY 21, N°1 des agences immobilières dans le monde">
          				<img src="/theme/generic/css/images/op-marque/logo_c21.svg" alt="Retour à l'accueil CENTURY 21, N°1 des agences immobilières dans le monde" width="200px" height="23px" />
          				
					</a>
				</li>
          		<li class="link-nav">
          			<a class="active" href="/acheter/" onclick="google_tag_event('Menu,Click,Acheter');">ACHETER</a>
          		</li>
          		<li class="link-nav">
          			<a  href="/louer/" onclick="google_tag_event('Menu,Click,Louer');">LOUER</a>
          		</li>
          		<li class="link-nav">
          			<a  href="/outils/vendre/" onclick="google_tag_event('Menu,Click,Vendre');">VENDRE</a>
          		</li>
          		<li class="link-nav">
          			<a  href="/outils/faire_gerer/" onclick="google_tag_event('Menu,Click,Faire Gerer');">FAIRE G&Eacute;RER</a>
          		</li>
          		<li class="link-nav">
          			<a href="/commerce_entreprises/" onclick="google_tag_event('Menu,Click,Entreprise Et Commerce');">ENTREPRISE ET COMMERCE</a>
          		</li>
          		<li>
          			<a rel="noopener" href="https://www.lesmeilleurstalents.com" target="_blank" onclick="google_tag_event('Menu,Click,Offres Emploi');">OFFRES D'EMPLOI</a>
          		</li>
          		<li><a rel="noopener" href="https://franchise.century21.fr/" target="_blank" onclick="google_tag_event('Menu,Click,Devenir Franchise');">DEVENIR FRANCHIS&Eacute;</a></li>
          	</ul>
          </div>
          <div class="print_content displayNone">
            <span class="titre_h2">CENTURY 21, N°1 des agences immobilières dans le monde</span>
          </div>
        </div>
        
        
      </header>
      
      

      	
      	


      

      
      
      

      
      <div id="page">
        <div class="mid">
          
          
<!--FOND OPAQUE POUR DETAIL DE BIEN-->
<div class="fondDetail"></div>

<!-- AFFICHER LE NUM TEL DE LAG-->

<div id="numTelDiv" class="numTelAg miniPopupService">
  <a id="fermerNumTel" class="pictoBtnFermer floatR margT10 margR15"></a>
    
    <span class="telAg">
      Tél : 01 85 34 19 69 
    </span>
    
</div>


<!--code ag :2947 -->

 <div id="contactAgDiv" class="form-design ajax_form_container tw-hidden displayNone">
  <div class="content_contactAg">
  
   <form id="contact_agence_form" method="post" action="/trouver_agence/contact_agence/400806883/" class="recaptchav3"
        onsubmit="contact_agence(this);google_tag_event('bien,envoi_msg_ag,2947'); return false;">
    <input type="hidden" name="g-recaptcha-response"/>
    
    
    <input type="hidden" name="activite_centura" value=""/>
    <label for="id_nom">Nom* :</label>
    <input id="id_nom" name="nom" type="text" />
    
    <div class="reset"></div>
    <label for="id_mail">Email* :</label>
    <input id="id_mail" name="mail" type="email" />
    
    <div class="reset"></div>
    <label for="id_telephone">Téléphone* :</label>
    <input id="id_telephone" name="telephone" type="text" />
    
    <div class="reset"></div>
    <textarea cols="40" id="id_message" name="message" placeholder="Tapez votre message ici *" rows="10">
Je suis intéressé par le bien : APPARTEMENT F1 - 187 000 €   - PARIS (75013) - réf : 5208</textarea>
    
    
    <input id="id_reference_bien" name="reference_bien" type="hidden" />
    
    <input id="id_uid_bien" name="uid_bien" type="hidden" value="2129159693" />
    
    <input id="id_nom_programme" name="nom_programme" type="hidden" />
    
    <input id="id_ville_programme" name="ville_programme" type="hidden" />
    
    <input id="id_ice" name="ice" type="hidden" value="false" />
    
    <div class="reset"></div>
    <br>
    <div class="zone-optin-form-estim">
	<label for="id_optin_contact" class="tw-pointer font16">
		<input id="id_optin_contact" name="optin_contact" type="checkbox" style="width: 30px;min-width: 30px;height: 30px;">
	  Je souhaite pouvoir être recontacté pour être informé de toutes les actualités CENTURY&nbsp;21
	</label>
	</div>
   <br>
    <div class="reset"></div>
    <input type="button" onclick="google_tag_event('Envoi Message Detail Bien,Click,Envoi Message Detail Bien_Achat'); contact_agence($('#contact_agence_form'));" value="Envoyer" class="fR moreYellow black margT10">
    <div class="reset"></div>
    <br><br>
    <p class="font10 LH12 justify">
		Century 21 collecte des données à caractère personnel afin de permettre au service réclamation de traiter au mieux votre demande. Les données mentionnées d'un * sont obligatoires. Conformément à la règlementation, vous disposez d'un droit d'accès, de rectification, de portabilité, d'effacement, de limitation du traitement et d'opposition au traitement. Ces droits peuvent être exercés à l'adresse <img style="display: inline-block; vertical-align: text-bottom;" src="/theme/generic/css/images/dpo-mail-black-10px.png">. Pour plus d'information <a class="link-mention black underline" href="/fiches/protection-des-donnees/" target="_blank">cliquez ici</a>.
	</p>
  </form>
  <script>
	$(document).ready(function(){
		if(window.location.href.indexOf("commerce_entreprises") > -1) {
       		$(".link-mention").attr("href","/commerce_entreprises/fiches/protection-des-donnees/");
    	}
	});
</script>
  
  </div>
</div>




          <div class="content">
            <div class="wrap">
              
<div id="boite-outil2">
	<ul>
    	<li>
        	<a class="btn-add" title="Ajouter à ma sélection" onclick="toggleSelection(this,'/accounts/selection/add/2129159693/','/accounts/selection/del/2129159693/');google_tag_event('bien-boite-outil-V2,Click,ajouter-a-ma-selection');">
            	<i class="fa fa-star fa-3x"></i>
            </a>
        </li>
    	<li><a class="tool_print" onclick="google_tag_event('Impression_fiche,Click,Impression_fiche');" title="Imprimer"><i class="fa fa-print fa-3x"></i></a></li>
    	<li>
        	<a class="btnSendFriend" rel="/mailer_un_ami/?url=/trouver_logement/detail/2129159693/" onclick="google_tag_event('bien-boite-outil-V2,Click,btn-envoi-ami');" title="Envoyer à un ami">
        		<i class="fa fa-envelope-o fa-3x"></i>
            </a>
        </li>
    	<li><a class="fancybox" href="#popupReseauxSociauxAG" onclick="google_tag_event('bien-boite-outil-V2,Click,partager-reseaux-sociaux');" title="Partager sur les réseaux sociaux"><i class="fa fa-share-alt fa-3x"></i></a>
        </li>
        
        
    </ul>
</div>


              

              

<div id="filAriane">
  <ol itemscope itemtype="http://schema.org/BreadcrumbList">
    
   <li itemprop="itemListElement" itemscope itemtype="http://schema.org/ListItem">
    
    <a href="/" itemprop="item">
        <span itemprop="name">Immobilier</span>
      </a>
      <meta itemprop="position" content="1">
   </li>
    
   <li itemprop="itemListElement" itemscope itemtype="http://schema.org/ListItem">
    
    <span class="fL margR10">›</span>
    
    <a href="/acheter/" itemprop="item">
        <span itemprop="name">Achat</span>
      </a>
      <meta itemprop="position" content="2">
   </li>
    
   <li itemprop="itemListElement" itemscope itemtype="http://schema.org/ListItem">
    
    <span class="fL margR10">›</span>
    
    <a href="/edito/achat-appartement/" itemprop="item">
        <span itemprop="name">Achat Appartement</span>
      </a>
      <meta itemprop="position" content="3">
   </li>
    
   <li itemprop="itemListElement" itemscope itemtype="http://schema.org/ListItem">
    
    <span class="fL margR10">›</span>
    
    <a href="/annonces/achat-appartement/cp-75013/s-0-/st-0-/b-0-/page-1/" itemprop="item">
        <span itemprop="name">Achat Appartement PARIS (75013)</span>
      </a>
      <meta itemprop="position" content="4">
   </li>
    
  </ol>
</div>



              <div class="outils_top_right">
                
    
    	<a class="btnRetourPage fR"></a>
    
    
    
    <div class="reset"></div>

              </div>

              
	<div class="reset"></div>
	<h1 class="h1_page">Appartement F1 &agrave; vendre - 1 pi&egrave;ce - 15 m2 - PARIS - 75013 - ILE-DE-FRANCE</h1>


              

              



              
<div class="fondAnnonce">
  






	
	
        <div id="focusAnnonceV2">
          <div class="displayNone">
            
            <div id="popupReseauxSociauxAG">
                <script>
                    $("#popupReseauxSociauxAG").ready(function(){
                        $('head').append( $('<link rel="stylesheet" type="text/css" />').attr('href', '/theme/generic/js/lib/rrssb-master-v2/css/rrssb.css') );
                        $.getScript("/theme/generic/js/lib/rrssb-master-v2/js/rrssb.min.js");
                    });
                </script>
                <strong class="font20">
                    Partager cette annonce sur :
                </strong>
                <ul class="rrssb-buttons clearfix">
                    <li class="rrssb-facebook">
                        <!-- Replace with your URL. For best results, make sure you page has the proper FB Open Graph tags in header:
                        https://developers.facebook.com/docs/opengraph/howtos/maximizing-distribution-media-content/ -->
                        <a href="https://www.facebook.com/sharer/sharer.php?u=www.century21.fr/trouver_logement/detail/2129159693/" class="popup"
                           onClick="google_tag_event('Partage_Facebook,Share,Partage_Facebook');">
                            <span class="rrssb-icon">
                                <svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" width="28px" height="28px" viewBox="0 0 28 28" enable-background="new 0 0 28 28" xml:space="preserve">
                                    <path d="M27.825,4.783c0-2.427-2.182-4.608-4.608-4.608H4.783c-2.422,0-4.608,2.182-4.608,4.608v18.434
                                        c0,2.427,2.181,4.608,4.608,4.608H14V17.379h-3.379v-4.608H14v-1.795c0-3.089,2.335-5.885,5.192-5.885h3.718v4.608h-3.726
                                        c-0.408,0-0.884,0.492-0.884,1.236v1.836h4.609v4.608h-4.609v10.446h4.916c2.422,0,4.608-2.188,4.608-4.608V4.783z"/>
                                </svg>
                            </span>
                            <span class="rrssb-text">facebook</span>
                        </a>
                    </li>
                    <li class="rrssb-twitter">
                        <!-- Replace href with your Meta and URL information  -->
                        <a href="https://twitter.com/intent/tweet/?text=Annonce:&amp;url=https%3A//www.century21.fr/trouver_logement/detail/2129159693/&amp;hashtags=century21" 						
						
						class="popup"
                           onClick="google_tag_event('Partage_Twitter,Share,Partage_Twitter');">
                            <span class="rrssb-icon">
                                <svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
                                     width="28px" height="28px" viewBox="0 0 28 28" enable-background="new 0 0 28 28" xml:space="preserve">
                                <path d="M24.253,8.756C24.689,17.08,18.297,24.182,9.97,24.62c-3.122,0.162-6.219-0.646-8.861-2.32
                                    c2.703,0.179,5.376-0.648,7.508-2.321c-2.072-0.247-3.818-1.661-4.489-3.638c0.801,0.128,1.62,0.076,2.399-0.155
                                    C4.045,15.72,2.215,13.6,2.115,11.077c0.688,0.275,1.426,0.407,2.168,0.386c-2.135-1.65-2.729-4.621-1.394-6.965
                                    C5.575,7.816,9.54,9.84,13.803,10.071c-0.842-2.739,0.694-5.64,3.434-6.482c2.018-0.623,4.212,0.044,5.546,1.683
                                    c1.186-0.213,2.318-0.662,3.329-1.317c-0.385,1.256-1.247,2.312-2.399,2.942c1.048-0.106,2.069-0.394,3.019-0.851
                                    C26.275,7.229,25.39,8.196,24.253,8.756z"/>
                                </svg>
                           </span>
                            <span class="rrssb-text">twitter</span>
                        </a>
                    </li>   
                    <li class="rrssb-linkedin">
                        <!-- Replace href with your meta and URL information -->
                        <a href="http://www.linkedin.com/shareArticle?mini=true&amp;url=www.century21.fr/trouver_logement/detail/2129159693/" class="popup"
                           onClick="google_tag_event('Partage_Linkedin,Share,Partage_Linkedin');">
                            <span class="rrssb-icon">
                                <svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" width="28px" height="28px" viewBox="0 0 28 28" enable-background="new 0 0 28 28" xml:space="preserve">
                                    <path d="M25.424,15.887v8.447h-4.896v-7.882c0-1.979-0.709-3.331-2.48-3.331c-1.354,0-2.158,0.911-2.514,1.803
                                        c-0.129,0.315-0.162,0.753-0.162,1.194v8.216h-4.899c0,0,0.066-13.349,0-14.731h4.899v2.088c-0.01,0.016-0.023,0.032-0.033,0.048
                                        h0.033V11.69c0.65-1.002,1.812-2.435,4.414-2.435C23.008,9.254,25.424,11.361,25.424,15.887z M5.348,2.501
                                        c-1.676,0-2.772,1.092-2.772,2.539c0,1.421,1.066,2.538,2.717,2.546h0.032c1.709,0,2.771-1.132,2.771-2.546
                                        C8.054,3.593,7.019,2.501,5.343,2.501H5.348z M2.867,24.334h4.897V9.603H2.867V24.334z"/>
                                </svg>
                            </span>
                            <span class="rrssb-text">linkedin</span>
                        </a>
                    </li>
                </ul>
            </div>

            

          </div>
          



	<script type="text/javascript">
    	$(document).ready(function() {
            init_galleriePhotoBien();
			if($(".btn-trans-lang").length){
				show_translate_text();
			}
            
    		$.map(['/imagesBien/202/2947/c21_202_2947_5208_8_364945EE-5511-4684-ACDE-F45231CAE46D.jpg'], function(i) { var image=new Image(); image.src=i; return image; });
    	});

		function show_popup_calculette(){
			var popup = document.getElementById("popup_calculette");
			popup.classList.remove("displayNone");
    		popup.classList.add("show");
		}
		function close_popup_calculette(){
			var popup = document.getElementById("popup_calculette");
    		popup.classList.remove("show");
			popup.classList.add("displayNone");
		}
	</script>

    <section class="tarif">
           <span class="yellow">
            <b>187 000 &euro;</b><span class="condition-prix"></span>
            
            <div class="reset"></div>
            <a class="link_calculette yellow font14" data-fancybox-type="iframe" data-type="custom-url" data-url="https://www.panoranet.com/credit-immobilier/formulaire-mob/immo.php?pagevoulue=calcu&act=cap1&code=SP7BGR&montant_pret=187000&calcul_auto=1" data-width="1100">Estimer votre mensualité</a>
            
        </span>

    
    <ul>
      
      <li>Honoraires charge vendeur</li>
      
    </ul>
    

        <div class="reset"></div>
    </section>
    <div class="reset"></div>
	<!--OPTIONS  + PHOTO -->
	<div class="zone_option_photo">
    	<!--OPTIONS DISPONIBLES-->
		<section class="optionDispo">
			<ul>
								

						
						
						<li class="photo active">
							<a class="btn-panel" data-panel="galeriePIX">
								<i class="fa fa-camera fa-lg"></i>
								1 PHOTO
							</a>
						</li>
						

						
						

						
						
						<li class="localisation">
							<a class="btn-panel" data-panel="zoneMAP">
								<i class="fa fa-map-marker fa-lg"></i>
								POSITION
							</a>
						</li>
						

						
						

						<!--yma start update exclusivité et btn estimation-->
						
						

							<li class="exclu yma-exclu">
								<i class="fa fa-diamond" aria-hidden="true"></i>
								<span class="ici-content-text">
									
									Mandat Confiance / Exclusivité
								</span>
								
							</li>
						

						
						
								
										
										<!--bloc national-->
										<li class="exclu yma-bloc-combien">
									
										<a class="btn-faire-estimer" title="et vous ? combien vaut votre bien "
										href="/estimation-immobiliere"
										onclick="google_tag_event('bien,Click,demande-estimation');" target="_blank">
											<div class="text-content">et vous ? <span>combien</span> vaut votre bien ?</div>
										</a>
										</li>
										
									
								
						

						<!--end update exclusivité-->
					</ul>
				</section>

            	<!--GALERIE + BARRE DE CONTACT-->
				<div class="zone-galerie-contact">
					<!--GALERIE PHOTO -->
					<div id="galeriePIX" class="panel-detail">
						<div id="formatL">
						
							
								<a class="fancybox" href="/imagesBien/202/2947/c21_202_2947_5208_1_364945EE-5511-4684-ACDE-F45231CAE46D.jpg" title="Appartement F1 &agrave; vendre - 1 pi&egrave;ce - 15 m2 - PARIS - 75013 - ILE-DE-FRANCE">
									<img class="single-img" src="/imagesBien/202/2947/c21_202_2947_5208_8_364945EE-5511-4684-ACDE-F45231CAE46D.jpg" alt="Appartement F1 &agrave; vendre - 1 pi&egrave;ce - 15 m2 - PARIS - 75013 - ILE-DE-FRANCE"/>
								</a>
							
						
						</div>
						<div class="reset"></div>
					</div>

						<!--POUR CSS PRINT -->
						
						<div id="imgPrint" class="displayNone">
							<img src="/imagesBien/202/2947/c21_202_2947_5208_1_364945EE-5511-4684-ACDE-F45231CAE46D.jpg" alt="Appartement F1 &agrave; vendre - 1 pi&egrave;ce - 15 m2 - PARIS - 75013 - ILE-DE-FRANCE"/>
						</div>
						
					<!--FIN GALERIE PHOTO -->
					<div class="reset"></div>

					<!-- CARTE KELQUARTIER -->
					<div id="zoneMAP" class="panel-detail">
						
<div id="mapCanvas" style="width:100%; height: 440px; margin:auto;">

</div>

<div class="reset"></div>


<ul class="cat-map zone-cat">
    
    <div class="glob-cat">
        <li data-cat="cat-agence" class="active title_cat"><span>Agence</span></li>
        <ul id="cat-agence" class="cat-attr">
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-agence.svg" />
                	<a data-layerName="agence" data-rayon="5" class="twimmo actif poi-agence">Agence</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-biens-vendus.svg" />
                	<a data-layerName="biens-vendus" data-rayon="5" class="twimmo inactif poi-biens-vendus">Biens Vendus</a>
                </div>
            </li>
            
        </ul>
	</div>
    
    <div class="glob-cat">
        <li data-cat="cat-transport" class=" title_cat"><span>Transport</span></li>
        <ul id="cat-transport" class="cat-attr">
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-aeroport.svg" />
                	<a data-layerName="aeroport" data-rayon="5" class="twimmo inactif poi-aeroport">Aéroport</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-autolib.svg" />
                	<a data-layerName="autolib" data-rayon="5" class="twimmo inactif poi-autolib">Autolib&#39;</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-bus.svg" />
                	<a data-layerName="bus" data-rayon="5" class="twimmo inactif poi-bus">Bus</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-ferry.svg" />
                	<a data-layerName="ferry" data-rayon="5" class="twimmo inactif poi-ferry">Ferry</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-gare.svg" />
                	<a data-layerName="gare" data-rayon="5" class="twimmo inactif poi-gare">Gare</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-location-de-velo.svg" />
                	<a data-layerName="location-de-velo" data-rayon="5" class="twimmo inactif poi-location-de-velo">Location De Vélo</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-metro.svg" />
                	<a data-layerName="metro" data-rayon="5" class="twimmo inactif poi-metro">Métro</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-parking.svg" />
                	<a data-layerName="parking" data-rayon="5" class="twimmo inactif poi-parking">Parking</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-parking-velo.svg" />
                	<a data-layerName="parking-velo" data-rayon="5" class="twimmo inactif poi-parking-velo">Parking Vélo</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-rer.svg" />
                	<a data-layerName="rer" data-rayon="5" class="twimmo inactif poi-rer">Rer</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-taxi.svg" />
                	<a data-layerName="taxi" data-rayon="5" class="twimmo inactif poi-taxi">Taxi</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-station-service.svg" />
                	<a data-layerName="station-service" data-rayon="5" class="twimmo inactif poi-station-service">Station Serice</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-tramway.svg" />
                	<a data-layerName="tramway" data-rayon="5" class="twimmo inactif poi-tramway">Tramway</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-velib.svg" />
                	<a data-layerName="velib" data-rayon="5" class="twimmo inactif poi-velib">Vélib&#39;</a>
                </div>
            </li>
            
        </ul>
	</div>
    
    <div class="glob-cat">
        <li data-cat="cat-education-enfance" class=" title_cat"><span>Éducation &amp; Enfance</span></li>
        <ul id="cat-education-enfance" class="cat-attr">
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-creche.svg" />
                	<a data-layerName="creche" data-rayon="5" class="twimmo inactif poi-creche">Crèche</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-ludotheque.svg" />
                	<a data-layerName="ludotheque" data-rayon="5" class="twimmo inactif poi-ludotheque">Ludothèque</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-ecole-maternelle.svg" />
                	<a data-layerName="ecole-maternelle" data-rayon="5" class="twimmo inactif poi-ecole-maternelle">École Maternelle</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-ecole-primaire.svg" />
                	<a data-layerName="ecole-primaire" data-rayon="5" class="twimmo inactif poi-ecole-primaire">École Primaire</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-college.svg" />
                	<a data-layerName="college" data-rayon="5" class="twimmo inactif poi-college">Collège</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-lycee.svg" />
                	<a data-layerName="lycee" data-rayon="5" class="twimmo inactif poi-lycee">Lycée</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-enseignement-superieur.svg" />
                	<a data-layerName="enseignement-superieur" data-rayon="5" class="twimmo inactif poi-enseignement-superieur">Enseignement Supérieur</a>
                </div>
            </li>
            
        </ul>
	</div>
    
    <div class="glob-cat">
        <li data-cat="cat-commerce-service" class=" title_cat"><span>Commerce &amp; Service</span></li>
        <ul id="cat-commerce-service" class="cat-attr">
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-banque.svg" />
                	<a data-layerName="banque" data-rayon="5" class="twimmo inactif poi-banque">Banque</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-bar.svg" />
                	<a data-layerName="bar" data-rayon="5" class="twimmo inactif poi-bar">Bar</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-boucherie.svg" />
                	<a data-layerName="boucherie" data-rayon="5" class="twimmo inactif poi-boucherie">Boucherie</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-boulangerie.svg" />
                	<a data-layerName="boulangerie" data-rayon="5" class="twimmo inactif poi-boulangerie">Boulangerie</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-poste.svg" />
                	<a data-layerName="poste" data-rayon="5" class="twimmo inactif poi-poste">Bureau De Poste</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-marche-de-quartier.svg" />
                	<a data-layerName="marche-de-quartier" data-rayon="5" class="twimmo inactif poi-marche-de-quartier">Marché De Quartier</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-presse-et-tabac.svg" />
                	<a data-layerName="presse-et-tabac" data-rayon="5" class="twimmo inactif poi-presse-et-tabac">Presse &amp; Tabac</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-restaurant.svg" />
                	<a data-layerName="restaurant" data-rayon="5" class="twimmo inactif poi-restaurant">Restaurant</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-superette.svg" />
                	<a data-layerName="superette" data-rayon="5" class="twimmo inactif poi-superette">Supérette</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-supermarche-et-hypermarche.svg" />
                	<a data-layerName="supermarche-et-hypermarche" data-rayon="5" class="twimmo inactif poi-supermarche-et-hypermarche">Supermarché Et Hypermarché</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-centre-commercial.svg" />
                	<a data-layerName="centre-commercial" data-rayon="5" class="twimmo inactif poi-centre-commercial">Centre Commercial</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-hotel.svg" />
                	<a data-layerName="hotel" data-rayon="5" class="twimmo inactif poi-hotel">Hôtel</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-residence-de-tourisme-village-etpparc.svg" />
                	<a data-layerName="residence-de-tourisme-village-et-parc" data-rayon="5" class="twimmo inactif poi-residence-de-tourisme-village-et-parc">Résidence De Tourisme, Village Et Parc</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-camping.svg" />
                	<a data-layerName="camping" data-rayon="5" class="twimmo inactif poi-camping">Camping</a>
                </div>
            </li>
            
        </ul>
	</div>
    
    <div class="glob-cat">
        <li data-cat="cat-loisir-sports" class=" title_cat"><span>Loisir &amp; Sports</span></li>
        <ul id="cat-loisir-sports" class="cat-attr">
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-cinemas.svg" />
                	<a data-layerName="cinemas" data-rayon="5" class="twimmo inactif poi-cinemas">Cinémas</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-parc-jardin-et-square.svg" />
                	<a data-layerName="parc-jardin-et-square" data-rayon="5" class="twimmo inactif poi-parc-jardin-et-square">Parc, Jardin Et Square</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-salle-de-musculation-fitness.svg" />
                	<a data-layerName="salle-de-musculation-fitness" data-rayon="5" class="twimmo inactif poi-salle-de-musculation-fitness">Salle De Musculation/Fitness </a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-terrain-et-salle-de-sport.svg" />
                	<a data-layerName="terrain-et-salle-de-sport" data-rayon="5" class="twimmo inactif poi-terrain-et-salle-de-sport">Terrain Et Salle De Sport</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-billard-bowling-paintball.svg" />
                	<a data-layerName="billard-bowling-paintball" data-rayon="5" class="twimmo inactif poi-billard-bowling-paintball">Billard, Bowling &amp; Paintball</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-equitation.svg" />
                	<a data-layerName="equitation" data-rayon="5" class="twimmo inactif poi-equitation">Équitation</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-escalade.svg" />
                	<a data-layerName="escalade" data-rayon="5" class="twimmo inactif poi-escalade">Escalade</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-natation-sports-nautiques.svg" />
                	<a data-layerName="natation-sports-nautiques" data-rayon="5" class="twimmo inactif poi-natation-sports-nautiques">Natation, Sports Nautiques</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-peche.svg" />
                	<a data-layerName="peche" data-rayon="5" class="twimmo inactif poi-peche">Pêche</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-randonnee.svg" />
                	<a data-layerName="randonnee" data-rayon="5" class="twimmo inactif poi-randonnee">Randonnée</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-sport-mecanique.svg" />
                	<a data-layerName="sport-mecanique" data-rayon="5" class="twimmo inactif poi-sport-mecanique">Sport Mécanique</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-tennis.svg" />
                	<a data-layerName="tennis" data-rayon="5" class="twimmo inactif poi-tennis">Tennis</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-vtt.svg" />
                	<a data-layerName="vtt" data-rayon="5" class="twimmo inactif poi-vtt">Vtt</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-casino.svg" />
                	<a data-layerName="casino" data-rayon="5" class="twimmo inactif poi-casino">Casino</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-golf.svg" />
                	<a data-layerName="golf" data-rayon="5" class="twimmo inactif poi-golf">Golf</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-sport-aerien.svg" />
                	<a data-layerName="sport-aerien" data-rayon="5" class="twimmo inactif poi-sport-aerien">Sport Aérien</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-ski.svg" />
                	<a data-layerName="ski" data-rayon="5" class="twimmo inactif poi-ski">Ski</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-base-de-loisirs.svg" />
                	<a data-layerName="base-de-loisirs" data-rayon="5" class="twimmo inactif poi-base-de-loisirs">Base De Loisirs</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-aquarium.svg" />
                	<a data-layerName="aquarium" data-rayon="5" class="twimmo inactif poi-aquarium">Aquarium</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-parc-dattraction.svg" />
                	<a data-layerName="parc-dattraction" data-rayon="5" class="twimmo inactif poi-parc-dattraction">Parc D&#39;Attraction</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-zoo.svg" />
                	<a data-layerName="zoo" data-rayon="5" class="twimmo inactif poi-zoo">Zoo</a>
                </div>
            </li>
            
        </ul>
	</div>
    
    <div class="glob-cat">
        <li data-cat="cat-culture-tourisme" class=" title_cat"><span>Culture &amp; Tourisme</span></li>
        <ul id="cat-culture-tourisme" class="cat-attr">
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-monument-historique.svg" />
                	<a data-layerName="monument-historique" data-rayon="5" class="twimmo inactif poi-monument-historique">Monument Historique</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-theatre.svg" />
                	<a data-layerName="theatre" data-rayon="5" class="twimmo inactif poi-theatre">Théâtre</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-musee.svg" />
                	<a data-layerName="musee" data-rayon="5" class="twimmo inactif poi-musee">Musée</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-festival.svg" />
                	<a data-layerName="festival" data-rayon="5" class="twimmo inactif poi-festival">Festival</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-agglomeration.svg" />
                	<a data-layerName="agglomeration" data-rayon="5" class="twimmo inactif poi-agglomeration">Agglomération</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-centre-ville.svg" />
                	<a data-layerName="centre-ville" data-rayon="5" class="twimmo inactif poi-centre-ville">Centre Ville</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-ville.svg" />
                	<a data-layerName="ville" data-rayon="5" class="twimmo inactif poi-ville">Ville</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-bibliotheque.svg" />
                	<a data-layerName="bibliotheque" data-rayon="5" class="twimmo inactif poi-bibliotheque">Bibliothèque</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-incontournable.svg" />
                	<a data-layerName="incontournable" data-rayon="5" class="twimmo inactif poi-incontournable">Incontournable</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-plage.svg" />
                	<a data-layerName="plage" data-rayon="5" class="twimmo inactif poi-plage">Plage</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-baignade-en-lac-et-riviere.svg" />
                	<a data-layerName="baignade-en-lac-et-riviere" data-rayon="5" class="twimmo inactif poi-baignade-en-lac-et-riviere">Baignade En Lac Et Rivière</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-mer.svg" />
                	<a data-layerName="mer" data-rayon="5" class="twimmo inactif poi-mer">Mer</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-montagne.svg" />
                	<a data-layerName="montagne" data-rayon="5" class="twimmo inactif poi-montagne">Montagne</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-campagne.svg" />
                	<a data-layerName="campagne" data-rayon="5" class="twimmo inactif poi-campagne">Campagne</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-lac.svg" />
                	<a data-layerName="lac" data-rayon="5" class="twimmo inactif poi-lac">Lac</a>
                </div>
            </li>
            
        </ul>
	</div>
    
    <div class="glob-cat">
        <li data-cat="cat-sante-prevention" class=" title_cat"><span>Santé &amp; Prévention</span></li>
        <ul id="cat-sante-prevention" class="cat-attr">
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-hopital.svg" />
                	<a data-layerName="hopital" data-rayon="5" class="twimmo inactif poi-hopital">Hôpital</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-medecine-generaliste.svg" />
                	<a data-layerName="medecine-generaliste" data-rayon="5" class="twimmo inactif poi-medecine-generaliste">Médecine Généraliste</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-medecine-specialiste.svg" />
                	<a data-layerName="medecine-specialiste" data-rayon="5" class="twimmo inactif poi-medecine-specialiste">Médecine Spécialiste</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-pharmacie.svg" />
                	<a data-layerName="pharmacie" data-rayon="5" class="twimmo inactif poi-pharmacie">Pharmacie</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-antennes-relais.svg" />
                	<a data-layerName="antennes-relais" data-rayon="5" class="twimmo inactif poi-antennes-relais">Antennes Relais</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-etablissement-polluant.svg" />
                	<a data-layerName="etablissement-polluant" data-rayon="5" class="twimmo inactif poi-etablissement-polluant">Établissement Polluant</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-site-polue.svg" />
                	<a data-layerName="site-polue" data-rayon="5" class="twimmo inactif poi-site-polue">Site Polué</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-site-potentiellement-polue.svg" />
                	<a data-layerName="site-potentiellement-polue" data-rayon="5" class="twimmo inactif poi-site-potentiellement-polue">Site Potentiellement Polué</a>
                </div>
            </li>
            
        </ul>
	</div>
    
    <div class="glob-cat">
        <li data-cat="cat-service-public" class=" title_cat"><span>Service Public</span></li>
        <ul id="cat-service-public" class="cat-attr">
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-caf.svg" />
                	<a data-layerName="caf" data-rayon="5" class="twimmo inactif poi-caf">Caf</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-cpam.svg" />
                	<a data-layerName="cpam" data-rayon="5" class="twimmo inactif poi-cpam">Cpam</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-gendarmerie.svg" />
                	<a data-layerName="gendarmerie" data-rayon="5" class="twimmo inactif poi-gendarmerie">Gendarmerie</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-greffe.svg" />
                	<a data-layerName="greffe" data-rayon="5" class="twimmo inactif poi-greffe">Greffe</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-mairie.svg" />
                	<a data-layerName="mairie" data-rayon="5" class="twimmo inactif poi-mairie">Mairie</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-pole-emploi.svg" />
                	<a data-layerName="pole-emploi" data-rayon="5" class="twimmo inactif poi-pole-emploi">Pôle Emploi</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-police.svg" />
                	<a data-layerName="police" data-rayon="5" class="twimmo inactif poi-police">Police</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-prefecture.svg" />
                	<a data-layerName="prefecture" data-rayon="5" class="twimmo inactif poi-prefecture">Préfecture</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-service-des-impots-des-entreprises.svg" />
                	<a data-layerName="service-des-impots-des-entreprises" data-rayon="5" class="twimmo inactif poi-service-des-impots-des-entreprises">Service Des Impôts Des Entreprises</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-service-des-impots-des-particulier.svg" />
                	<a data-layerName="service-des-impots-des-particulier" data-rayon="5" class="twimmo inactif poi-service-des-impots-des-particulier">Service Des Impôts Des Particuliers</a>
                </div>
            </li>
            
        </ul>
	</div>
    
</ul>
<div class="reset"></div>


<div class="zone-cat">
	<form>
        
        <ul id="cat-agence">
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-agence.svg" />
                	<a data-layerName="agence" data-rayon="5" class="twimmo actif poi-agence">Agence</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-biens-vendus.svg" />
                	<a data-layerName="biens-vendus" data-rayon="5" class="twimmo inactif poi-biens-vendus">Biens Vendus</a>
                </div>
            </li>
            
        </ul>
        
        <ul id="cat-transport">
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-aeroport.svg" />
                	<a data-layerName="aeroport" data-rayon="5" class="twimmo inactif poi-aeroport">Aéroport</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-autolib.svg" />
                	<a data-layerName="autolib" data-rayon="5" class="twimmo inactif poi-autolib">Autolib&#39;</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-bus.svg" />
                	<a data-layerName="bus" data-rayon="5" class="twimmo inactif poi-bus">Bus</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-ferry.svg" />
                	<a data-layerName="ferry" data-rayon="5" class="twimmo inactif poi-ferry">Ferry</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-gare.svg" />
                	<a data-layerName="gare" data-rayon="5" class="twimmo inactif poi-gare">Gare</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-location-de-velo.svg" />
                	<a data-layerName="location-de-velo" data-rayon="5" class="twimmo inactif poi-location-de-velo">Location De Vélo</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-metro.svg" />
                	<a data-layerName="metro" data-rayon="5" class="twimmo inactif poi-metro">Métro</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-parking.svg" />
                	<a data-layerName="parking" data-rayon="5" class="twimmo inactif poi-parking">Parking</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-parking-velo.svg" />
                	<a data-layerName="parking-velo" data-rayon="5" class="twimmo inactif poi-parking-velo">Parking Vélo</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-rer.svg" />
                	<a data-layerName="rer" data-rayon="5" class="twimmo inactif poi-rer">Rer</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-taxi.svg" />
                	<a data-layerName="taxi" data-rayon="5" class="twimmo inactif poi-taxi">Taxi</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-station-service.svg" />
                	<a data-layerName="station-service" data-rayon="5" class="twimmo inactif poi-station-service">Station Serice</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-tramway.svg" />
                	<a data-layerName="tramway" data-rayon="5" class="twimmo inactif poi-tramway">Tramway</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-velib.svg" />
                	<a data-layerName="velib" data-rayon="5" class="twimmo inactif poi-velib">Vélib&#39;</a>
                </div>
            </li>
            
        </ul>
        
        <ul id="cat-education-enfance">
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-creche.svg" />
                	<a data-layerName="creche" data-rayon="5" class="twimmo inactif poi-creche">Crèche</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-ludotheque.svg" />
                	<a data-layerName="ludotheque" data-rayon="5" class="twimmo inactif poi-ludotheque">Ludothèque</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-ecole-maternelle.svg" />
                	<a data-layerName="ecole-maternelle" data-rayon="5" class="twimmo inactif poi-ecole-maternelle">École Maternelle</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-ecole-primaire.svg" />
                	<a data-layerName="ecole-primaire" data-rayon="5" class="twimmo inactif poi-ecole-primaire">École Primaire</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-college.svg" />
                	<a data-layerName="college" data-rayon="5" class="twimmo inactif poi-college">Collège</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-lycee.svg" />
                	<a data-layerName="lycee" data-rayon="5" class="twimmo inactif poi-lycee">Lycée</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-enseignement-superieur.svg" />
                	<a data-layerName="enseignement-superieur" data-rayon="5" class="twimmo inactif poi-enseignement-superieur">Enseignement Supérieur</a>
                </div>
            </li>
            
        </ul>
        
        <ul id="cat-commerce-service">
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-banque.svg" />
                	<a data-layerName="banque" data-rayon="5" class="twimmo inactif poi-banque">Banque</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-bar.svg" />
                	<a data-layerName="bar" data-rayon="5" class="twimmo inactif poi-bar">Bar</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-boucherie.svg" />
                	<a data-layerName="boucherie" data-rayon="5" class="twimmo inactif poi-boucherie">Boucherie</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-boulangerie.svg" />
                	<a data-layerName="boulangerie" data-rayon="5" class="twimmo inactif poi-boulangerie">Boulangerie</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-poste.svg" />
                	<a data-layerName="poste" data-rayon="5" class="twimmo inactif poi-poste">Bureau De Poste</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-marche-de-quartier.svg" />
                	<a data-layerName="marche-de-quartier" data-rayon="5" class="twimmo inactif poi-marche-de-quartier">Marché De Quartier</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-presse-et-tabac.svg" />
                	<a data-layerName="presse-et-tabac" data-rayon="5" class="twimmo inactif poi-presse-et-tabac">Presse &amp; Tabac</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-restaurant.svg" />
                	<a data-layerName="restaurant" data-rayon="5" class="twimmo inactif poi-restaurant">Restaurant</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-superette.svg" />
                	<a data-layerName="superette" data-rayon="5" class="twimmo inactif poi-superette">Supérette</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-supermarche-et-hypermarche.svg" />
                	<a data-layerName="supermarche-et-hypermarche" data-rayon="5" class="twimmo inactif poi-supermarche-et-hypermarche">Supermarché Et Hypermarché</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-centre-commercial.svg" />
                	<a data-layerName="centre-commercial" data-rayon="5" class="twimmo inactif poi-centre-commercial">Centre Commercial</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-hotel.svg" />
                	<a data-layerName="hotel" data-rayon="5" class="twimmo inactif poi-hotel">Hôtel</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-residence-de-tourisme-village-etpparc.svg" />
                	<a data-layerName="residence-de-tourisme-village-et-parc" data-rayon="5" class="twimmo inactif poi-residence-de-tourisme-village-et-parc">Résidence De Tourisme, Village Et Parc</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-camping.svg" />
                	<a data-layerName="camping" data-rayon="5" class="twimmo inactif poi-camping">Camping</a>
                </div>
            </li>
            
        </ul>
        
        <ul id="cat-loisir-sports">
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-cinemas.svg" />
                	<a data-layerName="cinemas" data-rayon="5" class="twimmo inactif poi-cinemas">Cinémas</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-parc-jardin-et-square.svg" />
                	<a data-layerName="parc-jardin-et-square" data-rayon="5" class="twimmo inactif poi-parc-jardin-et-square">Parc, Jardin Et Square</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-salle-de-musculation-fitness.svg" />
                	<a data-layerName="salle-de-musculation-fitness" data-rayon="5" class="twimmo inactif poi-salle-de-musculation-fitness">Salle De Musculation/Fitness </a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-terrain-et-salle-de-sport.svg" />
                	<a data-layerName="terrain-et-salle-de-sport" data-rayon="5" class="twimmo inactif poi-terrain-et-salle-de-sport">Terrain Et Salle De Sport</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-billard-bowling-paintball.svg" />
                	<a data-layerName="billard-bowling-paintball" data-rayon="5" class="twimmo inactif poi-billard-bowling-paintball">Billard, Bowling &amp; Paintball</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-equitation.svg" />
                	<a data-layerName="equitation" data-rayon="5" class="twimmo inactif poi-equitation">Équitation</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-escalade.svg" />
                	<a data-layerName="escalade" data-rayon="5" class="twimmo inactif poi-escalade">Escalade</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-natation-sports-nautiques.svg" />
                	<a data-layerName="natation-sports-nautiques" data-rayon="5" class="twimmo inactif poi-natation-sports-nautiques">Natation, Sports Nautiques</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-peche.svg" />
                	<a data-layerName="peche" data-rayon="5" class="twimmo inactif poi-peche">Pêche</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-randonnee.svg" />
                	<a data-layerName="randonnee" data-rayon="5" class="twimmo inactif poi-randonnee">Randonnée</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-sport-mecanique.svg" />
                	<a data-layerName="sport-mecanique" data-rayon="5" class="twimmo inactif poi-sport-mecanique">Sport Mécanique</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-tennis.svg" />
                	<a data-layerName="tennis" data-rayon="5" class="twimmo inactif poi-tennis">Tennis</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-vtt.svg" />
                	<a data-layerName="vtt" data-rayon="5" class="twimmo inactif poi-vtt">Vtt</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-casino.svg" />
                	<a data-layerName="casino" data-rayon="5" class="twimmo inactif poi-casino">Casino</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-golf.svg" />
                	<a data-layerName="golf" data-rayon="5" class="twimmo inactif poi-golf">Golf</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-sport-aerien.svg" />
                	<a data-layerName="sport-aerien" data-rayon="5" class="twimmo inactif poi-sport-aerien">Sport Aérien</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-ski.svg" />
                	<a data-layerName="ski" data-rayon="5" class="twimmo inactif poi-ski">Ski</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-base-de-loisirs.svg" />
                	<a data-layerName="base-de-loisirs" data-rayon="5" class="twimmo inactif poi-base-de-loisirs">Base De Loisirs</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-aquarium.svg" />
                	<a data-layerName="aquarium" data-rayon="5" class="twimmo inactif poi-aquarium">Aquarium</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-parc-dattraction.svg" />
                	<a data-layerName="parc-dattraction" data-rayon="5" class="twimmo inactif poi-parc-dattraction">Parc D&#39;Attraction</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-zoo.svg" />
                	<a data-layerName="zoo" data-rayon="5" class="twimmo inactif poi-zoo">Zoo</a>
                </div>
            </li>
            
        </ul>
        
        <ul id="cat-culture-tourisme">
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-monument-historique.svg" />
                	<a data-layerName="monument-historique" data-rayon="5" class="twimmo inactif poi-monument-historique">Monument Historique</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-theatre.svg" />
                	<a data-layerName="theatre" data-rayon="5" class="twimmo inactif poi-theatre">Théâtre</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-musee.svg" />
                	<a data-layerName="musee" data-rayon="5" class="twimmo inactif poi-musee">Musée</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-festival.svg" />
                	<a data-layerName="festival" data-rayon="5" class="twimmo inactif poi-festival">Festival</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-agglomeration.svg" />
                	<a data-layerName="agglomeration" data-rayon="5" class="twimmo inactif poi-agglomeration">Agglomération</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-centre-ville.svg" />
                	<a data-layerName="centre-ville" data-rayon="5" class="twimmo inactif poi-centre-ville">Centre Ville</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-ville.svg" />
                	<a data-layerName="ville" data-rayon="5" class="twimmo inactif poi-ville">Ville</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-bibliotheque.svg" />
                	<a data-layerName="bibliotheque" data-rayon="5" class="twimmo inactif poi-bibliotheque">Bibliothèque</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-incontournable.svg" />
                	<a data-layerName="incontournable" data-rayon="5" class="twimmo inactif poi-incontournable">Incontournable</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-plage.svg" />
                	<a data-layerName="plage" data-rayon="5" class="twimmo inactif poi-plage">Plage</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-baignade-en-lac-et-riviere.svg" />
                	<a data-layerName="baignade-en-lac-et-riviere" data-rayon="5" class="twimmo inactif poi-baignade-en-lac-et-riviere">Baignade En Lac Et Rivière</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-mer.svg" />
                	<a data-layerName="mer" data-rayon="5" class="twimmo inactif poi-mer">Mer</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-montagne.svg" />
                	<a data-layerName="montagne" data-rayon="5" class="twimmo inactif poi-montagne">Montagne</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-campagne.svg" />
                	<a data-layerName="campagne" data-rayon="5" class="twimmo inactif poi-campagne">Campagne</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-lac.svg" />
                	<a data-layerName="lac" data-rayon="5" class="twimmo inactif poi-lac">Lac</a>
                </div>
            </li>
            
        </ul>
        
        <ul id="cat-sante-prevention">
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-hopital.svg" />
                	<a data-layerName="hopital" data-rayon="5" class="twimmo inactif poi-hopital">Hôpital</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-medecine-generaliste.svg" />
                	<a data-layerName="medecine-generaliste" data-rayon="5" class="twimmo inactif poi-medecine-generaliste">Médecine Généraliste</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-medecine-specialiste.svg" />
                	<a data-layerName="medecine-specialiste" data-rayon="5" class="twimmo inactif poi-medecine-specialiste">Médecine Spécialiste</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-pharmacie.svg" />
                	<a data-layerName="pharmacie" data-rayon="5" class="twimmo inactif poi-pharmacie">Pharmacie</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-antennes-relais.svg" />
                	<a data-layerName="antennes-relais" data-rayon="5" class="twimmo inactif poi-antennes-relais">Antennes Relais</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-etablissement-polluant.svg" />
                	<a data-layerName="etablissement-polluant" data-rayon="5" class="twimmo inactif poi-etablissement-polluant">Établissement Polluant</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-site-polue.svg" />
                	<a data-layerName="site-polue" data-rayon="5" class="twimmo inactif poi-site-polue">Site Polué</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-site-potentiellement-polue.svg" />
                	<a data-layerName="site-potentiellement-polue" data-rayon="5" class="twimmo inactif poi-site-potentiellement-polue">Site Potentiellement Polué</a>
                </div>
            </li>
            
        </ul>
        
        <ul id="cat-service-public">
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-caf.svg" />
                	<a data-layerName="caf" data-rayon="5" class="twimmo inactif poi-caf">Caf</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-cpam.svg" />
                	<a data-layerName="cpam" data-rayon="5" class="twimmo inactif poi-cpam">Cpam</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-gendarmerie.svg" />
                	<a data-layerName="gendarmerie" data-rayon="5" class="twimmo inactif poi-gendarmerie">Gendarmerie</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-greffe.svg" />
                	<a data-layerName="greffe" data-rayon="5" class="twimmo inactif poi-greffe">Greffe</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-mairie.svg" />
                	<a data-layerName="mairie" data-rayon="5" class="twimmo inactif poi-mairie">Mairie</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-pole-emploi.svg" />
                	<a data-layerName="pole-emploi" data-rayon="5" class="twimmo inactif poi-pole-emploi">Pôle Emploi</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-police.svg" />
                	<a data-layerName="police" data-rayon="5" class="twimmo inactif poi-police">Police</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-prefecture.svg" />
                	<a data-layerName="prefecture" data-rayon="5" class="twimmo inactif poi-prefecture">Préfecture</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-service-des-impots-des-entreprises.svg" />
                	<a data-layerName="service-des-impots-des-entreprises" data-rayon="5" class="twimmo inactif poi-service-des-impots-des-entreprises">Service Des Impôts Des Entreprises</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-service-des-impots-des-particulier.svg" />
                	<a data-layerName="service-des-impots-des-particulier" data-rayon="5" class="twimmo inactif poi-service-des-impots-des-particulier">Service Des Impôts Des Particuliers</a>
                </div>
            </li>
            
        </ul>
        
    </form>
</div>

					</div>
					<!-- FIN CARTE KELQUARTIER -->
					<div class="reset"></div>
					<!--BARRE DE CONTACT -->
					<span class="barre-NoFixe"></span>
					<section class="barre-contact">
						<div class="content-barre-contact">
							<span class="infos_fixe margR10">
								<p class="white bold font14 margB5 center">Réf: 5208</p>
								<p class="yellow bold font18 center">187 000 &euro; </p>
							</span>
							<ul class="lireMoreUNDER_ANNONCE version-orange ">
				
							  <li>
				
								<a class="btn-contact contact-tel" data-tel="01 85 34 19 69 " onclick="google_tag_event('Voir Telephone,Click,Voir Telephone_Acheteur');">
									Voir le téléphone
								</a>
				
						</li>
				
				
							  <li style="display: block; margin: 0 auto !important;">
								<a class="afficheContactAg btn-contact center-block" title="Envoyer un message à l'agence CENTURY 21 Arago - Les Gobelins">Envoyer un message</a>
							  </li>
				
							  
							  
								  
									  <li>
										<a class="afficheVotreAg btn-contact" onclick="google_tag_event('bien,Affiche-votreagence,2947');" title="L'agence CENTURY 21 Arago - Les Gobelins est à votre disposition">
											Votre agence
										</a>
									  </li>
								   
							
							</ul>
							<div class="reset"></div>
						</div>
					</section>
				</div>
		</div>

            <div class="reset"></div>

            <section class="precision">
                <span class="bold font20 margB10 inlineblock">Description</span>
                <span class="yellow font20 margL20 bold">Réf: 5208</span>
				
				
				<span class="fR">
                	
                        <!-- to delete si c'est ok
							 <a class="yellow bold font20"
                          href="//www.century21.fr/outils/vendre/?utm_source=century21&utm_medium=btn-fiche-bien&utm_content=v1&utm_campaign=btn-fiche-bien-estimation"
                          onclick="google_tag_event('bien,Click,demande-estimation');">
                              Faire estimer mon bien
						  </a>
						  -->
                    
                    <div class="reset"></div>
				</span>
				
			
                <div class="reset"></div>

                <span class="block margB5">
                        
                                
                        
                </span>

                
                <div class="desc-fr">
                    <p class="font16 LH19 justify">
                      GOBELINS<br />Nous vous proposons en exclusivité ce studio d'environ 15,5m² situé au 4ème étage d'une copropriété calme, bien entretenue et sécurisée en plein coeur du quartier des Gobelins, plus précisément Villa des Gobelins.<br />Idéalement agencé, il se compose d'une entrée, d'une salle d'eau avec WC, d'un séjour lumineux, d'une cuisine indépendante également très claire.<br />Vous serez séduit par sa clarté, son agencement, la copropriété et son quartier.<br />Situé proche de toute commodité.<br />Bien rare sur le marché !
                    </p>
				</div>
                


                
                <div class="desc-uk displayNone">
                	<p class="font16 LH19 justify">
                        
                                
                        
                    </p>
                </div>
                <div class="reset"></div>
                
                
            </section>
        </div>
	


</div>
<div class="reset"></div>

<script>	
  google_tag_event('bien,page_detail_ouverte,202_2947_5208');	
  google_tag_event('bien,page_detail_achat_ouverte,appartement');
</script>




<div id="moreFarWRAP">
  <div id="moreFar">
    <span id="ancreMENU"></span>
    <a id="hauteurScroll" class="hauteurFixe" rel="680"></a>

    <section id="ficheDetail" class="slide slide1">

		<h2>Fiche détaillée du bien immobilier</h2>
      	<div class="zone-contenu-slide">
		  
		  
		  
		  

<div class="col-gauche-slide">


<div class="box">
  <span class="fiche-subtitle">Vue globale</span>
  
<ul>
  
  
  <li><span class="titreDetail">Type d'appartement</span> : F1</li>
  
  
  <li><span class="titreDetail">Surface totale</span> : 15,5 m<sup>2</sup></li>
  
  
  <li><span class="titreDetail">Surface habitable</span> : 15,5 m<sup>2</sup></li>
  
  
  

  
  <li><span class="titreDetail">
      <div class="posL">
        <div id="descDetailPiece" class="descriptionLongue">
          <a  id="fermerDescLongue" class="pictoBtnFermer floatR"></a>
          <ul>
            
            <li>Séjour</li>
            
            <li>Salle d&#39;eau</li>
            
            <li>WC</li>
            
          </ul>
        </div>
      </div>Nombre de pièces :</span>1 <a class="lienPlusDetail" id="lienDetailPiece">[Voir en détail]</a>
  </li>
  

  
  
  
  <li><span class="titreDetail">Type de construction</span> : Traditionnelle</li>
  
  
  <li><span class="titreDetail">Année construction</span> : 1920</li>
  
  

</ul>

</div>



<div class="box">
    <span class="fiche-subtitle">Equipement </span>
  <ul>
    
    <li><span class="titreDetail">Isolation</span> : Simple vitrage</li>
    
    <li><span class="titreDetail">Chauffage</span> : Collectif</li>
    
    <li><span class="titreDetail">Toiture</span> : Zinc</li>
    
    <li><span class="titreDetail">Digicode</span></li>
    
  </ul>
</div>



<div class="box">
  <span class="fiche-subtitle">Les Plus</span>
  <ul>
    
    
    
    
    
    
    <li class="picto vue" title="Dégagée">Dégagée</li>
    
    
  </ul>
</div>

<div class="box">

<span class="fiche-subtitle">&Agrave; savoir</span>
  <ul>
      
    
    
    <li><span class="titreDetail">Travaux récents</span> : Ravalement de la cour extérieure il y a 1 an ou 2.</li>
    
    <li><span class="titreDetail">Travaux à prévoir</span> : RAS</li>
    
    
    
    
     

  </ul>

  

  
</div>
<div class="box statistiques">
  <span class="fiche-subtitle gtest">Les performances énergétiques</span>
  
      
              <div class="fL margR20"><img src="/img/dpe_indisponible.jpg"/></div>
      
      
  


</div>

<!--DPE POUR PRINT-->

<div id="DPE_PRINT">
<span>Les performances énergétiques</span>
<br />

    
    

</div>

<div class="box">
	<h3 class="margT20">Tout savoir sur les diagnostics</h3>
      <ul class="fL">
        <li class="arrow">
          <h4><a href="/edito/article/le-diagnostic-de-performance-energetique-dpe-visible-et/">Le Diagnostic de Performance Energétique
    </a></h4></li>
        <li class="arrow">
          <h4><a href="/edito/article/diagnostics-obligations-liees-a-la-transaction/">Diagnostics liés à la transaction</a></h4></li>
        <li class="arrow">
          <h4><a href="/edito/article/location-recapitulation-des-diagnostics-et-autres-obligati/">Diagnostics liés à la location
    </a></h4></li>
        <li class="arrow"><h4><a href="/edito/article/votre-installation-electrique-est-elle-sure/"> Installation électrique
    </a></h4></li>
      </ul>
</div>



<div class="box statistiques" id="Copropriete">

	<span class="fiche-subtitle">Copropriété</span>
    <ul class="W250 fL margR5">
	
		<li><span class="titreDetail">Nombre de Lots</span> : 34</li>
	
	
		<li><span class="titreDetail">Charges courantes par an</span> : 1060,0  €</li>
	
	
    <li><span class="titreDetail">Pas de procédure en cours</span></li></ul>
	

</div><div class="reset"></div>



  
        
	<a href="/imagesBien/202/2947/v5/bareme_honoraires.pdf" target="_blank" class="ffDW underline black">
	  Pour consulter les barèmes d'honoraires de l'agence, cliquez ici
	</a>
        
  
</div>


<!--COLONNE DROITE-->
<div class="col-droite-slide">
    
    
    <!--CALCULETTE-->
	  
	  <div id="calculetteCREDIT">	 	
		
		<br>
    <iframe class="borderBox" frameborder="0" src="https://www.panoranet.com/credit-immobilier/formulaire-mob/immo.php?pagevoulue=calcu&act=cap1&code=SP7BGR&montant_pret=187000&calcul_auto=1" width="100%" height="1240px"></iframe>
			  
	  </div>    
	

    
    

    <!--SITE PROPRIO, IMAGINE21, TOUT SAVOIR SUR DPE-->
    <div class="box displayNone">      
      
      
    </div>
</div>
   
		</div>
    </section>
    
    
    <section class="margT10">
    	<!--code fonctionel pour les deux sites commerce et sites

<div id="bannerOpEstim" title="test bannieres">
	<ul>
		<li>Vous voulez vendre ?</li>
		
		<li>
			Combien vaut votre bien ?<br>
			Combien d'acheteurs sont intéressés ?
		</li>
						
	</ul>
	
	<a href="/estimation-immobiliere" onClick="google_tag_event('Banniere Detail,Click,Evaluateur');">Testez ici
		 <i class="fa fa-caret-right" aria-hidden="true"></i></a>
		
</div>

-->



<!-- update code partie test pour ice-->

<a  id="bannerOpEstim" title="Vous voulez vendre ?" 
	href="/estimation-immobiliere" onClick="google_tag_event('Banniere Detail,Click,Evaluateur');">
	<ul>
		<li>Découvrez combien vaut votre bien</li>
		
		<li>
			<div class="zone-defilement-number banner ">
	<ul>
		<li>ENTRE</li>
		<li class="defil-number tranche-1"></li>
		<li>ET</li>
		<li class="defil-number tranche-2"></li>
	</ul>
</div>
<script src="/theme/generic/js/lib/odometer-0.4.6/odometer.min.js"></script>
<script src="/theme/generic/js/c-combien/launch-defil-number.js"></script>
		</li>		
	</ul>

	<div class="cta">Je découvre</div>
</a>
	


		
    </section>    
    
    <section id="annoncesSimilaires" class="slide slide2">
       <h2 class="margB10">Biens approchants</h2>
        
<div class="zoneCarousel carousel-bien-approchants">
  
  
  <div class="prevCarouselLAST navCarousel btnPrec">
  	<i class="fa fa-angle-left fa-5x" aria-hidden="true"></i>
  </div>
  
  <div class="carouselLAST ">
    <ul class="carrousel carrouselXL annoncesSimilaires">      
      
      <li class="annonce">
        

          <div class="contentAnnonce" id="bien_2099826167" data-uid="2099826167">
            <div class="zone-photo-exclu">
                <a href="/trouver_logement/detail/2099826167/" onclick="google_tag_event('bien,clic_sur_listing,202_2451_10652');return go_detail(this);">
                      <div class="price">173 000&euro; <span class="font20"></span></div>
                      
                      <p class="pixM photoAnnonce" onmouseover="popup_annonce('2099826167','202_2451_10652',$(this));return false;">
                        <img width="220" height="146" src="/imagesBien/202/2451/c21_202_2451_10652_9_7F060A6D-1419-44C4-83E0-0B75B70FD1E7.jpg" alt="Vente appartement - PARIS (75020) - 16.4 m² - 1 pi&egrave;ce" />
                      </p>
              </a>
            </div>
              <div class="zone-text-loupe">  
                <a href="/trouver_logement/detail/2099826167/" onclick="google_tag_event('bien,clic_sur_listing,202_2451_10652');return go_detail(this);">
                    <h3>
                      
                      PARIS&nbsp;&nbsp;<span class="font14">75020</span>
                      
                    </h3>
                    <h4 class="detail_vignette">
                      Studio <br />16,35 m&sup2; , 1 pièce
                    </h4>
                <span class="infoZOOM">Voir détail</span>
              </a>
            </div>
          </div>
      </li>
      
      <li class="annonce">
        

          <div class="contentAnnonce" id="bien_2115313343" data-uid="2115313343">
            <div class="zone-photo-exclu">
                <a href="/trouver_logement/detail/2115313343/" onclick="google_tag_event('bien,clic_sur_listing,202_3088_16193');return go_detail(this);">
                      <div class="price">175 000&euro; <span class="font20"></span></div>
                      
                      <span class="infoEXCLU">
                      
                        Mandat Confiance / Exclusivité
                      </span>
                      
                      <p class="pixM photoAnnonce" onmouseover="popup_annonce('2115313343','202_3088_16193',$(this));return false;">
                        <img width="220" height="146" src="/imagesBien/202/3088/c21_202_3088_16193_9_3D9664F3-DBE7-49DA-A86E-8C7C45CDF962.jpg" alt="Vente appartement - PARIS (75014) - 15.3 m² - 1 pi&egrave;ce" />
                      </p>
              </a>
            </div>
              <div class="zone-text-loupe">  
                <a href="/trouver_logement/detail/2115313343/" onclick="google_tag_event('bien,clic_sur_listing,202_3088_16193');return go_detail(this);">
                    <h3>
                      
                      PARIS&nbsp;&nbsp;<span class="font14">75014</span>
                      
                    </h3>
                    <h4 class="detail_vignette">
                      Studio <br />15,35 m&sup2; , 1 pièce
                    </h4>
                <span class="infoZOOM">Voir détail</span>
              </a>
            </div>
          </div>
      </li>
      
      <li class="annonce">
        

          <div class="contentAnnonce" id="bien_2121158492" data-uid="2121158492">
            <div class="zone-photo-exclu">
                <a href="/trouver_logement/detail/2121158492/" onclick="google_tag_event('bien,clic_sur_listing,202_557_43961');return go_detail(this);">
                      <div class="price">200 000&euro; <span class="font20"></span></div>
                      
                      <p class="pixM photoAnnonce" onmouseover="popup_annonce('2121158492','202_557_43961',$(this));return false;">
                        <img width="220" height="146" src="/imagesBien/202/557/c21_202_557_43961_9_5349F51C-9AE9-44D1-AD98-877745426A47.jpg" alt="Vente appartement - PARIS (75012) - 15.0 m² - 1 pi&egrave;ce" />
                      </p>
              </a>
            </div>
              <div class="zone-text-loupe">  
                <a href="/trouver_logement/detail/2121158492/" onclick="google_tag_event('bien,clic_sur_listing,202_557_43961');return go_detail(this);">
                    <h3>
                      
                      PARIS&nbsp;&nbsp;<span class="font14">75012</span>
                      
                    </h3>
                    <h4 class="detail_vignette">
                      Studio <br />15,0 m&sup2; , 1 pièce
                    </h4>
                <span class="infoZOOM">Voir détail</span>
              </a>
            </div>
          </div>
      </li>
      
      <li class="annonce">
        

          <div class="contentAnnonce" id="bien_2113969293" data-uid="2113969293">
            <div class="zone-photo-exclu">
                <a href="/trouver_logement/detail/2113969293/" onclick="google_tag_event('bien,clic_sur_listing,202_467_11635');return go_detail(this);">
                      <div class="price">165 000&euro; <span class="font20"></span></div>
                      
                      <span class="infoEXCLU">
                      
                        Mandat Confiance / Exclusivité
                      </span>
                      
                      <p class="pixM photoAnnonce" onmouseover="popup_annonce('2113969293','202_467_11635',$(this));return false;">
                        <img width="220" height="146" src="/imagesBien/202/467/c21_202_467_11635_9_7CC80E17-2C42-4D19-A17C-54084D83EE5F.jpg" alt="Vente appartement - PARIS (75017) - 16.4 m² - 3 pi&egrave;ces" />
                      </p>
              </a>
            </div>
              <div class="zone-text-loupe">  
                <a href="/trouver_logement/detail/2113969293/" onclick="google_tag_event('bien,clic_sur_listing,202_467_11635');return go_detail(this);">
                    <h3>
                      
                      PARIS&nbsp;&nbsp;<span class="font14">75017</span>
                      
                    </h3>
                    <h4 class="detail_vignette">
                      Appartement <br />16,43 m&sup2; , 3 pièces
                    </h4>
                <span class="infoZOOM">Voir détail</span>
              </a>
            </div>
          </div>
      </li>
      
      <li class="annonce">
        

          <div class="contentAnnonce" id="bien_2096050960" data-uid="2096050960">
            <div class="zone-photo-exclu">
                <a href="/trouver_logement/detail/2096050960/" onclick="google_tag_event('bien,clic_sur_listing,202_452_20492');return go_detail(this);">
                      <div class="price">184 000&euro; <span class="font20"></span></div>
                      
                      <p class="pixM photoAnnonce" onmouseover="popup_annonce('2096050960','202_452_20492',$(this));return false;">
                        <img width="220" height="146" src="/imagesBien/202/452/c21_202_452_20492_9_9535089E-124D-4B7B-ADD0-55872A7F6DE0.jpg" alt="Vente appartement - PARIS (75015) - 13.0 m² - 1 pi&egrave;ce" />
                      </p>
              </a>
            </div>
              <div class="zone-text-loupe">  
                <a href="/trouver_logement/detail/2096050960/" onclick="google_tag_event('bien,clic_sur_listing,202_452_20492');return go_detail(this);">
                    <h3>
                      
                      PARIS&nbsp;&nbsp;<span class="font14">75015</span>
                      
                    </h3>
                    <h4 class="detail_vignette">
                      Studette <br />13,04 m&sup2; , 1 pièce
                    </h4>
                <span class="infoZOOM">Voir détail</span>
              </a>
            </div>
          </div>
      </li>
      
      <li class="annonce">
        

          <div class="contentAnnonce" id="bien_2118217862" data-uid="2118217862">
            <div class="zone-photo-exclu">
                <a href="/trouver_logement/detail/2118217862/" onclick="google_tag_event('bien,clic_sur_listing,202_2572_17524');return go_detail(this);">
                      <div class="price">190 000&euro; <span class="font20"></span></div>
                      
                      <span class="infoEXCLU">
                      
                        Mandat Confiance / Exclusivité
                      </span>
                      
                      <p class="pixM photoAnnonce" onmouseover="popup_annonce('2118217862','202_2572_17524',$(this));return false;">
                        <img width="220" height="146" src="/imagesBien/202/2572/c21_202_2572_17524_9_E208E29A-495A-4E00-AED2-2471C7AB6400.jpg" alt="Vente appartement - PARIS (75010) - 12.9 m² - 1 pi&egrave;ce" />
                      </p>
              </a>
            </div>
              <div class="zone-text-loupe">  
                <a href="/trouver_logement/detail/2118217862/" onclick="google_tag_event('bien,clic_sur_listing,202_2572_17524');return go_detail(this);">
                    <h3>
                      
                      PARIS&nbsp;&nbsp;<span class="font14">75010</span>
                      
                    </h3>
                    <h4 class="detail_vignette">
                      Appartement F1 <br />12,89 m&sup2; , 1 pièce
                    </h4>
                <span class="infoZOOM">Voir détail</span>
              </a>
            </div>
          </div>
      </li>
      
      <li class="annonce">
        

          <div class="contentAnnonce" id="bien_2013390372" data-uid="2013390372">
            <div class="zone-photo-exclu">
                <a href="/trouver_logement/detail/2013390372/" onclick="google_tag_event('bien,clic_sur_listing,202_3332_553');return go_detail(this);">
                      <div class="price">223 000&euro; <span class="font20"></span></div>
                      
                      <span class="infoEXCLU">
                      
                        Mandat Confiance / Exclusivité
                      </span>
                      
                      <p class="pixM photoAnnonce" onmouseover="popup_annonce('2013390372','202_3332_553',$(this));return false;">
                        <img width="220" height="146" src="/imagesBien/202/3332/c21_202_3332_553_9_7529C694-178B-4694-AE1F-8E3EC7E4BA95.jpg" alt="Vente appartement - PARIS (75011) - 17.8 m² - 1 pi&egrave;ce" />
                      </p>
              </a>
            </div>
              <div class="zone-text-loupe">  
                <a href="/trouver_logement/detail/2013390372/" onclick="google_tag_event('bien,clic_sur_listing,202_3332_553');return go_detail(this);">
                    <h3>
                      
                      PARIS&nbsp;&nbsp;<span class="font14">75011</span>
                      
                    </h3>
                    <h4 class="detail_vignette">
                      Appartement F1 <br />17,75 m&sup2; , 1 pièce
                    </h4>
                <span class="infoZOOM">Voir détail</span>
              </a>
            </div>
          </div>
      </li>
      
      <li class="annonce">
        

          <div class="contentAnnonce" id="bien_2046180597" data-uid="2046180597">
            <div class="zone-photo-exclu">
                <a href="/trouver_logement/detail/2046180597/" onclick="google_tag_event('bien,clic_sur_listing,202_1027_13490');return go_detail(this);">
                      <div class="price">139 000&euro; <span class="font20"></span></div>
                      
                      <span class="infoEXCLU">
                      
                        Mandat Confiance / Exclusivité
                      </span>
                      
                      <p class="pixM photoAnnonce" onmouseover="popup_annonce('2046180597','202_1027_13490',$(this));return false;">
                        <img width="220" height="146" src="/imagesBien/202/1027/c21_202_1027_13490_9_D3F82CD4-E5BF-4AE6-BFA4-8BE050FD5CB3.jpg" alt="Vente appartement - PARIS (75017) - 10.9 m² - 1 pi&egrave;ce" />
                      </p>
              </a>
            </div>
              <div class="zone-text-loupe">  
                <a href="/trouver_logement/detail/2046180597/" onclick="google_tag_event('bien,clic_sur_listing,202_1027_13490');return go_detail(this);">
                    <h3>
                      
                      PARIS&nbsp;&nbsp;<span class="font14">75017</span>
                      
                    </h3>
                    <h4 class="detail_vignette">
                      Studio <br />10,9 m&sup2; , 1 pièce
                    </h4>
                <span class="infoZOOM">Voir détail</span>
              </a>
            </div>
          </div>
      </li>
      
      <li class="annonce">
        

          <div class="contentAnnonce" id="bien_1627445013" data-uid="1627445013">
            <div class="zone-photo-exclu">
                <a href="/trouver_logement/detail/1627445013/" onclick="google_tag_event('bien,clic_sur_listing,202_3354_32');return go_detail(this);">
                      <div class="price">190 000&euro; <span class="font20"></span></div>
                      
                      <span class="infoEXCLU">
                      
                        Mandat Confiance / Exclusivité
                      </span>
                      
                      <p class="pixM photoAnnonce" onmouseover="popup_annonce('1627445013','202_3354_32',$(this));return false;">
                        <img width="220" height="146" src="/imagesBien/202/3354/c21_202_3354_32_9_AB0DD45F-3844-43A5-BFAF-9A3F31E7A25E.jpg" alt="Vente appartement - PARIS (75009) - 18.9 m² - 1 pi&egrave;ce" />
                      </p>
              </a>
            </div>
              <div class="zone-text-loupe">  
                <a href="/trouver_logement/detail/1627445013/" onclick="google_tag_event('bien,clic_sur_listing,202_3354_32');return go_detail(this);">
                    <h3>
                      
                      PARIS&nbsp;&nbsp;<span class="font14">75009</span>
                      
                    </h3>
                    <h4 class="detail_vignette">
                      Appartement F1 <br />18,86 m&sup2; , 1 pièce
                    </h4>
                <span class="infoZOOM">Voir détail</span>
              </a>
            </div>
          </div>
      </li>
      
      <li class="annonce">
        

          <div class="contentAnnonce" id="bien_1984655015" data-uid="1984655015">
            <div class="zone-photo-exclu">
                <a href="/trouver_logement/detail/1984655015/" onclick="google_tag_event('bien,clic_sur_listing,202_1113_29514');return go_detail(this);">
                      <div class="price">119 500&euro; <span class="font20"></span></div>
                      
                      <span class="infoEXCLU">
                      
                        Mandat Confiance / Exclusivité
                      </span>
                      
                      <p class="pixM photoAnnonce" onmouseover="popup_annonce('1984655015','202_1113_29514',$(this));return false;">
                        <img width="220" height="146" src="/imagesBien/202/1113/c21_202_1113_29514_9_BDB9DDC2-A4F2-47FA-A302-4171AE7F5189.jpg" alt="Vente appartement - ASNIERES SUR SEINE (92600) - 20.8 m² - 1 pi&egrave;ce" />
                      </p>
              </a>
            </div>
              <div class="zone-text-loupe">  
                <a href="/trouver_logement/detail/1984655015/" onclick="google_tag_event('bien,clic_sur_listing,202_1113_29514');return go_detail(this);">
                    <h3>
                      
                      ASNIERES SUR SEINE&nbsp;&nbsp;<span class="font14">92600</span>
                      
                    </h3>
                    <h4 class="detail_vignette">
                      Appartement F1 <br />20,75 m&sup2; , 1 pièce
                    </h4>
                <span class="infoZOOM">Voir détail</span>
              </a>
            </div>
          </div>
      </li>
      
    </ul>
  </div>
  
  <div class="suivCarouselLAST navCarousel btnSuiv">
  	<i class="fa fa-angle-right fa-5x" aria-hidden="true"></i>
  </div>
  
</div>
<script type="text/javascript">
    UID_BIEN = UID_BIEN.concat(["2099826167","2115313343","2121158492","2113969293","2096050960","2118217862","2013390372","2046180597","1627445013","1984655015"]);
</script>

<div class="reset"></div>


    </section>
    <section id="decouvrirVille" class="slide slide3">
        
<link rel="stylesheet" type="text/css" href="/theme/generic/js/lib/jquery.jqplot/jquery.jqplot.min.css" />
<script>

 
  var CP = 75013;
  var CODE_INSEE = 75113;
 
  var BIENS_PAR_TYPE = [["parking", 8, "/annonces/achat-parking/cp-75013/s-0-/st-0-/b-0-/page-1/"], ["appartement", 21, "/annonces/achat-appartement/cp-75013/s-0-/st-0-/b-0-/page-1/"]];
  var PRIX_MOYENS = [["Maison", 808111.0], ["Appartement", 499309.0]];
  var LOCALISATION_RESTREINTE = false;
     $.getScript("/theme/generic/js/lib/jquery.jqplot/my.jqplot.js", function() {
        $.getScript("/js/stats_ville.js", function () {
        fix_articles();
     });
  });
  

</script>

<h2>
  <a href="/edito/ville/paris-13eme/" class="yellow">
    Découvrir Paris 13
    </a>
</h2>



  <div id="graphVILLE" class="line">
    <ul class="menuGraph">
      <li id="menu-graph1" class="BTN">Prix moyens</li>
      <li id="menu-graph2" class="BTN">Biens à vendre</li>
      <li id="menu-graph3" class="BTN insee">Les habitants</li>
      
        <li id="menu-graph4" class="BTN impot">Taux et taxes</li>

      
      
    </ul>
    <ul class="contentGraph">
      <li id="graph1" class="graph">
          <div id="graphique1" class="graph" style="width:295px;height:210px;">
          </div>
          <div class="infos">
            <h3>Prix moyens constatés en région ILE-DE-FRANCE</h3>
              <ul>
              </ul>
          </div>
          <div class="reset"></div>
      </li>
      <li id="graph2" class="graph">
          <div id="graphique2" class="graph" style="width:295px;height:210px;">
          </div>
          <div class="infos">
              <h3>Biens à vendre à Paris 13</h3>
              <ul></ul>
          </div>
          <div class="reset"></div>
      </li>
      <li id="graph3" class="graph insee">
          <div id="graphique3" class="graph" style="width:295px;height:210px;">
          </div>
          <div class="infos">
            <h3>Les habitants de Paris 13</h3>
              <ul></ul>
          </div>
          <div class="reset"></div>
      </li>
      
      <li id="graph4" class="graph impot">
          <div id="graphique4" class="graph" style="width:295px;height:210px;">
          </div>
          <div class="infos">
              <h3>Taux d'impositions à Paris 13</h3>
              <ul></ul>
          </div>
          <div class="reset"></div>
      </li>

      
      
  </ul>
    <div class="reset"></div>
  </div>


<div class="reset"></div>

<div class="edito-ville-ajax">
	<div class="line">
	  <h3>Paris 13 en un clin d'œil</h3>
	</div>

	
	<div class="box">
	  <a href="/edito/ville/paris-13eme/"><img src="/imagesBien/202/cms/687840690/Metro_de_Paris_-_Ligne_7_-_Les_Gobelins_paris 13/Metro_de_Paris_-_Ligne_7_-_Les_Gobelins_paris 13__cmsbig.jpg" alt="Paris 13ème - © By Flick Upload bot via fr.wikimedia.org" /></a>
	</div>
	

	<div class="box">
	  <ul>
		
		<li><span class="titreDetail">Commune : </span>PARIS</li>
		<li><span class="titreDetail">Code postal : </span>75013</li>
		
		<li id="insee-population-cont"><span class="titreDetail">Population : </span><span id="insee-population"></span></li>
		<li><span class="titreDetail">Département : </span>Paris (75)</li>
		<li><span class="titreDetail">Région : </span>ILE-DE-FRANCE</li>
	  </ul>

	  
	  <h3>Les villes à proximité</h3>
	  <ul>
		
		<li class="arrow"><h4><a href="/annonces/achat-appartement/v-le+kremlin+bicetre/s-0-/st-0-/b-0-/page-1/">LE KREMLIN BICETRE</a></h4></li>
		
		<li class="arrow"><h4><a href="/annonces/achat-appartement/cp-75005/s-0-/st-0-/b-0-/page-1/">PARIS 5</a></h4></li>
		
		<li class="arrow"><h4><a href="/annonces/achat-appartement/v-villejuif/s-0-/st-0-/b-0-/page-1/">VILLEJUIF</a></h4></li>
		
		<li class="arrow"><h4><a href="/annonces/achat-appartement/cp-75004/s-0-/st-0-/b-0-/page-1/">PARIS 4</a></h4></li>
		
		<li class="arrow"><h4><a href="/annonces/achat-appartement/cp-75014/s-0-/st-0-/b-0-/page-1/">PARIS 14</a></h4></li>
		
	  </ul>
	  

	</div>
	<div class="box">

	  
	  <h3>Tout savoir sur Paris 13</h3>
	  <div class="edito">
		<p>Même s’il abrita des édifices religieux dès le Haut Moyen Age, puis des manufactures textiles au XVème siècle, le 13e arrondissement ne fut réellement urbanisé que dans la seconde moitié du XXe siècle.</p>
		<div class="arrow">
		  <h4><a href="/edito/ville/paris-13eme/">Paris 13</a></h4>
		</div>
	  </div>
	  

	</div>
	<!--
	<div class="box articles_cont">
	  <span>Nos experts parlent de : Paris 13</span>
	  
	</div>
	-->
	<div class="reset"></div>
</div>
    </section>
    <section id="acheterMaison" class="slide slide4">
        
<h2>Tout savoir pour acheter un appartement</h2>
<div class="zone-article-ajax">


	<div class="box articles_cont">
	  <h3>Acheter son appartement</h3>
	  

<ul class="articles margB15">
  
    <li class="XXS">
      <div class="pix">
        <a href="/edito/article/2e-trimestre-2017-la-hausse-des-taux-dinteret-reste-imper/"><img src="/imagesBien/202/cms/1425363498/taux/taux__cmsicon.png" alt="2e trimestre 2017 : la hausse des taux d’intérêt reste imperceptible."  title="2e trimestre 2017 : la hausse des taux d’intérêt reste imperceptible."/></a>
      </div>
      <div class="edito">
        <h4><a href="/edito/article/2e-trimestre-2017-la-hausse-des-taux-dinteret-reste-imper/">2e trimestre 2017 : la hausse des taux d’intérêt reste imperceptible.</a></h4>
        
          <p>On peut imaginer que la baisse continue des taux d’intérêt pour les prêts immobiliers ...</p>
        
      </div>
      <div class="reset"></div>
    </li>
  
    <li class="XXS">
      <div class="pix">
        <a href="/edito/article/dechets-verts-comment-sen-debarrasser/"><img src="/imagesBien/202/cms/1372983234/déch/déch__cmsicon.png" alt="Déchets verts : comment s’en débarrasser ?"  title="Déchets verts : comment s’en débarrasser ?"/></a>
      </div>
      <div class="edito">
        <h4><a href="/edito/article/dechets-verts-comment-sen-debarrasser/">Déchets verts : comment s’en débarrasser ?</a></h4>
        
          <p>La loi interdit désormais aux particuliers de brûler leurs déchets verts à l’air libre.</p>
        
      </div>
      <div class="reset"></div>
    </li>
  
</ul>

    
        <div><h4 class="arrow">
        
            <a href="/edito/article/acheter/conseil-achat-immobilier/?type_bien=2&amp;type_article=1">
        
        Voir tous nos conseils sur l&#39;achat d&#39;un bien immobilier
        </a></h4></div>
    



	</div>
	<div class="box">
	  <h3 >Pour bien acheter</h3>
	  <ul class="articles">
  
    <li class="arrow"><h4><a href="/edito/article/45-mois-le-temps-necessaire-a-lachat-de-sa-residence-pri/">4,5 mois : le temps nécessaire ...</a></h4></li>
  
    <li class="arrow"><h4><a href="/edito/article/le-gaz-est-il-toujours-avantageux/">Le gaz est-il toujours avantageux ?</a></h4></li>
  
    <li class="arrow"><h4><a href="/edito/article/droit-de-passage-comment-ca-marche/">Droit de passage : comment ça ...</a></h4></li>
  
    <li class="arrow"><h4><a href="/edito/article/faut-il-investir-dans-une-residence-senior/">Faut-il investir dans une résidence senior ...</a></h4></li>
  
    <li class="arrow"><h4><a href="/edito/article/la-reforme-des-plus-values-immobilieres-a-compter-du-1er-sep/">La réforme des plus-values immobilières à ...</a></h4></li>
  
</ul>


	</div>
	<div class="box">
	  
		<h3>Appartements à louer</h3>
		<ul>
		  
			<li class="arrow"><h4><a href="/annonces/achat-appartement/cp-75013/s-0-/st-0-/b-0-/page-1/">PARIS 13ème (21 appartements)</a></h4></li>
		  
			<li class="arrow"><h4><a href="/annonces/achat-appartement/v-le+kremlin+bicetre/s-0-/st-0-/b-0-/page-1/">LE KREMLIN BICETRE (4 appartements)</a></h4></li>
		  
			<li class="arrow"><h4><a href="/annonces/achat-appartement/cp-75005/s-0-/st-0-/b-0-/page-1/">PARIS 5ème (8 appartements)</a></h4></li>
		  
			<li class="arrow"><h4><a href="/annonces/achat-appartement/v-villejuif/s-0-/st-0-/b-0-/page-1/">VILLEJUIF (2 appartements)</a></h4></li>
		  
			<li class="arrow"><h4><a href="/annonces/achat-appartement/cp-75004/s-0-/st-0-/b-0-/page-1/">PARIS 4ème (11 appartements)</a></h4></li>
		  
		</ul>
	  
	</div>
</div>
<div class="reset"></div>
<script>
  if (typeof fix_articles != 'undefined'){
      fix_articles();
  }
</script>

    </section>
    <section id="votreAgence" class="slide slide5">
        

<h2>Votre agence immobilière </h2>
<div class="zone-ag-ajax equal">
	<div class="box equal50">
	  <a href="/trouver_agence/agence/400806883/">
			<img src="/imagesBien/202/2947/webmaster_1_202_2947_0_2_0.jpg" alt="CENTURY 21 Arago - Les Gobelins"/>
			<h3 class="noBorder tt"><a href="/trouver_agence/agence/400806883/">CENTURY 21 Arago - Les Gobelins</a></h3>
			<ul class="coordonneesAgence">
			<li>44  Avenue des Gobelins</li>
			
			<li>75013 PARIS</li>
			</ul>
		</a>


		<a id="yma-mentions">Mentions légales</a>
		
		
		<div id="" class="yma-mentions-content " style="display: none">
		 
		 
         		
                                
         			        <ul>    
		<li><strong>Raison sociale : </strong>CBHF</li>				
		<li><strong>RCS </strong> 524847878</li>
		<li><strong> au capital de :</strong> 7000 €   &euro; </li>
		<li><strong>Adresse du siège Social :</strong> 44 avenue des Gobelins - 75013 PARIS</li>
		<li><strong>Téléphone :</strong> 01 85 34 19 69 </li>
		
		<li><strong>Adresse mail :</strong><img class="img-mail" src="/imagesBien/202/2947/contact.png" /></li>
		
		<li><strong>Numéro de déclaration de TVA :</strong> </li>
		<li>Le titre professionnel d'agent immobilier est régi par la loi n°70-9 du 2 janvier 1970 (dite "loi Hoguet")<br/> et son décret d'application n°72-678 du 20 juillet 1972</li>             

		
        <li><strong>Carte professionnelle n° :</strong> CPI 7501 2015 000 000 589 délivrée par la CCI de : CCI PARIS IDF , 27 avenue de Friedland 75008 PARIS, FRANCE
    	</li>
		
		<li><strong>Nom et Adresse du garant :</strong> GALIAN  N° 43158L 89 Rue La Boétie, 75008 Paris</li>
		
		
    	
		
		<li>
			<strong>Barèmes d'honoraires :</strong>
			<a href="/imagesBien/202/2947/v5/bareme_honoraires.pdf" target="_blank" class="ffDW underline black">
				Pour consulter les barèmes d'honoraires de l'agence, cliquez ici
			</a>
		</li>
		
		
		<li>
			<br>
                        En cas de litige avec la société CBHF relatif à l'exécution d'un contrat de vente ou de prestation de services, le consommateur est informé qu'il a la possibilité de saisir le médiateur de la consommation dans les conditions prévues aux articles L 611-1 et suivants du Code de la consommation, dont les coordonnées et le site Internet sont : Association MEDIMMOCONSO, 1 Allée du Parc de Mesemena - Bât A - CS25222 - 44505 LA BAULE CEDEX  - Mail :contact@medimmoconso.fr    - Site Internet : https://medimmoconso.fr/adresser-une-reclamation/  .
		</li>						
	</ul>
	<br><br>

                                 
         		
         	
         	
				         	
				<a class="underline black" href="https://www.century21-arago-paris-13.com/mentions_legales/" target="_blank">Voir nos mentions légales complètes</a>
				
     		
	 </div>


	</div>
	<div class="box equal50">

	  
	  
	  <strong class="font14 underline" >L’actualité de notre agence</strong>
	  <p>
		Ancien quartier ouvrier, le 13e arrondissement de Paris est situé sur la rive gauche de la Seine. Connu essentiellement pour son quartier asiatique et pour l’implantation de la Bibliothèque nationale de France, c’est un arrondissement en perpétuelle transformation. Focus sur le projet Paris Rive Gauche, l’une des plus grandes opérations ...
	  </p>
		<div class="arrow arrow-right"><a href="http://www.century21-arago-paris-13.com/actus/1918996286/" target="_blank" 
			class="font14 underline grey4 ">Lire la suite</a></div>
	  
		
		<!-- changement d'emplacement-->
		<div class="box WAUTO link-infos-agances">
				<ul>
				
				<li class="arrow"><h4><a rel="//www.century21-arago-paris-13.com" class="noFOLLOW btn-link-infos-agances" target="_blank" title="Site web de l'agence">Site web de l'agence</a></h4></li>
				
				<li class="arrow"><h4><a rel="/trouver_agence/agence/400806883/" class="noFOLLOW btn-link-infos-agances" title="Fiche de l'agence">Fiche de l'agence</a></h4></li>
				<li class="arrow">
					
				
					<div class="reset"></div>
				</li>
				<li class="jump"></li>
				
				<li class="arrow">
					
						<a class="yellow" href="//www.century21-arago-paris-13.com/annonces/achat/" target="_blank">
							6 biens &agrave; vendre</a>
					
				</li>
				
				
				<li class="arrow">
					
						<a class="yellow" href="//www.century21-arago-paris-13.com/annonces/location" target="_blank">
							3 biens &agrave; louer
						</a>
					
				</li>
				
				
				</ul>
		</div>
		<!-- changement d'emplacement-->
	</div>






	<div class="reset"></div>
	
	
	
	
		
		<div class="foot-content2">
			<div class="center content_qualitelis">
				<div id="header" class="displayFlexSpace">
					<div class="parole_clients">
						<img src="/theme/generic/css/images/op-marque/pdc.svg" width="258" alt="">
					</div>
					<div class="box_note">
						<div class="displayFlexCenter flex-flow">
							<span class="font16 bold" itemprop="name">NOTE GLOBALE<br>DE L'AGENCE</span>
							<div class="my-rating" data-rating="9,3"></div>
						</div>						
						<div class="displayFlexCenter font40 bold">
							<span> 9,3/10</span>
						</div>
						<div class="flex-flow displayFlexCenter">
							<span class="font16 bold">NOMBRE D'AVIS<br>SUR L'AGENCE</span>

							<span class=""><a href="https://www.century21-arago-paris-13.com/agence/avis-clients/"><span class="font22 black bold">189</span></a></span>
						</div>
					</div>
					<div class="box_qualitelis box_certifie_par">Certifié par <img class="qualitelis-img" src="/theme/generic/css/images/qualitelis/qualitelis.svg" alt="Qualitelis"></div>
				</div>			
				<div class="reset"></div>				
				<h2 class="h2_style">Nos clients donnent leur avis</h2>
				<div class="reset"></div>				
				
				<div class="relative">					
					
						
							
							<div class="tem_clients">
								<div class="box box3">
									<div class="note">
										<h3 class="bold">9/10</h3>
										<div class="my-rating2" data-rating2="9"></div>
									</div>
									<div class="txt">
										<p>
											Rapports  très agréables avec une équipe compétente et sympathique sympathique&nbsp;
											
											
												
											
											
										</p>
									</div>
									<div class="reset"></div>
									<div class="profil">
										<div class="img-client">
											
																					
												<img src="/theme/generic/css/images/qualitelis/avatars/femme-1.svg" alt="">
											
											
										</div>
										<div class="info">
											<span class="h3_style">Catherine R.</span>
											<div class="reset"></div>
											<span><div class="date_com" data-date="2019-11-13"></div>
												
													Client Acheteur
																							
												
													après acte de vente
												
											</span>
										</div>
									</div>
									
									<div class="reset"></div>
								</div>
							</div>

							<div id="popin_1" class="displayNone popin_glob">
								<div class="popin_first">
									<div class="profil">
										<div class="img-client">
											
																					
												<img src="/theme/generic/css/images/qualitelis/avatars/femme-1.svg" alt="">
											
											
										</div>								
										<div class="info" data-date="2019-11-13">
											<span class="h3_style margR5">
												<span class="margR5">
													Catherine R.
												</span>
												9/10
											</span>
											<span class="my-rating2" data-rating2="9"></span>
											<div class="reset"></div>
											<span class="info_client"><div class="date_com" data-date="2019-11-13"></div>&nbsp;-
												
													Client Acheteur
																							
												
													après la signature de l'acte de vente
												
											</span>
										</div>
									</div>
									<div class="reset"></div>
									<div class="txt">
										<p>
											Rapports  très agréables avec une équipe compétente et sympathique sympathique
										</p>
									</div>
								</div>
								
								<a class="buton-close">
									<i class="fa fa-times fa-2x" aria-hidden="true"></i>
								</a>
							</div>
							
						
					
						
							
							<div class="tem_clients">
								<div class="box box3">
									<div class="note">
										<h3 class="bold">10/10</h3>
										<div class="my-rating2" data-rating2="10"></div>
									</div>
									<div class="txt">
										<p>
											Tout simplement parfait : disponible, serviable, à l’ecoute De toutes les questions et bon conseil&nbsp;
											
											
												
											
											
										</p>
									</div>
									<div class="reset"></div>
									<div class="profil">
										<div class="img-client">
											
											
											
												<img src="/theme/generic/css/images/qualitelis/avatars/mixte-4.svg" alt="">
											
										</div>
										<div class="info">
											<span class="h3_style">Antoine et Anne G.</span>
											<div class="reset"></div>
											<span><div class="date_com" data-date="2019-08-09"></div>
												
													Client Acheteur
																							
												
													après acte de vente
												
											</span>
										</div>
									</div>
									
									<div class="reset"></div>
								</div>
							</div>

							<div id="popin_2" class="displayNone popin_glob">
								<div class="popin_first">
									<div class="profil">
										<div class="img-client">
											
											
											
												<img src="/theme/generic/css/images/qualitelis/avatars/mixte-4.svg" alt="">
											
										</div>								
										<div class="info" data-date="2019-08-09">
											<span class="h3_style margR5">
												<span class="margR5">
													Antoine et Anne G.
												</span>
												10/10
											</span>
											<span class="my-rating2" data-rating2="10"></span>
											<div class="reset"></div>
											<span class="info_client"><div class="date_com" data-date="2019-08-09"></div>&nbsp;-
												
													Client Acheteur
																							
												
													après la signature de l'acte de vente
												
											</span>
										</div>
									</div>
									<div class="reset"></div>
									<div class="txt">
										<p>
											Tout simplement parfait : disponible, serviable, à l’ecoute De toutes les questions et bon conseil
										</p>
									</div>
								</div>
								
								<a class="buton-close">
									<i class="fa fa-times fa-2x" aria-hidden="true"></i>
								</a>
							</div>
							
						
					
						
							
							<div class="tem_clients">
								<div class="box box3">
									<div class="note">
										<h3 class="bold">10/10</h3>
										<div class="my-rating2" data-rating2="10"></div>
									</div>
									<div class="txt">
										<p>
											Les gens sont tres competents, efficaces et ils m&#39;ont très bien accompagné tout au long de mon acquisition. J&#39;ai la confiance totale en cet Agence . …&nbsp;
											
											
												
													<a class="popin_a" data-target="popin_3">
														<span>Lire la suite <i class="fa fa-chevron-right" aria-hidden="true"></i></span>
													</a>
												
											
											
										</p>
									</div>
									<div class="reset"></div>
									<div class="profil">
										<div class="img-client">
											
																					
												<img src="/theme/generic/css/images/qualitelis/avatars/femme-4.svg" alt="">
											
											
										</div>
										<div class="info">
											<span class="h3_style">Thi Hoang Mai T.</span>
											<div class="reset"></div>
											<span><div class="date_com" data-date="2019-08-09"></div>
												
													Client Acheteur
																							
												
													après acte de vente
												
											</span>
										</div>
									</div>
									
									<div class="reset"></div>
								</div>
							</div>

							<div id="popin_3" class="displayNone popin_glob">
								<div class="popin_first">
									<div class="profil">
										<div class="img-client">
											
																					
												<img src="/theme/generic/css/images/qualitelis/avatars/femme-4.svg" alt="">
											
											
										</div>								
										<div class="info" data-date="2019-08-09">
											<span class="h3_style margR5">
												<span class="margR5">
													Thi Hoang Mai T.
												</span>
												10/10
											</span>
											<span class="my-rating2" data-rating2="10"></span>
											<div class="reset"></div>
											<span class="info_client"><div class="date_com" data-date="2019-08-09"></div>&nbsp;-
												
													Client Acheteur
																							
												
													après la signature de l'acte de vente
												
											</span>
										</div>
									</div>
									<div class="reset"></div>
									<div class="txt">
										<p>
											Les gens sont tres competents, efficaces et ils m&#39;ont très bien accompagné tout au long de mon acquisition. J&#39;ai la confiance totale en cet Agence . Grand merci pour Century 21
										</p>
									</div>
								</div>
								
								<a class="buton-close">
									<i class="fa fa-times fa-2x" aria-hidden="true"></i>
								</a>
							</div>
							
						
					
				</div>
				<div class="page_avis">
					
					<a href="https://www.century21-arago-paris-13.com/agence/avis-clients/" target="_blank">
						<i class="fa fa-angle-right" aria-hidden="true"></i> Voir tous les avis
					</a>
					
				</div>
				
			</div>
		</div>
		
		<script>
			function convertDateToText(maDate){
				var txtDate = maDate.split('-');
				txtDate = txtDate.join('-');
				var newDate = new Date(txtDate);
				var options = {year: "numeric", month: "long", day: "numeric"};

				return newDate.toLocaleDateString("fr-FR", options);
			}
			var IS_MOBILE = IS_MOBILE;
			if (IS_MOBILE !== 'undefined') {
				$(".popin_a").each(function(){
					var popin;
					$(this).click(function(){
						popin = $("#" + $(this).data("target"));
						// Init de la date de reponse de l'ag
						if($(".date-custom").length){
							$(".date-custom").each(function(){			
								$(this).html(convertDateToText($(this).data("date")));
							});
						}
						popin.fadeIn();
						popin.find(".buton-close").click(function(){
							popin.fadeOut();
						});
					});
				});
			} else {
				$(".popin_a").each(function(){
					var popin;
					$(this).click(function(){
						popin = $("#" + $(this).data("target"));
						// Init de la date de reponse de l'ag
						if($(".date-custom").length){
							$(".date-custom").each(function(){			
								$(this).html(convertDateToText($(this).data("date")));
							});
						}
						popin.fadeIn();
						popin.find(".buton-close").click(function(){
							popin.fadeOut();
						});
					});
				});
			}

			$(".date_com").each(function(){
				if($(this).data("date")){
					$(this).html(convertDateToText($(this).data("date")));
				}
			});	


		</script>


	<div class="resset"></div>
	
</div>
<!-- 202_2947_5208 -->
<script language="javascript">
	/* Slidedown des mentions légales sur la page détail d'une agence */
    if($('#link_mention_legales_detail_agence').length > 0){
        $('#link_mention_legales_detail_agence').click(function(){
            $('#mention_legales_detail_agence').slideDown();
            return false;
        });
        $('#mention_legales_detail_agence').mouseleave(function(){
            $('#mention_legales_detail_agence').slideUp();
        });

        $('#mention_legales_detail_agence #fermerDescLongue').click(function(){
            $('#mention_legales_detail_agence').slideUp();
        });

    }

    makeLinksNoFollow();

    $('#detailNumTelEtape4').click(function(){
      $.ajax({
        type: "post",
        url: "/click_tel/400806883/"
      });
		});
		
$("#yma-mentions").click(function(){
  $(".yma-mentions-content").slideToggle();
});

</script>




    </section>

    <div class="reset"></div>
  </div>
</div>



<script>
 $('.afficheNumTel').click(function(){
   $.ajax({
     type: "get",
     url: "/click_tel/400806883/"
   });
 });
</script>





              
            </div>
          </div>
        </div>
      </div>
      

      
      <footer id="mainFooter">
        <div class="mid">
          
          
           <div class="content">
			  <div class="mentions_fixe">
          <ul>
              <li><a href="/fiches/protection-des-donnees/">Politique de protection des données</a></li>
            <li><a href="/fiches/mentions/">Mentions légales</a></li>
            <li><a href="/fiches/credits/">Crédits</a></li>
            <li><a href="/contactez_nous/">Nous contacter</a></li>
           
          </ul>
			  </div>
			  <div class="reset"></div>
			 
				  
				  <div class="fL tw-ml-1">
					<a id="showFooter" class="flecheDown"></a>
				  </div>
				  

				  <div class="reset"></div>

				  
				  <div class="global_footer">
					<div class="zone_lien_footer">
					
					<div class="box25 paddL10">
					  
						<h2>Achat appartement autour de PARIS (75013)</h2>
						
					  <ul>
						
						<li><a href="/annonces/achat-appartement/v-le+kremlin+bicetre/s-0-/st-0-/b-0-/page-1/"><h3>Achat appartement LE KREMLIN BICETRE</h3></a></li>
						
						<li><a href="/annonces/achat-appartement/cp-75005/s-0-/st-0-/b-0-/page-1/"><h3>Achat appartement PARIS 5ième</h3></a></li>
						
						<li><a href="/annonces/achat-appartement/v-villejuif/s-0-/st-0-/b-0-/page-1/"><h3>Achat appartement VILLEJUIF</h3></a></li>
						
						<li><a href="/annonces/achat-appartement/cp-75004/s-0-/st-0-/b-0-/page-1/"><h3>Achat appartement PARIS 4ième</h3></a></li>
						
						<li><a href="/annonces/achat-appartement/cp-75014/s-0-/st-0-/b-0-/page-1/"><h3>Achat appartement PARIS 14ième</h3></a></li>
						
						<li><a href="/annonces/achat-appartement/v-ivry+sur+seine/s-0-/st-0-/b-0-/page-1/"><h3>Achat appartement IVRY SUR SEINE</h3></a></li>
						
						<li><a href="/annonces/achat-appartement/cp-75003/s-0-/st-0-/b-0-/page-1/"><h3>Achat appartement PARIS 3ième</h3></a></li>
						
						<li><a href="/annonces/achat-appartement/cp-75001/s-0-/st-0-/b-0-/page-1/"><h3>Achat appartement PARIS 1ier</h3></a></li>
						
						<li><a href="/annonces/achat-appartement/cp-75012/s-0-/st-0-/b-0-/page-1/"><h3>Achat appartement PARIS 12ième</h3></a></li>
						
						<li><a href="/annonces/achat-appartement/v-montrouge/s-0-/st-0-/b-0-/page-1/"><h3>Achat appartement MONTROUGE</h3></a></li>
						
						<li><a href="/annonces/achat-appartement/cp-75006/s-0-/st-0-/b-0-/page-1/"><h3>Achat appartement PARIS 6ième</h3></a></li>
						
						<li><a href="/annonces/achat-appartement/cp-75011/s-0-/st-0-/b-0-/page-1/"><h3>Achat appartement PARIS 11ième</h3></a></li>
						
						<li><a href="/annonces/achat-appartement/v-l+hay+les+roses/s-0-/st-0-/b-0-/page-1/"><h3>Achat appartement L HAY LES ROSES</h3></a></li>
						
						<li><a href="/annonces/achat-appartement/cp-75007/s-0-/st-0-/b-0-/page-1/"><h3>Achat appartement PARIS 7ième</h3></a></li>
						
						<li><a href="/annonces/achat-appartement/cp-75010/s-0-/st-0-/b-0-/page-1/"><h3>Achat appartement PARIS 10ième</h3></a></li>
						
					  </ul>
					</div>
					
					<div class="box25 paddL10">
					  
						<h2>Autres appartements a vendre à PARIS (75013)</h2>
						
					  <ul>
						
						<li><a href="/trouver_logement/detail/2039788296/"><h3>appartement &agrave; vendre - 4 pi&egrave;ces - 89 m2 - PARIS - 75014 - ILE-DE-FRANCE</h3></a></li>
						
						<li><a href="/trouver_logement/detail/1602757943/"><h3>appartement &agrave; vendre - 3 pi&egrave;ces - 59 m2 - PARIS - 75012 - ILE-DE-FRANCE</h3></a></li>
						
						<li><a href="/trouver_logement/detail/2099077435/"><h3>appartement &agrave; vendre - 5 pi&egrave;ces - 102 m2 - PARIS - 75012 - ILE-DE-FRANCE</h3></a></li>
						
						<li><a href="/trouver_logement/detail/2004247382/"><h3>appartement &agrave; vendre - 2 pi&egrave;ces - 36 m2 - PARIS - 75012 - ILE-DE-FRANCE</h3></a></li>
						
						<li><a href="/trouver_logement/detail/2091692427/"><h3>appartement &agrave; vendre - 3 pi&egrave;ces - 70 m2 - PARIS - 75006 - ILE-DE-FRANCE</h3></a></li>
						
						<li><a href="/trouver_logement/detail/2077468281/"><h3>appartement &agrave; vendre - 3 pi&egrave;ces - 69 m2 - PARIS - 75005 - ILE-DE-FRANCE</h3></a></li>
						
						<li><a href="/trouver_logement/detail/2031279843/"><h3>appartement &agrave; vendre - 1 pi&egrave;ce - 34 m2 - PARIS - 75009 - ILE-DE-FRANCE</h3></a></li>
						
						<li><a href="/trouver_logement/detail/2057160839/"><h3>appartement &agrave; vendre - 5 pi&egrave;ces - 92 m2 - PARIS - 75016 - ILE-DE-FRANCE</h3></a></li>
						
						<li><a href="/trouver_logement/detail/2113977400/"><h3>appartement &agrave; vendre - 2 pi&egrave;ces - 52 m2 - PARIS - 75013 - ILE-DE-FRANCE</h3></a></li>
						
						<li><a href="/trouver_logement/detail/2109144007/"><h3>appartement &agrave; vendre - 1 pi&egrave;ce - 36 m2 - PARIS - 75006 - ILE-DE-FRANCE</h3></a></li>
						
						<li><a href="/trouver_logement/detail/2100529070/"><h3>appartement &agrave; vendre - 3 pi&egrave;ces - 80 m2 - PARIS - 75014 - ILE-DE-FRANCE</h3></a></li>
						
						<li><a href="/trouver_logement/detail/2005934505/"><h3>appartement &agrave; vendre - 2 pi&egrave;ces - 61 m2 - PARIS - 75006 - ILE-DE-FRANCE</h3></a></li>
						
						<li><a href="/trouver_logement/detail/1279568267/"><h3>appartement &agrave; vendre - 7 pi&egrave;ces - 194 m2 - PARIS - 75006 - ILE-DE-FRANCE</h3></a></li>
						
						<li><a href="/trouver_logement/detail/2053306151/"><h3>appartement &agrave; vendre - 4 pi&egrave;ces - 54 m2 - PARIS - 75009 - ILE-DE-FRANCE</h3></a></li>
						
						<li><a href="/trouver_logement/detail/2113274702/"><h3>appartement &agrave; vendre - 6 pi&egrave;ces - 138 m2 - PARIS - 75012 - ILE-DE-FRANCE</h3></a></li>
						
					  </ul>
					</div>
					
					<div class="box25 paddL10">
					  <a href="/edito/departement/paris-un-departement-qui-nen-est-pas-un/">
						<h2>Immobilier à  Paris </h2>
						</a>
					  <ul>
						
					  </ul>
					</div>
					
					<div class="box25 paddL10">
					  <a href="/annonces/achat-appartement/v-paris/s-0-/st-0-/b-0-/page-1/">
						<h2>Achat appartement Paris</h2>
						</a>
					  <ul>
						
					  </ul>
					</div>
					
					<div class="box25 paddL10">
					  <a href="/edito/region/ile-de-france/">
						<h2>Immobilier en ILE-DE-FRANCE </h2>
						</a>
					  <ul>
						
					  </ul>
					</div>
					
					<div class="box25 paddL10">
					  <a href="/edito/ville/paris-13eme/">
						<h2>Immobilier PARIS</h2>
						</a>
					  <ul>
						
					  </ul>
					</div>
					
					  </div>
					  <div class="zone_logo_footer">
						<img src="/theme/generic/css/images/op-marque/sceau_c21.svg">
					  </div>
				  </div>
				  
				  <div class="reset"></div>
         	
          </div>
        </div>
      </footer>
      
<!-- ==========================================================================
  HTML TO ADD FOR PRINT VERSION
  ========================================================================== -->

<div class="print-box print-note displayNone">
  <div class="print-box-title">
    Notes
  </div>
  <div class="print-box-content print-note-content">
    Date :<hr />
    Notes :
  </div>
</div>

<div class="print-box print-contact displayNone">
    <div class="print-box-title">Contact</div>
    <div class="print-box-content print-contact-content">
       <p>
          <span class="print-contact-name">CENTURY 21 Arago - Les Gobelins</span><br />
          44  Avenue des Gobelins<br />
          
          75013 PARIS <br />
          <span class="print-contact-phone">
            
            01 85 34 19 69 
            
          </span><br />
          gobelins@century21.fr
        </p>
    </div>
</div>

<!-- ==========================================================================
  END HTML TO ADD FOR PRINT VERSION
  ========================================================================== -->

      
    </div>
        
    
    <img class="print_content displayNone" id="print-footer" src="/img/print-footer.png" />

    
    
    <div id="mainBACKGROUND" style="background:url(/theme/generic/css/images/images-fonds/SN-page-interne-D.jpg) no-repeat top right/cover;">
        <div class="mid"></div>
    </div>
    
    
    <script>
      $(document).ready(function(){ $('form input.token_input').tokenInput("/autocomplete/localite/", {theme: 'facebook', hintText:'',placeholder:'Saisissez votre choix ici...'}); });
    </script>
    








  	
  	
  </body>
  <!--site national -->
</html>

    http_version: null
  recorded_at: Tue, 31 Mar 2020 16:38:34 GMT
- request:
    method: get
    uri: https://www.century21.fr/trouver_logement/detail/1602757943/
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Tue, 31 Mar 2020 16:38:34 GMT
      Content-Type:
      - text/html; charset=utf-8
      Content-Length:
      - '30538'
      Server:
      - Apache
      Expires:
      - Wed, 01 Apr 2020 02:31:10 GMT
      Cache-Control:
      - max-age=43200
      Last-Modified:
      - Tue, 31 Mar 2020 14:31:10 GMT
      Vary:
      - Accept-Encoding,User-Agent
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        <!DOCTYPE html>
<!--[if lt IE 7 ]> <html lang="fr" class="no-js ie6"> <![endif]--><!--[if IE 7 ]><html lang="fr" class="no-js ie7"> <![endif]--><!--[if IE 8 ]><html lang="fr" class="no-js ie8"> <![endif]--><!--[if IE 9 ]>    <html lang="fr" class="no-js ie9"> <![endif]--><!--[if (gt IE 9)|!(IE)]><!--><html lang="fr" class="no-js"><!--<![endif]-->
  <head prefix="og: http://ogp.me/ns# fb: http://ogp.me/ns/fb# article: http://ogp.me/ns/article#">
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <!--[if lt IE 9]><script src="http://html5shim.googlecode.com/svn/trunk/html5.js"></script><![endif]-->
    <meta charset="utf-8" />
    
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1" /><script type="text/javascript">(window.NREUM||(NREUM={})).loader_config={licenseKey:"57291cc109",applicationID:"24270498"};window.NREUM||(NREUM={}),__nr_require=function(e,n,t){function r(t){if(!n[t]){var i=n[t]={exports:{}};e[t][0].call(i.exports,function(n){var i=e[t][1][n];return r(i||n)},i,i.exports)}return n[t].exports}if("function"==typeof __nr_require)return __nr_require;for(var i=0;i<t.length;i++)r(t[i]);return r}({1:[function(e,n,t){function r(){}function i(e,n,t){return function(){return o(e,[u.now()].concat(f(arguments)),n?null:this,t),n?void 0:this}}var o=e("handle"),a=e(4),f=e(5),c=e("ee").get("tracer"),u=e("loader"),s=NREUM;"undefined"==typeof window.newrelic&&(newrelic=s);var p=["setPageViewName","setCustomAttribute","setErrorHandler","finished","addToTrace","inlineHit","addRelease"],l="api-",d=l+"ixn-";a(p,function(e,n){s[n]=i(l+n,!0,"api")}),s.addPageAction=i(l+"addPageAction",!0),s.setCurrentRouteName=i(l+"routeName",!0),n.exports=newrelic,s.interaction=function(){return(new r).get()};var m=r.prototype={createTracer:function(e,n){var t={},r=this,i="function"==typeof n;return o(d+"tracer",[u.now(),e,t],r),function(){if(c.emit((i?"":"no-")+"fn-start",[u.now(),r,i],t),i)try{return n.apply(this,arguments)}catch(e){throw c.emit("fn-err",[arguments,this,e],t),e}finally{c.emit("fn-end",[u.now()],t)}}}};a("actionText,setName,setAttribute,save,ignore,onEnd,getContext,end,get".split(","),function(e,n){m[n]=i(d+n)}),newrelic.noticeError=function(e,n){"string"==typeof e&&(e=new Error(e)),o("err",[e,u.now(),!1,n])}},{}],2:[function(e,n,t){function r(e,n){var t=e.getEntries();t.forEach(function(e){"first-paint"===e.name?c("timing",["fp",Math.floor(e.startTime)]):"first-contentful-paint"===e.name&&c("timing",["fcp",Math.floor(e.startTime)])})}function i(e,n){var t=e.getEntries();t.length>0&&c("lcp",[t[t.length-1]])}function o(e){if(e instanceof s&&!l){var n,t=Math.round(e.timeStamp);n=t>1e12?Date.now()-t:u.now()-t,l=!0,c("timing",["fi",t,{type:e.type,fid:n}])}}if(!("init"in NREUM&&"page_view_timing"in NREUM.init&&"enabled"in NREUM.init.page_view_timing&&NREUM.init.page_view_timing.enabled===!1)){var a,f,c=e("handle"),u=e("loader"),s=NREUM.o.EV;if("PerformanceObserver"in window&&"function"==typeof window.PerformanceObserver){a=new PerformanceObserver(r),f=new PerformanceObserver(i);try{a.observe({entryTypes:["paint"]}),f.observe({entryTypes:["largest-contentful-paint"]})}catch(p){}}if("addEventListener"in document){var l=!1,d=["click","keydown","mousedown","pointerdown","touchstart"];d.forEach(function(e){document.addEventListener(e,o,!1)})}}},{}],3:[function(e,n,t){function r(e,n){if(!i)return!1;if(e!==i)return!1;if(!n)return!0;if(!o)return!1;for(var t=o.split("."),r=n.split("."),a=0;a<r.length;a++)if(r[a]!==t[a])return!1;return!0}var i=null,o=null,a=/Version\/(\S+)\s+Safari/;if(navigator.userAgent){var f=navigator.userAgent,c=f.match(a);c&&f.indexOf("Chrome")===-1&&f.indexOf("Chromium")===-1&&(i="Safari",o=c[1])}n.exports={agent:i,version:o,match:r}},{}],4:[function(e,n,t){function r(e,n){var t=[],r="",o=0;for(r in e)i.call(e,r)&&(t[o]=n(r,e[r]),o+=1);return t}var i=Object.prototype.hasOwnProperty;n.exports=r},{}],5:[function(e,n,t){function r(e,n,t){n||(n=0),"undefined"==typeof t&&(t=e?e.length:0);for(var r=-1,i=t-n||0,o=Array(i<0?0:i);++r<i;)o[r]=e[n+r];return o}n.exports=r},{}],6:[function(e,n,t){n.exports={exists:"undefined"!=typeof window.performance&&window.performance.timing&&"undefined"!=typeof window.performance.timing.navigationStart}},{}],ee:[function(e,n,t){function r(){}function i(e){function n(e){return e&&e instanceof r?e:e?c(e,f,o):o()}function t(t,r,i,o){if(!l.aborted||o){e&&e(t,r,i);for(var a=n(i),f=v(t),c=f.length,u=0;u<c;u++)f[u].apply(a,r);var p=s[y[t]];return p&&p.push([b,t,r,a]),a}}function d(e,n){h[e]=v(e).concat(n)}function m(e,n){var t=h[e];if(t)for(var r=0;r<t.length;r++)t[r]===n&&t.splice(r,1)}function v(e){return h[e]||[]}function g(e){return p[e]=p[e]||i(t)}function w(e,n){u(e,function(e,t){n=n||"feature",y[t]=n,n in s||(s[n]=[])})}var h={},y={},b={on:d,addEventListener:d,removeEventListener:m,emit:t,get:g,listeners:v,context:n,buffer:w,abort:a,aborted:!1};return b}function o(){return new r}function a(){(s.api||s.feature)&&(l.aborted=!0,s=l.backlog={})}var f="nr@context",c=e("gos"),u=e(4),s={},p={},l=n.exports=i();l.backlog=s},{}],gos:[function(e,n,t){function r(e,n,t){if(i.call(e,n))return e[n];var r=t();if(Object.defineProperty&&Object.keys)try{return Object.defineProperty(e,n,{value:r,writable:!0,enumerable:!1}),r}catch(o){}return e[n]=r,r}var i=Object.prototype.hasOwnProperty;n.exports=r},{}],handle:[function(e,n,t){function r(e,n,t,r){i.buffer([e],r),i.emit(e,n,t)}var i=e("ee").get("handle");n.exports=r,r.ee=i},{}],id:[function(e,n,t){function r(e){var n=typeof e;return!e||"object"!==n&&"function"!==n?-1:e===window?0:a(e,o,function(){return i++})}var i=1,o="nr@id",a=e("gos");n.exports=r},{}],loader:[function(e,n,t){function r(){if(!x++){var e=E.info=NREUM.info,n=d.getElementsByTagName("script")[0];if(setTimeout(s.abort,3e4),!(e&&e.licenseKey&&e.applicationID&&n))return s.abort();u(y,function(n,t){e[n]||(e[n]=t)}),c("mark",["onload",a()+E.offset],null,"api");var t=d.createElement("script");t.src="https://"+e.agent,n.parentNode.insertBefore(t,n)}}function i(){"complete"===d.readyState&&o()}function o(){c("mark",["domContent",a()+E.offset],null,"api")}function a(){return O.exists&&performance.now?Math.round(performance.now()):(f=Math.max((new Date).getTime(),f))-E.offset}var f=(new Date).getTime(),c=e("handle"),u=e(4),s=e("ee"),p=e(3),l=window,d=l.document,m="addEventListener",v="attachEvent",g=l.XMLHttpRequest,w=g&&g.prototype;NREUM.o={ST:setTimeout,SI:l.setImmediate,CT:clearTimeout,XHR:g,REQ:l.Request,EV:l.Event,PR:l.Promise,MO:l.MutationObserver};var h=""+location,y={beacon:"bam.nr-data.net",errorBeacon:"bam.nr-data.net",agent:"js-agent.newrelic.com/nr-1167.min.js"},b=g&&w&&w[m]&&!/CriOS/.test(navigator.userAgent),E=n.exports={offset:f,now:a,origin:h,features:{},xhrWrappable:b,userAgent:p};e(1),e(2),d[m]?(d[m]("DOMContentLoaded",o,!1),l[m]("load",r,!1)):(d[v]("onreadystatechange",i),l[v]("onload",r)),c("mark",["firstbyte",f],null,"api");var x=0,O=e(6)},{}],"wrap-function":[function(e,n,t){function r(e){return!(e&&e instanceof Function&&e.apply&&!e[a])}var i=e("ee"),o=e(5),a="nr@original",f=Object.prototype.hasOwnProperty,c=!1;n.exports=function(e,n){function t(e,n,t,i){function nrWrapper(){var r,a,f,c;try{a=this,r=o(arguments),f="function"==typeof t?t(r,a):t||{}}catch(u){l([u,"",[r,a,i],f])}s(n+"start",[r,a,i],f);try{return c=e.apply(a,r)}catch(p){throw s(n+"err",[r,a,p],f),p}finally{s(n+"end",[r,a,c],f)}}return r(e)?e:(n||(n=""),nrWrapper[a]=e,p(e,nrWrapper),nrWrapper)}function u(e,n,i,o){i||(i="");var a,f,c,u="-"===i.charAt(0);for(c=0;c<n.length;c++)f=n[c],a=e[f],r(a)||(e[f]=t(a,u?f+i:i,o,f))}function s(t,r,i){if(!c||n){var o=c;c=!0;try{e.emit(t,r,i,n)}catch(a){l([a,t,r,i])}c=o}}function p(e,n){if(Object.defineProperty&&Object.keys)try{var t=Object.keys(e);return t.forEach(function(t){Object.defineProperty(n,t,{get:function(){return e[t]},set:function(n){return e[t]=n,n}})}),n}catch(r){l([r])}for(var i in e)f.call(e,i)&&(n[i]=e[i]);return n}function l(n){try{e.emit("internal-error",n)}catch(t){}}return e||(e=i),t.inPlace=u,t.flag=a,t}},{}]},{},["loader"]);</script><script type="text/javascript">window.NREUM||(NREUM={});NREUM.info={"beacon":"bam.nr-data.net","queueTime":1,"licenseKey":"57291cc109","agent":"","transactionName":"ZAZbZxFSC0FQWxULVl1Mf0YNUBFbXlZOFAwdAFZeDlwLHFJZAgpcbAFQVg0JEkBQSBEHXWwVUFYU","applicationID":"24270498","errorBeacon":"bam.nr-data.net","applicationTime":26}</script>
    <meta name="verify-v1" content="vaH6Ww2qTnhkQOiN1kEHkZbdVNn0U5jLvWPO/+NwOIQ=" />
    
    <meta name="ROBOTS" content="index, follow" />
    <meta name="googlebot" content="index, follow" />
    
    
    <title>Appartement f3 3 pièces à vendre – PARIS (75012) – Ref. 43238 | CENTURY 21</title>
    <meta name="description" content="Appartement f3 à vendre de 3 pi&egrave;ces et de 59 m2 à PARIS . Consultez vite nos annonces immobilières de biens en vente - Century21.fr" />
    <meta name="keywords" content="Agences Immobilières, Immobilier, Achat, Vente, Location, Appartement, Maison, Parking, Terrain, Agence, Taux, Prix, Petites annonces">
    
        <meta property="twitter:account_id" content="1510100551" />
        <meta property="fb:admins" content="741613563" />
    

	<script type="text/javascript">
        function redirect_etendu()
        {
            var url = String(document.location);

            if (url.indexOf('#etendu#') != -1)
            {
                window.location.assign("/")
            }
        }
        redirect_etendu();
    </script>

    
    <meta property="og:title" content="Appartement f3 3 pièces à vendre – PARIS (75012) – Ref. 43238 | CENTURY 21"/>
    <meta property="og:description" content="Appartement f3 à vendre de 3 pi&egrave;ces et de 59 m2 à PARIS . Consultez vite nos annonces immobilières de biens en vente - Century21.fr"/>
    <meta property="og:image" content="https://www.century21.fr/imagesBien/202/557/c21_202_557_43238_8_4EAFCFE4-5A54-40D2-8E78-C660C1CEAAB8.jpg"/>
    
    
    <meta name="twitter:card" content= "summary" />    
    <meta name="twitter:site" content="@Century21France"/>
    <meta name="twitter:creator" content="@Century21France"/>    
    <meta  name="twitter:image" content="https://www.century21.fr/imagesBien/202/557/c21_202_557_43238_8_4EAFCFE4-5A54-40D2-8E78-C660C1CEAAB8.jpg"/>



    <link rel="canonical" href="https://www.century21.fr/trouver_logement/detail/1602757943/" />
    <!--[if gt IE 5 ]><link href="/theme/generic/css/styles-ie.css" rel="stylesheet" /><![endif]-->
    <!--[if IE 6 ]><link href="/theme/generic/css/styles-ie6.css" rel="stylesheet" /><![endif]-->
    <!--[if IE 7 ]><link href="/theme/generic/css/styles-ie7.css" rel="stylesheet" /><![endif]-->
    <!--[if IE 8 ]><link href="/theme/generic/css/styles-ie8.css" rel="stylesheet" /><![endif]-->

    
    
    <link href="/theme/bootstrap/css/bootstrap.used.css" rel="stylesheet" />
    <link rel="stylesheet" href="/css/jquery-ui.css">
  	<link rel="stylesheet" type="text/css" href="/theme/generic/css/qualitelis.css" media="all"/>
    <link rel="stylesheet" type="text/css" href="/theme/generic/css/qualitelis-agence.css" media="all"/>
    <link rel="stylesheet" href="/theme/generic/css/font-awesome/4.3.0/css/font-awesome.min.css">
    <link rel="stylesheet" type="text/css" href="/theme/generic/js/lib/owl-carousel-v2/assets/owl.carousel.css" />
  	<link rel="stylesheet" type="text/css" href="/theme/generic/js/lib/owl-carousel-v2/assets/owl.theme.default.min.css" />
    <link rel="stylesheet" type="text/css" href="/theme/generic/css/jquery.lightbox-0.5.css" media="all"/>
    <link rel="stylesheet" type="text/css" href="/theme/generic/js/lib/fancyapps-fancyBox/source/jquery.fancybox.css" media="all"/>
    <link rel="stylesheet" type="text/css" href="/theme/generic/js/lib/rateyo/jquery.rateyo.css" media="all"/>
    <link rel="stylesheet" type="text/css" href="/theme/generic/css/styles.css" media="all"/>
    <link rel="stylesheet" type="text/css" href="/css/common.css" media="all"/>
    <link rel="stylesheet" type="text/css" href="/theme/generic/css/print.css" media="print"/>
    <link rel="stylesheet" type="text/css" href="/theme/slider/css/styles.css" media="all"/>
    <link rel="stylesheet" type="text/css" href="/theme/generic/js/lib/odometer-0.4.6/css/odometer-theme-default.css" />
    <link rel="stylesheet" href="/theme/generic/css/c-combien/launch-defil-number.css">
    <link rel="stylesheet" type="text/css" href="/theme/generic/css/style-new-c21.css" media="all"/>
    <link href="/theme/generic/css/tailwind.css" rel="stylesheet">
    
    
    
  
  <link rel="stylesheet" type="text/css" href="/theme/generic/js/lib/owl-carousel-v2/assets/owl.carousel.css" />
  <link rel="stylesheet" type="text/css" href="/theme/generic/js/lib/owl-carousel-v2/assets/owl.theme.default.min.css" />
  <link rel="stylesheet" type="text/css" href="/theme/generic/js/lib/fancyapps-fancyBox/source/jquery.fancybox.css" media="all" />
  <link rel="stylesheet" type="text/css" href="/theme/generic/css/styles-a-proximite.css" media="all" />
  <link rel="stylesheet" type="text/css" href="/theme/generic/css/styles-detail-biens.css" media="all" />
  <link rel="stylesheet" href="/js/leaflet/leaflet.css" />
  <link rel="stylesheet" href="/js/mappy/L.Mappy.css" />
  
  

    
    <script type="text/javascript">
	  var IS_MOBILE = false;
	  var is_ice = "false";
      var HTTP_STATIC = "";
      var HTTP_PROTOCOL = "https";
      var TYPE_SITE = "NATIONAL";
  	  var SITE_TYPE = "NATIONAL";
      var DEBUG = false;
      var PARTICIPE_COLLECTE = 0;
	  var dateServer = new Date();
	  var anneeServer = dateServer.getFullYear();
	  var moisServer = dateServer.getMonth()+1;
	  var moisBg = (parseInt(dateServer.getMonth()+1) <10) ? '0' + parseInt(dateServer.getMonth()+1) : dateServer.getMonth()+1;
	  var heureBg = dateServer.getHours();
      var RECAPTCHA_PUBLIC_KEY =  "6LfQV88UAAAAADg8fB8wzTXISqSepbOVVR_0AeNb";
      
	  

	  


      
		var gaProperty = 'UA-3333689-1'
      
      if (window != top) top.location.href = window.location.href ;
      
    </script>
    <!--[if IE]><link rel="shortcut icon" href="/theme/generic/css/images/favicon.ico"><![endif]-->
    <link rel="icon" href="/theme/generic/css/images/favicon-16x16.png" />
    <link rel="apple-touch-icon" href="/theme/generic/css/images/apple-touch-icon.png" />


	
    
    <script type="text/javascript" src="/theme/generic/js/lib/jquery.js"></script>
    <script type="text/javascript" src="/theme/generic/js/uid-gen.js"></script>
    <script type="text/javascript" src="/theme/generic/js/lib/jquery-ui.js"></script>
    <script type="text/javascript" src="/theme/generic/js/lib/jquery.ui.touch-punch.min.js"></script>
	<script type="text/javascript" src="/theme/generic/js/lib/jquery-cookie.js"></script>
    <script type="text/javascript" src="/theme/generic/js/lib/jquery-slider-ui.js"></script>
    <script src="/theme/generic/js/lib/fancyapps-fancyBox/source/jquery.fancybox.js"></script>
    
    <script type="text/javascript" src="/theme/generic/js/lib/jquery.placeholder.js"></script>
    <script type="text/javascript" src="/theme/generic/js/lib/jtruncate.js"></script>
    <script type="text/javascript" src="/theme/bootstrap/js/bootstrap.min.js"></script>
    <script type="text/javascript" src="/theme/generic/js/lib/jquery-loader.js"></script>

    <script type="text/javascript" src="/theme/generic/js/lib/jcarousellite_1.0.1.min.js"></script>
    <script src="/theme/generic/js/lib/owl-carousel-v2/owl.carousel.js"></script>
    <script type="text/javascript" src="/theme/generic/js/lib/jquery.lightbox-0.5.min.js"></script>
    <script type="text/javascript" src="/theme/generic/js/lib/jquery-animation-background.js"></script>
    <script type="text/javascript" src="/theme/generic/js/lib/jquery-easing.js"></script>
    <script type="text/javascript" src="/theme/generic/js/lib/jquery-boxShadow.js"></script>
    <script type="text/javascript" src="/theme/generic/js/lib/rateyo/jquery.rateyo.js"></script>
    <script type="text/javascript" src="/theme/generic/js/scripts.js"></script>
    <script type="text/javascript" src="/theme/generic/js/scripts-star-rating.js"></script>
    <script type="text/javascript" src="/js/calculette.js"></script>
    <script type="text/javascript" src="/js/dept.js"></script>
    <script src="https://www.google.com/recaptcha/api.js?render=6LfQV88UAAAAADg8fB8wzTXISqSepbOVVR_0AeNb"></script>
    <script type="text/javascript" src="/js/common.js?t=2"></script>
    <script type="text/javascript" src="/js/jquery.tokeninput.js"></script>
    
    

    
    
    
  <!--[if lt IE 9]><script language="javascript" type="text/javascript" src="/theme/generic/js/lib/jquery.jqplot/excanvas.js"></script><![endif]-->
  <script type="text/javascript">
   
   	var points =  [];
   	var bien = false;
   	points = [{"capital_social": "80 000 €", "ville": "PARIS", "code": 557, "tel": "01 53 46 60 00 ", "uid": 85029, "ref_reseau": 81317, "non_detention_fonds": false, "region_nom": "ILE-DE-FRANCE", "coordonnees_siege_social": "86 avenue Ledru-Rollin 75012 PARIS", "complement_adresse": null, "lng": 2.37521389581224, "departement_nom": "Paris", "nom_garant": "GALIAN", "numero_cartepro": "CPI 7501 2016 000 015 947", "nom_departement": "Paris", "adresse_garant": "89, rue La Boétie 75008 PARIS", "etat_membre_cartepro": "France", "source": "202/557/webmaster_1_202_557_0_2_0.jpg", "forme_juridique": "", "sites_all": {"GROUPE": {"url_fr": "www.century21-chorus-paris.com", "ref_type_maquette": 1, "uid": 317345541, "affiche_c21": 1, "url_fr_aff": "century21-chorus-paris.com", "analytique": "UA-42353358-1", "type_site_web": "GROUPE", "url_en": "en.century21-chorus-paris.com", "url_facebook": null, "affiche_facebook_likebox": false}, "AGENCE": {"url_fr": "www.century21-chorus.com", "ref_type_maquette": 1, "uid": 317345543, "affiche_c21": 1, "url_fr_aff": "century21-chorus.com", "analytique": "UA-42364232-1", "type_site_web": "AGENCE", "url_en": "en.century21-chorus.com", "url_facebook": "https://www.facebook.com/pages/Paris-France/CENTURY-21-Chorus-a-Paris-12/118083361540600", "affiche_facebook_likebox": true}}, "siret": "40273493300029", "mail": "chorus@century21.fr", "ville_rcs": "", "nb_locations_ice": 0, "activites_agence": [{"activite_agence": "Gestion Locative", "euid": "2"}, {"activite_agence": "Location", "euid": "4"}, {"activite_agence": "Transaction", "euid": "1"}], "nom": "CENTURY 21 Chorus", "adresse_emetteur_cartepro": "35, bld du Port - Cap Cergy - Bât. C - 95031 CERGY-PONTOISE", "url_mediateur": "https://medimmoconso.fr/adresser-une-reclamation/", "sites": {"GROUPE": {"url_fr": "www.century21-chorus-paris.com", "ref_type_maquette": 1, "uid": 317345541, "affiche_c21": 1, "url_fr_aff": "century21-chorus-paris.com", "analytique": "UA-42353358-1", "type_site_web": "GROUPE", "url_en": "en.century21-chorus-paris.com", "url_facebook": null, "affiche_facebook_likebox": false}, "AGENCE": {"url_fr": "www.century21-chorus.com", "ref_type_maquette": 1, "uid": 317345543, "affiche_c21": 1, "url_fr_aff": "century21-chorus.com", "analytique": "UA-42364232-1", "type_site_web": "AGENCE", "url_en": "en.century21-chorus.com", "url_facebook": "https://www.facebook.com/pages/Paris-France/CENTURY-21-Chorus-a-Paris-12/118083361540600", "affiche_facebook_likebox": true}}, "nb_ventes": 10, "adresse": "86  avenue Ledru-Rollin", "departement": "75", "nom_mediateur": "Association MEDIMMOCONSO", "code_rcs": "402734933", "nb_locations": 0, "lat": 48.8503568246458, "region_uid": 13, "code_postal": "75012", "raison_sociale": "Chorus Immobilier", "absolute_url": "/trouver_agence/agence/85029/", "nb_ventes_ice": 0, "email_mediateur": "contact@medimmoconso.fr", "num_decla_tva": "", "horaires": [{"nom": "Lundi", "aprem": false, "debut_1": "09:30", "debut_2": "", "sans_interruption": true, "fin_2": "19:00", "fin_1": "", "sur_rdv_matin": false, "matin": false, "actif": true, "sur_rdv_aprem": false}, {"nom": "Mardi", "aprem": false, "debut_1": "09:30", "debut_2": "", "sans_interruption": true, "fin_2": "19:00", "fin_1": "", "sur_rdv_matin": false, "matin": false, "actif": true, "sur_rdv_aprem": false}, {"nom": "Mercredi", "aprem": false, "debut_1": "09:30", "debut_2": "", "sans_interruption": true, "fin_2": "19:00", "fin_1": "", "sur_rdv_matin": false, "matin": false, "actif": true, "sur_rdv_aprem": false}, {"nom": "Jeudi", "aprem": false, "debut_1": "09:30", "debut_2": "", "sans_interruption": true, "fin_2": "19:00", "fin_1": "", "sur_rdv_matin": false, "matin": false, "actif": true, "sur_rdv_aprem": false}, {"nom": "Vendredi", "aprem": false, "debut_1": "09:30", "debut_2": "", "sans_interruption": true, "fin_2": "19:00", "fin_1": "", "sur_rdv_matin": false, "matin": false, "actif": true, "sur_rdv_aprem": false}, {"nom": "Samedi", "aprem": false, "debut_1": "10:00", "debut_2": "", "sans_interruption": true, "fin_2": "19:00", "fin_1": "", "sur_rdv_matin": false, "matin": false, "actif": true, "sur_rdv_aprem": false}], "adresse_mediateur": "1 Allée du Parc de Mesemena - Bât A - CS25222 - 44505 LA BAULE CEDEX", "ref_agence": 85029, "numero_orias": "", "nom_emetteur_cartepro": "CCI Paris Île-de-France", "euid": "202_557"}];
    
        bien = [{ 'type': "bien-geolocalise", 'agence': {"capital_social": "80 000 €", "ville": "PARIS", "code": 557, "tel": "01 53 46 60 00 ", "uid": 85029, "ref_reseau": 81317, "non_detention_fonds": false, "region_nom": "ILE-DE-FRANCE", "coordonnees_siege_social": "86 avenue Ledru-Rollin 75012 PARIS", "complement_adresse": null, "lng": 2.37521389581224, "departement_nom": "Paris", "nom_garant": "GALIAN", "numero_cartepro": "CPI 7501 2016 000 015 947", "nom_departement": "Paris", "adresse_garant": "89, rue La Boétie 75008 PARIS", "etat_membre_cartepro": "France", "source": "202/557/webmaster_1_202_557_0_2_0.jpg", "forme_juridique": "", "sites_all": {"GROUPE": {"url_fr": "www.century21-chorus-paris.com", "ref_type_maquette": 1, "uid": 317345541, "affiche_c21": 1, "url_fr_aff": "century21-chorus-paris.com", "analytique": "UA-42353358-1", "type_site_web": "GROUPE", "url_en": "en.century21-chorus-paris.com", "url_facebook": null, "affiche_facebook_likebox": false}, "AGENCE": {"url_fr": "www.century21-chorus.com", "ref_type_maquette": 1, "uid": 317345543, "affiche_c21": 1, "url_fr_aff": "century21-chorus.com", "analytique": "UA-42364232-1", "type_site_web": "AGENCE", "url_en": "en.century21-chorus.com", "url_facebook": "https://www.facebook.com/pages/Paris-France/CENTURY-21-Chorus-a-Paris-12/118083361540600", "affiche_facebook_likebox": true}}, "siret": "40273493300029", "mail": "chorus@century21.fr", "ville_rcs": "", "nb_locations_ice": 0, "activites_agence": [{"activite_agence": "Gestion Locative", "euid": "2"}, {"activite_agence": "Location", "euid": "4"}, {"activite_agence": "Transaction", "euid": "1"}], "nom": "CENTURY 21 Chorus", "adresse_emetteur_cartepro": "35, bld du Port - Cap Cergy - Bât. C - 95031 CERGY-PONTOISE", "url_mediateur": "https://medimmoconso.fr/adresser-une-reclamation/", "sites": {"GROUPE": {"url_fr": "www.century21-chorus-paris.com", "ref_type_maquette": 1, "uid": 317345541, "affiche_c21": 1, "url_fr_aff": "century21-chorus-paris.com", "analytique": "UA-42353358-1", "type_site_web": "GROUPE", "url_en": "en.century21-chorus-paris.com", "url_facebook": null, "affiche_facebook_likebox": false}, "AGENCE": {"url_fr": "www.century21-chorus.com", "ref_type_maquette": 1, "uid": 317345543, "affiche_c21": 1, "url_fr_aff": "century21-chorus.com", "analytique": "UA-42364232-1", "type_site_web": "AGENCE", "url_en": "en.century21-chorus.com", "url_facebook": "https://www.facebook.com/pages/Paris-France/CENTURY-21-Chorus-a-Paris-12/118083361540600", "affiche_facebook_likebox": true}}, "nb_ventes": 10, "adresse": "86  avenue Ledru-Rollin", "departement": "75", "nom_mediateur": "Association MEDIMMOCONSO", "code_rcs": "402734933", "nb_locations": 0, "lat": 48.8503568246458, "region_uid": 13, "code_postal": "75012", "raison_sociale": "Chorus Immobilier", "absolute_url": "/trouver_agence/agence/85029/", "nb_ventes_ice": 0, "email_mediateur": "contact@medimmoconso.fr", "num_decla_tva": "", "horaires": [{"nom": "Lundi", "aprem": false, "debut_1": "09:30", "debut_2": "", "sans_interruption": true, "fin_2": "19:00", "fin_1": "", "sur_rdv_matin": false, "matin": false, "actif": true, "sur_rdv_aprem": false}, {"nom": "Mardi", "aprem": false, "debut_1": "09:30", "debut_2": "", "sans_interruption": true, "fin_2": "19:00", "fin_1": "", "sur_rdv_matin": false, "matin": false, "actif": true, "sur_rdv_aprem": false}, {"nom": "Mercredi", "aprem": false, "debut_1": "09:30", "debut_2": "", "sans_interruption": true, "fin_2": "19:00", "fin_1": "", "sur_rdv_matin": false, "matin": false, "actif": true, "sur_rdv_aprem": false}, {"nom": "Jeudi", "aprem": false, "debut_1": "09:30", "debut_2": "", "sans_interruption": true, "fin_2": "19:00", "fin_1": "", "sur_rdv_matin": false, "matin": false, "actif": true, "sur_rdv_aprem": false}, {"nom": "Vendredi", "aprem": false, "debut_1": "09:30", "debut_2": "", "sans_interruption": true, "fin_2": "19:00", "fin_1": "", "sur_rdv_matin": false, "matin": false, "actif": true, "sur_rdv_aprem": false}, {"nom": "Samedi", "aprem": false, "debut_1": "10:00", "debut_2": "", "sans_interruption": true, "fin_2": "19:00", "fin_1": "", "sur_rdv_matin": false, "matin": false, "actif": true, "sur_rdv_aprem": false}], "adresse_mediateur": "1 Allée du Parc de Mesemena - Bât A - CS25222 - 44505 LA BAULE CEDEX", "ref_agence": 85029, "numero_orias": "", "nom_emetteur_cartepro": "CCI Paris Île-de-France", "euid": "202_557"} }];
        
            bien[0].lng = 2.37868;
            bien[0].lat = 48.8467;
        

    
   
   
   var ONGLETS = [
   ];
   var printUrl = "/trouver_logement/detail/1602757943/print/";
   

   function get_alerte_add_url() {
     return null;
   }   
   var HTTP_STATIC = "";	
   $(document).ready(function() { 
	   
	   dataLayer.push({
		  'product_page_id' : '1602757943',
		  'product_page_euid' : '202_557_43238'
	   });
	   init_menuSUBWAY();
   });
  </script>
  
  <script src="/theme/generic/js/lib/owl-carousel-v2/owl.carousel.js"></script>
  <script src="/theme/generic/js/lib/fancyapps-fancyBox/source/jquery.fancybox.js"></script>
  <script type="text/javascript" src="/js/gmap.js"></script>

  <script src="/theme/generic/js/scripts-detail-biens.js"></script>
  <script src="/js/leaflet/leaflet.js"></script>
  <script type="text/javascript" src="/js/mappy/L.Mappy.js"></script>  
  


    <meta property="fb:admins" content="100001097395315" />
    <script>
      var ACTIVITE_CENTURA = "";
      var CACHE_POPUP_ANNONCE = {};
      var UID_BIEN = [];
      var overPopupService = 0;
      var DEV_ENV = false;

      
      

      
      function fix_articles(){
      $('.articles_cont').each(function(){

      
      if ($(this).find('.articles').length && $(this).find('.articles').html().trim() == ''){
      $(this).hide();
      }

      
      var link = $(this).find('.articles_link').attr('href');
      $(this).find('.get_articles_link').attr('href', link);
      });
      }

      $(document).ready(function() {
       /* fix_articles();*/
      });

      

      //if (!_gaq.push) _gaq.push = function () { };

		

			var _gaq = _gaq || [];
			_gaq.push(['_setAccount', 'UA-3333689-1']);
			_gaq.push(['_setDomainName', 'century21.fr']);
			_gaq.push(['_setAllowLinker', true]);
			_gaq.push(['_trackPageview']);

			(function() {
                var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
                ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
                var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
			})();


		
	
    </script>


    
	<script>
	  dataLayer =  [{
		  		

            'env_work': 'Prod',
            'env_site': 'SITE NATIONAL',
            'env_device': 'Desktop',
            'env_template': 'Generique',
            'event' : '',
            'pagename': 'Appartement F3 &agrave; vendre - 3 pi&egrave;ces - 59 m2 - PARIS - 75012 - ILE-DE-FRANCE',
            'pageCategory1': '/trouver_logement/detail/1602757943/',
            'pageCategory2': '',
            'pageCategory3': '',
            'visitorStatus': '',
            'type compte' : ''
           // 'ip': ''

				   
					}];


 
	</script>
    
    
    <script>
		(function(w,d,s,l,i)
		{
			w[l]=w[l]||[];
			w[l].push({'gtm.start': new Date().getTime(),event:'gtm.js'});
			var f=d.getElementsByTagName(s)[0],j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';
			j.async=true;
			j.src='https://www.googletagmanager.com/gtm.js?id='+i+dl;
			f.parentNode.insertBefore(j,f);
		})
		(window,document,'script','dataLayer','GTM-P8DRVBV');


	</script>

  

	
	<script>
    (function(h,o,t,j,a,r){
        h.hj=h.hj||function(){(h.hj.q=h.hj.q||[]).push(arguments)};
        h._hjSettings={hjid:1294600,hjsv:6};
        a=o.getElementsByTagName('head')[0];
        r=o.createElement('script');r.async=1;
        r.src=t+h._hjSettings.hjid+j+h._hjSettings.hjsv;
        a.appendChild(r);
    })(window,document,'https://static.hotjar.com/c/hotjar-','.js?sv=');
	</script>
	


	
	
  </head>

  <body id="site" class="detail_bien relooking page-xl base-site-nat">
  	<!-- Google Tag Manager (noscript) -->
		<noscript>
			<iframe src="https://www.googletagmanager.com/ns.html?id=GTM-P8DRVBV" height="0" width="0" style="display:none;visibility:hidden"></iframe>
		</noscript>
	<!-- End Google Tag Manager (noscript) -->
  
  
  
    
    


    
    <div id="main">
        <!--BANDEAU MESSAGE COOKIE CNIL-->
        <div id="bandeauCookie">
        </div>

      <div id="lineTop">
        <div class="mid">
          <div class="content">
            <ul class="posL">
              
              <li><span><a href="/fiches/a_propos/" onclick="google_tag_event('Menu,Click,A Propos');">A propos de CENTURY 21</a></span></li>
              <li><span><a href="/fiches/a_propos/century21/international/" onclick="google_tag_event('Menu,Click,International');">International</a></span></li>
              <li><span><a href="/trouver_agence/" onclick="google_tag_event('Menu,Click,Nos Agences Immobilières');">Nos agences immobilières</a></span></li>
              <li><span><a href="/fiches/a_propos/le_blog_immobilier/" onclick="google_tag_event('Menu,Click,Blog Immobilier');">Blog immobilier</a></span></li>
              
            </ul>
            <ul class="posR">
            	
            	<li>
                	<form id="rechercheSITE" action="/text_search/" method="get">
                  	<input type="text" id="inputRECHERCHESITE" name="q" placeholder="Rechercher sur le site" />
                  	<a id="btnMOTEURFULLTEXT">OK</a>
                	</form>
              	</li>
              	
			  
             	<li>
					<a id="btnMONCOMPTE2" href="/accounts/">
						Mon compte
					</a>
			 	</li>
              
              
			 <li class="social">
				<a rel="noopener" href="https://www.facebook.com/Century21France" target="_blank" onclick="google_tag_event('Menu,Click,Facebook');" title="Facebook"><i class="fa fa-2x fa-facebook" aria-hidden="true"></i></a>
			 </li>
			

			
			<li class="social">
				  <a rel="noopener" href="https://twitter.com/century21fr" target="_blank" onclick="google_tag_event('Menu,Click,Twitter');" title="Twitter"><i class="fa fa-2x fa-twitter" aria-hidden="true"></i></a>
			 </li>
			
            
			<li class="social">
				  <a rel="noopener" href="https://www.linkedin.com/company/century-21-france/" target="_blank" onclick="google_tag_event('Menu,Click,Linkedin');" title="Linkedin"><i class="fa fa-linkedin fa-2x" aria-hidden="true"></i></a>
			 </li>
			
            
			<li class="social">
				  <a rel="noopener" href="https://www.instagram.com/century21fr/" target="_blank" onclick="google_tag_event('Menu,Click,Instagram');" title="Instagram"><i class="fa fa-instagram fa-2x" aria-hidden="true"></i></a>
			</li>
			
            
            <li class="social">
				  <a rel="noopener" href="https://www.youtube.com/user/century21france" target="_blank" onclick="google_tag_event('Menu,Click,Youtube');" title="Youtube"><i class="fa fa-youtube fa-2x" aria-hidden="true"></i></a>
			</li>
            
             
              <li>
             	<a rel="noopener" class="picto-bot-c21" href="https://www.messenger.com/t/Century21France" target="_blank" onclick="google_tag_event('Menu,Click,Messenger');">
             		<img src="/theme/generic/css/images/op-marque/bot-messenger-century21.svg" alt="le Bot CENTURY 21" height="24px" width="24px" title="le Bot CENTURY 21">
             	</a>
             </li>
             
            </ul>
          </div>
        </div>
      </div>
      
      
      

      
      <header id="mainHeader">
        
        <div class="mid o-top-bar__content tw-flex tw-items-center tw-bg-c21-gold">
          <div class="content tw-container tw-mx-auto">
          	<ul>
          		<li>
          			<a href="/" id="btnLogo"
               title="Retour à l'accueil CENTURY 21, N°1 des agences immobilières dans le monde">
          				<img src="/theme/generic/css/images/op-marque/logo_c21.svg" alt="Retour à l'accueil CENTURY 21, N°1 des agences immobilières dans le monde" width="200px" height="23px" />
          				
					</a>
				</li>
          		<li class="link-nav">
          			<a class="active" href="/acheter/" onclick="google_tag_event('Menu,Click,Acheter');">ACHETER</a>
          		</li>
          		<li class="link-nav">
          			<a  href="/louer/" onclick="google_tag_event('Menu,Click,Louer');">LOUER</a>
          		</li>
          		<li class="link-nav">
          			<a  href="/outils/vendre/" onclick="google_tag_event('Menu,Click,Vendre');">VENDRE</a>
          		</li>
          		<li class="link-nav">
          			<a  href="/outils/faire_gerer/" onclick="google_tag_event('Menu,Click,Faire Gerer');">FAIRE G&Eacute;RER</a>
          		</li>
          		<li class="link-nav">
          			<a href="/commerce_entreprises/" onclick="google_tag_event('Menu,Click,Entreprise Et Commerce');">ENTREPRISE ET COMMERCE</a>
          		</li>
          		<li>
          			<a rel="noopener" href="https://www.lesmeilleurstalents.com" target="_blank" onclick="google_tag_event('Menu,Click,Offres Emploi');">OFFRES D'EMPLOI</a>
          		</li>
          		<li><a rel="noopener" href="https://franchise.century21.fr/" target="_blank" onclick="google_tag_event('Menu,Click,Devenir Franchise');">DEVENIR FRANCHIS&Eacute;</a></li>
          	</ul>
          </div>
          <div class="print_content displayNone">
            <span class="titre_h2">CENTURY 21, N°1 des agences immobilières dans le monde</span>
          </div>
        </div>
        
        
      </header>
      
      

      	
      	


      

      
      
      

      
      <div id="page">
        <div class="mid">
          
          
<!--FOND OPAQUE POUR DETAIL DE BIEN-->
<div class="fondDetail"></div>

<!-- AFFICHER LE NUM TEL DE LAG-->

<div id="numTelDiv" class="numTelAg miniPopupService">
  <a id="fermerNumTel" class="pictoBtnFermer floatR margT10 margR15"></a>
    
    <span class="telAg">
      Tél : 01 53 46 60 00 
    </span>
    
</div>


<!--code ag :557 -->

 <div id="contactAgDiv" class="form-design ajax_form_container tw-hidden displayNone">
  <div class="content_contactAg">
  
   <form id="contact_agence_form" method="post" action="/trouver_agence/contact_agence/85029/" class="recaptchav3"
        onsubmit="contact_agence(this);google_tag_event('bien,envoi_msg_ag,557'); return false;">
    <input type="hidden" name="g-recaptcha-response"/>
    
    
    <input type="hidden" name="activite_centura" value=""/>
    <label for="id_nom">Nom* :</label>
    <input id="id_nom" name="nom" type="text" />
    
    <div class="reset"></div>
    <label for="id_mail">Email* :</label>
    <input id="id_mail" name="mail" type="email" />
    
    <div class="reset"></div>
    <label for="id_telephone">Téléphone* :</label>
    <input id="id_telephone" name="telephone" type="text" />
    
    <div class="reset"></div>
    <textarea cols="40" id="id_message" name="message" placeholder="Tapez votre message ici *" rows="10">
Je suis intéressé par le bien : APPARTEMENT F3 - 749 000 €   - PARIS (75012) - réf : 43238</textarea>
    
    
    <input id="id_reference_bien" name="reference_bien" type="hidden" />
    
    <input id="id_uid_bien" name="uid_bien" type="hidden" value="1602757943" />
    
    <input id="id_nom_programme" name="nom_programme" type="hidden" />
    
    <input id="id_ville_programme" name="ville_programme" type="hidden" />
    
    <input id="id_ice" name="ice" type="hidden" value="false" />
    
    <div class="reset"></div>
    <br>
    <div class="zone-optin-form-estim">
	<label for="id_optin_contact" class="tw-pointer font16">
		<input id="id_optin_contact" name="optin_contact" type="checkbox" style="width: 30px;min-width: 30px;height: 30px;">
	  Je souhaite pouvoir être recontacté pour être informé de toutes les actualités CENTURY&nbsp;21
	</label>
	</div>
   <br>
    <div class="reset"></div>
    <input type="button" onclick="google_tag_event('Envoi Message Detail Bien,Click,Envoi Message Detail Bien_Achat'); contact_agence($('#contact_agence_form'));" value="Envoyer" class="fR moreYellow black margT10">
    <div class="reset"></div>
    <br><br>
    <p class="font10 LH12 justify">
		Century 21 collecte des données à caractère personnel afin de permettre au service réclamation de traiter au mieux votre demande. Les données mentionnées d'un * sont obligatoires. Conformément à la règlementation, vous disposez d'un droit d'accès, de rectification, de portabilité, d'effacement, de limitation du traitement et d'opposition au traitement. Ces droits peuvent être exercés à l'adresse <img style="display: inline-block; vertical-align: text-bottom;" src="/theme/generic/css/images/dpo-mail-black-10px.png">. Pour plus d'information <a class="link-mention black underline" href="/fiches/protection-des-donnees/" target="_blank">cliquez ici</a>.
	</p>
  </form>
  <script>
	$(document).ready(function(){
		if(window.location.href.indexOf("commerce_entreprises") > -1) {
       		$(".link-mention").attr("href","/commerce_entreprises/fiches/protection-des-donnees/");
    	}
	});
</script>
  
  </div>
</div>




          <div class="content">
            <div class="wrap">
              
<div id="boite-outil2">
	<ul>
    	<li>
        	<a class="btn-add" title="Ajouter à ma sélection" onclick="toggleSelection(this,'/accounts/selection/add/1602757943/','/accounts/selection/del/1602757943/');google_tag_event('bien-boite-outil-V2,Click,ajouter-a-ma-selection');">
            	<i class="fa fa-star fa-3x"></i>
            </a>
        </li>
    	<li><a class="tool_print" onclick="google_tag_event('Impression_fiche,Click,Impression_fiche');" title="Imprimer"><i class="fa fa-print fa-3x"></i></a></li>
    	<li>
        	<a class="btnSendFriend" rel="/mailer_un_ami/?url=/trouver_logement/detail/1602757943/" onclick="google_tag_event('bien-boite-outil-V2,Click,btn-envoi-ami');" title="Envoyer à un ami">
        		<i class="fa fa-envelope-o fa-3x"></i>
            </a>
        </li>
    	<li><a class="fancybox" href="#popupReseauxSociauxAG" onclick="google_tag_event('bien-boite-outil-V2,Click,partager-reseaux-sociaux');" title="Partager sur les réseaux sociaux"><i class="fa fa-share-alt fa-3x"></i></a>
        </li>
        
        
    </ul>
</div>


              

              

<div id="filAriane">
  <ol itemscope itemtype="http://schema.org/BreadcrumbList">
    
   <li itemprop="itemListElement" itemscope itemtype="http://schema.org/ListItem">
    
    <a href="/" itemprop="item">
        <span itemprop="name">Immobilier</span>
      </a>
      <meta itemprop="position" content="1">
   </li>
    
   <li itemprop="itemListElement" itemscope itemtype="http://schema.org/ListItem">
    
    <span class="fL margR10">›</span>
    
    <a href="/acheter/" itemprop="item">
        <span itemprop="name">Achat</span>
      </a>
      <meta itemprop="position" content="2">
   </li>
    
   <li itemprop="itemListElement" itemscope itemtype="http://schema.org/ListItem">
    
    <span class="fL margR10">›</span>
    
    <a href="/edito/achat-appartement/" itemprop="item">
        <span itemprop="name">Achat Appartement</span>
      </a>
      <meta itemprop="position" content="3">
   </li>
    
   <li itemprop="itemListElement" itemscope itemtype="http://schema.org/ListItem">
    
    <span class="fL margR10">›</span>
    
    <a href="/annonces/achat-appartement/cp-75012/s-0-/st-0-/b-0-/page-1/" itemprop="item">
        <span itemprop="name">Achat Appartement PARIS (75012)</span>
      </a>
      <meta itemprop="position" content="4">
   </li>
    
  </ol>
</div>



              <div class="outils_top_right">
                
    
    	<a class="btnRetourPage fR"></a>
    
    
    
    <div class="reset"></div>

              </div>

              
	<div class="reset"></div>
	<h1 class="h1_page">Appartement F3 &agrave; vendre - 3 pi&egrave;ces - 59 m2 - PARIS - 75012 - ILE-DE-FRANCE</h1>


              

              



              
<div class="fondAnnonce">
  






	
	
        <div id="focusAnnonceV2">
          <div class="displayNone">
            
            <div id="popupReseauxSociauxAG">
                <script>
                    $("#popupReseauxSociauxAG").ready(function(){
                        $('head').append( $('<link rel="stylesheet" type="text/css" />').attr('href', '/theme/generic/js/lib/rrssb-master-v2/css/rrssb.css') );
                        $.getScript("/theme/generic/js/lib/rrssb-master-v2/js/rrssb.min.js");
                    });
                </script>
                <strong class="font20">
                    Partager cette annonce sur :
                </strong>
                <ul class="rrssb-buttons clearfix">
                    <li class="rrssb-facebook">
                        <!-- Replace with your URL. For best results, make sure you page has the proper FB Open Graph tags in header:
                        https://developers.facebook.com/docs/opengraph/howtos/maximizing-distribution-media-content/ -->
                        <a href="https://www.facebook.com/sharer/sharer.php?u=www.century21.fr/trouver_logement/detail/1602757943/" class="popup"
                           onClick="google_tag_event('Partage_Facebook,Share,Partage_Facebook');">
                            <span class="rrssb-icon">
                                <svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" width="28px" height="28px" viewBox="0 0 28 28" enable-background="new 0 0 28 28" xml:space="preserve">
                                    <path d="M27.825,4.783c0-2.427-2.182-4.608-4.608-4.608H4.783c-2.422,0-4.608,2.182-4.608,4.608v18.434
                                        c0,2.427,2.181,4.608,4.608,4.608H14V17.379h-3.379v-4.608H14v-1.795c0-3.089,2.335-5.885,5.192-5.885h3.718v4.608h-3.726
                                        c-0.408,0-0.884,0.492-0.884,1.236v1.836h4.609v4.608h-4.609v10.446h4.916c2.422,0,4.608-2.188,4.608-4.608V4.783z"/>
                                </svg>
                            </span>
                            <span class="rrssb-text">facebook</span>
                        </a>
                    </li>
                    <li class="rrssb-twitter">
                        <!-- Replace href with your Meta and URL information  -->
                        <a href="https://twitter.com/intent/tweet/?text=Annonce:&amp;url=https%3A//www.century21.fr/trouver_logement/detail/1602757943/&amp;hashtags=century21" 						
						
						class="popup"
                           onClick="google_tag_event('Partage_Twitter,Share,Partage_Twitter');">
                            <span class="rrssb-icon">
                                <svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
                                     width="28px" height="28px" viewBox="0 0 28 28" enable-background="new 0 0 28 28" xml:space="preserve">
                                <path d="M24.253,8.756C24.689,17.08,18.297,24.182,9.97,24.62c-3.122,0.162-6.219-0.646-8.861-2.32
                                    c2.703,0.179,5.376-0.648,7.508-2.321c-2.072-0.247-3.818-1.661-4.489-3.638c0.801,0.128,1.62,0.076,2.399-0.155
                                    C4.045,15.72,2.215,13.6,2.115,11.077c0.688,0.275,1.426,0.407,2.168,0.386c-2.135-1.65-2.729-4.621-1.394-6.965
                                    C5.575,7.816,9.54,9.84,13.803,10.071c-0.842-2.739,0.694-5.64,3.434-6.482c2.018-0.623,4.212,0.044,5.546,1.683
                                    c1.186-0.213,2.318-0.662,3.329-1.317c-0.385,1.256-1.247,2.312-2.399,2.942c1.048-0.106,2.069-0.394,3.019-0.851
                                    C26.275,7.229,25.39,8.196,24.253,8.756z"/>
                                </svg>
                           </span>
                            <span class="rrssb-text">twitter</span>
                        </a>
                    </li>   
                    <li class="rrssb-linkedin">
                        <!-- Replace href with your meta and URL information -->
                        <a href="http://www.linkedin.com/shareArticle?mini=true&amp;url=www.century21.fr/trouver_logement/detail/1602757943/" class="popup"
                           onClick="google_tag_event('Partage_Linkedin,Share,Partage_Linkedin');">
                            <span class="rrssb-icon">
                                <svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" width="28px" height="28px" viewBox="0 0 28 28" enable-background="new 0 0 28 28" xml:space="preserve">
                                    <path d="M25.424,15.887v8.447h-4.896v-7.882c0-1.979-0.709-3.331-2.48-3.331c-1.354,0-2.158,0.911-2.514,1.803
                                        c-0.129,0.315-0.162,0.753-0.162,1.194v8.216h-4.899c0,0,0.066-13.349,0-14.731h4.899v2.088c-0.01,0.016-0.023,0.032-0.033,0.048
                                        h0.033V11.69c0.65-1.002,1.812-2.435,4.414-2.435C23.008,9.254,25.424,11.361,25.424,15.887z M5.348,2.501
                                        c-1.676,0-2.772,1.092-2.772,2.539c0,1.421,1.066,2.538,2.717,2.546h0.032c1.709,0,2.771-1.132,2.771-2.546
                                        C8.054,3.593,7.019,2.501,5.343,2.501H5.348z M2.867,24.334h4.897V9.603H2.867V24.334z"/>
                                </svg>
                            </span>
                            <span class="rrssb-text">linkedin</span>
                        </a>
                    </li>
                </ul>
            </div>

            

          </div>
          



	<script type="text/javascript">
    	$(document).ready(function() {
            init_galleriePhotoBien();
			if($(".btn-trans-lang").length){
				show_translate_text();
			}
            
    		$.map(['/imagesBien/202/557/c21_202_557_43238_8_4EAFCFE4-5A54-40D2-8E78-C660C1CEAAB8.jpg','/imagesBien/202/557/c21_202_557_43238_8_BE55E6F3-9515-4A4B-9FD3-CC5318726FDC.jpg','/imagesBien/202/557/c21_202_557_43238_8_C8B71A1C-A3A6-446A-A2C1-A35E6C56CEEF.jpg','/imagesBien/202/557/c21_202_557_43238_8_5AE92634-A77A-469C-AA07-89C04875D3B7.jpg','/imagesBien/202/557/c21_202_557_43238_8_B111AA72-FE75-4479-9EEF-529A07675110.jpg','/imagesBien/202/557/c21_202_557_43238_8_3F1E486D-0033-4B7F-B9B1-40414820DF50.jpg','/imagesBien/202/557/c21_202_557_43238_8_151FD9AE-D691-473F-AC82-CD2D1519C0AB.jpg','/imagesBien/202/557/c21_202_557_43238_8_BEF0DDC5-4C08-4699-B363-4198D39BE62E.jpg'], function(i) { var image=new Image(); image.src=i; return image; });
    	});

		function show_popup_calculette(){
			var popup = document.getElementById("popup_calculette");
			popup.classList.remove("displayNone");
    		popup.classList.add("show");
		}
		function close_popup_calculette(){
			var popup = document.getElementById("popup_calculette");
    		popup.classList.remove("show");
			popup.classList.add("displayNone");
		}
	</script>

    <section class="tarif">
           <span class="yellow">
            <b>749 000 &euro;</b><span class="condition-prix"></span>
            
            <div class="reset"></div>
            <a class="link_calculette yellow font14" data-fancybox-type="iframe" data-type="custom-url" data-url="https://www.panoranet.com/credit-immobilier/formulaire-mob/immo.php?pagevoulue=calcu&act=cap1&code=SP7BGR&montant_pret=749000&calcul_auto=1" data-width="1100">Estimer votre mensualité</a>
            
        </span>

    
    <ul>
      
      <li>Honoraires charge acquéreur: 4,90 % TTC</li>
      
      <li>Prix hors honoraires: 714 000,00€</li>
      
    </ul>
    

        <div class="reset"></div>
    </section>
    <div class="reset"></div>
	<!--OPTIONS  + PHOTO -->
	<div class="zone_option_photo">
    	<!--OPTIONS DISPONIBLES-->
		<section class="optionDispo">
			<ul>
								

						
						
						<li class="photo active">
							<a class="btn-panel" data-panel="galeriePIX">
								<i class="fa fa-camera fa-lg"></i>
								8 PHOTOS
							</a>
						</li>
						

						
						

						
						
						<li class="localisation">
							<a class="btn-panel" data-panel="zoneMAP">
								<i class="fa fa-map-marker fa-lg"></i>
								POSITION
							</a>
						</li>
						

						
						

						<!--yma start update exclusivité et btn estimation-->
						
						

							<li class="exclu yma-exclu">
								<i class="fa fa-diamond" aria-hidden="true"></i>
								<span class="ici-content-text">
									
									Mandat Confiance / Exclusivité
								</span>
								
							</li>
						

						
						
								
										
										<!--bloc national-->
										<li class="exclu yma-bloc-combien">
									
										<a class="btn-faire-estimer" title="et vous ? combien vaut votre bien "
										href="/estimation-immobiliere"
										onclick="google_tag_event('bien,Click,demande-estimation');" target="_blank">
											<div class="text-content">et vous ? <span>combien</span> vaut votre bien ?</div>
										</a>
										</li>
										
									
								
						

						<!--end update exclusivité-->
					</ul>
				</section>

            	<!--GALERIE + BARRE DE CONTACT-->
				<div class="zone-galerie-contact">
					<!--GALERIE PHOTO -->
					<div id="galeriePIX" class="panel-detail">
						<div id="formatL">
						
							
								<div class="galerie-load"><img src="/multimedias/images/chargement.gif" /></div>
								<a id="galPrec" class="yellow"><i class="fa fa-angle-left fa-5x"></i></a>
								<a id="galSuiv" class="yellow"><i class="fa fa-angle-right fa-5x"></i></a>

								<div class="zone-galerie">
								
									<div class="gal-item">
										<a class="fancybox" rel="gallery1" href="/imagesBien/202/557/c21_202_557_43238_1_4EAFCFE4-5A54-40D2-8E78-C660C1CEAAB8.jpg" title="Appartement F3 &agrave; vendre - 3 pi&egrave;ces - 59 m2 - PARIS - 75012 - ILE-DE-FRANCE">
										<img class="img-owl-bien" height="338" src="/imagesBien/202/557/c21_202_557_43238_8_4EAFCFE4-5A54-40D2-8E78-C660C1CEAAB8.jpg" title="Appartement F3 &agrave; vendre - 3 pi&egrave;ces - 59 m2 - PARIS - 75012 - ILE-DE-FRANCE" alt="Appartement F3 &agrave; vendre - 3 pi&egrave;ces - 59 m2 - PARIS - 75012 - ILE-DE-FRANCE"/>
										
										</a>
									</div>
								
									<div class="gal-item">
										<a class="fancybox" rel="gallery1" href="/imagesBien/202/557/c21_202_557_43238_1_BE55E6F3-9515-4A4B-9FD3-CC5318726FDC.jpg" title="Appartement F3 &agrave; vendre - 3 pi&egrave;ces - 59 m2 - PARIS - 75012 - ILE-DE-FRANCE">
										<img class="img-owl-bien" height="338" src="/imagesBien/202/557/c21_202_557_43238_8_BE55E6F3-9515-4A4B-9FD3-CC5318726FDC.jpg" title="Appartement F3 &agrave; vendre - 3 pi&egrave;ces - 59 m2 - PARIS - 75012 - ILE-DE-FRANCE" alt="Appartement F3 &agrave; vendre - 3 pi&egrave;ces - 59 m2 - PARIS - 75012 - ILE-DE-FRANCE"/>
										
										</a>
									</div>
								
									<div class="gal-item">
										<a class="fancybox" rel="gallery1" href="/imagesBien/202/557/c21_202_557_43238_1_C8B71A1C-A3A6-446A-A2C1-A35E6C56CEEF.jpg" title="Appartement F3 &agrave; vendre - 3 pi&egrave;ces - 59 m2 - PARIS - 75012 - ILE-DE-FRANCE">
										<img class="img-owl-bien" height="338" src="/imagesBien/202/557/c21_202_557_43238_8_C8B71A1C-A3A6-446A-A2C1-A35E6C56CEEF.jpg" title="Appartement F3 &agrave; vendre - 3 pi&egrave;ces - 59 m2 - PARIS - 75012 - ILE-DE-FRANCE" alt="Appartement F3 &agrave; vendre - 3 pi&egrave;ces - 59 m2 - PARIS - 75012 - ILE-DE-FRANCE"/>
										
										</a>
									</div>
								
									<div class="gal-item">
										<a class="fancybox" rel="gallery1" href="/imagesBien/202/557/c21_202_557_43238_1_5AE92634-A77A-469C-AA07-89C04875D3B7.jpg" title="Appartement F3 &agrave; vendre - 3 pi&egrave;ces - 59 m2 - PARIS - 75012 - ILE-DE-FRANCE">
										<img class="img-owl-bien" height="338" src="/imagesBien/202/557/c21_202_557_43238_8_5AE92634-A77A-469C-AA07-89C04875D3B7.jpg" title="Appartement F3 &agrave; vendre - 3 pi&egrave;ces - 59 m2 - PARIS - 75012 - ILE-DE-FRANCE" alt="Appartement F3 &agrave; vendre - 3 pi&egrave;ces - 59 m2 - PARIS - 75012 - ILE-DE-FRANCE"/>
										
										</a>
									</div>
								
									<div class="gal-item">
										<a class="fancybox" rel="gallery1" href="/imagesBien/202/557/c21_202_557_43238_1_B111AA72-FE75-4479-9EEF-529A07675110.jpg" title="Appartement F3 &agrave; vendre - 3 pi&egrave;ces - 59 m2 - PARIS - 75012 - ILE-DE-FRANCE">
										<img class="img-owl-bien" height="338" src="/imagesBien/202/557/c21_202_557_43238_8_B111AA72-FE75-4479-9EEF-529A07675110.jpg" title="Appartement F3 &agrave; vendre - 3 pi&egrave;ces - 59 m2 - PARIS - 75012 - ILE-DE-FRANCE" alt="Appartement F3 &agrave; vendre - 3 pi&egrave;ces - 59 m2 - PARIS - 75012 - ILE-DE-FRANCE"/>
										
										</a>
									</div>
								
									<div class="gal-item">
										<a class="fancybox" rel="gallery1" href="/imagesBien/202/557/c21_202_557_43238_1_3F1E486D-0033-4B7F-B9B1-40414820DF50.jpg" title="Appartement F3 &agrave; vendre - 3 pi&egrave;ces - 59 m2 - PARIS - 75012 - ILE-DE-FRANCE">
										<img class="img-owl-bien" height="338" src="/imagesBien/202/557/c21_202_557_43238_8_3F1E486D-0033-4B7F-B9B1-40414820DF50.jpg" title="Appartement F3 &agrave; vendre - 3 pi&egrave;ces - 59 m2 - PARIS - 75012 - ILE-DE-FRANCE" alt="Appartement F3 &agrave; vendre - 3 pi&egrave;ces - 59 m2 - PARIS - 75012 - ILE-DE-FRANCE"/>
										
										</a>
									</div>
								
									<div class="gal-item">
										<a class="fancybox" rel="gallery1" href="/imagesBien/202/557/c21_202_557_43238_1_151FD9AE-D691-473F-AC82-CD2D1519C0AB.jpg" title="Appartement F3 &agrave; vendre - 3 pi&egrave;ces - 59 m2 - PARIS - 75012 - ILE-DE-FRANCE">
										<img class="img-owl-bien" height="338" src="/imagesBien/202/557/c21_202_557_43238_8_151FD9AE-D691-473F-AC82-CD2D1519C0AB.jpg" title="Appartement F3 &agrave; vendre - 3 pi&egrave;ces - 59 m2 - PARIS - 75012 - ILE-DE-FRANCE" alt="Appartement F3 &agrave; vendre - 3 pi&egrave;ces - 59 m2 - PARIS - 75012 - ILE-DE-FRANCE"/>
										
										</a>
									</div>
								
									<div class="gal-item">
										<a class="fancybox" rel="gallery1" href="/imagesBien/202/557/c21_202_557_43238_1_BEF0DDC5-4C08-4699-B363-4198D39BE62E.jpg" title="Appartement F3 &agrave; vendre - 3 pi&egrave;ces - 59 m2 - PARIS - 75012 - ILE-DE-FRANCE">
										<img class="img-owl-bien" height="338" src="/imagesBien/202/557/c21_202_557_43238_8_BEF0DDC5-4C08-4699-B363-4198D39BE62E.jpg" title="Appartement F3 &agrave; vendre - 3 pi&egrave;ces - 59 m2 - PARIS - 75012 - ILE-DE-FRANCE" alt="Appartement F3 &agrave; vendre - 3 pi&egrave;ces - 59 m2 - PARIS - 75012 - ILE-DE-FRANCE"/>
										
										</a>
									</div>
								
									<div class="gal-item slide-contact">
										<img src="/theme/generic/css/images/contacter-l-agence-immobiliere.jpg" alt="Contacter l'agence">
										<span class="title-carousel-contact">Contacter l'agence :</span>
										<div class="contact-carousel">
										
											<a class="btn-contact contact-tel" data-tel="01 53 46 60 00 " onclick="google_tag_event('Voir Telephone,Click,Voir Telephone_Acheteur');"><i class="fa fa-phone" aria-hidden="true"></i> Par téléphone</a>
										
										</div>
										<div class="contact-carousel">
											<a class="afficheContactAg btn-contact" title="Envoyer un message à l'agence CENTURY 21 Chorus"><i class="fa fa-envelope-o" aria-hidden="true"></i> Par message</a>
										</div>
									</div>
								</div>
							
						
						</div>
						<div class="reset"></div>
					</div>

						<!--POUR CSS PRINT -->
						
						<div id="imgPrint" class="displayNone">
							<img src="/imagesBien/202/557/c21_202_557_43238_1_4EAFCFE4-5A54-40D2-8E78-C660C1CEAAB8.jpg" alt="Appartement F3 &agrave; vendre - 3 pi&egrave;ces - 59 m2 - PARIS - 75012 - ILE-DE-FRANCE"/>
						</div>
						
					<!--FIN GALERIE PHOTO -->
					<div class="reset"></div>

					<!-- CARTE KELQUARTIER -->
					<div id="zoneMAP" class="panel-detail">
						
<div id="mapCanvas" style="width:100%; height: 440px; margin:auto;">

</div>

<div class="reset"></div>


<ul class="cat-map zone-cat">
    
    <div class="glob-cat">
        <li data-cat="cat-agence" class="active title_cat"><span>Agence</span></li>
        <ul id="cat-agence" class="cat-attr">
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-agence.svg" />
                	<a data-layerName="agence" data-rayon="5" class="twimmo actif poi-agence">Agence</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-biens-vendus.svg" />
                	<a data-layerName="biens-vendus" data-rayon="5" class="twimmo inactif poi-biens-vendus">Biens Vendus</a>
                </div>
            </li>
            
        </ul>
	</div>
    
    <div class="glob-cat">
        <li data-cat="cat-transport" class=" title_cat"><span>Transport</span></li>
        <ul id="cat-transport" class="cat-attr">
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-aeroport.svg" />
                	<a data-layerName="aeroport" data-rayon="5" class="twimmo inactif poi-aeroport">Aéroport</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-autolib.svg" />
                	<a data-layerName="autolib" data-rayon="5" class="twimmo inactif poi-autolib">Autolib&#39;</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-bus.svg" />
                	<a data-layerName="bus" data-rayon="5" class="twimmo inactif poi-bus">Bus</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-ferry.svg" />
                	<a data-layerName="ferry" data-rayon="5" class="twimmo inactif poi-ferry">Ferry</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-gare.svg" />
                	<a data-layerName="gare" data-rayon="5" class="twimmo inactif poi-gare">Gare</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-location-de-velo.svg" />
                	<a data-layerName="location-de-velo" data-rayon="5" class="twimmo inactif poi-location-de-velo">Location De Vélo</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-metro.svg" />
                	<a data-layerName="metro" data-rayon="5" class="twimmo inactif poi-metro">Métro</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-parking.svg" />
                	<a data-layerName="parking" data-rayon="5" class="twimmo inactif poi-parking">Parking</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-parking-velo.svg" />
                	<a data-layerName="parking-velo" data-rayon="5" class="twimmo inactif poi-parking-velo">Parking Vélo</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-rer.svg" />
                	<a data-layerName="rer" data-rayon="5" class="twimmo inactif poi-rer">Rer</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-taxi.svg" />
                	<a data-layerName="taxi" data-rayon="5" class="twimmo inactif poi-taxi">Taxi</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-station-service.svg" />
                	<a data-layerName="station-service" data-rayon="5" class="twimmo inactif poi-station-service">Station Serice</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-tramway.svg" />
                	<a data-layerName="tramway" data-rayon="5" class="twimmo inactif poi-tramway">Tramway</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-velib.svg" />
                	<a data-layerName="velib" data-rayon="5" class="twimmo inactif poi-velib">Vélib&#39;</a>
                </div>
            </li>
            
        </ul>
	</div>
    
    <div class="glob-cat">
        <li data-cat="cat-education-enfance" class=" title_cat"><span>Éducation &amp; Enfance</span></li>
        <ul id="cat-education-enfance" class="cat-attr">
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-creche.svg" />
                	<a data-layerName="creche" data-rayon="5" class="twimmo inactif poi-creche">Crèche</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-ludotheque.svg" />
                	<a data-layerName="ludotheque" data-rayon="5" class="twimmo inactif poi-ludotheque">Ludothèque</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-ecole-maternelle.svg" />
                	<a data-layerName="ecole-maternelle" data-rayon="5" class="twimmo inactif poi-ecole-maternelle">École Maternelle</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-ecole-primaire.svg" />
                	<a data-layerName="ecole-primaire" data-rayon="5" class="twimmo inactif poi-ecole-primaire">École Primaire</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-college.svg" />
                	<a data-layerName="college" data-rayon="5" class="twimmo inactif poi-college">Collège</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-lycee.svg" />
                	<a data-layerName="lycee" data-rayon="5" class="twimmo inactif poi-lycee">Lycée</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-enseignement-superieur.svg" />
                	<a data-layerName="enseignement-superieur" data-rayon="5" class="twimmo inactif poi-enseignement-superieur">Enseignement Supérieur</a>
                </div>
            </li>
            
        </ul>
	</div>
    
    <div class="glob-cat">
        <li data-cat="cat-commerce-service" class=" title_cat"><span>Commerce &amp; Service</span></li>
        <ul id="cat-commerce-service" class="cat-attr">
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-banque.svg" />
                	<a data-layerName="banque" data-rayon="5" class="twimmo inactif poi-banque">Banque</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-bar.svg" />
                	<a data-layerName="bar" data-rayon="5" class="twimmo inactif poi-bar">Bar</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-boucherie.svg" />
                	<a data-layerName="boucherie" data-rayon="5" class="twimmo inactif poi-boucherie">Boucherie</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-boulangerie.svg" />
                	<a data-layerName="boulangerie" data-rayon="5" class="twimmo inactif poi-boulangerie">Boulangerie</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-poste.svg" />
                	<a data-layerName="poste" data-rayon="5" class="twimmo inactif poi-poste">Bureau De Poste</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-marche-de-quartier.svg" />
                	<a data-layerName="marche-de-quartier" data-rayon="5" class="twimmo inactif poi-marche-de-quartier">Marché De Quartier</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-presse-et-tabac.svg" />
                	<a data-layerName="presse-et-tabac" data-rayon="5" class="twimmo inactif poi-presse-et-tabac">Presse &amp; Tabac</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-restaurant.svg" />
                	<a data-layerName="restaurant" data-rayon="5" class="twimmo inactif poi-restaurant">Restaurant</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-superette.svg" />
                	<a data-layerName="superette" data-rayon="5" class="twimmo inactif poi-superette">Supérette</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-supermarche-et-hypermarche.svg" />
                	<a data-layerName="supermarche-et-hypermarche" data-rayon="5" class="twimmo inactif poi-supermarche-et-hypermarche">Supermarché Et Hypermarché</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-centre-commercial.svg" />
                	<a data-layerName="centre-commercial" data-rayon="5" class="twimmo inactif poi-centre-commercial">Centre Commercial</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-hotel.svg" />
                	<a data-layerName="hotel" data-rayon="5" class="twimmo inactif poi-hotel">Hôtel</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-residence-de-tourisme-village-etpparc.svg" />
                	<a data-layerName="residence-de-tourisme-village-et-parc" data-rayon="5" class="twimmo inactif poi-residence-de-tourisme-village-et-parc">Résidence De Tourisme, Village Et Parc</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-camping.svg" />
                	<a data-layerName="camping" data-rayon="5" class="twimmo inactif poi-camping">Camping</a>
                </div>
            </li>
            
        </ul>
	</div>
    
    <div class="glob-cat">
        <li data-cat="cat-loisir-sports" class=" title_cat"><span>Loisir &amp; Sports</span></li>
        <ul id="cat-loisir-sports" class="cat-attr">
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-cinemas.svg" />
                	<a data-layerName="cinemas" data-rayon="5" class="twimmo inactif poi-cinemas">Cinémas</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-parc-jardin-et-square.svg" />
                	<a data-layerName="parc-jardin-et-square" data-rayon="5" class="twimmo inactif poi-parc-jardin-et-square">Parc, Jardin Et Square</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-salle-de-musculation-fitness.svg" />
                	<a data-layerName="salle-de-musculation-fitness" data-rayon="5" class="twimmo inactif poi-salle-de-musculation-fitness">Salle De Musculation/Fitness </a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-terrain-et-salle-de-sport.svg" />
                	<a data-layerName="terrain-et-salle-de-sport" data-rayon="5" class="twimmo inactif poi-terrain-et-salle-de-sport">Terrain Et Salle De Sport</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-billard-bowling-paintball.svg" />
                	<a data-layerName="billard-bowling-paintball" data-rayon="5" class="twimmo inactif poi-billard-bowling-paintball">Billard, Bowling &amp; Paintball</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-equitation.svg" />
                	<a data-layerName="equitation" data-rayon="5" class="twimmo inactif poi-equitation">Équitation</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-escalade.svg" />
                	<a data-layerName="escalade" data-rayon="5" class="twimmo inactif poi-escalade">Escalade</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-natation-sports-nautiques.svg" />
                	<a data-layerName="natation-sports-nautiques" data-rayon="5" class="twimmo inactif poi-natation-sports-nautiques">Natation, Sports Nautiques</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-peche.svg" />
                	<a data-layerName="peche" data-rayon="5" class="twimmo inactif poi-peche">Pêche</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-randonnee.svg" />
                	<a data-layerName="randonnee" data-rayon="5" class="twimmo inactif poi-randonnee">Randonnée</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-sport-mecanique.svg" />
                	<a data-layerName="sport-mecanique" data-rayon="5" class="twimmo inactif poi-sport-mecanique">Sport Mécanique</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-tennis.svg" />
                	<a data-layerName="tennis" data-rayon="5" class="twimmo inactif poi-tennis">Tennis</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-vtt.svg" />
                	<a data-layerName="vtt" data-rayon="5" class="twimmo inactif poi-vtt">Vtt</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-casino.svg" />
                	<a data-layerName="casino" data-rayon="5" class="twimmo inactif poi-casino">Casino</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-golf.svg" />
                	<a data-layerName="golf" data-rayon="5" class="twimmo inactif poi-golf">Golf</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-sport-aerien.svg" />
                	<a data-layerName="sport-aerien" data-rayon="5" class="twimmo inactif poi-sport-aerien">Sport Aérien</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-ski.svg" />
                	<a data-layerName="ski" data-rayon="5" class="twimmo inactif poi-ski">Ski</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-base-de-loisirs.svg" />
                	<a data-layerName="base-de-loisirs" data-rayon="5" class="twimmo inactif poi-base-de-loisirs">Base De Loisirs</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-aquarium.svg" />
                	<a data-layerName="aquarium" data-rayon="5" class="twimmo inactif poi-aquarium">Aquarium</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-parc-dattraction.svg" />
                	<a data-layerName="parc-dattraction" data-rayon="5" class="twimmo inactif poi-parc-dattraction">Parc D&#39;Attraction</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-zoo.svg" />
                	<a data-layerName="zoo" data-rayon="5" class="twimmo inactif poi-zoo">Zoo</a>
                </div>
            </li>
            
        </ul>
	</div>
    
    <div class="glob-cat">
        <li data-cat="cat-culture-tourisme" class=" title_cat"><span>Culture &amp; Tourisme</span></li>
        <ul id="cat-culture-tourisme" class="cat-attr">
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-monument-historique.svg" />
                	<a data-layerName="monument-historique" data-rayon="5" class="twimmo inactif poi-monument-historique">Monument Historique</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-theatre.svg" />
                	<a data-layerName="theatre" data-rayon="5" class="twimmo inactif poi-theatre">Théâtre</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-musee.svg" />
                	<a data-layerName="musee" data-rayon="5" class="twimmo inactif poi-musee">Musée</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-festival.svg" />
                	<a data-layerName="festival" data-rayon="5" class="twimmo inactif poi-festival">Festival</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-agglomeration.svg" />
                	<a data-layerName="agglomeration" data-rayon="5" class="twimmo inactif poi-agglomeration">Agglomération</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-centre-ville.svg" />
                	<a data-layerName="centre-ville" data-rayon="5" class="twimmo inactif poi-centre-ville">Centre Ville</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-ville.svg" />
                	<a data-layerName="ville" data-rayon="5" class="twimmo inactif poi-ville">Ville</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-bibliotheque.svg" />
                	<a data-layerName="bibliotheque" data-rayon="5" class="twimmo inactif poi-bibliotheque">Bibliothèque</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-incontournable.svg" />
                	<a data-layerName="incontournable" data-rayon="5" class="twimmo inactif poi-incontournable">Incontournable</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-plage.svg" />
                	<a data-layerName="plage" data-rayon="5" class="twimmo inactif poi-plage">Plage</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-baignade-en-lac-et-riviere.svg" />
                	<a data-layerName="baignade-en-lac-et-riviere" data-rayon="5" class="twimmo inactif poi-baignade-en-lac-et-riviere">Baignade En Lac Et Rivière</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-mer.svg" />
                	<a data-layerName="mer" data-rayon="5" class="twimmo inactif poi-mer">Mer</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-montagne.svg" />
                	<a data-layerName="montagne" data-rayon="5" class="twimmo inactif poi-montagne">Montagne</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-campagne.svg" />
                	<a data-layerName="campagne" data-rayon="5" class="twimmo inactif poi-campagne">Campagne</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-lac.svg" />
                	<a data-layerName="lac" data-rayon="5" class="twimmo inactif poi-lac">Lac</a>
                </div>
            </li>
            
        </ul>
	</div>
    
    <div class="glob-cat">
        <li data-cat="cat-sante-prevention" class=" title_cat"><span>Santé &amp; Prévention</span></li>
        <ul id="cat-sante-prevention" class="cat-attr">
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-hopital.svg" />
                	<a data-layerName="hopital" data-rayon="5" class="twimmo inactif poi-hopital">Hôpital</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-medecine-generaliste.svg" />
                	<a data-layerName="medecine-generaliste" data-rayon="5" class="twimmo inactif poi-medecine-generaliste">Médecine Généraliste</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-medecine-specialiste.svg" />
                	<a data-layerName="medecine-specialiste" data-rayon="5" class="twimmo inactif poi-medecine-specialiste">Médecine Spécialiste</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-pharmacie.svg" />
                	<a data-layerName="pharmacie" data-rayon="5" class="twimmo inactif poi-pharmacie">Pharmacie</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-antennes-relais.svg" />
                	<a data-layerName="antennes-relais" data-rayon="5" class="twimmo inactif poi-antennes-relais">Antennes Relais</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-etablissement-polluant.svg" />
                	<a data-layerName="etablissement-polluant" data-rayon="5" class="twimmo inactif poi-etablissement-polluant">Établissement Polluant</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-site-polue.svg" />
                	<a data-layerName="site-polue" data-rayon="5" class="twimmo inactif poi-site-polue">Site Polué</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-site-potentiellement-polue.svg" />
                	<a data-layerName="site-potentiellement-polue" data-rayon="5" class="twimmo inactif poi-site-potentiellement-polue">Site Potentiellement Polué</a>
                </div>
            </li>
            
        </ul>
	</div>
    
    <div class="glob-cat">
        <li data-cat="cat-service-public" class=" title_cat"><span>Service Public</span></li>
        <ul id="cat-service-public" class="cat-attr">
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-caf.svg" />
                	<a data-layerName="caf" data-rayon="5" class="twimmo inactif poi-caf">Caf</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-cpam.svg" />
                	<a data-layerName="cpam" data-rayon="5" class="twimmo inactif poi-cpam">Cpam</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-gendarmerie.svg" />
                	<a data-layerName="gendarmerie" data-rayon="5" class="twimmo inactif poi-gendarmerie">Gendarmerie</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-greffe.svg" />
                	<a data-layerName="greffe" data-rayon="5" class="twimmo inactif poi-greffe">Greffe</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-mairie.svg" />
                	<a data-layerName="mairie" data-rayon="5" class="twimmo inactif poi-mairie">Mairie</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-pole-emploi.svg" />
                	<a data-layerName="pole-emploi" data-rayon="5" class="twimmo inactif poi-pole-emploi">Pôle Emploi</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-police.svg" />
                	<a data-layerName="police" data-rayon="5" class="twimmo inactif poi-police">Police</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-prefecture.svg" />
                	<a data-layerName="prefecture" data-rayon="5" class="twimmo inactif poi-prefecture">Préfecture</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-service-des-impots-des-entreprises.svg" />
                	<a data-layerName="service-des-impots-des-entreprises" data-rayon="5" class="twimmo inactif poi-service-des-impots-des-entreprises">Service Des Impôts Des Entreprises</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-service-des-impots-des-particulier.svg" />
                	<a data-layerName="service-des-impots-des-particulier" data-rayon="5" class="twimmo inactif poi-service-des-impots-des-particulier">Service Des Impôts Des Particuliers</a>
                </div>
            </li>
            
        </ul>
	</div>
    
</ul>
<div class="reset"></div>


<div class="zone-cat">
	<form>
        
        <ul id="cat-agence">
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-agence.svg" />
                	<a data-layerName="agence" data-rayon="5" class="twimmo actif poi-agence">Agence</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-biens-vendus.svg" />
                	<a data-layerName="biens-vendus" data-rayon="5" class="twimmo inactif poi-biens-vendus">Biens Vendus</a>
                </div>
            </li>
            
        </ul>
        
        <ul id="cat-transport">
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-aeroport.svg" />
                	<a data-layerName="aeroport" data-rayon="5" class="twimmo inactif poi-aeroport">Aéroport</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-autolib.svg" />
                	<a data-layerName="autolib" data-rayon="5" class="twimmo inactif poi-autolib">Autolib&#39;</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-bus.svg" />
                	<a data-layerName="bus" data-rayon="5" class="twimmo inactif poi-bus">Bus</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-ferry.svg" />
                	<a data-layerName="ferry" data-rayon="5" class="twimmo inactif poi-ferry">Ferry</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-gare.svg" />
                	<a data-layerName="gare" data-rayon="5" class="twimmo inactif poi-gare">Gare</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-location-de-velo.svg" />
                	<a data-layerName="location-de-velo" data-rayon="5" class="twimmo inactif poi-location-de-velo">Location De Vélo</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-metro.svg" />
                	<a data-layerName="metro" data-rayon="5" class="twimmo inactif poi-metro">Métro</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-parking.svg" />
                	<a data-layerName="parking" data-rayon="5" class="twimmo inactif poi-parking">Parking</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-parking-velo.svg" />
                	<a data-layerName="parking-velo" data-rayon="5" class="twimmo inactif poi-parking-velo">Parking Vélo</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-rer.svg" />
                	<a data-layerName="rer" data-rayon="5" class="twimmo inactif poi-rer">Rer</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-taxi.svg" />
                	<a data-layerName="taxi" data-rayon="5" class="twimmo inactif poi-taxi">Taxi</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-station-service.svg" />
                	<a data-layerName="station-service" data-rayon="5" class="twimmo inactif poi-station-service">Station Serice</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-tramway.svg" />
                	<a data-layerName="tramway" data-rayon="5" class="twimmo inactif poi-tramway">Tramway</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-velib.svg" />
                	<a data-layerName="velib" data-rayon="5" class="twimmo inactif poi-velib">Vélib&#39;</a>
                </div>
            </li>
            
        </ul>
        
        <ul id="cat-education-enfance">
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-creche.svg" />
                	<a data-layerName="creche" data-rayon="5" class="twimmo inactif poi-creche">Crèche</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-ludotheque.svg" />
                	<a data-layerName="ludotheque" data-rayon="5" class="twimmo inactif poi-ludotheque">Ludothèque</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-ecole-maternelle.svg" />
                	<a data-layerName="ecole-maternelle" data-rayon="5" class="twimmo inactif poi-ecole-maternelle">École Maternelle</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-ecole-primaire.svg" />
                	<a data-layerName="ecole-primaire" data-rayon="5" class="twimmo inactif poi-ecole-primaire">École Primaire</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-college.svg" />
                	<a data-layerName="college" data-rayon="5" class="twimmo inactif poi-college">Collège</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-lycee.svg" />
                	<a data-layerName="lycee" data-rayon="5" class="twimmo inactif poi-lycee">Lycée</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-enseignement-superieur.svg" />
                	<a data-layerName="enseignement-superieur" data-rayon="5" class="twimmo inactif poi-enseignement-superieur">Enseignement Supérieur</a>
                </div>
            </li>
            
        </ul>
        
        <ul id="cat-commerce-service">
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-banque.svg" />
                	<a data-layerName="banque" data-rayon="5" class="twimmo inactif poi-banque">Banque</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-bar.svg" />
                	<a data-layerName="bar" data-rayon="5" class="twimmo inactif poi-bar">Bar</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-boucherie.svg" />
                	<a data-layerName="boucherie" data-rayon="5" class="twimmo inactif poi-boucherie">Boucherie</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-boulangerie.svg" />
                	<a data-layerName="boulangerie" data-rayon="5" class="twimmo inactif poi-boulangerie">Boulangerie</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-poste.svg" />
                	<a data-layerName="poste" data-rayon="5" class="twimmo inactif poi-poste">Bureau De Poste</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-marche-de-quartier.svg" />
                	<a data-layerName="marche-de-quartier" data-rayon="5" class="twimmo inactif poi-marche-de-quartier">Marché De Quartier</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-presse-et-tabac.svg" />
                	<a data-layerName="presse-et-tabac" data-rayon="5" class="twimmo inactif poi-presse-et-tabac">Presse &amp; Tabac</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-restaurant.svg" />
                	<a data-layerName="restaurant" data-rayon="5" class="twimmo inactif poi-restaurant">Restaurant</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-superette.svg" />
                	<a data-layerName="superette" data-rayon="5" class="twimmo inactif poi-superette">Supérette</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-supermarche-et-hypermarche.svg" />
                	<a data-layerName="supermarche-et-hypermarche" data-rayon="5" class="twimmo inactif poi-supermarche-et-hypermarche">Supermarché Et Hypermarché</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-centre-commercial.svg" />
                	<a data-layerName="centre-commercial" data-rayon="5" class="twimmo inactif poi-centre-commercial">Centre Commercial</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-hotel.svg" />
                	<a data-layerName="hotel" data-rayon="5" class="twimmo inactif poi-hotel">Hôtel</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-residence-de-tourisme-village-etpparc.svg" />
                	<a data-layerName="residence-de-tourisme-village-et-parc" data-rayon="5" class="twimmo inactif poi-residence-de-tourisme-village-et-parc">Résidence De Tourisme, Village Et Parc</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-camping.svg" />
                	<a data-layerName="camping" data-rayon="5" class="twimmo inactif poi-camping">Camping</a>
                </div>
            </li>
            
        </ul>
        
        <ul id="cat-loisir-sports">
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-cinemas.svg" />
                	<a data-layerName="cinemas" data-rayon="5" class="twimmo inactif poi-cinemas">Cinémas</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-parc-jardin-et-square.svg" />
                	<a data-layerName="parc-jardin-et-square" data-rayon="5" class="twimmo inactif poi-parc-jardin-et-square">Parc, Jardin Et Square</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-salle-de-musculation-fitness.svg" />
                	<a data-layerName="salle-de-musculation-fitness" data-rayon="5" class="twimmo inactif poi-salle-de-musculation-fitness">Salle De Musculation/Fitness </a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-terrain-et-salle-de-sport.svg" />
                	<a data-layerName="terrain-et-salle-de-sport" data-rayon="5" class="twimmo inactif poi-terrain-et-salle-de-sport">Terrain Et Salle De Sport</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-billard-bowling-paintball.svg" />
                	<a data-layerName="billard-bowling-paintball" data-rayon="5" class="twimmo inactif poi-billard-bowling-paintball">Billard, Bowling &amp; Paintball</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-equitation.svg" />
                	<a data-layerName="equitation" data-rayon="5" class="twimmo inactif poi-equitation">Équitation</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-escalade.svg" />
                	<a data-layerName="escalade" data-rayon="5" class="twimmo inactif poi-escalade">Escalade</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-natation-sports-nautiques.svg" />
                	<a data-layerName="natation-sports-nautiques" data-rayon="5" class="twimmo inactif poi-natation-sports-nautiques">Natation, Sports Nautiques</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-peche.svg" />
                	<a data-layerName="peche" data-rayon="5" class="twimmo inactif poi-peche">Pêche</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-randonnee.svg" />
                	<a data-layerName="randonnee" data-rayon="5" class="twimmo inactif poi-randonnee">Randonnée</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-sport-mecanique.svg" />
                	<a data-layerName="sport-mecanique" data-rayon="5" class="twimmo inactif poi-sport-mecanique">Sport Mécanique</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-tennis.svg" />
                	<a data-layerName="tennis" data-rayon="5" class="twimmo inactif poi-tennis">Tennis</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-vtt.svg" />
                	<a data-layerName="vtt" data-rayon="5" class="twimmo inactif poi-vtt">Vtt</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-casino.svg" />
                	<a data-layerName="casino" data-rayon="5" class="twimmo inactif poi-casino">Casino</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-golf.svg" />
                	<a data-layerName="golf" data-rayon="5" class="twimmo inactif poi-golf">Golf</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-sport-aerien.svg" />
                	<a data-layerName="sport-aerien" data-rayon="5" class="twimmo inactif poi-sport-aerien">Sport Aérien</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-ski.svg" />
                	<a data-layerName="ski" data-rayon="5" class="twimmo inactif poi-ski">Ski</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-base-de-loisirs.svg" />
                	<a data-layerName="base-de-loisirs" data-rayon="5" class="twimmo inactif poi-base-de-loisirs">Base De Loisirs</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-aquarium.svg" />
                	<a data-layerName="aquarium" data-rayon="5" class="twimmo inactif poi-aquarium">Aquarium</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-parc-dattraction.svg" />
                	<a data-layerName="parc-dattraction" data-rayon="5" class="twimmo inactif poi-parc-dattraction">Parc D&#39;Attraction</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-zoo.svg" />
                	<a data-layerName="zoo" data-rayon="5" class="twimmo inactif poi-zoo">Zoo</a>
                </div>
            </li>
            
        </ul>
        
        <ul id="cat-culture-tourisme">
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-monument-historique.svg" />
                	<a data-layerName="monument-historique" data-rayon="5" class="twimmo inactif poi-monument-historique">Monument Historique</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-theatre.svg" />
                	<a data-layerName="theatre" data-rayon="5" class="twimmo inactif poi-theatre">Théâtre</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-musee.svg" />
                	<a data-layerName="musee" data-rayon="5" class="twimmo inactif poi-musee">Musée</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-festival.svg" />
                	<a data-layerName="festival" data-rayon="5" class="twimmo inactif poi-festival">Festival</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-agglomeration.svg" />
                	<a data-layerName="agglomeration" data-rayon="5" class="twimmo inactif poi-agglomeration">Agglomération</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-centre-ville.svg" />
                	<a data-layerName="centre-ville" data-rayon="5" class="twimmo inactif poi-centre-ville">Centre Ville</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-ville.svg" />
                	<a data-layerName="ville" data-rayon="5" class="twimmo inactif poi-ville">Ville</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-bibliotheque.svg" />
                	<a data-layerName="bibliotheque" data-rayon="5" class="twimmo inactif poi-bibliotheque">Bibliothèque</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-incontournable.svg" />
                	<a data-layerName="incontournable" data-rayon="5" class="twimmo inactif poi-incontournable">Incontournable</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-plage.svg" />
                	<a data-layerName="plage" data-rayon="5" class="twimmo inactif poi-plage">Plage</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-baignade-en-lac-et-riviere.svg" />
                	<a data-layerName="baignade-en-lac-et-riviere" data-rayon="5" class="twimmo inactif poi-baignade-en-lac-et-riviere">Baignade En Lac Et Rivière</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-mer.svg" />
                	<a data-layerName="mer" data-rayon="5" class="twimmo inactif poi-mer">Mer</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-montagne.svg" />
                	<a data-layerName="montagne" data-rayon="5" class="twimmo inactif poi-montagne">Montagne</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-campagne.svg" />
                	<a data-layerName="campagne" data-rayon="5" class="twimmo inactif poi-campagne">Campagne</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-lac.svg" />
                	<a data-layerName="lac" data-rayon="5" class="twimmo inactif poi-lac">Lac</a>
                </div>
            </li>
            
        </ul>
        
        <ul id="cat-sante-prevention">
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-hopital.svg" />
                	<a data-layerName="hopital" data-rayon="5" class="twimmo inactif poi-hopital">Hôpital</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-medecine-generaliste.svg" />
                	<a data-layerName="medecine-generaliste" data-rayon="5" class="twimmo inactif poi-medecine-generaliste">Médecine Généraliste</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-medecine-specialiste.svg" />
                	<a data-layerName="medecine-specialiste" data-rayon="5" class="twimmo inactif poi-medecine-specialiste">Médecine Spécialiste</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-pharmacie.svg" />
                	<a data-layerName="pharmacie" data-rayon="5" class="twimmo inactif poi-pharmacie">Pharmacie</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-antennes-relais.svg" />
                	<a data-layerName="antennes-relais" data-rayon="5" class="twimmo inactif poi-antennes-relais">Antennes Relais</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-etablissement-polluant.svg" />
                	<a data-layerName="etablissement-polluant" data-rayon="5" class="twimmo inactif poi-etablissement-polluant">Établissement Polluant</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-site-polue.svg" />
                	<a data-layerName="site-polue" data-rayon="5" class="twimmo inactif poi-site-polue">Site Polué</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-site-potentiellement-polue.svg" />
                	<a data-layerName="site-potentiellement-polue" data-rayon="5" class="twimmo inactif poi-site-potentiellement-polue">Site Potentiellement Polué</a>
                </div>
            </li>
            
        </ul>
        
        <ul id="cat-service-public">
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-caf.svg" />
                	<a data-layerName="caf" data-rayon="5" class="twimmo inactif poi-caf">Caf</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-cpam.svg" />
                	<a data-layerName="cpam" data-rayon="5" class="twimmo inactif poi-cpam">Cpam</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-gendarmerie.svg" />
                	<a data-layerName="gendarmerie" data-rayon="5" class="twimmo inactif poi-gendarmerie">Gendarmerie</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-greffe.svg" />
                	<a data-layerName="greffe" data-rayon="5" class="twimmo inactif poi-greffe">Greffe</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-mairie.svg" />
                	<a data-layerName="mairie" data-rayon="5" class="twimmo inactif poi-mairie">Mairie</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-pole-emploi.svg" />
                	<a data-layerName="pole-emploi" data-rayon="5" class="twimmo inactif poi-pole-emploi">Pôle Emploi</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-police.svg" />
                	<a data-layerName="police" data-rayon="5" class="twimmo inactif poi-police">Police</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-prefecture.svg" />
                	<a data-layerName="prefecture" data-rayon="5" class="twimmo inactif poi-prefecture">Préfecture</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-service-des-impots-des-entreprises.svg" />
                	<a data-layerName="service-des-impots-des-entreprises" data-rayon="5" class="twimmo inactif poi-service-des-impots-des-entreprises">Service Des Impôts Des Entreprises</a>
                </div>
            </li>
            
            <li>
                <div class="BTN">
                	<img class="picto-poi" src="/img/picto-kelquartier/poi-service-des-impots-des-particulier.svg" />
                	<a data-layerName="service-des-impots-des-particulier" data-rayon="5" class="twimmo inactif poi-service-des-impots-des-particulier">Service Des Impôts Des Particuliers</a>
                </div>
            </li>
            
        </ul>
        
    </form>
</div>

					</div>
					<!-- FIN CARTE KELQUARTIER -->
					<div class="reset"></div>
					<!--BARRE DE CONTACT -->
					<span class="barre-NoFixe"></span>
					<section class="barre-contact">
						<div class="content-barre-contact">
							<span class="infos_fixe margR10">
								<p class="white bold font14 margB5 center">Réf: 43238</p>
								<p class="yellow bold font18 center">749 000 &euro; </p>
							</span>
							<ul class="lireMoreUNDER_ANNONCE version-orange ">
				
							  <li>
				
								<a class="btn-contact contact-tel" data-tel="01 53 46 60 00 " onclick="google_tag_event('Voir Telephone,Click,Voir Telephone_Acheteur');">
									Voir le téléphone
								</a>
				
						</li>
				
				
							  <li style="display: block; margin: 0 auto !important;">
								<a class="afficheContactAg btn-contact center-block" title="Envoyer un message à l'agence CENTURY 21 Chorus">Envoyer un message</a>
							  </li>
				
							  
							  
								  
									  <li>
										<a class="afficheVotreAg btn-contact" onclick="google_tag_event('bien,Affiche-votreagence,557');" title="L'agence CENTURY 21 Chorus est à votre disposition">
											Votre agence
										</a>
									  </li>
								   
							
							</ul>
							<div class="reset"></div>
						</div>
					</section>
				</div>
		</div>

            <div class="reset"></div>

            <section class="precision">
                <span class="bold font20 margB10 inlineblock">Description</span>
                <span class="yellow font20 margL20 bold">Réf: 43238</span>
				
				
				<span class="fR">
                	
                        <!-- to delete si c'est ok
							 <a class="yellow bold font20"
                          href="//www.century21.fr/outils/vendre/?utm_source=century21&utm_medium=btn-fiche-bien&utm_content=v1&utm_campaign=btn-fiche-bien-estimation"
                          onclick="google_tag_event('bien,Click,demande-estimation');">
                              Faire estimer mon bien
						  </a>
						  -->
                    
                    <div class="reset"></div>
				</span>
				
			
                <div class="reset"></div>

                <span class="block margB5">
                        
                                
                        
                </span>

                
                <div class="desc-fr">
                    <p class="font16 LH19 justify">
                      CHARENTON / ALIGRE : Au 2ème étage d'un immeuble ancien avec ascenseur, venez découvrir cet agréable 3 pièces très lumineux de 59,4m2 au sol. Traversant et au calme sur cour vous serez séduit par ses beaux volumes. Idéalement situé, à quelques pas du célèbre marché d'Aligre, de la coulée verte, de ses commerces, ses écoles et de la Gare de Lyon. La cour arborée est à la disposition des copropriétaires, qui bénéficient également d'un local à vélo et poussettes, d'un second local à vélo au sous-sol. Une cave de belle taille complète le bien.
                    </p>
				</div>
                


                
                <div class="desc-uk displayNone">
                	<p class="font16 LH19 justify">
                        
                                
                        
                    </p>
                </div>
                <div class="reset"></div>
                
                
            </section>
        </div>
	


</div>
<div class="reset"></div>

<script>	
  google_tag_event('bien,page_detail_ouverte,202_557_43238');	
  google_tag_event('bien,page_detail_achat_ouverte,appartement');
</script>




<div id="moreFarWRAP">
  <div id="moreFar">
    <span id="ancreMENU"></span>
    <a id="hauteurScroll" class="hauteurFixe" rel="680"></a>

    <section id="ficheDetail" class="slide slide1">

		<h2>Fiche détaillée du bien immobilier</h2>
      	<div class="zone-contenu-slide">
		  
		  
		  
		  

<div class="col-gauche-slide">


<div class="box">
  <span class="fiche-subtitle">Vue globale</span>
  
<ul>
  
  
  <li><span class="titreDetail">Type d'appartement</span> : F3</li>
  
  
  <li><span class="titreDetail">Surface totale</span> : 59,4 m<sup>2</sup></li>
  
  
  <li><span class="titreDetail">Surface habitable</span> : 59 m<sup>2</sup></li>
  
  
  

  
  <li><span class="titreDetail">
      <div class="posL">
        <div id="descDetailPiece" class="descriptionLongue">
          <a  id="fermerDescLongue" class="pictoBtnFermer floatR"></a>
          <ul>
            
            <li>Entrée</li>
            
            <li>Cuisine</li>
            
            <li>Séjour</li>
            
            <li>Chambre</li>
            
            <li>Chambre</li>
            
            <li>Salle d&#39;eau</li>
            
            <li>WC</li>
            
          </ul>
        </div>
      </div>Nombre de pièces :</span>3 <a class="lienPlusDetail" id="lienDetailPiece">[Voir en détail]</a>
  </li>
  

  
  
  
  <li><span class="titreDetail">Type de construction</span> : Pierre et Brique</li>
  
  
  

</ul>

</div>



<div class="box">
    <span class="fiche-subtitle">Equipement </span>
  <ul>
    
    <li><span class="titreDetail">WC séparés</span></li>
    
    <li><span class="titreDetail">Chauffage</span> : Individuel électrique</li>
    
    <li><span class="titreDetail">Ascenseur</span></li>
    
    <li><span class="titreDetail">Cheminée</span> : 1</li>
    
    <li><span class="titreDetail">Digicode</span></li>
    
    <li><span class="titreDetail">Interphone</span></li>
    
  </ul>
</div>



<div class="box">
  <span class="fiche-subtitle">Les Plus</span>
  <ul>
    <li class="picto cheminee">Cheminée</li>
    
    
    
    
    
    <li class="picto vue" title="2 expos : rue et cour arborée">2 expos : rue et cour arborée</li>
    
    
  </ul>
</div>

<div class="box">

<span class="fiche-subtitle">&Agrave; savoir</span>
  <ul>
      
    
    
    <li><span class="titreDetail">Charges / mois</span> : 130 €</li>
    
    <li><span class="titreDetail">Taxe foncière</span> : 524 €</li>
    
    
    
    
     

  </ul>

  

  
</div>
<div class="box statistiques">
  <span class="fiche-subtitle gtest">Les performances énergétiques</span>
  
      
          
          <ul id="dep1" class="DEP">
            <li><span>245</span></li>
          </ul>
          
      
      
      <ul id="dep2" class="DEP">
        <li><span>57</span></li>
      </ul>
      
  


</div>

<!--DPE POUR PRINT-->

<div id="DPE_PRINT">
<span>Les performances énergétiques</span>
<br />

    
      <div class="fL font16 margR20">
          
          
          
          
          
              <b>Valeur DPE : 245 [rang E]</b>
          
          
          
          <br /><br />
          <img src="/theme/generic/css/images/bg_dpe-LEFT.jpg" />
      </div>
    
    
      <div class="fL font16">
          
          
          
          
          
          
              <b>Valeur GES : 57 [rang F]</b>
          
          
          <br /><br />
          <img src="/theme/generic/css/images/bg_dpe-Right.jpg" />
      </div>
    

</div>

<div class="box">
	<h3 class="margT20">Tout savoir sur les diagnostics</h3>
      <ul class="fL">
        <li class="arrow">
          <h4><a href="/edito/article/le-diagnostic-de-performance-energetique-dpe-visible-et/">Le Diagnostic de Performance Energétique
    </a></h4></li>
        <li class="arrow">
          <h4><a href="/edito/article/diagnostics-obligations-liees-a-la-transaction/">Diagnostics liés à la transaction</a></h4></li>
        <li class="arrow">
          <h4><a href="/edito/article/location-recapitulation-des-diagnostics-et-autres-obligati/">Diagnostics liés à la location
    </a></h4></li>
        <li class="arrow"><h4><a href="/edito/article/votre-installation-electrique-est-elle-sure/"> Installation électrique
    </a></h4></li>
      </ul>
</div>



<div class="box statistiques" id="Copropriete">

	<span class="fiche-subtitle">Copropriété</span>
    <ul class="W250 fL margR5">
	
		<li><span class="titreDetail">Nombre de Lots</span> : 50</li>
	
	
		<li><span class="titreDetail">Charges courantes par an</span> : 1800,0  €</li>
	
	
    <li><span class="titreDetail">Pas de procédure en cours</span></li></ul>
	

</div><div class="reset"></div>



  
        
	<a href="/imagesBien/202/557/v5/bareme_honoraires.pdf" target="_blank" class="ffDW underline black">
	  Pour consulter les barèmes d'honoraires de l'agence, cliquez ici
	</a>
        
  
</div>


<!--COLONNE DROITE-->
<div class="col-droite-slide">
    
    
    <!--CALCULETTE-->
	  
	  <div id="calculetteCREDIT">	 	
		
		<br>
    <iframe class="borderBox" frameborder="0" src="https://www.panoranet.com/credit-immobilier/formulaire-mob/immo.php?pagevoulue=calcu&act=cap1&code=SP7BGR&montant_pret=749000&calcul_auto=1" width="100%" height="1240px"></iframe>
			  
	  </div>    
	

    
    

    <!--SITE PROPRIO, IMAGINE21, TOUT SAVOIR SUR DPE-->
    <div class="box displayNone">      
      
      
    </div>
</div>
   
		</div>
    </section>
    
    
    <section class="margT10">
    	<!--code fonctionel pour les deux sites commerce et sites

<div id="bannerOpEstim" title="test bannieres">
	<ul>
		<li>Vous voulez vendre ?</li>
		
		<li>
			Combien vaut votre bien ?<br>
			Combien d'acheteurs sont intéressés ?
		</li>
						
	</ul>
	
	<a href="/estimation-immobiliere" onClick="google_tag_event('Banniere Detail,Click,Evaluateur');">Testez ici
		 <i class="fa fa-caret-right" aria-hidden="true"></i></a>
		
</div>

-->



<!-- update code partie test pour ice-->

<a  id="bannerOpEstim" title="Vous voulez vendre ?" 
	href="/estimation-immobiliere" onClick="google_tag_event('Banniere Detail,Click,Evaluateur');">
	<ul>
		<li>Découvrez combien vaut votre bien</li>
		
		<li>
			<div class="zone-defilement-number banner ">
	<ul>
		<li>ENTRE</li>
		<li class="defil-number tranche-1"></li>
		<li>ET</li>
		<li class="defil-number tranche-2"></li>
	</ul>
</div>
<script src="/theme/generic/js/lib/odometer-0.4.6/odometer.min.js"></script>
<script src="/theme/generic/js/c-combien/launch-defil-number.js"></script>
		</li>		
	</ul>

	<div class="cta">Je découvre</div>
</a>
	


		
    </section>    
    
    <section id="annoncesSimilaires" class="slide slide2">
       <h2 class="margB10">Biens approchants</h2>
        
<div class="zoneCarousel carousel-bien-approchants">
  
  
  <div class="prevCarouselLAST navCarousel btnPrec">
  	<i class="fa fa-angle-left fa-5x" aria-hidden="true"></i>
  </div>
  
  <div class="carouselLAST ">
    <ul class="carrousel carrouselXL annoncesSimilaires">      
      
      <li class="annonce">
        

          <div class="contentAnnonce" id="bien_2112106360" data-uid="2112106360">
            <div class="zone-photo-exclu">
                <a href="/trouver_logement/detail/2112106360/" onclick="google_tag_event('bien,clic_sur_listing,202_682_28351');return go_detail(this);">
                      <div class="price">699 000&euro; <span class="font20"></span></div>
                      
                      <span class="infoEXCLU">
                      
                        Mandat Confiance / Exclusivité
                      </span>
                      
                      <p class="pixM photoAnnonce" onmouseover="popup_annonce('2112106360','202_682_28351',$(this));return false;">
                        <img width="220" height="146" src="/imagesBien/202/682/c21_202_682_28351_9_8EADCE3B-25F1-4AFB-8C3B-05920F2BFF62.jpg" alt="Vente appartement - PARIS (75012) - 61.3 m² - 3 pi&egrave;ces" />
                      </p>
              </a>
            </div>
              <div class="zone-text-loupe">  
                <a href="/trouver_logement/detail/2112106360/" onclick="google_tag_event('bien,clic_sur_listing,202_682_28351');return go_detail(this);">
                    <h3>
                      
                      PARIS&nbsp;&nbsp;<span class="font14">75012</span>
                      
                    </h3>
                    <h4 class="detail_vignette">
                      Appartement F3 <br />61,33 m&sup2; , 3 pièces
                    </h4>
                <span class="infoZOOM">Voir détail</span>
              </a>
            </div>
          </div>
      </li>
      
      <li class="annonce">
        

          <div class="contentAnnonce" id="bien_1898045205" data-uid="1898045205">
            <div class="zone-photo-exclu">
                <a href="/trouver_logement/detail/1898045205/" onclick="google_tag_event('bien,clic_sur_listing,202_2554_9215');return go_detail(this);">
                      <div class="price">777 000&euro; <span class="font20"></span></div>
                      
                      <span class="infoEXCLU">
                      
                        Mandat Confiance / Exclusivité
                      </span>
                      
                      <p class="pixM photoAnnonce" onmouseover="popup_annonce('1898045205','202_2554_9215',$(this));return false;">
                        <img width="220" height="146" src="/imagesBien/202/2554/c21_202_2554_9215_9_CE27788A-97CD-4ACC-B78E-308E9132C22F.jpg" alt="Vente appartement - PARIS (75001) - 57.0 m² - 3 pi&egrave;ces" />
                      </p>
              </a>
            </div>
              <div class="zone-text-loupe">  
                <a href="/trouver_logement/detail/1898045205/" onclick="google_tag_event('bien,clic_sur_listing,202_2554_9215');return go_detail(this);">
                    <h3>
                      
                      PARIS&nbsp;&nbsp;<span class="font14">75001</span>
                      
                    </h3>
                    <h4 class="detail_vignette">
                      Appartement F3 <br />57,0 m&sup2; , 3 pièces
                    </h4>
                <span class="infoZOOM">Voir détail</span>
              </a>
            </div>
          </div>
      </li>
      
      <li class="annonce">
        

          <div class="contentAnnonce" id="bien_1988294646" data-uid="1988294646">
            <div class="zone-photo-exclu">
                <a href="/trouver_logement/detail/1988294646/" onclick="google_tag_event('bien,clic_sur_listing,202_2907_26053');return go_detail(this);">
                      <div class="price">779 000&euro; <span class="font20"></span></div>
                      
                      <span class="infoEXCLU">
                      
                        Mandat Confiance / Exclusivité
                      </span>
                      
                      <p class="pixM photoAnnonce" onmouseover="popup_annonce('1988294646','202_2907_26053',$(this));return false;">
                        <img width="220" height="146" src="/imagesBien/202/2907/c21_202_2907_26053_9_8A4FA6B6-3FD4-464F-8BCB-02C91FFD0FF7.jpg" alt="Vente appartement - PARIS (75012) - 64.0 m² - 3 pi&egrave;ces" />
                      </p>
              </a>
            </div>
              <div class="zone-text-loupe">  
                <a href="/trouver_logement/detail/1988294646/" onclick="google_tag_event('bien,clic_sur_listing,202_2907_26053');return go_detail(this);">
                    <h3>
                      
                      PARIS&nbsp;&nbsp;<span class="font14">75012</span>
                      
                    </h3>
                    <h4 class="detail_vignette">
                      Appartement F3 <br />64,0 m&sup2; , 3 pièces
                    </h4>
                <span class="infoZOOM">Voir détail</span>
              </a>
            </div>
          </div>
      </li>
      
      <li class="annonce">
        

          <div class="contentAnnonce" id="bien_2053306151" data-uid="2053306151">
            <div class="zone-photo-exclu">
                <a href="/trouver_logement/detail/2053306151/" onclick="google_tag_event('bien,clic_sur_listing,202_2154_20991');return go_detail(this);">
                      <div class="price">785 000&euro; <span class="font20"></span></div>
                      
                      <span class="infoEXCLU">
                      
                        Mandat Confiance / Exclusivité
                      </span>
                      
                      <p class="pixM photoAnnonce" onmouseover="popup_annonce('2053306151','202_2154_20991',$(this));return false;">
                        <img width="220" height="146" src="/imagesBien/202/2154/c21_202_2154_20991_9_1AE7E8B3-DB78-4E79-BF74-AED07CD10622.jpg" alt="Vente appartement - PARIS (75009) - 54.6 m² - 4 pi&egrave;ces" />
                      </p>
              </a>
            </div>
              <div class="zone-text-loupe">  
                <a href="/trouver_logement/detail/2053306151/" onclick="google_tag_event('bien,clic_sur_listing,202_2154_20991');return go_detail(this);">
                    <h3>
                      
                      PARIS&nbsp;&nbsp;<span class="font14">75009</span>
                      
                    </h3>
                    <h4 class="detail_vignette">
                      Appartement Duplex <br />54,6 m&sup2; , 4 pièces
                    </h4>
                <span class="infoZOOM">Voir détail</span>
              </a>
            </div>
          </div>
      </li>
      
      <li class="annonce">
        

          <div class="contentAnnonce" id="bien_2118864709" data-uid="2118864709">
            <div class="zone-photo-exclu">
                <a href="/trouver_logement/detail/2118864709/" onclick="google_tag_event('bien,clic_sur_listing,202_3425_618');return go_detail(this);">
                      <div class="price">600 000&euro; <span class="font20"></span></div>
                      
                      <span class="infoEXCLU">
                      
                        Mandat Confiance / Exclusivité
                      </span>
                      
                      <p class="pixM photoAnnonce" onmouseover="popup_annonce('2118864709','202_3425_618',$(this));return false;">
                        <img width="220" height="146" src="/imagesBien/202/3425/c21_202_3425_618_9_7FD8FEAD-90BC-4483-8550-9D722EA02227.jpg" alt="Vente appartement - LEVALLOIS PERRET (92300) - 70.0 m² - 3 pi&egrave;ces" />
                      </p>
              </a>
            </div>
              <div class="zone-text-loupe">  
                <a href="/trouver_logement/detail/2118864709/" onclick="google_tag_event('bien,clic_sur_listing,202_3425_618');return go_detail(this);">
                    <h3>
                      
                      LEVALLOIS PERRET&nbsp;&nbsp;<span class="font14">92300</span>
                      
                    </h3>
                    <h4 class="detail_vignette">
                      Appartement F3 <br />70,0 m&sup2; , 3 pièces
                    </h4>
                <span class="infoZOOM">Voir détail</span>
              </a>
            </div>
          </div>
      </li>
      
      <li class="annonce">
        

          <div class="contentAnnonce" id="bien_2101060083" data-uid="2101060083">
            <div class="zone-photo-exclu">
                <a href="/trouver_logement/detail/2101060083/" onclick="google_tag_event('bien,clic_sur_listing,202_2947_5130');return go_detail(this);">
                      <div class="price">615 000&euro; <span class="font20"></span></div>
                      
                      <span class="infoEXCLU">
                      
                        Mandat Confiance / Exclusivité
                      </span>
                      
                      <p class="pixM photoAnnonce" onmouseover="popup_annonce('2101060083','202_2947_5130',$(this));return false;">
                        <img width="220" height="146" src="/imagesBien/202/2947/c21_202_2947_5130_9_75386A63-E33C-4396-BB39-28647E4BD8A7.jpg" alt="Vente appartement - PARIS (75013) - 52.8 m² - 3 pi&egrave;ces" />
                      </p>
              </a>
            </div>
              <div class="zone-text-loupe">  
                <a href="/trouver_logement/detail/2101060083/" onclick="google_tag_event('bien,clic_sur_listing,202_2947_5130');return go_detail(this);">
                    <h3>
                      
                      PARIS&nbsp;&nbsp;<span class="font14">75013</span>
                      
                    </h3>
                    <h4 class="detail_vignette">
                      Appartement F3 <br />52,78 m&sup2; , 3 pièces
                    </h4>
                <span class="infoZOOM">Voir détail</span>
              </a>
            </div>
          </div>
      </li>
      
      <li class="annonce">
        

          <div class="contentAnnonce" id="bien_1947897682" data-uid="1947897682">
            <div class="zone-photo-exclu">
                <a href="/trouver_logement/detail/1947897682/" onclick="google_tag_event('bien,clic_sur_listing,202_2864_7195');return go_detail(this);">
                      <div class="price">619 000&euro; <span class="font20"></span></div>
                      
                      <p class="pixM photoAnnonce" onmouseover="popup_annonce('1947897682','202_2864_7195',$(this));return false;">
                        <img width="220" height="146" src="/imagesBien/202/2864/c21_202_2864_7195_9_2D6C0E8A-72C7-44BD-9639-1E6F8D12FA4A.jpg" alt="Vente appartement - PARIS (75015) - 54.0 m² - 3 pi&egrave;ces" />
                      </p>
              </a>
            </div>
              <div class="zone-text-loupe">  
                <a href="/trouver_logement/detail/1947897682/" onclick="google_tag_event('bien,clic_sur_listing,202_2864_7195');return go_detail(this);">
                    <h3>
                      
                      PARIS&nbsp;&nbsp;<span class="font14">75015</span>
                      
                    </h3>
                    <h4 class="detail_vignette">
                      Appartement F2 <br />53,96 m&sup2; , 3 pièces
                    </h4>
                <span class="infoZOOM">Voir détail</span>
              </a>
            </div>
          </div>
      </li>
      
      <li class="annonce">
        

          <div class="contentAnnonce" id="bien_2114771037" data-uid="2114771037">
            <div class="zone-photo-exclu">
                <a href="/trouver_logement/detail/2114771037/" onclick="google_tag_event('bien,clic_sur_listing,202_3291_43968');return go_detail(this);">
                      <div class="price">620 000&euro; <span class="font20"></span></div>
                      
                      <span class="infoEXCLU">
                      
                        Mandat Confiance / Exclusivité
                      </span>
                      
                      <p class="pixM photoAnnonce" onmouseover="popup_annonce('2114771037','202_3291_43968',$(this));return false;">
                        <img width="220" height="146" src="/imagesBien/202/3291/c21_202_3291_43968_9_4D368C5D-02BE-420E-9957-A01CF9A778D9.jpg" alt="Vente appartement - PARIS (75014) - 65.0 m² - 4 pi&egrave;ces" />
                      </p>
              </a>
            </div>
              <div class="zone-text-loupe">  
                <a href="/trouver_logement/detail/2114771037/" onclick="google_tag_event('bien,clic_sur_listing,202_3291_43968');return go_detail(this);">
                    <h3>
                      
                      PARIS&nbsp;&nbsp;<span class="font14">75014</span>
                      
                    </h3>
                    <h4 class="detail_vignette">
                      Appartement F4 <br />65,0 m&sup2; , 4 pièces
                    </h4>
                <span class="infoZOOM">Voir détail</span>
              </a>
            </div>
          </div>
      </li>
      
      <li class="annonce">
        

          <div class="contentAnnonce" id="bien_2117613932" data-uid="2117613932">
            <div class="zone-photo-exclu">
                <a href="/trouver_logement/detail/2117613932/" onclick="google_tag_event('bien,clic_sur_listing,202_467_11644');return go_detail(this);">
                      <div class="price">625 400&euro; <span class="font20"></span></div>
                      
                      <span class="infoEXCLU">
                      
                        Mandat Confiance / Exclusivité
                      </span>
                      
                      <p class="pixM photoAnnonce" onmouseover="popup_annonce('2117613932','202_467_11644',$(this));return false;">
                        <img width="220" height="146" src="/imagesBien/202/467/c21_202_467_11644_9_55E8B856-C648-45C9-9DA6-DABAA4F22E4C.jpg" alt="Vente appartement - PARIS (75013) - 47.0 m² - 2 pi&egrave;ces" />
                      </p>
              </a>
            </div>
              <div class="zone-text-loupe">  
                <a href="/trouver_logement/detail/2117613932/" onclick="google_tag_event('bien,clic_sur_listing,202_467_11644');return go_detail(this);">
                    <h3>
                      
                      PARIS&nbsp;&nbsp;<span class="font14">75013</span>
                      
                    </h3>
                    <h4 class="detail_vignette">
                      Appartement T2 <br />47,0 m&sup2; , 2 pièces
                    </h4>
                <span class="infoZOOM">Voir détail</span>
              </a>
            </div>
          </div>
      </li>
      
      <li class="annonce">
        

          <div class="contentAnnonce" id="bien_1994024571" data-uid="1994024571">
            <div class="zone-photo-exclu">
                <a href="/trouver_logement/detail/1994024571/" onclick="google_tag_event('bien,clic_sur_listing,202_682_28161');return go_detail(this);">
                      <div class="price">630 000&euro; <span class="font20"></span></div>
                      
                      <p class="pixM photoAnnonce" onmouseover="popup_annonce('1994024571','202_682_28161',$(this));return false;">
                        <img width="220" height="146" src="/imagesBien/202/682/c21_202_682_28161_9_046B580B-07EC-44AA-BC09-81E5F7B47F71.jpg" alt="Vente appartement - PARIS (75012) - 60.5 m² - 3 pi&egrave;ces" />
                      </p>
              </a>
            </div>
              <div class="zone-text-loupe">  
                <a href="/trouver_logement/detail/1994024571/" onclick="google_tag_event('bien,clic_sur_listing,202_682_28161');return go_detail(this);">
                    <h3>
                      
                      PARIS&nbsp;&nbsp;<span class="font14">75012</span>
                      
                    </h3>
                    <h4 class="detail_vignette">
                      Appartement F3 <br />60,54 m&sup2; , 3 pièces
                    </h4>
                <span class="infoZOOM">Voir détail</span>
              </a>
            </div>
          </div>
      </li>
      
    </ul>
  </div>
  
  <div class="suivCarouselLAST navCarousel btnSuiv">
  	<i class="fa fa-angle-right fa-5x" aria-hidden="true"></i>
  </div>
  
</div>
<script type="text/javascript">
    UID_BIEN = UID_BIEN.concat(["2112106360","1898045205","1988294646","2053306151","2118864709","2101060083","1947897682","2114771037","2117613932","1994024571"]);
</script>

<div class="reset"></div>


    </section>
    <section id="decouvrirVille" class="slide slide3">
        
<link rel="stylesheet" type="text/css" href="/theme/generic/js/lib/jquery.jqplot/jquery.jqplot.min.css" />
<script>

 
  var CP = 75012;
  var CODE_INSEE = 75112;
 
  var BIENS_PAR_TYPE = [["divers", 3, "/annonces/achat-divers/cp-75012/s-0-/st-0-/b-0-/page-1/"], ["appartement", 13, "/annonces/achat-appartement/cp-75012/s-0-/st-0-/b-0-/page-1/"], ["parking", 10, "/annonces/achat-parking/cp-75012/s-0-/st-0-/b-0-/page-1/"]];
  var PRIX_MOYENS = [["Maison", 808111.0], ["Appartement", 499309.0]];
  var LOCALISATION_RESTREINTE = false;
     $.getScript("/theme/generic/js/lib/jquery.jqplot/my.jqplot.js", function() {
        $.getScript("/js/stats_ville.js", function () {
        fix_articles();
     });
  });
  

</script>

<h2>
  <a href="/edito/ville/paris-12eme/" class="yellow">
    Découvrir Paris 12
    </a>
</h2>



  <div id="graphVILLE" class="line">
    <ul class="menuGraph">
      <li id="menu-graph1" class="BTN">Prix moyens</li>
      <li id="menu-graph2" class="BTN">Biens à vendre</li>
      <li id="menu-graph3" class="BTN insee">Les habitants</li>
      
        <li id="menu-graph4" class="BTN impot">Taux et taxes</li>

      
      
    </ul>
    <ul class="contentGraph">
      <li id="graph1" class="graph">
          <div id="graphique1" class="graph" style="width:295px;height:210px;">
          </div>
          <div class="infos">
            <h3>Prix moyens constatés en région ILE-DE-FRANCE</h3>
              <ul>
              </ul>
          </div>
          <div class="reset"></div>
      </li>
      <li id="graph2" class="graph">
          <div id="graphique2" class="graph" style="width:295px;height:210px;">
          </div>
          <div class="infos">
              <h3>Biens à vendre à Paris 12</h3>
              <ul></ul>
          </div>
          <div class="reset"></div>
      </li>
      <li id="graph3" class="graph insee">
          <div id="graphique3" class="graph" style="width:295px;height:210px;">
          </div>
          <div class="infos">
            <h3>Les habitants de Paris 12</h3>
              <ul></ul>
          </div>
          <div class="reset"></div>
      </li>
      
      <li id="graph4" class="graph impot">
          <div id="graphique4" class="graph" style="width:295px;height:210px;">
          </div>
          <div class="infos">
              <h3>Taux d'impositions à Paris 12</h3>
              <ul></ul>
          </div>
          <div class="reset"></div>
      </li>

      
      
  </ul>
    <div class="reset"></div>
  </div>


<div class="reset"></div>

<div class="edito-ville-ajax">
	<div class="line">
	  <h3>Paris 12 en un clin d'œil</h3>
	</div>

	
	<div class="box">
	  <a href="/edito/ville/paris-12eme/"><img src="/imagesBien/202/cms/687839769/640px-P1020343_Paris_XII_Boulevard_de_Reuilly_rwk/640px-P1020343_Paris_XII_Boulevard_de_Reuilly_rwk__cmsbig.JPG" alt="Paris 12ème - © By Mbzt via fr.wikimedia.org" /></a>
	</div>
	

	<div class="box">
	  <ul>
		
		<li><span class="titreDetail">Commune : </span>PARIS</li>
		<li><span class="titreDetail">Code postal : </span>75012</li>
		
		<li id="insee-population-cont"><span class="titreDetail">Population : </span><span id="insee-population"></span></li>
		<li><span class="titreDetail">Département : </span>Paris (75)</li>
		<li><span class="titreDetail">Région : </span>ILE-DE-FRANCE</li>
	  </ul>

	  
	  <h3>Les villes à proximité</h3>
	  <ul>
		
		<li class="arrow"><h4><a href="/annonces/achat-appartement/cp-75011/s-0-/st-0-/b-0-/page-1/">PARIS 11</a></h4></li>
		
		<li class="arrow"><h4><a href="/annonces/achat-appartement/v-ivry+sur+seine/s-0-/st-0-/b-0-/page-1/">IVRY SUR SEINE</a></h4></li>
		
		<li class="arrow"><h4><a href="/annonces/achat-appartement/v-st+mande/s-0-/st-0-/b-0-/page-1/">ST MANDE</a></h4></li>
		
		<li class="arrow"><h4><a href="/annonces/achat-appartement/v-le+kremlin+bicetre/s-0-/st-0-/b-0-/page-1/">LE KREMLIN BICETRE</a></h4></li>
		
		<li class="arrow"><h4><a href="/annonces/achat-appartement/cp-75020/s-0-/st-0-/b-0-/page-1/">PARIS 20</a></h4></li>
		
	  </ul>
	  

	</div>
	<div class="box">

	  
	  <h3>Tout savoir sur Paris 12</h3>
	  <div class="edito">
		<p>Bien que doté d’hospices, de monastères et même d’une prison dès le Moyen Age, le territoire de l’actuel 12e arrondissement ne se lotit réellement qu’à partir du XVIIIe siècle.</p>
		<div class="arrow">
		  <h4><a href="/edito/ville/paris-12eme/">Paris 12</a></h4>
		</div>
	  </div>
	  

	</div>
	<!--
	<div class="box articles_cont">
	  <span>Nos experts parlent de : Paris 12</span>
	  
	</div>
	-->
	<div class="reset"></div>
</div>
    </section>
    <section id="acheterMaison" class="slide slide4">
        
<h2>Tout savoir pour acheter un appartement</h2>
<div class="zone-article-ajax">


	<div class="box articles_cont">
	  <h3>Acheter son appartement</h3>
	  

<ul class="articles margB15">
  
    <li class="XXS">
      <div class="pix">
        <a href="/edito/article/frais-de-copropriete-les-postes-les-plus-voraces/"><img src="/imagesBien/202/cms/1460196967/TopArticleSite/TopArticleSite__cmsicon.jpg" alt="Frais de copropriété : les postes les plus voraces"  title="Frais de copropriété : les postes les plus voraces"/></a>
      </div>
      <div class="edito">
        <h4><a href="/edito/article/frais-de-copropriete-les-postes-les-plus-voraces/">Frais de copropriété : les postes les plus voraces</a></h4>
        
          <p>Assurance, frais de gestion du syndic et chauffage constituent une trinité maléfique pour les copropriétaires ...</p>
        
      </div>
      <div class="reset"></div>
    </li>
  
    <li class="XXS">
      <div class="pix">
        <a href="/edito/article/assurance-emprunteur-la-liberte-est-au-bout-du-chemin/"><img src="/imagesBien/202/cms/1547728020/Assurance/Assurance__cmsicon.png" alt="Assurance emprunteur : la liberté est au bout du chemin."  title="Assurance emprunteur : la liberté est au bout du chemin."/></a>
      </div>
      <div class="edito">
        <h4><a href="/edito/article/assurance-emprunteur-la-liberte-est-au-bout-du-chemin/">Assurance emprunteur : la liberté est au bout du chemin.</a></h4>
        
          <p>Depuis quelque temps, les contrats d’assurance sont l’objet de toute l’attention des ...</p>
        
      </div>
      <div class="reset"></div>
    </li>
  
</ul>

    
        <div><h4 class="arrow">
        
            <a href="/edito/article/acheter/conseil-achat-immobilier/?type_bien=2&amp;type_article=1">
        
        Voir tous nos conseils sur l&#39;achat d&#39;un bien immobilier
        </a></h4></div>
    



	</div>
	<div class="box">
	  <h3 >Pour bien acheter</h3>
	  <ul class="articles">
  
    <li class="arrow"><h4><a href="/edito/article/beneficiez-du-censi-bouvard/">Bénéficiez du Censi-Bouvard</a></h4></li>
  
    <li class="arrow"><h4><a href="/edito/article/la-maison-connectee-la-cuisine-5/">La maison connectée - La cuisine ...</a></h4></li>
  
    <li class="arrow"><h4><a href="/commerce_entreprises/article/les-normes-bbc-et-rt2012-reduire-votre-consommation-energe/">Les normes BBC et RT2012 : ...</a></h4></li>
  
    <li class="arrow"><h4><a href="/edito/article/emprunt-a-taux-zero-pour-economies-denergie/">Emprunt à taux zéro pour économies ...</a></h4></li>
  
    <li class="arrow"><h4><a href="/edito/article/donation-dun-bien-immobilier-a-vos-enfants-comment-ca-marc/">Donation d&#39;un bien immobilier à vos ...</a></h4></li>
  
</ul>


	</div>
	<div class="box">
	  
		<h3>Appartements à louer</h3>
		<ul>
		  
			<li class="arrow"><h4><a href="/annonces/achat-appartement/cp-75012/s-0-/st-0-/b-0-/page-1/">PARIS 12ème (13 appartements)</a></h4></li>
		  
			<li class="arrow"><h4><a href="/annonces/achat-appartement/cp-75011/s-0-/st-0-/b-0-/page-1/">PARIS 11ème (19 appartements)</a></h4></li>
		  
			<li class="arrow"><h4><a href="/annonces/achat-appartement/v-ivry+sur+seine/s-0-/st-0-/b-0-/page-1/">IVRY SUR SEINE (5 appartements)</a></h4></li>
		  
			<li class="arrow"><h4><a href="/annonces/achat-appartement/v-st+mande/s-0-/st-0-/b-0-/page-1/">ST MANDE (3 appartements)</a></h4></li>
		  
			<li class="arrow"><h4><a href="/annonces/achat-appartement/v-le+kremlin+bicetre/s-0-/st-0-/b-0-/page-1/">LE KREMLIN BICETRE (4 appartements)</a></h4></li>
		  
		</ul>
	  
	</div>
</div>
<div class="reset"></div>
<script>
  if (typeof fix_articles != 'undefined'){
      fix_articles();
  }
</script>

    </section>
    <section id="votreAgence" class="slide slide5">
        

<h2>Votre agence immobilière </h2>
<div class="zone-ag-ajax equal">
	<div class="box equal50">
	  <a href="/trouver_agence/agence/85029/">
			<img src="/imagesBien/202/557/webmaster_1_202_557_0_2_0.jpg" alt="CENTURY 21 Chorus"/>
			<h3 class="noBorder tt"><a href="/trouver_agence/agence/85029/">CENTURY 21 Chorus</a></h3>
			<ul class="coordonneesAgence">
			<li>86  avenue Ledru-Rollin</li>
			
			<li>75012 PARIS</li>
			</ul>
		</a>


		<a id="yma-mentions">Mentions légales</a>
		
		
		<div id="" class="yma-mentions-content " style="display: none">
		 
		 
         		
                                
         			        <ul>    
		<li><strong>Raison sociale : </strong>Chorus Immobilier</li>				
		<li><strong>RCS </strong> 402734933</li>
		<li><strong> au capital de :</strong> 80 000 €   &euro; </li>
		<li><strong>Adresse du siège Social :</strong> 86 avenue Ledru-Rollin 75012 PARIS</li>
		<li><strong>Téléphone :</strong> 01 53 46 60 00 </li>
		
		<li><strong>Adresse mail :</strong><img class="img-mail" src="/imagesBien/202/557/contact.png" /></li>
		
		<li><strong>Numéro de déclaration de TVA :</strong> </li>
		<li>Le titre professionnel d'agent immobilier est régi par la loi n°70-9 du 2 janvier 1970 (dite "loi Hoguet")<br/> et son décret d'application n°72-678 du 20 juillet 1972</li>             

		
        <li><strong>Carte professionnelle n° :</strong> CPI 7501 2016 000 015 947 délivrée par la CCI de : CCI Paris Île-de-France , 35, bld du Port - Cap Cergy - Bât. C - 95031 CERGY-PONTOISE, France
    	</li>
		
		<li><strong>Nom et Adresse du garant :</strong> GALIAN 89, rue La Boétie 75008 PARIS</li>
		
		
    	
		
		<li>
			<strong>Barèmes d'honoraires :</strong>
			<a href="/imagesBien/202/557/v5/bareme_honoraires.pdf" target="_blank" class="ffDW underline black">
				Pour consulter les barèmes d'honoraires de l'agence, cliquez ici
			</a>
		</li>
		
		
		<li>
			<br>
                        En cas de litige avec la société Chorus Immobilier relatif à l'exécution d'un contrat de vente ou de prestation de services, le consommateur est informé qu'il a la possibilité de saisir le médiateur de la consommation dans les conditions prévues aux articles L 611-1 et suivants du Code de la consommation, dont les coordonnées et le site Internet sont : Association MEDIMMOCONSO, 1 Allée du Parc de Mesemena - Bât A - CS25222 - 44505 LA BAULE CEDEX  - Mail :contact@medimmoconso.fr    - Site Internet : https://medimmoconso.fr/adresser-une-reclamation/  .
		</li>						
	</ul>
	<br><br>

                                 
         		
         	
         	
				         	
				<a class="underline black" href="https://www.century21-chorus.com/mentions_legales/" target="_blank">Voir nos mentions légales complètes</a>
				
     		
	 </div>


	</div>
	<div class="box equal50">

	  
	  
	  <strong class="font14 underline" >L’actualité de notre agence</strong>
	  <p>
		Voilà on y est : le confinement est d’actualité, pour quinze jours nous dit-on. Au regard de l’évolution de la situation sanitaire française, ça paraît peu mais bon... En attendant, quand on est présentement en train de faire ses cartons, comment faire et surtout peut-on faire ? Déménager, est-ce autorisé ...
	  </p>
		<div class="arrow arrow-right"><a href="http://www.century21-chorus.com/actus/2128313326/" target="_blank" 
			class="font14 underline grey4 ">Lire la suite</a></div>
	  
		
		<!-- changement d'emplacement-->
		<div class="box WAUTO link-infos-agances">
				<ul>
				
				<li class="arrow"><h4><a rel="//www.century21-chorus.com" class="noFOLLOW btn-link-infos-agances" target="_blank" title="Site web de l'agence">Site web de l'agence</a></h4></li>
				
				<li class="arrow"><h4><a rel="/trouver_agence/agence/85029/" class="noFOLLOW btn-link-infos-agances" title="Fiche de l'agence">Fiche de l'agence</a></h4></li>
				<li class="arrow">
					
				
					<div class="reset"></div>
				</li>
				<li class="jump"></li>
				
				<li class="arrow">
					
						<a class="yellow" href="//www.century21-chorus.com/annonces/achat/" target="_blank">
							10 biens &agrave; vendre</a>
					
				</li>
				
				
				
				</ul>
		</div>
		<!-- changement d'emplacement-->
	</div>






	<div class="reset"></div>
	
	
	
	
		
		<div class="foot-content2">
			<div class="center content_qualitelis">
				<div id="header" class="displayFlexSpace">
					<div class="parole_clients">
						<img src="/theme/generic/css/images/op-marque/pdc.svg" width="258" alt="">
					</div>
					<div class="box_note">
						<div class="displayFlexCenter flex-flow">
							<span class="font16 bold" itemprop="name">NOTE GLOBALE<br>DE L'AGENCE</span>
							<div class="my-rating" data-rating="9,2"></div>
						</div>						
						<div class="displayFlexCenter font40 bold">
							<span> 9,2/10</span>
						</div>
						<div class="flex-flow displayFlexCenter">
							<span class="font16 bold">NOMBRE D'AVIS<br>SUR L'AGENCE</span>

							<span class=""><a href="https://www.century21-chorus.com/agence/avis-clients/"><span class="font22 black bold">205</span></a></span>
						</div>
					</div>
					<div class="box_qualitelis box_certifie_par">Certifié par <img class="qualitelis-img" src="/theme/generic/css/images/qualitelis/qualitelis.svg" alt="Qualitelis"></div>
				</div>			
				<div class="reset"></div>				
				<h2 class="h2_style">Nos clients donnent leur avis</h2>
				<div class="reset"></div>				
				
				<div class="relative">					
					
						
							
							<div class="tem_clients">
								<div class="box box3">
									<div class="note">
										<h3 class="bold">10/10</h3>
										<div class="my-rating2" data-rating2="10"></div>
									</div>
									<div class="txt">
										<p>
											Très satisfaite de l&#39;expérience ; une conseillère (Farah) très professionnelle, disponible, réactive, efficace et toujours à l&#39;écoute.&nbsp;
											
											
												
											
											
										</p>
									</div>
									<div class="reset"></div>
									<div class="profil">
										<div class="img-client">
											
																					
												<img src="/theme/generic/css/images/qualitelis/avatars/femme-3.svg" alt="">
											
											
										</div>
										<div class="info">
											<span class="h3_style">AUDREY F.</span>
											<div class="reset"></div>
											<span><div class="date_com" data-date="2019-07-05"></div>
												
													Client Acheteur
																							
												
													après compromis de vente
												
											</span>
										</div>
									</div>
									
									<div class="reset"></div>
								</div>
							</div>

							<div id="popin_1" class="displayNone popin_glob">
								<div class="popin_first">
									<div class="profil">
										<div class="img-client">
											
																					
												<img src="/theme/generic/css/images/qualitelis/avatars/femme-3.svg" alt="">
											
											
										</div>								
										<div class="info" data-date="2019-07-05">
											<span class="h3_style margR5">
												<span class="margR5">
													AUDREY F.
												</span>
												10/10
											</span>
											<span class="my-rating2" data-rating2="10"></span>
											<div class="reset"></div>
											<span class="info_client"><div class="date_com" data-date="2019-07-05"></div>&nbsp;-
												
													Client Acheteur
																							
												
													ayant signé un compromis de vente
												
											</span>
										</div>
									</div>
									<div class="reset"></div>
									<div class="txt">
										<p>
											Très satisfaite de l&#39;expérience ; une conseillère (Farah) très professionnelle, disponible, réactive, efficace et toujours à l&#39;écoute.
										</p>
									</div>
								</div>
								
								<a class="buton-close">
									<i class="fa fa-times fa-2x" aria-hidden="true"></i>
								</a>
							</div>
							
						
					
						
							
							<div class="tem_clients">
								<div class="box box3">
									<div class="note">
										<h3 class="bold">10/10</h3>
										<div class="my-rating2" data-rating2="10"></div>
									</div>
									<div class="txt">
										<p>
											Bonjour, j’ai réalisé mon premier achat avec Century 21. C’est Rachel Seroussi qui s’est occupée de moi. Elle s’est montrée extrêmement professionnel…&nbsp;
											
											
												
													<a class="popin_a" data-target="popin_2">
														<span>Lire la suite <i class="fa fa-chevron-right" aria-hidden="true"></i></span>
													</a>
												
											
											
										</p>
									</div>
									<div class="reset"></div>
									<div class="profil">
										<div class="img-client">
											
																					
												<img src="/theme/generic/css/images/qualitelis/avatars/femme-4.svg" alt="">
											
											
										</div>
										<div class="info">
											<span class="h3_style">Solaine C.</span>
											<div class="reset"></div>
											<span><div class="date_com" data-date="2019-06-08"></div>
												
													Client Acheteur
																							
												
													après acte de vente
												
											</span>
										</div>
									</div>
									
									<div class="reset"></div>
								</div>
							</div>

							<div id="popin_2" class="displayNone popin_glob">
								<div class="popin_first">
									<div class="profil">
										<div class="img-client">
											
																					
												<img src="/theme/generic/css/images/qualitelis/avatars/femme-4.svg" alt="">
											
											
										</div>								
										<div class="info" data-date="2019-06-08">
											<span class="h3_style margR5">
												<span class="margR5">
													Solaine C.
												</span>
												10/10
											</span>
											<span class="my-rating2" data-rating2="10"></span>
											<div class="reset"></div>
											<span class="info_client"><div class="date_com" data-date="2019-06-08"></div>&nbsp;-
												
													Client Acheteur
																							
												
													après la signature de l'acte de vente
												
											</span>
										</div>
									</div>
									<div class="reset"></div>
									<div class="txt">
										<p>
											Bonjour, j’ai réalisé mon premier achat avec Century 21. C’est Rachel Seroussi qui s’est occupée de moi. Elle s’est montrée extrêmement professionnelle, disponible et sympathique et a grandement contribué à ce que tout se déroule bien. Je recommande par conséquent l’agence et tout particulièrement cet agent immobilier. Solaine Claude
										</p>
									</div>
								</div>
								
								<a class="buton-close">
									<i class="fa fa-times fa-2x" aria-hidden="true"></i>
								</a>
							</div>
							
						
					
						
							
							<div class="tem_clients">
								<div class="box box3">
									<div class="note">
										<h3 class="bold">10/10</h3>
										<div class="my-rating2" data-rating2="10"></div>
									</div>
									<div class="txt">
										<p>
											Encadrement réactif et professionnel, à l&#39;écoute du client.&nbsp;
											
											
												
											
											
										</p>
									</div>
									<div class="reset"></div>
									<div class="profil">
										<div class="img-client">
											
																					
												<img src="/theme/generic/css/images/qualitelis/avatars/femme-1.svg" alt="">
											
											
										</div>
										<div class="info">
											<span class="h3_style">PATRICIA B.</span>
											<div class="reset"></div>
											<span><div class="date_com" data-date="2019-05-26"></div>
												
													Client Acheteur
																							
												
													après acte de vente
												
											</span>
										</div>
									</div>
									
									<div class="reset"></div>
								</div>
							</div>

							<div id="popin_3" class="displayNone popin_glob">
								<div class="popin_first">
									<div class="profil">
										<div class="img-client">
											
																					
												<img src="/theme/generic/css/images/qualitelis/avatars/femme-1.svg" alt="">
											
											
										</div>								
										<div class="info" data-date="2019-05-26">
											<span class="h3_style margR5">
												<span class="margR5">
													PATRICIA B.
												</span>
												10/10
											</span>
											<span class="my-rating2" data-rating2="10"></span>
											<div class="reset"></div>
											<span class="info_client"><div class="date_com" data-date="2019-05-26"></div>&nbsp;-
												
													Client Acheteur
																							
												
													après la signature de l'acte de vente
												
											</span>
										</div>
									</div>
									<div class="reset"></div>
									<div class="txt">
										<p>
											Encadrement réactif et professionnel, à l&#39;écoute du client.
										</p>
									</div>
								</div>
								
								<a class="buton-close">
									<i class="fa fa-times fa-2x" aria-hidden="true"></i>
								</a>
							</div>
							
						
					
				</div>
				<div class="page_avis">
					
					<a href="https://www.century21-chorus.com/agence/avis-clients/" target="_blank">
						<i class="fa fa-angle-right" aria-hidden="true"></i> Voir tous les avis
					</a>
					
				</div>
				
			</div>
		</div>
		
		<script>
			function convertDateToText(maDate){
				var txtDate = maDate.split('-');
				txtDate = txtDate.join('-');
				var newDate = new Date(txtDate);
				var options = {year: "numeric", month: "long", day: "numeric"};

				return newDate.toLocaleDateString("fr-FR", options);
			}
			var IS_MOBILE = IS_MOBILE;
			if (IS_MOBILE !== 'undefined') {
				$(".popin_a").each(function(){
					var popin;
					$(this).click(function(){
						popin = $("#" + $(this).data("target"));
						// Init de la date de reponse de l'ag
						if($(".date-custom").length){
							$(".date-custom").each(function(){			
								$(this).html(convertDateToText($(this).data("date")));
							});
						}
						popin.fadeIn();
						popin.find(".buton-close").click(function(){
							popin.fadeOut();
						});
					});
				});
			} else {
				$(".popin_a").each(function(){
					var popin;
					$(this).click(function(){
						popin = $("#" + $(this).data("target"));
						// Init de la date de reponse de l'ag
						if($(".date-custom").length){
							$(".date-custom").each(function(){			
								$(this).html(convertDateToText($(this).data("date")));
							});
						}
						popin.fadeIn();
						popin.find(".buton-close").click(function(){
							popin.fadeOut();
						});
					});
				});
			}

			$(".date_com").each(function(){
				if($(this).data("date")){
					$(this).html(convertDateToText($(this).data("date")));
				}
			});	


		</script>


	<div class="resset"></div>
	
</div>
<!-- 202_557_43238 -->
<script language="javascript">
	/* Slidedown des mentions légales sur la page détail d'une agence */
    if($('#link_mention_legales_detail_agence').length > 0){
        $('#link_mention_legales_detail_agence').click(function(){
            $('#mention_legales_detail_agence').slideDown();
            return false;
        });
        $('#mention_legales_detail_agence').mouseleave(function(){
            $('#mention_legales_detail_agence').slideUp();
        });

        $('#mention_legales_detail_agence #fermerDescLongue').click(function(){
            $('#mention_legales_detail_agence').slideUp();
        });

    }

    makeLinksNoFollow();

    $('#detailNumTelEtape4').click(function(){
      $.ajax({
        type: "post",
        url: "/click_tel/85029/"
      });
		});
		
$("#yma-mentions").click(function(){
  $(".yma-mentions-content").slideToggle();
});

</script>




    </section>

    <div class="reset"></div>
  </div>
</div>



<script>
 $('.afficheNumTel').click(function(){
   $.ajax({
     type: "get",
     url: "/click_tel/85029/"
   });
 });
</script>





              
            </div>
          </div>
        </div>
      </div>
      

      
      <footer id="mainFooter">
        <div class="mid">
          
          
           <div class="content">
			  <div class="mentions_fixe">
          <ul>
              <li><a href="/fiches/protection-des-donnees/">Politique de protection des données</a></li>
            <li><a href="/fiches/mentions/">Mentions légales</a></li>
            <li><a href="/fiches/credits/">Crédits</a></li>
            <li><a href="/contactez_nous/">Nous contacter</a></li>
           
          </ul>
			  </div>
			  <div class="reset"></div>
			 
				  
				  <div class="fL tw-ml-1">
					<a id="showFooter" class="flecheDown"></a>
				  </div>
				  

				  <div class="reset"></div>

				  
				  <div class="global_footer">
					<div class="zone_lien_footer">
					
					<div class="box25 paddL10">
					  
						<h2>Achat appartement autour de PARIS (75012)</h2>
						
					  <ul>
						
						<li><a href="/annonces/achat-appartement/cp-75011/s-0-/st-0-/b-0-/page-1/"><h3>Achat appartement PARIS 11ième</h3></a></li>
						
						<li><a href="/annonces/achat-appartement/v-ivry+sur+seine/s-0-/st-0-/b-0-/page-1/"><h3>Achat appartement IVRY SUR SEINE</h3></a></li>
						
						<li><a href="/annonces/achat-appartement/v-st+mande/s-0-/st-0-/b-0-/page-1/"><h3>Achat appartement ST MANDE</h3></a></li>
						
						<li><a href="/annonces/achat-appartement/v-le+kremlin+bicetre/s-0-/st-0-/b-0-/page-1/"><h3>Achat appartement LE KREMLIN BICETRE</h3></a></li>
						
						<li><a href="/annonces/achat-appartement/cp-75020/s-0-/st-0-/b-0-/page-1/"><h3>Achat appartement PARIS 20ième</h3></a></li>
						
						<li><a href="/annonces/achat-appartement/cp-75004/s-0-/st-0-/b-0-/page-1/"><h3>Achat appartement PARIS 4ième</h3></a></li>
						
						<li><a href="/annonces/achat-appartement/cp-75019/s-0-/st-0-/b-0-/page-1/"><h3>Achat appartement PARIS 19ième</h3></a></li>
						
						<li><a href="/annonces/achat-appartement/v-charenton+le+pont/s-0-/st-0-/b-0-/page-1/"><h3>Achat appartement CHARENTON LE PONT</h3></a></li>
						
						<li><a href="/annonces/achat-appartement/cp-75013/s-0-/st-0-/b-0-/page-1/"><h3>Achat appartement PARIS 13ième</h3></a></li>
						
						<li><a href="/annonces/achat-appartement/cp-75003/s-0-/st-0-/b-0-/page-1/"><h3>Achat appartement PARIS 3ième</h3></a></li>
						
						<li><a href="/annonces/achat-appartement/v-villejuif/s-0-/st-0-/b-0-/page-1/"><h3>Achat appartement VILLEJUIF</h3></a></li>
						
						<li><a href="/annonces/achat-appartement/cp-75001/s-0-/st-0-/b-0-/page-1/"><h3>Achat appartement PARIS 1ier</h3></a></li>
						
						<li><a href="/annonces/achat-appartement/cp-75005/s-0-/st-0-/b-0-/page-1/"><h3>Achat appartement PARIS 5ième</h3></a></li>
						
						<li><a href="/annonces/achat-appartement/cp-75010/s-0-/st-0-/b-0-/page-1/"><h3>Achat appartement PARIS 10ième</h3></a></li>
						
						<li><a href="/annonces/achat-appartement/v-le+pre+st+gervais/s-0-/st-0-/b-0-/page-1/"><h3>Achat appartement LE PRE ST GERVAIS</h3></a></li>
						
					  </ul>
					</div>
					
					<div class="box25 paddL10">
					  
						<h2>Autres appartements a vendre à PARIS (75012)</h2>
						
					  <ul>
						
						<li><a href="/trouver_logement/detail/2039788296/"><h3>appartement &agrave; vendre - 4 pi&egrave;ces - 89 m2 - PARIS - 75014 - ILE-DE-FRANCE</h3></a></li>
						
						<li><a href="/trouver_logement/detail/2129159693/"><h3>appartement &agrave; vendre - 1 pi&egrave;ce - 15 m2 - PARIS - 75013 - ILE-DE-FRANCE</h3></a></li>
						
						<li><a href="/trouver_logement/detail/2099077435/"><h3>appartement &agrave; vendre - 5 pi&egrave;ces - 102 m2 - PARIS - 75012 - ILE-DE-FRANCE</h3></a></li>
						
						<li><a href="/trouver_logement/detail/2004247382/"><h3>appartement &agrave; vendre - 2 pi&egrave;ces - 36 m2 - PARIS - 75012 - ILE-DE-FRANCE</h3></a></li>
						
						<li><a href="/trouver_logement/detail/2091692427/"><h3>appartement &agrave; vendre - 3 pi&egrave;ces - 70 m2 - PARIS - 75006 - ILE-DE-FRANCE</h3></a></li>
						
						<li><a href="/trouver_logement/detail/2077468281/"><h3>appartement &agrave; vendre - 3 pi&egrave;ces - 69 m2 - PARIS - 75005 - ILE-DE-FRANCE</h3></a></li>
						
						<li><a href="/trouver_logement/detail/2031279843/"><h3>appartement &agrave; vendre - 1 pi&egrave;ce - 34 m2 - PARIS - 75009 - ILE-DE-FRANCE</h3></a></li>
						
						<li><a href="/trouver_logement/detail/2057160839/"><h3>appartement &agrave; vendre - 5 pi&egrave;ces - 92 m2 - PARIS - 75016 - ILE-DE-FRANCE</h3></a></li>
						
						<li><a href="/trouver_logement/detail/2113977400/"><h3>appartement &agrave; vendre - 2 pi&egrave;ces - 52 m2 - PARIS - 75013 - ILE-DE-FRANCE</h3></a></li>
						
						<li><a href="/trouver_logement/detail/2109144007/"><h3>appartement &agrave; vendre - 1 pi&egrave;ce - 36 m2 - PARIS - 75006 - ILE-DE-FRANCE</h3></a></li>
						
						<li><a href="/trouver_logement/detail/2100529070/"><h3>appartement &agrave; vendre - 3 pi&egrave;ces - 80 m2 - PARIS - 75014 - ILE-DE-FRANCE</h3></a></li>
						
						<li><a href="/trouver_logement/detail/2005934505/"><h3>appartement &agrave; vendre - 2 pi&egrave;ces - 61 m2 - PARIS - 75006 - ILE-DE-FRANCE</h3></a></li>
						
						<li><a href="/trouver_logement/detail/1279568267/"><h3>appartement &agrave; vendre - 7 pi&egrave;ces - 194 m2 - PARIS - 75006 - ILE-DE-FRANCE</h3></a></li>
						
						<li><a href="/trouver_logement/detail/2053306151/"><h3>appartement &agrave; vendre - 4 pi&egrave;ces - 54 m2 - PARIS - 75009 - ILE-DE-FRANCE</h3></a></li>
						
						<li><a href="/trouver_logement/detail/2113274702/"><h3>appartement &agrave; vendre - 6 pi&egrave;ces - 138 m2 - PARIS - 75012 - ILE-DE-FRANCE</h3></a></li>
						
					  </ul>
					</div>
					
					<div class="box25 paddL10">
					  <a href="/edito/departement/paris-un-departement-qui-nen-est-pas-un/">
						<h2>Immobilier à  Paris </h2>
						</a>
					  <ul>
						
					  </ul>
					</div>
					
					<div class="box25 paddL10">
					  <a href="/annonces/achat-appartement/v-paris/s-0-/st-0-/b-0-/page-1/">
						<h2>Achat appartement Paris</h2>
						</a>
					  <ul>
						
					  </ul>
					</div>
					
					<div class="box25 paddL10">
					  <a href="/edito/region/ile-de-france/">
						<h2>Immobilier en ILE-DE-FRANCE </h2>
						</a>
					  <ul>
						
					  </ul>
					</div>
					
					<div class="box25 paddL10">
					  <a href="/edito/ville/paris-12eme/">
						<h2>Immobilier PARIS</h2>
						</a>
					  <ul>
						
					  </ul>
					</div>
					
					  </div>
					  <div class="zone_logo_footer">
						<img src="/theme/generic/css/images/op-marque/sceau_c21.svg">
					  </div>
				  </div>
				  
				  <div class="reset"></div>
         	
          </div>
        </div>
      </footer>
      
<!-- ==========================================================================
  HTML TO ADD FOR PRINT VERSION
  ========================================================================== -->

<div class="print-box print-note displayNone">
  <div class="print-box-title">
    Notes
  </div>
  <div class="print-box-content print-note-content">
    Date :<hr />
    Notes :
  </div>
</div>

<div class="print-box print-contact displayNone">
    <div class="print-box-title">Contact</div>
    <div class="print-box-content print-contact-content">
       <p>
          <span class="print-contact-name">CENTURY 21 Chorus</span><br />
          86  avenue Ledru-Rollin<br />
          
          75012 PARIS <br />
          <span class="print-contact-phone">
            
            01 53 46 60 00 
            
          </span><br />
          chorus@century21.fr
        </p>
    </div>
</div>

<!-- ==========================================================================
  END HTML TO ADD FOR PRINT VERSION
  ========================================================================== -->

      
    </div>
        
    
    <img class="print_content displayNone" id="print-footer" src="/img/print-footer.png" />

    
    
    <div id="mainBACKGROUND" style="background:url(/theme/generic/css/images/images-fonds/SN-page-interne-D.jpg) no-repeat top right/cover;">
        <div class="mid"></div>
    </div>
    
    
    <script>
      $(document).ready(function(){ $('form input.token_input').tokenInput("/autocomplete/localite/", {theme: 'facebook', hintText:'',placeholder:'Saisissez votre choix ici...'}); });
    </script>
    








  	
  	
  </body>
  <!--site national -->
</html>

    http_version: null
  recorded_at: Tue, 31 Mar 2020 16:38:34 GMT
recorded_with: VCR 5.1.0
