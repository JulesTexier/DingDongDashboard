---
http_interactions:
- request:
    method: get
    uri: https://fr.foncia.com/achat/paris-75/appartement--maison/(params)/on/(tri)/date/(ordre)/desc
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Tue, 31 Mar 2020 16:38:45 GMT
      Set-Cookie:
      - current_property_search_url=%2Fachat%2Fparis-75%2Fappartement--maison%2F%28params%29%2Fon%2F%28tri%29%2Fdate%2F%28ordre%29%2Fdesc;
        path=/
      - eZSESSID=0bm3rs03ulipp88en9n9kgkpp7; path=/; secure; HttpOnly
      Cache-Control:
      - public, s-maxage=86400
      Content-Type:
      - text/html; charset=UTF-8
      Vary:
      - Accept-Encoding,Origin
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        PCFET0NUWVBFIGh0bWw+CjxodG1sIGxhbmc9ImZyIj4KPGhlYWQ+CiAgICA8bWV0YSBjaGFyc2V0PSJVVEYtOCI+CiAgICA8bWV0YSBodHRwLWVxdWl2PSJYLVVBLUNvbXBhdGlibGUiIGNvbnRlbnQ9IklFPUVkZ2UiPgogICAgPG1ldGEgbmFtZT0idmlld3BvcnQiIGNvbnRlbnQ9IndpZHRoPWRldmljZS13aWR0aCxpbml0aWFsLXNjYWxlPTEsbWluaW11bS1zY2FsZT0xIj4KCiAgICAgICAgICAgIDxtZXRhIG5hbWU9InJvYm90cyIgY29udGVudD0ibm9pbmRleCwgbm9mb2xsb3ciPgogICAgCiAgICA8dGl0bGU+QWNoYXQgaW1tb2JpbGllciBQYXJpcyAoNzUpIGV0IGVzdGltYXRpb248L3RpdGxlPgoKICAgICAgICAgICAgICAgICAgICAgICAgPG1ldGEgbmFtZT0iZGVzY3JpcHRpb24iIGNvbnRlbnQ9IkFubm9uY2VzIGFjaGF0IGltbW9iaWxpZXIgUGFyaXMgKDc1KSBhdmVjIEZvbmNpYSBldCBlc3RpbWF0aW9uIGdyYXR1aXRlIGQndW4gYXBwYXJ0ZW1lbnQgb3UgbWFpc29uIGR1IGTDqXBhcnRlbWVudCBQYXJpcyAoNzUpLiI+CgogICAgICAgICAgICAgICAgICAgICAgICA8bGluayByZWw9Imljb24iIHR5cGU9ImltYWdlL3gtaWNvbiIgaHJlZj0iL2Zhdmljb24uaWNvP3ZlcnNpb249MTU4NTU5MTMyMiI+CiAgICAgICAgPGxpbmsgcmVsPSJhcHBsZS10b3VjaC1pY29uLXJldGluYSIgaHJlZj0iL2J1bmRsZXMvZm9uY2lhaW50ZXJuZXQvaW1hZ2VzL2Vudmlyb25tZW50L3RvdWNoLWljb24taXBob25lLXJldGluYS5wbmc/dmVyc2lvbj0xNTg1NTkxMzIyIj4KCiAgICAgICAgICAgICAgICA8bWV0YSBuYW1lPSJhcHBsaWNhdGlvbi1uYW1lIiBjb250ZW50PSJGb25jaWEuY29tIj4KICAgICAgICA8bWV0YSBuYW1lPSJtc2FwcGxpY2F0aW9uLVRpbGVDb2xvciIgY29udGVudD0iIzAwOWViOSI+CiAgICAgICAgPG1ldGEgbmFtZT0ibXNhcHBsaWNhdGlvbi1zcXVhcmU3MHg3MGxvZ28iIGNvbnRlbnQ9InRpbnkucG5nIj4KICAgICAgICA8bWV0YSBuYW1lPSJtc2FwcGxpY2F0aW9uLXNxdWFyZTE1MHgxNTBsb2dvIiBjb250ZW50PSJzcXVhcmUucG5nIj4KICAgICAgICA8bWV0YSBuYW1lPSJtc2FwcGxpY2F0aW9uLXdpZGUzMTB4MTUwbG9nbyIgY29udGVudD0id2lkZS5wbmciPgogICAgICAgIDxtZXRhIG5hbWU9Im1zYXBwbGljYXRpb24tc3F1YXJlMzEweDMxMGxvZ28iIGNvbnRlbnQ9ImxhcmdlLnBuZyI+CgogICAgICAgICAgICAgICAgPG1ldGEgcHJvcGVydHk9Im9nOnRpdGxlIiBjb250ZW50PSJBY2hhdCBpbW1vYmlsaWVyIFBhcmlzICg3NSkgZXQgZXN0aW1hdGlvbiAtIEZPTkNJQSI+CiAgICAgICAgPG1ldGEgcHJvcGVydHk9Im9nOnNpdGVfbmFtZSIgY29udGVudD0iRk9OQ0lBIj4KICAgICAgICA8bWV0YSBwcm9wZXJ0eT0ib2c6ZGVzY3JpcHRpb24iIGNvbnRlbnQ9IkFubm9uY2VzIGFjaGF0IGltbW9iaWxpZXIgUGFyaXMgKDc1KSBhdmVjIEZvbmNpYSBldCBlc3RpbWF0aW9uIGdyYXR1aXRlIGQndW4gYXBwYXJ0ZW1lbnQgb3UgbWFpc29uIGR1IGTDqXBhcnRlbWVudCBQYXJpcyAoNzUpLiI+CiAgICAgICAgPG1ldGEgcHJvcGVydHk9Im9nOnVybCIgY29udGVudD0iaHR0cHM6Ly9mci5mb25jaWEuY29tL2FjaGF0L3BhcmlzLTc1L2FwcGFydGVtZW50LS1tYWlzb24vKHBhcmFtcykvb24vKHRyaSkvZGF0ZS8ob3JkcmUpL2Rlc2MiPgogICAgICAgIDxtZXRhIHByb3BlcnR5PSJvZzppbWFnZSIgY29udGVudD0iaHR0cHM6Ly9mci5mb25jaWEuY29tL3Zhci9mb25jaWEvc3RvcmFnZS9pbWFnZXMvbWVkaWEvaW1hZ2VzL2dyb3VwZS9yZXNlYXV4LXNvY2lhdXgvNTcyNC0yLWZyZS1GUi9yZXNlYXV4LXNvY2lhdXguanBnIj4KCiAgICAgICAgPG1ldGEgbmFtZT0idHdpdHRlcjp0aXRsZSIgY29udGVudD0iQWNoYXQgaW1tb2JpbGllciBQYXJpcyAoNzUpIGV0IGVzdGltYXRpb24gLSBGT05DSUEiPgogICAgICAgIDxtZXRhIG5hbWU9InR3aXR0ZXI6aW1hZ2U6c3JjIiBjb250ZW50PSJodHRwczovL2ZyLmZvbmNpYS5jb20vdmFyL2ZvbmNpYS9zdG9yYWdlL2ltYWdlcy9tZWRpYS9pbWFnZXMvZ3JvdXBlL3Jlc2VhdXgtc29jaWF1eC81NzI0LTItZnJlLUZSL3Jlc2VhdXgtc29jaWF1eC5qcGciPgogICAgICAgIDxtZXRhIG5hbWU9InR3aXR0ZXI6ZGVzY3JpcHRpb24iIGNvbnRlbnQ9IkFubm9uY2VzIGFjaGF0IGltbW9iaWxpZXIgUGFyaXMgKDc1KSBhdmVjIEZvbmNpYSBldCBlc3RpbWF0aW9uIGdyYXR1aXRlIGQndW4gYXBwYXJ0ZW1lbnQgb3UgbWFpc29uIGR1IGTDqXBhcnRlbWVudCBQYXJpcyAoNzUpLiI+CiAgICAgICAgPG1ldGEgbmFtZT0idHdpdHRlcjpjYXJkIiBjb250ZW50PSJzdW1tYXJ5Ij4KICAgICAgICA8bWV0YSBuYW1lPSJ0d2l0dGVyOnNpdGUiIGNvbnRlbnQ9IkBmb25jaWEiPgogICAgCiAgICAgICAgCiAgICAgICAgICAgICAgICA8bGluayByZWw9InN0eWxlc2hlZXQiIGhyZWY9Ii9jb21waWxlZC9zdHlsZXMuY3NzP3ZlcnNpb249MTU4NTU5MTMyMiI+CiAgICAKICAgIDxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij4KICAgIHZhciB0YXJ0ZWF1Y2l0cm9uRm9yY2VDRE4gPSAiL2J1bmRsZXMvZm9uY2lhaW50ZXJuZXQvanMvdGFydGVhdWNpdHJvbi8iOwo8L3NjcmlwdD4KCiAgICA8c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCIgc3JjPSIvY29tcGlsZWQvdGFydGVhdWNpdHJvbi5qcz92ZXJzaW9uPTE1ODU1OTEzMjIiPjwvc2NyaXB0PgoKICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzY3JpcHQ+d2luZG93LmZvbmNpYV9pbnRlcm5ldD17cGFyYW1zOnt9fTwvc2NyaXB0PgogICAgICAgIDwhLS1baWYgSUUgOV0+PHNjcmlwdD5kb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuY2xhc3NOYW1lKz0nIElFOSc7PC9zY3JpcHQ+PCFbZW5kaWZdLS0+CjwhLS1baWYgSUUgMTBdPjxzY3JpcHQ+ZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LmNsYXNzTmFtZSs9JyBJRTEwJzs8L3NjcmlwdD48IVtlbmRpZl0tLT4KCjxzY3JpcHQ+CiFmdW5jdGlvbihhLGIpeyJmdW5jdGlvbiI9PXR5cGVvZiBkZWZpbmUmJmRlZmluZS5hbWQ/ZGVmaW5lKFtdLGZ1bmN0aW9uKCl7cmV0dXJuIGEuc3ZnNGV2ZXJ5Ym9keT1iKCl9KToib2JqZWN0Ij09dHlwZW9mIGV4cG9ydHM/bW9kdWxlLmV4cG9ydHM9YigpOmEuc3ZnNGV2ZXJ5Ym9keT1iKCl9KHRoaXMsZnVuY3Rpb24oKXtmdW5jdGlvbiBhKGEsYil7aWYoYil7dmFyIGM9ZG9jdW1lbnQuY3JlYXRlRG9jdW1lbnRGcmFnbWVudCgpLGQ9IWEuZ2V0QXR0cmlidXRlKCJ2aWV3Qm94IikmJmIuZ2V0QXR0cmlidXRlKCJ2aWV3Qm94Iik7ZCYmYS5zZXRBdHRyaWJ1dGUoInZpZXdCb3giLGQpO2Zvcih2YXIgZT1iLmNsb25lTm9kZSghMCk7ZS5jaGlsZE5vZGVzLmxlbmd0aDspYy5hcHBlbmRDaGlsZChlLmZpcnN0Q2hpbGQpO2EuYXBwZW5kQ2hpbGQoYyl9fWZ1bmN0aW9uIGIoYil7Yi5vbnJlYWR5c3RhdGVjaGFuZ2U9ZnVuY3Rpb24oKXtpZig0PT09Yi5yZWFkeVN0YXRlKXt2YXIgYz1iLl9jYWNoZWREb2N1bWVudDtjfHwoYz1iLl9jYWNoZWREb2N1bWVudD1kb2N1bWVudC5pbXBsZW1lbnRhdGlvbi5jcmVhdGVIVE1MRG9jdW1lbnQoIiIpLGMuYm9keS5pbm5lckhUTUw9Yi5yZXNwb25zZVRleHQsYi5fY2FjaGVkVGFyZ2V0PXt9KSxiLl9lbWJlZHMuc3BsaWNlKDApLm1hcChmdW5jdGlvbihkKXt2YXIgZT1iLl9jYWNoZWRUYXJnZXRbZC5pZF07ZXx8KGU9Yi5fY2FjaGVkVGFyZ2V0W2QuaWRdPWMuZ2V0RWxlbWVudEJ5SWQoZC5pZCkpLGEoZC5zdmcsZSl9KX19LGIub25yZWFkeXN0YXRlY2hhbmdlKCl9ZnVuY3Rpb24gYyhjKXtmdW5jdGlvbiBkKCl7Zm9yKHZhciBjPTA7YzxsLmxlbmd0aDspe3ZhciBnPWxbY10saD1nLnBhcmVudE5vZGU7aWYoaCYmL3N2Zy9pLnRlc3QoaC5ub2RlTmFtZSkpe3ZhciBpPWcuZ2V0QXR0cmlidXRlKCJ4bGluazpocmVmIik7aWYoZSYmKCFmLnZhbGlkYXRlfHxmLnZhbGlkYXRlKGksaCxnKSkpe2gucmVtb3ZlQ2hpbGQoZyk7dmFyIG09aS5zcGxpdCgiIyIpLG49bS5zaGlmdCgpLG89bS5qb2luKCIjIik7aWYobi5sZW5ndGgpe3ZhciBwPWpbbl07cHx8KHA9altuXT1uZXcgWE1MSHR0cFJlcXVlc3QscC5vcGVuKCJHRVQiLG4pLHAuc2VuZCgpLHAuX2VtYmVkcz1bXSkscC5fZW1iZWRzLnB1c2goe3N2ZzpoLGlkOm99KSxiKHApfWVsc2UgYShoLGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKG8pKX19ZWxzZSsrY31rKGQsNjcpfXZhciBlLGY9T2JqZWN0KGMpLGc9L1xiVHJpZGVudFwvWzU2N11cYnxcYk1TSUUgKD86OXwxMClcLjBcYi8saD0vXGJBcHBsZVdlYktpdFwvKFxkKylcYi8saT0vXGJFZGdlXC8xMlwuKFxkKylcYi87ZT0icG9seWZpbGwiaW4gZj9mLnBvbHlmaWxsOmcudGVzdChuYXZpZ2F0b3IudXNlckFnZW50KXx8KG5hdmlnYXRvci51c2VyQWdlbnQubWF0Y2goaSl8fFtdKVsxXTwxMDU0N3x8KG5hdmlnYXRvci51c2VyQWdlbnQubWF0Y2goaCl8fFtdKVsxXTw1Mzc7dmFyIGo9e30saz13aW5kb3cucmVxdWVzdEFuaW1hdGlvbkZyYW1lfHxzZXRUaW1lb3V0LGw9ZG9jdW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoInVzZSIpO2UmJmQoKX1yZXR1cm4gY30pOwo8L3NjcmlwdD4KPHNjcmlwdD5zdmc0ZXZlcnlib2R5KCk8L3NjcmlwdD4KICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGluayByZWw9Im5leHQiIGhyZWY9Ii9hY2hhdC9wYXJpcy03NS9hcHBhcnRlbWVudC0tbWFpc29uL3BhZ2UtMi8ocGFyYW1zKS9vbi8odHJpKS9kYXRlLyhvcmRyZSkvZGVzYyIgLz4KICAgICAgICAgICAgPC9oZWFkPgoKCjxib2R5PgoKICAgIDxzY3JpcHQ+CiAgICAgICAgdmFyIG9iamVjdCA9IHsKICAgICAgICAgICAgInR5cGVTaXRlIjogImfDqW7DqXJpcXVlIiwKICAgICAgICAgICAgImVzcGFjZSI6ICJnZW5lcmFsIiwKICAgICAgICAgICAgInR5cGVQYWdlIjogImNsYXNzaXF1ZSIsCiAgICAgICAgICAgICJ0aGVtZSI6ICJhY2hhdCIKICAgICAgICB9OwoKICAgICAgICAgICAgICAgICAgICBvYmplY3QudGVtcGxhdGUgPSAiY2F0YWxvZ3VlIjsKICAgICAgICAKCiAgICAgICAgZGF0YUxheWVyID0gW29iamVjdF07CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRhdGFMYXllci5wdXNoKHsiY3VzdG9tQ2F0ZWdvcmllIjogIm5hdmlnYXRpb24iLCAiY3VzdG9tQWN0aW9uIjogIm5vbWJyZVJlc3VsdGF0c1JlY2hlcmNoZSIsICJjdXN0b21MYWJlbCI6IDk2LCAiZXZlbnQiOiAiY3VzdG9tRXZlbnQifSk7CiAgICAgICAgICAgICAgICAgICAgICAgIDwvc2NyaXB0PgoKPHNjcmlwdD4KICAgIGRhdGFMYXllciA9IHdpbmRvdy5kYXRhTGF5ZXIgfHwgW107CgogICAgdmFyIGN1cnJlbnRQYXRoID0gd2luZG93LmxvY2F0aW9uLnBhdGhuYW1lOwoKICAgICAgICAgICAgdmFyIGNvbW1vblVwdGlsYWJWYWx1ZXMgPSB7CiAgICAgICAgInR5cGVTaXRlIjogImfDqW7DqXJpcXVlIiwgLy8gRmV0Y2hlZCBmcm9tIGxheW91dCBnbG9iYWxzCiAgICAgICAgImVzcGFjZSI6ICJnZW5lcmFsIiwKICAgICAgICAidHlwZVBhZ2UiOiAiY2xhc3NpcXVlIiwKICAgICAgICAidGVtcGxhdGUiOiAiYXV0cmVzIgogICAgfTsKCiAgICAvLyBEZXBlbmRpbmcgb24gY3VycmVudCBwYXRobmFtZSwgd2UgZGlzcGF0Y2ggYW4gZXZlbnQsIHVzZWQgZm9yIEJhY2stT2ZmaWNlIHBhZ2VzCiAgICBzd2l0Y2ggKHRydWUpIHsKICAgICAgICBjYXNlIGN1cnJlbnRQYXRoLmluZGV4T2YoIi9hY2hhdC8iKSA9PT0gMDogLy8gUGFnZSBhY2hhdCAoYXZlYyByZWNoZXJjaGUgZW4gY291cnMpCiAgICAgICAgICAgIC8vIEV2ZW50CiAgICAgICAgICAgIGRhdGFMYXllci5wdXNoKHsiY3VzdG9tQ2F0ZWdvcmllIjogImVuZ2FnZW1lbnQiLCAiY3VzdG9tQWN0aW9uIjogImludGVyZXQiLCAiY3VzdG9tTGFiZWwiOiAiQWNoZXRlciIsICJldmVudCI6ICJjdXN0b21FdmVudCJ9KTsKICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgY2FzZSBjdXJyZW50UGF0aC5pbmRleE9mKCIvbG9jYXRpb24vIikgPT09IDA6IC8vIFBhZ2UgbG9jYXRpb24gKGF2ZWMgcmVjaGVyY2hlIGVuIGNvdXJzKQogICAgICAgICAgICAvLyBFdmVudAogICAgICAgICAgICBkYXRhTGF5ZXIucHVzaCh7ImN1c3RvbUNhdGVnb3JpZSI6ICJlbmdhZ2VtZW50IiwgImN1c3RvbUFjdGlvbiI6ICJpbnRlcmV0IiwgImN1c3RvbUxhYmVsIjogIkxvdWVyIiwgImV2ZW50IjogImN1c3RvbUV2ZW50In0pOwogICAgICAgICAgICBicmVhazsKICAgICAgICBjYXNlIGN1cnJlbnRQYXRoLmluZGV4T2YoIi9yZWNoZXJjaGUvcGFjay1lYXN5bG9jIikgPT09IDA6IC8vIExhIHBhZ2UgcGFjay1lYXN5bG9jCiAgICAgICAgICAgIGNvbW1vblVwdGlsYWJWYWx1ZXMudGhlbWUgPSAibG9jYXRpb24iOwogICAgICAgICAgICBkYXRhTGF5ZXIucHVzaChjb21tb25VcHRpbGFiVmFsdWVzKTsKICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgY2FzZSBjdXJyZW50UGF0aC5pbmRleE9mKCIvcmVjaGVyY2hlL2FjaGV0ZXItdW4tYmllbiIpID09PSAwOiAvLyBMYSBwYWdlIGFjaGV0ZXIgdW4gYmllbgogICAgICAgICAgICBjb21tb25VcHRpbGFiVmFsdWVzLnRoZW1lID0gImFjaGF0IjsKICAgICAgICAgICAgZGF0YUxheWVyLnB1c2goY29tbW9uVXB0aWxhYlZhbHVlcyk7CiAgICAgICAgICAgIGJyZWFrOwogICAgICAgIGNhc2UgY3VycmVudFBhdGguaW5kZXhPZigiL2xlLWdyb3VwZSIpID09PSAwOiAvLyBQYWdlIG91IHNvdXMtcGFnZXMgIkxlIGdyb3VwZSIKICAgICAgICAgICAgY29tbW9uVXB0aWxhYlZhbHVlcy50aGVtZSA9ICJncm91cGUiOwogICAgICAgICAgICBkYXRhTGF5ZXIucHVzaChjb21tb25VcHRpbGFiVmFsdWVzKTsKICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgY2FzZSBjdXJyZW50UGF0aC5pbmRleE9mKCIvbC1pbnZlc3Rpc3NlbWVudC1pbW1vYmlsaWVyIikgPT09IDA6IC8vIFBhZ2Ugb3Ugc291cy1wYWdlcyAiTCdpbnZlc3Rpc3NlbWVudCBpbW1vYmlsaWVyIgogICAgICAgICAgICBjb21tb25VcHRpbGFiVmFsdWVzLnRoZW1lID0gImludmVzdGlzc2VtZW50IjsKICAgICAgICAgICAgZGF0YUxheWVyLnB1c2goY29tbW9uVXB0aWxhYlZhbHVlcyk7CiAgICAgICAgICAgIGJyZWFrOwogICAgICAgIGNhc2UgY3VycmVudFBhdGguaW5kZXhPZigiL2ZhaXJlLWdlcmVyLW1hLWxvY2F0aW9uLXBhci1mb25jaWEiKSA9PT0gMDogLy8gUGFnZSBvdSBzb3VzLXBhZ2VzICJGYWlyZSBnw6lyZXIgbWEgbG9jYXRpb24iCiAgICAgICAgICAgIGNvbW1vblVwdGlsYWJWYWx1ZXMudGhlbWUgPSAiZ2VzdGlvbkxvY2F0aXZlIjsKICAgICAgICAgICAgZGF0YUxheWVyLnB1c2goY29tbW9uVXB0aWxhYlZhbHVlcyk7CiAgICAgICAgICAgIGJyZWFrOwogICAgICAgIGNhc2UgY3VycmVudFBhdGguaW5kZXhPZigiL2ZhaXJlLWdlcmVyLXVuZS1jb3Byb3ByaWV0ZSIpID09PSAwOiAvLyBQYWdlIG91IHNvdXMtcGFnZXMgIkZhaXJlIGfDqXJlciB1bmUgY29wcm9wcmnDqXTDqSIKICAgICAgICAgICAgY29tbW9uVXB0aWxhYlZhbHVlcy50aGVtZSA9ICJjb3Byb3ByaWV0ZSI7CiAgICAgICAgICAgIGRhdGFMYXllci5wdXNoKGNvbW1vblVwdGlsYWJWYWx1ZXMpOwogICAgICAgICAgICBicmVhazsKICAgICAgICBjYXNlIGN1cnJlbnRQYXRoLmluZGV4T2YoIi9zZXJ2aWNlcyIpID09PSAwOiAvLyBQYWdlIG91IHNvdXMtcGFnZXMgIkZhaXJlIGfDqXJlciB1bmUgY29wcm9wcmnDqXTDqSIKICAgICAgICAgICAgY29tbW9uVXB0aWxhYlZhbHVlcy50aGVtZSA9ICJzZXJ2aWNlcyI7CiAgICAgICAgICAgIGRhdGFMYXllci5wdXNoKGNvbW1vblVwdGlsYWJWYWx1ZXMpOwogICAgICAgICAgICBicmVhazsKICAgICAgICBjYXNlIGN1cnJlbnRQYXRoID09PSAnL21vdC1kZS1wYXNzZS1vdWJsaWUnOgogICAgICAgICAgICBjb21tb25VcHRpbGFiVmFsdWVzLnRlbXBsYXRlID0gImhvbWVwYWdlIjsKICAgICAgICAgICAgZGF0YUxheWVyLnB1c2goY29tbW9uVXB0aWxhYlZhbHVlcyk7CiAgICAgICAgICAgIGJyZWFrOwogICAgICAgIGNhc2UgY3VycmVudFBhdGggPT09ICcvJzoKICAgICAgICAgICAgY29tbW9uVXB0aWxhYlZhbHVlcy50ZW1wbGF0ZSA9ICJob21lcGFnZSI7CiAgICAgICAgICAgIGRhdGFMYXllci5wdXNoKGNvbW1vblVwdGlsYWJWYWx1ZXMpOwogICAgICAgICAgICBicmVhazsKICAgIH0KICAgIAogICAgPC9zY3JpcHQ+Cjxub3NjcmlwdD48aWZyYW1lIHNyYz0iLy93d3cuZ29vZ2xldGFnbWFuYWdlci5jb20vbnMuaHRtbD9pZD1HVE0tUEJCWldEIiBoZWlnaHQ9IjAiIHdpZHRoPSIwIiBzdHlsZT0iZGlzcGxheTpub25lO3Zpc2liaWxpdHk6aGlkZGVuIj48L2lmcmFtZT48L25vc2NyaXB0Pgo8c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCI+CiAgICB0YXJ0ZWF1Y2l0cm9uLnVzZXIuZ29vZ2xldGFnbWFuYWdlcklkID0gJ0dUTS1QQkJaV0QnOwogICAgKHRhcnRlYXVjaXRyb24uam9iID0gdGFydGVhdWNpdHJvbi5qb2IgfHwgW10pLnB1c2goJ2dvb2dsZXRhZ21hbmFnZXJfZm9uY2lhJyk7CgogICAgdGFydGVhdWNpdHJvbi51c2VyLkFCVGFzdHlJZCA9ICIwZTZkOWVhMjQ3MjgyMDcyY2UzYTg0MTMwZmM4ZTcxMiI7CiAgICAodGFydGVhdWNpdHJvbi5qb2IgPSB0YXJ0ZWF1Y2l0cm9uLmpvYiB8fCBbXSkucHVzaCgnYWJ0YXN0eV9mb25jaWEnKTsKPC9zY3JpcHQ+Cgo8c2NyaXB0PgogICAgICAgIGRhdGFMYXllciA9IHdpbmRvdy5kYXRhTGF5ZXIgfHwgW107CgogICAgICAgIGZ1bmN0aW9uIGRlZmVyKG1ldGhvZCkgewogICAgICAgIGlmICh3aW5kb3cualF1ZXJ5KQogICAgICAgICAgICBtZXRob2QoKTsKICAgICAgICBlbHNlCiAgICAgICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkgewogICAgICAgICAgICAgICAgZGVmZXIobWV0aG9kKQogICAgICAgICAgICB9LCA1MCk7CiAgICB9CgogICAgCiAgICAKPC9zY3JpcHQ+Cgo8ZGl2IGNsYXNzPSJCb2R5V3JhcHBlciI+CgogICAgPGhlYWRlciBjbGFzcz0iSGVhZGVyIiByb2xlPSJiYW5uZXIiPgoKICAgIAogICAgPGRpdiBjbGFzcz0iSGVhZGVyLXRvcCI+CgogICAgICAgICAgICA8dWwgY2xhc3M9IkhlYWRlci10b3BOYXYgSGVhZGVyLXRvcC1sZWZ0Ij4KCiAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL2ZyLmZvbmNpYS5jb20vbm90cmUtYW1iaXRpb24iCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtYmVoYXQ9IkxlZ3JvdXBlIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgTGUgZ3JvdXBlCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cDovL2NhcnJpZXJlLmZvbmNpYS5jb20vIgogICAgICAgICAgICAgICAgICAgICAgICB0YXJnZXQ9Il9ibGFuayIgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtYmVoYXQ9IkNhcnJpw6hyZSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIENhcnJpw6hyZQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHA6Ly9mb25jaWEtcmVjcnV0ZS50YWxlbnQtc29mdC5jb20vYWNjdWVpbC5hc3B4IgogICAgICAgICAgICAgICAgICAgICAgICB0YXJnZXQ9Il9ibGFuayIgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtYmVoYXQ9Ik5vc29mZnJlc2TigJllbXBsb2kiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBOb3Mgb2ZmcmVzIGTigJllbXBsb2kKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL2ZyLmZvbmNpYS5jb20vbW9uLWd1aWRlLWltbW8iCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtYmVoYXQ9Ik1vbkd1aWRlSW1tbyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIE1vbiBHdWlkZSBJbW1vCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cDovL2JlbGxlc3BlcnNvbm5lcy5mb25jaWEuY29tLyIKICAgICAgICAgICAgICAgICAgICAgICAgdGFyZ2V0PSJfYmxhbmsiICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkYXRhLWJlaGF0PSJOb3NiZWxsZXNwZXJzb25uZXMiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBOb3MgYmVsbGVzIHBlcnNvbm5lcwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL2ZyLmZvbmNpYS5jb20vYWN0dWFsaXRlcy1lbi1wZXJpb2RlLWRlLWNvbmZpbmVtZW50IgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlPSJjb2xvcjogI0ZBOEEwMDtmb250LXdlaWdodDogYm9sZDsiICAgICAgICAgICAgICAgICAgICAgICBkYXRhLWJlaGF0PSJBY3R1YWxpdMOpcyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEFjdHVhbGl0w6lzCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICA8L3VsPgogICAgCiAgICA8dWwgY2xhc3M9IkhlYWRlci10b3BOYXYgSGVhZGVyLXRvcC1yaWdodCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICA8YSAgY2xhc3M9Ikljb24tLXBvaW50ZXIiIGhyZWY9Imh0dHA6Ly9hZ2VuY2UuZm9uY2lhLmNvbSIgZGF0YS1iZWhhdD0iaGVhZGVyVHJvdXZlckFnZW5jZUxpZW4iPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgVHJvdXZlciB1bmUgYWdlbmNlCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3VsPgo8L2Rpdj4KCgogICAgPHAgY2xhc3M9IkhlYWRlci1za2lwbGluayI+CiAgICAgICAgPGEgY2xhc3M9IkhlYWRlci1sb2dvIiBocmVmPSIvIj4KICAgICAgICAgICAgPGltZyBjbGFzcz0iSGVhZGVyLWxvZ28tLWRlc2t0b3AiIHdpZHRoPSI2NHB4IiBoZWlnaHQ9IjY0cHgiIHNyYz0iaHR0cHM6Ly9waG90b3MuZm9uY2lhLm5ldC9pbWFnZXMvRm9uY2lhX2xvZ29oXzY2XzY2LnBuZyIgYWx0PSJGb25jaWEiPgogICAgICAgICAgICA8aW1nIGNsYXNzPSJIZWFkZXItbG9nby0tbW9iaWxlIiB3aWR0aD0iMTA4cHgiIGhlaWdodD0iMzBweCIgc3JjPSJodHRwczovL3Bob3Rvcy5mb25jaWEubmV0L2ltYWdlcy9Gb25jaWFfaG9tZXBhZ2V2XzEwOF8zMC5wbmciIGFsdD0iRm9uY2lhIj4KICAgICAgICA8L2E+CiAgICAgICAgPGJ1dHRvbiBjbGFzcz0iSGVhZGVyLXNraXBsaW5rLW1lbnUgSWNvbi0tbWVudSIgZGF0YS13aWRnZXQ9IlBhbmVsU2xpZGUtdHJpZ2VyIiBkYXRhLXdpZGdldC1zaWRlPSJsZWZ0Ij5NZW51PC9idXR0b24+CiAgICAgICAgPGEgaHJlZj0iL2xvZ2luIiBjbGFzcz0iSGVhZGVyLXNraXBsaW5rLXVzZXIgSWNvbi0tdXNlci1tYWxlMiI+TXlGT05DSUE8L2E+CiAgICA8L3A+CgogICAgPG5hdiBjbGFzcz0iTWFpbk5hdiIgcm9sZT0ibmF2aWdhdGlvbiI+CiAgICAgICAgPHVsIGNsYXNzPSJNYWluTmF2LWxpc3QgSGVhZGVyLXRvcE5hdiI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpIGNsYXNzPSJNYWluTmF2LWl0ZW0gTWFpbk5hdi1pdGVtLS1sb2NhdGlvbiBmaXJzdCI+ICAgICAgICA8YSBocmVmPSJodHRwczovL2ZyLmZvbmNpYS5jb20vYWNoYXQiICAgID5BY2hldGVyIDxzcGFuPm91IGxvdWVyPC9zcGFuPjwvYT4gICAgICAgICAgICAKICAgIDwvbGk+CgogICAgICAgIDxsaSBjbGFzcz0iTWFpbk5hdi1pdGVtIE1haW5OYXYtaXRlbS0tZ2VzdGlvbiI+ICAgICAgICA8YSBocmVmPSJodHRwczovL2ZyLmZvbmNpYS5jb20vZmFpcmUtZ2VyZXItbWEtbG9jYXRpb24tcGFyLWZvbmNpYSIgICAgPkZhaXJlIGfDqXJlciA8c3Bhbj5tYSBsb2NhdGlvbjwvc3Bhbj48L2E+ICAgICAgICAgICAgCiAgICA8L2xpPgoKICAgICAgICA8bGkgY2xhc3M9Ik1haW5OYXYtaXRlbSBNYWluTmF2LWl0ZW0tLWNvcHJvIj4gICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZnIuZm9uY2lhLmNvbS9mYWlyZS1nZXJlci11bmUtY29wcm9wcmlldGUiICAgID5GYWlyZSBnw6lyZXIgPHNwYW4+dW5lIGNvcHJvcHJpw6l0w6k8L3NwYW4+PC9hPiAgICAgICAgICAgIAogICAgPC9saT4KCiAgICAgICAgPGxpIGNsYXNzPSJNYWluTmF2LWl0ZW0gTWFpbk5hdi1pdGVtLS12ZW50ZSI+ICAgICAgICA8YSBocmVmPSJodHRwczovL2ZyLmZvbmNpYS5jb20vZXN0aW1lci1ldC12ZW5kcmUiICAgID5Fc3RpbWVyIDxzcGFuPmV0IHZlbmRyZTwvc3Bhbj48L2E+ICAgICAgICAgICAgCiAgICA8L2xpPgoKICAgICAgICA8bGkgY2xhc3M9Ik1haW5OYXYtaXRlbSBNYWluTmF2LWl0ZW0tLWludmVzdGlzc2VtZW50Ij4gICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZnIuZm9uY2lhLmNvbS9sLWludmVzdGlzc2VtZW50LWltbW9iaWxpZXIiICAgID5JbnZlc3RpciA8c3Bhbj5kYW5zIGwmIzAzOTtpbW1vYmlsaWVyPC9zcGFuPjwvYT4gICAgICAgICAgICAKICAgIDwvbGk+CgogICAgICAgIDxsaSBjbGFzcz0iTWFpbk5hdi1pdGVtIE1haW5OYXYtaXRlbS0tbG9jYXRpb252YWNhbmNlcyBsYXN0Ij4gICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vd3d3LmZvbmNpYS1sb2NhdGlvbi12YWNhbmNlcy5mci8jdXRtX3NvdXJjZT1mb25jaWEuY29tJmFtcDt1dG1fbWVkaXVtPWxpZW4mYW1wO3V0bV9jYW1wYWlnbj1mb25jaWEuY29tIiAgICAgdGFyZ2V0PSJfYmxhbmsiPkxvY2F0aW9uIDxzcGFuPlZhY2FuY2VzPC9zcGFuPjwvYT4gICAgICAgICAgICAKICAgIDwvbGk+CgoKICAgIAoKCiAgICAgICAgICAgIDxsaSBjbGFzcz0iTWFpbk5hdi1pdGVtIE1haW5OYXYtaXRlbS0tdXNlciBsYXN0Ij4KICAgICAgICAgICAgICAgIDxhIGhyZWY9Ii9sb2dpbiI+TXlGT05DSUEgPHNwYW4+RVNQQUNFIENMSUVOVDwvc3Bhbj48L2E+CiAgICAgICAgICAgIDwvbGk+CiAgICAgICAgPC91bD4KICAgIDwvbmF2PgoKICAgIDxkaXYgY2xhc3M9IlVzZXJOYXYiIGlkPSJNeUZvbmNpYU1lbnUiPgoKICAgIDxkaXYgY2xhc3M9IlVzZXJOYXYtb3ZlcmZsb3cgIj4KICAgICAgICAKICAgICAgICA8ZGl2IGNsYXNzPSJVc2VyTG9naW4iPgogICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgPGRpdiBjbGFzcz0iVXNlckxvZ2luLWluZm8iPgogICAgICAgICAgICA8cCBjbGFzcz0iVXNlckxvZ2luLXRpdGxlIj5QcmVtacOocmUgY29ubmV4aW9uID88L3A+CiAgICAKCiAgICAKICAgICAgICA8cCBjbGFzcz0iVXNlckxvZ2luLWlsbCI+CiAgICAgICAgICAgICAgICA8aW1nIHNyYz0iaHR0cHM6Ly9mci5mb25jaWEuY29tL3Zhci9mb25jaWEvc3RvcmFnZS9pbWFnZXMvX2FsaWFzZXMvdGh1bWJfMjA1XzIwNS9tZWRpYS9pbWFnZXMvYWlkZS8zNTcwLTItZnJlLUZSL0FpZGUucG5nIiAgYWx0PSIiIC8+CiAgICAgICAgPC9wPgoKICAgIAogICAgCiAgICAgICAgICAgIDxwIGNsYXNzPSJVc2VyTG9naW4tdGV4dCI+TG9ycyBkZSB2b3RyZSBwcmVtacOocmUgY29ubmV4aW9uIMOgIHZvdHJlIGVzcGFjZSBjbGllbnQgTXlGb25jaWEsIHZvdXMgZGV2ZXogc2Fpc2lyIHZvdHJlIGlkZW50aWZpYW50IGV0IGxlIG1vdCBkZSBwYXNzZSBwcm92aXNvaXJlIHF1aSB2b3VzIG9udCDDqXTDqSB0cmFuc21pcyBwYXIgdm90cmUgYWdlbmNlIG91IHN1ciB2b3MgZG9jdW1lbnRzIGNvbXB0YWJsZXMuPC9wPgogICAgCgogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KPHAgY2xhc3M9IlVzZXJMb2dpbi1jcmVhdGUiPlByZW1pw6hyZSBjb25uZXhpb24gPyA8YQogICAgICAgICAgICAgICAgaHJlZj0iL3ByZW1pZXJlLWNvbm5leGlvbi1hLW1vbi1lc3BhY2UtY2xpZW50LWZvbmNpYSI+RMOpY291dnJleiBjb21tZW50IHZvdXMgY29ubmVjdGVyPC9hPjwvcD4KCgogICAgICAgIAogICAgICAgIDwvZGl2PgoKICAgIDwvZGl2PgoKPC9kaXY+CgogICAgICAgICAgICAgICAgICAgICAgICA8L2hlYWRlcj4KICAgIAo8IS0tW2lmIGx0ZSBJRSA5IF0+CjxkaXYgY2xhc3M9IkJyb3dzZXJBbGVydCBCcm93c2VyQWxlcnQtLXZpc2libGUiPgogICAgPGRpdiBjbGFzcz0iQnJvd3NlckFsZXJ0LWlubmVyIj4KICAgICAgICA8c3BhbiBjbGFzcz0iQnJvd3NlckFsZXJ0LWljb24iPgogICAgICAgICAgICA8c3ZnIGNsYXNzPSJpY29uIiB3aWR0aD0iMzIiIGhlaWdodD0iMzIiIGFyaWEtaGlkZGVuPSJ0cnVlIj48dXNlIHhsaW5rOmhyZWY9Ii9idW5kbGVzL2ZvbmNpYWludGVybmV0L3N2Zy9pY29ucy5zdmcjSWNvbi0taW5mbyI+PC91c2U+PC9zdmc+CiAgICAgICAgPC9zcGFuPgogICAgICAgIDxwIGNsYXNzPSJCcm93c2VyQWxlcnQtbWVzc2FnZSI+CiAgICAgICAgICAgIEF0dGVudGlvbiwgdm90cmUgbmF2aWdhdGV1ciBu4oCZZXN0IHBhcyDDoCBqb3VyICEgQWZpbiBkJ2Ftw6lsaW9yZXIgdm90cmUgZXhww6lyaWVuY2Ugc3VyIGNlIHNpdGUgbm91cyB2b3VzIGNvbnNlaWxsb25zIGRlIG1ldHRyZSDDoCBqb3VyIHZvdHJlIG5hdmlnYXRldXIgdmVycyB1bmUgdmVyc2lvbiBwbHVzIHLDqWNlbnRlCiAgICAgICAgPC9wPgogICAgICAgIDxzcGFuIGNsYXNzPSJCcm93c2VyQWxlcnQtY2xvc2UiPgogICAgICAgICAgICA8YnV0dG9uIGNsYXNzPSJCcm93c2VyQWxlcnQtY2xvc2VCdG4iIGFyaWEtbGFiZWw9Ik1hc3F1ZXIgY2UgbWVzc2FnZSI+CiAgICAgICAgICAgICAgICA8c3ZnIGNsYXNzPSJpY29uIiB3aWR0aD0iMTIiIGhlaWdodD0iMTIiIGFyaWEtaGlkZGVuPSJ0cnVlIj48dXNlIHhsaW5rOmhyZWY9Ii9idW5kbGVzL2ZvbmNpYWludGVybmV0L3N2Zy9pY29ucy5zdmcjSWNvbi0tY2xvc2UyIj48L3VzZT48L3N2Zz4KICAgICAgICAgICAgPC9idXR0b24+CiAgICAgICAgPC9zcGFuPgogICAgPC9kaXY+CjwvZGl2Pgo8IVtlbmRpZl0tLT4KCgoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJCcmVhZGNydW1icyI+CiAgICAgICAgICAgIDxwICAgICBjbGFzcz0iQnJlYWRjcnVtYnMtaW5uZXIiIGRhdGEtdHlwZT0ieW9sbyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4+Rm9uY2lhPC9zcGFuPiAgICAgICAgICAgICAgICAgICAgICAgICAgICAKCiAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Ii9hY2hhdCIgICAgIGNsYXNzPSJCcmVhZGNydW1icy1saW5rIj5BY2hhdDwvYT4gICAgICAgICAgICAgICAgICAgICAgICAgICAgCgogICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIvYWNoYXQvcGFyaXMtNzUiICAgICBjbGFzcz0iQnJlYWRjcnVtYnMtbGluayI+UGFyaXMgNzU8L2E+ICAgICAgICAgICAgICAgICAgICAgICAgICAgIAoKICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4+QXBwYXJ0ZW1lbnQg4oCiIE1haXNvbjwvc3Bhbj4gICAgICAgICAgICAgICAgICAgICAgICAgICAgCgogICAgCgogICAgICAgICAgICA8L3A+CiAgICAgICAgPC9kaXY+CiAgICAKCgogICAgICAgICAgICAgICAgICAgICAgICAKICAgIAogICAgCiAgICA8ZGl2IGNsYXNzPSJDb250ZW50Ij4KCiAgICAgICAgPGRpdiBjbGFzcz0iQ29udGVudC1iYW5kbyBDb250ZW50LWJhbmRvLS1ncmFkaWVudCI+PC9kaXY+CgogICAgICAgIDxzZWN0aW9uIGNsYXNzPSJDb250ZW50LXJvdyBDb250ZW50LXJvdy0tZ3JheSI+CiAgICAgICAgICAgIAo8Zm9ybSBuYW1lPSJzZWFyY2hGb3JtIiBtZXRob2Q9InBvc3QiIGFjdGlvbj0iL3JlY2hlcmNoZS9wcm9jZXNzIiBjbGFzcz0iU2VhcmNoT2ZmZXIiIGlkPSJmb3JtX3NlYXJjaF9vZmZlciI+Cgo8ZGl2IGNsYXNzPSJTZWFyY2hPZmZlci1vdmVyZmxvdyI+CgoKICAgIDxkaXYgY2xhc3M9IlNlYXJjaE9mZmVyLWVuZ2luZSIgZGF0YS1mb3JtPSJtYWluX3Byb3BlcnRpZXNfc2VhcmNoIj4KICAgICAgICAgICAgICAgICAgICAKPHAgY2xhc3M9IlNlYXJjaE9mZmVyLXN3aXRjaCI+CiAgICA8bGFiZWwgY2xhc3M9IlNlYXJjaE9mZmVyLXN3aXRjaC1vcHRpb24gU2VhcmNoT2ZmZXItc3dpdGNoLW9wdGlvbi0tYWNoYXQgU2VhcmNoT2ZmZXItc3dpdGNoLW9wdGlvbi0tc2VsZWN0ZWQiIGZvcj0ic2VhcmNoT2ZmZXIiPkFjaGV0ZXI8L2xhYmVsPgogICAgPGEgY2xhc3M9IlNlYXJjaE9mZmVyLXN3aXRjaC1vcHRpb24gU2VhcmNoT2ZmZXItc3dpdGNoLW9wdGlvbi0tbG9jYXRpb24iCiAgICAgICBocmVmPSIvbG9jYXRpb24vcGFyaXMtNzUiPgogICAgICAgIExvdWVyCiAgICA8L2E+CjwvcD4KICAgICAgICAKICAgICAgICA8ZGl2IGNsYXNzPSJTZWFyY2hPZmZlci1lbmdpbmUtaW5wdXRzIGpzLVRhZ3NJbnB1dCI+CiAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJ0ZXh0IiBpZD0ic2VhcmNoRm9ybV9sb2NhbGlzYXRpb24iIG5hbWU9InNlYXJjaEZvcm1bbG9jYWxpc2F0aW9uXSIgb25pbnZhbGlkPSJzZXRDdXN0b21WYWxpZGl0eSgmIzAzOTtNZXJjaSBkZSByZW5zZWlnbmVyIHVuIGxpZXUgZGUgcmVjaGVyY2hlJiMwMzk7KSIgb25pbnB1dD0ic2V0Q3VzdG9tVmFsaWRpdHkoJiMwMzk7JiMwMzk7KTsiIGNsYXNzPSJTZWFyY2hPZmZlci1lbmdpbmUtaW5wdXQganMtVGFnc0lucHV0LW9yaWdpbmFsIiBpZD0ic2VhcmNoT2ZmZXIiIHBsYWNlaG9sZGVyPSJWaWxsZSwgRMOpcGFydGVtZW50LCBDb2RlIHBvc3RhbCIgdHlwZT0ic2VhcmNoIiB2YWx1ZT0icGFyaXMgKDc1KSIgLz4KICAgICAgICAgICAgPGJ1dHRvbiBuYW1lPSJyZWNoZXJjaGVyX2xvY2FsaXNhdGlvbiIgY2xhc3M9IlNlYXJjaE9mZmVyLWVuZ2luZS1zdWJtaXQiIHR5cGU9InN1Ym1pdCIgYXJpYS1sYWJlbD0iVHJvdXZlciB1biBiaWVuIMOgIGFjaGV0ZXIiPgogICAgICAgICAgICAgICAgPHN2ZyBjbGFzcz0iaWNvbiIgc3R5bGU9IndpZHRoOjI1cHg7aGVpZ2h0OjI1cHgiIGFyaWEtaGlkZGVuPSJ0cnVlIj48dXNlIHhsaW5rOmhyZWY9Ii9idW5kbGVzL2ZvbmNpYWludGVybmV0L3N2Zy9pY29ucy5zdmcjSWNvbi0tc2VhcmNoMiI+PC91c2U+PC9zdmc+CiAgICAgICAgICAgIDwvYnV0dG9uPgogICAgICAgIDwvZGl2PgoKICAgICAgICA8cCBjbGFzcz0iU2VhcmNoT2ZmZXItZW5naW5lLWttIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBmb3I9InNlYXJjaEZvcm1fZGlzdGFuY2UiPsOJdGVuZHJlIGxhIHpvbmUgZGUgcmVjaGVyY2hlIGRlPC9sYWJlbD4KICAgICAgICAgICAgPHNlbGVjdCBpZD0ic2VhcmNoRm9ybV9kaXN0YW5jZSIgbmFtZT0ic2VhcmNoRm9ybVtkaXN0YW5jZV0iPjxvcHRpb24gdmFsdWU9IiI+PC9vcHRpb24+ICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT0iNSIgPjVrbTwvb3B0aW9uPiAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9IjEwIiA+MTBrbTwvb3B0aW9uPiAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9IjIwIiA+MjBrbTwvb3B0aW9uPiAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9IjMwIiA+MzBrbTwvb3B0aW9uPjwvc2VsZWN0PgogICAgICAgIDwvcD4KCiAgICAgICAgPGRpdiBjbGFzcz0iU2VhcmNoT2ZmZXItcmVmIj4KICAgICAgICAgICAgPGxhYmVsIGNsYXNzPSJTZWFyY2hPZmZlci1yZWYtbGFiZWwiIGZvcj0ic2VhcmNoT2ZmZXJSZWYiPlNhaXNpciB1bmUgcsOpZsOpcmVuY2U8L2xhYmVsPgogICAgICAgICAgICA8cCBjbGFzcz0iU2VhcmNoT2ZmZXItcmVmLWlucHV0cyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9InRleHQiIGlkPSJzZWFyY2hGb3JtX3JlZmVyZW5jZSIgbmFtZT0ic2VhcmNoRm9ybVtyZWZlcmVuY2VdIiBhdXRvY29tcGxldGU9Im9mZiIgdHlwZT0ibnVtYmVyIiBtaW49IjAiIGlkPSJzZWFyY2hPZmZlclJlZiIgcGxhY2Vob2xkZXI9IlLDqWbDqXJlbmNlIGR1IGJpZW4gw6AgYWNoZXRlciIgdmFsdWU9IiIgbm92YWxpZGF0ZT0iIiAvPgogICAgICAgICAgICAgICAgPGJ1dHRvbiB0eXBlPSJzdWJtaXQiIGFyaWEtbGFiZWw9IlRyb3V2ZXIgdW4gYmllbiBwYXIgc2EgcsOpZsOpcmVuY2UiIGRhdGEtYnRuPSJyZWNoZXJjaGVfcmVmZXJlbmNlX2J0biI+PHNwYW4gYXJpYS1oaWRkZW49InRydWUiPjxzdmcgY2xhc3M9Imljb24iIHN0eWxlPSJ3aWR0aDoyMHB4O2hlaWdodDoyMHB4IiBhcmlhLWhpZGRlbj0idHJ1ZSI+PHVzZSB4bGluazpocmVmPSIvYnVuZGxlcy9mb25jaWFpbnRlcm5ldC9zdmcvaWNvbnMuc3ZnI0ljb24tLXNlYXJjaDIiPjwvdXNlPjwvc3ZnPjwvc3Bhbj48L2J1dHRvbj4KICAgICAgICAgICAgPC9wPgogICAgICAgIDwvZGl2PgogICAgPC9kaXY+CgogICAgPGRpdiBjbGFzcz0iU2VhcmNoT2ZmZXItY3JpdGVyaWEiPgogICAgICAgIDxmaWVsZHNldCBjbGFzcz0iU2VhcmNoT2ZmZXItY3JpdGVyaWEtaXRlbSIgZGF0YS13aWRnZXQ9IkRyb3Bkb3duIiBkYXRhLWJlaGF0PSJjcml0ZXJlLXR5cGVEZUJpZW4tY29udGFpbmVyIj4KICAgICAgICAgICAgPGxlZ2VuZCBjbGFzcz0iU2VhcmNoT2ZmZXItY3JpdGVyaWEtbGFiZWwiIGRhdGEtd2lkZ2V0PSJEcm9wZG93bi10cmlnZ2VyIiBkYXRhLWJlaGF0PSJjcml0ZXJlLXR5cGVEZUJpZW4iPlR5cGUgZGUgYmllbjwvbGVnZW5kPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJTZWFyY2hPZmZlci1jcml0ZXJpYS1ib3giIGRhdGEtd2lkZ2V0PSJEcm9wZG93bi1jb250ZW50Ij4KCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJTZWFyY2hPZmZlci1jaGVja2JveCBTZWFyY2hPZmZlci1jaGVja2JveC0tMW9uMiIgZGF0YS1iZWhhdD0iZmlsdHJlLUFwcGFydGVtZW50Ij4KICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9ImNoZWNrYm94IiBpZD0ic2VhcmNoRm9ybV90eXBlX2JpZW5fMCIgbmFtZT0ic2VhcmNoRm9ybVt0eXBlX2JpZW5dW10iIGRhdGEtbGFiZWw9IkFwcGFydGVtZW50IiB2YWx1ZT0iYXBwYXJ0ZW1lbnQiIGNoZWNrZWQ9ImNoZWNrZWQiIC8+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgZm9yPSJzZWFyY2hGb3JtX3R5cGVfYmllbl8wIj5BcHBhcnRlbWVudDwvbGFiZWw+CiAgICAgICAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0iU2VhcmNoT2ZmZXItY2hlY2tib3ggU2VhcmNoT2ZmZXItY2hlY2tib3gtLTFvbjIiIGRhdGEtYmVoYXQ9ImZpbHRyZS1NYWlzb24iPgogICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0iY2hlY2tib3giIGlkPSJzZWFyY2hGb3JtX3R5cGVfYmllbl8xIiBuYW1lPSJzZWFyY2hGb3JtW3R5cGVfYmllbl1bXSIgZGF0YS1sYWJlbD0iTWFpc29uIiB2YWx1ZT0ibWFpc29uIiBjaGVja2VkPSJjaGVja2VkIiAvPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGZvcj0ic2VhcmNoRm9ybV90eXBlX2JpZW5fMSI+TWFpc29uPC9sYWJlbD4KICAgICAgICAgICAgICAgICAgICA8L3A+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJTZWFyY2hPZmZlci1jaGVja2JveCBTZWFyY2hPZmZlci1jaGVja2JveC0tMW9uMiIgZGF0YS1iZWhhdD0iZmlsdHJlLVRlcnJhaW4iPgogICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0iY2hlY2tib3giIGlkPSJzZWFyY2hGb3JtX3R5cGVfYmllbl8yIiBuYW1lPSJzZWFyY2hGb3JtW3R5cGVfYmllbl1bXSIgZGF0YS1sYWJlbD0iVGVycmFpbiIgdmFsdWU9InRlcnJhaW4iIC8+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgZm9yPSJzZWFyY2hGb3JtX3R5cGVfYmllbl8yIj5UZXJyYWluPC9sYWJlbD4KICAgICAgICAgICAgICAgICAgICA8L3A+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJTZWFyY2hPZmZlci1jaGVja2JveCBTZWFyY2hPZmZlci1jaGVja2JveC0tMW9uMiIgZGF0YS1iZWhhdD0iZmlsdHJlLUltbWV1YmxlIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9ImNoZWNrYm94IiBpZD0ic2VhcmNoRm9ybV90eXBlX2JpZW5fMyIgbmFtZT0ic2VhcmNoRm9ybVt0eXBlX2JpZW5dW10iIGRhdGEtbGFiZWw9IkltbWV1YmxlIiB2YWx1ZT0iaW1tZXVibGUiIC8+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgZm9yPSJzZWFyY2hGb3JtX3R5cGVfYmllbl8zIj5JbW1ldWJsZTwvbGFiZWw+CiAgICAgICAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0iU2VhcmNoT2ZmZXItY2hlY2tib3ggU2VhcmNoT2ZmZXItY2hlY2tib3gtLTFvbjIiIGRhdGEtYmVoYXQ9ImZpbHRyZS1Mb2NhbCAtIEJ1cmVhdSI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJjaGVja2JveCIgaWQ9InNlYXJjaEZvcm1fdHlwZV9iaWVuXzQiIG5hbWU9InNlYXJjaEZvcm1bdHlwZV9iaWVuXVtdIiBkYXRhLWxhYmVsPSJMb2NhbCAtIEJ1cmVhdSIgdmFsdWU9ImxvY2FsLWNvbW1lcmNpYWwiIC8+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgZm9yPSJzZWFyY2hGb3JtX3R5cGVfYmllbl80Ij5Mb2NhbCAtIEJ1cmVhdTwvbGFiZWw+CiAgICAgICAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0iU2VhcmNoT2ZmZXItY2hlY2tib3ggU2VhcmNoT2ZmZXItY2hlY2tib3gtLTFvbjIiIGRhdGEtYmVoYXQ9ImZpbHRyZS1TdGF0aW9ubmVtZW50Ij4KICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9ImNoZWNrYm94IiBpZD0ic2VhcmNoRm9ybV90eXBlX2JpZW5fNSIgbmFtZT0ic2VhcmNoRm9ybVt0eXBlX2JpZW5dW10iIGRhdGEtbGFiZWw9IlN0YXRpb25uZW1lbnQiIHZhbHVlPSJwYXJraW5nIiAvPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGZvcj0ic2VhcmNoRm9ybV90eXBlX2JpZW5fNSI+U3RhdGlvbm5lbWVudDwvbGFiZWw+CiAgICAgICAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0iU2VhcmNoT2ZmZXItY2hlY2tib3ggU2VhcmNoT2ZmZXItY2hlY2tib3gtLTFvbjIiIGRhdGEtYmVoYXQ9ImZpbHRyZS1Qcm9ncmFtbWUgTmV1ZiI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJjaGVja2JveCIgaWQ9InNlYXJjaEZvcm1fdHlwZV9iaWVuXzYiIG5hbWU9InNlYXJjaEZvcm1bdHlwZV9iaWVuXVtdIiBkYXRhLWxhYmVsPSJQcm9ncmFtbWUgTmV1ZiIgdmFsdWU9InByb2dyYW1tZS1uZXVmIiAvPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGZvcj0ic2VhcmNoRm9ybV90eXBlX2JpZW5fNiI+UHJvZ3JhbW1lIE5ldWY8L2xhYmVsPgogICAgICAgICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0iU2VhcmNoT2ZmZXItcmVsb2FkIj48YnV0dG9uIGRhdGEtYmVoYXQ9ImZpbHRyZUFjdHVhbGlzZS1jcml0ZXJlLXR5cGVEZUJpZW4iIHR5cGU9InN1Ym1pdCI+QWN0dWFsaXNlcjwvYnV0dG9uPjwvcD4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9maWVsZHNldD4KCiAgICAgICAgPGRpdiBjbGFzcz0iU2VhcmNoT2ZmZXItY3JpdGVyaWEtaXRlbSIgZGF0YS13aWRnZXQ9IkRyb3Bkb3duIiBkYXRhLWJlaGF0PSJjcml0ZXJlLXN1cmZhY2UtY29udGFpbmVyIj4KICAgICAgICAgICAgPHAgY2xhc3M9IlNlYXJjaE9mZmVyLWNyaXRlcmlhLWxhYmVsIiBkYXRhLXdpZGdldD0iRHJvcGRvd24tdHJpZ2dlciIgZGF0YS1iZWhhdD0iY3JpdGVyZS1zdXJmYWNlIj5TdXJmYWNlPC9wPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJTZWFyY2hPZmZlci1jcml0ZXJpYS1ib3giIGRhdGEtd2lkZ2V0PSJEcm9wZG93bi1jb250ZW50Ij4KICAgICAgICAgICAgICAgIDxmaWVsZHNldD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGVnZW5kPlN1cmZhY2UgZHUgYmllbjwvbGVnZW5kPgogICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJTZWFyY2hPZmZlci10ZXh0IiBkYXRhLWJlaGF0PSJmaWx0cmUtc3VyZmFjZU1pbiI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgZm9yPSJzZWFyY2hGb3JtX3N1cmZhY2VfbWluIj5NwrI8L2xhYmVsPgogICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0ibnVtYmVyIiBpZD0ic2VhcmNoRm9ybV9zdXJmYWNlX21pbiIgbmFtZT0ic2VhcmNoRm9ybVtzdXJmYWNlX21pbl0iIG1pbj0iMCIgcGxhY2Vob2xkZXI9Ik1pbiIgLz4KICAgICAgICAgICAgICAgICAgICA8L3A+CiAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9IlNlYXJjaE9mZmVyLXRleHQiIGRhdGEtYmVoYXQ9ImZpbHRyZS1zdXJmYWNlTWF4Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBmb3I9InNlYXJjaEZvcm1fc3VyZmFjZV9tYXgiPk3CsjwvbGFiZWw+CiAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJudW1iZXIiIGlkPSJzZWFyY2hGb3JtX3N1cmZhY2VfbWF4IiBuYW1lPSJzZWFyY2hGb3JtW3N1cmZhY2VfbWF4XSIgcGxhY2Vob2xkZXI9Ik1heCIgLz4KICAgICAgICAgICAgICAgICAgICA8L3A+CiAgICAgICAgICAgICAgICA8L2ZpZWxkc2V0PgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICA8ZmllbGRzZXQ+CiAgICAgICAgICAgICAgICAgICAgPGxlZ2VuZD5TdXJmYWNlIGR1IHRlcnJhaW48L2xlZ2VuZD4KICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0iU2VhcmNoT2ZmZXItdGV4dCIgZGF0YS1iZWhhdD0iZmlsdHJlLXN1cmZhY2VNaW5UZXJyYWluIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBmb3I9InNlYXJjaEZvcm1fc3VyZmFjZV90ZXJyYWluX21pbiI+TcKyPC9sYWJlbD4KICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9Im51bWJlciIgaWQ9InN1cmZhY2VUZXJyYWluTWluIiBuYW1lPSJzZWFyY2hGb3JtW3N1cmZhY2VfdGVycmFpbl9taW5dIiBwbGFjZWhvbGRlcj0iTWluIiAvPgogICAgICAgICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0iU2VhcmNoT2ZmZXItdGV4dCIgZGF0YS1iZWhhdD0iZmlsdHJlLXN1cmZhY2VNYXhUZXJyYWluIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBmb3I9InNlYXJjaEZvcm1fc3VyZmFjZV90ZXJyYWluX21heCI+TcKyPC9sYWJlbD4KICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9Im51bWJlciIgaWQ9InN1cmZhY2VUZXJyYWluTWF4IiBuYW1lPSJzZWFyY2hGb3JtW3N1cmZhY2VfdGVycmFpbl9tYXhdIiBwbGFjZWhvbGRlcj0iTWF4IiAvPgogICAgICAgICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgICAgIDwvZmllbGRzZXQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9IlNlYXJjaE9mZmVyLXJlbG9hZCI+PGJ1dHRvbiBkYXRhLWJlaGF0PSJmaWx0cmVBY3R1YWxpc2UtY3JpdGVyZS1zdXJmYWNlIiB0eXBlPSJzdWJtaXQiPkFjdHVhbGlzZXI8L2J1dHRvbj48L3A+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgoKICAgICAgICA8ZmllbGRzZXQgY2xhc3M9IlNlYXJjaE9mZmVyLWNyaXRlcmlhLWl0ZW0iIGRhdGEtd2lkZ2V0PSJEcm9wZG93biIgZGF0YS1iZWhhdD0iY3JpdGVyZS1wcml4LWNvbnRhaW5lciI+CiAgICAgICAgICAgIDxsZWdlbmQgY2xhc3M9IlNlYXJjaE9mZmVyLWNyaXRlcmlhLWxhYmVsIiBkYXRhLXdpZGdldD0iRHJvcGRvd24tdHJpZ2dlciIgZGF0YS1iZWhhdD0iY3JpdGVyZS1wcml4Ij5Qcml4PC9sZWdlbmQ+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9IlNlYXJjaE9mZmVyLWNyaXRlcmlhLWJveCIgZGF0YS13aWRnZXQ9IkRyb3Bkb3duLWNvbnRlbnQiPgogICAgICAgICAgICAgICAgPHAgY2xhc3M9IlNlYXJjaE9mZmVyLXRleHQiIGRhdGEtYmVoYXQ9ImZpbHRyZS1wcml4TWluIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGZvcj0ic2VhcmNoRm9ybV9wcml4X21pbiI+4oKsPC9sYWJlbD4KICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0ibnVtYmVyIiBpZD0ic2VhcmNoRm9ybV9wcml4X21pbiIgbmFtZT0ic2VhcmNoRm9ybVtwcml4X21pbl0iIHBsYWNlaG9sZGVyPSJNaW4iIG1pbj0iMCIgLz4KICAgICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJTZWFyY2hPZmZlci10ZXh0IiBkYXRhLWJlaGF0PSJmaWx0cmUtcHJpeE1heCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBmb3I9InNlYXJjaEZvcm1fcHJpeF9tYXgiPuKCrDwvbGFiZWw+CiAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9Im51bWJlciIgaWQ9InNlYXJjaEZvcm1fcHJpeF9tYXgiIG5hbWU9InNlYXJjaEZvcm1bcHJpeF9tYXhdIiBwbGFjZWhvbGRlcj0iTWF4IiBtaW49IjAiIC8+CiAgICAgICAgICAgICAgICA8L3A+CiAgICAgICAgICAgICAgICA8cCBjbGFzcz0iU2VhcmNoT2ZmZXItcmVsb2FkIj48YnV0dG9uIHR5cGU9InN1Ym1pdCIgZGF0YS1iZWhhdD0iZmlsdHJlQWN0dWFsaXNlLWNyaXRlcmUtcHJpeCI+QWN0dWFsaXNlcjwvYnV0dG9uPjwvcD4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9maWVsZHNldD4KCiAgICAgICAgPGRpdiBjbGFzcz0iU2VhcmNoT2ZmZXItY3JpdGVyaWEtaXRlbSIgZGF0YS13aWRnZXQ9IkRyb3Bkb3duIiBkYXRhLWJlaGF0PSJjcml0ZXJlLXBpZWNlcy1jb250YWluZXIiPgogICAgICAgICAgICA8cCBjbGFzcz0iU2VhcmNoT2ZmZXItY3JpdGVyaWEtbGFiZWwiIGRhdGEtd2lkZ2V0PSJEcm9wZG93bi10cmlnZ2VyIiBkYXRhLWJlaGF0PSJjcml0ZXJlLXBpZWNlcyI+UGnDqGNlczwvcD4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iU2VhcmNoT2ZmZXItY3JpdGVyaWEtYm94IFNlYXJjaE9mZmVyLWNyaXRlcmlhLWJveC0tY29scyIgZGF0YS13aWRnZXQ9IkRyb3Bkb3duLWNvbnRlbnQiPgogICAgICAgICAgICAgICAgPGZpZWxkc2V0PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsZWdlbmQ+Tm9tYnJlIGRlIHBpw6hjZXM8L2xlZ2VuZD4KICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0iU2VhcmNoT2ZmZXItY2hlY2tib3giIGRhdGEtYmVoYXQ9ImZpbHRyZS0xIHBpw6hjZSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0iY2hlY2tib3giIGlkPSJzZWFyY2hGb3JtX3BpZWNlc18wIiBuYW1lPSJzZWFyY2hGb3JtW3BpZWNlc11bXSIgZGF0YS1sYWJlbD0iMSBwacOoY2UiIHZhbHVlPSIxIiAvPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBmb3I9InNlYXJjaEZvcm1fcGllY2VzXzAiPjEgcGnDqGNlPC9sYWJlbD4KICAgICAgICAgICAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJTZWFyY2hPZmZlci1jaGVja2JveCIgZGF0YS1iZWhhdD0iZmlsdHJlLTIgcGnDqGNlcyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0iY2hlY2tib3giIGlkPSJzZWFyY2hGb3JtX3BpZWNlc18xIiBuYW1lPSJzZWFyY2hGb3JtW3BpZWNlc11bXSIgZGF0YS1sYWJlbD0iMiBwacOoY2VzIiB2YWx1ZT0iMiIgLz4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgZm9yPSJzZWFyY2hGb3JtX3BpZWNlc18xIj4yIHBpw6hjZXM8L2xhYmVsPgogICAgICAgICAgICAgICAgICAgICAgICA8L3A+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9IlNlYXJjaE9mZmVyLWNoZWNrYm94IiBkYXRhLWJlaGF0PSJmaWx0cmUtMyBwacOoY2VzIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJjaGVja2JveCIgaWQ9InNlYXJjaEZvcm1fcGllY2VzXzIiIG5hbWU9InNlYXJjaEZvcm1bcGllY2VzXVtdIiBkYXRhLWxhYmVsPSIzIHBpw6hjZXMiIHZhbHVlPSIzIiAvPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBmb3I9InNlYXJjaEZvcm1fcGllY2VzXzIiPjMgcGnDqGNlczwvbGFiZWw+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0iU2VhcmNoT2ZmZXItY2hlY2tib3giIGRhdGEtYmVoYXQ9ImZpbHRyZS00IHBpw6hjZXMiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9ImNoZWNrYm94IiBpZD0ic2VhcmNoRm9ybV9waWVjZXNfMyIgbmFtZT0ic2VhcmNoRm9ybVtwaWVjZXNdW10iIGRhdGEtbGFiZWw9IjQgcGnDqGNlcyIgdmFsdWU9IjQiIC8+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGZvcj0ic2VhcmNoRm9ybV9waWVjZXNfMyI+NCBwacOoY2VzPC9sYWJlbD4KICAgICAgICAgICAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJTZWFyY2hPZmZlci1jaGVja2JveCIgZGF0YS1iZWhhdD0iZmlsdHJlLTUgcGnDqGNlcyBvdSBwbHVzIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJjaGVja2JveCIgaWQ9InNlYXJjaEZvcm1fcGllY2VzXzQiIG5hbWU9InNlYXJjaEZvcm1bcGllY2VzXVtdIiBkYXRhLWxhYmVsPSI1IHBpw6hjZXMgb3UgcGx1cyIgdmFsdWU9IjUiIC8+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGZvcj0ic2VhcmNoRm9ybV9waWVjZXNfNCI+NSBwacOoY2VzIG91IHBsdXM8L2xhYmVsPgogICAgICAgICAgICAgICAgICAgICAgICA8L3A+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZmllbGRzZXQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGZpZWxkc2V0PgogICAgICAgICAgICAgICAgICAgIDxsZWdlbmQ+Tm9tYnJlIGRlIGNoYW1icmVzPC9sZWdlbmQ+CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJTZWFyY2hPZmZlci1jaGVja2JveCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0iY2hlY2tib3giIGlkPSJzZWFyY2hGb3JtX2NoYW1icmVzXzAiIG5hbWU9InNlYXJjaEZvcm1bY2hhbWJyZXNdW10iIGRhdGEtbGFiZWw9IjEgY2hhbWJyZSIgdmFsdWU9IjEiIC8+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGZvcj0ic2VhcmNoRm9ybV9jaGFtYnJlc18wIj4xIGNoYW1icmU8L2xhYmVsPgogICAgICAgICAgICAgICAgICAgICAgICA8L3A+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9IlNlYXJjaE9mZmVyLWNoZWNrYm94Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJjaGVja2JveCIgaWQ9InNlYXJjaEZvcm1fY2hhbWJyZXNfMSIgbmFtZT0ic2VhcmNoRm9ybVtjaGFtYnJlc11bXSIgZGF0YS1sYWJlbD0iMiBjaGFtYnJlcyIgdmFsdWU9IjIiIC8+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGZvcj0ic2VhcmNoRm9ybV9jaGFtYnJlc18xIj4yIGNoYW1icmVzPC9sYWJlbD4KICAgICAgICAgICAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJTZWFyY2hPZmZlci1jaGVja2JveCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0iY2hlY2tib3giIGlkPSJzZWFyY2hGb3JtX2NoYW1icmVzXzIiIG5hbWU9InNlYXJjaEZvcm1bY2hhbWJyZXNdW10iIGRhdGEtbGFiZWw9IjMgY2hhbWJyZXMiIHZhbHVlPSIzIiAvPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBmb3I9InNlYXJjaEZvcm1fY2hhbWJyZXNfMiI+MyBjaGFtYnJlczwvbGFiZWw+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0iU2VhcmNoT2ZmZXItY2hlY2tib3giPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9ImNoZWNrYm94IiBpZD0ic2VhcmNoRm9ybV9jaGFtYnJlc18zIiBuYW1lPSJzZWFyY2hGb3JtW2NoYW1icmVzXVtdIiBkYXRhLWxhYmVsPSI0IGNoYW1icmVzIiB2YWx1ZT0iNCIgLz4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgZm9yPSJzZWFyY2hGb3JtX2NoYW1icmVzXzMiPjQgY2hhbWJyZXM8L2xhYmVsPgogICAgICAgICAgICAgICAgICAgICAgICA8L3A+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9IlNlYXJjaE9mZmVyLWNoZWNrYm94Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJjaGVja2JveCIgaWQ9InNlYXJjaEZvcm1fY2hhbWJyZXNfNCIgbmFtZT0ic2VhcmNoRm9ybVtjaGFtYnJlc11bXSIgZGF0YS1sYWJlbD0iNSBjaGFtYnJlcyBvdSBwbHVzIiB2YWx1ZT0iNSIgLz4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgZm9yPSJzZWFyY2hGb3JtX2NoYW1icmVzXzQiPjUgY2hhbWJyZXMgb3UgcGx1czwvbGFiZWw+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIDwvZmllbGRzZXQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9IlNlYXJjaE9mZmVyLXJlbG9hZCI+PGJ1dHRvbiBkYXRhLWJlaGF0PSJmaWx0cmVBY3R1YWxpc2UtY3JpdGVyZS1waWVjZXMiIHR5cGU9InN1Ym1pdCI+QWN0dWFsaXNlcjwvYnV0dG9uPjwvcD4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9kaXY+CgogICAgICAgIDxkaXYgY2xhc3M9IlNlYXJjaE9mZmVyLWNyaXRlcmlhLWl0ZW0iIGRhdGEtd2lkZ2V0PSJEcm9wZG93biIgZGF0YS1iZWhhdD0iY3JpdGVyZS1zdXBwbGVtZW50YWlyZXMtY29udGFpbmVyIj4KICAgICAgICAgICAgPHAgY2xhc3M9IlNlYXJjaE9mZmVyLWNyaXRlcmlhLWxhYmVsIiBkYXRhLXdpZGdldD0iRHJvcGRvd24tdHJpZ2dlciIgZGF0YS1iZWhhdD0iY3JpdGVyZS1zdXBwbGVtZW50YWlyZXMiPkNyaXTDqHJlcyBzdXBwbMOpbWVudGFpcmVzPC9wPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJTZWFyY2hPZmZlci1jcml0ZXJpYS1ib3ggU2VhcmNoT2ZmZXItY3JpdGVyaWEtYm94LS1jb2xzMi0zIFNlYXJjaE9mZmVyLWNyaXRlcmlhLWJveC0tZnVsbHNjcmVlbiIgZGF0YS13aWRnZXQ9IkRyb3Bkb3duLWNvbnRlbnQiPgogICAgICAgICAgICAgICAgPGZpZWxkc2V0PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsZWdlbmQ+Q2FyYWN0w6lyaXN0aXF1ZXM8L2xlZ2VuZD4KICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJTZWFyY2hPZmZlci1jaGVja2JveCBTZWFyY2hPZmZlci1jaGVja2JveC0tMW9uMyIgZGF0YS1iZWhhdD0iZmlsdHJlLVBhcmtpbmcgLyBnYXJhZ2UgLyBib3giPgogICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0iY2hlY2tib3giIGlkPSJzZWFyY2hGb3JtX3BhcmtpbmciIG5hbWU9InNlYXJjaEZvcm1bcGFya2luZ10iIGRhdGEtbGFiZWw9IlBhcmtpbmcgLyBnYXJhZ2UgLyBib3giIHZhbHVlPSIxIiAvPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGZvcj0ic2VhcmNoRm9ybV9wYXJraW5nIj5QYXJraW5nIC8gZ2FyYWdlIC8gYm94PC9sYWJlbD4KICAgICAgICAgICAgICAgICAgICA8L3A+CiAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9IlNlYXJjaE9mZmVyLWNoZWNrYm94IFNlYXJjaE9mZmVyLWNoZWNrYm94LS0xb24zIiBkYXRhLWJlaGF0PSJmaWx0cmUtQXNjZW5zZXVyIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9ImNoZWNrYm94IiBpZD0ic2VhcmNoRm9ybV9hc2NlbnNldXIiIG5hbWU9InNlYXJjaEZvcm1bYXNjZW5zZXVyXSIgZGF0YS1sYWJlbD0iQXNjZW5zZXVyIiB2YWx1ZT0iMSIgLz4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBmb3I9InNlYXJjaEZvcm1fYXNjZW5zZXVyIj5Bc2NlbnNldXI8L2xhYmVsPgogICAgICAgICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0iU2VhcmNoT2ZmZXItY2hlY2tib3ggU2VhcmNoT2ZmZXItY2hlY2tib3gtLTFvbjMiIGRhdGEtYmVoYXQ9ImZpbHRyZS1Tb3VzLXNvbCAvIGNhdmUiPgogICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0iY2hlY2tib3giIGlkPSJzZWFyY2hGb3JtX2NhdmUiIG5hbWU9InNlYXJjaEZvcm1bY2F2ZV0iIGRhdGEtbGFiZWw9IlNvdXMtc29sIC8gY2F2ZSIgdmFsdWU9IjEiIC8+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgZm9yPSJzZWFyY2hGb3JtX2NhdmUiPlNvdXMtc29sIC8gY2F2ZTwvbGFiZWw+CiAgICAgICAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJTZWFyY2hPZmZlci1jaGVja2JveCBTZWFyY2hPZmZlci1jaGVja2JveC0tMW9uMyIgZGF0YS1iZWhhdD0iZmlsdHJlLVRlcnJhaW4gLyBqYXJkaW4iPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9ImNoZWNrYm94IiBpZD0ic2VhcmNoRm9ybV9qYXJkaW4iIG5hbWU9InNlYXJjaEZvcm1bamFyZGluXSIgZGF0YS1sYWJlbD0iVGVycmFpbiAvIGphcmRpbiIgdmFsdWU9IjEiIC8+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGZvcj0ic2VhcmNoRm9ybV9qYXJkaW4iPlRlcnJhaW4gLyBqYXJkaW48L2xhYmVsPgogICAgICAgICAgICAgICAgICAgICAgICA8L3A+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0iU2VhcmNoT2ZmZXItY2hlY2tib3ggU2VhcmNoT2ZmZXItY2hlY2tib3gtLTFvbjMiIGRhdGEtYmVoYXQ9ImZpbHRyZS1CYWxjb24gLyB0ZXJyYXNzZSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0iY2hlY2tib3giIGlkPSJzZWFyY2hGb3JtX2JhbGNvbiIgbmFtZT0ic2VhcmNoRm9ybVtiYWxjb25dIiBkYXRhLWxhYmVsPSJCYWxjb24gLyB0ZXJyYXNzZSIgdmFsdWU9IjEiIC8+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGZvcj0ic2VhcmNoRm9ybV9iYWxjb24iPkJhbGNvbiAvIHRlcnJhc3NlPC9sYWJlbD4KICAgICAgICAgICAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9IlNlYXJjaE9mZmVyLWNoZWNrYm94IFNlYXJjaE9mZmVyLWNoZWNrYm94LS0xb24zIiBkYXRhLWJlaGF0PSJmaWx0cmUtUGlzY2luZSI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJjaGVja2JveCIgaWQ9InNlYXJjaEZvcm1fcGlzY2luZSIgbmFtZT0ic2VhcmNoRm9ybVtwaXNjaW5lXSIgZGF0YS1sYWJlbD0iUGlzY2luZSIgdmFsdWU9IjEiIC8+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgZm9yPSJzZWFyY2hGb3JtX3Bpc2NpbmUiPlBpc2NpbmU8L2xhYmVsPgogICAgICAgICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0iU2VhcmNoT2ZmZXItY2hlY2tib3ggU2VhcmNoT2ZmZXItY2hlY2tib3gtLTFvbjMiIGRhdGEtYmVoYXQ9ImZpbHRyZS1DbGltYXRpc2F0aW9uIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJjaGVja2JveCIgaWQ9InNlYXJjaEZvcm1fY2xpbWF0aXNhdGlvbiIgbmFtZT0ic2VhcmNoRm9ybVtjbGltYXRpc2F0aW9uXSIgZGF0YS1sYWJlbD0iQ2xpbWF0aXNhdGlvbiIgdmFsdWU9IjEiIC8+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGZvcj0ic2VhcmNoRm9ybV9jbGltYXRpc2F0aW9uIj5DbGltYXRpc2F0aW9uPC9sYWJlbD4KICAgICAgICAgICAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9IlNlYXJjaE9mZmVyLWNoZWNrYm94IFNlYXJjaE9mZmVyLWNoZWNrYm94LS0xb24zIiBkYXRhLWJlaGF0PSJmaWx0cmUtQWNjw6hzIGhhbmRpY2Fww6lzIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9ImNoZWNrYm94IiBpZD0ic2VhcmNoRm9ybV9hY2Nlc19oYW5kaSIgbmFtZT0ic2VhcmNoRm9ybVthY2Nlc19oYW5kaV0iIGRhdGEtbGFiZWw9IkFjY8OocyBoYW5kaWNhcMOpcyIgdmFsdWU9IjEiIC8+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgZm9yPSJzZWFyY2hGb3JtX2FjY2VzX2hhbmRpIj5BY2PDqHMgaGFuZGljYXDDqXM8L2xhYmVsPgogICAgICAgICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgICAgIDwvZmllbGRzZXQ+CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZmllbGRzZXQ+CiAgICAgICAgICAgICAgICAgICAgICAgIDxsZWdlbmQ+Q3JpdMOocmVzIGNvbXBsw6ltZW50YWlyZXM8L2xlZ2VuZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJTZWFyY2hPZmZlci1jaGVja2JveCIgZGF0YS1iZWhhdD0iZmlsdHJlLU5ldWYgdW5pcXVlbWVudCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9ImNoZWNrYm94IiBpZD0ic2VhcmNoRm9ybV9uZXVmIiBuYW1lPSJzZWFyY2hGb3JtW25ldWZdIiBkYXRhLWxhYmVsPSJOZXVmIHVuaXF1ZW1lbnQiIHZhbHVlPSIxIiAvPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgZm9yPSJzZWFyY2hGb3JtX25ldWYiPk5ldWYgdW5pcXVlbWVudDwvbGFiZWw+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3A+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0iU2VhcmNoT2ZmZXItY2hlY2tib3giIGRhdGEtYmVoYXQ9ImZpbHRyZS1WZW5kdSBsb3XDqSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9ImNoZWNrYm94IiBpZD0ic2VhcmNoRm9ybV9iaWVuX2xvdWUiIG5hbWU9InNlYXJjaEZvcm1bYmllbl9sb3VlXSIgZGF0YS1sYWJlbD0iVmVuZHUgbG91w6kiIHZhbHVlPSIxIiAvPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgZm9yPSJzZWFyY2hGb3JtX2JpZW5fbG91ZSI+VmVuZHUgbG91w6k8L2xhYmVsPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZmllbGRzZXQ+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJTZWFyY2hPZmZlci1yZWxvYWQiPjxidXR0b24gdHlwZT0ic3VibWl0IiBkYXRhLWJlaGF0PSJmaWx0cmVBY3R1YWxpc2UtY3JpdGVyZS1zdXBwbGVtZW50YWlyZXMiPkFjdHVhbGlzZXI8L2J1dHRvbj48L3A+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgogICAgPC9kaXY+Cgo8L2Rpdj4KCjxpbnB1dCB0eXBlPSJoaWRkZW4iIGlkPSJzZWFyY2hGb3JtX3R5cGUiIG5hbWU9InNlYXJjaEZvcm1bdHlwZV0iIHZhbHVlPSJhY2hhdCIgLz48L2Zvcm0+CgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJDb250ZW50LW92ZXJmbG93Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iU2VhcmNoQ3JpdGVyaWEiPgogICAgICAgICAgICAgICAgICAgICAgICA8dWwgY2xhc3M9IlNlYXJjaENyaXRlcmlhLXRhZ3MiIGRhdGEtYW5hbHl0aWNzPSJkZXNrdG9wLXRhZ3MtbGlzdCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBjbGFzcz0iVGFnIiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtYW5hbHl0aWNzPSJ0eXBlX2RlX2JpZW4iIGRhdGEtYW5hbHl0aWNzLXZhbHVlPSJhcHBhcnRlbWVudCIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaHJlZj0iL2FjaGF0L3BhcmlzLTc1L21haXNvbi8ocGFyYW1zKS9vbi8odHJpKS9kYXRlLyhvcmRyZSkvZGVzYyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBBcHBhcnRlbWVudAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9IlRhZy1kZWxldGUiIGFyaWEtbGFiZWw9IihzdXBwcmltZXIpIj48c3BhbiBhcmlhLWhpZGRlbj0idHJ1ZSI+PHN2ZyBjbGFzcz0iaWNvbiIgc3R5bGU9IndpZHRoOjEycHg7aGVpZ2h0OjEycHgiIGFyaWEtaGlkZGVuPSJ0cnVlIj48dXNlIHhsaW5rOmhyZWY9Ii9idW5kbGVzL2ZvbmNpYWludGVybmV0L3N2Zy9pY29ucy5zdmcjSWNvbi0tY2xvc2UyIj48L3VzZT48L3N2Zz48L3NwYW4+PC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGNsYXNzPSJUYWciICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1hbmFseXRpY3M9InR5cGVfZGVfYmllbiIgZGF0YS1hbmFseXRpY3MtdmFsdWU9Im1haXNvbiIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaHJlZj0iL2FjaGF0L3BhcmlzLTc1L2FwcGFydGVtZW50LyhwYXJhbXMpL29uLyh0cmkpL2RhdGUvKG9yZHJlKS9kZXNjIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIE1haXNvbgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9IlRhZy1kZWxldGUiIGFyaWEtbGFiZWw9IihzdXBwcmltZXIpIj48c3BhbiBhcmlhLWhpZGRlbj0idHJ1ZSI+PHN2ZyBjbGFzcz0iaWNvbiIgc3R5bGU9IndpZHRoOjEycHg7aGVpZ2h0OjEycHgiIGFyaWEtaGlkZGVuPSJ0cnVlIj48dXNlIHhsaW5rOmhyZWY9Ii9idW5kbGVzL2ZvbmNpYWludGVybmV0L3N2Zy9pY29ucy5zdmcjSWNvbi0tY2xvc2UyIj48L3VzZT48L3N2Zz48L3NwYW4+PC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGNsYXNzPSJUYWciIGRhdGEtYW5hbHl0aWNzLWxvY2F0aW9uLXR5cGU9ImRlcGFydGVtZW50IiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtYW5hbHl0aWNzPSJsb2NhbGlzYXRpb24iIGRhdGEtYW5hbHl0aWNzLXZhbHVlPSI3NSAtIHBhcmlzIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBocmVmPSIvYWNoYXQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgUEFSSVMgKDc1KQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9IlRhZy1kZWxldGUiIGFyaWEtbGFiZWw9IihzdXBwcmltZXIpIj48c3BhbiBhcmlhLWhpZGRlbj0idHJ1ZSI+PHN2ZyBjbGFzcz0iaWNvbiIgc3R5bGU9IndpZHRoOjEycHg7aGVpZ2h0OjEycHgiIGFyaWEtaGlkZGVuPSJ0cnVlIj48dXNlIHhsaW5rOmhyZWY9Ii9idW5kbGVzL2ZvbmNpYWludGVybmV0L3N2Zy9pY29ucy5zdmcjSWNvbi0tY2xvc2UyIj48L3VzZT48L3N2Zz48L3NwYW4+PC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdWw+CgogICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9IlNlYXJjaENyaXRlcmlhLWFsZXJ0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cD5SZWNldm9pciBwYXIgZS1tYWlsIGxlcyBub3V2ZWF1eCBiaWVucyBjb3JyZXNwb25kYW50IMOgIHZvdHJlIHJlY2hlcmNoZS48L3A+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHA+PGEgY2xhc3M9IkJ0biBCdG4tLXNtYWxsIEljb24tLWJlbGwgTW9kYWwtbGluay0tYWpheCIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBocmVmPSIvZW1haWxfYWxlcnRfcG9waW4vYWNoYXQvJTdCJTIycSUyMjolMjIqOiolMjIsJTIyZnElMjI6JTIyJTI4YXR0cl90eXBlX3M6cHJvcGVydHklMjBBTkQlMjBhdHRyX3Byb3BlcnR5X3R5cGVfczpwdXJjaGFzZSUyMEFORCUyMCUyOGF0dHJfdHlwZV9iaWVuX21zOiU1QyUyMmFwcGFydGVtZW50JTVDJTIyJTIwT1IlMjBhdHRyX2xvZ2VtZW50c190eXBlX19fX21zOiU1QyUyMlQlNUMlMjIlMjBPUiUyMGF0dHJfdHlwZV9iaWVuX21zOiU1QyUyMm1haXNvbiU1QyUyMiUyME9SJTIwYXR0cl9sb2dlbWVudHNfdHlwZV9fX19tczolNUMlMjJNJTVDJTIyJTI5JTIwQU5EJTIwJTI4YXR0cl9wcml4X3ZlbnRlX3RmOiU1QjAlMjBUTyUyMColNUQlMjBPUiUyMGF0dHJfbG9nZW1lbnRzX3ByaXhfX19fZjolNUIwJTIwVE8lMjAqJTVEJTI5JTIwQU5EJTIwJTI4YXR0cl9jYW5vbmljYWxfbmFtZV9zOnBhcmlzLTc1KiUyME9SJTIwYXR0cl9jb2RlX3Bvc3RhbF9tczo3NSolMjklMjBBTkQlMjBtZXRhX2luc3RhbGxhdGlvbl9pZF9tczo4Y2M4YTBiYmJhODVjNWFmMDYxZjIxMGM4NTBhMjg5ZiUyMEFORCUyMG1ldGFfaXNfaW52aXNpYmxlX2I6ZmFsc2UlMjBBTkQlMjAlMjhtZXRhX3NlY3Rpb25faWRfc2k6MSUyME9SJTIwbWV0YV9zZWN0aW9uX2lkX3NpOjMlMjklMjBBTkQlMjBtZXRhX2xhbmd1YWdlX2NvZGVfbXM6ZnJlLUZSJTIwQU5EJTIwbWV0YV9pbnN0YWxsYXRpb25faWRfbXM6OGNjOGEwYmJiYTg1YzVhZjA2MWYyMTBjODUwYTI4OWYlMjBBTkQlMjBtZXRhX2lzX2ludmlzaWJsZV9iOmZhbHNlJTIwQU5EJTIwJTI4bWV0YV9zZWN0aW9uX2lkX3NpOjElMjBPUiUyMG1ldGFfc2VjdGlvbl9pZF9zaTozJTI5JTIwQU5EJTIwbWV0YV9sYW5ndWFnZV9jb2RlX21zOmZyZS1GUiUyOSUyMiwlMjJxZiUyMjolMjJhdHRyX25hbWVfcyU1RTIuMCUyMG1ldGFfbmFtZV90JTVFMy4wJTIwZXpmX2RmX3RleHQlMjIsJTIycXQlMjI6JTIyZXpwdWJsaXNoJTIyLCUyMmRlZlR5cGUlMjI6JTIyZWRpc21heCUyMiwlMjJzdGFydCUyMjowLCUyMnJvd3MlMjI6MTUsJTIyc29ydCUyMjolMjIlMjIsJTIyZmwlMjI6bnVsbCwlMjJmYWNldCUyMjolMjJmYWxzZSUyMiU3RCIgZGF0YS1hbmFseXRpY3M9ImNyZWF0ZS1hbGVydC1idG4iIGRhdGEtYmVoYXQ9Im1haWxBbGVydEJ1dHRvbiI+Q3LDqWVyCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB1bmUgYWxlcnRlPC9hPjwvcD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJoaWRkZW4iIHZhbHVlPSJ7fSIvPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9ImhpZGRlbiIgdmFsdWU9InsmcXVvdDtMb2NhbGlzYXRpb24mcXVvdDs6JnF1b3Q7cGFyaXMgKDc1KSZxdW90OywmcXVvdDtUeXBlJnF1b3Q7OiZxdW90O2FjaGF0JnF1b3Q7LCZxdW90O0Rpc3RhbmNlJnF1b3Q7Om51bGwsJnF1b3Q7VHlwZSBkZSBiaWVuJnF1b3Q7OlsmcXVvdDthcHBhcnRlbWVudCZxdW90OywmcXVvdDttYWlzb24mcXVvdDtdLCZxdW90O1N1cmZhY2UgbWluJnF1b3Q7Om51bGwsJnF1b3Q7U3VyZmFjZSBtYXgmcXVvdDs6bnVsbCwmcXVvdDtTdXJmYWNlIHRlcnJhaW4gbWluJnF1b3Q7Om51bGwsJnF1b3Q7U3VyZmFjZSB0ZXJyYWluIG1heCZxdW90OzpudWxsLCZxdW90O1ByaXggbWluJnF1b3Q7Om51bGwsJnF1b3Q7UHJpeCBtYXgmcXVvdDs6bnVsbCwmcXVvdDtQaVx1MDBlOGNlcyZxdW90OzpudWxsLCZxdW90O1BhcmtpbmcgXC8gZ2FyYWdlIFwvIGJveCZxdW90OzpmYWxzZSwmcXVvdDtBc2NlbnNldXImcXVvdDs6ZmFsc2UsJnF1b3Q7U291cy1zb2wgXC8gY2F2ZSZxdW90OzpmYWxzZSwmcXVvdDtQaXNjaW5lJnF1b3Q7OmZhbHNlLCZxdW90O0FjY1x1MDBlOHMgaGFuZGljYXBcdTAwZTlzJnF1b3Q7OmZhbHNlLCZxdW90O0JhbGNvbiBcLyB0ZXJyYXNzZSZxdW90OzpmYWxzZSwmcXVvdDtDbGltYXRpc2F0aW9uJnF1b3Q7OmZhbHNlLCZxdW90O1RlcnJhaW4gXC8gamFyZGluJnF1b3Q7OmZhbHNlLCZxdW90O05ldWYgdW5pcXVlbWVudCZxdW90OzpmYWxzZSwmcXVvdDtWZW5kdSBsb3VcdTAwZTkmcXVvdDs6ZmFsc2UsJnF1b3Q7Q2hhbWJyZXMmcXVvdDs6bnVsbCwmcXVvdDtSXHUwMGU5Zlx1MDBlOXJlbmNlJnF1b3Q7Om51bGx9Ii8+CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAKCiAgICAgICAgICAgICAgICA8bWFpbiBjbGFzcz0iQ29udGVudC1tYWluIHNlYXJjaC1wYWdlIiByb2xlPSJtYWluIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aDEgY2xhc3M9IlNlYXJjaFNvcnQtdGl0cmUiPkFjaGF0IGltbW9iaWxpZXIgUGFyaXMgKDc1KTwvaDE+CiAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9IlNlYXJjaFNvcnQiIGRhdGEtd2lkZ2V0PSJNaW5pZnlNb2JpbGUiIGRhdGEtd2lkZ2V0LXRpdGxlPSJUcmllciIgZGF0YS13aWRnZXQtc3RhdGU9ImNsb3NlIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxoMiBjbGFzcz0iU2VhcmNoU29ydC10b3RhbCI+OTYgcsOpc3VsdGF0cyA8L2gyPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9IlNlYXJjaFNvcnQtaW5uZXIiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJTZWFyY2hTb3J0LWxhYmVsIj5UcmllciBwYXIgOjwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBkYXRhLWJlaGF0PSJmaWx0cmVQcml4IiBocmVmPSJodHRwczovL2ZyLmZvbmNpYS5jb20vYWNoYXQvcGFyaXMtNzUvYXBwYXJ0ZW1lbnQtLW1haXNvbi8ocGFyYW1zKS9vbi8odHJpKS9wcml4LyhvcmRyZSkvZGVzYyIgY2xhc3M9IlNlYXJjaFNvcnQtb3B0aW9uIFNlYXJjaFNvcnQtb3B0aW9uLS11cCI+UHJpeCA8c3BhbgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzcz0iU2VhcmNoU29ydC1vcHRpb24tZGV0YWlsIj5kdSBwbHVzIGdyYW5kIGF1IHBsdXMgcGV0aXQ8L3NwYW4+PC9hPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGRhdGEtYmVoYXQ9ImZpbHRyZVN1cmZhY2UiIGhyZWY9Imh0dHBzOi8vZnIuZm9uY2lhLmNvbS9hY2hhdC9wYXJpcy03NS9hcHBhcnRlbWVudC0tbWFpc29uLyhwYXJhbXMpL29uLyh0cmkpL3N1cmZhY2UvKG9yZHJlKS9kZXNjIiBjbGFzcz0iU2VhcmNoU29ydC1vcHRpb24gU2VhcmNoU29ydC1vcHRpb24tLXVwIj5TdXJmYWNlCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iU2VhcmNoU29ydC1vcHRpb24tZGV0YWlsIj5kdSBwbHVzIHBldGl0IGF1IHBsdXMgZ3JhbmQ8L3NwYW4+PC9hPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGRhdGEtYmVoYXQ9ImZpbHRyZVBpZWNlcyIgaHJlZj0iaHR0cHM6Ly9mci5mb25jaWEuY29tL2FjaGF0L3BhcmlzLTc1L2FwcGFydGVtZW50LS1tYWlzb24vKHBhcmFtcykvb24vKHRyaSkvcGllY2VzLyhvcmRyZSkvZGVzYyIgY2xhc3M9IlNlYXJjaFNvcnQtb3B0aW9uIFNlYXJjaFNvcnQtb3B0aW9uLS11cCI+Tm9tYnJlCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkZSBwacOoY2VzIDxzcGFuIGNsYXNzPSJTZWFyY2hTb3J0LW9wdGlvbi1kZXRhaWwiPmR1IHBsdXMgcGV0aXQgYXUgcGx1cyBncmFuZDwvc3Bhbj48L2E+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJBamF4Q29udGFpbmVyIiBkYXRhLWNvbnRlbnQ9InNlYXJjaF9yZXN1bHRzX2NvbnRhaW5lciI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAKCiAgICAKICAgIAogICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAKPGFydGljbGUgY2xhc3M9IlRlYXNlck9mZmVyICI+CiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iaGlkZGVuIiBkYXRhLXJlZmVyZW5jZT0iMTM3NDgxMyI+Jm5ic3A7PC9zcGFuPgoKICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iaGlkZGVuIiBkYXRhLW1hbmRhdD0iU2ltcGxlIj48L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iaGlkZGVuIiBkYXRhLWNyZWF0aW9uPSIyMDIwMDEwMiI+PC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iaGlkZGVuIiBkYXRhLXByaXg9IjkzMDAwMDAiPjwvc3Bhbj4KICAgICAgICAKICAgIDxhIGhyZWY9Ii9hY2hhdC9wYXJpcy03NTAxNi9hcHBhcnRlbWVudC8xMzc0ODEzLmh0bSIgY2xhc3M9IlRlYXNlck9mZmVyLWlsbCIgYXJpYS1oaWRkZW49InRydWUiIHRhYmluZGV4PSItMSIgc3R5bGU9ImJhY2tncm91bmQtaW1hZ2U6IHVybCgnaHR0cDovL3Bob3Rvcy5mci5mb25jaWEuY29tL21pbmljcC82NDAvNDgwL3Bob3Rvcy8xMzc0LzgxMy8xMzc0ODEzL2dyYW5kLzEzNzQ4MTNfMjYxMjI4OTZlNTZlMDMzOGNiZDM0MWZmMjAyODFiNWQ1ZTFjN2MyMTRkYTZiLmpwZz9kYXRlbWFqPTIwMjAtMDItMDUgMTY6MDA6MDQuNzA3JykiPgogICAgICAgIDxpbWcgc3JjPSJodHRwOi8vcGhvdG9zLmZyLmZvbmNpYS5jb20vbWluaWNwLzY0MC80ODAvcGhvdG9zLzEzNzQvODEzLzEzNzQ4MTMvZ3JhbmQvMTM3NDgxM18yNjEyMjg5NmU1NmUwMzM4Y2JkMzQxZmYyMDI4MWI1ZDVlMWM3YzIxNGRhNmIuanBnP2RhdGVtYWo9MjAyMC0wMi0wNSAxNjowMDowNC43MDciIGFsdD0iQXBwYXJ0ZW1lbnQgNiBwacOoY2VzIMOgIHZlbmRyZSIgLz4KICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iVGVhc2VyT2ZmZXItaWxsLWNvdW50Ij43PC9zcGFuPgogICAgICAgICAgICA8L2E+CgogICAgPGRpdiBjbGFzcz0iVGVhc2VyT2ZmZXItY29udGVudCI+CgogICAgICAgIAogICAgICAgIDxoMyBjbGFzcz0iVGVhc2VyT2ZmZXItdGl0bGUiPjxhIGhyZWY9Ii9hY2hhdC9wYXJpcy03NTAxNi9hcHBhcnRlbWVudC8xMzc0ODEzLmh0bSI+QXBwYXJ0ZW1lbnQgNiBwacOoY2VzIMOgIHZlbmRyZTwvYT48L2gzPgogICAgICAgIDxwIGNsYXNzPSJUZWFzZXJPZmZlci1mYXYiPgogICAgICAgICAgICA8YnV0dG9uIGNsYXNzPSJGYXZCdG4gRmF2QnRuLS1pbmFjdGl2ZSIgYXJpYS1sYWJlbD0iQWpvdXRlciBhdXggZmF2b3JpcyI+CiAgICAgICAgICAgICAgICA8c3ZnIGNsYXNzPSJpY29uIiBzdHlsZT0id2lkdGg6MTVweDtoZWlnaHQ6MTVweCIgYXJpYS1oaWRkZW49InRydWUiPjx1c2UgeGxpbms6aHJlZj0iL2J1bmRsZXMvZm9uY2lhaW50ZXJuZXQvc3ZnL2ljb25zLnN2ZyNJY29uLS1zdGFyMiI+PC91c2U+PC9zdmc+CiAgICAgICAgICAgIDwvYnV0dG9uPgogICAgICAgIDwvcD4KICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0iVGVhc2VyT2ZmZXItbG9jIj48c3ZnIGNsYXNzPSJpY29uIiBzdHlsZT0id2lkdGg6MTZweDtoZWlnaHQ6MTZweCIgYXJpYS1oaWRkZW49InRydWUiPjx1c2UgeGxpbms6aHJlZj0iL2J1bmRsZXMvZm9uY2lhaW50ZXJuZXQvc3ZnL2ljb25zLnN2ZyNJY29uLS1wb2ludGVyMyI+PC91c2U+PC9zdmc+UGFyaXMgKDc1MDE2KTwvcD4KICAgICAgICAKICAgICAgICA8cCBjbGFzcz0iVGVhc2VyT2ZmZXItcHJpY2UiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHN0cm9uZyBjbGFzcz0iVGVhc2VyT2ZmZXItcHJpY2UtbnVtIiBkYXRhLWJlaGF0PSJwcml4VmVudGVEZXNCaWVucyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDkmbmJzcDszMDAmbmJzcDswMDAmbmJzcDvigqwKICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iVGVhc2VyT2ZmZXItcHJpY2UtbWVudGlvbnMiPkhvbm9yYWlyZXMgZCdhZ2VuY2Ugw6AgbGEgY2hhcmdlIGR1IHZlbmRldXI8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9zdHJvbmc+CiAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIDwvcD4KCiAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9IlRlYXNlck9mZmVyLWRlc2NyaXB0aW9uIj4KICAgICAgICAgICAgICAgIFFVQVJUSUVSIEFMTUEKRm9uY2lhIHByb3Bvc2UgdW4gNiBwacOoY2VzIGRhbnMgdW4gYmVsIGltbWV1YmxlIEhhdXNzbWFubmllbiBzaXR1w6kgYXUgM8OobWUgw6l0YWdlIGF2ZWMgYXNjZW5zZXVyLi4uCiAgICAgICAgICAgIDwvcD4KICAgICAgICAKICAgICAgICA8ZGl2IGNsYXNzPSJNaW5pRGF0YSBNaW5pRGF0YS0tZmxleCI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9Ik1pbmlEYXRhLXJvdyBNaW5pRGF0YS1yb3ctLWJnIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9Ik1pbmlEYXRhLWl0ZW0iIGRhdGEtYmVoYXQ9InN1cmZhY2VEZXNCaWVucyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAzMjAgbTxzdXA+Mjwvc3VwPgogICAgICAgICAgICAgICAgICAgICAgICA8L3A+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0iTWluaURhdGEtaXRlbSIgZGF0YS1iZWhhdD0ibmJQaWVjZXNEZXNCaWVucyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA2IHBpw6hjZXMgICAgICAgICAgICAgICAgICAgICAgICA8L3A+CiAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9Ik1pbmlEYXRhLWl0ZW0iIGRhdGEtYmVoYXQ9Im5iQ2hhbWJyZXNEZXNCaWVucyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA0IGNoYW1icmVzICAgICAgICAgICAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIAogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CgogICAgICAgIAogICAgICAgIDxwIGNsYXNzPSJUZWFzZXJPZmZlci1iYXJlbWUiPgogICAgICAgICAgICA8YSBocmVmPSJodHRwOi8vYWdlbmNlLmZvbmNpYS5jb20vY291cmJldm9pZS05MjQwMC9hZ2VuY2UtaW1tb2JpbGllcmUvZm9uY2lhLXRyYW5zYWN0aW9uLWNvdXJiZXZvaWUtMTAzMSIgcmVsPSJub2ZvbGxvdyIgdGFyZ2V0PSJfYmxhbmsiPlZvaXIgbGUgYmFyw6htZSBkZSBsJ2FnZW5jZTwvYT4KICAgICAgICA8L3A+CiAgICA8L2Rpdj4KCiAgICAKPC9hcnRpY2xlPgogICAgCgogICAgCiAgICAKICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgCjxhcnRpY2xlIGNsYXNzPSJUZWFzZXJPZmZlciAiPgogICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImhpZGRlbiIgZGF0YS1yZWZlcmVuY2U9IjEzODA2OTYiPiZuYnNwOzwvc3Bhbj4KCiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImhpZGRlbiIgZGF0YS1tYW5kYXQ9IlNpbXBsZSI+PC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImhpZGRlbiIgZGF0YS1jcmVhdGlvbj0iMjAyMDAxMjAiPjwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImhpZGRlbiIgZGF0YS1wcml4PSIxMDQ4MDAwIj48L3NwYW4+CiAgICAgICAgCiAgICA8YSBocmVmPSIvYWNoYXQvcGFyaXMtNzUwMDgvYXBwYXJ0ZW1lbnQvMTM4MDY5Ni5odG0iIGNsYXNzPSJUZWFzZXJPZmZlci1pbGwiIGFyaWEtaGlkZGVuPSJ0cnVlIiB0YWJpbmRleD0iLTEiIHN0eWxlPSJiYWNrZ3JvdW5kLWltYWdlOiB1cmwoJ2h0dHA6Ly9waG90b3MuZnIuZm9uY2lhLmNvbS9taW5pY3AvNjQwLzQ4MC9waG90b3MvMTM4MC82OTYvMTM4MDY5Ni9ncmFuZC8xMzgwNjk2X2UxOWY5MDgwNGY3MmFjOTQ1YzFmYjE0MGE0NjYyNzJkNWUxNjNjMjMwMzJmNS5qcGc/ZGF0ZW1haj0yMDIwLTAzLTA5IDE3OjA1OjQ4LjU5MicpIj4KICAgICAgICA8aW1nIHNyYz0iaHR0cDovL3Bob3Rvcy5mci5mb25jaWEuY29tL21pbmljcC82NDAvNDgwL3Bob3Rvcy8xMzgwLzY5Ni8xMzgwNjk2L2dyYW5kLzEzODA2OTZfZTE5ZjkwODA0ZjcyYWM5NDVjMWZiMTQwYTQ2NjI3MmQ1ZTE2M2MyMzAzMmY1LmpwZz9kYXRlbWFqPTIwMjAtMDMtMDkgMTc6MDU6NDguNTkyIiBhbHQ9IkFwcGFydGVtZW50IDQgcGnDqGNlcyDDoCB2ZW5kcmUiIC8+CiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9IlRlYXNlck9mZmVyLWlsbC1jb3VudCI+MTQ8L3NwYW4+CiAgICAgICAgICAgIDwvYT4KCiAgICA8ZGl2IGNsYXNzPSJUZWFzZXJPZmZlci1jb250ZW50Ij4KCiAgICAgICAgCiAgICAgICAgPGgzIGNsYXNzPSJUZWFzZXJPZmZlci10aXRsZSI+PGEgaHJlZj0iL2FjaGF0L3BhcmlzLTc1MDA4L2FwcGFydGVtZW50LzEzODA2OTYuaHRtIj5BcHBhcnRlbWVudCA0IHBpw6hjZXMgw6AgdmVuZHJlPC9hPjwvaDM+CiAgICAgICAgPHAgY2xhc3M9IlRlYXNlck9mZmVyLWZhdiI+CiAgICAgICAgICAgIDxidXR0b24gY2xhc3M9IkZhdkJ0biBGYXZCdG4tLWluYWN0aXZlIiBhcmlhLWxhYmVsPSJBam91dGVyIGF1eCBmYXZvcmlzIj4KICAgICAgICAgICAgICAgIDxzdmcgY2xhc3M9Imljb24iIHN0eWxlPSJ3aWR0aDoxNXB4O2hlaWdodDoxNXB4IiBhcmlhLWhpZGRlbj0idHJ1ZSI+PHVzZSB4bGluazpocmVmPSIvYnVuZGxlcy9mb25jaWFpbnRlcm5ldC9zdmcvaWNvbnMuc3ZnI0ljb24tLXN0YXIyIj48L3VzZT48L3N2Zz4KICAgICAgICAgICAgPC9idXR0b24+CiAgICAgICAgPC9wPgogICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJUZWFzZXJPZmZlci1sb2MiPjxzdmcgY2xhc3M9Imljb24iIHN0eWxlPSJ3aWR0aDoxNnB4O2hlaWdodDoxNnB4IiBhcmlhLWhpZGRlbj0idHJ1ZSI+PHVzZSB4bGluazpocmVmPSIvYnVuZGxlcy9mb25jaWFpbnRlcm5ldC9zdmcvaWNvbnMuc3ZnI0ljb24tLXBvaW50ZXIzIj48L3VzZT48L3N2Zz5QYXJpcyAoNzUwMDgpPC9wPgogICAgICAgIAogICAgICAgIDxwIGNsYXNzPSJUZWFzZXJPZmZlci1wcmljZSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3Ryb25nIGNsYXNzPSJUZWFzZXJPZmZlci1wcmljZS1udW0iIGRhdGEtYmVoYXQ9InByaXhWZW50ZURlc0JpZW5zIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgMSZuYnNwOzA0OCZuYnNwOzAwMCZuYnNwO+KCrAogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJUZWFzZXJPZmZlci1wcmljZS1tZW50aW9ucyI+SG9ub3JhaXJlcyBkJ2FnZW5jZSDDoCBsYSBjaGFyZ2UgZHUgdmVuZGV1cjwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3N0cm9uZz4KICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgPC9wPgoKICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0iVGVhc2VyT2ZmZXItZGVzY3JpcHRpb24iPgogICAgICAgICAgICAgICAgUVVBUlRJRVI6IApTQUlOVC1QSElMSVBQRSBEVSBST1VMRQpGT05DSUEsIHZvdXMgcHJvcG9zZSB1biBtYWduaWZpcXVlIDRwacOoY2VzIGF1IDFlciDDqXRhZ2Ugc2FucyBhc2NlbnNldXIuLi4KICAgICAgICAgICAgPC9wPgogICAgICAgIAogICAgICAgIDxkaXYgY2xhc3M9Ik1pbmlEYXRhIE1pbmlEYXRhLS1mbGV4Ij4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iTWluaURhdGEtcm93IE1pbmlEYXRhLXJvdy0tYmciPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0iTWluaURhdGEtaXRlbSIgZGF0YS1iZWhhdD0ic3VyZmFjZURlc0JpZW5zIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDc1IG08c3VwPjI8L3N1cD4KICAgICAgICAgICAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9Ik1pbmlEYXRhLWl0ZW0iIGRhdGEtYmVoYXQ9Im5iUGllY2VzRGVzQmllbnMiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgNCBwacOoY2VzICAgICAgICAgICAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJNaW5pRGF0YS1pdGVtIiBkYXRhLWJlaGF0PSJuYkNoYW1icmVzRGVzQmllbnMiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgMiBjaGFtYnJlcyAgICAgICAgICAgICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAKICAgICAgICA8cCBjbGFzcz0iVGVhc2VyT2ZmZXItYmFyZW1lIj4KICAgICAgICAgICAgPGEgaHJlZj0iaHR0cDovL2FnZW5jZS5mb25jaWEuY29tL2NvdXJiZXZvaWUtOTI0MDAvYWdlbmNlLWltbW9iaWxpZXJlL2ZvbmNpYS10cmFuc2FjdGlvbi1jb3VyYmV2b2llLTEwMzEiIHJlbD0ibm9mb2xsb3ciIHRhcmdldD0iX2JsYW5rIj5Wb2lyIGxlIGJhcsOobWUgZGUgbCdhZ2VuY2U8L2E+CiAgICAgICAgPC9wPgogICAgPC9kaXY+CgogICAgCjwvYXJ0aWNsZT4KICAgIAoKICAgIAogICAgCiAgICAKCjxhcnRpY2xlIGNsYXNzPSJUZWFzZXJPZmZlciAiPgogICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImhpZGRlbiIgZGF0YS1yZWZlcmVuY2U9Im5fbzYzMTEiPiZuYnNwOzwvc3Bhbj4KCiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImhpZGRlbiIgZGF0YS1tYW5kYXQ9IiI+PC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iaGlkZGVuIiBkYXRhLXByaXg9IjAiPjwvc3Bhbj4KICAgICAgICAKICAgIDxhIGhyZWY9Ii9hY2hhdC9wYXJpcy03NTAxNC9wcm9ncmFtbWUtbmV1Zi9uX282MzExLmh0bSIgY2xhc3M9IlRlYXNlck9mZmVyLWlsbCIgYXJpYS1oaWRkZW49InRydWUiIHRhYmluZGV4PSItMSIgc3R5bGU9ImJhY2tncm91bmQtaW1hZ2U6IHVybCgnaHR0cHM6Ly93d3cyLmxlZW1vLmZyL3Zhci9jYWNoZS9saWlwL2RvY3VtZW50X3RodW1ibmFpbF9sYXJnZS9odHRwLS0tbWVkaWEubGVlbW8uZnI6ODA0Ny9iMmU5NTI2OWZhMzQ3NTM3ZTg4OThkOWVjODliZGRhZC5wbmcnKSI+CiAgICAgICAgPGltZyBzcmM9Imh0dHBzOi8vd3d3Mi5sZWVtby5mci92YXIvY2FjaGUvbGlpcC9kb2N1bWVudF90aHVtYm5haWxfbGFyZ2UvaHR0cC0tLW1lZGlhLmxlZW1vLmZyOjgwNDcvYjJlOTUyNjlmYTM0NzUzN2U4ODk4ZDllYzg5YmRkYWQucG5nIiBhbHQ9IlByb2dyYW1tZSBuZXVmIiAvPgogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJUZWFzZXJPZmZlci1pbGwtY291bnQiPjQ8L3NwYW4+CiAgICAgICAgICAgIDwvYT4KCiAgICA8ZGl2IGNsYXNzPSJUZWFzZXJPZmZlci1jb250ZW50Ij4KCiAgICAgICAgCiAgICAgICAgPGgzIGNsYXNzPSJUZWFzZXJPZmZlci10aXRsZSI+PGEgaHJlZj0iL2FjaGF0L3BhcmlzLTc1MDE0L3Byb2dyYW1tZS1uZXVmL25fbzYzMTEuaHRtIj5Qcm9ncmFtbWUgbmV1ZjwvYT48L2gzPgogICAgICAgIDxwIGNsYXNzPSJUZWFzZXJPZmZlci1mYXYiPgogICAgICAgICAgICA8YnV0dG9uIGNsYXNzPSJGYXZCdG4gRmF2QnRuLS1pbmFjdGl2ZSIgYXJpYS1sYWJlbD0iQWpvdXRlciBhdXggZmF2b3JpcyI+CiAgICAgICAgICAgICAgICA8c3ZnIGNsYXNzPSJpY29uIiBzdHlsZT0id2lkdGg6MTVweDtoZWlnaHQ6MTVweCIgYXJpYS1oaWRkZW49InRydWUiPjx1c2UgeGxpbms6aHJlZj0iL2J1bmRsZXMvZm9uY2lhaW50ZXJuZXQvc3ZnL2ljb25zLnN2ZyNJY29uLS1zdGFyMiI+PC91c2U+PC9zdmc+CiAgICAgICAgICAgIDwvYnV0dG9uPgogICAgICAgIDwvcD4KICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0iVGVhc2VyT2ZmZXItbG9jIj48c3ZnIGNsYXNzPSJpY29uIiBzdHlsZT0id2lkdGg6MTZweDtoZWlnaHQ6MTZweCIgYXJpYS1oaWRkZW49InRydWUiPjx1c2UgeGxpbms6aHJlZj0iL2J1bmRsZXMvZm9uY2lhaW50ZXJuZXQvc3ZnL2ljb25zLnN2ZyNJY29uLS1wb2ludGVyMyI+PC91c2U+PC9zdmc+UGFyaXMgKDc1MDE0KTwvcD4KICAgICAgICAKICAgICAgICA8cCBjbGFzcz0iVGVhc2VyT2ZmZXItcHJpY2UiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAmQWdyYXZlOyBwYXJ0aXIgZGUKICAgICAgICAgICAgICAgICAgICA8c3Ryb25nIGNsYXNzPSJUZWFzZXJPZmZlci1wcmljZS1udW0gIFRlYXNlck9mZmVyLW5ldWYiIGRhdGEtYmVoYXQ9InByaXhWZW50ZURlc0JpZW5zIj4KICAgICAgICAgICAgICAgICAgICAgICAgMiZuYnNwOzI1MCZuYnNwOzAwMCZuYnNwO+KCrAogICAgICAgICAgICAgICAgICAgIDwvc3Ryb25nPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJUZWFzZXJPZmZlci1wcmljZS1tZW50aW9ucyI+SG9ub3JhaXJlcyBkJ2FnZW5jZSDDoCBsYSBjaGFyZ2UgZHUgdmVuZGV1cjwvc3Bhbj4KICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgPC9wPgoKICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0iVGVhc2VyT2ZmZXItZGVzY3JpcHRpb24iPgogICAgICAgICAgICAgICAgQXV0aGVudGljaXTDqSwgZXhjbHVzaXZpdMOpIGV0IGFydCBkZSB2aXZyZSwgcG91ciBjZXR0ZSBhZHJlc3NlIHLDqXNvbHVtZW50IHBhcmlzaWVubmUsIG/DuSBsJiMwMzk7b24gc2VudCBwbGVpbmVtZW50Li4uCiAgICAgICAgICAgIDwvcD4KICAgICAgICAKICAgICAgICA8ZGl2IGNsYXNzPSJNaW5pRGF0YSBNaW5pRGF0YS0tZmxleCI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9Ik1pbmlEYXRhLXJvdyBNaW5pRGF0YS1yb3ctLWJnIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9Ik1pbmlEYXRhLWl0ZW0iIGRhdGEtYmVoYXQ9Im5iUGllY2VzRGVzQmllbnMiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZHUgMyBwacOoY2VzICAgICAgICAgICAgICAgICAgICAgICAgICAgIGF1IDUgcGnDqGNlcyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJNaW5pRGF0YS1pdGVtIiBkYXRhLWJlaGF0PSJkYXRlTGl2cmFpc29uRGVzQmllbnMiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBsaXZyw6kgbGUgMjxzdXA+w6htZTwvc3VwPiB0cmltZXN0cmUgMjAyMAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIAogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CgogICAgICAgIAogICAgICAgIDxwIGNsYXNzPSJUZWFzZXJPZmZlci1iYXJlbWUiPgogICAgICAgICAgICA8YSBocmVmPSJodHRwOi8vYWdlbmNlLmZvbmNpYS5jb20vcGFyaXMtNzUwMDYvYWdlbmNlLWltbW9iaWxpZXJlL2ZvbmNpYS10cmFuc2FjdGlvbi1wYXJpcy1tb250cGFybmFzc2UtMTEyOCIgcmVsPSJub2ZvbGxvdyIgdGFyZ2V0PSJfYmxhbmsiPlZvaXIgbGUgYmFyw6htZSBkZSBsJ2FnZW5jZTwvYT4KICAgICAgICA8L3A+CiAgICA8L2Rpdj4KCiAgICAKPC9hcnRpY2xlPgogICAgCgogICAgCiAgICAKICAgIAogICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIAo8YXJ0aWNsZSBjbGFzcz0iVGVhc2VyT2ZmZXIgIj4KICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJoaWRkZW4iIGRhdGEtcmVmZXJlbmNlPSIxMzI5MTM0Ij4mbmJzcDs8L3NwYW4+CgogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJoaWRkZW4iIGRhdGEtbWFuZGF0PSJTaW1wbGUiPjwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJoaWRkZW4iIGRhdGEtY3JlYXRpb249IjIwMTkwMTIyIj48L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJoaWRkZW4iIGRhdGEtcHJpeD0iMTcwMDAwIj48L3NwYW4+CiAgICAgICAgCiAgICA8YSBocmVmPSIvYWNoYXQvcGFyaXMtNzUwMDYvYXBwYXJ0ZW1lbnQvMTMyOTEzNC5odG0iIGNsYXNzPSJUZWFzZXJPZmZlci1pbGwiIGFyaWEtaGlkZGVuPSJ0cnVlIiB0YWJpbmRleD0iLTEiIHN0eWxlPSJiYWNrZ3JvdW5kLWltYWdlOiB1cmwoJ2h0dHA6Ly9waG90b3MuZnIuZm9uY2lhLmNvbS9taW5pY3AvNjQwLzQ4MC9waG90b3MvMTMyOS8xMzQvMTMyOTEzNC9ncmFuZC8xMzI5MTM0X2FkZjdhOWJlNjE3YTIzNjlkZGI5MDBlY2IyMDIyNDljNWNlNTkwMTkxNTEwNC5qcGc/ZGF0ZW1haj0yMDIwLTAxLTMwIDE4OjA2OjMwLjg2NycpIj4KICAgICAgICA8aW1nIHNyYz0iaHR0cDovL3Bob3Rvcy5mci5mb25jaWEuY29tL21pbmljcC82NDAvNDgwL3Bob3Rvcy8xMzI5LzEzNC8xMzI5MTM0L2dyYW5kLzEzMjkxMzRfYWRmN2E5YmU2MTdhMjM2OWRkYjkwMGVjYjIwMjI0OWM1Y2U1OTAxOTE1MTA0LmpwZz9kYXRlbWFqPTIwMjAtMDEtMzAgMTg6MDY6MzAuODY3IiBhbHQ9IkFwcGFydGVtZW50IDEgcGnDqGNlIMOgIHZlbmRyZSIgLz4KICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iVGVhc2VyT2ZmZXItaWxsLWNvdW50Ij40PC9zcGFuPgogICAgICAgICAgICA8L2E+CgogICAgPGRpdiBjbGFzcz0iVGVhc2VyT2ZmZXItY29udGVudCI+CgogICAgICAgIAogICAgICAgIDxoMyBjbGFzcz0iVGVhc2VyT2ZmZXItdGl0bGUiPjxhIGhyZWY9Ii9hY2hhdC9wYXJpcy03NTAwNi9hcHBhcnRlbWVudC8xMzI5MTM0Lmh0bSI+QXBwYXJ0ZW1lbnQgMSBwacOoY2Ugw6AgdmVuZHJlPC9hPjwvaDM+CiAgICAgICAgPHAgY2xhc3M9IlRlYXNlck9mZmVyLWZhdiI+CiAgICAgICAgICAgIDxidXR0b24gY2xhc3M9IkZhdkJ0biBGYXZCdG4tLWluYWN0aXZlIiBhcmlhLWxhYmVsPSJBam91dGVyIGF1eCBmYXZvcmlzIj4KICAgICAgICAgICAgICAgIDxzdmcgY2xhc3M9Imljb24iIHN0eWxlPSJ3aWR0aDoxNXB4O2hlaWdodDoxNXB4IiBhcmlhLWhpZGRlbj0idHJ1ZSI+PHVzZSB4bGluazpocmVmPSIvYnVuZGxlcy9mb25jaWFpbnRlcm5ldC9zdmcvaWNvbnMuc3ZnI0ljb24tLXN0YXIyIj48L3VzZT48L3N2Zz4KICAgICAgICAgICAgPC9idXR0b24+CiAgICAgICAgPC9wPgogICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJUZWFzZXJPZmZlci1sb2MiPjxzdmcgY2xhc3M9Imljb24iIHN0eWxlPSJ3aWR0aDoxNnB4O2hlaWdodDoxNnB4IiBhcmlhLWhpZGRlbj0idHJ1ZSI+PHVzZSB4bGluazpocmVmPSIvYnVuZGxlcy9mb25jaWFpbnRlcm5ldC9zdmcvaWNvbnMuc3ZnI0ljb24tLXBvaW50ZXIzIj48L3VzZT48L3N2Zz5QYXJpcyAoNzUwMDYpPC9wPgogICAgICAgIAogICAgICAgIDxwIGNsYXNzPSJUZWFzZXJPZmZlci1wcmljZSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3Ryb25nIGNsYXNzPSJUZWFzZXJPZmZlci1wcmljZS1udW0iIGRhdGEtYmVoYXQ9InByaXhWZW50ZURlc0JpZW5zIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgMTcwJm5ic3A7MDAwJm5ic3A74oKsCiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9IlRlYXNlck9mZmVyLXByaWNlLW1lbnRpb25zIj5Ib25vcmFpcmVzIGQnYWdlbmNlIMOgIGxhIGNoYXJnZSBkdSB2ZW5kZXVyPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvc3Ryb25nPgogICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICA8L3A+CgogICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJUZWFzZXJPZmZlci1kZXNjcmlwdGlvbiI+CiAgICAgICAgICAgICAgICBQQVJJUyBWSSAtIFZBVklOIC0gQ0hBTUJSRS4KUnVlIEJyw6lhLCDDoCBwcm94aW1pdMOpIGRlIGxhIHBsYWNlIFZhdmluLiBEYW5zIHVuIGJlbCBpbW1ldWJsZSBlbiBwaWVycmUgZGUuLi4KICAgICAgICAgICAgPC9wPgogICAgICAgIAogICAgICAgIDxkaXYgY2xhc3M9Ik1pbmlEYXRhIE1pbmlEYXRhLS1mbGV4Ij4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iTWluaURhdGEtcm93IE1pbmlEYXRhLXJvdy0tYmciPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0iTWluaURhdGEtaXRlbSIgZGF0YS1iZWhhdD0ic3VyZmFjZURlc0JpZW5zIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDEwLjY3IG08c3VwPjI8L3N1cD4KICAgICAgICAgICAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9Ik1pbmlEYXRhLWl0ZW0iIGRhdGEtYmVoYXQ9Im5iUGllY2VzRGVzQmllbnMiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgMSBwacOoY2UgICAgICAgICAgICAgICAgICAgICAgICA8L3A+CiAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9Ik1pbmlEYXRhLWl0ZW0iIGRhdGEtYmVoYXQ9Im5iQ2hhbWJyZXNEZXNCaWVucyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAxIGNoYW1icmUgICAgICAgICAgICAgICAgICAgICAgICA8L3A+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgCiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgCiAgICAgICAgPHAgY2xhc3M9IlRlYXNlck9mZmVyLWJhcmVtZSI+CiAgICAgICAgICAgIDxhIGhyZWY9Imh0dHA6Ly9hZ2VuY2UuZm9uY2lhLmNvbS9wYXJpcy03NTAwNi9hZ2VuY2UtaW1tb2JpbGllcmUvZm9uY2lhLXRyYW5zYWN0aW9uLXBhcmlzLW1vbnRwYXJuYXNzZS0xMTI4IiByZWw9Im5vZm9sbG93IiB0YXJnZXQ9Il9ibGFuayI+Vm9pciBsZSBiYXLDqG1lIGRlIGwnYWdlbmNlPC9hPgogICAgICAgIDwvcD4KICAgIDwvZGl2PgoKICAgIAo8L2FydGljbGU+CiAgICAKCiAgICAKICAgIAogICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAKPGFydGljbGUgY2xhc3M9IlRlYXNlck9mZmVyICI+CiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iaGlkZGVuIiBkYXRhLXJlZmVyZW5jZT0iMTM1NDY2NiI+Jm5ic3A7PC9zcGFuPgoKICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iaGlkZGVuIiBkYXRhLW1hbmRhdD0iU2ltcGxlIj48L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iaGlkZGVuIiBkYXRhLWNyZWF0aW9uPSIyMDE5MDExOCI+PC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iaGlkZGVuIiBkYXRhLXByaXg9IjU1MDAwMCI+PC9zcGFuPgogICAgICAgIAogICAgPGEgaHJlZj0iL2FjaGF0L3BhcmlzLTc1MDA2L2FwcGFydGVtZW50LzEzNTQ2NjYuaHRtIiBjbGFzcz0iVGVhc2VyT2ZmZXItaWxsIiBhcmlhLWhpZGRlbj0idHJ1ZSIgdGFiaW5kZXg9Ii0xIiBzdHlsZT0iYmFja2dyb3VuZC1pbWFnZTogdXJsKCdodHRwOi8vcGhvdG9zLmZyLmZvbmNpYS5jb20vbWluaWNwLzY0MC80ODAvcGhvdG9zLzEzNTQvNjY2LzEzNTQ2NjYvZ3JhbmQvMTM1NDY2Nl82NzY4YWYzNTFmMTUyNDJmOGFmZDY5NDYxZjA3ODVjZDVkODI2NGM2ZTQyYWUuanBnP2RhdGVtYWo9MjAxOS0xMC0wMyAxMToyMzoyMC4wMDEnKSI+CiAgICAgICAgPGltZyBzcmM9Imh0dHA6Ly9waG90b3MuZnIuZm9uY2lhLmNvbS9taW5pY3AvNjQwLzQ4MC9waG90b3MvMTM1NC82NjYvMTM1NDY2Ni9ncmFuZC8xMzU0NjY2XzY3NjhhZjM1MWYxNTI0MmY4YWZkNjk0NjFmMDc4NWNkNWQ4MjY0YzZlNDJhZS5qcGc/ZGF0ZW1haj0yMDE5LTEwLTAzIDExOjIzOjIwLjAwMSIgYWx0PSJBcHBhcnRlbWVudCAyIHBpw6hjZXMgw6AgdmVuZHJlIiAvPgogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJUZWFzZXJPZmZlci1pbGwtY291bnQiPjc8L3NwYW4+CiAgICAgICAgICAgIDwvYT4KCiAgICA8ZGl2IGNsYXNzPSJUZWFzZXJPZmZlci1jb250ZW50Ij4KCiAgICAgICAgCiAgICAgICAgPGgzIGNsYXNzPSJUZWFzZXJPZmZlci10aXRsZSI+PGEgaHJlZj0iL2FjaGF0L3BhcmlzLTc1MDA2L2FwcGFydGVtZW50LzEzNTQ2NjYuaHRtIj5BcHBhcnRlbWVudCAyIHBpw6hjZXMgw6AgdmVuZHJlPC9hPjwvaDM+CiAgICAgICAgPHAgY2xhc3M9IlRlYXNlck9mZmVyLWZhdiI+CiAgICAgICAgICAgIDxidXR0b24gY2xhc3M9IkZhdkJ0biBGYXZCdG4tLWluYWN0aXZlIiBhcmlhLWxhYmVsPSJBam91dGVyIGF1eCBmYXZvcmlzIj4KICAgICAgICAgICAgICAgIDxzdmcgY2xhc3M9Imljb24iIHN0eWxlPSJ3aWR0aDoxNXB4O2hlaWdodDoxNXB4IiBhcmlhLWhpZGRlbj0idHJ1ZSI+PHVzZSB4bGluazpocmVmPSIvYnVuZGxlcy9mb25jaWFpbnRlcm5ldC9zdmcvaWNvbnMuc3ZnI0ljb24tLXN0YXIyIj48L3VzZT48L3N2Zz4KICAgICAgICAgICAgPC9idXR0b24+CiAgICAgICAgPC9wPgogICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJUZWFzZXJPZmZlci1sb2MiPjxzdmcgY2xhc3M9Imljb24iIHN0eWxlPSJ3aWR0aDoxNnB4O2hlaWdodDoxNnB4IiBhcmlhLWhpZGRlbj0idHJ1ZSI+PHVzZSB4bGluazpocmVmPSIvYnVuZGxlcy9mb25jaWFpbnRlcm5ldC9zdmcvaWNvbnMuc3ZnI0ljb24tLXBvaW50ZXIzIj48L3VzZT48L3N2Zz5QYXJpcyAoNzUwMDYpPC9wPgogICAgICAgIAogICAgICAgIDxwIGNsYXNzPSJUZWFzZXJPZmZlci1wcmljZSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3Ryb25nIGNsYXNzPSJUZWFzZXJPZmZlci1wcmljZS1udW0iIGRhdGEtYmVoYXQ9InByaXhWZW50ZURlc0JpZW5zIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgNTUwJm5ic3A7MDAwJm5ic3A74oKsCiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9IlRlYXNlck9mZmVyLXByaWNlLW1lbnRpb25zIj5Ib25vcmFpcmVzIGQnYWdlbmNlIMOgIGxhIGNoYXJnZSBkdSB2ZW5kZXVyPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvc3Ryb25nPgogICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICA8L3A+CgogICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJUZWFzZXJPZmZlci1kZXNjcmlwdGlvbiI+CiAgICAgICAgICAgICAgICBQQVJJUyBWSSAtIFNBSU5ULVBMQUNJREUgLSAyIFBJw4hDRVMgU1VSIFRFUlJBU1NFCkRhbnMgdW4gdHLDqHMgYmVsIGltbWV1YmxlIEFydCBEw6ljbyBhdmVjIGdhcmRpZW4sIGFwcGFydGVtZW50Li4uCiAgICAgICAgICAgIDwvcD4KICAgICAgICAKICAgICAgICA8ZGl2IGNsYXNzPSJNaW5pRGF0YSBNaW5pRGF0YS0tZmxleCI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9Ik1pbmlEYXRhLXJvdyBNaW5pRGF0YS1yb3ctLWJnIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9Ik1pbmlEYXRhLWl0ZW0iIGRhdGEtYmVoYXQ9InN1cmZhY2VEZXNCaWVucyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAzOC4wMSBtPHN1cD4yPC9zdXA+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJNaW5pRGF0YS1pdGVtIiBkYXRhLWJlaGF0PSJuYlBpZWNlc0Rlc0JpZW5zIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDIgcGnDqGNlcyAgICAgICAgICAgICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0iTWluaURhdGEtaXRlbSIgZGF0YS1iZWhhdD0ibmJDaGFtYnJlc0Rlc0JpZW5zIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDEgY2hhbWJyZSAgICAgICAgICAgICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAKICAgICAgICA8cCBjbGFzcz0iVGVhc2VyT2ZmZXItYmFyZW1lIj4KICAgICAgICAgICAgPGEgaHJlZj0iaHR0cDovL2FnZW5jZS5mb25jaWEuY29tL3BhcmlzLTc1MDA2L2FnZW5jZS1pbW1vYmlsaWVyZS9mb25jaWEtdHJhbnNhY3Rpb24tcGFyaXMtbW9udHBhcm5hc3NlLTExMjgiIHJlbD0ibm9mb2xsb3ciIHRhcmdldD0iX2JsYW5rIj5Wb2lyIGxlIGJhcsOobWUgZGUgbCdhZ2VuY2U8L2E+CiAgICAgICAgPC9wPgogICAgPC9kaXY+CgogICAgCjwvYXJ0aWNsZT4KICAgIAoKICAgIAogICAgCiAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIAo8YXJ0aWNsZSBjbGFzcz0iVGVhc2VyT2ZmZXIgIj4KICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJoaWRkZW4iIGRhdGEtcmVmZXJlbmNlPSIxMzc1MTM3Ij4mbmJzcDs8L3NwYW4+CgogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJoaWRkZW4iIGRhdGEtbWFuZGF0PSJTaW1wbGUiPjwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJoaWRkZW4iIGRhdGEtY3JlYXRpb249IjIwMTkwMTA1Ij48L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJoaWRkZW4iIGRhdGEtcHJpeD0iNjgxMDAwIj48L3NwYW4+CiAgICAgICAgCiAgICA8YSBocmVmPSIvYWNoYXQvcGFyaXMtNzUwMTUvYXBwYXJ0ZW1lbnQvMTM3NTEzNy5odG0iIGNsYXNzPSJUZWFzZXJPZmZlci1pbGwiIGFyaWEtaGlkZGVuPSJ0cnVlIiB0YWJpbmRleD0iLTEiIHN0eWxlPSJiYWNrZ3JvdW5kLWltYWdlOiB1cmwoJ2h0dHA6Ly9waG90b3MuZnIuZm9uY2lhLmNvbS9taW5pY3AvNjQwLzQ4MC9waG90b3MvMTM3NS8xMzcvMTM3NTEzNy9ncmFuZC8xMzc1MTM3XzkxZDE5ZjljMzM3YzE0NzE3OWJhZWI1MmQzMDYwOWRhNWRlOTEwNTg4YjA3OS5qcGc/ZGF0ZW1haj0yMDE5LTEyLTA2IDEyOjIwOjEwLjE5MicpIj4KICAgICAgICA8aW1nIHNyYz0iaHR0cDovL3Bob3Rvcy5mci5mb25jaWEuY29tL21pbmljcC82NDAvNDgwL3Bob3Rvcy8xMzc1LzEzNy8xMzc1MTM3L2dyYW5kLzEzNzUxMzdfOTFkMTlmOWMzMzdjMTQ3MTc5YmFlYjUyZDMwNjA5ZGE1ZGU5MTA1ODhiMDc5LmpwZz9kYXRlbWFqPTIwMTktMTItMDYgMTI6MjA6MTAuMTkyIiBhbHQ9IkFwcGFydGVtZW50IDIgcGnDqGNlcyDDoCB2ZW5kcmUiIC8+CiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9IlRlYXNlck9mZmVyLWlsbC1jb3VudCI+MTwvc3Bhbj4KICAgICAgICAgICAgPC9hPgoKICAgIDxkaXYgY2xhc3M9IlRlYXNlck9mZmVyLWNvbnRlbnQiPgoKICAgICAgICAKICAgICAgICA8aDMgY2xhc3M9IlRlYXNlck9mZmVyLXRpdGxlIj48YSBocmVmPSIvYWNoYXQvcGFyaXMtNzUwMTUvYXBwYXJ0ZW1lbnQvMTM3NTEzNy5odG0iPkFwcGFydGVtZW50IDIgcGnDqGNlcyDDoCB2ZW5kcmU8L2E+PC9oMz4KICAgICAgICA8cCBjbGFzcz0iVGVhc2VyT2ZmZXItZmF2Ij4KICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz0iRmF2QnRuIEZhdkJ0bi0taW5hY3RpdmUiIGFyaWEtbGFiZWw9IkFqb3V0ZXIgYXV4IGZhdm9yaXMiPgogICAgICAgICAgICAgICAgPHN2ZyBjbGFzcz0iaWNvbiIgc3R5bGU9IndpZHRoOjE1cHg7aGVpZ2h0OjE1cHgiIGFyaWEtaGlkZGVuPSJ0cnVlIj48dXNlIHhsaW5rOmhyZWY9Ii9idW5kbGVzL2ZvbmNpYWludGVybmV0L3N2Zy9pY29ucy5zdmcjSWNvbi0tc3RhcjIiPjwvdXNlPjwvc3ZnPgogICAgICAgICAgICA8L2J1dHRvbj4KICAgICAgICA8L3A+CiAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9IlRlYXNlck9mZmVyLWxvYyI+PHN2ZyBjbGFzcz0iaWNvbiIgc3R5bGU9IndpZHRoOjE2cHg7aGVpZ2h0OjE2cHgiIGFyaWEtaGlkZGVuPSJ0cnVlIj48dXNlIHhsaW5rOmhyZWY9Ii9idW5kbGVzL2ZvbmNpYWludGVybmV0L3N2Zy9pY29ucy5zdmcjSWNvbi0tcG9pbnRlcjMiPjwvdXNlPjwvc3ZnPlBhcmlzICg3NTAxNSk8L3A+CiAgICAgICAgCiAgICAgICAgPHAgY2xhc3M9IlRlYXNlck9mZmVyLXByaWNlIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzdHJvbmcgY2xhc3M9IlRlYXNlck9mZmVyLXByaWNlLW51bSIgZGF0YS1iZWhhdD0icHJpeFZlbnRlRGVzQmllbnMiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA2ODEmbmJzcDswMDAmbmJzcDvigqwKICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iVGVhc2VyT2ZmZXItcHJpY2UtbWVudGlvbnMiPkhvbm9yYWlyZXMgZCdhZ2VuY2Ugw6AgbGEgY2hhcmdlIGR1IHZlbmRldXI8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9zdHJvbmc+CiAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIDwvcD4KCiAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9IlRlYXNlck9mZmVyLWRlc2NyaXB0aW9uIj4KICAgICAgICAgICAgICAgIFBhcmlzIDE1w6htZSwgZGFucyB1biBpbW1ldWJsZSBuZXVmIGF2ZWMgcHJlc3RhdGlvbnMgaGF1dCBkZSBnYW1tZSwgVDIgYmllbiBhZ2VuY8OpIGRlIDYwbcKyIGF2ZWMgYmFsY29uLi4uCiAgICAgICAgICAgIDwvcD4KICAgICAgICAKICAgICAgICA8ZGl2IGNsYXNzPSJNaW5pRGF0YSBNaW5pRGF0YS0tZmxleCI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9Ik1pbmlEYXRhLXJvdyBNaW5pRGF0YS1yb3ctLWJnIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9Ik1pbmlEYXRhLWl0ZW0iIGRhdGEtYmVoYXQ9InN1cmZhY2VEZXNCaWVucyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA2NyBtPHN1cD4yPC9zdXA+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJNaW5pRGF0YS1pdGVtIiBkYXRhLWJlaGF0PSJuYlBpZWNlc0Rlc0JpZW5zIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDIgcGnDqGNlcyAgICAgICAgICAgICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0iTWluaURhdGEtaXRlbSIgZGF0YS1iZWhhdD0ibmJDaGFtYnJlc0Rlc0JpZW5zIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDEgY2hhbWJyZSAgICAgICAgICAgICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJNaW5pRGF0YS1pdGVtIE1pbmlEYXRhLWl0ZW0tLWNvbXBhY3QiPgogICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJNaW5pRGF0YS1pY29uIiB0YWJpbmRleD0iMCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHN2ZyBjbGFzcz0iaWNvbiIgc3R5bGU9IndpZHRoOjE1cHg7aGVpZ2h0OjE1cHgiIGFyaWEtaGlkZGVuPSJ0cnVlIj48dXNlIHhsaW5rOmhyZWY9Ii9idW5kbGVzL2ZvbmNpYWludGVybmV0L3N2Zy9pY29ucy5zdmcjSWNvbi0tYWNjZXNzIj48L3VzZT48L3N2Zz4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iTWluaURhdGEtaWNvbkxhYmVsIj5BY2PDqHMgaGFuZGljYXDDqXM8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CgogICAgICAgIAogICAgICAgIDxwIGNsYXNzPSJUZWFzZXJPZmZlci1iYXJlbWUiPgogICAgICAgICAgICA8YSBocmVmPSJodHRwOi8vYWdlbmNlLmZvbmNpYS5jb20vcGFyaXMtNzUwMDYvYWdlbmNlLWltbW9iaWxpZXJlL2ZvbmNpYS10cmFuc2FjdGlvbi1wYXJpcy1tb250cGFybmFzc2UtMTEyOCIgcmVsPSJub2ZvbGxvdyIgdGFyZ2V0PSJfYmxhbmsiPlZvaXIgbGUgYmFyw6htZSBkZSBsJ2FnZW5jZTwvYT4KICAgICAgICA8L3A+CiAgICA8L2Rpdj4KCiAgICAKPC9hcnRpY2xlPgogICAgCgogICAgCiAgICAKICAgIAogICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIAo8YXJ0aWNsZSBjbGFzcz0iVGVhc2VyT2ZmZXIgIj4KICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJoaWRkZW4iIGRhdGEtcmVmZXJlbmNlPSIxMzc3NjY5Ij4mbmJzcDs8L3NwYW4+CgogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJoaWRkZW4iIGRhdGEtbWFuZGF0PSJTaW1wbGUiPjwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJoaWRkZW4iIGRhdGEtY3JlYXRpb249IjIwMTkwMTE3Ij48L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJoaWRkZW4iIGRhdGEtcHJpeD0iNDI2MDAwIj48L3NwYW4+CiAgICAgICAgCiAgICA8YSBocmVmPSIvYWNoYXQvcGFyaXMtNzUwMTUvYXBwYXJ0ZW1lbnQvMTM3NzY2OS5odG0iIGNsYXNzPSJUZWFzZXJPZmZlci1pbGwiIGFyaWEtaGlkZGVuPSJ0cnVlIiB0YWJpbmRleD0iLTEiIHN0eWxlPSJiYWNrZ3JvdW5kLWltYWdlOiB1cmwoJ2h0dHA6Ly9waG90b3MuZnIuZm9uY2lhLmNvbS9taW5pY3AvNjQwLzQ4MC9waG90b3MvMTM3Ny82NjkvMTM3NzY2OS9ncmFuZC8xMzc3NjY5Xzg2ZTFlZDgwNGVmN2U5YmJjMzM1NGJiN2M3N2Q2ZWZhNWRmOGFhMjYxZmE4Zi5qcGc/ZGF0ZW1haj0yMDE5LTEyLTIwIDE1OjA0OjAxLjYzMCcpIj4KICAgICAgICA8aW1nIHNyYz0iaHR0cDovL3Bob3Rvcy5mci5mb25jaWEuY29tL21pbmljcC82NDAvNDgwL3Bob3Rvcy8xMzc3LzY2OS8xMzc3NjY5L2dyYW5kLzEzNzc2NjlfODZlMWVkODA0ZWY3ZTliYmMzMzU0YmI3Yzc3ZDZlZmE1ZGY4YWEyNjFmYThmLmpwZz9kYXRlbWFqPTIwMTktMTItMjAgMTU6MDQ6MDEuNjMwIiBhbHQ9IkFwcGFydGVtZW50IDEgcGnDqGNlIMOgIHZlbmRyZSIgLz4KICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iVGVhc2VyT2ZmZXItaWxsLWNvdW50Ij4xPC9zcGFuPgogICAgICAgICAgICA8L2E+CgogICAgPGRpdiBjbGFzcz0iVGVhc2VyT2ZmZXItY29udGVudCI+CgogICAgICAgIAogICAgICAgIDxoMyBjbGFzcz0iVGVhc2VyT2ZmZXItdGl0bGUiPjxhIGhyZWY9Ii9hY2hhdC9wYXJpcy03NTAxNS9hcHBhcnRlbWVudC8xMzc3NjY5Lmh0bSI+QXBwYXJ0ZW1lbnQgMSBwacOoY2Ugw6AgdmVuZHJlPC9hPjwvaDM+CiAgICAgICAgPHAgY2xhc3M9IlRlYXNlck9mZmVyLWZhdiI+CiAgICAgICAgICAgIDxidXR0b24gY2xhc3M9IkZhdkJ0biBGYXZCdG4tLWluYWN0aXZlIiBhcmlhLWxhYmVsPSJBam91dGVyIGF1eCBmYXZvcmlzIj4KICAgICAgICAgICAgICAgIDxzdmcgY2xhc3M9Imljb24iIHN0eWxlPSJ3aWR0aDoxNXB4O2hlaWdodDoxNXB4IiBhcmlhLWhpZGRlbj0idHJ1ZSI+PHVzZSB4bGluazpocmVmPSIvYnVuZGxlcy9mb25jaWFpbnRlcm5ldC9zdmcvaWNvbnMuc3ZnI0ljb24tLXN0YXIyIj48L3VzZT48L3N2Zz4KICAgICAgICAgICAgPC9idXR0b24+CiAgICAgICAgPC9wPgogICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJUZWFzZXJPZmZlci1sb2MiPjxzdmcgY2xhc3M9Imljb24iIHN0eWxlPSJ3aWR0aDoxNnB4O2hlaWdodDoxNnB4IiBhcmlhLWhpZGRlbj0idHJ1ZSI+PHVzZSB4bGluazpocmVmPSIvYnVuZGxlcy9mb25jaWFpbnRlcm5ldC9zdmcvaWNvbnMuc3ZnI0ljb24tLXBvaW50ZXIzIj48L3VzZT48L3N2Zz5QYXJpcyAoNzUwMTUpPC9wPgogICAgICAgIAogICAgICAgIDxwIGNsYXNzPSJUZWFzZXJPZmZlci1wcmljZSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3Ryb25nIGNsYXNzPSJUZWFzZXJPZmZlci1wcmljZS1udW0iIGRhdGEtYmVoYXQ9InByaXhWZW50ZURlc0JpZW5zIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgNDI2Jm5ic3A7MDAwJm5ic3A74oKsCiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9IlRlYXNlck9mZmVyLXByaWNlLW1lbnRpb25zIj5Ib25vcmFpcmVzIGQnYWdlbmNlIMOgIGxhIGNoYXJnZSBkdSB2ZW5kZXVyPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvc3Ryb25nPgogICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICA8L3A+CgogICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJUZWFzZXJPZmZlci1kZXNjcmlwdGlvbiI+CiAgICAgICAgICAgICAgICBQYXJpcyBYVmVtZSAtIFN0dWRpbyBkZSAzMG3CsiAgYXZlYyB0ZXJyYXNzZSBkYW5zIHVuIGltbWV1YmxlIG5ldWYgKGxpdnJhaXNvbiAyMDIzKSBhdmVjIHByZXN0YXRpb25zIGhhdXQuLi4KICAgICAgICAgICAgPC9wPgogICAgICAgIAogICAgICAgIDxkaXYgY2xhc3M9Ik1pbmlEYXRhIE1pbmlEYXRhLS1mbGV4Ij4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iTWluaURhdGEtcm93IE1pbmlEYXRhLXJvdy0tYmciPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0iTWluaURhdGEtaXRlbSIgZGF0YS1iZWhhdD0ic3VyZmFjZURlc0JpZW5zIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDMwLjA0IG08c3VwPjI8L3N1cD4KICAgICAgICAgICAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9Ik1pbmlEYXRhLWl0ZW0iIGRhdGEtYmVoYXQ9Im5iUGllY2VzRGVzQmllbnMiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgMSBwacOoY2UgICAgICAgICAgICAgICAgICAgICAgICA8L3A+CiAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9Ik1pbmlEYXRhLWl0ZW0iIGRhdGEtYmVoYXQ9Im5iQ2hhbWJyZXNEZXNCaWVucyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAxIGNoYW1icmUgICAgICAgICAgICAgICAgICAgICAgICA8L3A+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0iTWluaURhdGEtaXRlbSBNaW5pRGF0YS1pdGVtLS1jb21wYWN0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iTWluaURhdGEtaWNvbiIgdGFiaW5kZXg9IjAiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzdmcgY2xhc3M9Imljb24iIHN0eWxlPSJ3aWR0aDoxNXB4O2hlaWdodDoxNXB4IiBhcmlhLWhpZGRlbj0idHJ1ZSI+PHVzZSB4bGluazpocmVmPSIvYnVuZGxlcy9mb25jaWFpbnRlcm5ldC9zdmcvaWNvbnMuc3ZnI0ljb24tLWFjY2VzcyI+PC91c2U+PC9zdmc+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9Ik1pbmlEYXRhLWljb25MYWJlbCI+QWNjw6hzIGhhbmRpY2Fww6lzPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3A+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAKICAgICAgICA8cCBjbGFzcz0iVGVhc2VyT2ZmZXItYmFyZW1lIj4KICAgICAgICAgICAgPGEgaHJlZj0iaHR0cDovL2FnZW5jZS5mb25jaWEuY29tL3BhcmlzLTc1MDA2L2FnZW5jZS1pbW1vYmlsaWVyZS9mb25jaWEtdHJhbnNhY3Rpb24tcGFyaXMtbW9udHBhcm5hc3NlLTExMjgiIHJlbD0ibm9mb2xsb3ciIHRhcmdldD0iX2JsYW5rIj5Wb2lyIGxlIGJhcsOobWUgZGUgbCdhZ2VuY2U8L2E+CiAgICAgICAgPC9wPgogICAgPC9kaXY+CgogICAgCjwvYXJ0aWNsZT4KICAgIAoKICAgIAogICAgCiAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIAo8YXJ0aWNsZSBjbGFzcz0iVGVhc2VyT2ZmZXIgIj4KICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJoaWRkZW4iIGRhdGEtcmVmZXJlbmNlPSIxMzc3OTI0Ij4mbmJzcDs8L3NwYW4+CgogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJoaWRkZW4iIGRhdGEtbWFuZGF0PSJTaW1wbGUiPjwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJoaWRkZW4iIGRhdGEtY3JlYXRpb249IjIwMTkwMTE3Ij48L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJoaWRkZW4iIGRhdGEtcHJpeD0iMjE0MDAwMCI+PC9zcGFuPgogICAgICAgIAogICAgPGEgaHJlZj0iL2FjaGF0L3BhcmlzLTc1MDE1L2FwcGFydGVtZW50LzEzNzc5MjQuaHRtIiBjbGFzcz0iVGVhc2VyT2ZmZXItaWxsIiBhcmlhLWhpZGRlbj0idHJ1ZSIgdGFiaW5kZXg9Ii0xIiBzdHlsZT0iYmFja2dyb3VuZC1pbWFnZTogdXJsKCdodHRwOi8vcGhvdG9zLmZyLmZvbmNpYS5jb20vbWluaWNwLzY0MC80ODAvcGhvdG9zLzEzNzcvOTI0LzEzNzc5MjQvZ3JhbmQvMTM3NzkyNF84NTZlNGQyNGY4N2ZhZjIwNWQ5ZjdjMDNkMzI4NTZlMjVkZjkyNmJkMTY1YzEuanBnP2RhdGVtYWo9MjAxOS0xMi0xOCAxMjowMToxOC4xMDgnKSI+CiAgICAgICAgPGltZyBzcmM9Imh0dHA6Ly9waG90b3MuZnIuZm9uY2lhLmNvbS9taW5pY3AvNjQwLzQ4MC9waG90b3MvMTM3Ny85MjQvMTM3NzkyNC9ncmFuZC8xMzc3OTI0Xzg1NmU0ZDI0Zjg3ZmFmMjA1ZDlmN2MwM2QzMjg1NmUyNWRmOTI2YmQxNjVjMS5qcGc/ZGF0ZW1haj0yMDE5LTEyLTE4IDEyOjAxOjE4LjEwOCIgYWx0PSJBcHBhcnRlbWVudCA0IHBpw6hjZXMgw6AgdmVuZHJlIiAvPgogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJUZWFzZXJPZmZlci1pbGwtY291bnQiPjI8L3NwYW4+CiAgICAgICAgICAgIDwvYT4KCiAgICA8ZGl2IGNsYXNzPSJUZWFzZXJPZmZlci1jb250ZW50Ij4KCiAgICAgICAgCiAgICAgICAgPGgzIGNsYXNzPSJUZWFzZXJPZmZlci10aXRsZSI+PGEgaHJlZj0iL2FjaGF0L3BhcmlzLTc1MDE1L2FwcGFydGVtZW50LzEzNzc5MjQuaHRtIj5BcHBhcnRlbWVudCA0IHBpw6hjZXMgw6AgdmVuZHJlPC9hPjwvaDM+CiAgICAgICAgPHAgY2xhc3M9IlRlYXNlck9mZmVyLWZhdiI+CiAgICAgICAgICAgIDxidXR0b24gY2xhc3M9IkZhdkJ0biBGYXZCdG4tLWluYWN0aXZlIiBhcmlhLWxhYmVsPSJBam91dGVyIGF1eCBmYXZvcmlzIj4KICAgICAgICAgICAgICAgIDxzdmcgY2xhc3M9Imljb24iIHN0eWxlPSJ3aWR0aDoxNXB4O2hlaWdodDoxNXB4IiBhcmlhLWhpZGRlbj0idHJ1ZSI+PHVzZSB4bGluazpocmVmPSIvYnVuZGxlcy9mb25jaWFpbnRlcm5ldC9zdmcvaWNvbnMuc3ZnI0ljb24tLXN0YXIyIj48L3VzZT48L3N2Zz4KICAgICAgICAgICAgPC9idXR0b24+CiAgICAgICAgPC9wPgogICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJUZWFzZXJPZmZlci1sb2MiPjxzdmcgY2xhc3M9Imljb24iIHN0eWxlPSJ3aWR0aDoxNnB4O2hlaWdodDoxNnB4IiBhcmlhLWhpZGRlbj0idHJ1ZSI+PHVzZSB4bGluazpocmVmPSIvYnVuZGxlcy9mb25jaWFpbnRlcm5ldC9zdmcvaWNvbnMuc3ZnI0ljb24tLXBvaW50ZXIzIj48L3VzZT48L3N2Zz5QYXJpcyAoNzUwMTUpPC9wPgogICAgICAgIAogICAgICAgIDxwIGNsYXNzPSJUZWFzZXJPZmZlci1wcmljZSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3Ryb25nIGNsYXNzPSJUZWFzZXJPZmZlci1wcmljZS1udW0iIGRhdGEtYmVoYXQ9InByaXhWZW50ZURlc0JpZW5zIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgMiZuYnNwOzE0MCZuYnNwOzAwMCZuYnNwO+KCrAogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJUZWFzZXJPZmZlci1wcmljZS1tZW50aW9ucyI+SG9ub3JhaXJlcyBkJ2FnZW5jZSDDoCBsYSBjaGFyZ2UgZHUgdmVuZGV1cjwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3N0cm9uZz4KICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgPC9wPgoKICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0iVGVhc2VyT2ZmZXItZGVzY3JpcHRpb24iPgogICAgICAgICAgICAgICAgUGFyaXMgWFYgLSBBcHBhcnRlbWVudCBmYW1pbGxpYWwuIFQ0IGVuIGR1cGxleCBkZSAxMjYgbcKyIGF2ZWMgMiB0ZXJyYXNzZXMgZGUgMjBtwrIgZXQgMTVtwrIgYWluc2kgcXUmIzAzOTt1bi4uLgogICAgICAgICAgICA8L3A+CiAgICAgICAgCiAgICAgICAgPGRpdiBjbGFzcz0iTWluaURhdGEgTWluaURhdGEtLWZsZXgiPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJNaW5pRGF0YS1yb3cgTWluaURhdGEtcm93LS1iZyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJNaW5pRGF0YS1pdGVtIiBkYXRhLWJlaGF0PSJzdXJmYWNlRGVzQmllbnMiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgMTI2IG08c3VwPjI8L3N1cD4KICAgICAgICAgICAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9Ik1pbmlEYXRhLWl0ZW0iIGRhdGEtYmVoYXQ9Im5iUGllY2VzRGVzQmllbnMiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgNCBwacOoY2VzICAgICAgICAgICAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJNaW5pRGF0YS1pdGVtIiBkYXRhLWJlaGF0PSJuYkNoYW1icmVzRGVzQmllbnMiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgMyBjaGFtYnJlcyAgICAgICAgICAgICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJNaW5pRGF0YS1pdGVtIE1pbmlEYXRhLWl0ZW0tLWNvbXBhY3QiPgogICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJNaW5pRGF0YS1pY29uIiB0YWJpbmRleD0iMCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHN2ZyBjbGFzcz0iaWNvbiIgc3R5bGU9IndpZHRoOjE1cHg7aGVpZ2h0OjE1cHgiIGFyaWEtaGlkZGVuPSJ0cnVlIj48dXNlIHhsaW5rOmhyZWY9Ii9idW5kbGVzL2ZvbmNpYWludGVybmV0L3N2Zy9pY29ucy5zdmcjSWNvbi0tYWNjZXNzIj48L3VzZT48L3N2Zz4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iTWluaURhdGEtaWNvbkxhYmVsIj5BY2PDqHMgaGFuZGljYXDDqXM8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CgogICAgICAgIAogICAgICAgIDxwIGNsYXNzPSJUZWFzZXJPZmZlci1iYXJlbWUiPgogICAgICAgICAgICA8YSBocmVmPSJodHRwOi8vYWdlbmNlLmZvbmNpYS5jb20vcGFyaXMtNzUwMDYvYWdlbmNlLWltbW9iaWxpZXJlL2ZvbmNpYS10cmFuc2FjdGlvbi1wYXJpcy1tb250cGFybmFzc2UtMTEyOCIgcmVsPSJub2ZvbGxvdyIgdGFyZ2V0PSJfYmxhbmsiPlZvaXIgbGUgYmFyw6htZSBkZSBsJ2FnZW5jZTwvYT4KICAgICAgICA8L3A+CiAgICA8L2Rpdj4KCiAgICAKPC9hcnRpY2xlPgogICAgCgogICAgCiAgICAKICAgIAogICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIAo8YXJ0aWNsZSBjbGFzcz0iVGVhc2VyT2ZmZXIgIj4KICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJoaWRkZW4iIGRhdGEtcmVmZXJlbmNlPSIxMzgwMDA4Ij4mbmJzcDs8L3NwYW4+CgogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJoaWRkZW4iIGRhdGEtbWFuZGF0PSJTaW1wbGUiPjwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJoaWRkZW4iIGRhdGEtY3JlYXRpb249IjIwMjAwMTA2Ij48L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJoaWRkZW4iIGRhdGEtcHJpeD0iNDA3MDAwIj48L3NwYW4+CiAgICAgICAgCiAgICA8YSBocmVmPSIvYWNoYXQvcGFyaXMtNzUwMTQvYXBwYXJ0ZW1lbnQvMTM4MDAwOC5odG0iIGNsYXNzPSJUZWFzZXJPZmZlci1pbGwiIGFyaWEtaGlkZGVuPSJ0cnVlIiB0YWJpbmRleD0iLTEiIHN0eWxlPSJiYWNrZ3JvdW5kLWltYWdlOiB1cmwoJ2h0dHA6Ly9waG90b3MuZnIuZm9uY2lhLmNvbS9taW5pY3AvNjQwLzQ4MC9waG90b3MvMTM4MC8wMDgvMTM4MDAwOC9ncmFuZC8xMzgwMDA4XzZhMmY0NzcxNjQ3MTU4M2ZjOGQ1YjI1NjQ3YmVkMTYzNWUxMzRkMWY1NTlkMy5qcGc/ZGF0ZW1haj0yMDIwLTAxLTA2IDE2OjE3OjI4LjYwMCcpIj4KICAgICAgICA8aW1nIHNyYz0iaHR0cDovL3Bob3Rvcy5mci5mb25jaWEuY29tL21pbmljcC82NDAvNDgwL3Bob3Rvcy8xMzgwLzAwOC8xMzgwMDA4L2dyYW5kLzEzODAwMDhfNmEyZjQ3NzE2NDcxNTgzZmM4ZDViMjU2NDdiZWQxNjM1ZTEzNGQxZjU1OWQzLmpwZz9kYXRlbWFqPTIwMjAtMDEtMDYgMTY6MTc6MjguNjAwIiBhbHQ9IkFwcGFydGVtZW50IDEgcGnDqGNlIMOgIHZlbmRyZSIgLz4KICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iVGVhc2VyT2ZmZXItaWxsLWNvdW50Ij4xPC9zcGFuPgogICAgICAgICAgICA8L2E+CgogICAgPGRpdiBjbGFzcz0iVGVhc2VyT2ZmZXItY29udGVudCI+CgogICAgICAgIAogICAgICAgIDxoMyBjbGFzcz0iVGVhc2VyT2ZmZXItdGl0bGUiPjxhIGhyZWY9Ii9hY2hhdC9wYXJpcy03NTAxNC9hcHBhcnRlbWVudC8xMzgwMDA4Lmh0bSI+QXBwYXJ0ZW1lbnQgMSBwacOoY2Ugw6AgdmVuZHJlPC9hPjwvaDM+CiAgICAgICAgPHAgY2xhc3M9IlRlYXNlck9mZmVyLWZhdiI+CiAgICAgICAgICAgIDxidXR0b24gY2xhc3M9IkZhdkJ0biBGYXZCdG4tLWluYWN0aXZlIiBhcmlhLWxhYmVsPSJBam91dGVyIGF1eCBmYXZvcmlzIj4KICAgICAgICAgICAgICAgIDxzdmcgY2xhc3M9Imljb24iIHN0eWxlPSJ3aWR0aDoxNXB4O2hlaWdodDoxNXB4IiBhcmlhLWhpZGRlbj0idHJ1ZSI+PHVzZSB4bGluazpocmVmPSIvYnVuZGxlcy9mb25jaWFpbnRlcm5ldC9zdmcvaWNvbnMuc3ZnI0ljb24tLXN0YXIyIj48L3VzZT48L3N2Zz4KICAgICAgICAgICAgPC9idXR0b24+CiAgICAgICAgPC9wPgogICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJUZWFzZXJPZmZlci1sb2MiPjxzdmcgY2xhc3M9Imljb24iIHN0eWxlPSJ3aWR0aDoxNnB4O2hlaWdodDoxNnB4IiBhcmlhLWhpZGRlbj0idHJ1ZSI+PHVzZSB4bGluazpocmVmPSIvYnVuZGxlcy9mb25jaWFpbnRlcm5ldC9zdmcvaWNvbnMuc3ZnI0ljb24tLXBvaW50ZXIzIj48L3VzZT48L3N2Zz5QYXJpcyAoNzUwMTQpPC9wPgogICAgICAgIAogICAgICAgIDxwIGNsYXNzPSJUZWFzZXJPZmZlci1wcmljZSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3Ryb25nIGNsYXNzPSJUZWFzZXJPZmZlci1wcmljZS1udW0iIGRhdGEtYmVoYXQ9InByaXhWZW50ZURlc0JpZW5zIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgNDA3Jm5ic3A7MDAwJm5ic3A74oKsCiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9IlRlYXNlck9mZmVyLXByaWNlLW1lbnRpb25zIj5Ib25vcmFpcmVzIGQnYWdlbmNlIMOgIGxhIGNoYXJnZSBkdSB2ZW5kZXVyPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvc3Ryb25nPgogICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICA8L3A+CgogICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJUZWFzZXJPZmZlci1kZXNjcmlwdGlvbiI+CiAgICAgICAgICAgICAgICBQYXJpcyBYSVbDqG1lIC0gQXUgcGllZCBkdSBtw6l0cm8gTW91dG9uLUR1dmVybmV0LiAKU3R1ZGlvIGRlIDI4bcKyICBhdSAzw6htZSDDqXRhZ2UgZGFucyB1bmUgcsOpc2lkZW5jZSBkZS4uLgogICAgICAgICAgICA8L3A+CiAgICAgICAgCiAgICAgICAgPGRpdiBjbGFzcz0iTWluaURhdGEgTWluaURhdGEtLWZsZXgiPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJNaW5pRGF0YS1yb3cgTWluaURhdGEtcm93LS1iZyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJNaW5pRGF0YS1pdGVtIiBkYXRhLWJlaGF0PSJzdXJmYWNlRGVzQmllbnMiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgMjggbTxzdXA+Mjwvc3VwPgogICAgICAgICAgICAgICAgICAgICAgICA8L3A+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0iTWluaURhdGEtaXRlbSIgZGF0YS1iZWhhdD0ibmJQaWVjZXNEZXNCaWVucyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAxIHBpw6hjZSAgICAgICAgICAgICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0iTWluaURhdGEtaXRlbSIgZGF0YS1iZWhhdD0ibmJDaGFtYnJlc0Rlc0JpZW5zIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDEgY2hhbWJyZSAgICAgICAgICAgICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAKICAgICAgICA8cCBjbGFzcz0iVGVhc2VyT2ZmZXItYmFyZW1lIj4KICAgICAgICAgICAgPGEgaHJlZj0iaHR0cDovL2FnZW5jZS5mb25jaWEuY29tL3BhcmlzLTc1MDA2L2FnZW5jZS1pbW1vYmlsaWVyZS9mb25jaWEtdHJhbnNhY3Rpb24tcGFyaXMtbW9udHBhcm5hc3NlLTExMjgiIHJlbD0ibm9mb2xsb3ciIHRhcmdldD0iX2JsYW5rIj5Wb2lyIGxlIGJhcsOobWUgZGUgbCdhZ2VuY2U8L2E+CiAgICAgICAgPC9wPgogICAgPC9kaXY+CgogICAgCjwvYXJ0aWNsZT4KICAgIAoKICAgIAogICAgCiAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIAo8YXJ0aWNsZSBjbGFzcz0iVGVhc2VyT2ZmZXIgIj4KICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJoaWRkZW4iIGRhdGEtcmVmZXJlbmNlPSIxMzg0MTY3Ij4mbmJzcDs8L3NwYW4+CgogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJoaWRkZW4iIGRhdGEtbWFuZGF0PSJTaW1wbGUiPjwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJoaWRkZW4iIGRhdGEtY3JlYXRpb249IjIwMjAwMTEwIj48L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJoaWRkZW4iIGRhdGEtcHJpeD0iMTQzODAwMCI+PC9zcGFuPgogICAgICAgIAogICAgPGEgaHJlZj0iL2FjaGF0L3BhcmlzLTc1MDA2L2FwcGFydGVtZW50LzEzODQxNjcuaHRtIiBjbGFzcz0iVGVhc2VyT2ZmZXItaWxsIiBhcmlhLWhpZGRlbj0idHJ1ZSIgdGFiaW5kZXg9Ii0xIiBzdHlsZT0iYmFja2dyb3VuZC1pbWFnZTogdXJsKCdodHRwOi8vcGhvdG9zLmZyLmZvbmNpYS5jb20vbWluaWNwLzY0MC80ODAvcGhvdG9zLzEzODQvMTY3LzEzODQxNjcvZ3JhbmQvMTM4NDE2N18xYjUyMDEzNTBkNGM3YjE2NzJjMDhkYzdmYzdmNzk3YzVlMjcyZTY5NjYwMzEuanBnP2RhdGVtYWo9MjAyMC0wMy0xMyAxMDo1ODo1MC4zMjAnKSI+CiAgICAgICAgPGltZyBzcmM9Imh0dHA6Ly9waG90b3MuZnIuZm9uY2lhLmNvbS9taW5pY3AvNjQwLzQ4MC9waG90b3MvMTM4NC8xNjcvMTM4NDE2Ny9ncmFuZC8xMzg0MTY3XzFiNTIwMTM1MGQ0YzdiMTY3MmMwOGRjN2ZjN2Y3OTdjNWUyNzJlNjk2NjAzMS5qcGc/ZGF0ZW1haj0yMDIwLTAzLTEzIDEwOjU4OjUwLjMyMCIgYWx0PSJBcHBhcnRlbWVudCA1IHBpw6hjZXMgw6AgdmVuZHJlIiAvPgogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJUZWFzZXJPZmZlci1pbGwtY291bnQiPjM8L3NwYW4+CiAgICAgICAgICAgIDwvYT4KCiAgICA8ZGl2IGNsYXNzPSJUZWFzZXJPZmZlci1jb250ZW50Ij4KCiAgICAgICAgCiAgICAgICAgPGgzIGNsYXNzPSJUZWFzZXJPZmZlci10aXRsZSI+PGEgaHJlZj0iL2FjaGF0L3BhcmlzLTc1MDA2L2FwcGFydGVtZW50LzEzODQxNjcuaHRtIj5BcHBhcnRlbWVudCA1IHBpw6hjZXMgw6AgdmVuZHJlPC9hPjwvaDM+CiAgICAgICAgPHAgY2xhc3M9IlRlYXNlck9mZmVyLWZhdiI+CiAgICAgICAgICAgIDxidXR0b24gY2xhc3M9IkZhdkJ0biBGYXZCdG4tLWluYWN0aXZlIiBhcmlhLWxhYmVsPSJBam91dGVyIGF1eCBmYXZvcmlzIj4KICAgICAgICAgICAgICAgIDxzdmcgY2xhc3M9Imljb24iIHN0eWxlPSJ3aWR0aDoxNXB4O2hlaWdodDoxNXB4IiBhcmlhLWhpZGRlbj0idHJ1ZSI+PHVzZSB4bGluazpocmVmPSIvYnVuZGxlcy9mb25jaWFpbnRlcm5ldC9zdmcvaWNvbnMuc3ZnI0ljb24tLXN0YXIyIj48L3VzZT48L3N2Zz4KICAgICAgICAgICAgPC9idXR0b24+CiAgICAgICAgPC9wPgogICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJUZWFzZXJPZmZlci1sb2MiPjxzdmcgY2xhc3M9Imljb24iIHN0eWxlPSJ3aWR0aDoxNnB4O2hlaWdodDoxNnB4IiBhcmlhLWhpZGRlbj0idHJ1ZSI+PHVzZSB4bGluazpocmVmPSIvYnVuZGxlcy9mb25jaWFpbnRlcm5ldC9zdmcvaWNvbnMuc3ZnI0ljb24tLXBvaW50ZXIzIj48L3VzZT48L3N2Zz5QYXJpcyAoNzUwMDYpPC9wPgogICAgICAgIAogICAgICAgIDxwIGNsYXNzPSJUZWFzZXJPZmZlci1wcmljZSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3Ryb25nIGNsYXNzPSJUZWFzZXJPZmZlci1wcmljZS1udW0iIGRhdGEtYmVoYXQ9InByaXhWZW50ZURlc0JpZW5zIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgMSZuYnNwOzQzOCZuYnNwOzAwMCZuYnNwO+KCrAogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJUZWFzZXJPZmZlci1wcmljZS1tZW50aW9ucyI+SG9ub3JhaXJlcyBkJ2FnZW5jZSDDoCBsYSBjaGFyZ2UgZHUgdmVuZGV1cjwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3N0cm9uZz4KICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgPC9wPgoKICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0iVGVhc2VyT2ZmZXItZGVzY3JpcHRpb24iPgogICAgICAgICAgICAgICAgTW9udHBhcm5hc3NlLiBJbW1ldWJsZSBwaWVycmUgZGUgdGFpbGxlLCBhdSAywrAgw6l0YWdlL2FzY2Vuc2V1ciwgbm91cyB2b3VzIHByb3Bvc29ucyB1biBhcHBhcnRlbWVudCwgZmFtaWxpYWwuLi4KICAgICAgICAgICAgPC9wPgogICAgICAgIAogICAgICAgIDxkaXYgY2xhc3M9Ik1pbmlEYXRhIE1pbmlEYXRhLS1mbGV4Ij4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iTWluaURhdGEtcm93IE1pbmlEYXRhLXJvdy0tYmciPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0iTWluaURhdGEtaXRlbSIgZGF0YS1iZWhhdD0ic3VyZmFjZURlc0JpZW5zIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDg3IG08c3VwPjI8L3N1cD4KICAgICAgICAgICAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9Ik1pbmlEYXRhLWl0ZW0iIGRhdGEtYmVoYXQ9Im5iUGllY2VzRGVzQmllbnMiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgNSBwacOoY2VzICAgICAgICAgICAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJNaW5pRGF0YS1pdGVtIiBkYXRhLWJlaGF0PSJuYkNoYW1icmVzRGVzQmllbnMiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgMyBjaGFtYnJlcyAgICAgICAgICAgICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAKICAgICAgICA8cCBjbGFzcz0iVGVhc2VyT2ZmZXItYmFyZW1lIj4KICAgICAgICAgICAgPGEgaHJlZj0iaHR0cDovL2FnZW5jZS5mb25jaWEuY29tL3BhcmlzLTc1MDA2L2FnZW5jZS1pbW1vYmlsaWVyZS9mb25jaWEtdHJhbnNhY3Rpb24tcGFyaXMtbW9udHBhcm5hc3NlLTExMjgiIHJlbD0ibm9mb2xsb3ciIHRhcmdldD0iX2JsYW5rIj5Wb2lyIGxlIGJhcsOobWUgZGUgbCdhZ2VuY2U8L2E+CiAgICAgICAgPC9wPgogICAgPC9kaXY+CgogICAgCjwvYXJ0aWNsZT4KICAgIAoKICAgIAogICAgCiAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIAo8YXJ0aWNsZSBjbGFzcz0iVGVhc2VyT2ZmZXIgIj4KICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJoaWRkZW4iIGRhdGEtcmVmZXJlbmNlPSIxMzg0MTk2Ij4mbmJzcDs8L3NwYW4+CgogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJoaWRkZW4iIGRhdGEtbWFuZGF0PSJTaW1wbGUiPjwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJoaWRkZW4iIGRhdGEtY3JlYXRpb249IjIwMjAwMTI0Ij48L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJoaWRkZW4iIGRhdGEtcHJpeD0iMTAyNjAwMCI+PC9zcGFuPgogICAgICAgIAogICAgPGEgaHJlZj0iL2FjaGF0L3BhcmlzLTc1MDE1L2FwcGFydGVtZW50LzEzODQxOTYuaHRtIiBjbGFzcz0iVGVhc2VyT2ZmZXItaWxsIiBhcmlhLWhpZGRlbj0idHJ1ZSIgdGFiaW5kZXg9Ii0xIiBzdHlsZT0iYmFja2dyb3VuZC1pbWFnZTogdXJsKCdodHRwOi8vcGhvdG9zLmZyLmZvbmNpYS5jb20vbWluaWNwLzY0MC80ODAvcGhvdG9zLzEzODQvMTk2LzEzODQxOTYvZ3JhbmQvMTM4NDE5Nl85Y2RmYTUyZTk4OTFmODVhNDU3Yjc3ZWRmYjlmZWI2YTVlNTY5ODA1MzA0ZWEuanBnP2RhdGVtYWo9MjAyMC0wMy0wNSAxMDoyNDo1NS45NDcnKSI+CiAgICAgICAgPGltZyBzcmM9Imh0dHA6Ly9waG90b3MuZnIuZm9uY2lhLmNvbS9taW5pY3AvNjQwLzQ4MC9waG90b3MvMTM4NC8xOTYvMTM4NDE5Ni9ncmFuZC8xMzg0MTk2XzljZGZhNTJlOTg5MWY4NWE0NTdiNzdlZGZiOWZlYjZhNWU1Njk4MDUzMDRlYS5qcGc/ZGF0ZW1haj0yMDIwLTAzLTA1IDEwOjI0OjU1Ljk0NyIgYWx0PSJBcHBhcnRlbWVudCA1IHBpw6hjZXMgw6AgdmVuZHJlIiAvPgogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJUZWFzZXJPZmZlci1pbGwtY291bnQiPjU8L3NwYW4+CiAgICAgICAgICAgIDwvYT4KCiAgICA8ZGl2IGNsYXNzPSJUZWFzZXJPZmZlci1jb250ZW50Ij4KCiAgICAgICAgCiAgICAgICAgPGgzIGNsYXNzPSJUZWFzZXJPZmZlci10aXRsZSI+PGEgaHJlZj0iL2FjaGF0L3BhcmlzLTc1MDE1L2FwcGFydGVtZW50LzEzODQxOTYuaHRtIj5BcHBhcnRlbWVudCA1IHBpw6hjZXMgw6AgdmVuZHJlPC9hPjwvaDM+CiAgICAgICAgPHAgY2xhc3M9IlRlYXNlck9mZmVyLWZhdiI+CiAgICAgICAgICAgIDxidXR0b24gY2xhc3M9IkZhdkJ0biBGYXZCdG4tLWluYWN0aXZlIiBhcmlhLWxhYmVsPSJBam91dGVyIGF1eCBmYXZvcmlzIj4KICAgICAgICAgICAgICAgIDxzdmcgY2xhc3M9Imljb24iIHN0eWxlPSJ3aWR0aDoxNXB4O2hlaWdodDoxNXB4IiBhcmlhLWhpZGRlbj0idHJ1ZSI+PHVzZSB4bGluazpocmVmPSIvYnVuZGxlcy9mb25jaWFpbnRlcm5ldC9zdmcvaWNvbnMuc3ZnI0ljb24tLXN0YXIyIj48L3VzZT48L3N2Zz4KICAgICAgICAgICAgPC9idXR0b24+CiAgICAgICAgPC9wPgogICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJUZWFzZXJPZmZlci1sb2MiPjxzdmcgY2xhc3M9Imljb24iIHN0eWxlPSJ3aWR0aDoxNnB4O2hlaWdodDoxNnB4IiBhcmlhLWhpZGRlbj0idHJ1ZSI+PHVzZSB4bGluazpocmVmPSIvYnVuZGxlcy9mb25jaWFpbnRlcm5ldC9zdmcvaWNvbnMuc3ZnI0ljb24tLXBvaW50ZXIzIj48L3VzZT48L3N2Zz5QYXJpcyAoNzUwMTUpPC9wPgogICAgICAgIAogICAgICAgIDxwIGNsYXNzPSJUZWFzZXJPZmZlci1wcmljZSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3Ryb25nIGNsYXNzPSJUZWFzZXJPZmZlci1wcmljZS1udW0iIGRhdGEtYmVoYXQ9InByaXhWZW50ZURlc0JpZW5zIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgMSZuYnNwOzAyNiZuYnNwOzAwMCZuYnNwO+KCrAogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJUZWFzZXJPZmZlci1wcmljZS1tZW50aW9ucyI+SG9ub3JhaXJlcyBkJ2FnZW5jZSDDoCBsYSBjaGFyZ2UgZHUgdmVuZGV1cjwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3N0cm9uZz4KICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgPC9wPgoKICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0iVGVhc2VyT2ZmZXItZGVzY3JpcHRpb24iPgogICAgICAgICAgICAgICAgUXVhcnRpZXIgUEFTVEVVUiwgZGFucyB1bmUgYmVsbGUgY29wcm9wcmnDqXTDqSBlbiBwaWVycmUgZGUgdGFpbGxlLCBhcHBhcnRlbWVudCBmYW1pbGlhbGUgc2l0dcOpIGF1IHF1YXRyacOobWUuLi4KICAgICAgICAgICAgPC9wPgogICAgICAgIAogICAgICAgIDxkaXYgY2xhc3M9Ik1pbmlEYXRhIE1pbmlEYXRhLS1mbGV4Ij4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iTWluaURhdGEtcm93IE1pbmlEYXRhLXJvdy0tYmciPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0iTWluaURhdGEtaXRlbSIgZGF0YS1iZWhhdD0ic3VyZmFjZURlc0JpZW5zIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDc1IG08c3VwPjI8L3N1cD4KICAgICAgICAgICAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9Ik1pbmlEYXRhLWl0ZW0iIGRhdGEtYmVoYXQ9Im5iUGllY2VzRGVzQmllbnMiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgNSBwacOoY2VzICAgICAgICAgICAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJNaW5pRGF0YS1pdGVtIiBkYXRhLWJlaGF0PSJuYkNoYW1icmVzRGVzQmllbnMiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgMyBjaGFtYnJlcyAgICAgICAgICAgICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAKICAgICAgICA8cCBjbGFzcz0iVGVhc2VyT2ZmZXItYmFyZW1lIj4KICAgICAgICAgICAgPGEgaHJlZj0iaHR0cDovL2FnZW5jZS5mb25jaWEuY29tL3BhcmlzLTc1MDA2L2FnZW5jZS1pbW1vYmlsaWVyZS9mb25jaWEtdHJhbnNhY3Rpb24tcGFyaXMtbW9udHBhcm5hc3NlLTExMjgiIHJlbD0ibm9mb2xsb3ciIHRhcmdldD0iX2JsYW5rIj5Wb2lyIGxlIGJhcsOobWUgZGUgbCdhZ2VuY2U8L2E+CiAgICAgICAgPC9wPgogICAgPC9kaXY+CgogICAgCjwvYXJ0aWNsZT4KICAgIAoKICAgIAogICAgCiAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIAo8YXJ0aWNsZSBjbGFzcz0iVGVhc2VyT2ZmZXIgIj4KICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJoaWRkZW4iIGRhdGEtcmVmZXJlbmNlPSIxMzkxMTE2Ij4mbmJzcDs8L3NwYW4+CgogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJoaWRkZW4iIGRhdGEtbWFuZGF0PSJTaW1wbGUiPjwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJoaWRkZW4iIGRhdGEtY3JlYXRpb249IjIwMjAwMTEzIj48L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJoaWRkZW4iIGRhdGEtcHJpeD0iMTQ3NTAwMCI+PC9zcGFuPgogICAgICAgIAogICAgPGEgaHJlZj0iL2FjaGF0L3BhcmlzLTc1MDA2L2FwcGFydGVtZW50LzEzOTExMTYuaHRtIiBjbGFzcz0iVGVhc2VyT2ZmZXItaWxsIiBhcmlhLWhpZGRlbj0idHJ1ZSIgdGFiaW5kZXg9Ii0xIiBzdHlsZT0iYmFja2dyb3VuZC1pbWFnZTogdXJsKCdodHRwOi8vcGhvdG9zLmZyLmZvbmNpYS5jb20vbWluaWNwLzY0MC80ODAvcGhvdG9zLzEzOTEvMTE2LzEzOTExMTYvZ3JhbmQvMTM5MTExNl82YzAxNjAwYjk2NzA0NzBmMTliMWNmOWEwNTJmYTcwYzVlNDU4OWY0ZTA4Y2UuanBnP2RhdGVtYWo9MjAyMC0wMi0xNCAxMDo0MDozOC44MjEnKSI+CiAgICAgICAgPGltZyBzcmM9Imh0dHA6Ly9waG90b3MuZnIuZm9uY2lhLmNvbS9taW5pY3AvNjQwLzQ4MC9waG90b3MvMTM5MS8xMTYvMTM5MTExNi9ncmFuZC8xMzkxMTE2XzZjMDE2MDBiOTY3MDQ3MGYxOWIxY2Y5YTA1MmZhNzBjNWU0NTg5ZjRlMDhjZS5qcGc/ZGF0ZW1haj0yMDIwLTAyLTE0IDEwOjQwOjM4LjgyMSIgYWx0PSJBcHBhcnRlbWVudCA0IHBpw6hjZXMgw6AgdmVuZHJlIiAvPgogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJUZWFzZXJPZmZlci1pbGwtY291bnQiPjE5PC9zcGFuPgogICAgICAgICAgICA8L2E+CgogICAgPGRpdiBjbGFzcz0iVGVhc2VyT2ZmZXItY29udGVudCI+CgogICAgICAgIAogICAgICAgIDxoMyBjbGFzcz0iVGVhc2VyT2ZmZXItdGl0bGUiPjxhIGhyZWY9Ii9hY2hhdC9wYXJpcy03NTAwNi9hcHBhcnRlbWVudC8xMzkxMTE2Lmh0bSI+QXBwYXJ0ZW1lbnQgNCBwacOoY2VzIMOgIHZlbmRyZTwvYT48L2gzPgogICAgICAgIDxwIGNsYXNzPSJUZWFzZXJPZmZlci1mYXYiPgogICAgICAgICAgICA8YnV0dG9uIGNsYXNzPSJGYXZCdG4gRmF2QnRuLS1pbmFjdGl2ZSIgYXJpYS1sYWJlbD0iQWpvdXRlciBhdXggZmF2b3JpcyI+CiAgICAgICAgICAgICAgICA8c3ZnIGNsYXNzPSJpY29uIiBzdHlsZT0id2lkdGg6MTVweDtoZWlnaHQ6MTVweCIgYXJpYS1oaWRkZW49InRydWUiPjx1c2UgeGxpbms6aHJlZj0iL2J1bmRsZXMvZm9uY2lhaW50ZXJuZXQvc3ZnL2ljb25zLnN2ZyNJY29uLS1zdGFyMiI+PC91c2U+PC9zdmc+CiAgICAgICAgICAgIDwvYnV0dG9uPgogICAgICAgIDwvcD4KICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0iVGVhc2VyT2ZmZXItbG9jIj48c3ZnIGNsYXNzPSJpY29uIiBzdHlsZT0id2lkdGg6MTZweDtoZWlnaHQ6MTZweCIgYXJpYS1oaWRkZW49InRydWUiPjx1c2UgeGxpbms6aHJlZj0iL2J1bmRsZXMvZm9uY2lhaW50ZXJuZXQvc3ZnL2ljb25zLnN2ZyNJY29uLS1wb2ludGVyMyI+PC91c2U+PC9zdmc+UGFyaXMgKDc1MDA2KTwvcD4KICAgICAgICAKICAgICAgICA8cCBjbGFzcz0iVGVhc2VyT2ZmZXItcHJpY2UiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHN0cm9uZyBjbGFzcz0iVGVhc2VyT2ZmZXItcHJpY2UtbnVtIiBkYXRhLWJlaGF0PSJwcml4VmVudGVEZXNCaWVucyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDEmbmJzcDs0NzUmbmJzcDswMDAmbmJzcDvigqwKICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iVGVhc2VyT2ZmZXItcHJpY2UtbWVudGlvbnMiPkhvbm9yYWlyZXMgZCdhZ2VuY2Ugw6AgbGEgY2hhcmdlIGR1IHZlbmRldXI8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9zdHJvbmc+CiAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIDwvcD4KCiAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9IlRlYXNlck9mZmVyLWRlc2NyaXB0aW9uIj4KICAgICAgICAgICAgICAgIEEgMiBwYXMgZHUgSmFyZGluIGR1IEx1eGVtYm91cmcsIGRhbnMgdW4gaW1tZXVibGUgYW5jaWVuLCBhdGVsaWVyIGRlIDg3IG3CsiBzdXIgNCBuaXZlYXV4LgpFbnRyw6llIGF2ZWMuLi4KICAgICAgICAgICAgPC9wPgogICAgICAgIAogICAgICAgIDxkaXYgY2xhc3M9Ik1pbmlEYXRhIE1pbmlEYXRhLS1mbGV4Ij4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iTWluaURhdGEtcm93IE1pbmlEYXRhLXJvdy0tYmciPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0iTWluaURhdGEtaXRlbSIgZGF0YS1iZWhhdD0ic3VyZmFjZURlc0JpZW5zIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDg3IG08c3VwPjI8L3N1cD4KICAgICAgICAgICAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9Ik1pbmlEYXRhLWl0ZW0iIGRhdGEtYmVoYXQ9Im5iUGllY2VzRGVzQmllbnMiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgNCBwacOoY2VzICAgICAgICAgICAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJNaW5pRGF0YS1pdGVtIiBkYXRhLWJlaGF0PSJuYkNoYW1icmVzRGVzQmllbnMiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgMiBjaGFtYnJlcyAgICAgICAgICAgICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAKICAgICAgICA8cCBjbGFzcz0iVGVhc2VyT2ZmZXItYmFyZW1lIj4KICAgICAgICAgICAgPGEgaHJlZj0iaHR0cDovL2FnZW5jZS5mb25jaWEuY29tL3BhcmlzLTc1MDA2L2FnZW5jZS1pbW1vYmlsaWVyZS9mb25jaWEtdHJhbnNhY3Rpb24tcGFyaXMtbW9udHBhcm5hc3NlLTExMjgiIHJlbD0ibm9mb2xsb3ciIHRhcmdldD0iX2JsYW5rIj5Wb2lyIGxlIGJhcsOobWUgZGUgbCdhZ2VuY2U8L2E+CiAgICAgICAgPC9wPgogICAgPC9kaXY+CgogICAgCjwvYXJ0aWNsZT4KICAgIAogICAgCiAgICAKICAgIAogICAgCiAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgCjxhcnRpY2xlIGNsYXNzPSJUZWFzZXJPZmZlciBUZWFzZXJPZmZlci0taGlnaGxpZ2h0Ij4KICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJoaWRkZW4iIGRhdGEtcmVmZXJlbmNlPSIxMzk1OTA3Ij4mbmJzcDs8L3NwYW4+CgogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJoaWRkZW4iIGRhdGEtbWFuZGF0PSJFeGNsdXNpZiI+PC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImhpZGRlbiIgZGF0YS1jcmVhdGlvbj0iMjAyMDAxMDUiPjwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImhpZGRlbiIgZGF0YS1wcml4PSIzNTUwMDAiPjwvc3Bhbj4KICAgICAgICAKICAgIDxhIGhyZWY9Ii9hY2hhdC9wYXJpcy03NTAwNy9hcHBhcnRlbWVudC8xMzk1OTA3Lmh0bSIgY2xhc3M9IlRlYXNlck9mZmVyLWlsbCIgYXJpYS1oaWRkZW49InRydWUiIHRhYmluZGV4PSItMSIgc3R5bGU9ImJhY2tncm91bmQtaW1hZ2U6IHVybCgnaHR0cDovL3Bob3Rvcy5mci5mb25jaWEuY29tL21pbmljcC82NDAvNDgwL3Bob3Rvcy8xMzk1LzkwNy8xMzk1OTA3L2dyYW5kLzEzOTU5MDdfNDA5NDIxNTIyZTVlMmY2ZDFhNGY2YWYyY2JhMzU3Yzk1ZTYxMDRiZTA4ODgzLmpwZz9kYXRlbWFqPTIwMjAtMDMtMTEgMTE6MTM6MDQuNDU3JykiPgogICAgICAgIDxpbWcgc3JjPSJodHRwOi8vcGhvdG9zLmZyLmZvbmNpYS5jb20vbWluaWNwLzY0MC80ODAvcGhvdG9zLzEzOTUvOTA3LzEzOTU5MDcvZ3JhbmQvMTM5NTkwN180MDk0MjE1MjJlNWUyZjZkMWE0ZjZhZjJjYmEzNTdjOTVlNjEwNGJlMDg4ODMuanBnP2RhdGVtYWo9MjAyMC0wMy0xMSAxMToxMzowNC40NTciIGFsdD0iQXBwYXJ0ZW1lbnQgMSBwacOoY2Ugw6AgdmVuZHJlIiAvPgogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJUZWFzZXJPZmZlci1pbGwtY291bnQiPjU8L3NwYW4+CiAgICAgICAgICAgIDwvYT4KCiAgICA8ZGl2IGNsYXNzPSJUZWFzZXJPZmZlci1jb250ZW50Ij4KCiAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9IlRlYXNlck9mZmVyLWJhZGdlIj48c3Bhbj5FeGNsdXNpZjwvc3Bhbj48L3A+CiAgICAgICAgCiAgICAgICAgPGgzIGNsYXNzPSJUZWFzZXJPZmZlci10aXRsZSI+PGEgaHJlZj0iL2FjaGF0L3BhcmlzLTc1MDA3L2FwcGFydGVtZW50LzEzOTU5MDcuaHRtIj5BcHBhcnRlbWVudCAxIHBpw6hjZSDDoCB2ZW5kcmU8L2E+PC9oMz4KICAgICAgICA8cCBjbGFzcz0iVGVhc2VyT2ZmZXItZmF2Ij4KICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz0iRmF2QnRuIEZhdkJ0bi0taW5hY3RpdmUiIGFyaWEtbGFiZWw9IkFqb3V0ZXIgYXV4IGZhdm9yaXMiPgogICAgICAgICAgICAgICAgPHN2ZyBjbGFzcz0iaWNvbiIgc3R5bGU9IndpZHRoOjE1cHg7aGVpZ2h0OjE1cHgiIGFyaWEtaGlkZGVuPSJ0cnVlIj48dXNlIHhsaW5rOmhyZWY9Ii9idW5kbGVzL2ZvbmNpYWludGVybmV0L3N2Zy9pY29ucy5zdmcjSWNvbi0tc3RhcjIiPjwvdXNlPjwvc3ZnPgogICAgICAgICAgICA8L2J1dHRvbj4KICAgICAgICA8L3A+CiAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9IlRlYXNlck9mZmVyLWxvYyI+PHN2ZyBjbGFzcz0iaWNvbiIgc3R5bGU9IndpZHRoOjE2cHg7aGVpZ2h0OjE2cHgiIGFyaWEtaGlkZGVuPSJ0cnVlIj48dXNlIHhsaW5rOmhyZWY9Ii9idW5kbGVzL2ZvbmNpYWludGVybmV0L3N2Zy9pY29ucy5zdmcjSWNvbi0tcG9pbnRlcjMiPjwvdXNlPjwvc3ZnPlBhcmlzICg3NTAwNyk8L3A+CiAgICAgICAgCiAgICAgICAgPHAgY2xhc3M9IlRlYXNlck9mZmVyLXByaWNlIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzdHJvbmcgY2xhc3M9IlRlYXNlck9mZmVyLXByaWNlLW51bSIgZGF0YS1iZWhhdD0icHJpeFZlbnRlRGVzQmllbnMiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAzNTUmbmJzcDswMDAmbmJzcDvigqwKICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iVGVhc2VyT2ZmZXItcHJpY2UtbWVudGlvbnMiPkhvbm9yYWlyZXMgZCdhZ2VuY2Ugw6AgbGEgY2hhcmdlIGR1IHZlbmRldXI8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9zdHJvbmc+CiAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIDwvcD4KCiAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9IlRlYXNlck9mZmVyLWRlc2NyaXB0aW9uIj4KICAgICAgICAgICAgICAgIFBBUklTIFZJSSAtIFRPVVIgTUFVQk9VUkcgLSBTVFVESU8uClJ1ZSBBbcOpbGllLCBwcm9jaGUgRWNvbGUgTWlsaXRhaXJlLiBBdSBwcmVtaWVyIMOpdGFnZSBhdmVjIGFzY2Vuc2V1ciwuLi4KICAgICAgICAgICAgPC9wPgogICAgICAgIAogICAgICAgIDxkaXYgY2xhc3M9Ik1pbmlEYXRhIE1pbmlEYXRhLS1mbGV4Ij4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iTWluaURhdGEtcm93IE1pbmlEYXRhLXJvdy0tYmciPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0iTWluaURhdGEtaXRlbSIgZGF0YS1iZWhhdD0ic3VyZmFjZURlc0JpZW5zIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDE5IG08c3VwPjI8L3N1cD4KICAgICAgICAgICAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9Ik1pbmlEYXRhLWl0ZW0iIGRhdGEtYmVoYXQ9Im5iUGllY2VzRGVzQmllbnMiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgMSBwacOoY2UgICAgICAgICAgICAgICAgICAgICAgICA8L3A+CiAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgCiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgCiAgICAgICAgPHAgY2xhc3M9IlRlYXNlck9mZmVyLWJhcmVtZSI+CiAgICAgICAgICAgIDxhIGhyZWY9Imh0dHA6Ly9hZ2VuY2UuZm9uY2lhLmNvbS9wYXJpcy03NTAwNi9hZ2VuY2UtaW1tb2JpbGllcmUvZm9uY2lhLXRyYW5zYWN0aW9uLXBhcmlzLW1vbnRwYXJuYXNzZS0xMTI4IiByZWw9Im5vZm9sbG93IiB0YXJnZXQ9Il9ibGFuayI+Vm9pciBsZSBiYXLDqG1lIGRlIGwnYWdlbmNlPC9hPgogICAgICAgIDwvcD4KICAgIDwvZGl2PgoKICAgIAo8L2FydGljbGU+CiAgICAKCiAgICAKICAgIAogICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAKPGFydGljbGUgY2xhc3M9IlRlYXNlck9mZmVyICI+CiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iaGlkZGVuIiBkYXRhLXJlZmVyZW5jZT0iMTQwMDI2MyI+Jm5ic3A7PC9zcGFuPgoKICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iaGlkZGVuIiBkYXRhLW1hbmRhdD0iU2ltcGxlIj48L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iaGlkZGVuIiBkYXRhLWNyZWF0aW9uPSIyMDIwMDEyNSI+PC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iaGlkZGVuIiBkYXRhLXByaXg9IjQ0MzAwMCI+PC9zcGFuPgogICAgICAgIAogICAgPGEgaHJlZj0iL2FjaGF0L3BhcmlzLTc1MDE1L2FwcGFydGVtZW50LzE0MDAyNjMuaHRtIiBjbGFzcz0iVGVhc2VyT2ZmZXItaWxsIiBhcmlhLWhpZGRlbj0idHJ1ZSIgdGFiaW5kZXg9Ii0xIiBzdHlsZT0iYmFja2dyb3VuZC1pbWFnZTogdXJsKCdodHRwOi8vcGhvdG9zLmZyLmZvbmNpYS5jb20vbWluaWNwLzY0MC80ODAvcGhvdG9zLzE0MDAvMjYzLzE0MDAyNjMvZ3JhbmQvMTQwMDI2M19kNjgwMzhkZTg5ZWEwMDVkYTRmYzM1MjM4Y2VjNjMwNzVlN2I3MDNiMTY0MGMuanBnP2RhdGVtYWo9MjAyMC0wMy0yNSAxNTo1NzowNC4wMDInKSI+CiAgICAgICAgPGltZyBzcmM9Imh0dHA6Ly9waG90b3MuZnIuZm9uY2lhLmNvbS9taW5pY3AvNjQwLzQ4MC9waG90b3MvMTQwMC8yNjMvMTQwMDI2My9ncmFuZC8xNDAwMjYzX2Q2ODAzOGRlODllYTAwNWRhNGZjMzUyMzhjZWM2MzA3NWU3YjcwM2IxNjQwYy5qcGc/ZGF0ZW1haj0yMDIwLTAzLTI1IDE1OjU3OjA0LjAwMiIgYWx0PSJBcHBhcnRlbWVudCAyIHBpw6hjZXMgw6AgdmVuZHJlIiAvPgogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJUZWFzZXJPZmZlci1pbGwtY291bnQiPjQ8L3NwYW4+CiAgICAgICAgICAgIDwvYT4KCiAgICA8ZGl2IGNsYXNzPSJUZWFzZXJPZmZlci1jb250ZW50Ij4KCiAgICAgICAgCiAgICAgICAgPGgzIGNsYXNzPSJUZWFzZXJPZmZlci10aXRsZSI+PGEgaHJlZj0iL2FjaGF0L3BhcmlzLTc1MDE1L2FwcGFydGVtZW50LzE0MDAyNjMuaHRtIj5BcHBhcnRlbWVudCAyIHBpw6hjZXMgw6AgdmVuZHJlPC9hPjwvaDM+CiAgICAgICAgPHAgY2xhc3M9IlRlYXNlck9mZmVyLWZhdiI+CiAgICAgICAgICAgIDxidXR0b24gY2xhc3M9IkZhdkJ0biBGYXZCdG4tLWluYWN0aXZlIiBhcmlhLWxhYmVsPSJBam91dGVyIGF1eCBmYXZvcmlzIj4KICAgICAgICAgICAgICAgIDxzdmcgY2xhc3M9Imljb24iIHN0eWxlPSJ3aWR0aDoxNXB4O2hlaWdodDoxNXB4IiBhcmlhLWhpZGRlbj0idHJ1ZSI+PHVzZSB4bGluazpocmVmPSIvYnVuZGxlcy9mb25jaWFpbnRlcm5ldC9zdmcvaWNvbnMuc3ZnI0ljb24tLXN0YXIyIj48L3VzZT48L3N2Zz4KICAgICAgICAgICAgPC9idXR0b24+CiAgICAgICAgPC9wPgogICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJUZWFzZXJPZmZlci1sb2MiPjxzdmcgY2xhc3M9Imljb24iIHN0eWxlPSJ3aWR0aDoxNnB4O2hlaWdodDoxNnB4IiBhcmlhLWhpZGRlbj0idHJ1ZSI+PHVzZSB4bGluazpocmVmPSIvYnVuZGxlcy9mb25jaWFpbnRlcm5ldC9zdmcvaWNvbnMuc3ZnI0ljb24tLXBvaW50ZXIzIj48L3VzZT48L3N2Zz5QYXJpcyAoNzUwMTUpPC9wPgogICAgICAgIAogICAgICAgIDxwIGNsYXNzPSJUZWFzZXJPZmZlci1wcmljZSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3Ryb25nIGNsYXNzPSJUZWFzZXJPZmZlci1wcmljZS1udW0iIGRhdGEtYmVoYXQ9InByaXhWZW50ZURlc0JpZW5zIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgNDQzJm5ic3A7MDAwJm5ic3A74oKsCiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9IlRlYXNlck9mZmVyLXByaWNlLW1lbnRpb25zIj5Ib25vcmFpcmVzIGQnYWdlbmNlIMOgIGxhIGNoYXJnZSBkdSB2ZW5kZXVyPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvc3Ryb25nPgogICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICA8L3A+CgogICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJUZWFzZXJPZmZlci1kZXNjcmlwdGlvbiI+CiAgICAgICAgICAgICAgICBDb252ZW50aW9uLiBQaWVycmUgZGUgdGFpbGxlLCBhdSAzwrAgw6l0YWdlLCBub3VzIHZvdXMgcHJvcG9zb25zIGNlIGpvbGkgYXBwYXJ0ZW1lbnQgcsOpbm92w6kgYXZlYyBnb3V0Li4uLgogICAgICAgICAgICA8L3A+CiAgICAgICAgCiAgICAgICAgPGRpdiBjbGFzcz0iTWluaURhdGEgTWluaURhdGEtLWZsZXgiPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJNaW5pRGF0YS1yb3cgTWluaURhdGEtcm93LS1iZyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJNaW5pRGF0YS1pdGVtIiBkYXRhLWJlaGF0PSJzdXJmYWNlRGVzQmllbnMiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgMzYgbTxzdXA+Mjwvc3VwPgogICAgICAgICAgICAgICAgICAgICAgICA8L3A+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0iTWluaURhdGEtaXRlbSIgZGF0YS1iZWhhdD0ibmJQaWVjZXNEZXNCaWVucyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAyIHBpw6hjZXMgICAgICAgICAgICAgICAgICAgICAgICA8L3A+CiAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9Ik1pbmlEYXRhLWl0ZW0iIGRhdGEtYmVoYXQ9Im5iQ2hhbWJyZXNEZXNCaWVucyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAyIGNoYW1icmVzICAgICAgICAgICAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIAogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CgogICAgICAgIAogICAgICAgIDxwIGNsYXNzPSJUZWFzZXJPZmZlci1iYXJlbWUiPgogICAgICAgICAgICA8YSBocmVmPSJodHRwOi8vYWdlbmNlLmZvbmNpYS5jb20vcGFyaXMtNzUwMDYvYWdlbmNlLWltbW9iaWxpZXJlL2ZvbmNpYS10cmFuc2FjdGlvbi1wYXJpcy1tb250cGFybmFzc2UtMTEyOCIgcmVsPSJub2ZvbGxvdyIgdGFyZ2V0PSJfYmxhbmsiPlZvaXIgbGUgYmFyw6htZSBkZSBsJ2FnZW5jZTwvYT4KICAgICAgICA8L3A+CiAgICA8L2Rpdj4KCiAgICAKPC9hcnRpY2xlPgogICAgCiAgICAKICAgIAogICAgCiAgICAKICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAKPGFydGljbGUgY2xhc3M9IlRlYXNlck9mZmVyIFRlYXNlck9mZmVyLS1oaWdobGlnaHQiPgogICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImhpZGRlbiIgZGF0YS1yZWZlcmVuY2U9IjEzMTkxMDQiPiZuYnNwOzwvc3Bhbj4KCiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImhpZGRlbiIgZGF0YS1tYW5kYXQ9IkV4Y2x1c2lmIj48L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iaGlkZGVuIiBkYXRhLWNyZWF0aW9uPSIyMDE5MDEwOSI+PC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iaGlkZGVuIiBkYXRhLXByaXg9Ijk2MDAwIj48L3NwYW4+CiAgICAgICAgCiAgICA8YSBocmVmPSIvYWNoYXQvcGFyaXMtNzUwMDMvYXBwYXJ0ZW1lbnQvMTMxOTEwNC5odG0iIGNsYXNzPSJUZWFzZXJPZmZlci1pbGwiIGFyaWEtaGlkZGVuPSJ0cnVlIiB0YWJpbmRleD0iLTEiIHN0eWxlPSJiYWNrZ3JvdW5kLWltYWdlOiB1cmwoJ2h0dHA6Ly9waG90b3MuZnIuZm9uY2lhLmNvbS9taW5pY3AvNjQwLzQ4MC9waG90b3MvMTMxOS8xMDQvMTMxOTEwNC9ncmFuZC8xMzE5MTA0XzcyODJlYzI5MDBmZjgzZjNhMjVkMDMxZTM2MjgwZTRkNWNiOTg0OWE3ODJhYi5qcGc/ZGF0ZW1haj0yMDE5LTA5LTEwIDE3OjM4OjUyLjcxNCcpIj4KICAgICAgICA8aW1nIHNyYz0iaHR0cDovL3Bob3Rvcy5mci5mb25jaWEuY29tL21pbmljcC82NDAvNDgwL3Bob3Rvcy8xMzE5LzEwNC8xMzE5MTA0L2dyYW5kLzEzMTkxMDRfNzI4MmVjMjkwMGZmODNmM2EyNWQwMzFlMzYyODBlNGQ1Y2I5ODQ5YTc4MmFiLmpwZz9kYXRlbWFqPTIwMTktMDktMTAgMTc6Mzg6NTIuNzE0IiBhbHQ9IkFwcGFydGVtZW50IDEgcGnDqGNlIMOgIHZlbmRyZSIgLz4KICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iVGVhc2VyT2ZmZXItaWxsLWNvdW50Ij41PC9zcGFuPgogICAgICAgICAgICA8L2E+CgogICAgPGRpdiBjbGFzcz0iVGVhc2VyT2ZmZXItY29udGVudCI+CgogICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJUZWFzZXJPZmZlci1iYWRnZSI+PHNwYW4+RXhjbHVzaWY8L3NwYW4+PC9wPgogICAgICAgIAogICAgICAgIDxoMyBjbGFzcz0iVGVhc2VyT2ZmZXItdGl0bGUiPjxhIGhyZWY9Ii9hY2hhdC9wYXJpcy03NTAwMy9hcHBhcnRlbWVudC8xMzE5MTA0Lmh0bSI+QXBwYXJ0ZW1lbnQgMSBwacOoY2Ugw6AgdmVuZHJlPC9hPjwvaDM+CiAgICAgICAgPHAgY2xhc3M9IlRlYXNlck9mZmVyLWZhdiI+CiAgICAgICAgICAgIDxidXR0b24gY2xhc3M9IkZhdkJ0biBGYXZCdG4tLWluYWN0aXZlIiBhcmlhLWxhYmVsPSJBam91dGVyIGF1eCBmYXZvcmlzIj4KICAgICAgICAgICAgICAgIDxzdmcgY2xhc3M9Imljb24iIHN0eWxlPSJ3aWR0aDoxNXB4O2hlaWdodDoxNXB4IiBhcmlhLWhpZGRlbj0idHJ1ZSI+PHVzZSB4bGluazpocmVmPSIvYnVuZGxlcy9mb25jaWFpbnRlcm5ldC9zdmcvaWNvbnMuc3ZnI0ljb24tLXN0YXIyIj48L3VzZT48L3N2Zz4KICAgICAgICAgICAgPC9idXR0b24+CiAgICAgICAgPC9wPgogICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJUZWFzZXJPZmZlci1sb2MiPjxzdmcgY2xhc3M9Imljb24iIHN0eWxlPSJ3aWR0aDoxNnB4O2hlaWdodDoxNnB4IiBhcmlhLWhpZGRlbj0idHJ1ZSI+PHVzZSB4bGluazpocmVmPSIvYnVuZGxlcy9mb25jaWFpbnRlcm5ldC9zdmcvaWNvbnMuc3ZnI0ljb24tLXBvaW50ZXIzIj48L3VzZT48L3N2Zz5QYXJpcyAoNzUwMDMpPC9wPgogICAgICAgIAogICAgICAgIDxwIGNsYXNzPSJUZWFzZXJPZmZlci1wcmljZSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3Ryb25nIGNsYXNzPSJUZWFzZXJPZmZlci1wcmljZS1udW0iIGRhdGEtYmVoYXQ9InByaXhWZW50ZURlc0JpZW5zIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgOTYmbmJzcDswMDAmbmJzcDvigqwKICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iVGVhc2VyT2ZmZXItcHJpY2UtbWVudGlvbnMiPkhvbm9yYWlyZXMgZCdhZ2VuY2Ugw6AgbGEgY2hhcmdlIGR1IHZlbmRldXI8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9zdHJvbmc+CiAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIDwvcD4KCiAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9IlRlYXNlck9mZmVyLWRlc2NyaXB0aW9uIj4KICAgICAgICAgICAgICAgIEF1IDfDqG1lIGV0IGRlcm5pZXIgw6l0YWdlIHNhbnMgYXNjZW5zZXVyIGQmIzAzOTt1biBzdXBlcmJlIGltbWV1YmxlIEhhdXNzbWFubmllbiwgY2hhbWJyZSBkZSA2LDUwIG3CsiBMb2kgQ2FycmV6Li4uCiAgICAgICAgICAgIDwvcD4KICAgICAgICAKICAgICAgICA8ZGl2IGNsYXNzPSJNaW5pRGF0YSBNaW5pRGF0YS0tZmxleCI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9Ik1pbmlEYXRhLXJvdyBNaW5pRGF0YS1yb3ctLWJnIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9Ik1pbmlEYXRhLWl0ZW0iIGRhdGEtYmVoYXQ9InN1cmZhY2VEZXNCaWVucyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA3IG08c3VwPjI8L3N1cD4KICAgICAgICAgICAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9Ik1pbmlEYXRhLWl0ZW0iIGRhdGEtYmVoYXQ9Im5iUGllY2VzRGVzQmllbnMiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgMSBwacOoY2UgICAgICAgICAgICAgICAgICAgICAgICA8L3A+CiAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9Ik1pbmlEYXRhLWl0ZW0iIGRhdGEtYmVoYXQ9Im5iQ2hhbWJyZXNEZXNCaWVucyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAxIGNoYW1icmUgICAgICAgICAgICAgICAgICAgICAgICA8L3A+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgCiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgCiAgICAgICAgPHAgY2xhc3M9IlRlYXNlck9mZmVyLWJhcmVtZSI+CiAgICAgICAgICAgIDxhIGhyZWY9Imh0dHA6Ly9hZ2VuY2UuZm9uY2lhLmNvbS9wYXJpcy03NTAwMy9hZ2VuY2UtaW1tb2JpbGllcmUvZm9uY2lhLXRyYW5zYWN0aW9uLXBhcmlzLXJhbWJ1dGVhdS0xMTI5IiByZWw9Im5vZm9sbG93IiB0YXJnZXQ9Il9ibGFuayI+Vm9pciBsZSBiYXLDqG1lIGRlIGwnYWdlbmNlPC9hPgogICAgICAgIDwvcD4KICAgIDwvZGl2PgoKICAgIAo8L2FydGljbGU+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9IlBhZ2luYXRpb24gUGFnaW5hdGlvbi0tbW9yZSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3Bhbj4xPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIvYWNoYXQvcGFyaXMtNzUvYXBwYXJ0ZW1lbnQtLW1haXNvbi9wYWdlLTIvKHBhcmFtcykvb24vKHRyaSkvZGF0ZS8ob3JkcmUpL2Rlc2MiPjI8L2E+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iL2FjaGF0L3BhcmlzLTc1L2FwcGFydGVtZW50LS1tYWlzb24vcGFnZS0zLyhwYXJhbXMpL29uLyh0cmkpL2RhdGUvKG9yZHJlKS9kZXNjIj4zPC9hPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Ii9hY2hhdC9wYXJpcy03NS9hcHBhcnRlbWVudC0tbWFpc29uL3BhZ2UtNC8ocGFyYW1zKS9vbi8odHJpKS9kYXRlLyhvcmRyZSkvZGVzYyI+NDwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIvYWNoYXQvcGFyaXMtNzUvYXBwYXJ0ZW1lbnQtLW1haXNvbi9wYWdlLTUvKHBhcmFtcykvb24vKHRyaSkvZGF0ZS8ob3JkcmUpL2Rlc2MiPjU8L2E+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iL2FjaGF0L3BhcmlzLTc1L2FwcGFydGVtZW50LS1tYWlzb24vcGFnZS02LyhwYXJhbXMpL29uLyh0cmkpL2RhdGUvKG9yZHJlKS9kZXNjIj42PC9hPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Ii9hY2hhdC9wYXJpcy03NS9hcHBhcnRlbWVudC0tbWFpc29uL3BhZ2UtNy8ocGFyYW1zKS9vbi8odHJpKS9kYXRlLyhvcmRyZSkvZGVzYyI+NzwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Ii9hY2hhdC9wYXJpcy03NS9hcHBhcnRlbWVudC0tbWFpc29uL3BhZ2UtMi8ocGFyYW1zKS9vbi8odHJpKS9kYXRlLyhvcmRyZSkvZGVzYyI+U3VpdmFudGUgPjwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iTGVnYWxNZW50aW9ucyBMZWdhbE1lbnRpb25zLS1zbWFsbCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICA8L21haW4+CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YXNpZGUgY2xhc3M9IkNvbnRlbnQtc2lkZWJhciBTaWRlYmFyIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKPHNlY3Rpb24gY2xhc3M9IlNpZGViYXItYmxvY2sgU2lkZWJhci1ibG9jay0tcGFkZGluZyBTaWRlYmFyLWJsb2NrLS1pbW1vZHZpc29yIj4KICAgIDxhcnRpY2xlIGNsYXNzPSJQdXNoQXNpZGUgUHVzaEFzaWRlLS1pbW1vZHZpc29yIj4KICAgICAgICA8aW1nIHNyYz0iL2J1bmRsZXMvZm9uY2lhaW50ZXJuZXQvaW1hZ2VzL2ltbW9kdmlzb3Ivc2NlYXUtZGUtY29uZmlhbmNlLTIwMHgxNzIucG5nP3ZlcnNpb249MTU4NTU5MTMyNCIKICAgICAgICAgICAgIGNsYXNzPSJibG9jay1pbW1vZHZpc29yX19sb2dvIgogICAgICAgICAgICAgYWx0PSJJbW1vZHZpc29yIgogICAgICAgIC8+CiAgICAgICAgPGRpdiBjbGFzcz0iYmxvY2staW1tb2R2aXNvcl9fYXBwcmVjaWF0aW9uIHRleHQtY2VudGVyIj4KICAgICAgICAgICAgRXhjZWxsZW50CiAgICAgICAgPC9kaXY+CiAgICAgICAgPGRpdiBjbGFzcz0icmF0aW5nLWNvbnRhaW5lciByYXRpbmcteHMgdGV4dC1jZW50ZXIiPgogICAgICAgICAgICAKCiAgICAgICAgICAgIDxpbWcgc3JjPSIvYnVuZGxlcy9mb25jaWFpbnRlcm5ldC9pbWFnZXMvaW1tb2R2aXNvci9yYXRpbmctZnVsbC5wbmc/dmVyc2lvbj0xNTg1NTkxMzI0IiB3aWR0aD0iMjVweCIgaGVpZ2h0PSIyNXB4IiAvPgogICAgICAgICAgICA8aW1nIHNyYz0iL2J1bmRsZXMvZm9uY2lhaW50ZXJuZXQvaW1hZ2VzL2ltbW9kdmlzb3IvcmF0aW5nLWZ1bGwucG5nP3ZlcnNpb249MTU4NTU5MTMyNCIgd2lkdGg9IjI1cHgiIGhlaWdodD0iMjVweCIgLz4KICAgICAgICAgICAgPGltZyBzcmM9Ii9idW5kbGVzL2ZvbmNpYWludGVybmV0L2ltYWdlcy9pbW1vZHZpc29yL3JhdGluZy1mdWxsLnBuZz92ZXJzaW9uPTE1ODU1OTEzMjQiIHdpZHRoPSIyNXB4IiBoZWlnaHQ9IjI1cHgiIC8+CiAgICAgICAgICAgIDxpbWcgc3JjPSIvYnVuZGxlcy9mb25jaWFpbnRlcm5ldC9pbWFnZXMvaW1tb2R2aXNvci9yYXRpbmctZnVsbC5wbmc/dmVyc2lvbj0xNTg1NTkxMzI0IiB3aWR0aD0iMjVweCIgaGVpZ2h0PSIyNXB4IiAvPgogICAgICAgIDxpbWcgc3JjPSIvYnVuZGxlcy9mb25jaWFpbnRlcm5ldC9pbWFnZXMvaW1tb2R2aXNvci9yYXRpbmctaGFsZi5wbmc/dmVyc2lvbj0xNTg1NTkxMzI0IiB3aWR0aD0iMjVweCIgaGVpZ2h0PSIyNXB4IiAvPgogICAgICAgIDwvZGl2PgogICAgICAgIDxkaXYgY2xhc3M9ImJsb2NrLWltbW9kdmlzb3JfX2RhdGUgdGV4dC1jZW50ZXIiPjMwLzAzLzIwMjA8L2Rpdj4KICAgICAgICA8ZGl2IGNsYXNzPSJ0ZXh0LWNlbnRlciIKICAgICAgICAgICAgIGl0ZW1zY29wZT0iIgogICAgICAgICAgICAgaXRlbXR5cGU9Imh0dHA6Ly9kYXRhLXZvY2FidWxhcnkub3JnL1Jldmlldy1hZ2dyZWdhdGUiCiAgICAgICAgPgogICAgICAgICAgICA8ZGl2PgogICAgICAgICAgICAgICAgPHNwYW4gaXRlbXByb3A9Iml0ZW1yZXZpZXdlZCI+Rm9uY2lhPC9zcGFuPgogICAgICAgICAgICAgICAgZXN0IG5vdMOpCiAgICAgICAgICAgICAgICA8c3BhbiBpdGVtcHJvcD0icmF0aW5nIiBpdGVtc2NvcGU9IiIgaXRlbXR5cGU9Imh0dHA6Ly9kYXRhLXZvY2FidWxhcnkub3JnL1JhdGluZyI+CiAgICAgICAgICAgICAgICAgICAgPHNwYW4gaXRlbXByb3A9ImF2ZXJhZ2UiPjQuNTwvc3Bhbj4vPHNwYW4gaXRlbXByb3A9ImJlc3QiPjU8L3NwYW4+CiAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJibG9jay1pbW1vZHZpc29yX19hdmlzIj4KICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJ0ZXh0LXNtbGwiPgogICAgICAgICAgICAgICAgICAgIHNlbG9uIDxzcGFuIGl0ZW1wcm9wPSJ2b3RlcyI+Njk4NDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICBhdmlzIGNsaWVudHMgc3VyCiAgICAgICAgICAgICAgICAgICAgPHNwYW4gaXRlbXByb3A9InJldmlld2VyIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly93d3cuaW1tb2R2aXNvci5jb20vcHJvL2ZvbmNpYS10cmFuc2FjdGlvbi1hbnRvbnktOTIxODgtNy5odG1sICIKICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3M9ImJsb2NrLWltbW9kdmlzb3JfX2xpZW4iCiAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlbD0ibm9mb2xsb3ciCiAgICAgICAgICAgICAgICAgICAgICAgICAgIHRhcmdldD0iX2JsYW5rIj5JbW1vZHZpc29yPC9hPgogICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9kaXY+CgogICAgPC9hcnRpY2xlPgo8L3NlY3Rpb24+CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICA8c2VjdGlvbiBjbGFzcz0iU2lkZWJhci1ibG9jayBTaWRlYmFyLWJsb2NrLS1wYWRkaW5nIFNpZGViYXItYmxvY2stLWVzdGltYXRpb24iPgogICAgICAgICAgICAgICAgICAgIDxhcnRpY2xlIGNsYXNzPSJQdXNoQXNpZGUiPgoKICAgICAgICAgICAgICAgIDxoMyBjbGFzcz0iUHVzaEFzaWRlLXRpdGxlIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSAgaHJlZj0iL2VzdGltZXItc29uLWJpZW4iPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3ZnIGNsYXNzPSJpY29uIiBzdHlsZT0id2lkdGg6MzBweDtoZWlnaHQ6MzBweCIgYXJpYS1oaWRkZW49InRydWUiPjx1c2UgeGxpbms6aHJlZj0iL2J1bmRsZXMvZm9uY2lhaW50ZXJuZXQvc3ZnL2ljb25zLnN2ZyNJY29uLS1jYWxjdWxhdG9yIj48L3VzZT48L3N2Zz4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgRXN0aW1lciBtb24gYmllbgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9oMz4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9IlB1c2hBc2lkZS1kZXNjIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJQdXNoQXNpZGUtbG9jYWxpdGUiPiBQYXJpcyAgOiA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgPHA+ICAgIGLDqW7DqWZpY2lleiBkJiMwMzk7dW5lIGVzdGltYXRpb24gZ3JhdHVpdGUgZGUgdm90cmUgYXBwYXJ0ZW1lbnQgb3UgbWFpc29uLjwvcD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8cCBjbGFzcz0iUHVzaEFzaWRlLWxpbmsiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhICBjbGFzcz0iQnRuIEJ0bi0tc21hbGwiIGhyZWY9Ii9lc3RpbWVyLXNvbi1iaWVuIj48c3BhbiBjbGFzcz0iZXpzdHJpbmctZmllbGQiPkomIzAzOTtlc3RpbWUgbW9uIGJpZW48L3NwYW4+PC9hPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3A+CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGlkPSJyZXN1bHQtZXN0aW1hdGlvbiI+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0YWJsZSBjbGFzcz0iRXN0aW1hdGlvblRhYmxlIj4KICAgIDx0aGVhZD4KICAgIDx0cj4KICAgICAgICA8dGg+RGVybmllcnMgYmllbnMgZXN0aW3DqXM8L3RoPgogICAgICAgIDx0aD5Qcml4IGVzdGltw6k8YnI+UHJpeC9twrI8L3RoPgogICAgPC90cj4KICAgIDwvdGhlYWQ+CiAgICA8dGJvZHk+CiAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgPHRkPkVzdGltYXRpb24gYXBwYXJ0ZW1lbnQgNDMgbcKyPGJyPgogICAgICAgICAgICAgICAgUGFyaXM8L3RkPgogICAgICAgICAgICA8dGQ+NDM1IDYwMCDigqw8YnI+MTAgMTMwIOKCrC9twrI8L3RkPgogICAgICAgIDwvdHI+CiAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgPHRkPkVzdGltYXRpb24gYXBwYXJ0ZW1lbnQgMTUwIG3Csjxicj4KICAgICAgICAgICAgICAgIFBhcmlzPC90ZD4KICAgICAgICAgICAgPHRkPjEgNzE5IDEwMCDigqw8YnI+MTEgNDYxIOKCrC9twrI8L3RkPgogICAgICAgIDwvdHI+CiAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgPHRkPkVzdGltYXRpb24gYXBwYXJ0ZW1lbnQgMzggbcKyPGJyPgogICAgICAgICAgICAgICAgUGFyaXM8L3RkPgogICAgICAgICAgICA8dGQ+NDQ2IDYwMCDigqw8YnI+MTEgNzUzIOKCrC9twrI8L3RkPgogICAgICAgIDwvdHI+CiAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgPHRkPkVzdGltYXRpb24gYXBwYXJ0ZW1lbnQgMjcgbcKyPGJyPgogICAgICAgICAgICAgICAgUGFyaXM8L3RkPgogICAgICAgICAgICA8dGQ+MzQ5IDgwMCDigqw8YnI+MTIgOTU2IOKCrC9twrI8L3RkPgogICAgICAgIDwvdHI+CiAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgPHRkPkVzdGltYXRpb24gYXBwYXJ0ZW1lbnQgMzAgbcKyPGJyPgogICAgICAgICAgICAgICAgUGFyaXM8L3RkPgogICAgICAgICAgICA8dGQ+MzAxIDUwMCDigqw8YnI+MTAgMDUwIOKCrC9twrI8L3RkPgogICAgICAgIDwvdHI+CiAgICAgICAgPC90Ym9keT4KPC90YWJsZT4KCiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgPC9hcnRpY2xlPgogICAgICAgICAgICAgICAgICAgIDxhcnRpY2xlIGNsYXNzPSJQdXNoQXNpZGUiPgoKICAgICAgICAgICAgICAgIDxoMyBjbGFzcz0iUHVzaEFzaWRlLXRpdGxlIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSAgdGFyZ2V0PSJfYmxhbmsiICBocmVmPSIvZXN0aW1hdGlvbi1sb3llciI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzdmcgY2xhc3M9Imljb24iIHN0eWxlPSJ3aWR0aDozMHB4O2hlaWdodDozMHB4IiBhcmlhLWhpZGRlbj0idHJ1ZSI+PHVzZSB4bGluazpocmVmPSIvYnVuZGxlcy9mb25jaWFpbnRlcm5ldC9zdmcvaWNvbnMuc3ZnI0ljb24tLWNhbGN1bGF0b3IiPjwvdXNlPjwvc3ZnPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBFc3RpbWVyIG1vbiBsb3llcgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9oMz4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9IlB1c2hBc2lkZS1kZXNjIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHA+QsOpbsOpZmljaWV6IGQndW4gZXN0aW1hdGlvbiBncmF0dWl0ZSBkdSBsb3llciBkZSB2b3RyZSBhcHBhcnRlbWVudC48L3A+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPHAgY2xhc3M9IlB1c2hBc2lkZS1saW5rIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSAgdGFyZ2V0PSJfYmxhbmsiICBjbGFzcz0iQnRuIEJ0bi0tc21hbGwiIGhyZWY9Ii9lc3RpbWF0aW9uLWxveWVyIj48c3BhbiBjbGFzcz0iZXpzdHJpbmctZmllbGQiPkomIzAzOTtlc3RpbWUgbW9uIGxveWVyPC9zcGFuPjwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9wPgoKICAgICAgICAgICAgICAgIAogICAgICAgICAgICA8L2FydGljbGU+CiAgICAgICAgICAgIDwvc2VjdGlvbj4KCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c2VjdGlvbiBjbGFzcz0iU2lkZWJhci1ibG9jayBTaWRlYmFyLWJsb2NrLS1wYWRkaW5nIj4KICAgICAgICAgICAgICAgICAgICA8YXJ0aWNsZSBjbGFzcz0iUHVzaEFzaWRlIj4KCiAgICAgICAgICAgICAgICA8aDMgY2xhc3M9IlB1c2hBc2lkZS10aXRsZSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgdGFyZ2V0PSJfYmxhbmsiIGhyZWY9Imh0dHA6Ly9kZW1lbmFnZXIuZm9uY2lhLmNvbS8iPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3ZnIGNsYXNzPSJpY29uIiBzdHlsZT0id2lkdGg6MzBweDtoZWlnaHQ6MzBweCIgYXJpYS1oaWRkZW49InRydWUiPjx1c2UgeGxpbms6aHJlZj0iL2J1bmRsZXMvZm9uY2lhaW50ZXJuZXQvc3ZnL2ljb25zLnN2ZyNJY29uLS1ob21lIj48L3VzZT48L3N2Zz4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgRMOpbcOpbmFnZXIgc2VyZWluIGF2ZWMgRm9uY2lhICEgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2gzPgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iUHVzaEFzaWRlLWRlc2MiPgogICAgICAgICAgICAgICAgICAgICAgICA8cD5Ew6ljb3V2cmV6IG5vcyBzZXJ2aWNlcyBwcmF0aXF1ZXMgcG91ciByw6l1c3NpciB2b3RyZSBkw6ltw6luYWdlbWVudC48L3A+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJQdXNoQXNpZGUtbGluayI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgdGFyZ2V0PSJfYmxhbmsiIGhyZWY9Imh0dHA6Ly9kZW1lbmFnZXIuZm9uY2lhLmNvbS8iPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImV6c3RyaW5nLWZpZWxkIj5FbiBzYXZvaXIgcGx1czwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3A+CiAgICAgICAgICAgIDwvYXJ0aWNsZT4KICAgICAgICAgICAgPC9zZWN0aW9uPgoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNlY3Rpb24gY2xhc3M9IlNpZGViYXItZW5jYXJ0IFNpZGViYXItZW5jYXJ0LS1wYWRkaW5nIj4KICAgIDxoMz5Ob3MgYW5ub25jZXMgUGFyaXMgKDc1KTwvaDM+CiAgICA8dWwgY2xhc3M9IlNpZGViYXItZW5jYXJ0LS1jb250YWluZXIiPgogICAgICAgICAgICAgICAgICAgIDxsaT48YSBocmVmPSIvYWNoYXQvcGFyaXMtNzUvYXBwYXJ0ZW1lbnQtLW1haXNvbi9hcHBhcnRlbWVudCI+QWNoYXQgYXBwYXJ0ZW1lbnQgUGFyaXMgKDc1KTwvYT48L2xpPgogICAgICAgICAgICAgICAgICAgIDxsaT48YSBocmVmPSIvYWNoYXQvcGFyaXMtNzUvYXBwYXJ0ZW1lbnQtLW1haXNvbi9sb2NhbC1jb21tZXJjaWFsIj5BY2hhdCBsb2NhbCBjb21tZXJjaWFsIFBhcmlzICg3NSk8L2E+PC9saT4KICAgICAgICAgICAgICAgICAgICA8bGk+PGEgaHJlZj0iL2FjaGF0L3BhcmlzLTc1L2FwcGFydGVtZW50LS1tYWlzb24vcGFya2luZyI+QWNoYXQgcGFya2luZyBQYXJpcyAoNzUpPC9hPjwvbGk+CiAgICAgICAgICAgIDwvdWw+CiAgICA8aDM+Tm9zIGFubm9uY2VzIMOgIHByb3hpbWl0w6k8L2gzPgogICAgPHVsIGNsYXNzPSJTaWRlYmFyLWVuY2FydC0tY29udGFpbmVyIj4KICAgICAgICAgICAgICAgICAgICA8bGk+PGEgaHJlZj0iL2FjaGF0L3BhcmlzLTc1L2FwcGFydGVtZW50LS1tYWlzb24wMDUvYXBwYXJ0ZW1lbnQiPkFjaGF0IGFwcGFydGVtZW50ICBQYXJpcyA1w6htZTwvYT48L2xpPgogICAgICAgICAgICAgICAgICAgIDxsaT48YSBocmVmPSIvYWNoYXQvcGFyaXMtNzUvYXBwYXJ0ZW1lbnQtLW1haXNvbjAwNi9hcHBhcnRlbWVudCI+QWNoYXQgYXBwYXJ0ZW1lbnQgIFBhcmlzIDbDqG1lPC9hPjwvbGk+CiAgICAgICAgICAgICAgICAgICAgPGxpPjxhIGhyZWY9Ii9hY2hhdC9wYXJpcy03NS9hcHBhcnRlbWVudC0tbWFpc29uMDEwL2FwcGFydGVtZW50Ij5BY2hhdCBhcHBhcnRlbWVudCAgUGFyaXMgMTDDqG1lPC9hPjwvbGk+CiAgICAgICAgICAgICAgICAgICAgPGxpPjxhIGhyZWY9Ii9hY2hhdC9wYXJpcy03NS9hcHBhcnRlbWVudC0tbWFpc29uMDExL2FwcGFydGVtZW50Ij5BY2hhdCBhcHBhcnRlbWVudCAgUGFyaXMgMTHDqG1lPC9hPjwvbGk+CiAgICAgICAgICAgICAgICAgICAgPGxpPjxhIGhyZWY9Ii9hY2hhdC9wYXJpcy03NS9hcHBhcnRlbWVudC0tbWFpc29uMDEyL2FwcGFydGVtZW50Ij5BY2hhdCBhcHBhcnRlbWVudCAgUGFyaXMgMTLDqG1lPC9hPjwvbGk+CiAgICAgICAgICAgICAgICAgICAgPGxpPjxhIGhyZWY9Ii9hY2hhdC9wYXJpcy03NS9hcHBhcnRlbWVudC0tbWFpc29uMDEzL2FwcGFydGVtZW50Ij5BY2hhdCBhcHBhcnRlbWVudCAgUGFyaXMgMTPDqG1lPC9hPjwvbGk+CiAgICAgICAgICAgICAgICAgICAgPGxpPjxhIGhyZWY9Ii9hY2hhdC9wYXJpcy03NS9hcHBhcnRlbWVudC0tbWFpc29uMDE0L2FwcGFydGVtZW50Ij5BY2hhdCBhcHBhcnRlbWVudCAgUGFyaXMgMTTDqG1lPC9hPjwvbGk+CiAgICAgICAgICAgICAgICAgICAgPGxpPjxhIGhyZWY9Ii9hY2hhdC9wYXJpcy03NS9hcHBhcnRlbWVudC0tbWFpc29uMDE1L2FwcGFydGVtZW50Ij5BY2hhdCBhcHBhcnRlbWVudCAgUGFyaXMgMTXDqG1lPC9hPjwvbGk+CiAgICAgICAgICAgICAgICAgICAgPGxpPjxhIGhyZWY9Ii9hY2hhdC9wYXJpcy03NS9hcHBhcnRlbWVudC0tbWFpc29uMDE2L2FwcGFydGVtZW50Ij5BY2hhdCBhcHBhcnRlbWVudCAgUGFyaXMgMTbDqG1lPC9hPjwvbGk+CiAgICAgICAgICAgICAgICAgICAgPGxpPjxhIGhyZWY9Ii9hY2hhdC9wYXJpcy03NS9hcHBhcnRlbWVudC0tbWFpc29uMDE4L2FwcGFydGVtZW50Ij5BY2hhdCBhcHBhcnRlbWVudCAgUGFyaXMgMTjDqG1lPC9hPjwvbGk+CiAgICAgICAgICAgICAgICAgICAgPGxpPjxhIGhyZWY9Ii9hY2hhdC9wYXJpcy03NS9hcHBhcnRlbWVudC0tbWFpc29uMDE5L2FwcGFydGVtZW50Ij5BY2hhdCBhcHBhcnRlbWVudCAgUGFyaXMgMTnDqG1lPC9hPjwvbGk+CiAgICAgICAgICAgICAgICAgICAgPGxpPjxhIGhyZWY9Ii9hY2hhdC9wYXJpcy03NS9hcHBhcnRlbWVudC0tbWFpc29uMDIwL2FwcGFydGVtZW50Ij5BY2hhdCBhcHBhcnRlbWVudCAgUGFyaXMgMjDDqG1lPC9hPjwvbGk+CiAgICAgICAgICAgIDwvdWw+Cjwvc2VjdGlvbj4KCiAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIDwvYXNpZGU+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgPC9kaXY+CgogICAgICAgIDwvc2VjdGlvbj4KCiAgICA8L2Rpdj4KCgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iQnJlYWRjcnVtYnMiPgogICAgICAgICAgICA8cCAgICAgY2xhc3M9IkJyZWFkY3J1bWJzLWlubmVyIiBkYXRhLXR5cGU9InlvbG8iPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuPkZvbmNpYTwvc3Bhbj4gICAgICAgICAgICAgICAgICAgICAgICAgICAgCgogICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIvYWNoYXQiICAgICBjbGFzcz0iQnJlYWRjcnVtYnMtbGluayI+QWNoYXQ8L2E+ICAgICAgICAgICAgICAgICAgICAgICAgICAgIAoKICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iL2FjaGF0L3BhcmlzLTc1IiAgICAgY2xhc3M9IkJyZWFkY3J1bWJzLWxpbmsiPlBhcmlzIDc1PC9hPiAgICAgICAgICAgICAgICAgICAgICAgICAgICAKCiAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuPkFwcGFydGVtZW50IOKAoiBNYWlzb248L3NwYW4+ICAgICAgICAgICAgICAgICAgICAgICAgICAgIAoKICAgIAoKICAgICAgICAgICAgPC9wPgogICAgICAgIDwvZGl2PgogICAgCgoKICAgICAgICAgICAgCiAgICAgICAgCjxmb290ZXIgY2xhc3M9IkZvb3RlciIgcm9sZT0iY29udGVudGluZm8iPgoKICAgIDxkaXYgY2xhc3M9IkZvb3Rlci1yb3cgRm9vdGVyLXJvdy0taWRlbnRpdHkgRm9vdGVyLXJvdy0taWRlbnRpdHktbW9iaWxlIj4KICAgICAgICA8ZGl2IGNsYXNzPSJGb290ZXItMnBhcnQiPgogICAgICAgICAgICA8cCBjbGFzcz0iRm9vdGVyLXBhcnQxIEZvb3Rlci1wYXJ0MS0tbG9nbyI+CiAgICAgICAgICAgICAgICA8aW1nIHdpZHRoPSIxNTQiIGhlaWdodD0iNTYiIHNyYz0iaHR0cHM6Ly9waG90b3MuZm9uY2lhLm5ldC9pbWFnZXMvRm9uY2lhX2xvZ292XzMwOF84Ni5wbmciIGFsdD0iRm9uY2lhIj4KICAgICAgICAgICAgPC9wPgogICAgICAgICAgICA8dWwgY2xhc3M9IkZvb3Rlci1wYXJ0MiBGb290ZXItcGFydDItLWxpbmtzIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgICA8YSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhyZWY9Ii9tZW50aW9ucy1sZWdhbGVzIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtYmVoYXQ9ImxpbmstTWVudGlvbnNfbMOpZ2FsZXMiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBNZW50aW9ucyBsw6lnYWxlcwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgICAgPGEgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBocmVmPSJodHRwczovL2ZyLmZvbmNpYS5jb20vcGxhbi1kdS1zaXRlIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtYmVoYXQ9ImxpbmstUGxhbl9kdV9zaXRlIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgUGxhbiBkdSBzaXRlCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgICA8YSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhyZWY9Ii8jZm9uY2lhX2NvbnNlbnRlbWVudHMiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1iZWhhdD0ibGluay1HZXN0aW9uX2Rlc19jb29raWVzIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgR2VzdGlvbiBkZXMgY29va2llcwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgICAgPGEgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBocmVmPSIvY2hhcnRlLWRlLXByb3RlY3Rpb24tZGVzLWRvbm5lZXMiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1iZWhhdD0ibGluay1DaGFydGVfZGVfcHJvdGVjdGlvbl9kZXNfZG9ubsOpZXNfIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgQ2hhcnRlIGRlIHByb3RlY3Rpb24gZGVzIGRvbm7DqWVzIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgICAgPGEgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBocmVmPSIvbm90cmUtcHJlb2NjdXBhdGlvbi1sYS1zZWN1cml0ZS1kZS12b3MtZG9ubmVlcyIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkYXRhLWJlaGF0PSJsaW5rLVPDqWN1cml0w6lfSW5mb3JtYXRpcXVlIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgU8OpY3VyaXTDqSBJbmZvcm1hdGlxdWUKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICAgIDxhICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaHJlZj0iL3NlcnZpY2VzIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtYmVoYXQ9ImxpbmstU2VydmljZXMiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBTZXJ2aWNlcwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgICAgPGEgIHRhcmdldD0iX2JsYW5rIiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhyZWY9Imh0dHA6Ly9wcmVzc3Jvb20uZm9uY2lhLmNvbS8iCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1iZWhhdD0ibGluay1Fc3BhY2VfUHJlc3NlIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgRXNwYWNlIFByZXNzZQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgICAgPGEgIHRhcmdldD0iX2JsYW5rIiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhyZWY9Imh0dHA6Ly9mb25jaWEtcmVjcnV0ZS50YWxlbnQtc29mdC5jb20vYWNjdWVpbC5hc3B4IgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtYmVoYXQ9ImxpbmstTm9zX29mZnJlc19k4oCZZW1wbG9pIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgTm9zIG9mZnJlcyBk4oCZZW1wbG9pCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgICA8YSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhyZWY9Ii9hY2hhdC9hdmlzLWNsaWVudHMiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1iZWhhdD0ibGluay1BdmlzX2NsaWVudHMiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBBdmlzIGNsaWVudHMKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC91bD4KICAgICAgICA8L2Rpdj4KICAgIDwvZGl2PgoKICAgIDxkaXYgY2xhc3M9IkZvb3Rlci1wYXJ0MSBGb290ZXItcGFydDEtLXNvY2lhbCI+CiAgICAgICAgICAgICAgICAgICAgPGEgY2xhc3M9IkZvb3Rlci0taGF1dC1kZS1wYWdlLS1kZXNrdG9wIiAgdGFyZ2V0PSJfYmxhbmsiICBocmVmPSJodHRwczovL3d3dy5mYWNlYm9vay5jb20vRm9uY2lhIiBkYXRhLWJlaGF0PSJzb2NpYWxMaW5rLUZhY2Vib29rIG1lbnUgZHJvaXQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3ZnIGNsYXNzPSJpY29uIiBzdHlsZT0id2lkdGg6MzhweDtoZWlnaHQ6MzhweCIgYXJpYS1oaWRkZW49InRydWUiPjx1c2UgeGxpbms6aHJlZj0iL2J1bmRsZXMvZm9uY2lhaW50ZXJuZXQvc3ZnL2ljb25zLnN2ZyNJY29uLS1mYWNlYm9vay1yZXNwb25zaXZlIj48L3VzZT48L3N2Zz4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgPGEgY2xhc3M9IkZvb3Rlci0taGF1dC1kZS1wYWdlIiAgdGFyZ2V0PSJfYmxhbmsiICBocmVmPSJodHRwczovL3d3dy5mYWNlYm9vay5jb20vRm9uY2lhIiBkYXRhLWJlaGF0PSJzb2NpYWxMaW5rLUZhY2Vib29rIG1lbnUgZHJvaXQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3ZnIGNsYXNzPSJpY29uIiBzdHlsZT0id2lkdGg6MzhweDtoZWlnaHQ6MzhweCIgYXJpYS1oaWRkZW49InRydWUiPjx1c2UgeGxpbms6aHJlZj0iL2J1bmRsZXMvZm9uY2lhaW50ZXJuZXQvc3ZnL2ljb25zLnN2ZyNJY29uLS1mYWNlYm9vazIiPjwvdXNlPjwvc3ZnPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICAgIDxhIGNsYXNzPSJGb290ZXItLWhhdXQtZGUtcGFnZS0tZGVza3RvcCIgIHRhcmdldD0iX2JsYW5rIiAgaHJlZj0iaHR0cHM6Ly90d2l0dGVyLmNvbS9mb25jaWEiIGRhdGEtYmVoYXQ9InNvY2lhbExpbmstdHdpdHRlciBtZW51IGRyb2l0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHN2ZyBjbGFzcz0iaWNvbiIgc3R5bGU9IndpZHRoOjM4cHg7aGVpZ2h0OjM4cHgiIGFyaWEtaGlkZGVuPSJ0cnVlIj48dXNlIHhsaW5rOmhyZWY9Ii9idW5kbGVzL2ZvbmNpYWludGVybmV0L3N2Zy9pY29ucy5zdmcjSWNvbi0tdHdpdHRlci1yZXBvbnNpdmUiPjwvdXNlPjwvc3ZnPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICA8YSBjbGFzcz0iRm9vdGVyLS1oYXV0LWRlLXBhZ2UiICB0YXJnZXQ9Il9ibGFuayIgIGhyZWY9Imh0dHBzOi8vdHdpdHRlci5jb20vZm9uY2lhIiBkYXRhLWJlaGF0PSJzb2NpYWxMaW5rLXR3aXR0ZXIgbWVudSBkcm9pdCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzdmcgY2xhc3M9Imljb24iIHN0eWxlPSJ3aWR0aDozOHB4O2hlaWdodDozOHB4IiBhcmlhLWhpZGRlbj0idHJ1ZSI+PHVzZSB4bGluazpocmVmPSIvYnVuZGxlcy9mb25jaWFpbnRlcm5ldC9zdmcvaWNvbnMuc3ZnI0ljb24tLXR3aXR0ZXIyIj48L3VzZT48L3N2Zz4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgICA8YSBjbGFzcz0iRm9vdGVyLS1oYXV0LWRlLXBhZ2UtLWRlc2t0b3AiICB0YXJnZXQ9Il9ibGFuayIgIGhyZWY9Imh0dHBzOi8vd3d3LnlvdXR1YmUuY29tL3VzZXIvZm9uY2lhIiBkYXRhLWJlaGF0PSJzb2NpYWxMaW5rLXlvdXR1YmUgbWVudSBkcm9pdCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzdmcgY2xhc3M9Imljb24iIHN0eWxlPSJ3aWR0aDozOHB4O2hlaWdodDozOHB4IiBhcmlhLWhpZGRlbj0idHJ1ZSI+PHVzZSB4bGluazpocmVmPSIvYnVuZGxlcy9mb25jaWFpbnRlcm5ldC9zdmcvaWNvbnMuc3ZnI0ljb24tLXlvdXR1YmUtcmVzcG9uc2l2ZSI+PC91c2U+PC9zdmc+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgIDxhIGNsYXNzPSJGb290ZXItLWhhdXQtZGUtcGFnZSIgIHRhcmdldD0iX2JsYW5rIiAgaHJlZj0iaHR0cHM6Ly93d3cueW91dHViZS5jb20vdXNlci9mb25jaWEiIGRhdGEtYmVoYXQ9InNvY2lhbExpbmsteW91dHViZSBtZW51IGRyb2l0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHN2ZyBjbGFzcz0iaWNvbiIgc3R5bGU9IndpZHRoOjM4cHg7aGVpZ2h0OjM4cHgiIGFyaWEtaGlkZGVuPSJ0cnVlIj48dXNlIHhsaW5rOmhyZWY9Ii9idW5kbGVzL2ZvbmNpYWludGVybmV0L3N2Zy9pY29ucy5zdmcjSWNvbi0teW91dHViZTIiPjwvdXNlPjwvc3ZnPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICAgIDxhIGNsYXNzPSJGb290ZXItLWhhdXQtZGUtcGFnZS0tZGVza3RvcCIgIHRhcmdldD0iX2JsYW5rIiAgaHJlZj0iaHR0cHM6Ly93d3cubGlua2VkaW4uY29tL2NvbXBhbnkvNzcyOTE3LyIgZGF0YS1iZWhhdD0ic29jaWFsTGluay1saW5rZWRpbiBtZW51IGRyb2l0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHN2ZyBjbGFzcz0iaWNvbiIgc3R5bGU9IndpZHRoOjM4cHg7aGVpZ2h0OjM4cHgiIGFyaWEtaGlkZGVuPSJ0cnVlIj48dXNlIHhsaW5rOmhyZWY9Ii9idW5kbGVzL2ZvbmNpYWludGVybmV0L3N2Zy9pY29ucy5zdmcjSWNvbi0tbGlua2VkaW4tcmVzcG9uc2l2ZSI+PC91c2U+PC9zdmc+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgIDxhIGNsYXNzPSJGb290ZXItLWhhdXQtZGUtcGFnZSIgIHRhcmdldD0iX2JsYW5rIiAgaHJlZj0iaHR0cHM6Ly93d3cubGlua2VkaW4uY29tL2NvbXBhbnkvNzcyOTE3LyIgZGF0YS1iZWhhdD0ic29jaWFsTGluay1saW5rZWRpbiBtZW51IGRyb2l0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHN2ZyBjbGFzcz0iaWNvbiIgc3R5bGU9IndpZHRoOjM4cHg7aGVpZ2h0OjM4cHgiIGFyaWEtaGlkZGVuPSJ0cnVlIj48dXNlIHhsaW5rOmhyZWY9Ii9idW5kbGVzL2ZvbmNpYWludGVybmV0L3N2Zy9pY29ucy5zdmcjSWNvbi0tbGlua2VkaW4iPjwvdXNlPjwvc3ZnPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgIAogICAgICAgIDxhIGNsYXNzPSJGb290ZXItLWhhdXQtZGUtcGFnZSIgaHJlZj0iIyIgb25DbGljaz0iJCgnaHRtbCwgYm9keScpLmFuaW1hdGUoe3Njcm9sbFRvcDowfSwgJ3Nsb3cnKTsgcmV0dXJuIGZhbHNlOyI+CiAgICAgICAgICAgIDxzdmcgY2xhc3M9Imljb24iIHN0eWxlPSJ3aWR0aDozOHB4O2hlaWdodDozOHB4IiBhcmlhLWhpZGRlbj0idHJ1ZSI+PHVzZSB4bGluazpocmVmPSIvYnVuZGxlcy9mb25jaWFpbnRlcm5ldC9zdmcvaWNvbnMuc3ZnI0ljb24tLWhhdXRfZGVfcGFnZV9ncmlzIj48L3VzZT48L3N2Zz4KICAgICAgICA8L2E+CiAgICA8L2Rpdj4KCiAgICA8ZGl2IGNsYXNzPSJGb290ZXItcm93IEZvb3Rlci1yb3ctLWxpbmtzMSI+CiAgICAgICAgPGRpdiBjbGFzcz0iRm9vdGVyLWNvbHMiPgogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJGb290ZXItY29sIEZvb3Rlci1jb2wtLWxlZnQiPgogICAgICAgICAgICAgICAgPHVsIGNsYXNzPSJGb290ZXItbWFpbkxpbmtzIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSAgaHJlZj0iaHR0cHM6Ly9mci5mb25jaWEuY29tL2FjaGF0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBBY2hldGVyIHVuIGJpZW4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhICBocmVmPSIvZmFpcmUtZ2VyZXItbWEtbG9jYXRpb24tcGFyLWZvbmNpYSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgRmFpcmUgZ8OpcmVyIG1hIGxvY2F0aW9uCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSAgaHJlZj0iaHR0cHM6Ly9mci5mb25jaWEuY29tL2VzdGltZXItc29uLWJpZW4iPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEVzdGltYXRpb24gYmllbiBpbW1vYmlsaWVyCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSAgaHJlZj0iL2wtaW52ZXN0aXNzZW1lbnQtaW1tb2JpbGllciI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgSW52ZXN0aXIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhICBocmVmPSIvdm90cmUtYWNoYXQtZGFucy1sLWltbW9iaWxpZXItbmV1Zi1hdmVjLWZvbmNpYSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgQWNoYXQgaW1tb2JpbGllciBuZXVmIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdWw+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJGb290ZXItY29sIEZvb3Rlci1jb2wtLXJpZ2h0Ij4KICAgICAgICAgICAgICAgIDx1bCBjbGFzcz0iRm9vdGVyLW1haW5MaW5rcyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgIHRhcmdldD0iX2JsYW5rIiAgaHJlZj0iaHR0cHM6Ly9mci5mb25jaWEuY29tL2xvY2F0aW9uIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBMb3VlciB1biBiaWVuCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSAgaHJlZj0iL2ZhaXJlLWdlcmVyLXVuZS1jb3Byb3ByaWV0ZSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgRmFpcmUgZ8OpcmVyIHVuZSBjb3Byb3ByacOpdMOpCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSAgaHJlZj0iaHR0cHM6Ly9mci5mb25jaWEuY29tL2VzdGltYXRpb24tbG95ZXIiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEVzdGltYXRpb24gbG95ZXIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhICBocmVmPSIvbG9naW4iPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIE15Rm9uY2lhCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSAgaHJlZj0iaHR0cHM6Ly9mci5mb25jaWEuY29tL2FjdHVhbGl0ZXMtZW4tcGVyaW9kZS1kZS1jb25maW5lbWVudCNmYXFhY3R1YWxpdGVzIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBGQVEKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3VsPgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgIDwvZGl2PgoKICAgIDxkaXYgY2xhc3M9IkZvb3Rlci1yb3cgRm9vdGVyLXJvdy0taWRlbnRpdHkgRm9vdGVyLXJvdy0taWRlbnRpdHktcmVmIj4KICAgICAgICA8ZGl2IGNsYXNzPSJGb290ZXItMnBhcnQiPgogICAgICAgICAgICA8cCBjbGFzcz0iRm9vdGVyLXBhcnQxIEZvb3Rlci1wYXJ0MS0tbG9nbyI+CiAgICAgICAgICAgICAgICA8aW1nIHdpZHRoPSIxNTQiIGhlaWdodD0iNDMiIHNyYz0iaHR0cHM6Ly9waG90b3MuZm9uY2lhLm5ldC9pbWFnZXMvRm9uY2lhX2xvZ292XzMwOF84Ni5wbmciIGFsdD0iRm9uY2lhIj4KICAgICAgICAgICAgPC9wPgogICAgICAgICAgICA8dWwgY2xhc3M9IkZvb3Rlci1wYXJ0MiBGb290ZXItcGFydDItLWxpbmtzIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgPGEgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhyZWY9Ii9tZW50aW9ucy1sZWdhbGVzIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1iZWhhdD0ibGluay1NZW50aW9uc19sw6lnYWxlcyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBNZW50aW9ucyBsw6lnYWxlcwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgIDxhICAgICAgICAgICAgICAgICAgICAgICAgICAgICBocmVmPSJodHRwczovL2ZyLmZvbmNpYS5jb20vcGxhbi1kdS1zaXRlIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1iZWhhdD0ibGluay1QbGFuX2R1X3NpdGUiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgUGxhbiBkdSBzaXRlCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgPGEgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhyZWY9Ii8jZm9uY2lhX2NvbnNlbnRlbWVudHMiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkYXRhLWJlaGF0PSJsaW5rLUdlc3Rpb25fZGVzX2Nvb2tpZXMiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgR2VzdGlvbiBkZXMgY29va2llcwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgIDxhICAgICAgICAgICAgICAgICAgICAgICAgICAgICBocmVmPSIvY2hhcnRlLWRlLXByb3RlY3Rpb24tZGVzLWRvbm5lZXMiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkYXRhLWJlaGF0PSJsaW5rLUNoYXJ0ZV9kZV9wcm90ZWN0aW9uX2Rlc19kb25uw6llc18iPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgQ2hhcnRlIGRlIHByb3RlY3Rpb24gZGVzIGRvbm7DqWVzIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgIDxhICAgICAgICAgICAgICAgICAgICAgICAgICAgICBocmVmPSIvbm90cmUtcHJlb2NjdXBhdGlvbi1sYS1zZWN1cml0ZS1kZS12b3MtZG9ubmVlcyIKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtYmVoYXQ9ImxpbmstU8OpY3VyaXTDqV9JbmZvcm1hdGlxdWUiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgU8OpY3VyaXTDqSBJbmZvcm1hdGlxdWUKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICA8YSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaHJlZj0iL3NlcnZpY2VzIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1iZWhhdD0ibGluay1TZXJ2aWNlcyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBTZXJ2aWNlcwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgIDxhICB0YXJnZXQ9Il9ibGFuayIgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhyZWY9Imh0dHA6Ly9wcmVzc3Jvb20uZm9uY2lhLmNvbS8iCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkYXRhLWJlaGF0PSJsaW5rLUVzcGFjZV9QcmVzc2UiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgRXNwYWNlIFByZXNzZQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgIDxhICB0YXJnZXQ9Il9ibGFuayIgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhyZWY9Imh0dHA6Ly9mb25jaWEtcmVjcnV0ZS50YWxlbnQtc29mdC5jb20vYWNjdWVpbC5hc3B4IgogICAgICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1iZWhhdD0ibGluay1Ob3Nfb2ZmcmVzX2TigJllbXBsb2kiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgTm9zIG9mZnJlcyBk4oCZZW1wbG9pCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgPGEgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhyZWY9Ii9hY2hhdC9hdmlzLWNsaWVudHMiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkYXRhLWJlaGF0PSJsaW5rLUF2aXNfY2xpZW50cyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBBdmlzIGNsaWVudHMKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC91bD4KICAgICAgICA8L2Rpdj4KICAgIDwvZGl2PgoKICAgIDxkaXYgY2xhc3M9IkZvb3Rlci1yb3cgRm9vdGVyLXJvdy0tZW5kIj4KICAgICAgICA8ZGl2IGNsYXNzPSJGb290ZXItMnBhcnQiPgogICAgICAgICAgICA8cCBjbGFzcz0iRm9vdGVyLXBhcnQyIEZvb3Rlci1wYXJ0Mi0tY29weSI+CiAgICAgICAgICAgICAgICAmY29weTsyMDIwIEZvbmNpYSBHcm91cGUKICAgICAgICAgICAgPC9wPgogICAgICAgIDwvZGl2PgogICAgPC9kaXY+Cgo8L2Zvb3Rlcj4KPC9kaXY+PCEtLUJvZHlXcmFwcGVyLS0+CgogICAgICAgIDxzY3JpcHQgc3JjPSIvY29tcGlsZWQvY29tbW9uLmpzP3ZlcnNpb249MTU4NTU5MTMyMiI+PC9zY3JpcHQ+CjxzY3JpcHQ+CiAgICBmb25jaWEuc2Vzc2lvbnMuaW5pdCg5MDAwMDAsIDE4MDAwMCk7Cjwvc2NyaXB0PgoKPCEtLVtpZiBsdGUgSUUgOV0+PHNjcmlwdCBzcmM9Ii9jb21waWxlZC9zY3JpcHRzLWllOS5qcz92ZXJzaW9uPTE1ODU1OTEzMjIiPjwvc2NyaXB0PjwhW2VuZGlmXS0tPgoKCiAgICAgICAgICAgICAgICAgICAgPHNjcmlwdD4KCiAgICAgICAgICAgIFN0cmluZy5wcm90b3R5cGUuY2FwaXRhbGl6ZUZpcnN0TGV0dGVyID0gZnVuY3Rpb24oKSB7CiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5jaGFyQXQoMCkudG9VcHBlckNhc2UoKSArIHRoaXMuc2xpY2UoMSk7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgICQoZG9jdW1lbnQpLnJlYWR5KGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgICAgIC8vIEZvciBzZWFyY2ggQ3JpdGVyaWFzCiAgICAgICAgICAgICAgICB2YXIgdmFsZXVyUmVjaGVyY2hlID0gZm9uY2lhX2ludGVybmV0LnVwdGlsYWJDcml0ZXJpYVBhcnNlcihqUXVlcnksICQoJy5TZWFyY2hDcml0ZXJpYTpub3QoLnJ3ZC0tbW9iaWxlKScpKTsKICAgICAgICAgICAgICAgIGlmICh2YWxldXJSZWNoZXJjaGUgIT09ICcnKSB7CiAgICAgICAgICAgICAgICAgICAgZGF0YUxheWVyLnB1c2goeyJjdXN0b21DYXRlZ29yaWUiOiAibmF2aWdhdGlvbiIsICJjdXN0b21BY3Rpb24iOiAicmVjaGVyY2hlQXZlY0NyaXRlcmUiLCAiY3VzdG9tTGFiZWwiOiB2YWxldXJSZWNoZXJjaGUsICJldmVudCI6ICJjdXN0b21FdmVudCJ9KTsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICAvLyBDaXR5IHNlYXJjaCB0eXBlCiAgICAgICAgICAgICAgICB2YXIgY2l0eVNlYXJjaFN0cmluZyA9IGZvbmNpYV9pbnRlcm5ldC51cHRpbGFiU2VhcmNoVHlwZVBhcnNlcihqUXVlcnksICQoJy5TZWFyY2hDcml0ZXJpYS5yd2QtLW5vTW9iaWxlIFtkYXRhLWFuYWx5dGljcy1sb2NhdGlvbi10eXBlPSJ2aWxsZSJdJykpOwogICAgICAgICAgICAgICAgaWYgKGNpdHlTZWFyY2hTdHJpbmcgIT09ICcnKSB7CgogICAgICAgICAgICAgICAgICAgIC8vIEFwcGx5IGNoYW5nZXMgdG8gbm9ybWFsaXplCiAgICAgICAgICAgICAgICAgICAgdmFyIGNpdHlTZWFyY2hBcnJheSA9IGNpdHlTZWFyY2hTdHJpbmcuc3BsaXQoJywnKTsKICAgICAgICAgICAgICAgICAgICAvLyBObyBsb25nZXIgdXNlZAovLyAgICAgICAgICAgICAgICAgICAgY2l0eVNlYXJjaEFycmF5LmZvckVhY2goZnVuY3Rpb24odmFsLCBpbmRleCwgdGhlQXJyYXkpewovLyAgICAgICAgICAgICAgICAgICAgICAgIHRoZUFycmF5W2luZGV4XSA9IHZhbC5yZXBsYWNlKC9cKD8oXGR7NX18XGR7Mn0pXCk/L2csICcnKS5yZXBsYWNlKC8tJC9nLCAnJykuY2FwaXRhbGl6ZUZpcnN0TGV0dGVyKCk7Ci8vICAgICAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgICAgICBjaXR5U2VhcmNoU3RyaW5nID0gY2l0eVNlYXJjaEFycmF5LmpvaW4oJywnKTsKICAgICAgICAgICAgICAgICAgICBkYXRhTGF5ZXIucHVzaCh7ImN1c3RvbUNhdGVnb3JpZSI6ICJuYXZpZ2F0aW9uIiwgImN1c3RvbUFjdGlvbiI6ICJ2aWxsZSIsICJjdXN0b21MYWJlbCI6IGNpdHlTZWFyY2hTdHJpbmcsICJldmVudCI6ICJjdXN0b21FdmVudCJ9KTsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICAvLyBEZXBhcnRtZW50IHNlYXJjaCB0eXBlCiAgICAgICAgICAgICAgICB2YXIgZGVwYXJ0bWVudFNlYXJjaFN0cmluZyA9IGZvbmNpYV9pbnRlcm5ldC51cHRpbGFiU2VhcmNoVHlwZVBhcnNlcihqUXVlcnksICQoJy5TZWFyY2hDcml0ZXJpYS5yd2QtLW5vTW9iaWxlIFtkYXRhLWFuYWx5dGljcy1sb2NhdGlvbi10eXBlPSJkZXBhcnRlbWVudCJdJykpOwogICAgICAgICAgICAgICAgaWYgKGRlcGFydG1lbnRTZWFyY2hTdHJpbmcgIT09ICcnKSB7CiAgICAgICAgICAgICAgICAgICAgdmFyIGRlcGFydG1lbnRTZWFyY2hBcnJheSA9IGRlcGFydG1lbnRTZWFyY2hTdHJpbmcuc3BsaXQoJywnKTsKICAgICAgICAgICAgICAgICAgICBkZXBhcnRtZW50U2VhcmNoQXJyYXkuZm9yRWFjaChmdW5jdGlvbih2YWwsIGluZGV4LCB0aGVBcnJheSl7CiAgICAgICAgICAgICAgICAgICAgICAgIHRoZUFycmF5W2luZGV4XSA9IHZhbC5yZXBsYWNlKC9bXlwvXGRdL2csJycpOwogICAgICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgICAgIGRlcGFydG1lbnRTZWFyY2hTdHJpbmcgPSBkZXBhcnRtZW50U2VhcmNoQXJyYXkuam9pbignLCcpOwogICAgICAgICAgICAgICAgICAgIGRhdGFMYXllci5wdXNoKHsiY3VzdG9tQ2F0ZWdvcmllIjogIm5hdmlnYXRpb24iLCAiY3VzdG9tQWN0aW9uIjogImRlcGFydGVtZW50IiwgImN1c3RvbUxhYmVsIjogZGVwYXJ0bWVudFNlYXJjaFN0cmluZywgImV2ZW50IjogImN1c3RvbUV2ZW50In0pOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9KTsKICAgICAgICA8L3NjcmlwdD4KICAgIAogICAgCjwvYm9keT4KPC9odG1sPgo=
    http_version: null
  recorded_at: Tue, 31 Mar 2020 16:38:45 GMT
- request:
    method: get
    uri: https://fr.foncia.com/achat/paris-75016/appartement/1374813.htm
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Mon, 30 Mar 2020 21:26:47 GMT
      Cache-Control:
      - public, s-maxage=31536000
      Content-Type:
      - text/html; charset=UTF-8
      Vary:
      - Accept-Encoding,Origin
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: null
  recorded_at: Tue, 31 Mar 2020 16:38:45 GMT
- request:
    method: get
    uri: https://fr.foncia.com/achat/paris-75008/appartement/1380696.htm
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Tue, 31 Mar 2020 02:30:12 GMT
      Cache-Control:
      - public, s-maxage=31536000
      Content-Type:
      - text/html; charset=UTF-8
      Vary:
      - Accept-Encoding,Origin
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: null
  recorded_at: Tue, 31 Mar 2020 16:38:45 GMT
- request:
    method: get
    uri: https://fr.foncia.com/achat/paris-75006/appartement/1329134.htm
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Tue, 31 Mar 2020 06:51:02 GMT
      Cache-Control:
      - public, s-maxage=31536000
      Content-Type:
      - text/html; charset=UTF-8
      Vary:
      - Accept-Encoding,Origin
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: null
  recorded_at: Tue, 31 Mar 2020 16:38:45 GMT
recorded_with: VCR 5.1.0
