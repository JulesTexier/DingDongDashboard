---
http_interactions:
- request:
    method: get
    uri: http://www.grenelle-immobilier.com/a-vendre/1
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Wed, 15 Apr 2020 14:27:01 GMT
      Server:
      - Apache/2.4.25 (Debian)
      Expires:
      - Thu, 19 Nov 1981 08:52:00 GMT
      Cache-Control:
      - no-store, no-cache, must-revalidate
      Pragma:
      - no-cache
      X-Bobcat-Version:
      - kitty.pryde.20200414.rev1
      Set-Cookie:
      - PHPSESSID=j3pskf0cd1amr2b0gongsrdne0; path=/
      - SRV=c62; path=/
      Vary:
      - Accept-Encoding
      X-Server-Id:
      - cluster6-w2
      Access-Control-Allow-Origin:
      - "*"
      Content-Length:
      - '10033'
      Content-Type:
      - text/html; charset=UTF-8
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: null
  recorded_at: Wed, 15 Apr 2020 14:27:01 GMT
- request:
    method: get
    uri: http://www.grenelle-immobilier.com/82-APPARTEMENT-FAMILIAL-DE-6-PIECES.html
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Wed, 15 Apr 2020 14:27:01 GMT
      Server:
      - Apache/2.4.25 (Debian)
      Expires:
      - Thu, 19 Nov 1981 08:52:00 GMT
      Cache-Control:
      - no-store, no-cache, must-revalidate
      Pragma:
      - no-cache
      X-Bobcat-Version:
      - kitty.pryde.20200414.rev1
      Set-Cookie:
      - PHPSESSID=cfbhqdllh8tck34flarsidg4i7; path=/
      - SRV=c64; path=/
      Vary:
      - Accept-Encoding
      X-Server-Id:
      - cluster6-w4
      Access-Control-Allow-Origin:
      - "*"
      Content-Length:
      - '14822'
      Content-Type:
      - text/html; charset=UTF-8
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: null
  recorded_at: Wed, 15 Apr 2020 14:27:01 GMT
- request:
    method: get
    uri: http://www.grenelle-immobilier.com/61-Appartement-de-4-5-pieces-sur-le-Champ-de-Mars.html
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Wed, 15 Apr 2020 14:27:01 GMT
      Server:
      - Apache/2.4.25 (Debian)
      Expires:
      - Thu, 19 Nov 1981 08:52:00 GMT
      Cache-Control:
      - no-store, no-cache, must-revalidate
      Pragma:
      - no-cache
      X-Bobcat-Version:
      - kitty.pryde.20200414.rev1
      Set-Cookie:
      - PHPSESSID=17mi4ic9pvp0lmjg5is3685b4v; path=/
      - SRV=c64; path=/
      Vary:
      - Accept-Encoding
      X-Server-Id:
      - cluster6-w4
      Access-Control-Allow-Origin:
      - "*"
      Content-Length:
      - '14543'
      Content-Type:
      - text/html; charset=UTF-8
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: null
  recorded_at: Wed, 15 Apr 2020 14:27:01 GMT
- request:
    method: get
    uri: http://www.grenelle-immobilier.com/74-Appartement-familial-4-pieces.html
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Wed, 15 Apr 2020 14:27:01 GMT
      Server:
      - Apache/2.4.25 (Debian)
      Expires:
      - Thu, 19 Nov 1981 08:52:00 GMT
      Cache-Control:
      - no-store, no-cache, must-revalidate
      Pragma:
      - no-cache
      X-Bobcat-Version:
      - kitty.pryde.20200414.rev1
      Set-Cookie:
      - PHPSESSID=b93c4l8t8fnp6sql3dr62tvjpi; path=/
      - SRV=c62; path=/
      Vary:
      - Accept-Encoding
      X-Server-Id:
      - cluster6-w2
      Access-Control-Allow-Origin:
      - "*"
      Content-Length:
      - '13810'
      Content-Type:
      - text/html; charset=UTF-8
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: null
  recorded_at: Wed, 15 Apr 2020 14:27:01 GMT
- request:
    method: get
    uri: http://www.grenelle-immobilier.com/76-4-pieces-St-Francois-Xavier-Duroc-7e.html
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Wed, 15 Apr 2020 14:27:01 GMT
      Server:
      - Apache/2.4.25 (Debian)
      Expires:
      - Thu, 19 Nov 1981 08:52:00 GMT
      Cache-Control:
      - no-store, no-cache, must-revalidate
      Pragma:
      - no-cache
      X-Bobcat-Version:
      - kitty.pryde.20200414.rev1
      Set-Cookie:
      - PHPSESSID=r1qb3uv94dbalat2qq2ss651bf; path=/
      - SRV=c62; path=/
      Vary:
      - Accept-Encoding
      X-Server-Id:
      - cluster6-w2
      Access-Control-Allow-Origin:
      - "*"
      Content-Length:
      - '14113'
      Content-Type:
      - text/html; charset=UTF-8
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: null
  recorded_at: Wed, 15 Apr 2020 14:27:01 GMT
- request:
    method: get
    uri: http://www.grenelle-immobilier.com/85-.html
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Wed, 15 Apr 2020 14:27:01 GMT
      Server:
      - Apache/2.4.25 (Debian)
      Expires:
      - Thu, 19 Nov 1981 08:52:00 GMT
      Cache-Control:
      - no-store, no-cache, must-revalidate
      Pragma:
      - no-cache
      X-Bobcat-Version:
      - kitty.pryde.20200414.rev1
      Set-Cookie:
      - PHPSESSID=d9ionn1k5glneggpimttgsdimv; path=/
      - SRV=c64; path=/
      Vary:
      - Accept-Encoding
      X-Server-Id:
      - cluster6-w4
      Access-Control-Allow-Origin:
      - "*"
      Content-Length:
      - '13377'
      Content-Type:
      - text/html; charset=UTF-8
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: null
  recorded_at: Wed, 15 Apr 2020 14:27:01 GMT
- request:
    method: get
    uri: http://www.grenelle-immobilier.com/81-Exclusivite-superbe-appartement-au-coeur-du-gros-caillou.html
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Wed, 15 Apr 2020 14:27:01 GMT
      Server:
      - Apache/2.4.25 (Debian)
      Expires:
      - Thu, 19 Nov 1981 08:52:00 GMT
      Cache-Control:
      - no-store, no-cache, must-revalidate
      Pragma:
      - no-cache
      X-Bobcat-Version:
      - kitty.pryde.20200414.rev1
      Set-Cookie:
      - PHPSESSID=h33arqmkef33u6eh1jt442poun; path=/
      - SRV=c66; path=/
      Vary:
      - Accept-Encoding
      X-Server-Id:
      - cluster6-w6
      Access-Control-Allow-Origin:
      - "*"
      Content-Length:
      - '14451'
      Content-Type:
      - text/html; charset=UTF-8
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: null
  recorded_at: Wed, 15 Apr 2020 14:27:01 GMT
- request:
    method: get
    uri: http://www.grenelle-immobilier.com/83-APPARTEMENT-2-PIECES.html
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Wed, 15 Apr 2020 14:27:02 GMT
      Server:
      - Apache/2.4.25 (Debian)
      Expires:
      - Thu, 19 Nov 1981 08:52:00 GMT
      Cache-Control:
      - no-store, no-cache, must-revalidate
      Pragma:
      - no-cache
      X-Bobcat-Version:
      - kitty.pryde.20200414.rev1
      Set-Cookie:
      - PHPSESSID=oksh56hec4v50ki8omr4l7jf2b; path=/
      - SRV=c64; path=/
      Vary:
      - Accept-Encoding
      X-Server-Id:
      - cluster6-w4
      Access-Control-Allow-Origin:
      - "*"
      Content-Length:
      - '14669'
      Content-Type:
      - text/html; charset=UTF-8
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        PCFET0NUWVBFIGh0bWw+CjxodG1sIGxhbmc9ImZyIiBjbGFzcz0ibm8tanMiPgogICAgPGhlYWQ+CiAgICAgICAgPG1ldGEgY2hhcnNldD0idXRmLTgiPgogICAgICAgIDxtZXRhIGh0dHAtZXF1aXY9IlgtVUEtQ29tcGF0aWJsZSIgY29udGVudD0iSUU9ZWRnZSI+CiAgICAgICAgPG1ldGEgbmFtZT0idmlld3BvcnQiIGNvbnRlbnQ9IndpZHRoPWRldmljZS13aWR0aCwgaW5pdGlhbC1zY2FsZT0xLjAsIG1heGltdW0tc2NhbGU9MS4wIj4KICAgICAgICA8dGl0bGU+dmVudGUgUGFyaXMgOiBBUFBBUlRFTUVOVCAyIFBJRUNFUyB8IEdyZW5lbGxlIEltbW9iaWxpZXI8L3RpdGxlPgogICAgICAgIDxtZXRhIG5hbWU9ImRlc2NyaXB0aW9uIiBjb250ZW50PSJ2ZW50ZSBhcHBhcnRlbWVudCAyIHBpw6hjZXMgUGFyaXMgOiBBUFBBUlRFTUVOVCAyIFBJRUNFUyAuIE5vcyBhZ2VudHMgaW1tb2JpbGllcnMgc29udCBkaXNwb25pYmxlcyBwb3VyIHVuZSBxdWVzdGlvbiwgdW5lIHZpc2l0ZSwgY29udGFjdGV6LWxlcyBlbiBsZXVyIGluZGlxdWFudCBsZSBudW3DqXJvIGRlIHLDqWbDqXJlbmNlIGRlIGwnYW5ub25jZS4iPgogICAgICAgIDxtZXRhIG5hbWU9ImF1dGhvciIgY29udGVudD0iIj4KICAgICAgICAKICAgICAgICAgICAgPGxpbmsgcmVsPSJpY29uIiBocmVmPSJpbWFnZXMvZmF2aWNvbi5wbmciIHR5cGU9ImltYWdlL3BuZyIgLz4KICAgICAgICAgICAgPGxpbmsgcmVsPSJzaG9ydGN1dCBpY29uIiBocmVmPSJpbWFnZXMvZmF2aWNvbi5wbmciIHR5cGU9ImltYWdlL3BuZyIgLz4KICAgICAgICAKICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPG1ldGEgbmFtZT0iZ2VuZXJhdG9yIiBjb250ZW50PSJ2YW5pdHkyIiA+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaW5rICByZWw9ImNhbm9uaWNhbCIgaHJlZj0iaHR0cDovL3d3dy5ncmVuZWxsZS1pbW1vYmlsaWVyLmNvbS84My1BUFBBUlRFTUVOVC0yLVBJRUNFUy5odG1sIiA+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxtZXRhIHByb3BlcnR5PSJnZW5lcmF0b3IiIGNvbnRlbnQ9ImJPYmNhdCIgPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKCiAgICAgICAgCgogICAgICAgIDxiYXNlIGhyZWY9Imh0dHA6Ly93d3cuZ3JlbmVsbGUtaW1tb2JpbGllci5jb20vIj4KCiAgICAgICAgCiAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgCgogICAgICAgIAogICAgCiAgICAgICAgPG1ldGEgcHJvcGVydHk9Im9nOnRpdGxlIiBjb250ZW50PSJBUFBBUlRFTUVOVCAyIFBJRUNFUyAiIC8+CiAgICAgICAgPG1ldGEgcHJvcGVydHk9Im9nOnR5cGUiIGNvbnRlbnQ9IkFydGljbGUiIC8+CiAgICAgICAgPG1ldGEgcHJvcGVydHk9Im9nOmltYWdlIiBjb250ZW50PSIvL2dyZW5lbGxlaW1tby5zdGF0aWNsYmkuY29tL29yaWdpbmFsL2ltYWdlcy9iaWVucy8xL2U5MTc2MmQyMWNkNjIwYjg0YzVmOGJjYTAzMTkxNmVmL29yaWdpbmFsL3Bob3RvX2IyZjIyMGQ0OTRkYWMwYTUyNWRmYTZjNWMzNmI0YTRmLmpwZyIgLz4KICAgIAoKICAgICAgICAgCgogICAgICAgIAogICAgICAgICAgICA8bGluayByZWw9InN0eWxlc2hlZXQiIHR5cGU9InRleHQvY3NzIiBocmVmPSIvY3NzL2J1aWxkX2NhMWI4OWM3YzJiOGUwZmE1NmFmZmUxMzNlNmUyOWRjLmNzcyIgLz4KICAgICAgICAgICAgPGxpbmsgcmVsPSJzdHlsZXNoZWV0IiB0eXBlPSJ0ZXh0L2NzcyIgaHJlZj0iLy9jb2RlLmpxdWVyeS5jb20vdWkvMS4xMC40L3RoZW1lcy9zbW9vdGhuZXNzL2pxdWVyeS11aS5jc3MiIC8+CiAgICAgICAgCiAgICAgICAgIAogICAgICAgIDxsaW5rIHJlbD0ic3R5bGVzaGVldCIgdHlwZT0idGV4dC9jc3MiIGhyZWY9Ii9jc3MvZm9udHMvc3R5bGUuY3NzIiAvPgogICAgICAgIDxsaW5rIHJlbD0ic3R5bGVzaGVldCIgdHlwZT0idGV4dC9jc3MiIGhyZWY9Ii9jc3MvZXhwcmUuY3NzIiAvPgogICAgICAgICAKICAgICAgICA8IS0tIEhUTUw1IFNoaW0gYW5kIFJlc3BvbmQuanMgSUU4IHN1cHBvcnQgb2YgSFRNTDUgZWxlbWVudHMgYW5kIG1lZGlhIHF1ZXJpZXMgLS0+CiAgICAgICAgPCEtLVtpZiBsdCBJRSA5XT4KICAgICAgICAgIDxzY3JpcHQgc3JjPSJodHRwczovL29zcy5tYXhjZG4uY29tL2xpYnMvaHRtbDVzaGl2LzMuNy4wL2h0bWw1c2hpdi5qcyI+PC9zY3JpcHQ+CiAgICAgICAgICA8c2NyaXB0IHNyYz0iaHR0cHM6Ly9vc3MubWF4Y2RuLmNvbS9saWJzL3Jlc3BvbmQuanMvMS40LjIvcmVzcG9uZC5taW4uanMiPjwvc2NyaXB0PgogICAgICAgIDwhW2VuZGlmXS0tPgogICAgICAgIAogICAgICAgIAogICAgICAgICAgICA8IS0tIEdvb2dsZSBUYWcgTWFuYWdlciAtLT4KPHNjcmlwdD4oZnVuY3Rpb24odyxkLHMsbCxpKXsgd1tsXT13W2xdfHxbXTt3W2xdLnB1c2goIHsgJ2d0bS5zdGFydCc6CiAgICBuZXcgRGF0ZSgpLmdldFRpbWUoKSxldmVudDonZ3RtLmpzJ30pO3ZhciBmPWQuZ2V0RWxlbWVudHNCeVRhZ05hbWUocylbMF0sCiAgICAgICAgICAgIGo9ZC5jcmVhdGVFbGVtZW50KHMpLGRsPWwhPSdkYXRhTGF5ZXInPycmbD0nK2w6Jyc7ai5hc3luYz10cnVlO2ouc3JjPQogICAgICAgICAgICAnaHR0cHM6Ly93d3cuZ29vZ2xldGFnbWFuYWdlci5jb20vZ3RtLmpzP2lkPScraStkbDtmLnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKGosZik7CiAgICAgICAgICAgIH0pKHdpbmRvdyxkb2N1bWVudCwnc2NyaXB0JywnZGF0YUxheWVyJywnR1RNLU1YQlZTM1AnKTs8L3NjcmlwdD4KPCEtLSBFbmQgR29vZ2xlIFRhZyBNYW5hZ2VyIC0tPgogICAgICAgIAogICAgICAgIAogICAgICAgICAgICAgICAgICAgIAogICAgPC9oZWFkPgoKICAgIDxib2R5IGlkPSJwYWdlRGV0YWlsIiBjbGFzcz0iIj4KCiAgICAgICAgICAgIDwhLS0gR29vZ2xlIFRhZyBNYW5hZ2VyIChub3NjcmlwdCkgLS0+Cjxub3NjcmlwdD48aWZyYW1lIHNyYz0iaHR0cHM6Ly93d3cuZ29vZ2xldGFnbWFuYWdlci5jb20vbnMuaHRtbD9pZD1HVE0tTVhCVlMzUCIKICAgICAgICAgICAgICAgICAgaGVpZ2h0PSIwIiB3aWR0aD0iMCIgc3R5bGU9ImRpc3BsYXk6bm9uZTt2aXNpYmlsaXR5OmhpZGRlbiI+PC9pZnJhbWU+PC9ub3NjcmlwdD4KPCEtLSBFbmQgR29vZ2xlIFRhZyBNYW5hZ2VyIChub3NjcmlwdCkgLS0+CgogICAgCgogICAgICAgIAogICAgICAgICAgICAgICAgICAgIAoKICAgICAgICAKCiAgICAKCgogICAgCiAgICAKICAgICAgICAgICAgCiAgICAgICAgCgoKCgogICAgCgogICAgCgoKCiAgICAKICAgIAogICAgICAgICAgICAKICAgIAogICAgICAgIAogICAgICAgIAogICAgICAgIAoKCgoKICAgIAoKICAgICA8IS0tIENhcHR1cmUgY29vcmRvbm5lZXMgcGFyIGRlZmF1bHQgLS0+CiAgICAgICAgDQogICAgICAgICAgICAgICAgICAgIAoKICAgICAgICAKICAgICAgICAgICAgICAgICAgICAKCgogICAgCiAgICAKICAgIAogICAgICAgIDxoZWFkZXI+CiAgICAgICAgICAgIAogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29udGFpbmVyIj4KICAgICAgICAgICAgICAgICAgICANCiAgICA8ZGl2IGNsYXNzPSJyb3cgaGVhZGVyVG9wIj4NCiAgICAgICAgPGRpdiBjbGFzcz0iY29sLW1kLTMgaGVhZCB0ZWxlIj4NCiAgICAgICAgICAgIDxwPldlIHNwZWFrIGVuZ2xpc2g8L3A+DQogICAgICAgICAgICA8c3BhbiBjbGFzcz0id2hpdGUiPiszMyAoMCkxIDQ1IDU1IDI3IDI3PC9zcGFuPg0KICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbC1tZC02IHRleHQtY2VudGVyIj4NCiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iLyIgaWQ9ImxvZ29TaXRlIiA+PGltZyBzcmM9Ii8vZ3JlbmVsbGVpbW1vLnN0YXRpY2xiaS5jb20vb3JpZ2luYWwvaW1hZ2VzL2xvZ29TaXRlLnBuZyIgLz48L2E+DQogICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICANCiAgICAgICAgPGRpdiBjbGFzcz0iY29sLW1kLTMgaGVhZCBkZXB1aXMiPg0KICAgICAgICAgICAgPHA+UGFybGlhbW8gaXRhbGlhbm88L3A+DQogICAgICAgICAgICA8c3BhbiBjbGFzcz0id2hpdGUiPkRFUFVJUzwvc3Bhbj4NCiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJyZWQiPiAxOTgwPC9zcGFuPg0KICAgICAgICA8L2Rpdj4gICAgDQogICAgPC9kaXY+DQoKICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgPG5hdiBjbGFzcz0ibmF2YmFyIG5hdmJhci1kZWZhdWx0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29udGFpbmVyIG5hdkNvbnRhaW5lciI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJuYXZiYXItaGVhZGVyIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIHR5cGU9ImJ1dHRvbiIgY2xhc3M9Im5hdmJhci10b2dnbGUgYnRuLXRvZ2dsZSIgZGF0YS10b2dnbGU9ImNvbGxhcHNlIiBkYXRhLXRhcmdldD0iI25hdmJhciIgYXJpYS1leHBhbmRlZD0iZmFsc2UiIGFyaWEtY29udHJvbHM9Im5hdmJhciI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJzci1vbmx5Ij48L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJpY29uLWJhciI+PC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iaWNvbi1iYXIiPjwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9Imljb24tYmFyIj48L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9idXR0b24+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiB0eXBlPSJidXR0b24iIGNsYXNzPSJzZWFyY2gtdG9nZ2xlIGJ0bi10b2dnbGUgdmlzaWJsZS14cyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJpY29uLXJlY2hlcmNoZXIiPjwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2J1dHRvbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgaWQ9Im5hdmJhclRoZW1lIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjbG9zZU5hdiB2aXNpYmxlLXhzIj4mdGltZXM7PC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHVsIGNsYXNzPSJuYXYgbmF2YmFyLW5hdiI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgPGxpIGNsYXNzPSIgIj4KICAgICAgICAgICAgPGEgaHJlZj0iLyIgdGFyZ2V0PSIiID5BY2N1ZWlsPC9hPgogICAgCiAgICA8L2xpPiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgPGxpIGNsYXNzPSIgIj4KICAgICAgICAgICAgPGEgaHJlZj0iL2EtdmVuZHJlLzEiIHRhcmdldD0iIiA+Tm9zIGFubm9uY2VzPC9hPgogICAgCiAgICA8L2xpPiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgPGxpIGNsYXNzPSJoYXMtZHJvcGRvd24gIj4KICAgICAgICAgICAgPGEgaHJlZj0iIiB0YXJnZXQ9IiIgPnByJiMyMzNzZW50YXRpb248L2E+CiAgICAKICAgICAgICAgICAgPHVsIGNsYXNzPSJkcm9wZG93biBkcm9wZG93bi1tZW51Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICA8bGkgY2xhc3M9IiAiPgogICAgICAgICAgICA8YSBocmVmPSIvcXVpLXNvbW1lcy1ub3VzLmh0bWwiIHRhcmdldD0iIiA+UXVpIHNvbW1lcyBub3VzID88L2E+CiAgICAKICAgIDwvbGk+ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICA8bGkgY2xhc3M9IiAiPgogICAgICAgICAgICA8YSBocmVmPSIvcGF1bC5odG1sIiB0YXJnZXQ9IiIgPlBhdWwgQWJpYjwvYT4KICAgIAogICAgPC9saT4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgIDxsaSBjbGFzcz0iICI+CiAgICAgICAgICAgIDxhIGhyZWY9Ii9zdGVwaGFuaWUuaHRtbCIgdGFyZ2V0PSIiID5TdMOpcGhhbmllIEFiaWItVmlzYW48L2E+CiAgICAKICAgIDwvbGk+ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICA8bGkgY2xhc3M9IiAiPgogICAgICAgICAgICA8YSBocmVmPSIvY29sbGVjdGlvbi5odG1sIiB0YXJnZXQ9IiIgPkNvbGxlY3Rpb24gQXF1YXJlbGxlczwvYT4KICAgIAogICAgPC9saT4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgIDxsaSBjbGFzcz0iICI+CiAgICAgICAgICAgIDxhIGhyZWY9Ii9udW1lcm8uaHRtbCIgdGFyZ2V0PSIiID5OdW3DqXJvcyB1dGlsZXM8L2E+CiAgICAKICAgIDwvbGk+ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICA8bGkgY2xhc3M9IiAiPgogICAgICAgICAgICA8YSBocmVmPSIvbW9udW1lbnRzLmh0bWwiIHRhcmdldD0iIiA+TW9udW1lbnRzPC9hPgogICAgCiAgICA8L2xpPiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgPGxpIGNsYXNzPSIgIj4KICAgICAgICAgICAgPGEgaHJlZj0iL2FjdHVzLmh0bWwiIHRhcmdldD0iIiA+RXZlbsOpbWVudHM8L2E+CiAgICAKICAgIDwvbGk+ICAgICAgICAgICAgICAgICAgICA8L3VsPgogICAgPC9saT4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgIDxsaSBjbGFzcz0iICI+CiAgICAgICAgICAgIDxhIGhyZWY9Ii90ZW1vaWduYWdlcy5odG1sIiB0YXJnZXQ9IiIgPnTDqW1vaWduYWdlczwvYT4KICAgIAogICAgPC9saT4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgIDxsaSBjbGFzcz0iICI+CiAgICAgICAgICAgIDxhIGhyZWY9Ii9jb3JyZXNwb25kYW50cy5odG1sIiB0YXJnZXQ9IiIgPm5vcyBjb3JyZXNwb25kYW50czwvYT4KICAgIAogICAgPC9saT4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgIDxsaSBjbGFzcz0iICI+CiAgICAgICAgICAgIDxhIGhyZWY9Ii9lc3RpbWF0aW9uLmh0bWwiIHRhcmdldD0iIiA+RXN0aW1hdGlvbjwvYT4KICAgIAogICAgPC9saT4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgIDxsaSBjbGFzcz0iICI+CiAgICAgICAgICAgIDxhIGhyZWY9Ii9hbGVydGUtZW1haWwuaHRtbCIgdGFyZ2V0PSIiID5BbGVydGUgRS1tYWlsPC9hPgogICAgCiAgICA8L2xpPiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgPGxpIGNsYXNzPSIgIj4KICAgICAgICAgICAgPGEgaHJlZj0iL3JldnVlLmh0bWwiIHRhcmdldD0iIiA+cmV2dWUgZGUgcHJlc3NlPC9hPgogICAgCiAgICA8L2xpPiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC91bD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICA8L25hdj4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAKICAgICAgICAgICAgCiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ1dGlscyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImFjdGlvbiBwYW5pZXIiPgogICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iYWN0aW9uIGxhbmd1ZXMiPgogICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImFjdGlvbi1pdGVtIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iZmxhZyBmbGFnX2ZyIGFjdGl2ZUxhbmcgZHJvcGRvd24tdG9nZ2xlIiBkYXRhLXRvZ2dsZT0iZHJvcGRvd24iPjwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJoaWRkZW5MYW5ndWUiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZmxhZyBmbGFnX2ZyIGZsYWdfZnJfZmFkZWQgaGlkZSByaWdodCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxmb3JtIG1ldGhvZD0icG9zdCIgYWN0aW9uPSIvL3d3dy5ncmVuZWxsZS1pbW1vYmlsaWVyLmNvbS84My1BUFBBUlRFTUVOVC0yLVBJRUNFUy5odG1sIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJoaWRkZW4iIG5hbWU9ImxhbmciIHZhbHVlPSJmciI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0ic3VibWl0IiB2YWx1ZT0iICI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZm9ybT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImZsYWcgZmxhZ19lbiBmbGFnX2VuX2ZhZGVkICByaWdodCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxmb3JtIG1ldGhvZD0icG9zdCIgYWN0aW9uPSIvL3d3dy5ncmVuZWxsZS1pbW1vYmlsaWVyLmNvbS84My1BUFBBUlRFTUVOVC0yLVBJRUNFUy5odG1sIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJoaWRkZW4iIG5hbWU9ImxhbmciIHZhbHVlPSJlbiI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0ic3VibWl0IiB2YWx1ZT0iICI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZm9ybT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAKICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAKICAgICAgICA8L2hlYWRlcj4KICAgIAogICAgCiAgICAgICAgPHNlY3Rpb24gY2xhc3M9InNlY3Rpb25TZWFyY2ggaW5uZXIiPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJjbG9zZU5hdiB2aXNpYmxlLXhzIj4mdGltZXM7PC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbnRhaW5lciI+CiAgICAgICAgICAgICAgICA8Zm9ybSBtZXRob2Q9InBvc3QiIGNsYXNzPSJjb250YWluZXJTZWFyY2ggdjIiIGRhdGEtc2VsZWN0cGlja2VyLW5vcmVzdWx0cyA9ICJBdWN1biByw6lzdWx0YXQiIGFjdGlvbj0iL3JlY2hlcmNoZS8iIHJvbGU9ImZvcm0iPgogICAgCiAgICAgICAgPGRpdiBjbGFzcz0icm93Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZm9ybS1ncm91cCBjb2wteHMtMTIgY29sLXhzLTEyIj4gIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHVsIGNsYXNzPSJsaXN0LW9mZnJlIj4KICAgICAgICAgICAgICAgIDxsaSBjbGFzcz0iYWN0aXZlIj4KICAgICAgICAgICAgPGEgaHJlZj0iMCI+VmVudGU8L2E+CiAgICAgICAgPC9saT4KICAgIDwvdWw+CjxpbnB1dCB0eXBlPSJoaWRkZW4iIHZhbHVlPSIwIiBuYW1lPSJkYXRhW1NlYXJjaF1bb2ZmcmVkZW1dIiBpZD0iaW5wdXRUeXBlT2ZmcmUiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImZvcm0tZ3JvdXAgY29sLXhzLTEyIGNvbC1tZC0zIGNvbC1zbS02Ij4gIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c2VsZWN0IG5hbWU9ImRhdGFbU2VhcmNoXVtpZHR5cGVdW10iIGlkPSJpbnB1dFR5cGVCaWVuX3RyYW5zYWMiIGNsYXNzPSJmb3JtLWNvbnRyb2wgc2VsZWN0cGlja2VyIiBtdWx0aXBsZSB0aXRsZT0iVHlwZSBkZSBiaWVuIiAgZGF0YS1zdHlsZT0iYnRuLXNlbGVjdHBpY2tlciI+CiAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9InZvaWQiPlR5cGUgZGUgYmllbjwvb3B0aW9uPgogICAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT0iMiIgPgogICAgICAgICAgICBBcHBhcnRlbWVudAogICAgICAgIDwvb3B0aW9uPgogICAgPC9zZWxlY3Q+CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZm9ybS1ncm91cCBjb2wteHMtMTIgY29sLW1kLTMgY29sLXNtLTYiPiAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c2VsZWN0IG5hbWU9ImRhdGFbU2VhcmNoXVtpZHZpbGxlY29kZV1bXSIgaWQ9ImlucHV0TG9jYWxpc2F0aW9uIiBjbGFzcz0iZm9ybS1jb250cm9sIHNlbGVjdHBpY2tlciIgbXVsdGlwbGUgdGl0bGU9IkxvY2FsaXNhdGlvbiIgZGF0YS1saXZlLXNlYXJjaD10cnVlIGRhdGEtc3R5bGU9ImJ0bi1zZWxlY3RwaWNrZXIiPgogICAgICAgICAgICA8b3B0aW9uIHZhbHVlPSJ2b2lkIj5Mb2NhbGlzYXRpb248L29wdGlvbj4KICAgICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9InZpbGxlLTEiID4KICAgICAgICAgICAgNzUwMDcgLSBQYXJpcwogICAgICAgIDwvb3B0aW9uPgogICAgPC9zZWxlY3Q+CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZm9ybS1ncm91cCBjb2wteHMtMTIgY29sLW1kLTIgY29sLXNtLTYiPiAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0idGV4dCIgbmFtZT0iZGF0YVtTZWFyY2hdW3ByaXhtYXhdIiBwbGFjZWhvbGRlcj0iQnVkZ2V0IG1heGkiIGlkPSJpbnB1dF9wcml4TWF4IiB2YWx1ZT0iIiBjbGFzcz0iZm9ybS1jb250cm9sIG51bWVyaWNJbnB1dCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJmb3JtLWdyb3VwIGNvbC14cy0xMiBjb2wtbWQtMiBjb2wtc20tNiI+ICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJ0ZXh0IiBuYW1lPSJkYXRhW1NlYXJjaF1bcGllY2VzbWluXSIgcGxhY2Vob2xkZXI9Ik5iLiBwacOoY2VzIG1pbi4iIGlkPSJpbnB1dFBpZWNlc01pbiIgdmFsdWU9IiIgY2xhc3M9ImZvcm0tY29udHJvbCBudW1lcmljSW5wdXQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImJ0blNlYXJjaCBjb2wteHMtMTIgY29sLW1kLTIgY29sLXNtLTEyIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIHR5cGU9InN1Ym1pdCIgY2xhc3M9ImJ0biBidG4tcHJpbWFyeSI+UmVjaGVyY2hlcjwvYnV0dG9uPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImFkdlNlYXJjaEJ0biI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3Bhbj5SZWNoZXJjaGUgYXZhbmPDqWU8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJpY29uRmxlY2giPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJpY29uLW1pbmktZi1yaWdodCAiPjwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAKICAgIAogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9IiBhZHZTZWFyY2ggIj4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InJvdyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZm9ybS1ncm91cCBjb2wteHMtMTIgY29sLW1kLTMgY29sLXhzLTEyIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0idGV4dCIgbmFtZT0iZGF0YVtTZWFyY2hdW05PX0RPU1NJRVJdIiBwbGFjZWhvbGRlcj0iUsOpZsOpcmVuY2UiIGlkPSJpbnB1dFJlZiIgY2xhc3M9ImZvcm0tY29udHJvbCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImZvcm0tZ3JvdXAgY29sLXhzLTEyIGNvbC1tZC0zIGNvbC14cy0xMiI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZGlzdGFuY2UgZWxlbWVudFNlYXJjaCI+CiAgICA8c3BhbiBjbGFzcz0idHh0ZGlzdGFuY2UiPjxpPjwvaT48L3NwYW4+CiAgICA8ZGl2IGNsYXNzPSJmaWVsZERpc3RhbmNlIG5vLWV2ZW50cyI+CiAgICAgICAgPGRpdiBjbGFzcz0icmFkaW8taW5saW5lIj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0icmFvdW5kMSI+CiAgICAgICAgICAgICAgICA8aW5wdXQgaWQ9InJhZGlvMSIgbmFtZT0iZGF0YVtTZWFyY2hdW2Rpc3RhbmNlXSIgY2xhc3M9InJhZGlvRGlzdGFuY2UiIHR5cGU9InJhZGlvIiB2YWx1ZT0iNSIgIGRhdGEtbGFiZWw9IjVLbSI+CiAgICAgICAgICAgICAgICA8bGFiZWwgZm9yPSJyYWRpbzEiPjwvbGFiZWw+CiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ibGFiZWxWYWwiPjVLTTwvc3Bhbj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9kaXY+CiAgICAgICAgPGRpdiBjbGFzcz0icmFkaW8taW5saW5lIj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0icmFvdW5kMiI+CiAgICAgICAgICAgICAgICA8aW5wdXQgaWQ9InJhZGlvMiIgbmFtZT0iZGF0YVtTZWFyY2hdW2Rpc3RhbmNlXSIgY2xhc3M9InJhZGlvRGlzdGFuY2UiIHR5cGU9InJhZGlvIiB2YWx1ZT0iMTAiICBkYXRhLWxhYmVsPSIxMEttIj4KICAgICAgICAgICAgICAgIDxsYWJlbCBmb3I9InJhZGlvMiI+PC9sYWJlbD4KICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJsYWJlbFZhbCI+MTBLTTwvc3Bhbj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9kaXY+CiAgICAgICAgPGRpdiBjbGFzcz0icmFkaW8taW5saW5lIj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0icmFvdW5kMyI+CiAgICAgICAgICAgICAgICA8aW5wdXQgaWQ9InJhZGlvMyIgbmFtZT0iZGF0YVtTZWFyY2hdW2Rpc3RhbmNlXSIgY2xhc3M9InJhZGlvRGlzdGFuY2UiIHR5cGU9InJhZGlvIiB2YWx1ZT0iMjUiICBkYXRhLWxhYmVsPSIyNUttIj4KICAgICAgICAgICAgICAgIDxsYWJlbCBmb3I9InJhZGlvMyI+PC9sYWJlbD4KICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJsYWJlbFZhbCI+MjVLTTwvc3Bhbj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9kaXY+CiAgICAgICAgPGlucHV0IHR5cGU9ImhpZGRlbiIgbmFtZT0iZGF0YVtTZWFyY2hdW2Rpc3RhbmNlX2lkdmlsbGVjb2RlXSIgY2xhc3M9ImRpc3RhbmNlVmlsbGUiIHZhbHVlPSIiPgogICAgPC9kaXY+CjwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJmb3JtLWdyb3VwIGNvbC14cy0xMiBjb2wtbWQtMiBjb2wteHMtMTIiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJ0ZXh0IiBuYW1lPSJkYXRhW1NlYXJjaF1bcHJpeG1pbl0iIHBsYWNlaG9sZGVyPSJCdWRnZXQgbWluaW11bSIgaWQ9ImlucHV0X2R1YWxQcml4TWluIiB2YWx1ZT0iIiAgY2xhc3M9ImZvcm0tY29udHJvbCBudW1lcmljSW5wdXQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJmb3JtLWdyb3VwIGNvbC14cy0xMiBjb2wtbWQtMiBjb2wteHMtMTIiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJ0ZXh0IiBuYW1lPSJkYXRhW1NlYXJjaF1bc3VyZm1pbl0iIHBsYWNlaG9sZGVyPSJTdXJmYWNlIG1pbi4gKG3CsikiIGlkPSJpbnB1dFN1cmZNaW4iIHZhbHVlPSIiIGNsYXNzPSJmb3JtLWNvbnRyb2wgbnVtZXJpY0lucHV0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icm93Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJyb3ciPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2wteHMtMTIgYWR2U2VhcmNoVGl0bGUiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBDcml0w6hyZXMgc3VwcGzDqW1lbnRhaXJlcwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZm9ybS1ncm91cCBjb2wteHMtMTIgY29sLW1kLTEyIGNvbC14cy0xMiI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNoZWNrYm94LWlubGluZSI+CiAgICA8ZGl2IGNsYXNzPSJhZHZDaGVjayI+CiAgICAgICAgPGlucHV0IHR5cGU9ImNoZWNrYm94IiBuYW1lPSJkYXRhW1NlYXJjaF1bUElTQ0lORV0iIGlkPSJQSVNDSU5FIiB2YWx1ZT0iT1VJIiBkYXRhLWxhYmVsPSJQaXNjaW5lIj4gCiAgICAgICAgPGxhYmVsIGZvcj0iUElTQ0lORSI+PC9sYWJlbD4KICAgICAgICA8c3BhbiBjbGFzcz0iYWR2Q2hlY2tUZXJtIj5QaXNjaW5lPC9zcGFuPgogICAgPC9kaXY+CjwvZGl2PiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNoZWNrYm94LWlubGluZSI+CiAgICA8ZGl2IGNsYXNzPSJhZHZDaGVjayI+CiAgICAgICAgPGlucHV0IHR5cGU9ImNoZWNrYm94IiBuYW1lPSJkYXRhW1NlYXJjaF1bcGFya2luZ10iIGlkPSJwYXJraW5nIiB2YWx1ZT0iT1VJIiBkYXRhLWxhYmVsPSJQYXJraW5nIj4gCiAgICAgICAgPGxhYmVsIGZvcj0icGFya2luZyI+PC9sYWJlbD4KICAgICAgICA8c3BhbiBjbGFzcz0iYWR2Q2hlY2tUZXJtIj5QYXJraW5nPC9zcGFuPgogICAgPC9kaXY+CjwvZGl2PiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNoZWNrYm94LWlubGluZSI+CiAgICA8ZGl2IGNsYXNzPSJhZHZDaGVjayI+CiAgICAgICAgPGlucHV0IHR5cGU9ImNoZWNrYm94IiBuYW1lPSJkYXRhW1NlYXJjaF1bVEVSUkFTU0VdIiBpZD0iVEVSUkFTU0UiIHZhbHVlPSJPVUkiIGRhdGEtbGFiZWw9IlRlcnJhc3NlIj4gCiAgICAgICAgPGxhYmVsIGZvcj0iVEVSUkFTU0UiPjwvbGFiZWw+CiAgICAgICAgPHNwYW4gY2xhc3M9ImFkdkNoZWNrVGVybSI+VGVycmFzc2U8L3NwYW4+CiAgICA8L2Rpdj4KPC9kaXY+ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgCiAgICA8L2Zvcm0+ICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9zZWN0aW9uPgogICAgCiAgICAKICAgICAgICAKICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29udGFpbmVyIj4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAKICAgIAogICAgCiAgICAKCiAgICAgICAgCiAgICAgICAgICAgIAogICAgICAgIAogICAgICAgICAgICAKICAgICAgICAKICAgICAgICAKICAgICAgICAKICAgICAgICAKICAgIAogICAgICAgICAgICAKICAgICAgICAKICAgICAgICAKICAgICAgICAKICAgICAgICAKICAgICAgICAKICAgICAgICAKCiAgIAoKICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgaWQ9IkNhbGN1bGV0dGUiIGNsYXNzPSJtb2RhbCBmYWRlIiAgdGFiaW5kZXg9Ii0xIiByb2xlPSJkaWFsb2ciIGFyaWEtbGFiZWxsZWRieT0ibXlMYXJnZU1vZGFsTGFiZWwiIGFyaWEtaGlkZGVuPSJ0cnVlIj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Im1vZGFsLWRpYWxvZyBtb2RhbC1tZCI+CiAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InJvdyBtb2RhbC1jb250ZW50Ij4KICAgICAgICAgICAgICAgICAgICA8Zm9ybSBjbGFzcz0iZm9ybS1ob3Jpem9udGFsIiByb2xlPSJmb3JtIiBhY3Rpb249IiIgb25zdWJtaXQ9InJldHVybiBjYWxjdWxhdGVDcmVkaXQodGhpcyk7Ij4KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ibW9kYWwtaGVhZGVyIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxidXR0b24gdHlwZT0iYnV0dG9uIiBjbGFzcz0iY2xvc2UiIGRhdGEtZGlzbWlzcz0ibW9kYWwiIGFyaWEtaGlkZGVuPSJ0cnVlIj4mdGltZXM7PC9idXR0b24+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aDQgY2xhc3M9Im1vZGFsLXRpdGxlIHRoZW1UaXRsZSI+Q2FsY3VsZXR0ZTwvaDQ+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJtb2RhbC1ib2R5Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImZvcm0tZ3JvdXAiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgZm9yPSJtb250YW50IiBjbGFzcz0iY29sLW1kLTQgY29udHJvbC1sYWJlbCI+TW9udGFudCAqPC9sYWJlbD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sLW1kLTgiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9InRleHQiIGNsYXNzPSJmb3JtLWNvbnRyb2wgbnVtZXJpY0lucHV0IiBuYW1lPSJtb250YW50IiBpZD0ibW9udGFudCIgdmFsdWU9IjQ5NTAwMCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJmb3JtLWdyb3VwIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGZvcj0idGF1eCIgY2xhc3M9ImNvbC1tZC00IGNvbnRyb2wtbGFiZWwiPlRhdXggKCUpICogPC9sYWJlbD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sLW1kLTgiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9Im51bWJlciIgc3RlcD0iMC4wMSIgbWluPSIwIiBjbGFzcz0iZm9ybS1jb250cm9sIiBuYW1lPSJ0YXV4IiBpZD0idGF1eCIgcmVxdWlyZWQ9IiI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJmb3JtLWdyb3VwIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGZvcj0iYXBwb3J0IiBjbGFzcz0iY29sLW1kLTQgY29udHJvbC1sYWJlbCI+QXBwb3J0IDwvbGFiZWw+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbC1tZC04Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0idGV4dCIgY2xhc3M9ImZvcm0tY29udHJvbCBudW1lcmljSW5wdXQiIG5hbWU9ImFwcG9ydCIgaWQ9ImFwcG9ydCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJmb3JtLWdyb3VwIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGZvcj0iZHVyZWUiIGNsYXNzPSJjb2wtbWQtNCBjb250cm9sLWxhYmVsIj5EdXLDqWUgKEFubsOpZXMpICogPC9sYWJlbD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sLW1kLTgiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9InRleHQiIGNsYXNzPSJmb3JtLWNvbnRyb2wgbnVtZXJpY0lucHV0IiBuYW1lPSJkdXJlZSIgaWQ9ImR1cmVlIiByZXF1aXJlZD0iIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZm9ybS1ncm91cCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBmb3I9ImR1cmVlIiBjbGFzcz0iY29sLW1kLTQgY29udHJvbC1sYWJlbCB0ZXh0LWxlZnQiPk1lbnN1YWxpdMOpcyA8L2xhYmVsPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtbWQtOCB0ZXh0LWxlZnQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJyZXN1bHQiPiA8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJtb2RhbC1mb290ZXIiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGNsYXNzPSJzbWFsbCBvYmxpZ0NoYW1wIHB1bGwtbGVmdCI+KkNoYW1wcyBvYmxpZ2F0b2lyZXM8L2xhYmVsPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiB0eXBlPSJzdWJtaXQiIGNsYXNzPSJidG4gYnRuLWRlZmF1bHQgcmlnaHQiPkNhbGN1bGVyPC9idXR0b24+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgIDwvZm9ybT4KICAgICAgICAgICAgICAgICAgPC9kaXY+PCEtLSAvLm1vZGFsLWNvbnRlbnQgLS0+CiAgICAgICAgICAgICAgICA8L2Rpdj48IS0tIC8ubW9kYWwtZGlhbG9nIC0tPgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgCiAgICAKICAgICAgICAgICAgCiAgICAgICAgICAgIDxkaXYgaWQ9InNlbmRGcmllbmQiIGNsYXNzPSJtb2RhbCBmYWRlIiAgdGFiaW5kZXg9Ii0xIiByb2xlPSJkaWFsb2ciIGFyaWEtbGFiZWxsZWRieT0ibXlMYXJnZU1vZGFsTGFiZWwiIGFyaWEtaGlkZGVuPSJ0cnVlIj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Im1vZGFsLWRpYWxvZyBtb2RhbC1tZCI+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icm93IG1vZGFsLWNvbnRlbnQiPgogICAgICAgICAgICAgICAgICAgICAgICA8Zm9ybSBjbGFzcz0iZm9ybS1ob3Jpem9udGFsIiByb2xlPSJmb3JtIiBtZXRob2Q9InBvc3QiIGFjdGlvbj0iLzgzLUFQUEFSVEVNRU5ULTItUElFQ0VTLmh0bWwiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9ImhpZGRlbiIgbmFtZT0iYWN0aW9uIiB2YWx1ZT0ic2VuZEZyaWVuZCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0iaGlkZGVuIiBuYW1lPSJkYXRhW0NvbnRhY3RdW3VybF0iIHZhbHVlPSJodHRwOi8vd3d3LmdyZW5lbGxlLWltbW9iaWxpZXIuY29tLzgzLUFQUEFSVEVNRU5ULTItUElFQ0VTLmh0bWwiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ibW9kYWwtaGVhZGVyIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIHR5cGU9ImJ1dHRvbiIgY2xhc3M9ImNsb3NlIiBkYXRhLWRpc21pc3M9Im1vZGFsIiBhcmlhLWhpZGRlbj0idHJ1ZSI+JnRpbWVzOzwvYnV0dG9uPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxoNCBjbGFzcz0ibW9kYWwtdGl0bGUgdGhlbVRpdGxlIj5QYXJ0YWdlcjwvaDQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Im1vZGFsLWJvZHkiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImZvcm0tZ3JvdXAiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgZm9yPSJkYXRhW0NvbnRhY3RdW25vbV0iIGNsYXNzPSJjb2wtbWQtNCBjb250cm9sLWxhYmVsIj5Wb3RyZSBub20gKjwvbGFiZWw+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbC1tZC04Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJ0ZXh0IiBjbGFzcz0iZm9ybS1jb250cm9sIiBuYW1lPSJkYXRhW0NvbnRhY3RdW25vbV0iIHJlcXVpcmVkPSIiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJmb3JtLWdyb3VwIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGZvcj0iZGF0YVtDb250YWN0XVtmcm9tXSIgY2xhc3M9ImNvbC1tZC00IGNvbnRyb2wtbGFiZWwiPlZvdHJlIGFkcmVzc2UgbWFpbCAqPC9sYWJlbD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sLW1kLTgiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJ0ZXh0IiBjbGFzcz0iZm9ybS1jb250cm9sIiBuYW1lPSJkYXRhW0NvbnRhY3RdW2Zyb21dIiByZXF1aXJlZD0iIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZm9ybS1ncm91cCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBmb3I9ImRhdGFbQ29udGFjdF1bdG9dIiBjbGFzcz0iY29sLW1kLTQgY29udHJvbC1sYWJlbCI+TWFpbCBkZSB2b3RyZSBhbWkgKjwvbGFiZWw+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbC1tZC04Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0idGV4dCIgY2xhc3M9ImZvcm0tY29udHJvbCIgbmFtZT0iZGF0YVtDb250YWN0XVt0b10iIHJlcXVpcmVkPSIiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJhc2JyeXciIHN0eWxlPSJkaXNwbGF5Om5vbmUiPgo8aW5wdXQgdHlwZT0idGV4dCIgbmFtZT0iYXNfZHluYSIgZGF0YS13YWl0PSIxNDQ5NGM4MGMzYmIwZTMzZDFlZDQzODQyNGUwZDVkNCIgZGF0YS1vcmlnPSJmMWY1M2M5ZDhlNjJkZGNmYTZiOGJiY2Y1ZWZkNDM2NSIgY2xhc3M9ImFzX2ZpZWxkIGFzX2ZpZWxkLTIgMiIgdmFsdWU9ImYxZjUzYzlkOGU2MmRkY2ZhNmI4YmJjZjVlZmQ0MzY1Ii8+CjxpbnB1dCB0eXBlPSJ0ZXh0IiBuYW1lPSJhc19zdGF0IiBjbGFzcz0iYXNfZmllbGQgYXNfZmllbGQtMSAxIiB2YWx1ZT0iIi8+CjwvZGl2PgoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJmb3JtLWdyb3VwIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGZvcj0iZGF0YVtDb250YWN0XVttZXNzYWdlXSIgY2xhc3M9ImNvbC1tZC00IGNvbnRyb2wtbGFiZWwiPlZvdHJlIG1lc3NhZ2U8L2xhYmVsPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtbWQtOCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9InRleHQiIGNsYXNzPSJmb3JtLWNvbnRyb2wiIGlkPSJtZXNzYWdlIiBuYW1lPSJkYXRhW0NvbnRhY3RdW21lc3NhZ2VdIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Im1vZGFsLWZvb3RlciI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGNsYXNzPSJzbWFsbCBvYmxpZ0NoYW1wIHB1bGwtbGVmdCI+KkNoYW1wcyBvYmxpZ2F0b2lyZXM8L2xhYmVsPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxidXR0b24gdHlwZT0ic3VibWl0IiBjbGFzcz0iYnRuIGJ0bi1kZWZhdWx0IHJpZ2h0Ij5FbnZveWVyPC9idXR0b24+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgPC9mb3JtPgogICAgICAgICAgICAgICAgICAgIDwvZGl2PjwhLS0gLy5tb2RhbC1jb250ZW50IC0tPgogICAgICAgICAgICAgICAgPC9kaXY+PCEtLSAvLm1vZGFsLWRpYWxvZyAtLT4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgCiAgICAKICAgICAgICAKICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGlkPSJDb250YWN0IiBjbGFzcz0ibW9kYWwgZmFkZSIgIHRhYmluZGV4PSItMSIgcm9sZT0iZGlhbG9nIiBhcmlhLWxhYmVsbGVkYnk9Im15TGFyZ2VNb2RhbExhYmVsIiBhcmlhLWhpZGRlbj0idHJ1ZSI+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJtb2RhbC1kaWFsb2cgbW9kYWwtbWQiPgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InJvdyBtb2RhbC1jb250ZW50Ij4KICAgICAgICAgICAgICAgICAgICAgICAgPGZvcm0gY2xhc3M9ImZvcm0taG9yaXpvbnRhbCIgcm9sZT0iZm9ybSIgbWV0aG9kPSJwb3N0IiBhY3Rpb249Ii84My1BUFBBUlRFTUVOVC0yLVBJRUNFUy5odG1sIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJoaWRkZW4iIHZhbHVlPSJ3d3cuZ3JlbmVsbGUtaW1tb2JpbGllci5jb20vODMtQVBQQVJURU1FTlQtMi1QSUVDRVMuaHRtbCIgbmFtZT0iZGF0YVtDb250YWN0XVtvcmlnaW5lbWFpbF0iPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9ImhpZGRlbiIgdmFsdWU9ImdyZW5lbGxlQGdyZW5lbGxlLmZyIiAgbmFtZT0iZGF0YVtDb250YWN0XVt0b10iPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJtb2RhbC1oZWFkZXIiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxidXR0b24gdHlwZT0iYnV0dG9uIiBjbGFzcz0iY2xvc2UiIGRhdGEtZGlzbWlzcz0ibW9kYWwiIGFyaWEtaGlkZGVuPSJ0cnVlIj4mdGltZXM7PC9idXR0b24+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGg0IGNsYXNzPSJtb2RhbC10aXRsZSB0aGVtVGl0bGUiPkNvbnRhY3RlcjwvaDQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Im1vZGFsLWJvZHkiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZm9ybS1ncm91cCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsICBjbGFzcz0iY29sLXhzLTEyIGNvbC1zbS00IGNvbnRyb2wtbGFiZWwiPlZvdHJlIG5vbSAgKjwvbGFiZWw+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sLXhzLTEyIGNvbC1zbS04Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9InRleHQiICAgcGxhY2Vob2xkZXI9IiIgIG5hbWU9ImRhdGFbQ29udGFjdF1bbm9tXSIgY2xhc3M9ImZvcm0tY29udHJvbCIgcmVxdWlyZWQgb25pbnZhbGlkPSJzZXRDdXN0b21WYWxpZGl0eSgnVmV1aWxsZXogcmVuc2VpZ25lciBjZSBjaGFtcHMnKSIgb25pbnB1dD0ic2V0Q3VzdG9tVmFsaWRpdHkoJycpIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZm9ybS1ncm91cCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsICBjbGFzcz0iY29sLXhzLTEyIGNvbC1zbS00IGNvbnRyb2wtbGFiZWwiPlZvdHJlIGFkcmVzc2UgbWFpbCAgKjwvbGFiZWw+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sLXhzLTEyIGNvbC1zbS04Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9ImVtYWlsIiAgIHBsYWNlaG9sZGVyPSIiICBuYW1lPSJkYXRhW0NvbnRhY3RdW2VtYWlsXSIgY2xhc3M9ImZvcm0tY29udHJvbCIgcmVxdWlyZWQgb25pbnZhbGlkPSJzZXRDdXN0b21WYWxpZGl0eSgnVmV1aWxsZXogcmVuc2VpZ25lciBjZSBjaGFtcHMnKSIgb25pbnB1dD0ic2V0Q3VzdG9tVmFsaWRpdHkoJycpIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZm9ybS1ncm91cCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsICBjbGFzcz0iY29sLXhzLTEyIGNvbC1zbS00IGNvbnRyb2wtbGFiZWwiPlZvdHJlIFTDqWzDqXBob25lICAqPC9sYWJlbD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2wteHMtMTIgY29sLXNtLTgiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0idGV4dCIgICBwbGFjZWhvbGRlcj0iIiAgbmFtZT0iZGF0YVtDb250YWN0XVt0ZWxdIiBjbGFzcz0iZm9ybS1jb250cm9sIiByZXF1aXJlZCBvbmludmFsaWQ9InNldEN1c3RvbVZhbGlkaXR5KCdWZXVpbGxleiByZW5zZWlnbmVyIGNlIGNoYW1wcycpIiBvbmlucHV0PSJzZXRDdXN0b21WYWxpZGl0eSgnJykiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJmb3JtLWdyb3VwIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgIGNsYXNzPSJjb2wteHMtMTIgY29sLXNtLTQgY29udHJvbC1sYWJlbCI+Vm90cmUgdmlsbGUgICo8L2xhYmVsPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbC14cy0xMiBjb2wtc20tOCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJ0ZXh0IiAgIHBsYWNlaG9sZGVyPSIiICBuYW1lPSJkYXRhW0NvbnRhY3RdW3ZpbGxlXSIgY2xhc3M9ImZvcm0tY29udHJvbCIgcmVxdWlyZWQgb25pbnZhbGlkPSJzZXRDdXN0b21WYWxpZGl0eSgnVmV1aWxsZXogcmVuc2VpZ25lciBjZSBjaGFtcHMnKSIgb25pbnB1dD0ic2V0Q3VzdG9tVmFsaWRpdHkoJycpIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZm9ybS1ncm91cCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsICBjbGFzcz0iY29sLXhzLTEyIGNvbC1zbS00IGNvbnRyb2wtbGFiZWwiPlZvdHJlIG1lc3NhZ2UgPC9sYWJlbD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2wteHMtMTIgY29sLXNtLTgiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGV4dGFyZWEgbmFtZT0iZGF0YVtDb250YWN0XVttZXNzYWdlXSIgY2xhc3M9ImZvcm0tY29udHJvbCIgcGxhY2Vob2xkZXI9IiIgPjwvdGV4dGFyZWE+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZm9ybS1ncm91cCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2wteHMtMTIgY29sLXNtLTggY29sLXNtLXB1c2gtNCBjb250cm9sLWxhYmVsIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBSw6lmw6lyZW5jZTogNjI3NgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJoaWRkZW4iIG5hbWU9ImRhdGFbaWRiaWVuXVtdIiB2YWx1ZT0iODMiIC8+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImFzYnJ5dyIgc3R5bGU9ImRpc3BsYXk6bm9uZSI+CjxpbnB1dCB0eXBlPSJ0ZXh0IiBuYW1lPSJhc19keW5hIiBkYXRhLXdhaXQ9IjE0NDk0YzgwYzNiYjBlMzNkMWVkNDM4NDI0ZTBkNWQ0IiBkYXRhLW9yaWc9ImYxZjUzYzlkOGU2MmRkY2ZhNmI4YmJjZjVlZmQ0MzY1IiBjbGFzcz0iYXNfZmllbGQgYXNfZmllbGQtMiAyIiB2YWx1ZT0iZjFmNTNjOWQ4ZTYyZGRjZmE2YjhiYmNmNWVmZDQzNjUiLz4KPGlucHV0IHR5cGU9InRleHQiIG5hbWU9ImFzX3N0YXQiIGNsYXNzPSJhc19maWVsZCBhc19maWVsZC0xIDEiIHZhbHVlPSIiLz4KPC9kaXY+CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icmdwZC1jaGVja2JveCI+CiAgICA8aW5wdXQgdHlwZT0iY2hlY2tib3giIG5hbWU9InJncGQtYWdyZWVtZW50IiBpZD0icmdwZC1hZ3JlZW1lbnRtb2RhbCIgLz4KICAgIDxsYWJlbCBmb3I9InJncGQtYWdyZWVtZW50bW9kYWwiPkonYWNjZXB0ZSBsZXMgY29uZGl0aW9ucyBkJ3V0aWxpc2F0aW9uIGRlcyBkb25uw6llcyAoKik8L2xhYmVsPgo8L2Rpdj4KPHNjcmlwdD4KICAndXNlIHN0cmljdCc7CgogIChmdW5jdGlvbiAoKSB7CiAgICB2YXIgYWdyZWVtZW50ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3JncGQtYWdyZWVtZW50bW9kYWwnKTsKICAgIHZhciBmb3JtID0gYWdyZWVtZW50LmNsb3Nlc3QoJ2Zvcm0nKTsKICAgIGZvcm0uYWRkRXZlbnRMaXN0ZW5lcignc3VibWl0JywgZnVuY3Rpb24gKGV2ZW50KSB7CiAgICAgIGlmICghYWdyZWVtZW50LmNoZWNrZWQpIHsKICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpOwogICAgICAgIGFsZXJ0KCJWZXVpbGxleiBhY2NlcHRlciBsJ3V0aWxpc2F0aW9uIGRlIHZvcyBkb25uw6llcyBwb3VyIGNvbnRpbnVlci4iKTsKICAgICAgICByZXR1cm4gZmFsc2U7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgcmV0dXJuIHRydWU7CiAgICAgIH0KICAgIH0pOwogIH0pKCk7Cjwvc2NyaXB0PiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJtb2RhbC1mb290ZXIiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBjbGFzcz0ic21hbGwgb2JsaWdDaGFtcCBwdWxsLWxlZnQiPipDaGFtcHMgb2JsaWdhdG9pcmVzPC9sYWJlbD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIHR5cGU9InN1Ym1pdCIgY2xhc3M9ImJ0biBidG4tZGVmYXVsdCByaWdodCI+RW52b3llcjwvYnV0dG9uPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvZm9ybT4KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ibGVnYWxzIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJyZ3BkLWxlZ2FscyI+KiA6IExlcyBpbmZvcm1hdGlvbnMgcmVjdWVpbGxpZXMgc3VyIGNlIGZvcm11bGFpcmUgc29udCBlbnJlZ2lzdHLDqWVzIGRhbnMgdW4gZmljaGllciBpbmZvcm1hdGlzw6kgcGFyIExhIEJvaXRlIEltbW8gcG91ciBsYSBnZXN0aW9uIGRlIGxhIGNsaWVudMOobGUvcHJvc3BlY3RzIGRlIEdyZW5lbGxlIEltbW9iaWxpZXIuCkVsbGVzIHNvbnQgY29uc2VydsOpZXMganVzcXUnw6AgZGVtYW5kZSBkZSBzdXBwcmVzc2lvbiBldCBzb250IGRlc3RpbsOpZXMgw6AgR3JlbmVsbGUgSW1tb2JpbGllci4KQ29uZm9ybcOpbWVudCDDoCBsYSBsb2kgwqsgaW5mb3JtYXRpcXVlIGV0IGxpYmVydMOpcyDCuywgdm91cyBwb3V2ZXogZXhlcmNlciB2b3RyZSBkcm9pdCBkJ2FjY8OocyBhdXggZG9ubsOpZXMgdm91cyBjb25jZXJuYW50IGV0IGxlcyBmYWlyZSByZWN0aWZpZXIgZW4gY29udGFjdGFudCBHcmVuZWxsZSBJbW1vYmlsaWVyLgpOb3VzIHZvdXMgaW5mb3Jtb25zIGRlIGzigJlleGlzdGVuY2UgZGUgbGEgbGlzdGUgZCdvcHBvc2l0aW9uIGF1IGTDqW1hcmNoYWdlIHTDqWzDqXBob25pcXVlIMKrIEJsb2N0ZWwgwrssIHN1ciBsYXF1ZWxsZSB2b3VzIHBvdXZleiB2b3VzIGluc2NyaXJlIGljaSA6IGh0dHBzOi8vY29uc28uYmxvY3RlbC5mci88L3A+ICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgPC9kaXY+PCEtLSAvLm1vZGFsLWNvbnRlbnQgLS0+CiAgICAgICAgICAgICAgICA8L2Rpdj48IS0tIC8ubW9kYWwtZGlhbG9nIC0tPgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAKICAgIAogICAKICAgCiAgICA8c2VjdGlvbiBpdGVtc2NvcGUgaXRlbXR5cGU9Imh0dHBzOi8vc2NoZW1hLm9yZy9Qcm9kdWN0IiBjbGFzcz0iY29udGFpbmVyRGV0YWlsIGNvbnRlbnRQYWdlIGNvbnRhaW5lciI+CiAgICAgICAgCiAgICA8ZGl2IGNsYXNzPSJwYWdlQm9keSI+CgogICAgICAgICAgICA8ZGl2PgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0idGhlbVRpdGxlIGgxUGFnZSI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxoMSBpdGVtcHJvcD0ibmFtZSI+QVBQQVJURU1FTlQgMiBQSUVDRVMgPC9oMT4KICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIDxzY3JpcHQgdHlwZT0nYXBwbGljYXRpb24vbGQranNvbic+CiAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICAiQGNvbnRleHQiOiJodHRwczovL3NjaGVtYS5vcmciLAogICAgICAgICAgICAgICAgICAgICAgICAiQHR5cGUiOiJCcmVhZGNydW1iTGlzdCIsCiAgICAgICAgICAgICAgICAgICAgICAgICJpdGVtTGlzdEVsZW1lbnQiOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJAdHlwZSI6Ikxpc3RJdGVtIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJwb3NpdGlvbiI6MSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJpdGVtIjogewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJAaWQiOiIvIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAibmFtZSI6IkFjY3VlaWwiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAiQHR5cGUiOiJMaXN0SXRlbSIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAicG9zaXRpb24iOjIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAiaXRlbSI6IHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAiQGlkIjoiLzgzLUFQUEFSVEVNRU5ULTItUElFQ0VTLmh0bWwiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJuYW1lIjoiQVBQQVJURU1FTlQgMiBQSUVDRVMgIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF0KICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIDwvc2NyaXB0PgogICAgICAgICAgICAgICAgICAgIDxvbCBjbGFzcz0iYnJlYWRjcnVtYiI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGk+PGEgaHJlZj0iLyIgPkFjY3VlaWw8L2E+PC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaT48YSBocmVmPSIvaW1tb2JpbGllci0zOTAyNi1wYXJpcy8xIiA+UGFyaXM8L2E+PC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaT5BUFBBUlRFTUVOVCAyIFBJRUNFUyA8L2xpPgogICAgICAgICAgICAgICAgICAgIDwvb2w+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgCiAgICAgICAgCiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbnRhaW5lckR0ICI+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJyb3ciPgogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtbWQtMTIgZG9jcyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIAogICAgCiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJyb3cgYnRuRHQiPgogICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbC1tZC0zIGJhY2tsaXN0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJidG4gYnRuLWRlZmF1bHQgYmFjayI+PCBSZXRvdXI8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgIAogICAgPGRpdiBjbGFzcz0iY29sLWxnLTUgY29sLW1kLTQgYWN0aW9uRHQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImJ0bi1kdCIgZGF0YS10b2dnbGU9Im1vZGFsIiBkYXRhLXRhcmdldD0iI0NvbnRhY3QiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9Imljb24tY29udGFjdG1haWwyIGljb25zLWR0IiAgZGF0YS10b2dnbGU9InRvb2x0aXAiIGRhdGEtcGxhY2VtZW50PSJ0b3AiIHRpdGxlPSJDb250YWN0ZXotbm91cyIgPjwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJidG4tZHQiIG9uY2xpY2s9IndpbmRvdy5vcGVuKCcvYWRtaW4vcGRmLnBocD9sYW5nPWZyJmlkYW5uPTgzJmZpY2hlX3R5cGU9dmlzaXRlJnBkZl9vcmllbnRhdGlvbj1QJnBkZl90ZW1wbGF0ZT0xJyk7IHJldHVybiBmYWxzZTsiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9Imljb24taW1wcmltZXIyIGljb25zLWR0IiAgZGF0YS10b2dnbGU9InRvb2x0aXAiIGRhdGEtcGxhY2VtZW50PSJ0b3AiIHRpdGxlPSJJbXByaW1lciBjZXR0ZSBmaWNoZSIgPjwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iYnRuLWR0IiBkYXRhLXRvZ2dsZT0ibW9kYWwiIGRhdGEtdGFyZ2V0PSIjQ2FsY3VsZXR0ZSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9Imljb24tY2FsY3VsZXR0ZTIgaWNvbnMtZHQiICBkYXRhLXRvZ2dsZT0idG9vbHRpcCIgZGF0YS1wbGFjZW1lbnQ9InRvcCIgdGl0bGU9IkNhbGN1bGV0dGUiID48L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImJ0bi1kdCBidG4tc2VsZWN0IiByZWw9IjgzIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJpY29uLXBhbmllciBpY29ucy1kdCIgIGRhdGEtdG9nZ2xlPSJ0b29sdGlwIiBkYXRhLXBsYWNlbWVudD0idG9wIiB0aXRsZT0iQWpvdXRlciDDoCBtYSBzw6lsZWN0aW9uIiA+PC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9ImhpZGRlbiIgdmFsdWU9IjgzIi8+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKCiAgICAgICAgICAgICAgICAgICAgICAgIAogICAgPGRpdiBjbGFzcz0iY29sLWxnLTQgY29sLW1kLTUgcnN2RHQiIGRhdGEtdXJsPSJodHRwOi8vd3d3LmdyZW5lbGxlLWltbW9iaWxpZXIuY29tLy84My1BUFBBUlRFTUVOVC0yLVBJRUNFUy5odG1sIj4KICAgICAgICAKICAgICAgICAgICAgPHA+UGFydGFnZXIgc3VyPC9wPgogICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBpZD0iZmFjZWJvb2siIGRhdGEtdXJsPSJodHRwOi8vd3d3LmdyZW5lbGxlLWltbW9iaWxpZXIuY29tLzgzLUFQUEFSVEVNRU5ULTItUElFQ0VTLmh0bWw/bGFuZz1mciIgZGF0YS10aXRsZT0iICI+PC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgaWQ9InR3aXR0ZXIiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJib3giPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InNoYXJlIGljb24tdHdpdHRlcjMgaWNvbnMtZHQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vdHdpdHRlci5jb20vaW50ZW50L3R3ZWV0P29yaWdpbmFsX3JlZmVyZXI9aHR0cDovL3d3dy5ncmVuZWxsZS1pbW1vYmlsaWVyLmNvbS84My1BUFBBUlRFTUVOVC0yLVBJRUNFUy5odG1sJnJlZl9zcmM9dHdzcmNedGZ3JnRleHQ9dmVudGUgUGFyaXMgOiBBUFBBUlRFTUVOVCAyIFBJRUNFUyB8IEdyZW5lbGxlIEltbW9iaWxpZXImdHdfcD10d2VldGJ1dHRvbiZ1cmw9aHR0cDovL3d3dy5ncmVuZWxsZS1pbW1vYmlsaWVyLmNvbS84My1BUFBBUlRFTUVOVC0yLVBJRUNFUy5odG1sIj48L2E+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGlkPSJnb29nbGVwbHVzIiBkYXRhLXVybD0iaHR0cDovL3d3dy5ncmVuZWxsZS1pbW1vYmlsaWVyLmNvbS84My1BUFBBUlRFTUVOVC0yLVBJRUNFUy5odG1sIiBkYXRhLXRpdGxlPSIgIj48L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InNoYXJycmUiIGRhdGEtdG9nZ2xlPSJtb2RhbCIgZGF0YS10YXJnZXQ9IiNzZW5kRnJpZW5kIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJpY29uLXBhcnRhZ2VyMiBpY29ucy1kdCI+PC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgPC9kaXY+CgoKICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ic3RhdHVzIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iU3RhdHV0QmllbiBleGNsdXNpZiI+RXhjbHVzaXZpdMOpPC9zcGFuPiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAKICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29udGVudER0IGR0MyI+CiAgICAgICAgICAgICAgICAgICAgCiAgICAKICAgICAgICA8ZGl2IGNsYXNzPSJyb3ciPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtbWQtMTIiPgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0idG9wRHQzIHNsaWRlclYyIj4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJiaWVuVGl0bGUgcm93Ij4KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icGFydC1sZWZ0ICBjb2wtbWQtOSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aDI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEFwcGFydGVtZW50CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAzNi41NCBtJnN1cDI7IC0gCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAyIHBpw6hjZXMgLSAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgUGFyaXMgKDc1MDA3KQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvaDI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJyZWYiIGl0ZW1wcm9wPSJwcm9kdWN0SUQiPlJlZiA2Mjc2PC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InByaXgtZHQzICBjb2wtbWQtMyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9Im1vdGlmLXByaXgtZHQiPjwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ibGFiZWwtcHJpeCI+UHJpeDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ2YWx1ZS1wcml4Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGl0ZW1wcm9wPSJvZmZlcnMiIGl0ZW1zY29wZSBpdGVtdHlwZT0iaHR0cHM6Ly9zY2hlbWEub3JnL09mZmVyIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGl0ZW1wcm9wPSJwcmljZSIgY29udGVudD0iNDk1MDAwIj40OTUgMDAwPC9zcGFuPiA8c3BhbiBpdGVtcHJvcD0icHJpY2VDdXJyZW5jeSI+4oKsPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJzbWFsbCI+IEhBSSo8L3NwYW4+ICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICA8ZmlndXJlIGNsYXNzPSJtYWluSW1nICI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgPGRpdiBjbGFzcz0ibG9hZGVyIj4KICAgICAgICAgICAgPGltZyBzcmM9ImltYWdlcy9sb2FkaW5nLmdpZiIgYWx0PSJnYWxsZXJ5IGxvYWRlciIvPgogICAgICAgIDwvZGl2PgogICAgICAgIDx1bCBjbGFzcz0iaW1hZ2VHYWxsZXJ5IGltYWdlSEMgIGxvYWRpbmciPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGkgZGF0YS1pdGVyYXRvcj0iMCIKICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS10aHVtYj0iLy9ncmVuZWxsZWltbW8uc3RhdGljbGJpLmNvbS8yMDB4MjAwL2ltYWdlcy9iaWVucy8xL2U5MTc2MmQyMWNkNjIwYjg0YzVmOGJjYTAzMTkxNmVmL3Bob3RvX2IyZjIyMGQ0OTRkYWMwYTUyNWRmYTZjNWMzNmI0YTRmLmpwZyIKICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1zcmM9Ii8vZ3JlbmVsbGVpbW1vLnN0YXRpY2xiaS5jb20vb3JpZ2luYWwvaW1hZ2VzL2JpZW5zLzEvZTkxNzYyZDIxY2Q2MjBiODRjNWY4YmNhMDMxOTE2ZWYvcGhvdG9fYjJmMjIwZDQ5NGRhYzBhNTI1ZGZhNmM1YzM2YjRhNGYuanBnIgogICAgICAgICAgICAgICAgICAgICAgICBkYXRhLXNyYy1mb3J0aHVtYj0iLy9ncmVuZWxsZWltbW8uc3RhdGljbGJpLmNvbS9vcmlnaW5hbC9pbWFnZXMvYmllbnMvMS9lOTE3NjJkMjFjZDYyMGI4NGM1ZjhiY2EwMzE5MTZlZi9waG90b19iMmYyMjBkNDk0ZGFjMGE1MjVkZmE2YzVjMzZiNGE0Zi5qcGciPgogICAgICAgICAgICAgICAgICAgICAgICA8aW1nIHNyYz0iLy9ncmVuZWxsZWltbW8uc3RhdGljbGJpLmNvbS9vcmlnaW5hbC9pbWFnZXMvYmllbnMvMS9lOTE3NjJkMjFjZDYyMGI4NGM1ZjhiY2EwMzE5MTZlZi9waG90b19iMmYyMjBkNDk0ZGFjMGE1MjVkZmE2YzVjMzZiNGE0Zi5qcGciIGFsdD0iIiAvPgogICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaSBkYXRhLWl0ZXJhdG9yPSIxIgogICAgICAgICAgICAgICAgICAgICAgICBkYXRhLXRodW1iPSIvL2dyZW5lbGxlaW1tby5zdGF0aWNsYmkuY29tLzIwMHgyMDAvaW1hZ2VzL2JpZW5zLzEvZTkxNzYyZDIxY2Q2MjBiODRjNWY4YmNhMDMxOTE2ZWYvcGhvdG9fYzIzMWE4NTdmNGVjZjUzZjBiNmU5Y2MzMzk5M2I4NDcuanBnIgogICAgICAgICAgICAgICAgICAgICAgICBkYXRhLXNyYz0iLy9ncmVuZWxsZWltbW8uc3RhdGljbGJpLmNvbS9vcmlnaW5hbC9pbWFnZXMvYmllbnMvMS9lOTE3NjJkMjFjZDYyMGI4NGM1ZjhiY2EwMzE5MTZlZi9waG90b19jMjMxYTg1N2Y0ZWNmNTNmMGI2ZTljYzMzOTkzYjg0Ny5qcGciCiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtc3JjLWZvcnRodW1iPSIvL2dyZW5lbGxlaW1tby5zdGF0aWNsYmkuY29tL29yaWdpbmFsL2ltYWdlcy9iaWVucy8xL2U5MTc2MmQyMWNkNjIwYjg0YzVmOGJjYTAzMTkxNmVmL3Bob3RvX2MyMzFhODU3ZjRlY2Y1M2YwYjZlOWNjMzM5OTNiODQ3LmpwZyI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgc3JjPSIvL2dyZW5lbGxlaW1tby5zdGF0aWNsYmkuY29tL29yaWdpbmFsL2ltYWdlcy9iaWVucy8xL2U5MTc2MmQyMWNkNjIwYjg0YzVmOGJjYTAzMTkxNmVmL3Bob3RvX2MyMzFhODU3ZjRlY2Y1M2YwYjZlOWNjMzM5OTNiODQ3LmpwZyIgYWx0PSIiIC8+CiAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpIGRhdGEtaXRlcmF0b3I9IjIiCiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtdGh1bWI9Ii8vZ3JlbmVsbGVpbW1vLnN0YXRpY2xiaS5jb20vMjAweDIwMC9pbWFnZXMvYmllbnMvMS9lOTE3NjJkMjFjZDYyMGI4NGM1ZjhiY2EwMzE5MTZlZi9waG90b18wODRjZDFlOTljNzBiMzYzYjcyNjY5MTNhOGNlN2Y5ZS5qcGciCiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtc3JjPSIvL2dyZW5lbGxlaW1tby5zdGF0aWNsYmkuY29tL29yaWdpbmFsL2ltYWdlcy9iaWVucy8xL2U5MTc2MmQyMWNkNjIwYjg0YzVmOGJjYTAzMTkxNmVmL3Bob3RvXzA4NGNkMWU5OWM3MGIzNjNiNzI2NjkxM2E4Y2U3ZjllLmpwZyIKICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1zcmMtZm9ydGh1bWI9Ii8vZ3JlbmVsbGVpbW1vLnN0YXRpY2xiaS5jb20vb3JpZ2luYWwvaW1hZ2VzL2JpZW5zLzEvZTkxNzYyZDIxY2Q2MjBiODRjNWY4YmNhMDMxOTE2ZWYvcGhvdG9fMDg0Y2QxZTk5YzcwYjM2M2I3MjY2OTEzYThjZTdmOWUuanBnIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBzcmM9Ii8vZ3JlbmVsbGVpbW1vLnN0YXRpY2xiaS5jb20vb3JpZ2luYWwvaW1hZ2VzL2JpZW5zLzEvZTkxNzYyZDIxY2Q2MjBiODRjNWY4YmNhMDMxOTE2ZWYvcGhvdG9fMDg0Y2QxZTk5YzcwYjM2M2I3MjY2OTEzYThjZTdmOWUuanBnIiBhbHQ9IiIgLz4KICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGkgZGF0YS1pdGVyYXRvcj0iMyIKICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS10aHVtYj0iLy9ncmVuZWxsZWltbW8uc3RhdGljbGJpLmNvbS8yMDB4MjAwL2ltYWdlcy9iaWVucy8xL2U5MTc2MmQyMWNkNjIwYjg0YzVmOGJjYTAzMTkxNmVmL3Bob3RvXzE2ZDM2ZTQyNjIyZjQ3MmM0ODBjY2NhMTk4NGMyZjQ1LmpwZyIKICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1zcmM9Ii8vZ3JlbmVsbGVpbW1vLnN0YXRpY2xiaS5jb20vb3JpZ2luYWwvaW1hZ2VzL2JpZW5zLzEvZTkxNzYyZDIxY2Q2MjBiODRjNWY4YmNhMDMxOTE2ZWYvcGhvdG9fMTZkMzZlNDI2MjJmNDcyYzQ4MGNjY2ExOTg0YzJmNDUuanBnIgogICAgICAgICAgICAgICAgICAgICAgICBkYXRhLXNyYy1mb3J0aHVtYj0iLy9ncmVuZWxsZWltbW8uc3RhdGljbGJpLmNvbS9vcmlnaW5hbC9pbWFnZXMvYmllbnMvMS9lOTE3NjJkMjFjZDYyMGI4NGM1ZjhiY2EwMzE5MTZlZi9waG90b18xNmQzNmU0MjYyMmY0NzJjNDgwY2NjYTE5ODRjMmY0NS5qcGciPgogICAgICAgICAgICAgICAgICAgICAgICA8aW1nIHNyYz0iLy9ncmVuZWxsZWltbW8uc3RhdGljbGJpLmNvbS9vcmlnaW5hbC9pbWFnZXMvYmllbnMvMS9lOTE3NjJkMjFjZDYyMGI4NGM1ZjhiY2EwMzE5MTZlZi9waG90b18xNmQzNmU0MjYyMmY0NzJjNDgwY2NjYTE5ODRjMmY0NS5qcGciIGFsdD0iIiAvPgogICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdWw+CiAgICAKCiAgICAgICAgICAgICAgICAgICAgICAgIDwvZmlndXJlPgogICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgogICAgCgoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgIAoKICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgIAoKICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InJvdyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGFydGljbGUgY2xhc3M9ImNvbC1tZC02ICBlbGVtZW50RHQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InRoZW1UaXRsZSBlbGVtZW50RHRUaXRsZSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGgxPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBEZXNjcmlwdGlvbiBkZSBsJ29mZnJlCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9oMT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cCBpdGVtcHJvcD0iZGVzY3JpcHRpb24iPkV4Y2x1c2l2aXTDqSBHcmVuZWxsZSBiZWF1IDIgcGnDqGNlcyBwcsOocyBydWUgQ2xlci4gRGFucyB1biBpbW1ldWJsZSBhbmNpZW4sIGwnYXBwYXJ0ZW1lbnQgZXN0IHNpdHXDqSBhdSA1w6htZSBldCBkZXJuaWVyIMOpdGFnZSBzYW5zIGFzY2Vuc2V1ci4gSWwgc2UgY29tcG9zZSBkJ3VuIHPDqWpvdXIgYXZlYyBjdWlzaW5lIG91dmVydGUsIHVuZSBjaGFtYnJlLCB1bmUgc2FsbGUgZCdlYXUgZXQgdW4gd2Mgc8OpcGFyw6kuIElsIG9mZnJlIHVuZSB2dWUgc3VyIGxlcyB0b2l0cyBkZSBQYXJpcyBldCBsYSBUb3VyIEVpZmZlbC4gVW5lIGNhdmUgY29tcGzDqHRlIGNlIGJpZW4uIEVYQ0VMTEVOVEUgU0lUVUFUSU9OLiBDSEFSTUUuIDQ5NSAwMDDigqwgZG9udCA0LDIxJSBkJ2hvbm9yYWlyZXMgY2hhcmdlIGFjcXXDqXJldXIuIEJpZW4gc291bWlzIMOgIGxhIGNvcHJvcHJpw6l0w6kuIDQyIGxvdHMgZGFucyBsYSBjb3Byb3ByacOpdMOpLiBDaGFyZ2VzIGNvdXJhbnRlcyBhbm51ZWxsZXMgMTg3MiDigqwgUsOpZiA2Mjc2IE1hbmRhdCBOwrA3OTU4LjwvcD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hcnRpY2xlPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhcnRpY2xlIGNsYXNzPSJjb2wtbWQtNiAgZWxlbWVudER0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0aGVtVGl0bGUgZWxlbWVudER0VGl0bGUiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxoMT5EZXNjcmlwdGlmIGR1IGJpZW48L2gxPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJkYXRhQmllbiI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dWwgaWQ9ImRhdGFUaXRsZSIgY2xhc3M9Im5hdiBuYXYtdGFicyIgcm9sZT0idGFibGlzdCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaSBjbGFzcz0iYWN0aXZlIj48YSBocmVmPSIjaW5mb3MiIGNsYXNzPSJidG4tZGVmYXVsdCI+R8OpbsOpcmFsPC9hPjwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaSBjbGFzcz0iIj48YSBocmVmPSIjZGV0YWlscyIgY2xhc3M9ImJ0bi1kZWZhdWx0Ij5Ew6l0YWlscyArPC9hPjwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaSBjbGFzcz0iIj48YSBocmVmPSIjY29wcm8iIGNsYXNzPSJidG4tZGVmYXVsdCI+Q29wcm9wcmnDqXTDqTwvYT48L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGkgY2xhc3M9IiI+PGEgaHJlZj0iI2luZm9zZmkiIGNsYXNzPSJidG4tZGVmYXVsdCI+RmluYW5jaWVyPC9hPjwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdWw+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgaWQ9ImRhdGFDb250ZW50IiBjbGFzcz0idGFiLWNvbnRlbnQiPgogICAgICAgICAgICAKICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InRhYi1wYW5lIGZhZGUgIGFjdGl2ZSBpbiIgaWQ9ImluZm9zIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJkYXRhIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0idGVybUluZm9zIj5Db2RlIHBvc3RhbDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InZhbHVlSW5mb3MgIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA3NTAwNyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGhyPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9ImRhdGEiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJ0ZXJtSW5mb3MiPlN1cmZhY2UgaGFiaXRhYmxlIChtwrIpPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0idmFsdWVJbmZvcyAiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDM2LDU0IG3CsiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGhyPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9ImRhdGEiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJ0ZXJtSW5mb3MiPlN1cmZhY2UgbG9pIENhcnJleiAobcKyKTwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InZhbHVlSW5mb3MgIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAzNi41NCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGhyPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9ImRhdGEiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJ0ZXJtSW5mb3MiPk5vbWJyZSBkZSBjaGFtYnJlKHMpPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0idmFsdWVJbmZvcyAiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDEgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxocj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJkYXRhIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0idGVybUluZm9zIj5Ob21icmUgZGUgcGnDqGNlczwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InZhbHVlSW5mb3MgIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAyICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3A+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aHI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0iZGF0YSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InRlcm1JbmZvcyI+RXRhZ2U8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJ2YWx1ZUluZm9zICIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgNSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGhyPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9ImRhdGEiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJ0ZXJtSW5mb3MiPkFzY2Vuc2V1cjwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InZhbHVlSW5mb3MgIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBOT04gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxocj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJkYXRhIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0idGVybUluZm9zIj5WdWU8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJ2YWx1ZUluZm9zICIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgVG91ciBFaWZmZWwgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3A+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aHI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InRhYi1wYW5lIGZhZGUgIiBpZD0iZGV0YWlscyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0iZGF0YSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InRlcm1JbmZvcyI+TmIgZGUgc2FsbGUgZCdlYXU8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJ2YWx1ZUluZm9zICIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgMSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGhyPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9ImRhdGEiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJ0ZXJtSW5mb3MiPkN1aXNpbmU8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJ2YWx1ZUluZm9zICIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgQU1FUklDQUlORSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGhyPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9ImRhdGEiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJ0ZXJtSW5mb3MiPk1vZGUgZGUgY2hhdWZmYWdlPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0idmFsdWVJbmZvcyAiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEVMRUNUUklRVUUgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxocj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJkYXRhIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0idGVybUluZm9zIj5UeXBlIGRlIGNoYXVmZmFnZSA8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJ2YWx1ZUluZm9zICIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgUkFESUFURVVSICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3A+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aHI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0iZGF0YSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InRlcm1JbmZvcyI+Rm9ybWF0IGRlIGNoYXVmZmFnZTwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InZhbHVlSW5mb3MgIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBJTkRJVklEVUVMICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3A+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aHI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0iZGF0YSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InRlcm1JbmZvcyI+VmlzaW9waG9uZTwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InZhbHVlSW5mb3MgIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBPVUkgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxocj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJkYXRhIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0idGVybUluZm9zIj5CYWxjb248L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJ2YWx1ZUluZm9zICIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgTk9OICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3A+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aHI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0iZGF0YSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InRlcm1JbmZvcyI+VGVycmFzc2U8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJ2YWx1ZUluZm9zICIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgTk9OICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3A+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aHI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0iZGF0YSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InRlcm1JbmZvcyI+Q2F2ZTwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InZhbHVlSW5mb3MgIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBPVUkgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxocj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJkYXRhIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0idGVybUluZm9zIj5RdWFydGllcjwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InZhbHVlSW5mb3MgIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBHcm9zIENhaWxsb3UgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxocj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0idGFiLXBhbmUgZmFkZSAiIGlkPSJjb3BybyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0iZGF0YSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InRlcm1JbmZvcyI+Y29wcm9wcmnDqXTDqTwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InZhbHVlSW5mb3MgIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBPVUkgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxocj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJkYXRhIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0idGVybUluZm9zIj5ub21icmUgZGUgbG90czwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InZhbHVlSW5mb3MgIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA0MiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGhyPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9ImRhdGEiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJ0ZXJtSW5mb3MiPlF1b3RlIFBhcnQgYW5udWVsbGUgZGVzIGNoYXJnZXM8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJ2YWx1ZUluZm9zICIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgMSA4NzIg4oKsICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3A+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aHI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InRhYi1wYW5lIGZhZGUgIiBpZD0iaW5mb3NmaSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0iZGF0YSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InRlcm1JbmZvcyI+UHJpeCBkZSB2ZW50ZSBob25vcmFpcmVzIFRUQyBpbmNsdXM8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJ2YWx1ZUluZm9zICIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgNDk1IDAwMCDigqwgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxocj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJkYXRhIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0idGVybUluZm9zIj48c3BhbiBjbGFzcz0ic21hbGxpbmZvcyI+UHJpeCBkZSB2ZW50ZSBob25vcmFpcmVzIFRUQyBleGNsdXM8L3NwYW4+PC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0idmFsdWVJbmZvcyAiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDQ3NSAwMDAg4oKsICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3A+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aHI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0iZGF0YSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InRlcm1JbmZvcyI+SG9ub3JhaXJlcyBUVEMgw6AgbGEgY2hhcmdlIGFjcXXDqXJldXI8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJ2YWx1ZUluZm9zICIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgNCwyMSAlICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3A+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aHI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgIAogICAgICAgIDwvZGl2PgogICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYXJ0aWNsZT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InJvdyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YXJ0aWNsZSBjbGFzcz0iY29sLW1kLTYgZWxlbWVudER0Ij4KCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InRoZW1UaXRsZSBlbGVtZW50RHRUaXRsZSAgIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxoMT5EaWFnbm9zdGljcyBkZSBwZXJmb3JtYW5jZSDDqW5lcmfDqXRpcXVlPC9oMT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJlbmVyZ3kgcm93IHRleHQtY2VudGVyIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbC14cy02ICBkcGUiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW1nIHNyYz0iL2FkbWluL2RwZS5waHA/bGFuZz1mciZhbXA7aWRhbm49ODMiIGFsdD0iRFBFIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9IiBjb2wteHMtNiAgZ2VzIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBzcmM9Ii9hZG1pbi9kcGUucGhwP3R5cGU9R0VTJmFtcDtsYW5nPWZyJmFtcDtpZGFubj04MyIgYWx0PSJEUEUiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYXJ0aWNsZT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YXJ0aWNsZSBjbGFzcz0iY29sLW1kLTYgZWxlbWVudER0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0idGhlbVRpdGxlIGVsZW1lbnREdFRpdGxlIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxoMT5DZXR0ZSBhbm5vbmNlIHZvdXMgaW50w6lyZXNzZSA/PC9oMT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxmb3JtIG1ldGhvZD0icG9zdCIgYWN0aW9uPSIvODMtQVBQQVJURU1FTlQtMi1QSUVDRVMuaHRtbCIgY2xhc3M9ImZvcm0taG9yaXpvbnRhbCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJmb3JtLWdyb3VwIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJmaWVsZCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgIGNsYXNzPSJjb2wtc20tNCBjb250cm9sLWxhYmVsIj5Wb3RyZSBub20gKjwvbGFiZWw+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtc20tOCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9InRleHQiICAgcGxhY2Vob2xkZXI9IiIgIG5hbWU9ImRhdGFbQ29udGFjdF1bbm9tXSIgY2xhc3M9ImZvcm0tY29udHJvbCIgcmVxdWlyZWQgb25pbnZhbGlkPSJzZXRDdXN0b21WYWxpZGl0eSgnVmV1aWxsZXogcmVuc2VpZ25lciBjZSBjaGFtcHMnKSIgb25pbnB1dD0ic2V0Q3VzdG9tVmFsaWRpdHkoJycpIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJmaWVsZCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgIGNsYXNzPSJjb2wtc20tNCBjb250cm9sLWxhYmVsIj5Wb3RyZSBhZHJlc3NlIG1haWwgKjwvbGFiZWw+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtc20tOCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9ImVtYWlsIiAgIHBsYWNlaG9sZGVyPSIiICBuYW1lPSJkYXRhW0NvbnRhY3RdW2VtYWlsXSIgY2xhc3M9ImZvcm0tY29udHJvbCIgcmVxdWlyZWQgb25pbnZhbGlkPSJzZXRDdXN0b21WYWxpZGl0eSgnVmV1aWxsZXogcmVuc2VpZ25lciBjZSBjaGFtcHMnKSIgb25pbnB1dD0ic2V0Q3VzdG9tVmFsaWRpdHkoJycpIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJmaWVsZCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgIGNsYXNzPSJjb2wtc20tNCBjb250cm9sLWxhYmVsIj5Wb3RyZSBUw6lsw6lwaG9uZSAqPC9sYWJlbD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbC1zbS04Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0idGV4dCIgICBwbGFjZWhvbGRlcj0iIiAgbmFtZT0iZGF0YVtDb250YWN0XVt0ZWxdIiBjbGFzcz0iZm9ybS1jb250cm9sIiByZXF1aXJlZCBvbmludmFsaWQ9InNldEN1c3RvbVZhbGlkaXR5KCdWZXVpbGxleiByZW5zZWlnbmVyIGNlIGNoYW1wcycpIiBvbmlucHV0PSJzZXRDdXN0b21WYWxpZGl0eSgnJykiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImZpZWxkIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCAgY2xhc3M9ImNvbC1zbS00IGNvbnRyb2wtbGFiZWwiPlZvdHJlIHZpbGxlICo8L2xhYmVsPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sLXNtLTgiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJ0ZXh0IiAgIHBsYWNlaG9sZGVyPSIiICBuYW1lPSJkYXRhW0NvbnRhY3RdW3ZpbGxlXSIgY2xhc3M9ImZvcm0tY29udHJvbCIgcmVxdWlyZWQgb25pbnZhbGlkPSJzZXRDdXN0b21WYWxpZGl0eSgnVmV1aWxsZXogcmVuc2VpZ25lciBjZSBjaGFtcHMnKSIgb25pbnB1dD0ic2V0Q3VzdG9tVmFsaWRpdHkoJycpIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJmaWVsZCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgIGNsYXNzPSJjb2wtc20tNCBjb250cm9sLWxhYmVsIj5Wb3RyZSBtZXNzYWdlPC9sYWJlbD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbC1zbS04Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGV4dGFyZWEgbmFtZT0iZGF0YVtDb250YWN0XVttZXNzYWdlXSIgY2xhc3M9ImZvcm0tY29udHJvbCIgcGxhY2Vob2xkZXI9IiIgPjwvdGV4dGFyZWE+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJhc2JyeXciIHN0eWxlPSJkaXNwbGF5Om5vbmUiPgo8aW5wdXQgdHlwZT0idGV4dCIgbmFtZT0iYXNfZHluYSIgZGF0YS13YWl0PSIxNDQ5NGM4MGMzYmIwZTMzZDFlZDQzODQyNGUwZDVkNCIgZGF0YS1vcmlnPSJmMWY1M2M5ZDhlNjJkZGNmYTZiOGJiY2Y1ZWZkNDM2NSIgY2xhc3M9ImFzX2ZpZWxkIGFzX2ZpZWxkLTIgMiIgdmFsdWU9ImYxZjUzYzlkOGU2MmRkY2ZhNmI4YmJjZjVlZmQ0MzY1Ii8+CjxpbnB1dCB0eXBlPSJ0ZXh0IiBuYW1lPSJhc19zdGF0IiBjbGFzcz0iYXNfZmllbGQgYXNfZmllbGQtMSAxIiB2YWx1ZT0iIi8+CjwvZGl2PgoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJyZ3BkLWNoZWNrYm94Ij4KICAgIDxpbnB1dCB0eXBlPSJjaGVja2JveCIgbmFtZT0icmdwZC1hZ3JlZW1lbnQiIGlkPSJyZ3BkLWFncmVlbWVudCIgLz4KICAgIDxsYWJlbCBmb3I9InJncGQtYWdyZWVtZW50Ij5KJ2FjY2VwdGUgbGVzIGNvbmRpdGlvbnMgZCd1dGlsaXNhdGlvbiBkZXMgZG9ubsOpZXMgKCopPC9sYWJlbD4KPC9kaXY+CjxzY3JpcHQ+CiAgJ3VzZSBzdHJpY3QnOwoKICAoZnVuY3Rpb24gKCkgewogICAgdmFyIGFncmVlbWVudCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdyZ3BkLWFncmVlbWVudCcpOwogICAgdmFyIGZvcm0gPSBhZ3JlZW1lbnQuY2xvc2VzdCgnZm9ybScpOwogICAgZm9ybS5hZGRFdmVudExpc3RlbmVyKCdzdWJtaXQnLCBmdW5jdGlvbiAoZXZlbnQpIHsKICAgICAgaWYgKCFhZ3JlZW1lbnQuY2hlY2tlZCkgewogICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7CiAgICAgICAgYWxlcnQoIlZldWlsbGV6IGFjY2VwdGVyIGwndXRpbGlzYXRpb24gZGUgdm9zIGRvbm7DqWVzIHBvdXIgY29udGludWVyLiIpOwogICAgICAgIHJldHVybiBmYWxzZTsKICAgICAgfSBlbHNlIHsKICAgICAgICByZXR1cm4gdHJ1ZTsKICAgICAgfQogICAgfSk7CiAgfSkoKTsKPC9zY3JpcHQ+ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0iaGlkZGVuIiBuYW1lPSJkYXRhW2lkYmllbl1bXSIgdmFsdWU9IjgzIi8+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sLXNtLTggY29sLXNtLXB1c2gtNCBjb2wteHMtMTEgY29sLXhzLXB1c2gtMSBidG5TZW5kIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiB0eXBlPSJzdWJtaXQiIGNsYXNzPSJidG4gYnRuLWRlZmF1bHQiPkVudm95ZXI8L2J1dHRvbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9Im9ibGlnIj4qIENoYW1wcyBvYmxpZ2F0b2lyZXM8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9mb3JtPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJsZWdhbHMiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9InJncGQtbGVnYWxzIj4qIDogTGVzIGluZm9ybWF0aW9ucyByZWN1ZWlsbGllcyBzdXIgY2UgZm9ybXVsYWlyZSBzb250IGVucmVnaXN0csOpZXMgZGFucyB1biBmaWNoaWVyIGluZm9ybWF0aXPDqSBwYXIgTGEgQm9pdGUgSW1tbyBwb3VyIGxhIGdlc3Rpb24gZGUgbGEgY2xpZW50w6hsZS9wcm9zcGVjdHMgZGUgR3JlbmVsbGUgSW1tb2JpbGllci4KRWxsZXMgc29udCBjb25zZXJ2w6llcyBqdXNxdSfDoCBkZW1hbmRlIGRlIHN1cHByZXNzaW9uIGV0IHNvbnQgZGVzdGluw6llcyDDoCBHcmVuZWxsZSBJbW1vYmlsaWVyLgpDb25mb3Jtw6ltZW50IMOgIGxhIGxvaSDCqyBpbmZvcm1hdGlxdWUgZXQgbGliZXJ0w6lzIMK7LCB2b3VzIHBvdXZleiBleGVyY2VyIHZvdHJlIGRyb2l0IGQnYWNjw6hzIGF1eCBkb25uw6llcyB2b3VzIGNvbmNlcm5hbnQgZXQgbGVzIGZhaXJlIHJlY3RpZmllciBlbiBjb250YWN0YW50IEdyZW5lbGxlIEltbW9iaWxpZXIuCk5vdXMgdm91cyBpbmZvcm1vbnMgZGUgbOKAmWV4aXN0ZW5jZSBkZSBsYSBsaXN0ZSBkJ29wcG9zaXRpb24gYXUgZMOpbWFyY2hhZ2UgdMOpbMOpcGhvbmlxdWUgwqsgQmxvY3RlbCDCuywgc3VyIGxhcXVlbGxlIHZvdXMgcG91dmV6IHZvdXMgaW5zY3JpcmUgaWNpIDogaHR0cHM6Ly9jb25zby5ibG9jdGVsLmZyLzwvcD4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2FydGljbGU+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InJvdyBiaWdEYXRhIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sLXNtLTEyIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzZWN0aW9uIGNsYXNzPSJtYXAtaW5mb3MtY2l0eSBlbGVtZW50RHQiPgogICAgICAgIDxkaXYgY2xhc3M9InRpdGxlIHRoZW1UaXRsZSBlbGVtZW50RHRUaXRsZSI+CiAgICAgICAgICAgIDxoMT5MYSB2aWxsZSBkZSBQYXJpcyAoNzUwMDcpPC9oMT4KICAgICAgICA8L2Rpdj4KICAgICAgICA8ZGl2IGNsYXNzPSJjb250ZW50Ij4KICAgICAgICAgICAgCiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2wteHMtMTIgbWFwIj4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGlkPSJtYXBJbmZvc0NpdHkiIHN0eWxlPSJ3aWR0aDoxMDAlO2hlaWdodDozMDBweDsiPjwvZGl2PgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Im1hcC1idXR0b25zIj48L2Rpdj4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAKICAgICAgICAgICAgCiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2wteHMtMTIgc3RhdCI+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBpZD0ic3RhdHNJbmZvc0NpdHkiPjwvZGl2PgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIAogICAgICAgIDwvZGl2PgogICAgPC9zZWN0aW9uPgogICAgCiAgICA8c3R5bGUgdHlwZT0idGV4dC9jc3MiPgogICAgICAgICNzdGF0c0luZm9zQ2l0eSB7CiAgICAgICAgfQogICAgICAgICNzdGF0c0luZm9zQ2l0eSB1bHsKICAgICAgICAgICAgbWFyZ2luOjA7IHBhZGRpbmc6MDsgbGlzdC1zdHlsZTogaW5zaWRlIG5vbmU7CiAgICAgICAgfQogICAgICAgICNzdGF0c0luZm9zQ2l0eSBsaXsKICAgICAgICAgICAgZm9udC1zaXplOiAwLjg1ZW07CiAgICAgICAgICAgIHBhZGRpbmc6MXB4OwogICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAycHg7CiAgICAgICAgfQogICAgICAgICNzdGF0c0luZm9zQ2l0eSAudGl0bGV7CiAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiBib2xkOwogICAgICAgICAgICBtYXJnaW4tYm90dG9tOjVweDsKICAgICAgICB9CiAgICAgICAgI3N0YXRzSW5mb3NDaXR5IGxpLm9kZHsKICAgICAgICAgICAgYmFja2dyb3VuZDojZWZlZmVmOwogICAgICAgIH0KICAgICAgICAjc3RhdHNJbmZvc0NpdHkgbGkgc3BhbnsKICAgICAgICAgICAgZGlzcGxheTppbmxpbmUtYmxvY2s7CiAgICAgICAgfQogICAgICAgICNzdGF0c0luZm9zQ2l0eSBsaSAudmFsdWV7CiAgICAgICAgICAgIHRleHQtYWxpZ246cmlnaHQ7CiAgICAgICAgICAgIGZsb2F0OnJpZ2h0OwogICAgICAgICAgICBwYWRkaW5nLXJpZ2h0OiA1cHg7CiAgICAgICAgfQogICAgICAgICNtYXBJbmZvc0NpdHkgaW1nIHsKICAgICAgICAgICAgbWF4LXdpZHRoOiBub25lOwogICAgICAgIH0KICAgICAgICAubWFwLWJ1dHRvbnN7CiAgICAgICAgICAgIGhlaWdodDozMHB4OwogICAgICAgIH0KICAgICAgICAubWFwLWJ1dHRvbnMgYXsKICAgICAgICAgICAgZGlzcGxheTogYmxvY2s7CiAgICAgICAgICAgIGZsb2F0OiBsZWZ0OwogICAgICAgICAgICBiYWNrZ3JvdW5kOiAjZTBlMGUwOwogICAgICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7CiAgICAgICAgICAgIHdpZHRoOjMwcHg7IGhlaWdodDozMHB4OwogICAgICAgICAgICBtYXJnaW46MCAwLjVweDsKICAgICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyOwogICAgICAgICAgICBmb250LXNpemU6OHB4OwogICAgICAgIH0KICAgIDwvc3R5bGU+CiAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNlY3Rpb24+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJiaWVuU2ltIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aDE+YXV0cmVzIGFubm9uY2VzIGltbW9iaWxpw6hyZXMgY29ycmVzcG9uZGFudCDDoMKgIHZvdHJlIHJlY2hlcmNoZTwvaDE+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGgyPkxlcyBiaWVucyBzaW1pbGFpcmVzIHBvdXIgOiA8c3BhbiBjbGFzcz0idXBwZXIiPlZlbnRlIEFwcGFydGVtZW50IFBhcmlzICg3NTAwNyk8L3NwYW4+IDwvaDI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgaWQ9ImNhcm91c2VsU2ltIiBjbGFzcz0iY2Fyb3VzZWwgc2xpZGUiIGRhdGEtcmlkZT0iY2Fyb3VzZWwiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHVsIGNsYXNzPSJjYXJvdXNlbC1pbm5lciI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaSBjbGFzcz0iaXRlbSBhY3RpdmUgbGlzdC1pbmxpbmUiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YXJ0aWNsZSBvbkNsaWNrPSJsb2NhdGlvbi5ocmVmPScvOTAtQXBwYXJ0ZW1lbnQtMS0yLXBpZWNlcy1wcmVzLXBsYWNlLWRlLUJyZXRldWlsLmh0bWwnIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJpbWdTaW0gbGVmdCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBzcmM9Ii8vZ3JlbmVsbGVpbW1vLnN0YXRpY2xiaS5jb20vMjIweDIyMC9pbWFnZXMvYmllbnMvMS83NDIxZmMxMmYwNjM4ZjRkZTg0MmI2Mzk2ZTk3N2FkZC9vcmlnaW5hbC9waG90b184NTdiOGM5OWJmOTc1YTdjMTVhZmRmMmFhMTg4NTcyNS5qcGciIHdpZHRoPSIyMjAiIC8+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcml4U2ltIj40NTAgMDAwIOKCrDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJpbmZvc1NpbSBsZWZ0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aDE+UGFyaXM8L2gxPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxoMj48aT5BcHBhcnRlbWVudDwvaT48L2gyPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYXJ0aWNsZT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3VsPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgY2xhc3M9ImxlZnQgY2Fyb3VzZWwtY29udHJvbCIgaHJlZj0iI2Nhcm91c2VsU2ltIiBkYXRhLXNsaWRlPSJwcmV2Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iaWNvbi1taW5pLWYtbGVmdCI+PC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgY2xhc3M9InJpZ2h0IGNhcm91c2VsLWNvbnRyb2wiIGhyZWY9IiNjYXJvdXNlbFNpbSIgZGF0YS1zbGlkZT0ibmV4dCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9Imljb24tbWluaS1mLXJpZ2h0Ij48L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgPC9zZWN0aW9uPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0ic21hbGwgYXN0ZXJpeCBtdDEwIj4qIEhvbm9yYWlyZXMgZCdBZ2VuY2VzIEluY2x1czwvcD4KICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgCiAgICA8L2Rpdj4KCiAgICA8L3NlY3Rpb24+CgogICAgCgogICAgCiAgICAKICAgICAgICA8c2VjdGlvbiBjbGFzcz0ibGF5b3V0X2J0bSI+CiAgICAgICAgICAgIAogICAgICAgICAgICAKICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbnRhaW5lciI+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icm93Ij4KICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtbWQtNCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGFydGljbGU+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InRoZW1UaXRsZSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aDE+bm90cmUgYWdlbmNlPC9oMT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aHI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29vcmRzLWxheW91dC1idG0iPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dWwgY2xhc3M9ImNvb3JkcyI+DQogICAgICAgICAgICAgICAgICAgICAgICANCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGk+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDE1NywgcnVlIGRlIEdyZW5lbGxlPGJyPiA3NTAwNyBQYXJpcw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvbGk+DQogICAgICAgICAgICAgICAgICAgICAgICANCiAgICAgICAgICAgICAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaSBjbGFzcz0idGVsIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKzMzICgwKTEgNDUgNTUgMjcgMjcNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2xpPg0KICAgICAgICAgICAgICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgICAgICAgICANCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGk+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Im1haWx0bzpncmVuZWxsZUBncmVuZWxsZS5mciI+Z3JlbmVsbGVAZ3JlbmVsbGUuZnI8L2E+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9saT4NCiAgICAgICAgICAgICAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgICAgICAgICAgPGxpPg0KCQkJCQkJCTxkaXYgY2xhc3M9ImF2aXMiPg0KCQkJCQkJCQk8YSBocmVmPSJodHRwczovL3d3dy5tZWlsbGV1cnNhZ2VudHMuY29tL2FnZW5jZS1pbW1vYmlsaWVyZS9hZ2VuY2UtZ3JlbmVsbGUtaW1tb2JpbGllci04OTEvIiBzdHlsZT0ibWFyZ2luLXRvcDogMzFweDsiIHRhcmdldD0iX2JsYW5rIj48aW1nIHNyYz0iaHR0cDovL2dyZW5lbGxlaW1tby5sYS1ib2l0ZS1pbW1vLmNvbS9pbWFnZXMvbWVpbGxldXIuanBnIi8+PC9hPg0KCQkJCQkJCTwvZGl2Pg0KCQkJCQkJPC9saT4NCiAgICAgICAgICAgICAgICAgICAgPC91bD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2FydGljbGU+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sLW1kLTgiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJyb3ciPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YXJ0aWNsZSBjbGFzcz0iY29sLW1kLTEyIGNybyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNyb0NvbnRlbnQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0idGhlbVRpdGxlIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGgxPkNvbnRhY3Q8L2gxPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aHI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbnRlbnQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjcm9Db3JwcyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgUG91ciB0b3V0ZXMgaW5mb3JtYXRpb25zLCBjb250YWN0ZXogbm91cy4gIElsIHZvdXMgc3VmZml0IGRlIGNvbXBsw6l0ZXIgY2UgZm9ybXVsYWlyZSBldCBub3VzIGZlcm9ucyBkZSBub3RyZSBtaWV1eCBwb3VyIHkgcsOpcG9uZHJlIGF1IHBsdXMgdml0ZS4KCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJidG5TdWl0ZSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Ii9jb250YWN0Lmh0bWwiIGNsYXNzPSJidG4tY3JvIGJ0bi1wcmltYXJ5IiA+Y2xpcXVleiBpY2k8L2E+DQogICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hcnRpY2xlPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgCiAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgCgogICAgICAgICAgICAKCiAgICAgICAgICAgIA0KPHNlY3Rpb24gY2xhc3M9ImZ0ci1ib3R0b20iPg0KICAgIDxkaXYgY2xhc3M9ImNvbnRhaW5lciI+DQogICAgICAgIDxkaXYgY2xhc3M9InJvdyI+DQogICAgICAgICAgICANCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhcnRpY2xlIGNsYXNzPSJjb2wtc20tNiBjb2wtbWQtNiBlbGVtZW50RnRyIj4NCiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InRoZW1UaXRsZSB0ZXh0LWNlbnRlciI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxoMT5zdWl2ZXotbm91czwvaDE+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbnRlbnRGdHIgcnN2IHRleHQtY2VudGVyIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICANCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vd3d3LmZhY2Vib29rLmNvbS9HcmVuZWxsZUltbW9iaWxpZXIvIiBjbGFzcz0ibGlua3JzdiAiIHRhcmdldD0iX2JsYW5rIiA+PHNwYW4gY2xhc3M9Imljb24tZmFjZWJvb2syIGljb25zIj48L3NwYW4+PC9hPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL3R3aXR0ZXIuY29tL2dyZW5lbGxlaW1tbz9sYW5nPWZyIiBjbGFzcz0ibGlua3JzdiAiIHRhcmdldD0iX2JsYW5rIiA+PHNwYW4gY2xhc3M9Imljb24tdHdpdHRlcjMgaWNvbnMiPjwvc3Bhbj48L2E+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vd3d3Lmluc3RhZ3JhbS5jb20vZ3JlbmVsbGVpbW1vYmlsaWVyLyIgY2xhc3M9Imxpbmtyc3YgIiB0YXJnZXQ9Il9ibGFuayIgPjxzcGFuIGNsYXNzPSJpY29uLWluc3RhIGljb25zIj48L3NwYW4+PC9hPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgICAgIDwvYXJ0aWNsZT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICANCg0KDQogICAgICAgICAgICANCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhcnRpY2xlIGNsYXNzPSJjb2wtc20tNiBjb2wtbWQtNiBlbGVtZW50RnRyIj4NCiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InRoZW1UaXRsZSB0ZXh0LWNlbnRlciI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxoMT5BZGjDqXJlbnRzPC9oMT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICANCiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29udGVudEZ0ciB0ZXh0LWNlbnRlciI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgc3JjPSIvL2dyZW5lbGxlaW1tby5zdGF0aWNsYmkuY29tL29yaWdpbmFsL2ltYWdlcy9mbmFpbS5wbmciIGNsYXNzPSJmbmFpbSIgLz4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW1nIHNyYz0iLy9ncmVuZWxsZWltbW8uc3RhdGljbGJpLmNvbS9vcmlnaW5hbC9pbWFnZXMvZ2FsaWFuLnBuZyIgY2xhc3M9IiIgLz4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgIDwvYXJ0aWNsZT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICANCg0KDQogICAgICAgICAgICAgICAgICAgICAgICAgDQogICAgICAgICAgICAgICANCiAgICAgICAgICAgICAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgICAgICAgICANCiAgICAgICAgICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgDQoJCQkJCQkNCg0KDQoNCg0KICAgICAgICA8L2Rpdj4NCiAgICA8L2Rpdj4NCjwvc2VjdGlvbj4NCgogICAgICAgIDwvc2VjdGlvbj4KICAgIAoKICAgIAogICAgICAgIDxmb290ZXIgY2xhc3M9Imp1bWJvdHJvbiBsYXN0RnRyIj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29udGFpbmVyIj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InJvdyI+CiAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbC1tZC00IGNvbC1zbS02IGJsb2NrX2xhc3RGdHIiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHA+JmNvcHk7IDIwMjAgfCBUb3VzIGRyb2l0cyByw6lzZXJ2w6lzIHwgVHJhZHVjdGlvbiBwb3dlcmVkIGJ5IEdvb2dsZSA8YnIvPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Ii9wbGFuLWR1LXNpdGUuaHRtbCIgPlBsYW4gZHUgc2l0ZTwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAtIDxhIGhyZWY9Ii9pL3JlZGFjL2xlZ2FscyIgPk1lbnRpb25zIGzDqWdhbGVzPC9hPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLSA8YSBocmVmPSIvbm9zLWxpZW5zLmh0bWwiID5MaWVuczwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAtIDxhIGhyZWY9Ii9hZG1pbi8iIHRhcmdldD0iX2JsYW5rIiA+QWRtaW48L2E+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLSA8YSBocmVmPSIvdG91dGVzLW5vcy1hbm5vbmNlcy5odG1sIiA+VG91dGVzIG5vcyBhbm5vbmNlczwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sLW1kLTQgY29sLXNtLTYgYmxvY2tfbGFzdEZ0ciI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJpY29uUmVzcCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9Imljb24tbXVsdGlzdXBwb3J0Ij48L3NwYW4+PHAgY2xhc3M9ImNvbnRlbnRSZXNwIj5TaXRlIGludGVybmV0IGNvbXBhdGlibGUgbXVsdGktc3VwcG9ydHMsPGJyLz51biBzZXVsIHNpdGUgYWRhcHRhYmxlIMOgIHRvdXMgbGVzIHR5cGVzIGQnw6ljcmFucy48L3A+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbC1tZC00IGJsb2NrX2xhc3RGdHIiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBzcmM9Ii8vZ3JlbmVsbGVpbW1vLnN0YXRpY2xiaS5jb20vb3JpZ2luYWwvaW1hZ2VzL2xvZ29MQkkucG5nIiBhbHQ9IkxhIGJvaXRlIGltbW8iIC8+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZm9vdGVyPgogICAgCgoKICAgICAgICA8c2NyaXB0IHNyYz0iLy9hamF4Lmdvb2dsZWFwaXMuY29tL2FqYXgvbGlicy9qcXVlcnkvMS4xMC4xL2pxdWVyeS5taW4uanMiID48L3NjcmlwdD4KICAgICAgICA8c2NyaXB0IHNyYz0iLy9hamF4Lmdvb2dsZWFwaXMuY29tL2FqYXgvbGlicy9qcXVlcnl1aS8xLjEwLjMvanF1ZXJ5LXVpLm1pbi5qcyIgPjwvc2NyaXB0PgogICAgICAgIAogICAgICAgICAgICA8c2NyaXB0IHNyYz0iL2pzL2J1aWxkX2FmOTg1NTg0N2FlMmQzNzNlOTYwNDdmZGU2NGUxNWQzLmpzIiBkYXRhLW1vZGVsPSd2YW5pdHkyJyBpZD0ncHJpbmNpcGFsSnMnPjwvc2NyaXB0PgogICAgICAgIAoKICAgICAgICAgCiAgICA8c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCI+CiAgICAgICAgJChkb2N1bWVudCkucmVhZHkoZnVuY3Rpb24oKXsKICAgICAgICAgICAgJCggIi5iYWNrIiApLmNsaWNrKGZ1bmN0aW9uKCkgewogICAgICAgICAgICAgICAgdmFyIHVybCA9ICIvL3d3dy5ncmVuZWxsZS1pbW1vYmlsaWVyLmNvbSI7CiAgICAgICAgICAgICAgICAkKGxvY2F0aW9uKS5hdHRyKCdocmVmJyx1cmwpOwogICAgICAgICAgICB9KTsKICAgICAgICB9KTsKICAgIDwvc2NyaXB0PgogICAgICAgICAgICAgICAgPHNjcmlwdD4KICAgICAgICAKICAgICAgICAgLyoqKioqKioqKioqIGJpZW4gY29uZmlnIG9wdGlvbiBnZW9sb2MgKioqKioqKioqKiogLwogICAgICAgICAgKgogICAgICAgICAgKiBAdHlwZSBBcnJheXxBcnJheQogICAgICAgICAgKi8KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIG1hcmtlcnMgPSB7fTsKICAgICAgICB2YXIgbWFwOwogICAgICAgIHZhciBpc01hcERyYWdnaW5nOwogICAgICAgIHZhciBpZGxlU2tpcHBlZDsKICAgICAgICB2YXIgdmlzaWJsZTsKICAgICAgICB2YXIgdHJhbnNsYXRlcyA9IHt9OwogICAgICAgIHZhciBnZW9jb2RlcjsKCiAgICAgICAgdmFyIGNvbG9yTWFya2VyczsKICAgICAgICAgCgoKICAgICAgICBmdW5jdGlvbiBnZXRNYXAoTWFwKXsKCiAgICAgICAgICAgIHZhciBtYXAgPSBNYXAubWFwOwogICAgICAgICAgICBvcHRpb25zQ2lyY2xlID0gewogICAgICAgICAgICAgICAgbWFwOiBtYXAsCiAgICAgICAgICAgICAgICBjZW50ZXI6IHsgbGF0IDogNDguODY0MzQ4MjY0ODg2ICwgbG5nOiAgMi4zNDM4NDk3NDA0Njg3IH0sCiAgICAgICAgICAgICAgICByYWRpdXM6IDE1MDAsCiAgICAgICAgICAgICAgICBzdHJva2VDb2xvcjogJyNCM0QxMDAnLAogICAgICAgICAgICAgICAgc3Ryb2tlT3BhY2l0eTogMC44LAogICAgICAgICAgICAgICAgc3Ryb2tlV2VpZ2h0OiAxLAogICAgICAgICAgICAgICAgZmlsbENvbG9yOiAnI0IzRDEwMCcsCiAgICAgICAgICAgICAgICBmaWxsT3BhY2l0eTogMC4zNQogICAgICAgICAgICB9OwoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy9tYXAuc2V0Q2VudGVyKG5ldyBnb29nbGUubWFwcy5MYXRMbmcoNDguODYwMDAwNjEwLCAyLjM0NDQ0OTk5NykpOwogICAgICAgICAgICAgICAgICAgIE1hcC5zZXRDZW50ZXIobWFwLCB7IGxhdDogNDguODY0MzQ4MjY0ODg2LCBsbmc6IDIuMzQzODQ5NzQwNDY4NyB9KTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhZGRMaXN0ZW5lcnMoTWFwKTsKICAgICAgICB9CgogICAgICAgIGZ1bmN0aW9uIGFkZExpc3RlbmVycyhNYXApewogICAgICAgICAgTWFwLnNldE1pblpvb20oTWFwLm1hcCwgMTIpOwogICAgICAgICAgY2FsbE1hcmtlcnMoTWFwKTsKICAgICAgICAgIE1hcC5hZGRNYXBMaXN0ZW5lcihNYXAubWFwLCAnaWRsZScsIGZ1bmN0aW9uKCkgewogICAgICAgICAgICBpZiAoaXNNYXBEcmFnZ2luZykgewogICAgICAgICAgICAgIGlkbGVTa2lwcGVkID0gdHJ1ZTsKICAgICAgICAgICAgICByZXR1cm47CiAgICAgICAgICAgIH0KICAgICAgICAgICAgaWRsZVNraXBwZWQgPSBmYWxzZTsKICAgICAgICAgICAgY2FsbE1hcmtlcnMoTWFwKTsKICAgICAgICAgIH0pOwogICAgICAgICAgTWFwLmFkZE1hcExpc3RlbmVyKE1hcC5tYXAsICdkcmFnc3RhcnQnLCBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgIGlzTWFwRHJhZ2dpbmcgPSB0cnVlOwogICAgICAgICAgfSk7CiAgICAgICAgICBNYXAuYWRkTWFwTGlzdGVuZXIoTWFwLm1hcCwgJ2RyYWdlbmQnLCBmdW5jdGlvbigpIHsKICAgICAgICAgICAgaXNNYXBEcmFnZ2luZyA9IGZhbHNlOwogICAgICAgICAgICBpZiAoaWRsZVNraXBwZWQgPT09IHRydWUpIHsKICAgICAgICAgICAgICBjYWxsTWFya2VycyhNYXApOwogICAgICAgICAgICAgIGlkbGVTa2lwcGVkID0gZmFsc2U7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0pOwogICAgICAgIH0KCgogICAgICAgIGZ1bmN0aW9uIGNhbGxNYXJrZXJzKE1hcCl7CiAgICAgICAgICAgIHZhciBib3VuZHMgPSBNYXAuZ2V0Qm91bmRzKE1hcC5tYXApOwogICAgICAgICAgICB2YXIgYm91bmRzQ29vcmRzID0gTWFwLmdldExhdExuZ01pbk1heChib3VuZHMpOwogICAgICAgICAgICB2YXIgbXhMdCA9IGJvdW5kc0Nvb3Jkcy5sYXQubWF4OwogICAgICAgICAgICB2YXIgbW5MdCA9IGJvdW5kc0Nvb3Jkcy5sYXQubWluOwogICAgICAgICAgICB2YXIgbXhMZyA9IGJvdW5kc0Nvb3Jkcy5sbmcubWF4OwogICAgICAgICAgICB2YXIgbW5MZyA9IGJvdW5kc0Nvb3Jkcy5sbmcubWluOwogICAgICAgICAgICAkLmdldCgiL2kvcG9pL2dldFBvaUJldHdlZW4/bWluTGF0PSIrbW5MdCsiJm1heExhdD0iK214THQrIiZtaW5Mbmc9IittbkxnKyImbWF4TG5nPSIrbXhMZykuZG9uZShmdW5jdGlvbihqc29uTWFya2Vycyl7CiAgICAgICAgICAgICAgICBpZihqc29uTWFya2VycyA9PT0gbnVsbCl7CiAgICAgICAgICAgICAgICAgICAganNvbk1hcmtlcnMgPSBbXTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIGNsZWFuTWFya2VycygpOwogICAgICAgICAgICAgICAgYWRkTWFya2Vycyhqc29uTWFya2VycywgTWFwKTsKICAgICAgICAgICAgfSk7CiAgICAgICAgfQoKICAgICAgICBmdW5jdGlvbiBjbGVhbk1hcmtlcnMoKXsKICAgICAgICAgICAgdmlzaWJsZSA9IFtdOwogICAgICAgICAgICBmb3Ioa2V5IGluIG1hcmtlcnMpewogICAgICAgICAgICAgICAgaWYobWFya2Vycy5oYXNPd25Qcm9wZXJ0eShrZXkpKXsKICAgICAgICAgICAgICAgICAgICAkLmVhY2gobWFya2Vyc1trZXldLCBmdW5jdGlvbihrLCBtYXJrZXIpewogICAgICAgICAgICAgICAgICAgICAgdmFyIE1hcCA9IG1hcmtlci5kYXRhQ29udGFpbmVyLk1hcDsKICAgICAgICAgICAgICAgICAgICAgICAgaWYobWFya2VyLmRhdGFDb250YWluZXIubWFwICE9PSBudWxsICYmIHZpc2libGUuaW5kZXhPZihrZXkpPDApewogICAgICAgICAgICAgICAgICAgICAgICAgICAgdmlzaWJsZS5wdXNoKGtleSk7CiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgTWFwLnJlbW92ZU1hcmtlcihNYXAubWFwLCBtYXJrZXIpOwogICAgICAgICAgICAgICAgICAgICAgICBtYXJrZXIuZGF0YUNvbnRhaW5lci5tYXAgPSBudWxsOwogICAgICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgICAgIG1hcmtlcnNba2V5XSA9IFtdOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgfQogICAgICAgIAogICAgICAgIGZ1bmN0aW9uIGFkZE1hcmtlcnMoanNvbk1hcmtlcnMsIE1hcCl7CiAgICAgICAgICAgICQuZWFjaChqc29uTWFya2VycywgZnVuY3Rpb24oKXsKICAgICAgICAgICAgICB2YXIgbWFya2VyRGF0YSA9IHRoaXM7CiAgICAgICAgICAgICAgICBpZighbWFya2Vycy5oYXNPd25Qcm9wZXJ0eSh0aGlzLm5vbSkpewogICAgICAgICAgICAgICAgICAgIG1hcmtlcnNbdGhpcy5ub21dID0gW107CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB2YXIgcG9zaXRpb24gPSB7IGxhdDogbWFya2VyRGF0YS55LCBsbmc6IG1hcmtlckRhdGEueH07CiAgICAgICAgICAgICAgICB2YXIgbWFwTWFya2VyID0gdmlzaWJsZS5pbmRleE9mKHRoaXMubm9tKT49MCA/IE1hcC5tYXAgOiBudWxsOwogICAgICAgICAgICAgICAgdHJhbnNsYXRlc1t0aGlzLm5vbV0gPSB0aGlzLnRyYW5zbGF0ZTsKICAgICAgICAgICAgICB2YXIgbWFya2VyT3B0aW9ucyA9IHsKICAgICAgICAgICAgICAgIHRpdGxlOiB0aGlzLnRyYW5zbGF0ZSwKICAgICAgICAgICAgICAgIGljb246IE1hcC5jcmVhdGVJY29uKCcvaS9wb2kvZ2V0SWNvbk1hcD90eXBlPScrdGhpcy5ub20sIFszMiw1NF0pCiAgICAgICAgICAgICAgfTsKICAgICAgICAgICAgICB2YXIgbWFya2VyID0gTWFwLmNyZWF0ZU1hcE1hcmtlcihwb3NpdGlvbiwgbWFya2VyT3B0aW9ucywgewogICAgICAgICAgICAgICAgbWFwOiBtYXBNYXJrZXIsCiAgICAgICAgICAgICAgICBNYXA6IE1hcAogICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgIGlmICh2aXNpYmxlLmluZGV4T2YodGhpcy5ub20pPj0wKSB7CiAgICAgICAgICAgICAgICBNYXAuYWRkTWFya2VyKE1hcC5tYXAsIG1hcmtlcik7CiAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgbWFya2Vyc1t0aGlzLm5vbV0ucHVzaChtYXJrZXIpOwogICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgICAgICAgICAgIGFkZEJ1dHRvbnMoKTsKICAgICAgICB9CiAgICAgICAgCgogICAgICAgIGZ1bmN0aW9uIGFkZEJ1dHRvbnMoKXsKICAgICAgICAgICAgJCgiLm1hcC1idXR0b25zIikuZW1wdHkoKTsKICAgICAgICAgICAgJC5lYWNoKG1hcmtlcnMsIGZ1bmN0aW9uKGssIG1rcyl7CiAgICAgICAgICAgICAgICBpZihta3MubGVuZ3RoID4gMCl7CiAgICAgICAgICAgICAgICAgICAgdmFyIGlzVmlzaWJsZSA9ICh2aXNpYmxlLmluZGV4T2YoaykgPiAtMSk7CiAgICAgICAgICAgICAgICAgICAgYWRkVHlwZUJ1dHRvbihrLCBpc1Zpc2libGUpOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9KTsKICAgICAgICB9CiAgICAgICAgCiAgICAgICAgICAgIGZ1bmN0aW9uIHNob3dIaWRlTWFya2Vycyh0eXBlKXsKICAgICAgICAgICAgICAgIGlmKG1hcmtlcnMuaGFzT3duUHJvcGVydHkodHlwZSkpewogICAgICAgICAgICAgICAgICAgIGZvcih2YXIgaSA9IDA7IGkgPCBtYXJrZXJzW3R5cGVdLmxlbmd0aDsgaSsrKXsKICAgICAgICAgICAgICAgICAgICAgICBpZihtYXJrZXJzW3R5cGVdW2ldLmRhdGFDb250YWluZXIubWFwID09PSBudWxsICl7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBtYXJrZXJzW3R5cGVdW2ldLmRhdGFDb250YWluZXIubWFwID0gbWFya2Vyc1t0eXBlXVtpXS5kYXRhQ29udGFpbmVyLk1hcC5tYXA7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBtYXJrZXJzW3R5cGVdW2ldLmRhdGFDb250YWluZXIuTWFwLmFkZE1hcmtlcihtYXJrZXJzW3R5cGVdW2ldLmRhdGFDb250YWluZXIubWFwLCBtYXJrZXJzW3R5cGVdW2ldKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgY29sb3JUeXBlKHR5cGUsIHRydWUpOwogICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAgICAgICAgICBtYXJrZXJzW3R5cGVdW2ldLmRhdGFDb250YWluZXIuTWFwLnJlbW92ZU1hcmtlcihtYXJrZXJzW3R5cGVdW2ldLmRhdGFDb250YWluZXIubWFwLCBtYXJrZXJzW3R5cGVdW2ldKTsKICAgICAgICAgICAgICAgICAgICAgICAgIG1hcmtlcnNbdHlwZV1baV0uZGF0YUNvbnRhaW5lci5tYXAgPSBudWxsOwogICAgICAgICAgICAgICAgICAgICAgICAgICBjb2xvclR5cGUodHlwZSwgZmFsc2UpOwogICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAKICAgICAgICAKICAgICAgICAgICAgZnVuY3Rpb24gYWRkVHlwZUJ1dHRvbih0eXBlLCBpc1Zpc2libGUpewogICAgICAgICAgICAgICAgdmFyIGJhciA9ICQoIi5tYXAtYnV0dG9ucyIpOwogICAgICAgICAgICAgICAgdmFyIGEgPSAkKCI8YS8+Iik7CiAgICAgICAgICAgICAgICB2YXIgdHJhbnNsYXRlID0gdHJhbnNsYXRlc1t0eXBlXTsKICAgICAgICAgICAgICAgIGEuYXR0cigiY2xhc3MiLCJtYXAtYnV0dG9uIik7CiAgICAgICAgICAgICAgICBhLmF0dHIoInJlbCIsIHR5cGUpOwogICAgICAgICAgICAgICAgYS5hdHRyKCJocmVmIiwiIyIpOwogICAgICAgICAgICAgICAgdmFyIGltZyA9ICQoIjxpbWcvPiIpOwogICAgICAgICAgICAgICAgaW1nLmF0dHIoJ3NyYycsICcvaS9wb2kvZ2V0SWNvbkJhcj90eXBlPScrdHlwZSk7CiAgICAgICAgICAgICAgICBpbWcuYXR0cigndGl0bGUnLCB0cmFuc2xhdGUpOwogICAgICAgICAgICAgICAgaW1nLmF0dHIoJ2FsdCcsIHR5cGUpOwogICAgICAgICAgICAgICAgaWYoaXNWaXNpYmxlKXsKICAgICAgICAgICAgICAgICAgICBpbWcuY3NzKCdiYWNrZ3JvdW5kLWNvbG9yJywgJyMnK2NvbG9yTWFya2Vyc1t0eXBlXSk7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBhLmFwcGVuZChpbWcpOwogICAgICAgICAgICAgICAgCiAgICBhLmFwcGVuZCgnPHNwYW4gY2xhc3M9InR5cGVMaW5rIj4nK3RyYW5zbGF0ZSsnPC9zcGFuPicpOwoKICAgICAgICAgICAgICAgIGJhci5hcHBlbmQoYSk7CiAgICAgICAgICAgIH0KICAgICAgICAKICAgICAgICAKICAgICAgICAgICAgZnVuY3Rpb24gY29sb3JUeXBlKHR5cGUsIHNob3cpewogICAgICAgICAgICAgICAgdmFyIGNvbG9yOwogICAgICAgICAgICAgICAgaWYoc2hvdyl7CiAgICAgICAgICAgICAgICAgICAgY29sb3IgPSAnIycrY29sb3JNYXJrZXJzW3R5cGVdOwogICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgICBjb2xvciA9ICd0cmFuc3BhcmVudCc7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAkKCdpbWdbYWx0PSInK3R5cGUrJyJdJykuY3NzKCdiYWNrZ3JvdW5kLWNvbG9yJywgY29sb3IpOwogICAgICAgICAgICB9CiAgICAgICAgCiAgICAgICAgZnVuY3Rpb24gYXBwICgpewogICAgICAgICAgICAKICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAkLmdldFNjcmlwdCgnL2kvanNvbi9nZXRMYmltYXBzTGliJywgZnVuY3Rpb24gKCkgewogICAgICAgICAgICAgICAgICAgICQuYWpheCgnL2kvanNvbi9nZXRBcGlLZXlzP3R5cGU9ZGV0YWlsJykuZG9uZShmdW5jdGlvbiAoYXBpS2V5cykgewogICAgICAgICAgICAgICAgICAgICAgdmFyIHByb3ZpZGVyID0gJ2phd2cnOwogICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICB2YXIgbWFwT3B0aW9ucyA9IHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgem9vbSA6IDE0ICwgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbWluWm9vbSA6IDEyICwgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcGFuQ29udHJvbCA6IDEgLCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzY2FsZUNvbnRyb2wgOiAxICwgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgem9vbUNvbnRyb2wgOiAxICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH07CiAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICB2YXIgb3B0aW9ucyA9IE9iamVjdC5hc3NpZ24oeyB9LCBtYXBPcHRpb25zLCB7CiAgICAgICAgICAgICAgICAgICAgICAgIG1hcENvbnRhaW5lcjogJyNtYXBJbmZvc0NpdHknLAogICAgICAgICAgICAgICAgICAgICAgICB0b2tlbjogYXBpS2V5c1twcm92aWRlcl0sCiAgICAgICAgICAgICAgICAgICAgICAgIGNhbGxiYWNrOiB3aW5kb3cuZ2V0TWFwCiAgICAgICAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgICAgICAgIGxiaW1hcHMuY2FsbGJhY2sobGJpbWFwcy5wcm92aWRlcnNbcHJvdmlkZXJdKShvcHRpb25zKQogICAgICAgICAgICAgICAgICAgIH0pCiAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgCgogICAgICAgICAgICAKICAgICAgICAgICAgICAgICQoZG9jdW1lbnQpLm9uKCJjbGljayIsIi5tYXAtYnV0dG9uIiwgZnVuY3Rpb24oKXsKICAgICAgICAgICAgICAgICAgICB2YXIgdHlwZSA9ICQodGhpcykuYXR0cigicmVsIik7CiAgICAgICAgICAgICAgICAgICAgc2hvd0hpZGVNYXJrZXJzKHR5cGUpOwogICAgICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTsKICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgJC5nZXQoJy9pL3BvaS9nZXRJY29uQ29sb3JzJykuZG9uZShmdW5jdGlvbihyZXN1bHQpIHsKICAgICAgICAgICAgICAgICAgICAgICAgY29sb3JNYXJrZXJzID0gcmVzdWx0OwogICAgICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgICAgICQuZ2V0KCIvaS9wb2kvZ2V0U3RhdHM/aWRsb2NhbGl0ZT0yNzYiLHt9LCdqc29uJykuZG9uZShmdW5jdGlvbihzdGF0cyl7CiAgICAgICAgICAgICAgICAgICAgICAgIAogICAgdmFyIGkgPSAwOwogICAgdmFyIHVsID0gJCgiPHVsIGNsYXNzPSdsZWZ0U3RhdCcvPiIpOwogICAgdmFyIHVsMiA9ICQoIjx1bCBjbGFzcz0ncmlnaHRTdGF0Jy8+Iik7CiAgICAkKCcjc3RhdHNJbmZvc0NpdHknKS5hcHBlbmQoJzxkaXYgY2xhc3M9InRoZW1UaXRsZSI+U3RhdGlzdGlxdWVzPC9kaXY+Jyk7CiAgICAkLmVhY2goc3RhdHMsIGZ1bmN0aW9uKGssIHN0YXQpewogICAgICAgIHZhciBsaSA9ICQoIjxsaS8+Iik7CiAgICAgICAgaWYoaSUyID09PSAwKXsKICAgICAgICAgICAgbGkuYWRkQ2xhc3MoJ2V2ZW4nKTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgICBsaS5hZGRDbGFzcygnb2RkJyk7CiAgICAgICAgfQogICAgICAgIHZhciB1bml0ZSA9ICIlIjsKICAgICAgICBpZiAoKHN0YXQudHJhbnNsYXRlKS5pbmNsdWRlcygiTm9tYnJlIil8fHN0YXQucHJvdmlkZXIgPT0gJ2FwaScpewogICAgICAgICAgIHVuaXRlID0gIiI7CiAgICAgICAgfQogICAgICAgIGxpLmh0bWwoJzxzcGFuIGNsYXNzPSJuYW1lIj4nK3N0YXQudHJhbnNsYXRlKyc8L3NwYW4+PHNwYW4gY2xhc3M9InZhbHVlIj4nK3N0YXQuc3RhdCsnICcrdW5pdGUrJzwvc3Bhbj4nKTsKICAgICAgICBpZiAoaSA8IDcpewogICAgICAgICAgICB1bC5hcHBlbmQobGkpOwogICAgICAgIH0KICAgICAgICBlbHNlIGlmIChpID4gNiAmJiBpIDwgMTQpewogICAgICAgICAgICAkKCIjc3RhdHNJbmZvc0NpdHkiKS5hcHBlbmQodWwpOwogICAgICAgICAgICB1bDIuYXBwZW5kKGxpKTsKICAgICAgICB9CiAgICAgICAgaSsrOwogICAgfSk7CiAgICAkKCIjc3RhdHNJbmZvc0NpdHkiKS5hcHBlbmQodWwyKTsKCiAgICAgICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgCiAgICAgICAgfQogICAgICAgIAogICAgICAgICAgICBhcHAoKTsKICAgICAgICAKCiAgICAgICAgCiAgICA8L3NjcmlwdD4KICAgICAgICAKCiAgICAgICAgICAgICAgICAgICAgPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiIHNyYz0iL2pzL2J1aWxkX21hcEZyYW5jZS5qcyIgPjwvc2NyaXB0PgogICAgICAgIAogICAgICAgICAKICAgICAgICAgIDwhLS0gw6AgdXRpbGlzZXIgc2kgb24gdmV1dCBham91dGVyIHVuIGZpY2hpZXIganMgc3DDqWNpZmlxdWUgYXUgc2l0ZSAtLT4KCgogICAgICAgIAogICAgCiAgICAgICAgICAgIAogICAgPHNjcmlwdD4KalF1ZXJ5KGRvY3VtZW50KS5yZWFkeShmdW5jdGlvbigpewogICAgICAgICAgICBqUXVlcnkoZG9jdW1lbnQpLm9uKCdzdWJtaXQnLCAnZm9ybScsIGZ1bmN0aW9uKCl7ICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgdmFyIG15Zm9ybSA9IGpRdWVyeSh0aGlzKTsKICAgICAgICAgICAgICAgIHZhciBhcyA9IGpRdWVyeSgnLmFzYnJ5dycsIG15Zm9ybSk7ICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgaWYoYXMubGVuZ3RoKXsgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIHZhciBkeW5hbWljID0galF1ZXJ5KCcuMicsIGFzKTsKICAgICAgICAgICAgICAgICAgICB2YXIgY3VycmVudHZhbHVlID0gZHluYW1pYy52YWwoKTsKICAgICAgICAgICAgICAgICAgICB2YXIgb3JpZ3ZhbHVlID0gZHluYW1pYy5hdHRyKCdkYXRhLW9yaWcnKTsKICAgICAgICAgICAgICAgICAgICBpZihjdXJyZW50dmFsdWUgPT09IG9yaWd2YWx1ZSkgewogICAgICAgICAgICAgICAgICAgICAgICB2YXIgd2FpdGVkdmFsdWUgPSBkeW5hbWljLmF0dHIoJ2RhdGEtd2FpdCcpOwogICAgICAgICAgICAgICAgICAgICAgICBkeW5hbWljLnZhbCh3YWl0ZWR2YWx1ZSk7CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7CiAgICAgICAgICAgIH0pOwogICAgICAgIH0pOwo8L3NjcmlwdD4KCgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAKICAgICAgICAKICAgICAgICAgICAgPGRpdiBjbGFzcz0ic2Nyb2xsVG9Ub3AiPgogICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9Imljb24tZmxlY2hlIGZzLTQwIj48L3NwYW4+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIAoKICAgICAgICAKICAgICAgICAKICAgIDwvYm9keT4KPC9odG1sPgo=
    http_version: null
  recorded_at: Wed, 15 Apr 2020 14:27:02 GMT
- request:
    method: get
    uri: http://www.grenelle-immobilier.com/90-Appartement-1-2-pieces-pres-place-de-Breteuil.html
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Wed, 15 Apr 2020 14:27:02 GMT
      Server:
      - Apache/2.4.25 (Debian)
      Expires:
      - Thu, 19 Nov 1981 08:52:00 GMT
      Cache-Control:
      - no-store, no-cache, must-revalidate
      Pragma:
      - no-cache
      X-Bobcat-Version:
      - kitty.pryde.20200414.rev1
      Set-Cookie:
      - PHPSESSID=ndp472dturijln5g9sofcl5oq1; path=/
      - SRV=c62; path=/
      Vary:
      - Accept-Encoding
      X-Server-Id:
      - cluster6-w2
      Access-Control-Allow-Origin:
      - "*"
      Content-Length:
      - '13385'
      Content-Type:
      - text/html; charset=UTF-8
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: null
  recorded_at: Wed, 15 Apr 2020 14:27:02 GMT
- request:
    method: get
    uri: http://www.grenelle-immobilier.com/89-Beau-studio-sur-jardin.html
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Wed, 15 Apr 2020 14:27:02 GMT
      Server:
      - Apache/2.4.25 (Debian)
      Expires:
      - Thu, 19 Nov 1981 08:52:00 GMT
      Cache-Control:
      - no-store, no-cache, must-revalidate
      Pragma:
      - no-cache
      X-Bobcat-Version:
      - kitty.pryde.20200414.rev1
      Set-Cookie:
      - PHPSESSID=osrh09hikiktr3kat9f5foevpo; path=/
      - SRV=c62; path=/
      Vary:
      - Accept-Encoding
      X-Server-Id:
      - cluster6-w2
      Access-Control-Allow-Origin:
      - "*"
      Content-Length:
      - '13711'
      Content-Type:
      - text/html; charset=UTF-8
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: null
  recorded_at: Wed, 15 Apr 2020 14:27:02 GMT
recorded_with: VCR 5.1.0
