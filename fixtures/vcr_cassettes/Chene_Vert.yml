---
http_interactions:
- request:
    method: get
    uri: http://www.le-chene-vert.com/annonces-liste.asp?tri=nouveaute&typeliste=
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Cache-Control:
      - private
      Content-Length:
      - '28095'
      Content-Type:
      - text/html
      Server:
      - Microsoft-IIS/7.5
      Set-Cookie:
      - ASPSESSIONIDACQBCCRR=KMCNKMBAPHOKLEFOMBBBKEDI; path=/
      X-Powered-By:
      - ASP.NET
      Date:
      - Thu, 16 Apr 2020 16:14:05 GMT
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: null
  recorded_at: Thu, 16 Apr 2020 16:13:54 GMT
- request:
    method: get
    uri: http://www.le-chene-vert.com/annonces-detail.asp?IDagence=1401&Refmandat=YM128-793&offset=0&typeliste=
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Cache-Control:
      - private
      Content-Length:
      - '33030'
      Content-Type:
      - text/html
      Server:
      - Microsoft-IIS/7.5
      Set-Cookie:
      - ASPSESSIONIDACQBCCRR=LMCNKMBAHLIGMMIHHDNIDPOM; path=/
      X-Powered-By:
      - ASP.NET
      Date:
      - Thu, 16 Apr 2020 16:14:05 GMT
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: null
  recorded_at: Thu, 16 Apr 2020 16:13:54 GMT
- request:
    method: get
    uri: http://www.le-chene-vert.com/annonces-detail.asp?IDagence=1398&Refmandat=CW109-1469&offset=0&typeliste=
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Cache-Control:
      - private
      Content-Length:
      - '29111'
      Content-Type:
      - text/html
      Server:
      - Microsoft-IIS/7.5
      Set-Cookie:
      - ASPSESSIONIDACQBCCRR=MMCNKMBAOACOFEJLMJAFLNIB; path=/
      X-Powered-By:
      - ASP.NET
      Date:
      - Thu, 16 Apr 2020 16:14:05 GMT
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: null
  recorded_at: Thu, 16 Apr 2020 16:13:54 GMT
- request:
    method: get
    uri: http://www.le-chene-vert.com/annonces-detail.asp?IDagence=1398&Refmandat=CW109-1427&offset=0&typeliste=
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Cache-Control:
      - private
      Content-Length:
      - '32378'
      Content-Type:
      - text/html
      Server:
      - Microsoft-IIS/7.5
      Set-Cookie:
      - ASPSESSIONIDACQBCCRR=NMCNKMBAOBGGJCPANDMMINIK; path=/
      X-Powered-By:
      - ASP.NET
      Date:
      - Thu, 16 Apr 2020 16:14:05 GMT
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: null
  recorded_at: Thu, 16 Apr 2020 16:13:54 GMT
- request:
    method: get
    uri: http://www.le-chene-vert.com/annonces-detail.asp?IDagence=1401&Refmandat=YM128-794&offset=0&typeliste=
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Cache-Control:
      - private
      Content-Length:
      - '28492'
      Content-Type:
      - text/html
      Server:
      - Microsoft-IIS/7.5
      Set-Cookie:
      - ASPSESSIONIDACQBCCRR=OMCNKMBAMLPOPGGPGDLMBOBP; path=/
      X-Powered-By:
      - ASP.NET
      Date:
      - Thu, 16 Apr 2020 16:14:05 GMT
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: null
  recorded_at: Thu, 16 Apr 2020 16:13:54 GMT
- request:
    method: get
    uri: http://www.le-chene-vert.com/annonces-detail.asp?IDagence=1401&Refmandat=YM128-795&offset=0&typeliste=
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Cache-Control:
      - private
      Content-Length:
      - '29636'
      Content-Type:
      - text/html
      Server:
      - Microsoft-IIS/7.5
      Set-Cookie:
      - ASPSESSIONIDACQBCCRR=PMCNKMBAOOKKDELOJBEOKCPH; path=/
      X-Powered-By:
      - ASP.NET
      Date:
      - Thu, 16 Apr 2020 16:14:06 GMT
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: null
  recorded_at: Thu, 16 Apr 2020 16:13:54 GMT
- request:
    method: get
    uri: http://www.le-chene-vert.com/annonces-detail.asp?IDagence=1398&Refmandat=CW109-1486&offset=0&typeliste=
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Cache-Control:
      - private
      Content-Length:
      - '31115'
      Content-Type:
      - text/html
      Server:
      - Microsoft-IIS/7.5
      Set-Cookie:
      - ASPSESSIONIDACQBCCRR=ANCNKMBAFIGPJELCEPGPPPDI; path=/
      X-Powered-By:
      - ASP.NET
      Date:
      - Thu, 16 Apr 2020 16:14:06 GMT
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        DQo8IURPQ1RZUEUgaHRtbD4NCjwhLS1baWYgSUUgOF0+IDxodG1sIGxhbmc9ImZyIiBjbGFzcz0iaWU4Ij4gPCFbZW5kaWZdLS0+DQo8IS0tW2lmIElFIDldPiA8aHRtbCBsYW5nPSJmciIgY2xhc3M9ImllOSI+IDwhW2VuZGlmXS0tPg0KPCEtLVtpZiAhSUVdPjwhLS0+DQo8aHRtbCBsYW5nPSJmciI+DQo8IS0tPCFbZW5kaWZdLS0+DQo8aGVhZD4NCiAgICA8dGl0bGU+QVBQQVJURU1FTlQgLSBQQVJJUyAxMcOobWUgLSBSVUUgREVTIEJPVUxFVFMvQ0hBUk9OTkUgfCBMZSBDaGVuZSBWZXJ0IEltbW9iaWxpZXI8L3RpdGxlPg0KICAgIDxtZXRhIG5hbWU9ImRlc2NyaXB0aW9uIiBjb250ZW50PSJBZ2VuY2UgU0FJTlQtQU1CUk9JU0UgOiBBdSBwaWVkIGR1IG3DqXRybyBydWUgZGVzIEJvdWxldHMsIGRhbnMgdW4gbWFnbmlmaXF1ZSBpbW1ldWJsZSBhbmNpZW4gIGVuIHBpZXJyZSBkZSB0YWlsbGUsIGF1IDjDqG1lIGV0IGRlcm5pZXIgw6l0YWdlIGF2ZWMgYXNjZW5zZXVyLCB0csOocyBiZWwgYXBwYXJ0ZW1lIj4NCiAgICANCiAgICA8IS0tIE1ldGEgLS0+DQogICAgPG1ldGEgY2hhcnNldD0idXRmLTgiPg0KICAgIDxtZXRhIG5hbWU9InZpZXdwb3J0IiBjb250ZW50PSJ3aWR0aD1kZXZpY2Utd2lkdGgsIGluaXRpYWwtc2NhbGU9MS4wIj4NCiAgICANCiAgICA8bWV0YSBuYW1lPSJhdXRob3IiIGNvbnRlbnQ9IkF2YW5kaXMgLSBTb2x1dGlvbnMgV2ViIGltbW9iaWxpw6hyZXMiPg0KICAgIA0KICAgIDwhLS0gQ1NTIEdsb2JhbCBDb21wdWxzb3J5LS0+DQogICAgPGxpbmsgcmVsPSJzdHlsZXNoZWV0IiBocmVmPSJhc3NldHMvcGx1Z2lucy9ib290c3RyYXAvY3NzL2Jvb3RzdHJhcC5jc3MiPg0KICAgIDxsaW5rIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0iYXNzZXRzL2Nzcy9zdHlsZS5jc3MiPg0KICAgIDxsaW5rIHJlbD0ic2hvcnRjdXQgaWNvbiIgaHJlZj0iZmF2aWNvbi5pY28iPg0KICAgIA0KICAgIDwhLS0gQ1NTIEltcGxlbWVudGluZyBQbHVnaW5zIC0tPg0KICAgIDxsaW5rIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0iYXNzZXRzL3BsdWdpbnMvZm9udC1hd2Vzb21lL2Nzcy9mb250LWF3ZXNvbWUuY3NzIj4NCiAgICA8bGluayByZWw9InN0eWxlc2hlZXQiIGhyZWY9ImFzc2V0cy9wbHVnaW5zL3NreS1mb3Jtcy92ZXJzaW9uLTIuMC4xL2Nzcy9jdXN0b20tc2t5LWZvcm1zLmNzcyI+DQogICAgPGxpbmsgcmVsPSJzdHlsZXNoZWV0IiBocmVmPSJhc3NldHMvcGx1Z2lucy9mYW5jeWJveC9zb3VyY2UvanF1ZXJ5LmZhbmN5Ym94LmNzcyI+DQogICAgDQogICAgPCEtLSBDU1MgUGFnZSBMZXZlbCAtLT4NCiAgICANCiAgICA8IS0tIENTUyBUaGVtZSAtLT4NCiAgICA8bGluayByZWw9InN0eWxlc2hlZXQiIGhyZWY9ImFzc2V0cy9jc3MvaGVhZGVycy9oZWFkZXItbGN2LmNzcyI+DQogICAgPGxpbmsgcmVsPSJzdHlsZXNoZWV0IiBocmVmPSJhc3NldHMvY3NzL2Zvb3RlcnMvZm9vdGVyLWxjdi5jc3MiPg0KICAgIDwhLS0gTkIgOiBMZSB0aMOobWUgZGUgY291bGV1cnMgZG9pdCDDqnRyZSBwbGFjw6kgQVBSRVMgbGVzIGhlYWRlciBldCBmb290ZXIgKHBvdXIgb3ZlcnJpZGUpIC0tPg0KICAgIDxsaW5rIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0iYXNzZXRzL2Nzcy90aGVtZS1jb2xvcnMvbGN2LmNzcyI+DQogICAgDQogICAgPCEtLSBDU1MgQ3VzdG9taXphdGlvbiAtLT4NCiAgICA8bGluayByZWw9InN0eWxlc2hlZXQiIGhyZWY9ImFzc2V0cy9jc3MvY3VzdG9tLmNzcyI+DQo8L2hlYWQ+DQoNCjxib2R5Pg0KPGRpdiBjbGFzcz0id3JhcHBlciI+IA0KDQogIDwhLS09PT0gSGVhZGVyID09PS0tPiAgICANCiAgCQk8ZGl2IGNsYXNzPSJoZWFkZXIiPg0KICAgICAgICA8IS0tIFRvcGJhciAtLT4NCiAgICAgICAgPGRpdiBjbGFzcz0idG9wYmFyIj4NCiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbnRhaW5lciI+DQogICAgICAgICAgICAgICAgPCEtLSBUb3BiYXIgTmF2aWdhdGlvbiAtLT4NCiAgICAgICAgICAgICAgICA8dWwgY2xhc3M9ImxvZ2luYmFyIHB1bGwtcmlnaHQiPiAgDQogICAgICAgICAgICAgICAgICAgIDxsaT4NCiAgICAgICAgICAgICAgICAgICAgCTxpIGNsYXNzPSJmYSBmYS1mb2xkZXItb3BlbiI+PC9pPg0KICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iYW5ub25jZXMtbGlzdGUuYXNwP3JlZnJlc2g9MTYvMDQvMjAyMCAxODoxNDowNiZ0eXBlbGlzdGU9c2VsZWN0aW9uIj5NYSBzw6lsZWN0aW9uPC9hPjwvbGk+ICANCiAgICAgICAgICAgICAgICAgICAgPGxpIGNsYXNzPSJ0b3BiYXItZGV2aWRlciI+PC9saT4gICANCiAgICAgICAgICAgICAgICAgICAgPGxpPg0KICAgICAgICAgICAgICAgICAgICAJPGkgY2xhc3M9ImZhIGZhLWVudmVsb3BlIj48L2k+DQogICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJmb3JtdWxhaXJlLmFzcD90eXBlZm9ybT1hbGVydGUiPkFsZXJ0ZSBlbWFpbDwvYT48L2xpPiAgIA0KICAgICAgICAgICAgICAgIDwvdWw+DQogICAgICAgICAgICAgICAgPCEtLSBFbmQgVG9wYmFyIE5hdmlnYXRpb24gLS0+DQogICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgPC9kaXY+DQogICAgICAgIDwhLS0gRW5kIFRvcGJhciAtLT4NCiAgICAgICAgDQogICAgICAgIDwhLS0gSGVhZGVyIFNvY2lhbHMgLS0+DQogICAgICAgIDwhLS0NCiAgICAgICAgPGRpdiBjbGFzcz0iaGVhZGVyLXNvY2lhbHMgY29udGFpbmVyIj4NCiAgICAgICAgICA8dWwgY2xhc3M9ImhlYWRlci1zb2NpYWxzLWxpc3QgbGlzdC1pbmxpbmUiPg0KICAgICAgICAgICAgICA8bGk+DQogICAgICAgICAgICAgICAgICA8YSBjbGFzcz0idG9vbHRpcHMiIGRhdGEtb3JpZ2luYWwtdGl0bGU9IkZhY2Vib29rIiB0aXRsZT0iIiBkYXRhLXBsYWNlbWVudD0idG9wIiBkYXRhLXRvZ2dsZT0idG9vbHRpcCIgaHJlZj0iaHR0cHM6Ly93d3cuZmFjZWJvb2suY29tL0xlQ2hlbmVWZXJ0SW1tb2JpbGllci8iPg0KICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJmYSBmYS1mYWNlYm9vay1zcXVhcmUiPjwvaT4NCiAgICAgICAgICAgICAgICAgIDwvYT4NCiAgICAgICAgICAgICAgPC9saT4NCiAgICAgICAgICAgICAgPGxpPg0KICAgICAgICAgICAgICAgICAgPGEgY2xhc3M9InRvb2x0aXBzIiBkYXRhLW9yaWdpbmFsLXRpdGxlPSJUd2l0dGVyIiB0aXRsZT0iIiBkYXRhLXBsYWNlbWVudD0idG9wIiBkYXRhLXRvZ2dsZT0idG9vbHRpcCIgaHJlZj0iaHR0cHM6Ly90d2l0dGVyLmNvbS9MZWNoZW5lRmFpZGhlcmIiPg0KICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJmYSBmYS10d2l0dGVyLXNxdWFyZSI+PC9pPg0KICAgICAgICAgICAgICAgICAgPC9hPg0KICAgICAgICAgICAgICA8L2xpPg0KICAgICAgICAgIDwvdWw+DQogICAgICAgIDwvZGl2Pg0KICAgICAgICAtLT4NCiAgICAgICAgPCEtLSBFbmQgSGVhZGVyIFNvY2lhbHMgLS0+DQogICAgDQogICAgICAgIDwhLS0gTmF2YmFyIC0tPg0KICAgICAgICA8ZGl2IGNsYXNzPSJuYXZiYXIgbmF2YmFyLWRlZmF1bHQgbWVnYS1tZW51IiByb2xlPSJuYXZpZ2F0aW9uIj4NCiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbnRhaW5lciI+DQoNCiAgICAgICAgICAgICAgICANCiAgICAgICAgICAgICAgICAgPCEtLSBCcmFuZCBhbmQgdG9nZ2xlIGdldCBncm91cGVkIGZvciBiZXR0ZXIgbW9iaWxlIGRpc3BsYXkgLS0+DQogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sLW1kLTQgY29sLW1kLXB1c2gtNCI+DQogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Im5hdmJhci1oZWFkZXIiPg0KICAgICAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiB0eXBlPSJidXR0b24iIGNsYXNzPSJuYXZiYXItdG9nZ2xlIiBkYXRhLXRvZ2dsZT0iY29sbGFwc2UiIGRhdGEtdGFyZ2V0PSIubmF2YmFyLXJlc3BvbnNpdmUtY29sbGFwc2UiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJzci1vbmx5Ij5Ub2dnbGUgbmF2aWdhdGlvbjwvc3Bhbj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iZmEgZmEtYmFycyI+PC9zcGFuPg0KICAgICAgICAgICAgICAgICAgICAgICAgPC9idXR0b24+DQogICAgICAgICAgICAgICAgICAgICAgICA8YSBjbGFzcz0ibmF2YmFyLWJyYW5kIiBocmVmPSJpbmRleC5hc3AiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgaWQ9ImxvZ28taGVhZGVyIiBzcmM9ImltYWdlcy9sY3YtcGljdG8wMS5wbmciIGFsdD0iTG9nbyI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImJyYW5kLW5hbWUiPkxlIGNow4puZSB2ZXJ0IGltbW9iaWxpZXI8L3NwYW4+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImJyYW5kLWJhc2VsaW5lIj5BcHBhcnRlbWVudHMgLSBMb2Z0cyAtIER1cGxleDxici8+DQogICAgQXRlbGllcnMgZOKAmWFydGlzdGUgLSBNYWlzb25zPC9zcGFuPg0KICAgICAgICAgICAgICAgICAgICAgICAgPC9hPg0KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICANCiAgICAgICAgICAgICAgICA8IS0tIENvbGxlY3QgdGhlIG5hdiBsaW5rcywgZm9ybXMsIGFuZCBvdGhlciBjb250ZW50IGZvciB0b2dnbGluZyAtLT4NCiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtbWQtNCBjb2wtbWQtcHVsbC00Ij4NCiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sbGFwc2UgbmF2YmFyLWNvbGxhcHNlIG5hdmJhci1yZXNwb25zaXZlLWNvbGxhcHNlIj4NCiAgICAgICAgICAgICAgICAgICAgICAgIDx1bCBjbGFzcz0ibmF2IG5hdmJhci1uYXYiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iaW5kZXguYXNwIj5BY2N1ZWlsPC9hPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvbGk+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJhbm5vbmNlcy1saXN0ZS5hc3A/cmVmcmVzaD0xNi8wNC8yMDIwIDE4OjE0OjA2Ij5WZW50ZTwvYT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2xpPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iZm9ybXVsYWlyZS5hc3A/dHlwZWZvcm09ZXN0aW1hdGlvbiI+RXN0aW1hdGlvbjwvYT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2xpPg0KICAgICAgICAgICAgICAgICAgICAgICAgPC91bD4NCiAgICAgICAgICAgICAgICAgICAgPC9kaXY+PCEtLS9uYXZiYXItY29sbGFwc2UtLT4NCiAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICANCiAgICAgICAgICAgICAgICA8IS0tIENvbGxlY3QgdGhlIG5hdiBsaW5rcywgZm9ybXMsIGFuZCBvdGhlciBjb250ZW50IGZvciB0b2dnbGluZyAtLT4NCiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtbWQtNCI+DQogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbGxhcHNlIG5hdmJhci1jb2xsYXBzZSBuYXZiYXItcmVzcG9uc2l2ZS1jb2xsYXBzZSI+DQogICAgICAgICAgICAgICAgICAgICAgICA8dWwgY2xhc3M9Im5hdiBuYXZiYXItbmF2Ij4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGk+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9ImFnZW5jZXMuYXNwIj5MZXMgQWdlbmNlczwvYT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2xpPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iYW5ub25jZXMtbGlzdGUuYXNwP3JlZnJlc2g9MTYvMDQvMjAyMCAxODoxNDowNiZ0eXBlbGlzdGU9dmVuZHVzIj5WZW5kdXM8L2E+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9saT4NCiAgICANCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8IS0tIFNlYXJjaCBCbG9jayAtLT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGk+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJzZWFyY2ggZmEgZmEtc2VhcmNoIHNlYXJjaC1idG4iIHRpdGxlPSJSZWNoZXJjaGUiPiA8c3BhbiBjbGFzcz0ic2VhcmNoLW1lbnRpb24iPlJlY2hlcmNoZTwvc3Bhbj48L2k+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InNlYXJjaC1vcGVuIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImlucHV0LWdyb3VwIGFuaW1hdGVkIGZhZGVJbkRvd24iPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgDQoJCQkJCQkJCQkgICAgDQo8aDM+IDxpIGNsYXNzPSJmYSBmYS1zZWFyY2giPjwvaT4gUmVjaGVyY2hlIDwvaDM+DQo8Zm9ybSBhY3Rpb249ImFubm9uY2VzLWxpc3RlLmFzcD90eXBlbGlzdGU9cmVjaGVyY2hlJnNlYXJjaC1jaGFuZ2U9dHJ1ZSIgbWV0aG9kPSJwb3N0IiBjbGFzcz0ic2t5LWZvcm0gbGFiZWwtcm91bmRlZCI+DQogIDxkaXYgY2xhc3M9ImNvbC1sZy0xMiBzZWFyY2gtdHlwZWJpZW4iPg0KICAgIDxsYWJlbCBjbGFzcz0iY2hlY2tib3gtaW5saW5lIj4NCiAgICAgIDxpbnB1dCBpZD0idHlwZWJpZW4iIG5hbWU9InR5cGViaWVuIiB0eXBlPSJjaGVja2JveCIgdmFsdWU9InR5cGUxIiA+DQogICAgICBTdHVkaW9zIC8gMiBQacOoY2VzIDwvbGFiZWw+DQogICAgPGxhYmVsIGNsYXNzPSJjaGVja2JveC1pbmxpbmUiPg0KICAgICAgPGlucHV0IGlkPSJ0eXBlYmllbiIgbmFtZT0idHlwZWJpZW4iIHR5cGU9ImNoZWNrYm94IiB2YWx1ZT0idHlwZTIiID4NCiAgICAgIDMgLyA0IFBpw6hjZXMgPC9sYWJlbD4NCiAgICA8bGFiZWwgY2xhc3M9ImNoZWNrYm94LWlubGluZSI+DQogICAgICA8aW5wdXQgaWQ9InR5cGViaWVuIiBuYW1lPSJ0eXBlYmllbiIgdHlwZT0iY2hlY2tib3giIHZhbHVlPSJ0eXBlMyIgPg0KICAgICAgNSBQacOoY2VzIGV0IHBsdXMgPC9sYWJlbD4NCiAgICA8bGFiZWwgY2xhc3M9ImNoZWNrYm94LWlubGluZSI+DQogICAgICA8aW5wdXQgaWQ9InR5cGViaWVuIiBuYW1lPSJ0eXBlYmllbiIgdHlwZT0iY2hlY2tib3giIHZhbHVlPSJ0eXBlNCIgPg0KICAgICAgTG9mdHMgLyBNYWlzb25zIC8gQXRlbGllcnMgPC9sYWJlbD4NCiAgPC9kaXY+DQogIDxkaXYgY2xhc3M9ImNvbC1sZy00Ij4NCiAgICA8c2VsZWN0IGlkPSJhcnJvbmQiIG5hbWU9ImFycm9uZCIgY2xhc3M9ImZvcm0tY29udHJvbCIgbXVsdGlwbGU9IiIgc2l6ZT0iNyI+DQogICAgICA8b3B0aW9uIHZhbHVlPSJhbGwiID5Ub3V0ZXMgbG9jYWxpc2F0aW9uczwvb3B0aW9uPg0KICAgICAgPG9wdGlvbiB2YWx1ZT0iMTDDqG1lIiA+UGFyaXMgLSAxMMOobWU8L29wdGlvbj4NCiAgICAgIDxvcHRpb24gdmFsdWU9IjExw6htZSIgPlBhcmlzIC0gMTHDqG1lPC9vcHRpb24+DQogICAgICA8b3B0aW9uIHZhbHVlPSIxMsOobWUiID5QYXJpcyAtIDEyw6htZTwvb3B0aW9uPg0KCSAgPG9wdGlvbiB2YWx1ZT0iMTPDqG1lIiA+UGFyaXMgLSAxM8OobWU8L29wdGlvbj4NCiAgICAgIDxvcHRpb24gdmFsdWU9IjE1w6htZSIgPlBhcmlzIC0gMTXDqG1lPC9vcHRpb24+DQogICAgICA8b3B0aW9uIHZhbHVlPSIxN8OobWUiID5QYXJpcyAtIDE3w6htZTwvb3B0aW9uPg0KICAgICAgPG9wdGlvbiB2YWx1ZT0iMTjDqG1lIiA+UGFyaXMgLSAxOMOobWU8L29wdGlvbj4NCiAgICAgIDxvcHRpb24gdmFsdWU9IjE5w6htZSIgPlBhcmlzIC0gMTnDqG1lPC9vcHRpb24+DQogICAgICA8b3B0aW9uIHZhbHVlPSIyMMOobWUiID5QYXJpcyAtIDIww6htZTwvb3B0aW9uPg0KICAgICAgPG9wdGlvbiB2YWx1ZT0iM8OobWUiID5QYXJpcyAtIDPDqG1lPC9vcHRpb24+DQoJICA8b3B0aW9uIHZhbHVlPSI1w6htZSIgPlBhcmlzIC0gNcOobWU8L29wdGlvbj4NCgkgIDxvcHRpb24gdmFsdWU9IjbDqG1lIiA+UGFyaXMgLSA2w6htZTwvb3B0aW9uPg0KICAgICAgPG9wdGlvbiB2YWx1ZT0iOcOobWUiID5QYXJpcyAtIDnDqG1lPC9vcHRpb24+DQogICAgICA8b3B0aW9uIHZhbHVlPSJhdXRyZXMiID5QYXJpcyAtIExpbWl0cm9waGU8L29wdGlvbj4NCiAgICA8L3NlbGVjdD4NCiAgICA8ZGl2IGNsYXNzPSJub3RlIj48c3BhbiBjbGFzcz0iZ2x5cGhpY29uIGdseXBoaWNvbi1pbmZvLXNpZ24iPjwvc3Bhbj4gR2FyZGV6IGxhIHRvdWNoZSBDdHJsIGFwcHV5w6llIHBvdXIgc8OpbGVjdGlvbm5lciBwbHVzaWV1cnMgb3B0aW9uczwvZGl2Pg0KICA8L2Rpdj4NCiAgPGRpdiBjbGFzcz0iY29sLWxnLTgiPiAgIA0KDQoNCiAgICAgIA0KICAgIDxsYWJlbCBjbGFzcz0ibGFiZWwgcm91bmRlZC14Ij4gQnVkZ2V0IGNvbXByaXMgZW50cmUgPHNwYW4gaWQ9InNsaWRlci1idWRnZXQtdmFsdWUxIj4wPC9zcGFuPiBldCA8c3BhbiBpZD0ic2xpZGVyLWJ1ZGdldC12YWx1ZTIiPm1heDwvc3Bhbj4g4oKsIDwvbGFiZWw+DQogICAgPGRpdiBpZD0ic2xpZGVyLWJ1ZGdldCIgY2xhc3M9InVpLXNsaWRlciB1aS1zbGlkZXItaG9yaXpvbnRhbCB1aS13aWRnZXQgdWktd2lkZ2V0LWNvbnRlbnQgdWktY29ybmVyLWFsbCIgYXJpYS1kaXNhYmxlZD0iZmFsc2UiPg0KICAgICAgPGRpdiBjbGFzcz0idWktc2xpZGVyLXJhbmdlIHVpLXdpZGdldC1oZWFkZXIgdWktY29ybmVyLWFsbCIgc3R5bGU9ImxlZnQ6IDE1JTsgd2lkdGg6IDQ1JTsiPjwvZGl2Pg0KICAgICAgPGEgY2xhc3M9InVpLXNsaWRlci1oYW5kbGUgdWktc3RhdGUtZGVmYXVsdCB1aS1jb3JuZXItYWxsIiBocmVmPSIjIiBzdHlsZT0ibGVmdDowJTsiPjwvYT4gPGEgY2xhc3M9InVpLXNsaWRlci1oYW5kbGUgdWktc3RhdGUtZGVmYXVsdCB1aS1jb3JuZXItYWxsIiBocmVmPSIjIiBzdHlsZT0ibGVmdDogMTAwJTsiPjwvYT4NCiAgICA8L2Rpdj4NCiAgICA8aW5wdXQgdHlwZT0iaGlkZGVuIiBpZD0icHJpeC1taW4iIG5hbWU9InByaXgtbWluIiB2YWx1ZT0iMCI+DQogICAgPGlucHV0IHR5cGU9ImhpZGRlbiIgaWQ9InByaXgtbWF4IiBuYW1lPSJwcml4LW1heCIgdmFsdWU9IjIwMDAwMDAiPg0KICAgIA0KICAgIDxsYWJlbCBjbGFzcz0ibGFiZWwgcm91bmRlZC14Ij4gU3VyZmFjZSBoYWJpdGFibGUgY29tcHJpc2UgZW50cmUgPHNwYW4gaWQ9InNsaWRlci1zdXJmaGFiLXZhbHVlMSI+MDwvc3Bhbj4gZXQgPHNwYW4gaWQ9InNsaWRlci1zdXJmaGFiLXZhbHVlMiI+bWF4PC9zcGFuPiBtwrIgPC9sYWJlbD4NCiAgICA8ZGl2IGlkPSJzbGlkZXItc3VyZmhhYiIgY2xhc3M9InVpLXNsaWRlciB1aS1zbGlkZXItaG9yaXpvbnRhbCB1aS13aWRnZXQgdWktd2lkZ2V0LWNvbnRlbnQgdWktY29ybmVyLWFsbCIgYXJpYS1kaXNhYmxlZD0iZmFsc2UiPg0KICAgICAgPGRpdiBjbGFzcz0idWktc2xpZGVyLXJhbmdlIHVpLXdpZGdldC1oZWFkZXIgdWktY29ybmVyLWFsbCIgc3R5bGU9ImxlZnQ6IDE1JTsgd2lkdGg6IDQ1JTsiPjwvZGl2Pg0KICAgICAgPGEgY2xhc3M9InVpLXNsaWRlci1oYW5kbGUgdWktc3RhdGUtZGVmYXVsdCB1aS1jb3JuZXItYWxsIiBocmVmPSIjIiBzdHlsZT0ibGVmdDowJTsiPjwvYT4gPGEgY2xhc3M9InVpLXNsaWRlci1oYW5kbGUgdWktc3RhdGUtZGVmYXVsdCB1aS1jb3JuZXItYWxsIiBocmVmPSIjIiBzdHlsZT0ibGVmdDogMTAwJTsiPjwvYT4NCiAgICA8L2Rpdj4gDQogICAgPGlucHV0IHR5cGU9ImhpZGRlbiIgaWQ9InN1cmZoYWItbWluIiBuYW1lPSJzdXJmaGFiLW1pbiIgdmFsdWU9IjAiPg0KICAgIDxpbnB1dCB0eXBlPSJoaWRkZW4iIGlkPSJzdXJmaGFiLW1heCIgbmFtZT0ic3VyZmhhYi1tYXgiIHZhbHVlPSIzMDAiPg0KICAgICANCiAgICA8bGFiZWwgY2xhc3M9ImlucHV0IHB1bGwtbGVmdCI+DQo8aSBjbGFzcz0iaWNvbi1wcmVwZW5kIGZhIGZhLXRhZyI+PC9pPg0KPGlucHV0IGlkPSJyZWZlcmVuY2UiIG5hbWU9InJlZmVyZW5jZSIgdHlwZT0idGV4dCIgcGxhY2Vob2xkZXI9IlLDqWbDqXJlbmNlIGQndW5lIGFubm9uY2UgPyIgdmFsdWU9IiI+DQo8L2xhYmVsPg0KICAgIDxpbnB1dCB0eXBlPSJzdWJtaXQiIGNsYXNzPSJidG4tdSBwdWxsLXJpZ2h0IiB2YWx1ZT0iT2siPjwvaW5wdXQ+DQogICAgPGRpdiBjbGFzcz0iY2xlYXJmaXgiPjwvZGl2Pg0KICA8L2Rpdj4NCjwvZm9ybT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PiAgICANCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2xpPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwhLS0gRW5kIFNlYXJjaCBCbG9jayAtLT4NCiAgICAgICAgICAgICAgICAgICAgICAgIDwvdWw+DQogICAgICAgICAgICAgICAgICAgIDwvZGl2PjwhLS0vbmF2YmFyLWNvbGxhcHNlLS0+DQogICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgDQogICAgICAgICAgICA8L2Rpdj4gICAgDQogICAgICAgIDwvZGl2PiAgICAgICAgICAgIA0KICAgICAgICA8IS0tIEVuZCBOYXZiYXIgLS0+DQogICAgPC9kaXY+DQogIDwhLS09PT0gRW5kIEhlYWRlciA9PT0tLT4NCiAgDQogIDwhLS09PT0gVElUTEUgQkFSIChkcmVhZGNydW1iIGFyZWEpID09PS0tPiANCiAgPGRpdiBjbGFzcz0iYnJlYWRjcnVtYnMiPg0KICAgIDxkaXYgY2xhc3M9ImNvbnRhaW5lciI+DQogICAgICA8aDEgY2xhc3M9ImNvbC1tZC0yIGNvbC14cy02Ij5WZW50ZTwvaDE+DQogICAgICANCiAgICAgIDwhLS0NCiAgICAgIDxkaXYgY2xhc3M9ImFubm9uY2VzLWlubmVybmF2IGNvbC1tZC04IHByZXZuZXh0Ij4NCiAgICAgIAk8ZGl2IGNsYXNzPSJidG4tZ3JvdXAiIGFyaWEtbGFiZWw9IiIgcm9sZT0iZ3JvdXAiPg0KICAgICAgICAJPGEgaHJlZj0iIyIgY2xhc3M9ImJ0bi11IGJ0bi11LWRlZmF1bHQiPg0KICAgICAgICAgICAgCTxpIGNsYXNzPSJmYSBmYS1jaGV2cm9uLWxlZnQiPjwvaT4gUHLDqWPDqWRlbnQNCiAgICAgICAgCTwvYT4NCiAgICAgICAgICAgIDxhIGhyZWY9IiMiIGNsYXNzPSJidG4tdSBidG4tdS1kZWZhdWx0Ij4NCiAgICAgICAgICAgICAgICBTdWl2YW50IDxpIGNsYXNzPSJmYSBmYS1jaGV2cm9uLXJpZ2h0Ij48L2k+IA0KICAgICAgICAgICAgPC9hPg0KICAgICAgICA8L2Rpdj4NCiAgICAgIDwvZGl2Pg0KICAgICAgLS0+DQogICAgICAgICAgICANCiAgICAgIDxkaXYgY2xhc3M9ImFubm9uY2VzLWlubmVybmF2IGNvbC1tZC0yIGNvbC14cy02IHB1bGwtcmlnaHQiPg0KICAgICAgCTxhIGhyZWY9ImFubm9uY2VzLWxpc3RlLmFzcD90eXBlbGlzdGU9Jm9mZnNldD0wIiBjbGFzcz0iYnRuLXUgYnRuLXUtZGVmYXVsdCBwdWxsLXJpZ2h0Ij4NCiAgICAgICAgICAgIDxpIGNsYXNzPSJmYSBmYS1yZXBseSI+PC9pPiBSZXRvdXIgbGlzdGUNCiAgICAgICAgPC9hPg0KICAgICAgPC9kaXY+DQogICAgPC9kaXY+DQogICAgPCEtLS9jb250YWluZXItLT4gDQogIDwvZGl2Pg0KICA8IS0tL2VuZCBUSVRMRSBCQVIgLS0+DQogIA0KICAgDQogIA0KICA8IS0tPT09IERFVEFJTCBBTk5PTkNFID09PS0tPiANCiAgDQogIDwhLS09PT0gQ29udGFpbmVyIFBhcnQgPT09LS0+DQogIDxkaXYgY2xhc3M9ImNvbnRhaW5lciBhbm5vbmNlLWRldGFpbCI+DQogICAgPGRpdiBjbGFzcz0iY29udGVudCI+DQogICAgDQogICAgPCEtLT09PSBBam91dCBTw6lsZWN0aW9uIDogQ09ORklSTUFUSU9OID09PS0tPiANCgkNCiAgICAgIA0KICAgICAgPCEtLT09PSBQSE9UTyBQUklOQ0lQQUxFID09PS0tPiANCiAgICAgIDxkaXYgY2xhc3M9ImNvbC1tZC05IHNoYWRvdy13cmFwcGVyIGFubm9uY2UtcGhvdG8tbWFpbiI+DQogICAgICAgIDxkaXYgY2xhc3M9InRodW1ibmFpbHMgdGh1bWJuYWlsLXN0eWxlIGJveC1zaGFkb3cgc2hhZG93LWVmZmVjdC0yIj4NCiAgICAgICAgDQogICAgICAgICAgICA8YSBpZD0icGhvdG8tbWFpbi1saW5rIiBkYXRhLXRyaWdnZXItcmVsPSJnYWxsZXJ5IiBkYXRhLWdhbGxlcnktaW5kZXg9IjAiIGNsYXNzPSJmYW5jeWJveC10cmlnZ2VyIHpvb21lciIgaHJlZj0iL2dfcGhvdG9zLzEzOThfQ1cxMDktMTQ4Nl8xLmpwZyIgdGl0bGU9IiI+DQogICAgICAgICAgICA8c3BhbiBjbGFzcz0ib3ZlcmxheS16b29tIj4NCiAgICAgICAgICAgIAk8ZGl2IGNsYXNzPSJpbWctbWlkZGxlIj4NCiAgICAgICAgICAgICAgICAJDQogICAgICAgICAgICAgICAgCTxpbWcgaWQ9InBob3RvLW1haW4iIGNsYXNzPSJpbWctcmVzcG9uc2l2ZSIgYWx0PSJBUFBBUlRFTUVOVCAtIFBBUklTIDExw6htZSIgc3JjPSJodHRwOi8vd3d3LmxvZ2VtZW50NzUuY29tL3Bob3Rvcy8xMzk4X0NXMTA5LTE0ODZfMS5qcGciIHdpZHRoPSIxMDAlIj4NCiAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgIAk8c3BhbiBjbGFzcz0iem9vbS1pY29uIj48L3NwYW4+DQogICAgICAgICAgICA8L3NwYW4+DQogICAgICAgICAgICA8L2E+DQogICAgICAgIA0KICAgICAgICA8L2Rpdj4NCiAgICAgIDwvZGl2Pg0KICAgICAgDQogICAgICA8IS0tPT09IFBJVENIID09PS0tPiANCiAgICAgIDxkaXYgY2xhc3M9ImNvbC1tZC0zIGFubm9uY2UtcGl0Y2giPg0KICAgICAgCQ0KICAgICAgICA8aDI+UEFSSVMgMTHDqG1lPC9oMj4NCiAgICAgICAgPGgzPlJVRSBERVMgQk9VTEVUUy9DSEFST05ORTwvaDM+DQogICAgICAgIDxoND4yIFBpw6hjZXMgZGUgMzMgbcKyPC9oND4NCiAgICAgICAgDQogICAgICAgIDxwIGNsYXNzPSJwcml4dmVudGUiPjQzNsKgODAwIOKCrCA8ZW0+aG9ub3JhaXJlcyBpbmNsdXM8L2VtPjwvcD4NCiAgICAgICAgPHAgY2xhc3M9InJlZmVyZW5jZSI+IFLDqWYuIDogQ1cxMDktMTQ4NjwvcD4NCiAgICAgICAgDQogICAgICAgIDxociBjbGFzcz0ibWFyZ2luLWJvdHRvbS0zMCIvPg0KICAgICAgICANCiAgICAgICAgPGEgY2xhc3M9ImJ0bi11IG1hcmdpbi1ib3R0b20tMjAiIGhyZWY9IiMiIG9uQ2xpY2s9InByaW50KCk7Ij48aSBjbGFzcz0iZ2x5cGhpY29uIGdseXBoaWNvbi1wcmludCI+PC9pPiBJbXByaW1lcjwvYT4NCiAgICAgICAgPGEgY2xhc3M9ImJ0bi11IiBocmVmPSJhbm5vbmNlcy1kZXRhaWwuYXNwP1JlZm1hbmRhdD1DVzEwOS0xNDg2JklEYWdlbmNlPTEzOTgmdHlwZWxpc3RlPSZvZmZzZXQ9MCZhZGRzZWxlY3Rpb249dHJ1ZSI+PGkgY2xhc3M9ImdseXBoaWNvbiBnbHlwaGljb24tcGx1cyI+PC9pPiBBam91dGVyIMOgIG1hIHPDqWxlY3Rpb248L2E+DQogICAgICAgIA0KICAgICAgPC9kaXY+DQogICAgICANCiAgICAgIDwhLS09PT0gUEhPVE9TIE1JTklBVFVSRVMgKHRodW1ibmFpbHMpID09PS0tPiANCiAgICAgIDxkaXYgY2xhc3M9ImNvbC1tZC0xMiBhbm5vbmNlLXRodW1ibmFpbHMiPg0KICAgICAgDQogICAgICANCiAgICAgIA0KICAgICAgCTxkaXYgY2xhc3M9InRodW1ibmFpbHMgdGh1bWJuYWlsLXN0eWxlIj4NCiAgICAgICAgICA8YSBjbGFzcz0iZmFuY3lib3gtYnV0dG9uIHpvb21lciIgaHJlZj0iL2dfcGhvdG9zLzEzOThfQ1cxMDktMTQ4Nl8xLmpwZyIgdGl0bGU9IiIgZGF0YS1yZWw9ImdhbGxlcnkiIG9ubW91c2VvdmVyPSIkKCcjcGhvdG8tbWFpbicpLmF0dHIoJ3NyYycsJ2h0dHA6Ly93d3cubG9nZW1lbnQ3NS5jb20vcGhvdG9zLzEzOThfQ1cxMDktMTQ4Nl8xLmpwZycpOyQoJyNwaG90by1tYWluLWxpbmsnKS5kYXRhKCdnYWxsZXJ5LWluZGV4JywwKTsiPg0KICAgICAgICAgICAgPHNwYW4gY2xhc3M9Im92ZXJsYXktem9vbSI+DQogICAgICAgICAgICAgICAgPGltZyBjbGFzcz0iaW1nLXJlc3BvbnNpdmUiIGFsdD0iIiBzcmM9Imh0dHA6Ly93d3cubG9nZW1lbnQ3NS5jb20vcGhvdG9zLzEzOThfQ1cxMDktMTQ4Nl8xLmpwZyI+DQogICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9Inpvb20taWNvbiI+PC9zcGFuPg0KICAgICAgICAgICAgPC9zcGFuPg0KICAgICAgICAgIDwvYT4NCiAgICAgIAk8L2Rpdj4NCiAgICAgICAgDQogICAgICANCiAgICAgIA0KICAgICAgCTxkaXYgY2xhc3M9InRodW1ibmFpbHMgdGh1bWJuYWlsLXN0eWxlIj4NCiAgICAgICAgICA8YSBjbGFzcz0iZmFuY3lib3gtYnV0dG9uIHpvb21lciIgaHJlZj0iL2dfcGhvdG9zLzEzOThfQ1cxMDktMTQ4Nl8yLmpwZyIgdGl0bGU9IiIgZGF0YS1yZWw9ImdhbGxlcnkiIG9ubW91c2VvdmVyPSIkKCcjcGhvdG8tbWFpbicpLmF0dHIoJ3NyYycsJ2h0dHA6Ly93d3cubG9nZW1lbnQ3NS5jb20vcGhvdG9zLzEzOThfQ1cxMDktMTQ4Nl8yLmpwZycpOyQoJyNwaG90by1tYWluLWxpbmsnKS5kYXRhKCdnYWxsZXJ5LWluZGV4JywxKTsiPg0KICAgICAgICAgICAgPHNwYW4gY2xhc3M9Im92ZXJsYXktem9vbSI+DQogICAgICAgICAgICAgICAgPGltZyBjbGFzcz0iaW1nLXJlc3BvbnNpdmUiIGFsdD0iIiBzcmM9Imh0dHA6Ly93d3cubG9nZW1lbnQ3NS5jb20vcGhvdG9zLzEzOThfQ1cxMDktMTQ4Nl8yLmpwZyI+DQogICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9Inpvb20taWNvbiI+PC9zcGFuPg0KICAgICAgICAgICAgPC9zcGFuPg0KICAgICAgICAgIDwvYT4NCiAgICAgIAk8L2Rpdj4NCiAgICAgICAgDQogICAgICANCiAgICAgIA0KICAgICAgCTxkaXYgY2xhc3M9InRodW1ibmFpbHMgdGh1bWJuYWlsLXN0eWxlIj4NCiAgICAgICAgICA8YSBjbGFzcz0iZmFuY3lib3gtYnV0dG9uIHpvb21lciIgaHJlZj0iL2dfcGhvdG9zLzEzOThfQ1cxMDktMTQ4Nl8zLmpwZyIgdGl0bGU9IiIgZGF0YS1yZWw9ImdhbGxlcnkiIG9ubW91c2VvdmVyPSIkKCcjcGhvdG8tbWFpbicpLmF0dHIoJ3NyYycsJ2h0dHA6Ly93d3cubG9nZW1lbnQ3NS5jb20vcGhvdG9zLzEzOThfQ1cxMDktMTQ4Nl8zLmpwZycpOyQoJyNwaG90by1tYWluLWxpbmsnKS5kYXRhKCdnYWxsZXJ5LWluZGV4JywyKTsiPg0KICAgICAgICAgICAgPHNwYW4gY2xhc3M9Im92ZXJsYXktem9vbSI+DQogICAgICAgICAgICAgICAgPGltZyBjbGFzcz0iaW1nLXJlc3BvbnNpdmUiIGFsdD0iIiBzcmM9Imh0dHA6Ly93d3cubG9nZW1lbnQ3NS5jb20vcGhvdG9zLzEzOThfQ1cxMDktMTQ4Nl8zLmpwZyI+DQogICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9Inpvb20taWNvbiI+PC9zcGFuPg0KICAgICAgICAgICAgPC9zcGFuPg0KICAgICAgICAgIDwvYT4NCiAgICAgIAk8L2Rpdj4NCiAgICAgICAgDQogICAgICANCiAgICAgIA0KICAgICAgCTxkaXYgY2xhc3M9InRodW1ibmFpbHMgdGh1bWJuYWlsLXN0eWxlIj4NCiAgICAgICAgICA8YSBjbGFzcz0iZmFuY3lib3gtYnV0dG9uIHpvb21lciIgaHJlZj0iL2dfcGhvdG9zLzEzOThfQ1cxMDktMTQ4Nl80LmpwZyIgdGl0bGU9IiIgZGF0YS1yZWw9ImdhbGxlcnkiIG9ubW91c2VvdmVyPSIkKCcjcGhvdG8tbWFpbicpLmF0dHIoJ3NyYycsJ2h0dHA6Ly93d3cubG9nZW1lbnQ3NS5jb20vcGhvdG9zLzEzOThfQ1cxMDktMTQ4Nl80LmpwZycpOyQoJyNwaG90by1tYWluLWxpbmsnKS5kYXRhKCdnYWxsZXJ5LWluZGV4JywzKTsiPg0KICAgICAgICAgICAgPHNwYW4gY2xhc3M9Im92ZXJsYXktem9vbSI+DQogICAgICAgICAgICAgICAgPGltZyBjbGFzcz0iaW1nLXJlc3BvbnNpdmUiIGFsdD0iIiBzcmM9Imh0dHA6Ly93d3cubG9nZW1lbnQ3NS5jb20vcGhvdG9zLzEzOThfQ1cxMDktMTQ4Nl80LmpwZyI+DQogICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9Inpvb20taWNvbiI+PC9zcGFuPg0KICAgICAgICAgICAgPC9zcGFuPg0KICAgICAgICAgIDwvYT4NCiAgICAgIAk8L2Rpdj4NCiAgICAgICAgDQogICAgICANCiAgICAgIA0KICAgICAgCTxkaXYgY2xhc3M9InRodW1ibmFpbHMgdGh1bWJuYWlsLXN0eWxlIj4NCiAgICAgICAgICA8YSBjbGFzcz0iZmFuY3lib3gtYnV0dG9uIHpvb21lciIgaHJlZj0iL2dfcGhvdG9zLzEzOThfQ1cxMDktMTQ4Nl81LmpwZyIgdGl0bGU9IiIgZGF0YS1yZWw9ImdhbGxlcnkiIG9ubW91c2VvdmVyPSIkKCcjcGhvdG8tbWFpbicpLmF0dHIoJ3NyYycsJ2h0dHA6Ly93d3cubG9nZW1lbnQ3NS5jb20vcGhvdG9zLzEzOThfQ1cxMDktMTQ4Nl81LmpwZycpOyQoJyNwaG90by1tYWluLWxpbmsnKS5kYXRhKCdnYWxsZXJ5LWluZGV4Jyw0KTsiPg0KICAgICAgICAgICAgPHNwYW4gY2xhc3M9Im92ZXJsYXktem9vbSI+DQogICAgICAgICAgICAgICAgPGltZyBjbGFzcz0iaW1nLXJlc3BvbnNpdmUiIGFsdD0iIiBzcmM9Imh0dHA6Ly93d3cubG9nZW1lbnQ3NS5jb20vcGhvdG9zLzEzOThfQ1cxMDktMTQ4Nl81LmpwZyI+DQogICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9Inpvb20taWNvbiI+PC9zcGFuPg0KICAgICAgICAgICAgPC9zcGFuPg0KICAgICAgICAgIDwvYT4NCiAgICAgIAk8L2Rpdj4NCiAgICAgICAgDQogICAgICANCiAgICAgIA0KICAgICAgCTxkaXYgY2xhc3M9InRodW1ibmFpbHMgdGh1bWJuYWlsLXN0eWxlIj4NCiAgICAgICAgICA8YSBjbGFzcz0iZmFuY3lib3gtYnV0dG9uIHpvb21lciIgaHJlZj0iL2dfcGhvdG9zLzEzOThfQ1cxMDktMTQ4Nl82LmpwZyIgdGl0bGU9IiIgZGF0YS1yZWw9ImdhbGxlcnkiIG9ubW91c2VvdmVyPSIkKCcjcGhvdG8tbWFpbicpLmF0dHIoJ3NyYycsJ2h0dHA6Ly93d3cubG9nZW1lbnQ3NS5jb20vcGhvdG9zLzEzOThfQ1cxMDktMTQ4Nl82LmpwZycpOyQoJyNwaG90by1tYWluLWxpbmsnKS5kYXRhKCdnYWxsZXJ5LWluZGV4Jyw1KTsiPg0KICAgICAgICAgICAgPHNwYW4gY2xhc3M9Im92ZXJsYXktem9vbSI+DQogICAgICAgICAgICAgICAgPGltZyBjbGFzcz0iaW1nLXJlc3BvbnNpdmUiIGFsdD0iIiBzcmM9Imh0dHA6Ly93d3cubG9nZW1lbnQ3NS5jb20vcGhvdG9zLzEzOThfQ1cxMDktMTQ4Nl82LmpwZyI+DQogICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9Inpvb20taWNvbiI+PC9zcGFuPg0KICAgICAgICAgICAgPC9zcGFuPg0KICAgICAgICAgIDwvYT4NCiAgICAgIAk8L2Rpdj4NCiAgICAgICAgDQogICAgICANCiAgICAgIA0KICAgICAgCTxkaXYgY2xhc3M9InRodW1ibmFpbHMgdGh1bWJuYWlsLXN0eWxlIj4NCiAgICAgICAgICA8YSBjbGFzcz0iZmFuY3lib3gtYnV0dG9uIHpvb21lciIgaHJlZj0iL2dfcGhvdG9zLzEzOThfQ1cxMDktMTQ4Nl83LmpwZyIgdGl0bGU9IiIgZGF0YS1yZWw9ImdhbGxlcnkiIG9ubW91c2VvdmVyPSIkKCcjcGhvdG8tbWFpbicpLmF0dHIoJ3NyYycsJ2h0dHA6Ly93d3cubG9nZW1lbnQ3NS5jb20vcGhvdG9zLzEzOThfQ1cxMDktMTQ4Nl83LmpwZycpOyQoJyNwaG90by1tYWluLWxpbmsnKS5kYXRhKCdnYWxsZXJ5LWluZGV4Jyw2KTsiPg0KICAgICAgICAgICAgPHNwYW4gY2xhc3M9Im92ZXJsYXktem9vbSI+DQogICAgICAgICAgICAgICAgPGltZyBjbGFzcz0iaW1nLXJlc3BvbnNpdmUiIGFsdD0iIiBzcmM9Imh0dHA6Ly93d3cubG9nZW1lbnQ3NS5jb20vcGhvdG9zLzEzOThfQ1cxMDktMTQ4Nl83LmpwZyI+DQogICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9Inpvb20taWNvbiI+PC9zcGFuPg0KICAgICAgICAgICAgPC9zcGFuPg0KICAgICAgICAgIDwvYT4NCiAgICAgIAk8L2Rpdj4NCiAgICAgICAgDQogICAgICANCiAgICAgIA0KICAgICAgCTxkaXYgY2xhc3M9InRodW1ibmFpbHMgdGh1bWJuYWlsLXN0eWxlIj4NCiAgICAgICAgICA8YSBjbGFzcz0iZmFuY3lib3gtYnV0dG9uIHpvb21lciIgaHJlZj0iL2dfcGhvdG9zLzEzOThfQ1cxMDktMTQ4Nl84LmpwZyIgdGl0bGU9IiIgZGF0YS1yZWw9ImdhbGxlcnkiIG9ubW91c2VvdmVyPSIkKCcjcGhvdG8tbWFpbicpLmF0dHIoJ3NyYycsJ2h0dHA6Ly93d3cubG9nZW1lbnQ3NS5jb20vcGhvdG9zLzEzOThfQ1cxMDktMTQ4Nl84LmpwZycpOyQoJyNwaG90by1tYWluLWxpbmsnKS5kYXRhKCdnYWxsZXJ5LWluZGV4Jyw3KTsiPg0KICAgICAgICAgICAgPHNwYW4gY2xhc3M9Im92ZXJsYXktem9vbSI+DQogICAgICAgICAgICAgICAgPGltZyBjbGFzcz0iaW1nLXJlc3BvbnNpdmUiIGFsdD0iIiBzcmM9Imh0dHA6Ly93d3cubG9nZW1lbnQ3NS5jb20vcGhvdG9zLzEzOThfQ1cxMDktMTQ4Nl84LmpwZyI+DQogICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9Inpvb20taWNvbiI+PC9zcGFuPg0KICAgICAgICAgICAgPC9zcGFuPg0KICAgICAgICAgIDwvYT4NCiAgICAgIAk8L2Rpdj4NCiAgICAgICAgDQogICAgICANCiAgICAgIA0KICAgICAgCTxkaXYgY2xhc3M9InRodW1ibmFpbHMgdGh1bWJuYWlsLXN0eWxlIj4NCiAgICAgICAgICA8YSBjbGFzcz0iZmFuY3lib3gtYnV0dG9uIHpvb21lciIgaHJlZj0iL2dfcGhvdG9zLzEzOThfQ1cxMDktMTQ4Nl85LmpwZyIgdGl0bGU9IiIgZGF0YS1yZWw9ImdhbGxlcnkiIG9ubW91c2VvdmVyPSIkKCcjcGhvdG8tbWFpbicpLmF0dHIoJ3NyYycsJ2h0dHA6Ly93d3cubG9nZW1lbnQ3NS5jb20vcGhvdG9zLzEzOThfQ1cxMDktMTQ4Nl85LmpwZycpOyQoJyNwaG90by1tYWluLWxpbmsnKS5kYXRhKCdnYWxsZXJ5LWluZGV4Jyw4KTsiPg0KICAgICAgICAgICAgPHNwYW4gY2xhc3M9Im92ZXJsYXktem9vbSI+DQogICAgICAgICAgICAgICAgPGltZyBjbGFzcz0iaW1nLXJlc3BvbnNpdmUiIGFsdD0iIiBzcmM9Imh0dHA6Ly93d3cubG9nZW1lbnQ3NS5jb20vcGhvdG9zLzEzOThfQ1cxMDktMTQ4Nl85LmpwZyI+DQogICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9Inpvb20taWNvbiI+PC9zcGFuPg0KICAgICAgICAgICAgPC9zcGFuPg0KICAgICAgICAgIDwvYT4NCiAgICAgIAk8L2Rpdj4NCiAgICAgICAgDQogICAgICANCiAgICAgIA0KICAgICAgCTxkaXYgY2xhc3M9InRodW1ibmFpbHMgdGh1bWJuYWlsLXN0eWxlIj4NCiAgICAgICAgICA8YSBjbGFzcz0iZmFuY3lib3gtYnV0dG9uIHpvb21lciIgaHJlZj0iL2dfcGhvdG9zLzEzOThfQ1cxMDktMTQ4Nl8xMC5qcGciIHRpdGxlPSIiIGRhdGEtcmVsPSJnYWxsZXJ5IiBvbm1vdXNlb3Zlcj0iJCgnI3Bob3RvLW1haW4nKS5hdHRyKCdzcmMnLCdodHRwOi8vd3d3LmxvZ2VtZW50NzUuY29tL3Bob3Rvcy8xMzk4X0NXMTA5LTE0ODZfMTAuanBnJyk7JCgnI3Bob3RvLW1haW4tbGluaycpLmRhdGEoJ2dhbGxlcnktaW5kZXgnLDkpOyI+DQogICAgICAgICAgICA8c3BhbiBjbGFzcz0ib3ZlcmxheS16b29tIj4NCiAgICAgICAgICAgICAgICA8aW1nIGNsYXNzPSJpbWctcmVzcG9uc2l2ZSIgYWx0PSIiIHNyYz0iaHR0cDovL3d3dy5sb2dlbWVudDc1LmNvbS9waG90b3MvMTM5OF9DVzEwOS0xNDg2XzEwLmpwZyI+DQogICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9Inpvb20taWNvbiI+PC9zcGFuPg0KICAgICAgICAgICAgPC9zcGFuPg0KICAgICAgICAgIDwvYT4NCiAgICAgIAk8L2Rpdj4NCiAgICAgICAgDQogICAgICANCiAgICAgIA0KICAgICAgCTxkaXYgY2xhc3M9InRodW1ibmFpbHMgdGh1bWJuYWlsLXN0eWxlIj4NCiAgICAgICAgICA8YSBjbGFzcz0iZmFuY3lib3gtYnV0dG9uIHpvb21lciIgaHJlZj0iL2dfcGhvdG9zLzEzOThfQ1cxMDktMTQ4Nl8xMS5qcGciIHRpdGxlPSIiIGRhdGEtcmVsPSJnYWxsZXJ5IiBvbm1vdXNlb3Zlcj0iJCgnI3Bob3RvLW1haW4nKS5hdHRyKCdzcmMnLCdodHRwOi8vd3d3LmxvZ2VtZW50NzUuY29tL3Bob3Rvcy8xMzk4X0NXMTA5LTE0ODZfMTEuanBnJyk7JCgnI3Bob3RvLW1haW4tbGluaycpLmRhdGEoJ2dhbGxlcnktaW5kZXgnLDEwKTsiPg0KICAgICAgICAgICAgPHNwYW4gY2xhc3M9Im92ZXJsYXktem9vbSI+DQogICAgICAgICAgICAgICAgPGltZyBjbGFzcz0iaW1nLXJlc3BvbnNpdmUiIGFsdD0iIiBzcmM9Imh0dHA6Ly93d3cubG9nZW1lbnQ3NS5jb20vcGhvdG9zLzEzOThfQ1cxMDktMTQ4Nl8xMS5qcGciPg0KICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJ6b29tLWljb24iPjwvc3Bhbj4NCiAgICAgICAgICAgIDwvc3Bhbj4NCiAgICAgICAgICA8L2E+DQogICAgICAJPC9kaXY+DQogICAgICAgIA0KICAgICAgDQogICAgICANCiAgICAgIDwvZGl2Pg0KICAgICAgDQogICAgPC9kaXY+DQogICAgDQogICAgPCEtLT09PSBQSVRDSCAvLyBDb2xsYXBzZWQgdmVyc2lvbiAobW9iaWxlKSA9PT0tLT4gDQogICAgICA8ZGl2IGNsYXNzPSJjb2wtbWQtMTIgYW5ub25jZS1waXRjaC1jb2xsYXBzZWQiPg0KICAgICAgCQ0KICAgICAgICA8aDI+UEFSSVMgMTHDqG1lIHwgPC9oMj4NCiAgICAgICAgPGgzPlJVRSBERVMgQk9VTEVUUy9DSEFST05ORTwvaDM+DQogICAgICAgIDxici8+DQogICAgICAgIDxoND4yIFBpw6hjZXMgZGUgMzMgbcKyIHwgPC9oND4NCiAgICAgICAgPHAgY2xhc3M9InByaXh2ZW50ZSI+NDM2wqA4MDAg4oKsIDxlbT5ob25vcmFpcmVzIGluY2x1czwvZW0+IHwgPC9wPg0KICAgICAgICA8cCBjbGFzcz0icmVmZXJlbmNlIj4gUsOpZi4gOiBDVzEwOS0xNDg2PC9wPg0KICAgICAgICANCiAgICAgICAgPGhyLz4NCiAgICAgICAgDQogICAgICAgIDxhIGNsYXNzPSJidG4tdSBtYXJnaW4tYm90dG9tLTIwIiBocmVmPSIjIiBvbkNsaWNrPSJwcmludCgpOyI+PGkgY2xhc3M9ImdseXBoaWNvbiBnbHlwaGljb24tcHJpbnQiPjwvaT4gSW1wcmltZXI8L2E+DQogICAgICAgIDxhIGNsYXNzPSJidG4tdSIgaHJlZj0iYW5ub25jZXMtZGV0YWlsLmFzcD9SZWZtYW5kYXQ9Q1cxMDktMTQ4NiZJRGFnZW5jZT0xMzk4JnR5cGVsaXN0ZT0mb2Zmc2V0PTAmYWRkc2VsZWN0aW9uPXRydWUiPjxpIGNsYXNzPSJnbHlwaGljb24gZ2x5cGhpY29uLXBsdXMiPjwvaT4gQWpvdXRlciDDoCBtYSBzw6lsZWN0aW9uPC9hPg0KICAgICAgICANCiAgICAgIDwvZGl2Pg0KICAgIA0KICAgIDwhLS09PT0gREVTQ1JJUFRJT04gPT09LS0+IA0KICAgIDxkaXYgY2xhc3M9ImNvbC1tZC0xMiBhbm5vbmNlLWRlc2NyaXB0aW9uIj4NCiAgICAgIDxkaXYgY2xhc3M9InRhZy1ib3ggdGFnLWJveC12MiBtYXJnaW4tYm90dG9tLTQwIj4NCiAgICAgICAgPGg1PkRlc2NyaXB0aW9uIDogPC9oNT4NCiAgICAgICAgPHA+QXUgcGllZCBkdSBtw6l0cm8gcnVlIGRlcyBCb3VsZXRzLCBkYW5zIHVuIG1hZ25pZmlxdWUgaW1tZXVibGUgYW5jaWVuICBlbiBwaWVycmUgZGUgdGFpbGxlLCBhdSA4w6htZSBldCBkZXJuaWVyIMOpdGFnZSBhdmVjIGFzY2Vuc2V1ciwgdHLDqHMgYmVsIGFwcGFydGVtZW50IGF1eCBwcmVzdGF0aW9ucyBpbXBlY2NhYmxlcyBjb21wb3PDqSBkJ3VuIHPDqWpvdXIgYXZlYyB1bmUgY3Vpc2luZSBvdXZlcnRlIGFtw6luYWfDqWUgZXQgw6lxdWlww6llLCB1bmUgY2hhbWJyZSBlbiBzZWNvbmQgam91ciwgdW5lIHNhbGxlIGQnZWF1LCB1biB3LmMuLCB1biBkcmVzc2luZy4gSWwgcHJvZml0ZSBkJ3VuIGVuc29sZWlsbGVtZW50IG1heGltdW0gZ3LDomNlIMOgIHNvbiBleHBvc2l0aW9uIHN1ZC1vdWVzdCBldCBkJ3VuZSB2dWUgdG90YWxlbWVudCBkw6lnYWfDqWUgc3VyIGxlcyB0b2l0cyBkZSBQYXJpcy4gIExvdCBlbiBjb3Byb3ByacOpdMOpICg2NiBsb3RzKS4gQnVkZ2V0IHByw6l2aXNpb25uZWwgY2hhcmdlcyB2ZW5kZXVyIDogNzAwIOKCrC9hbiBIb25vcmFpcmVzIDQgJSBpbmNsdXMgY2hhcmdlIGFjcXXDqXJldXIuIDwvcD4NCiAgICAgIDwvZGl2Pg0KICAgIDwvZGl2Pg0KICAgIA0KICAgIDwhLS09PT0gRk9STVVMQUlSRSA9PT0tLT4gDQogICAgPGRpdiBjbGFzcz0iY29sLW1kLTkgYW5ub25jZS1mb3JtIj4NCiAgICAgIDxkaXYgY2xhc3M9InRhZy1ib3ggdGFnLWJveC12MyI+DQogICAgICAJPGg1PkRlbWFuZGUgZGUgcmVuc2VpZ25lbWVudHMgOiA8L2g1Pg0KICAgICAgICANCiAgICAgICAgPGZvcm0gbmFtZT0iZm9ybS1hbm5vbmNlIiBjbGFzcz0iZm9ybS1ob3Jpem9udGFsIiByb2xlPSJmb3JtIiBhY3Rpb249ImNnaS1iaW4vZm9ybW1haWxfY2FwdGNoYS5hc3AiIG1ldGhvZD0icG9zdCI+DQogICAgICAgIAk8aW5wdXQgdHlwZT0iaGlkZGVuIiBuYW1lPSJUX2NvcnBzMDEiIHZhbHVlPSJNZXNzYWdlIGRlcHVpcyBsJ2Fubm9uY2UgUmVmLiA6IENXMTA5LTE0ODYgIj4NCiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImZvcm0tZ3JvdXAiPg0KICAgICAgICAgICAgICAgIDxsYWJlbCBjbGFzcz0iY29sLXNtLTIgY29udHJvbC1sYWJlbCIgZm9yPSJOYW1lX2NvcnBzMDMiPk5vbSAqIDo8L2xhYmVsPg0KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbC1zbS01Ij4NCiAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJoaWRkZW4iIG5hbWU9IlRfY29ycHMwMiIgdmFsdWU9Ik5vbSA6ICI+DQogICAgICAgICAgICAgICAgICA8aW5wdXQgaWQ9Ik5vbV9jb3JwczAzIiBuYW1lPSJOb21fY29ycHMwMyIgY2xhc3M9ImZvcm0tY29udHJvbCIgdHlwZT0idGV4dCIgcGxhY2Vob2xkZXI9IlZvdHJlIG5vbSIgcmVxdWlyZWQ+DQogICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgPGxhYmVsIGNsYXNzPSJjb2wtc20tMiBjb250cm9sLWxhYmVsIiBmb3I9IlRlbF9jb3JwczA1Ij5Uw6lsLiAqIDo8L2xhYmVsPg0KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbC1zbS0zIj4NCiAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJoaWRkZW4iIG5hbWU9IlRfY29ycHMwNCIgdmFsdWU9IlRlbCA6ICI+DQogICAgICAgICAgICAgICAgICA8aW5wdXQgaWQ9IlRlbF9jb3JwczA1IiBuYW1lPSJUZWxfY29ycHMwNSIgY2xhc3M9ImZvcm0tY29udHJvbCIgdHlwZT0idGVsIiBwbGFjZWhvbGRlcj0iVm90cmUgbnVtw6lybyIgcmVxdWlyZWQ+DQogICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImZvcm0tZ3JvdXAiPg0KICAgICAgICAgICAgICAgIDxsYWJlbCBjbGFzcz0iY29sLXNtLTIgY29udHJvbC1sYWJlbCIgZm9yPSJFbWFpbF9jb3JwczA3Ij5FbWFpbCAqIDo8L2xhYmVsPg0KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbC1zbS0xMCI+DQogICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0iaGlkZGVuIiBuYW1lPSJUX2NvcnBzMDYiIHZhbHVlPSJFbWFpbCA6ICI+DQogICAgICAgICAgICAgICAgICA8aW5wdXQgaWQ9IkVtYWlsX2NvcnBzMDciIG5hbWU9IkVtYWlsX2NvcnBzMDciIGNsYXNzPSJmb3JtLWNvbnRyb2wiIHR5cGU9ImVtYWlsIiBwbGFjZWhvbGRlcj0iVm90cmUgYWRyZXNzZSBlbWFpbCIgcmVxdWlyZWQ+DQogICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImZvcm0tZ3JvdXAiPg0KICAgICAgICAgICAgICAgIDxsYWJlbCBjbGFzcz0iY29sLXNtLTIgY29udHJvbC1sYWJlbCIgZm9yPSJtZXNzYWdlX2NvcnBzMDkiPk1lc3NhZ2UgOjwvbGFiZWw+DQogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sLXNtLTEwIj4NCiAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJoaWRkZW4iIG5hbWU9IlRfY29ycHMwOCIgdmFsdWU9Ik1lc3NhZ2UgOiAiPg0KICAgICAgICAgICAgICAgICAgPHRleHRhcmVhIGlkPSJtZXNzYWdlX2NvcnBzMDkiIG5hbWU9Im1lc3NhZ2VfY29ycHMwOSIgY2xhc3M9ImZvcm0tY29udHJvbCIgcm93cz0iMiIgcGxhY2Vob2xkZXI9IlZvdHJlIG1lc3NhZ2UiPjwvdGV4dGFyZWE+DQogICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImZvcm0tZ3JvdXAiPg0KICAgICAgICAgICAgDQogICAgICAgICAgICAJPCEtLT09PSBDQVBUQ0hBIDogPT09LS0+IA0KICAgICAgICAgICAgCTxsYWJlbCBjbGFzcz0iY29sLXNtLTIgY29udHJvbC1sYWJlbCIgZm9yPSJ0eHRDYXB0Y2hhIj48ZW0+Q29kZSBkZSBzw6ljdXJpdMOpIDo8L2VtPjwvbGFiZWw+DQogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sLXNtLTMiPg0KICAgICAgICAgICAgICAgICAgPGltZyBzcmM9ImluY19jYXB0Y2hhX2ltZy5hc3AiIGFsaWduPSJhYnNtaWRkbGUiIGlkPSJpbWdDYXB0Y2hhIiAvPg0KICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iamF2YXNjcmlwdDp2b2lkKDApOyIgb25jbGljaz0iUmVmcmVzaEltYWdlKCdpbWdDYXB0Y2hhJyk7IiBjbGFzcz0iYnRuLXUgYnRuLXUtYXF1YSIgVGl0bGU9IkfDqW7DqXJlciB1biBhdXRyZSBjb2RlIj48aSBjbGFzcz0iZmEgZmEtcmVmcmVzaCI+PC9pPjwvYT4NCiAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtc20tNSI+DQogICAgICAgICAgICAgICAgICA8aW5wdXQgaWQ9InR4dENhcHRjaGEiIG5hbWU9InR4dENhcHRjaGEiIGNsYXNzPSJmb3JtLWNvbnRyb2wiIHR5cGU9InRleHQiIHBsYWNlaG9sZGVyPSJSZWNvcGlleiBsZXMgY2FyYWN0w6hyZXMgcHLDqWPDqWRlbnRzIiByZXF1aXJlZD4NCiAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICA8c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCIgbGFuZ3VhZ2U9ImphdmFzY3JpcHQiPg0KICAgICAgICBmdW5jdGlvbiBSZWZyZXNoSW1hZ2UodmFsSW1hZ2VJZCkgew0KICAgICAgICAgICAgdmFyIG9iakltYWdlID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQodmFsSW1hZ2VJZCkNCiAgICAgICAgICAgIGlmIChvYmpJbWFnZSA9PSB1bmRlZmluZWQpIHsNCiAgICAgICAgICAgICAgICByZXR1cm47DQogICAgICAgICAgICB9DQogICAgICAgICAgICB2YXIgbm93ID0gbmV3IERhdGUoKTsNCiAgICAgICAgICAgIG9iakltYWdlLnNyYyA9IG9iakltYWdlLnNyYy5zcGxpdCgnPycpWzBdICsgJz94PScgKyBub3cudG9VVENTdHJpbmcoKTsNCiAgICAgICAgfQ0KPC9zY3JpcHQ+DQogICAgICAgICAgICAgICAgPCEtLT09PSBFbmQgQ0FQVENIQSA9PT0tLT4gDQogICAgICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sLXNtLTIgcHVsbC1yaWdodCI+DQogICAgICAgICAgICAgICAgICA8YnV0dG9uIGNsYXNzPSJidG4tdSIgdHlwZT0ic3VibWl0Ij5FbnZveWVyPC9idXR0b24+DQogICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgIA0KICAgICAgICAgICAgPGlucHV0IHR5cGU9ImhpZGRlbiIgbmFtZT0iRG9tYWluZSIgdmFsdWU9Imh0dHA6Ly93d3cubGUtY2hlbmUtdmVydC5jb20iPg0KICAgICAgICAgICAgPGlucHV0IHR5cGU9ImhpZGRlbiIgbmFtZT0iUHJvdmVuYW5jZSIgdmFsdWU9IkNvbnRhY3QgU2l0ZSBJbnRlcm5ldCI+DQogICAgICAgICAgICA8aW5wdXQgdHlwZT0iaGlkZGVuIiBuYW1lPSJFbWFpbF9wcm92ZW5hbmNlIiB2YWx1ZT0ibWFudWVsQGxlLWNoZW5lLXZlcnQuY29tIj4NCiAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJoaWRkZW4iIG5hbWU9Ik9iamV0IiB2YWx1ZT0iQ29udGFjdCBkZXB1aXMgdW5lIGFubm9uY2UgZHUgc2l0ZSI+DQogICAgICAgICAgICA8aW5wdXQgbmFtZT0iRW52b3llX2EiIHR5cGU9ImhpZGRlbiIgaWQ9IkVudm95ZV9hIiB2YWx1ZT0ibWFudWVsQGxlLWNoZW5lLXZlcnQuY29tIj4NCiAgICAgICAgICAgIA0KICAgICAgICA8L2Zvcm0+DQogICAgICAgIA0KICAgICAgPC9kaXY+DQogICAgPC9kaXY+DQogICAgDQogICAgPCEtLT09PSBBR0VOQ0UgJiBEUEUgPT09LS0+IA0KICAgIDxkaXYgY2xhc3M9ImNvbC1tZC0zIGFubm9uY2UtYm90dG9tIj4NCiAgICAgIDxpbWcgaWQ9ImxvZ28iIHNyYz0iaW1hZ2VzL2xjdi1waWN0bzAxLnBuZyIgYWx0PSJMb2dvIj4NCiAgICAgIDxzcGFuIGNsYXNzPSJlbnNlaWduZSI+TGUgQ2jDqm5lIFZlcnQgSW1tb2JpbGllcjwvc3Bhbj4gDQogICAgICA8c3BhbiBjbGFzcz0iYWdlbmNlIj48ZW0+QWdlbmNlIDwvZW0+U0FJTlQtQU1CUk9JU0U8L3NwYW4+DQogICAgICA8c3BhbiBjbGFzcz0idGVsIj48ZW0+VMOpbC4gOiA8L2VtPjAxIDQzIDM4IDYyIDAwPC9zcGFuPg0KICAgICAgDQogICAgICA8ZGl2IGNsYXNzPSJjbGVhcmZpeCBtYXJnaW4tYm90dG9tLTEwIj48L2Rpdj4NCiAgICAgIDxkaXYgY2xhc3M9ImRwZSI+DQogICAgICAJDQoJPGRpdiBhbGlnbj0iY2VudGVyIiBzdHlsZT0id2lkdGg6IDE4MHB4OyBoZWlnaHQ6IDgwcHg7IHBhZGRpbmctdG9wOiAzMHB4OyBmb250LXN0eWxlOml0YWxpYzsgY29sb3I6Izk5OSI+RFBFIGVuIGNvdXJzPC9kaXY+DQoNCiAgICAgIDwvZGl2Pg0KICAgIDwvZGl2Pg0KICAgIA0KICAgIDxkaXYgY2xhc3M9ImNsZWFyZml4IG1hcmdpbi1ib3R0b20tMzAiPjwvZGl2Pg0KICAgIA0KICA8L2Rpdj4NCiAgPCEtLT09PSBFbmQgQ29udGFpbmVyIFBhcnQgPT09LS0+IA0KICA8IS0tPT09IEVuZCBERVRBSUwgQU5OT05DRSA9PT0tLT4gDQogIA0KICA8IS0tPT09IEZvb3RlciA9PT0tLT4NCiAgICAgICAgICA8ZGl2IGNsYXNzPSJmb290ZXItdjEiPg0KDQogICAgICAgIDxkaXYgY2xhc3M9ImNvcHlyaWdodCI+DQogICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb250YWluZXIiPg0KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InJvdyI+DQogICAgICAgICAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtbWQtMTIiPiAgICAgICAgICAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgICAgICAgICAgPHA+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgJmNvcHk7IExlIENow6puZSBWZXJ0IEltbW9iaWxpZXIgLSBUb3VzIGRyb2l0cyByw6lzZXJ2w6lzDQogICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJib3gtbWVudGlvbnMuYXNwIiBkYXRhLXRvZ2dsZT0ibW9kYWwiIGRhdGEtdGFyZ2V0PSIjQm94LU1lbnRpb25zIj5NZW50aW9ucyBsw6lnYWxlczwvYT4gfCA8YSBocmVmPSJodHRwOi8vYXZhbmRpcy5uZXQiIHRhcmdldD0iX2JsYW5rIj5EZXNpZ24gZXQgcsOpYWxpc2F0aW9uIEF2YW5kaXM8L2E+IHwgPGEgaHJlZj0iY29va2llcy5hc3AiIGRhdGEtdG9nZ2xlPSJtb2RhbCIgZGF0YS10YXJnZXQ9IiNjb29raWVzIj5MZXMgY29va2llczwvYT4gfCA8YSBocmVmPSJkb25uZWVzLXBlcnNvbm5lbGxlcy5hc3AiIGRhdGEtdG9nZ2xlPSJtb2RhbCIgZGF0YS10YXJnZXQ9IiNkb25uZWVzLXBlcnNvbm5lbGxlcyI+RG9ubsOpZXMgcGVyc29ubmVsbGVzPC9hPg0KICAgICAgICAgICAgICAgICAgICAgICAgPC9wPg0KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgICAgIDwhLS0NCiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sLW1kLTQiPg0KICAgICAgICAgICAgICAgICAgICAgICAgPHVsIGNsYXNzPSJmb290ZXItc29jaWFscyBsaXN0LWlubGluZSI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBjbGFzcz0idG9vbHRpcHMiIGRhdGEtb3JpZ2luYWwtdGl0bGU9IkZhY2Vib29rIiB0aXRsZT0iIiBkYXRhLXBsYWNlbWVudD0idG9wIiBkYXRhLXRvZ2dsZT0idG9vbHRpcCIgaHJlZj0iaHR0cHM6Ly93d3cuZmFjZWJvb2suY29tL0xlQ2hlbmVWZXJ0SW1tb2JpbGllci8iPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAJPGkgY2xhc3M9ImZhIGZhLWZhY2Vib29rLXNxdWFyZSI+PC9pPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2E+DQogICAgICAgICAgICAgICAgICAgIAkJPC9saT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGk+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGNsYXNzPSJ0b29sdGlwcyIgZGF0YS1vcmlnaW5hbC10aXRsZT0iVHdpdHRlciIgdGl0bGU9IiIgZGF0YS1wbGFjZW1lbnQ9InRvcCIgZGF0YS10b2dnbGU9InRvb2x0aXAiIGhyZWY9Imh0dHBzOi8vdHdpdHRlci5jb20vTGVjaGVuZUZhaWRoZXJiIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCTxpIGNsYXNzPSJmYSBmYS10d2l0dGVyLXNxdWFyZSI+PC9pPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2E+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9saT4NCiAgICAgICAgICAgICAgICAgICAgICAgIDwvdWw+DQogICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICAtLT4NCiAgICAgICAgICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICA8L2Rpdj4gDQogICAgICAgIDwvZGl2PjwhLS0vY29weXJpZ2h0LS0+DQogICAgPC9kaXY+DQogICAgDQogICAgPCEtLSBNb2RhbCAtLT4NCiAgICA8ZGl2IGNsYXNzPSJtb2RhbCBmYWRlIiBpZD0iQm94LU1lbnRpb25zIiB0YWJpbmRleD0iLTEiIHJvbGU9ImRpYWxvZyIgYXJpYS1sYWJlbGxlZGJ5PSJCb3gtTWVudGlvbnMtTGFiZWwiIGFyaWEtaGlkZGVuPSJ0cnVlIj4NCiAgICAgICAgPGRpdiBjbGFzcz0ibW9kYWwtZGlhbG9nIj4NCiAgICAgICAgICAgIDxkaXYgY2xhc3M9Im1vZGFsLWNvbnRlbnQiPg0KICAgICAgICAgICAgPC9kaXY+DQogICAgICAgIDwvZGl2Pg0KICAgIDwvZGl2Pg0KICAgIDwhLS0gRW5kIE1vZGFsIC0tPg0KCSAgICA8IS0tIE1vZGFsIC0tPg0KICAgIDxkaXYgY2xhc3M9Im1vZGFsIGZhZGUiIGlkPSJjb29raWVzIiB0YWJpbmRleD0iLTEiIHJvbGU9ImRpYWxvZyIgYXJpYS1sYWJlbGxlZGJ5PSJjb29raWVzLUxhYmVsIiBhcmlhLWhpZGRlbj0idHJ1ZSI+DQogICAgICAgIDxkaXYgY2xhc3M9Im1vZGFsLWRpYWxvZyI+DQogICAgICAgICAgICA8ZGl2IGNsYXNzPSJtb2RhbC1jb250ZW50Ij4NCiAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICA8L2Rpdj4NCiAgICA8L2Rpdj4NCiAgICA8IS0tIEVuZCBNb2RhbCAtLT4NCgk8IS0tIE1vZGFsIC0tPg0KICAgIDxkaXYgY2xhc3M9Im1vZGFsIGZhZGUiIGlkPSJkb25uZWVzLXBlcnNvbm5lbGxlcyIgdGFiaW5kZXg9Ii0xIiByb2xlPSJkaWFsb2ciIGFyaWEtbGFiZWxsZWRieT0iZG9ubmVlcy1wZXJzb25uZWxsZXMtTGFiZWwiIGFyaWEtaGlkZGVuPSJ0cnVlIj4NCiAgICAgICAgPGRpdiBjbGFzcz0ibW9kYWwtZGlhbG9nIj4NCiAgICAgICAgICAgIDxkaXYgY2xhc3M9Im1vZGFsLWNvbnRlbnQiPg0KICAgICAgICAgICAgPC9kaXY+DQogICAgICAgIDwvZGl2Pg0KICAgIDwvZGl2Pg0KICAgIDwhLS0gRW5kIE1vZGFsIC0tPiAgICANCiAgPCEtLT09PSBFbmQgRm9vdGVyID09PS0tPg0KPC9kaXY+DQo8IS0tL3dyYXBwZXItLT4gDQoNCjwhLS0gSlMgR2xvYmFsIENvbXB1bHNvcnkgLS0+IA0KPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiIHNyYz0iYXNzZXRzL3BsdWdpbnMvanF1ZXJ5L2pxdWVyeS5taW4uanMiPjwvc2NyaXB0PiANCjxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0IiBzcmM9ImFzc2V0cy9wbHVnaW5zL2pxdWVyeS9qcXVlcnktbWlncmF0ZS5taW4uanMiPjwvc2NyaXB0PiANCjxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0IiBzcmM9ImFzc2V0cy9wbHVnaW5zL2Jvb3RzdHJhcC9qcy9ib290c3RyYXAubWluLmpzIj48L3NjcmlwdD4gDQo8IS0tIEpTIEltcGxlbWVudGluZyBQbHVnaW5zIC0tPiANCjxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0IiBzcmM9ImFzc2V0cy9wbHVnaW5zL2JhY2stdG8tdG9wLmpzIj48L3NjcmlwdD4NCjxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0IiBzcmM9ImFzc2V0cy9wbHVnaW5zL2ZhbmN5Ym94L3NvdXJjZS9qcXVlcnkuZmFuY3lib3gucGFjay5qcyI+PC9zY3JpcHQ+DQo8IS0tIFNsaWRlciBGb3JtIC0tPg0KPHNjcmlwdCBzcmM9ImFzc2V0cy9wbHVnaW5zL3NreS1mb3Jtcy92ZXJzaW9uLTIuMC4xL2pzL2pxdWVyeS11aS5taW4uanMiPjwvc2NyaXB0Pg0KPCEtLSBKcXVlcnkgVG91Y2ggUHVuY2ggKG1ha2VzIGl0IHdvcmsgb24gVG91Y2ggZGV2aWNlcykgLS0+DQo8c2NyaXB0IHNyYz0iYXNzZXRzL3BsdWdpbnMvanF1ZXJ5L2pxdWVyeS51aS50b3VjaC1wdW5jaC5taW4uanMiPjwvc2NyaXB0Pg0KPCEtLSBKUyBDdXN0b21pemF0aW9uIC0tPiANCjxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0IiBzcmM9ImFzc2V0cy9qcy9jdXN0b20uanMiPjwvc2NyaXB0Pg0KPCEtLSBKUyBQYWdlIExldmVsIC0tPiANCjxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0IiBzcmM9ImFzc2V0cy9qcy9hcHAuanMiPjwvc2NyaXB0Pg0KPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiIHNyYz0iYXNzZXRzL2pzL3BsdWdpbnMvZm9ybS1zbGlkZXJzLWltbW8uanMiPjwvc2NyaXB0Pg0KPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiIHNyYz0iYXNzZXRzL2pzL3BsdWdpbnMvZmFuY3ktYm94LmpzIj48L3NjcmlwdD4NCjxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij4NCiAgICBqUXVlcnkoZG9jdW1lbnQpLnJlYWR5KGZ1bmN0aW9uKCkgew0KICAgICAgICBBcHAuaW5pdCgpOw0KICAgICAgICBGb3JtU2xpZGVycy5pbml0Rm9ybVNsaWRlcnMoKTsNCgkJRmFuY3lCb3guaW5pdEZhbmN5Ym94KCk7DQogICAgfSk7DQoJLy8gTGllbiBGYW5jeUJveCBzdXIgbGEgcGhvdG8gcHJpbmNpcGFsZSBTQU5TIGRvdWJsb24gZGFucyBsYSBnYWxsZXJpZSA6DQoJJCgiLmZhbmN5Ym94LXRyaWdnZXIiKS5jbGljayhmdW5jdGlvbigpIHsNCgkJJCgiYVtkYXRhLXJlbD0nIiArICQodGhpcykuZGF0YSgndHJpZ2dlci1yZWwnKSArICInXSIpLmVxKCQodGhpcykuZGF0YSgnZ2FsbGVyeS1pbmRleCcpKS50cmlnZ2VyKCdjbGljaycpOw0KCQlyZXR1cm4gZmFsc2U7DQoJfSk7DQo8L3NjcmlwdD4gDQo8IS0tW2lmIGx0IElFIDldPg0KICAgIDxzY3JpcHQgc3JjPSJhc3NldHMvcGx1Z2lucy9yZXNwb25kLmpzIj48L3NjcmlwdD4NCiAgICA8c2NyaXB0IHNyYz0iYXNzZXRzL3BsdWdpbnMvaHRtbDVzaGl2LmpzIj48L3NjcmlwdD4NCiAgICA8c2NyaXB0IHNyYz0iYXNzZXRzL2pzL3BsdWdpbnMvcGxhY2Vob2xkZXItSUUtZml4ZXMuanMiPjwvc2NyaXB0Pg0KICAgIDxzY3JpcHQgc3JjPSJhc3NldHMvcGx1Z2lucy9za3ktZm9ybXMvdmVyc2lvbi0yLjAuMS9qcy9za3ktZm9ybXMtaWU4LmpzIj48L3NjcmlwdD4NCjwhW2VuZGlmXS0tPg0KDQo8L2JvZHk+DQo8L2h0bWw+DQo=
    http_version: null
  recorded_at: Thu, 16 Apr 2020 16:13:55 GMT
recorded_with: VCR 5.1.0
