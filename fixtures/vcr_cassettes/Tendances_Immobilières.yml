---
http_interactions:
- request:
    method: get
    uri: http://www.tendancesimmobilieres.com/properties/?filter_area_from=&filter_area_to=&filter_contract_type=21&filter_location=74&filter_order=DESC&filter_price_from=&filter_price_to=&filter_sort_by=date&filter_type=25
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Fri, 17 Apr 2020 08:24:56 GMT
      Server:
      - Apache
      Expires:
      - Thu, 19 Nov 1981 08:52:00 GMT
      Cache-Control:
      - no-store, no-cache, must-revalidate, post-check=0, pre-check=0
      Pragma:
      - no-cache
      Link:
      - <http://www.tendancesimmobilieres.com/wp-json/>; rel="https://api.w.org/"
      Content-Type:
      - text/html; charset=UTF-8
      Content-Language:
      - fr
      Set-Cookie:
      - PHPSESSID=cirgngh7h92u2pqhvp4ordr040; path=/
      Connection:
      - close
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: null
  recorded_at: Fri, 17 Apr 2020 08:24:59 GMT
- request:
    method: get
    uri: http://www.tendancesimmobilieres.com/properties/exclusivite/
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Fri, 17 Apr 2020 08:24:59 GMT
      Server:
      - Apache
      Expires:
      - Thu, 19 Nov 1981 08:52:00 GMT
      Cache-Control:
      - no-store, no-cache, must-revalidate, post-check=0, pre-check=0
      Pragma:
      - no-cache
      X-Pingback:
      - http://www.tendancesimmobilieres.com/xmlrpc.php
      Link:
      - <http://www.tendancesimmobilieres.com/wp-json/>; rel="https://api.w.org/",
        <http://www.tendancesimmobilieres.com/?p=59563>; rel=shortlink
      Content-Type:
      - text/html; charset=UTF-8
      Content-Language:
      - fr
      Set-Cookie:
      - PHPSESSID=v3oe9rlspamkbs526gug1v03v6; path=/
      Connection:
      - close
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: null
  recorded_at: Fri, 17 Apr 2020 08:25:02 GMT
recorded_with: VCR 5.1.0
