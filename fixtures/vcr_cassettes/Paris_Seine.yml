---
http_interactions:
- request:
    method: get
    uri: https://www.paris-seine-immobilier.com/catalog/advanced_search_result.php?C_27=2,1&C_27_REPLACE=1&C_27_search=EGAL&C_27_type=UNIQUE&C_28=Vente&C_28_search=EGAL&C_28_type=UNIQUE&C_65=75&C_65_search=CONTIENT&C_65_temp=75&C_65_type=TEXT&action=update_search&page=1&search_id=1663417493034890&sort=0
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Wed, 08 Apr 2020 15:50:49 GMT
      Server:
      - Apache
      Set-Cookie:
      - C_65_cookie=75
      - MOLSESSION=S1568|Xo3y3|Xo3y3; path=/
      - ac3_sessionId=32fi6q8rbrrlegtmtomc8d4lh4; path=/; domain=www.paris-seine-immobilier.com
      - last_search=1663417493034890; expires=Sat, 18-Apr-2020 15:50:49 GMT; Max-Age=864000;
        path=/
      Expires:
      - Thu, 19 Nov 1981 08:52:00 GMT
      Cache-Control:
      - no-store, no-cache, must-revalidate, post-check=0, pre-check=0, public
      Pragma:
      - no-cache
      Vary:
      - Accept-Encoding
      Content-Length:
      - '13301'
      Content-Type:
      - text/html; charset=iso-8859-1
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: null
  recorded_at: Wed, 08 Apr 2020 15:50:49 GMT
- request:
    method: get
    uri: https://www.paris-seine-immobilier.com/fiches/3-33-30_35601177/derniers-etages-avec-terrasses.html?offset=0&page=1&search_id=1663417493034890&sort=0
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Wed, 08 Apr 2020 15:50:49 GMT
      Server:
      - Apache
      Set-Cookie:
      - MOLSESSION=S1444|Xo3y3|Xo3y3; path=/
      - ac3_sessionId=ief3svn1bnh9ee3cnaroh5ui40; path=/; domain=www.paris-seine-immobilier.com
      Expires:
      - Thu, 19 Nov 1981 08:52:00 GMT
      Cache-Control:
      - no-store, no-cache, must-revalidate, post-check=0, pre-check=0, public
      Pragma:
      - no-cache
      Vary:
      - Accept-Encoding
      Content-Length:
      - '16932'
      Content-Type:
      - text/html; charset=iso-8859-1
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: null
  recorded_at: Wed, 08 Apr 2020 15:50:50 GMT
- request:
    method: get
    uri: https://www.paris-seine-immobilier.com/fiches/3-33-30_36137529/calme-absolu-en-derniers-etages.html?offset=3&page=1&search_id=1663417493034890&sort=0
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Wed, 08 Apr 2020 15:50:50 GMT
      Server:
      - Apache
      Set-Cookie:
      - MOLSESSION=S1565|Xo3y3|Xo3y3; path=/
      - ac3_sessionId=g3ppe57gnuthpodi4s9t0k8sv5; path=/; domain=www.paris-seine-immobilier.com
      Expires:
      - Thu, 19 Nov 1981 08:52:00 GMT
      Cache-Control:
      - no-store, no-cache, must-revalidate, post-check=0, pre-check=0, public
      Pragma:
      - no-cache
      Vary:
      - Accept-Encoding
      Content-Length:
      - '16824'
      Content-Type:
      - text/html; charset=iso-8859-1
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: null
  recorded_at: Wed, 08 Apr 2020 15:50:50 GMT
- request:
    method: get
    uri: https://www.paris-seine-immobilier.com/fiches/3-33-30_36137532/derniers-etages-avec-ascenseur.html?offset=4&page=1&search_id=1663417493034890&sort=0
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Wed, 08 Apr 2020 15:50:50 GMT
      Server:
      - Apache
      Set-Cookie:
      - MOLSESSION=S1445|Xo3y3|Xo3y3; path=/
      - ac3_sessionId=kqrnkmdq8259ml8vqncgu16kk4; path=/; domain=www.paris-seine-immobilier.com
      Expires:
      - Thu, 19 Nov 1981 08:52:00 GMT
      Cache-Control:
      - no-store, no-cache, must-revalidate, post-check=0, pre-check=0, public
      Pragma:
      - no-cache
      Vary:
      - Accept-Encoding
      Content-Length:
      - '16806'
      Content-Type:
      - text/html; charset=iso-8859-1
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: null
  recorded_at: Wed, 08 Apr 2020 15:50:51 GMT
- request:
    method: get
    uri: https://www.paris-seine-immobilier.com/fiches/3-33-31_35889673/appartement-familial-bon-marche.html?offset=5&page=1&search_id=1663417493034890&sort=0
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Wed, 08 Apr 2020 15:50:51 GMT
      Server:
      - Apache
      Set-Cookie:
      - MOLSESSION=S1443|Xo3y3|Xo3y3; path=/
      - ac3_sessionId=ppns9d02ajpk4lhqbejj0lp8u4; path=/; domain=www.paris-seine-immobilier.com
      Expires:
      - Thu, 19 Nov 1981 08:52:00 GMT
      Cache-Control:
      - no-store, no-cache, must-revalidate, post-check=0, pre-check=0, public
      Pragma:
      - no-cache
      Vary:
      - Accept-Encoding
      Content-Length:
      - '16884'
      Content-Type:
      - text/html; charset=iso-8859-1
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        PCFET0NUWVBFIGh0bWw+PGh0bWwgbGFuZz0iZnIiIHhtbG5zOm9nPSJodHRwOi8vb2dwLm1lL25zIyIgPjxoZWFkPjxiYXNlIGhyZWY9Ii8vd3d3LnBhcmlzLXNlaW5lLWltbW9iaWxpZXIuY29tL2NhdGFsb2cvIj48bWV0YSBodHRwLWVxdWl2PSJDb250ZW50LVR5cGUiIGNvbnRlbnQ9InRleHQvaHRtbDsgY2hhcnNldD1pc28tODg1OS0xIiAvPjx0aXRsZT5BcHBhcnRlbWVudCBBIHZlbmRyZSA3NTAwNyBQYXJpcyAtIDUgcGnoY2VzIC0gMTAzLjggbbIgLSBQYWdlIDEgfCBQQVJJUyBTRUlORS4uLjwvdGl0bGU+CjxtZXRhIG5hbWU9IkRlc2NyaXB0aW9uIiBjb250ZW50PSIqKiBFWENMVVNJVklUySAqKiBTyFZSRVMtQkFCWUxPTkUgKiogQ0hBUk1FIERFIEwnQU5DSUVOICoqIE5vdXMgdm91cyBwcm9wb3NvbnMgdW4gYXBwYXJ0ZW1lbnQgZmFtaWxpYWwsIHNpdHXpIGF1IDPobWUg6XRhZ2UgYXZlYyBBU0NFTlNFVVIsIGF1IHNlaW4gZCd1biBiZWwgaW1tZXVibGUgZHUuLi4iIC8+CjxtZXRhIHByb3BlcnR5PSJvZzp0aXRsZSIgY29udGVudD0iQVBQQVJURU1FTlQgRkFNSUxJQUwgQk9OIE1BUkNIySIgLz4KPG1ldGEgcHJvcGVydHk9Im9nOnR5cGUiIGNvbnRlbnQ9ImNvbXBhbnkiIC8+CjxtZXRhIHByb3BlcnR5PSJvZzp1cmwiIGNvbnRlbnQ9Ii8vd3d3LnBhcmlzLXNlaW5lLWltbW9iaWxpZXIuY29tL2ZpY2hlcy8zLTMzLTMxXzM1ODg5NjczL2FwcGFydGVtZW50LWZhbWlsaWFsLWJvbi1tYXJjaGUuaHRtbCIgLz4KPG1ldGEgcHJvcGVydHk9Im9nOmltYWdlIiBjb250ZW50PSIvL3d3dy5wYXJpcy1zZWluZS1pbW1vYmlsaWVyLmNvbS9vZmZpY2U4L3Bhcmlzc2VpbmVfY2hlcmNoZW1pZGkvY2F0YWxvZy9pbWFnZXMvcHJfcC8zLzUvOC84LzkvNi83LzMvMzU4ODk2NzNhLmpwZy5taWQuanBnIiAvPgo8bWV0YSBwcm9wZXJ0eT0ib2c6ZGVzY3JpcHRpb24iIGNvbnRlbnQ9IioqIEVYQ0xVU0lWSVTJICoqIFPIVlJFUy1CQUJZTE9ORSAqKiBDSEFSTUUgREUgTCdBTkNJRU4gKiogTm91cyB2b3VzIHByb3Bvc29ucyB1biBhcHBhcnRlbWVudCBmYW1pbGlhbCwgc2l0dekgYXUgM+htZSDpdGFnZSBhdmVjIEFTQ0VOU0VVUiwgYXUgc2VpbiBkJ3VuIGJlbCBpbW1ldWJsZSBkdSBYSVjobWUsIGQndW5lIHN1cGVyZmljaWUgZGUgMTAzLjgwIG2yIGNhcnJlei4gU2V1bCDgIGwn6XRhZ2UsIGNlIGJpZW4gY29tcHJlbmQgOiB1bmUgZW50cullLCB1biBiZWF1IGRvdWJsZSBz6WpvdXIgYXZlYyBDSEVNSU7JRSwgMyBjaGFtYnJlcywgdW5lIGN1aXNpbmUsIHVuZSBzYWxsZSBkZSBiYWlucywgdW4gd2Mgc+lwYXLpLiBDZSBiaWVuIGRpc3Bvc2UgZGUgbm9tYnJldXggcmFuZ2VtZW50cyBldCBkdSBDSEFSTUUgZGUgbCdhbmNpZW4gKFBhcnF1ZXQsIE1vdWx1cmVzLCBDaGVtaW7pZXMpLiBVbmUgc3R1ZGV0dGUgZGUgOSBtsiBsb2kgY2FycmV6LCBkZXNzZXJ2aWUgcGFyIGFzY2Vuc2V1ciwgc2VyYSB2ZW5kdWUgb2JsaWdhdG9pcmVtZW50IGF2ZWMgbCdhcHBhcnRlbWVudCBhdSBwcml4IGRlIDE1NSAwMDAgZXVyb3MgaG9ub3JhaXJlcyBkJ2FnZW5jZSBpbmNsdXMuIERldXggY2F2ZXMgY29tcGzodGVudCBjZSBiaWVuLiAqKiBFeGNsdXNpdml06SBQYXJpcyBTRUlORSAqKiAtIDU5LCBydWUgZHUgQ2hlcmNoZS1NaWRpIC0gNzUwMDYgUGFyaXMgKEFDSEFUIC0gVkVOVEUgLSBMT0NBVElPTiAtIEdFU1RJT04gLSDJVkFMVUFUSU9OIE9GRkVSVEUgU09VUyAyNCBIKS4qKiAxJmFtcDtuYnNwOzc2NCZhbXA7bmJzcDswMDAmYW1wO25ic3A7gCBob25vcmFpcmVzIGluY2x1cyAgfCAxJmFtcDtuYnNwOzY5MSZhbXA7bmJzcDsyNzUmYW1wO25ic3A7gCBob3JzIGhvbm9yYWlyZXMgfCBIb25vcmFpcmVzIDogNC4zMCUgVFRDIOAgbGEgY2hhcmdlIGRlIGwnYWNxdelyZXVyTm9zIGhvbm9yYWlyZXMiIC8+CjxtZXRhIG5hbWU9InR3aXR0ZXI6Y2FyZCIgY29udGVudD0ic3VtbWFyeSIgLz48bWV0YSBuYW1lPSJ0d2l0dGVyOnNpdGUiIGNvbnRlbnQ9IlBBUklTIFNFSU5FIElNTU9CSUxJRVIiIC8+PG1ldGEgbmFtZT0idHdpdHRlcjp0aXRsZSIgY29udGVudD0iQVBQQVJURU1FTlQgRkFNSUxJQUwgQk9OIE1BUkNIySIgLz48bWV0YSBuYW1lPSJ0d2l0dGVyOmRlc2NyaXB0aW9uIiBjb250ZW50PSIqKiBFWENMVVNJVklUySAqKiBTyFZSRVMtQkFCWUxPTkUgKiogQ0hBUk1FIERFIEwnQU5DSUVOICoqIE5vdXMgdm91cyBwcm9wb3NvbnMgdW4gYXBwYXJ0ZW1lbnQgZmFtaWxpYWwsIHNpdHXpIGF1IDPobWUg6XRhZ2UgYXZlYyBBU0NFTlNFVVIsIGF1IHNlaW4gZCd1biBiZWwgaW1tZXVibGUgZHUgWElY6G1lLCBkJ3VuZSBzdXBlcmZpY2llIGRlLi4uIiAvPjxtZXRhIHByb3BlcnR5PSJvZzpzaXRlX25hbWUiIGNvbnRlbnQ9IlBBUklTIFNFSU5FIElNTU9CSUxJRVIiIC8+CjxtZXRhIG5hbWU9IlJvYm90cyIgY29udGVudD0iaW5kZXgsZm9sbG93IiAvPgkJCQkJPG1ldGEgaHR0cC1lcXVpdj0iWC1VQS1Db21wYXRpYmxlIiBjb250ZW50PSJJRT1lZGdlIj4KCQkJPG1ldGEgbmFtZT0idmlld3BvcnQiIGNvbnRlbnQ9IndpZHRoPWRldmljZS13aWR0aCwgaW5pdGlhbC1zY2FsZT0xIj4KCQkJCTxtZXRhIG5hbWU9InNlcnZldXIiIGNvbnRlbnQ9IjE3Mi4xNi4wLjIyIiAvPgoJCQkJPG1ldGEgbmFtZT0ibXN2YWxpZGF0ZS4wMSIgY29udGVudD0iRTAwMUUwNzY4QzBBOEMxMkMxMjdFNThGQUU4M0UxMEUiIC8+CgkJCQk8bWV0YSBodHRwLWVxdWl2PSJDb250ZW50LUxhbmd1YWdlIiBjb250ZW50PSJmciIgLz4KCQk8bGluayByZWw9ImNhbm9uaWNhbCIgaHJlZj0iLy93d3cucGFyaXMtc2VpbmUtaW1tb2JpbGllci5jb20vZmljaGVzLzMtMzMtMzFfMzU4ODk2NzMvYXBwYXJ0ZW1lbnQtZmFtaWxpYWwtYm9uLW1hcmNoZS5odG1sIiAvPgoNPGxpbmsgcmVsPSJzdHlsZXNoZWV0IiB0eXBlPSJ0ZXh0L2NzcyIgaHJlZj0iZ2VuZXJhbDIuY3NzIiAvPjxsaW5rIHJlbD0ic3R5bGVzaGVldCIgdHlwZT0idGV4dC9jc3MiIGhyZWY9ImZvbnQvZm9udC1hd2Vzb21lL2Nzcy9mb250LWF3ZXNvbWUubWluLmNzcyIgLz48c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCIgc3JjPSJpbmNsdWRlcy9qYXZhc2NyaXB0L3Bhbm8uanMiPjwvc2NyaXB0PjxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0IiBzcmM9ImFqYXguanMiPjwvc2NyaXB0PjxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0IiBzcmM9ImluY2x1ZGVzL2dlbmVyYWwuanMiPjwvc2NyaXB0PgoJCQoJCTxtZXRhIGh0dHAtZXF1aXY9IlgtVUEtQ29tcGF0aWJsZSIgY29udGVudD0iSUU9ZWRnZSI+CgkJPG1ldGEgbmFtZT0idmlld3BvcnQiIGNvbnRlbnQ9InVzZXItc2NhbGFibGU9bm8sIGluaXRpYWwtc2NhbGU9MSwgbWF4aW11bS1zY2FsZT0xLCBtaW5pbXVtLXNjYWxlPTEsIHdpZHRoPWRldmljZS13aWR0aCwgaGVpZ2h0PWRldmljZS1oZWlnaHQiIC8+CgkJPG1ldGEgbmFtZT0iZ29vZ2xlLXNpdGUtdmVyaWZpY2F0aW9uIiBjb250ZW50PSJuaXR6Z2ZjOXh6emh1dGU2bHd2MTE1dXF0MXdhM3oiPgoJCTxsaW5rIGhyZWY9Imh0dHBzOi8vZm9udHMuZ29vZ2xlYXBpcy5jb20vY3NzP2ZhbWlseT1Sb2JvdG86NDAwLDMwMCw3MDAiIHJlbD0ic3R5bGVzaGVldCIgdHlwZT0idGV4dC9jc3MiLz4KCQk8bGluayBocmVmPSJodHRwczovL2ZvbnRzLmdvb2dsZWFwaXMuY29tL2Nzcz9mYW1pbHk9VWJ1bnR1OjMwMCwzMDBpLDQwMCw0MDBpLDUwMCw1MDBpLDcwMCw3MDBpIiByZWw9InN0eWxlc2hlZXQiPgoKCQk8c2NyaXB0IHNyYz0ic2NyaXB0cy9qcXVlcnkvanF1ZXJ5LTEuMTEuMy5taW4uanMiIHR5cGU9InRleHQvamF2YXNjcmlwdCI+PC9zY3JpcHQ+CgkJPHNjcmlwdCBzcmM9InNjcmlwdHMvanF1ZXJ5L2pxdWVyeS11aS0xLjExLjQubWluLmpzIiB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPjwvc2NyaXB0PgoJCTxzY3JpcHQgc3JjPSJzY3JpcHRzL2Jvb3RzdHJhcC0zLjMuNi9qcy9ib290c3RyYXAubWluLmpzIj48L3NjcmlwdD4KCQk8c2NyaXB0IHNyYz0ic2NyaXB0cy9qcXVlcnkvYm9vdHN0cmFwLXNlbGVjdC5taW4uanMiIHR5cGU9InRleHQvamF2YXNjcmlwdCI+PC9zY3JpcHQ+CgkJPHNjcmlwdCBzcmM9InNjcmlwdHMvanF1ZXJ5L2FqYXgtYm9vdHN0cmFwLXNlbGVjdC5taW4uanMiIHR5cGU9InRleHQvamF2YXNjcmlwdCI+PC9zY3JpcHQ+CgkJPHNjcmlwdCBzcmM9Ii4uL3RlbXBsYXRlcy90ZW1wbGF0ZV9taW5keV9tY19jcmVhZHkvY2F0YWxvZy9zY3JpcHRzL2Jvb3RzdHJhcC10b2tlbmZpZWxkLm1pbi5qcyIgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij48L3NjcmlwdD4KCQk8c2NyaXB0IHNyYz0iLi4vdGVtcGxhdGVzL3RlbXBsYXRlX21pbmR5X21jX2NyZWFkeS9jYXRhbG9nL3NjcmlwdHMvdG91Y2hTd2lwZS5qcyIgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij48L3NjcmlwdD4KCQk8c2NyaXB0IHNyYz0iLi4vdGVtcGxhdGVzL3RlbXBsYXRlX21pbmR5X21jX2NyZWFkeS9jYXRhbG9nL3NjcmlwdHMvanF1ZXJ5LnJlc3BvbnNpdmVTbGlkZXIuanMiIHR5cGU9InRleHQvamF2YXNjcmlwdCI+PC9zY3JpcHQ+CgkJPHNjcmlwdCBzcmM9Ii4uL3RlbXBsYXRlcy90ZW1wbGF0ZV9taW5keV9tY19jcmVhZHkvY2F0YWxvZy9zY3JpcHRzL293bC5jYXJvdXNlbC5taW4uanMiIHR5cGU9InRleHQvamF2YXNjcmlwdCI+PC9zY3JpcHQ+CgkJPHNjcmlwdCBzcmM9Ii4uL3RlbXBsYXRlcy90ZW1wbGF0ZV9taW5keV9tY19jcmVhZHkvY2F0YWxvZy9zY3JpcHRzL3NpdGUuanMiIHR5cGU9InRleHQvamF2YXNjcmlwdCIgbWVkaWE9InNjcmVlbiI+PC9zY3JpcHQ+CgkJPHNjcmlwdCBzcmM9InNjcmlwdHMvanF1ZXJ5L2pxdWVyeS5ibHVlaW1wLWdhbGxlcnkubWluLmpzIiB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiIG1lZGlhPSJzY3JlZW4iPjwvc2NyaXB0PgoKCQk8bGluayBocmVmPSIuLi90ZW1wbGF0ZXMvdGVtcGxhdGVfbWluZHlfbWNfY3JlYWR5L2NhdGFsb2cvY3NzL2ZvbnQtYXdlc29tZS5taW4uY3NzIiB0eXBlPSJ0ZXh0L2NzcyIgcmVsPSJzdHlsZXNoZWV0Ij4KCQk8bGluayBocmVmPSIuLi90ZW1wbGF0ZXMvdGVtcGxhdGVfbWluZHlfbWNfY3JlYWR5L2NhdGFsb2cvY3NzL3BlLWljb24tNy1zdHJva2UuY3NzIiB0eXBlPSJ0ZXh0L2NzcyIgcmVsPSJzdHlsZXNoZWV0Ij4KCQk8bGluayBocmVmPSIuLi90ZW1wbGF0ZXMvdGVtcGxhdGVfbWluZHlfbWNfY3JlYWR5L2NhdGFsb2cvY3NzL2hlbHBlci5jc3MiIHR5cGU9InRleHQvY3NzIiByZWw9InN0eWxlc2hlZXQiPgoJCTxsaW5rIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0ic2NyaXB0cy9ib290c3RyYXAtMy9jc3MvYm9vdHN0cmFwLm1pbi5jc3MiPgoJCTxsaW5rIGhyZWY9InNjcmlwdHMvanF1ZXJ5LXVpLTEuMTEuNC9qcXVlcnktdWkubWluLmNzcyIgdHlwZT0idGV4dC9jc3MiIHJlbD0ic3R5bGVzaGVldCI+CgkJPGxpbmsgaHJlZj0iLi4vdGVtcGxhdGVzL3RlbXBsYXRlX21pbmR5X21jX2NyZWFkeS9jYXRhbG9nL2Nzcy9ib290c3RyYXAtc2VsZWN0Lm1pbi5jc3MiIHR5cGU9InRleHQvY3NzIiByZWw9InN0eWxlc2hlZXQiPgoJCTxsaW5rIGhyZWY9Ii4uL3RlbXBsYXRlcy90ZW1wbGF0ZV9taW5keV9tY19jcmVhZHkvY2F0YWxvZy9jc3MvYm9vdHN0cmFwLXRva2VuZmllbGQubWluLmNzcyIgdHlwZT0idGV4dC9jc3MiIHJlbD0ic3R5bGVzaGVldCI+CgkJPGxpbmsgaHJlZj0iLi4vdGVtcGxhdGVzL3RlbXBsYXRlX21pbmR5X21jX2NyZWFkeS9jYXRhbG9nL2Nzcy9hbmltYXRlLmNzcyIgdHlwZT0idGV4dC9jc3MiIHJlbD0ic3R5bGVzaGVldCI+CgkJPGxpbmsgaHJlZj0iLi4vdGVtcGxhdGVzL3RlbXBsYXRlX21pbmR5X21jX2NyZWFkeS9jYXRhbG9nL2Nzcy9vd2wuY2Fyb3VzZWwubWluLmNzcyIgdHlwZT0idGV4dC9jc3MiIHJlbD0ic3R5bGVzaGVldCI+CgkJPGxpbmsgaHJlZj0iY3NzL3NpdGUtcGxhbi0yLmNzcyIgdHlwZT0idGV4dC9jc3MiIHJlbD0ic3R5bGVzaGVldCIgLz4KCQk8bGluayBocmVmPSIuLi90ZW1wbGF0ZXMvdGVtcGxhdGVfbWluZHlfbWNfY3JlYWR5L2NhdGFsb2cvY3NzL3N0eWxlLmNzcy5waHAiIHR5cGU9InRleHQvY3NzIiByZWw9InN0eWxlc2hlZXQiPgoJCTxsaW5rIGhyZWY9InNjcmlwdHMvanF1ZXJ5L2Nzcy9ibHVlaW1wLWdhbGxlcnkubWluLmNzcyIgdHlwZT0idGV4dC9jc3MiIHJlbD0ic3R5bGVzaGVldCI+CgkJCgkJPGxpbmsgcmVsPSJpY29uIiBocmVmPSIuLi9vZmZpY2U4L3Bhcmlzc2VpbmVfY2hlcmNoZW1pZGkvY2F0YWxvZy9pbWFnZXMvZmF2aWNvbi5wbmciIC8+CgkJPHNjcmlwdD4oZnVuY3Rpb24oKSB7CgkJd2luZG93LnNpYiA9IHsgCgkJCWVxdWV1ZTogW10sIAoJCQljbGllbnRfa2V5OiAicmI0bnhvM3F3NnA5cGJyNmpvcDR0IiAKCQl9OwoJCXdpbmRvdy5zZW5kaW5ibHVlID0ge307IAoJCWZvciAodmFyIGogPSBbJ3RyYWNrJywgJ2lkZW50aWZ5JywgJ3RyYWNrTGluaycsICdwYWdlJ10sIGkgPSAwOyBpIDwgai5sZW5ndGg7IGkrKykgewoJCShmdW5jdGlvbihrKSB7IAoJCQl3aW5kb3cuc2VuZGluYmx1ZVtrXSA9IGZ1bmN0aW9uKCkgeyAKCQkJCXZhciBhcmcgPSBBcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChhcmd1bWVudHMpOyAKCQkJCSh3aW5kb3cuc2liW2tdIHx8IGZ1bmN0aW9uKCkgeyAKCQkJCQkJdmFyIHQgPSB7fTsgCgkJCQkJCXRba10gPSBhcmc7IAoJCQkJCQl3aW5kb3cuc2liLmVxdWV1ZS5wdXNoKHQpOwoJCQkJCX0pKGFyZ1swXSwgYXJnWzFdLCBhcmdbMl0pOwoJCQkJfTsKCQkJfSkoaltpXSk7CgkJfQoJCXZhciBuID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgic2NyaXB0IiksCgkJCWkgPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZSgic2NyaXB0IilbMF07IAoJCW4udHlwZSA9ICJ0ZXh0L2phdmFzY3JpcHQiLCBuLmlkID0gInNlbmRpbmJsdWUtanMiLCBuLmFzeW5jID0gITAsIG4uc3JjID0gImh0dHBzOi8vc2liYXV0b21hdGlvbi5jb20vc2EuanM/a2V5PSIgKyB3aW5kb3cuc2liLmNsaWVudF9rZXksIGkucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUobiwgaSksIHdpbmRvdy5zZW5kaW5ibHVlLnBhZ2UoKTsKCX0pKCk7PC9zY3JpcHQ+CgkJPCEtLSBGYWNlYm9vayBQaXhlbCBDb2RlIC0tPgoJCQk8c2NyaXB0PgoJCQkJIWZ1bmN0aW9uKGYsYixlLHYsbix0LHMpe2lmKGYuZmJxKXJldHVybjtuPWYuZmJxPWZ1bmN0aW9uKCl7bi5jYWxsTWV0aG9kPwoJCQkJbi5jYWxsTWV0aG9kLmFwcGx5KG4sYXJndW1lbnRzKTpuLnF1ZXVlLnB1c2goYXJndW1lbnRzKX07aWYoIWYuX2ZicSlmLl9mYnE9bjsKCQkJCW4ucHVzaD1uO24ubG9hZGVkPSEwO24udmVyc2lvbj0nMi4wJztuLnF1ZXVlPVtdO3Q9Yi5jcmVhdGVFbGVtZW50KGUpO3QuYXN5bmM9ITA7CgkJCQl0LnNyYz12O3M9Yi5nZXRFbGVtZW50c0J5VGFnTmFtZShlKVswXTtzLnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKHQscyl9KHdpbmRvdywKCQkJCWRvY3VtZW50LCdzY3JpcHQnLCdodHRwczovL2Nvbm5lY3QuZmFjZWJvb2submV0L2VuX1VTL2ZiZXZlbnRzLmpzJyk7CgkJCQkKCQkJCWZicSgnaW5pdCcsICc2NzI3MzQwOTMxMjkzMzAnKTsgLy8gSW5zZXJ0IHlvdXIgcGl4ZWwgSUQgaGVyZS4KCQkJCWZicSgndHJhY2snLCAnUGFnZVZpZXcnKTs8L3NjcmlwdD4KCQkJPG5vc2NyaXB0PjxpbWcgaGVpZ2h0PSIxIiB3aWR0aD0iMSIgc3R5bGU9ImRpc3BsYXk6bm9uZSIgc3JjPSJodHRwczovL3d3dy5mYWNlYm9vay5jb20vdHI/aWQ9NjcyNzM0MDkzMTI5MzMwJmV2PVBhZ2VWaWV3Jm5vc2NyaXB0PTEiLz48L25vc2NyaXB0PgoJCTwhLS0gRE8gTk9UIE1PRElGWSAtLT4KCQk8IS0tIEVuZCBGYWNlYm9vayBQaXhlbCBDb2RlIC0tPgoJCQoJCTwhLS0gR29vZ2xlIFRhZyBNYW5hZ2VyIC0tPgoJCTxzY3JpcHQ+KGZ1bmN0aW9uKHcsZCxzLGwsaSl7d1tsXT13W2xdfHxbXTt3W2xdLnB1c2goeydndG0uc3RhcnQnOgoJCW5ldyBEYXRlKCkuZ2V0VGltZSgpLGV2ZW50OidndG0uanMnfSk7dmFyIGY9ZC5nZXRFbGVtZW50c0J5VGFnTmFtZShzKVswXSwKCQlqPWQuY3JlYXRlRWxlbWVudChzKSxkbD1sIT0nZGF0YUxheWVyJz8nJmw9JytsOicnO2ouYXN5bmM9dHJ1ZTtqLnNyYz0KCQknaHR0cHM6Ly93d3cuZ29vZ2xldGFnbWFuYWdlci5jb20vZ3RtLmpzP2lkPScraStkbDtmLnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKGosZik7CgkJfSkod2luZG93LGRvY3VtZW50LCdzY3JpcHQnLCdkYXRhTGF5ZXInLCdBVy05OTk3ODg4MzgnKTs8L3NjcmlwdD4KCQk8IS0tIEVuZCBHb29nbGUgVGFnIE1hbmFnZXIgLS0+CgkKCQkKCSAgICAgICAgPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiIHNyYz0iYWpheC5waHA/YWpheGFnZW50PWpzJmFtcDt0aGlzX3VybD0lMkZmaWNoZXMlMkYzLTMzLTMxXzM1ODg5NjczJTJGYXBwYXJ0ZW1lbnQtZmFtaWxpYWwtYm9uLW1hcmNoZS5odG1sJTNGc2VhcmNoX2lkJTNEMTY2MzQxNzQ5MzAzNDg5MCUyNm9mZnNldCUzRDUlMjZwYWdlJTNEMSUyNnNvcnQlM0QwIiByZWw9Im5vZm9sbG93Ij48L3NjcmlwdD4KICAgIDwvaGVhZD48Ym9keSBjbGFzcz0icGFnZV9wcm9kdWN0c19pbmZvIj4KCTwhLS0gaGVhZGVyIC0tPgoJPG5vc2NyaXB0PjxpZnJhbWUgc3JjPSJodHRwczovL3d3dy5nb29nbGV0YWdtYW5hZ2VyLmNvbS9ucy5odG1sP2lkPUFXLTk5OTc4ODgzOCIKCWhlaWdodD0iMCIgd2lkdGg9IjAiIHN0eWxlPSJkaXNwbGF5Om5vbmU7dmlzaWJpbGl0eTpoaWRkZW4iPjwvaWZyYW1lPjwvbm9zY3JpcHQ+Cgk8IS0tIEVuZCBHb29nbGUgVGFnIE1hbmFnZXIgKG5vc2NyaXB0KSAtLT4KPGRpdiBpZD0ibWVudS1tb2JpbGUiIGNsYXNzPSJoaWRkZW4tc20gaGlkZGVuLW1kIGhpZGRlbi1sZyI+Cgk8ZGl2IGNsYXNzPSJjbG9zZS1tZW51LW1vZGlsZSI+PGkgY2xhc3M9InBlLTdzLWNsb3NlLWNpcmNsZSBwZS0yeCI+PC9pPjwvZGl2PgoJPGEgY2xhc3M9ImxvZ28iICBocmVmPSIvIj48aW1nICBzcmM9Ii4uL29mZmljZTgvcGFyaXNzZWluZV9jaGVyY2hlbWlkaS9jYXRhbG9nL2ltYWdlcy80NjY3NTkucG5nIiAvPjwvYT4KCTx1bCBjbGFzcz0ibWVudSI+CgkJPGxpPjxhIGhyZWY9Ii4uL2Fubm9uY2VzL3RyYW5zYWN0aW9uL1ZlbnRlLmh0bWwiID5BQ0hFVEVSPC9hPjx1bD48L3VsPjxsaT48YSBocmVmPSJjb250YWN0X3VzLnBocD9mb3JtPTEiID5WRU5EUkUvRVNUSU1FUjwvYT48dWw+PC91bD48bGk+PGEgaHJlZj0iLi4vYW5ub25jZXMvdHJhbnNhY3Rpb24vTG9jYXRpb24uaHRtbCIgPkxPVUVSPC9hPjx1bD48L3VsPjxsaT48YSBocmVmPSIuLi9jb250ZW50LzkvZ2VzdGlvbi1sb2NhdGl2ZS5odG1sIiA+R0VSRVI8L2E+PHVsPjwvdWw+PGxpPjxhIGhyZWY9Ii4uL2NvbnRlbnQvMy9jb21tZXJjZS5odG1sIiA+Q09NTUVSQ0VTPC9hPjx1bD48L3VsPjxsaT48YSBocmVmPSJhZ2VuY2VzLnBocCI+TEVTIEFHRU5DRVM8L2E+PHVsPjx1bD48bGk+PGEgaHJlZj0ibmV3cy5waHAiPkFDVFVTPC9hPjx1bD48dWw+PC91bD48L3VsPjwvdWw+PC91bD48bGk+PGEgaHJlZj0iY29udGFjdF91cy5waHAiIj5DT05UQUNUPC9hPjx1bD48L3VsPjxsaT48YSBocmVmPSJhY2NvdW50LnBocCI+TU9OIENPTVBURTwvYT48dWw+PHVsPjwvdWw+PC91bD4JCQk8L3VsPgo8L2Rpdj4KPGRpdiBpZD0iY29udGVudC1nZW5lcmFsIj4KCTxkaXYgaWQ9ImNvbnRlbnQtZnVsbC1wYWdlIiBjbGFzcz0iaW4iPgoJCTxkaXYgY2xhc3M9ImRpYXBvLWhlYWRlciI+CgkJCQkJCQkJCQkJCTxkaXYgY2xhc3M9ImltZyIgc3R5bGU9ImJhY2tncm91bmQgOiB1cmwoJy4uL29mZmljZTgvcGFyaXNzZWluZV9jaGVyY2hlbWlkaS9jYXRhbG9nL2ltYWdlcy9QaG90byAxLmpwZycpIG5vLXJlcGVhdCBjZW50ZXI7IC13ZWJraXQtYmFja2dyb3VuZC1zaXplOiBjb3ZlcjsgICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyOyIgPjwvZGl2PgoJCQkJCQkJCQkJCQkJCQkJCQkJPGRpdiBjbGFzcz0iaW1nIiBzdHlsZT0iYmFja2dyb3VuZCA6IHVybCgnLi4vb2ZmaWNlOC9wYXJpc3NlaW5lX2NoZXJjaGVtaWRpL2NhdGFsb2cvaW1hZ2VzL1Bob3RvIDIuSlBHJykgbm8tcmVwZWF0IGNlbnRlcjsgLXdlYmtpdC1iYWNrZ3JvdW5kLXNpemU6IGNvdmVyOyAgIGJhY2tncm91bmQtc2l6ZTogY292ZXI7IiA+PC9kaXY+CgkJCQkJCQkJCQkJCQkJCQk8ZGl2IGNsYXNzPSJpbWciIHN0eWxlPSJiYWNrZ3JvdW5kIDogdXJsKCcuLi9vZmZpY2U4L3Bhcmlzc2VpbmVfY2hlcmNoZW1pZGkvY2F0YWxvZy9pbWFnZXMvUGhvdG8gMy5qcGcnKSBuby1yZXBlYXQgY2VudGVyOyAtd2Via2l0LWJhY2tncm91bmQtc2l6ZTogY292ZXI7ICAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjsiID48L2Rpdj4KCQkJCQkJCQkJCQkJCQkJCTxkaXYgY2xhc3M9ImltZyIgc3R5bGU9ImJhY2tncm91bmQgOiB1cmwoJy4uL29mZmljZTgvcGFyaXNzZWluZV9jaGVyY2hlbWlkaS9jYXRhbG9nL2ltYWdlcy9QaG90byA0LkpQRycpIG5vLXJlcGVhdCBjZW50ZXI7IC13ZWJraXQtYmFja2dyb3VuZC1zaXplOiBjb3ZlcjsgICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyOyIgPjwvZGl2PgoJCQkJCQkJCQkJCQkJCQkJPGRpdiBjbGFzcz0iaW1nIiBzdHlsZT0iYmFja2dyb3VuZCA6IHVybCgnLi4vb2ZmaWNlOC9wYXJpc3NlaW5lX2NoZXJjaGVtaWRpL2NhdGFsb2cvaW1hZ2VzL1Bob3RvIDUuanBnJykgbm8tcmVwZWF0IGNlbnRlcjsgLXdlYmtpdC1iYWNrZ3JvdW5kLXNpemU6IGNvdmVyOyAgIGJhY2tncm91bmQtc2l6ZTogY292ZXI7IiA+PC9kaXY+CgkJCQkJCQkJCQkJCQkJCQk8ZGl2IGNsYXNzPSJpbWciIHN0eWxlPSJiYWNrZ3JvdW5kIDogdXJsKCcuLi9vZmZpY2U4L3Bhcmlzc2VpbmVfY2hlcmNoZW1pZGkvY2F0YWxvZy9pbWFnZXMvUGhvdG8gNi5qcGcnKSBuby1yZXBlYXQgY2VudGVyOyAtd2Via2l0LWJhY2tncm91bmQtc2l6ZTogY292ZXI7ICAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjsiID48L2Rpdj4KCQkJCQkJCQkJCQkJCgoKCgkJPC9kaXY+CgkJPGRpdiBpZD0iaGVhZGVyIiBjbGFzcz0iaGlkZGVuLXhzIiA+CgkJCTxkaXYgY2xhc3M9InJvdyI+CgkJCQk8ZGl2IGNsYXNzPSJjb2wtc20tMSBjb2wtbWQtMSI+CgkJCQk8L2Rpdj4KCQkJCTxkaXYgY2xhc3M9ImhpZGRlbi14cyBjb2wtc20tMTAgY29sLW1kLTEwIj4KCQkJCQk8ZGl2IGNsYXNzPSJtZW51LXJlc3BvbnNpdmUiPgoJCQkJCQk8ZGl2IGNsYXNzPSJkaXNwbGF5LWNlbGwiPgoJCQkJCQk8YSBjbGFzcz0ibG9nbyIgIGhyZWY9Ii8iPjxpbWcgIHNyYz0iLi4vb2ZmaWNlOC9wYXJpc3NlaW5lX2NoZXJjaGVtaWRpL2NhdGFsb2cvaW1hZ2VzLzQ2Njc1OS5wbmciIC8+PC9hPgoJCQkJCQk8L2Rpdj4KCQkJCQkJPGRpdiBjbGFzcz0iZGlzcGxheS1jZWxsIHcxMDAgdGV4dC1yaWdodCI+CgkJCQkJCQk8dWwgY2xhc3M9Im1lbnUiPgoJCQkJCQkJCTxsaT48YSBocmVmPSIuLi9hbm5vbmNlcy90cmFuc2FjdGlvbi9WZW50ZS5odG1sIiA+QUNIRVRFUjwvYT48dWw+PC91bD48bGk+PGEgaHJlZj0iY29udGFjdF91cy5waHA/Zm9ybT0xIiA+VkVORFJFL0VTVElNRVI8L2E+PHVsPjwvdWw+PGxpPjxhIGhyZWY9Ii4uL2Fubm9uY2VzL3RyYW5zYWN0aW9uL0xvY2F0aW9uLmh0bWwiID5MT1VFUjwvYT48dWw+PC91bD48bGk+PGEgaHJlZj0iLi4vY29udGVudC85L2dlc3Rpb24tbG9jYXRpdmUuaHRtbCIgPkdFUkVSPC9hPjx1bD48L3VsPjxsaT48YSBocmVmPSIuLi9jb250ZW50LzMvY29tbWVyY2UuaHRtbCIgPkNPTU1FUkNFUzwvYT48dWw+PC91bD48bGk+PGEgaHJlZj0iYWdlbmNlcy5waHAiPkxFUyBBR0VOQ0VTPC9hPjx1bD48dWw+PGxpPjxhIGhyZWY9Im5ld3MucGhwIj5BQ1RVUzwvYT48dWw+PHVsPjwvdWw+PC91bD48L3VsPjwvdWw+PGxpPjxhIGhyZWY9ImNvbnRhY3RfdXMucGhwIiI+Q09OVEFDVDwvYT48dWw+PC91bD48bGk+PGEgaHJlZj0iYWNjb3VudC5waHAiPk1PTiBDT01QVEU8L2E+PHVsPjx1bD48L3VsPjwvdWw+CQkJCQkJCQkJCQkJCQkJPC91bD4KCQkJCQkJPC9kaXY+CgkJCQkJPC9kaXY+CgkJCQk8L2Rpdj4KCQkJCTxkaXYgY2xhc3M9ImNvbC1zbS0xIGNvbC1tZC0xIj4KCQkJCQkJCQk8L2Rpdj4KCQkJPC9kaXY+CgkJCQkJCQk8ZGl2IGlkPSJ0cmFuc2xhdGUiPgoJCQkJCTxzZWxlY3QgaWQ9InRyYW5zbGF0ZVNlbGVjdCIgY2xhc3M9InNlbGVjdHBpY2tlciI+CgkJCQkJCTxvcHRpb24gdmFsdWU9Imxhbmd1YWdlPWZyIiBzZWxlY3RlZD0ic2VsZWN0ZWQiPkZyYW7nYWlzPC9vcHRpb24+CgkJCQkJCTxvcHRpb24gdmFsdWU9Imxhbmd1YWdlPWVuIiA+RW5nbGlzaDwvb3B0aW9uPgoJCQkJCTwvc2VsZWN0PgoJCQkJPC9kaXY+CgkJCQkJPC9kaXY+CgkJPGRpdiBpZD0iYnRuLWNvbGxhcHNlLW1lbnUiIGNsYXNzPSJoaWRkZW4tc20gaGlkZGVuLW1kIGhpZGRlbi1sZyI+CgkJCTxpIGNsYXNzPSJmYSBmYS1uYXZpY29uIj48L2k+CgkJPC9kaXY+CgkJPGRpdiBjbGFzcz0iY29udGFpbmVyIj4KCQkJPGRpdiBpZD0icGFnZS1pbmRleCIgY2xhc3M9ImFuaW1hdGVkIGZhZGVJbkRvd24iPgoJCQkJCQkJCTxkaXYgY2xhc3M9ImJveC1taWRkbGUgdzEwMCBtb3RldXItaW50ZXJuZSI+CgkJCQk8ZGl2IGlkPSJyZWNoZXJjaGUiPgoJCTxkaXYgY2xhc3M9InRleHQtY2VudGVyIGhpZGRlbi1sZyBoaWRkZW4tbWQgaGlkZGVuLXNtIj4KCQk8YSBocmVmPSIvIj48aW1nICBzcmM9Ii4uL29mZmljZTgvcGFyaXNzZWluZV9jaGVyY2hlbWlkaS9jYXRhbG9nL2ltYWdlcy80NjY3NTkucG5nIiBzdHlsZT0ibWF4LWhlaWdodDo2MHB4O21heC13aWR0aDoxMDAlO21hcmdpbjoxNXB4IDA7Ii8+PC9hPgoJPC9kaXY+CgkJPGRpdiBjbGFzcz0idGl0bGVSZWNoZXJjaGUgdGV4dC11cHBlcmNhc2UiPgoJCTxkaXYgY2xhc3M9ImRpc3BsYXktdGFibGUiPgoJCQk8ZGl2IGNsYXNzPSJkaXNwbGF5LWNlbGwgdzEwMCI+CgkJCQlWb3RyZSByZWNoZXJjaGUJCQk8L2Rpdj4KCQkJPGRpdiBjbGFzcz0iZGlzcGxheS1jZWxsIj4KCQkJCTxpIGNsYXNzPSJwZSBwZS03cy1hbmdsZS1kb3duIHBlLTJ4Ij48L2k+CgkJCTwvZGl2PgoJCTwvZGl2PgoJPC9kaXY+Cgk8Zm9ybSBuYW1lPSJxdWlja19maW5kIiBhY3Rpb249ImFkdmFuY2VkX3NlYXJjaF9yZXN1bHQucGhwIiBtZXRob2Q9ImdldCIgaWQ9InF1aWNrX2ZpbmQiPjxpbnB1dCB0eXBlPSJoaWRkZW4iIG5hbWU9ImFjdGlvbiIgaWQ9ImFjdGlvbiIgdmFsdWU9InVwZGF0ZV9zZWFyY2giLz48aW5wdXQgdHlwZT0iaGlkZGVuIiBuYW1lPSJzZWFyY2hfaWQiIGlkPSJzZWFyY2hfaWQiIHZhbHVlPSIxNjYzNDE3NDkzMDM0ODkwIi8+CQk8ZGl2IGNsYXNzPSJkaXNwbGF5LXRhYmxlIHcxMDAgY3JpdGVyZWJhc2UiPgoJCQkJCQkJPGRpdiBjbGFzcz0iZGlzcGxheS1jZWxsIj4KCQkJCQk8ZGl2IGNsYXNzPSJpbnB1dC1ncm91cCB3MTAwIj4KCQkJCQkJPHNwYW4gY2xhc3M9ImlucHV0LWdyb3VwLWFkZG9uIj4gPGkgY2xhc3M9InBlLTdzLWRvb3ItbG9jayBwZS0yeCI+PC9pPiA8L3NwYW4+CgkJCQkJCTxpbnB1dCB0eXBlPSJoaWRkZW4iIG5hbWU9IkNfMjhfc2VhcmNoIiB2YWx1ZT0iRUdBTCIgaWQ9IkNfMjhfc2VhcmNoIi8+PGlucHV0IHR5cGU9ImhpZGRlbiIgbmFtZT0iQ18yOF90eXBlIiB2YWx1ZT0iVU5JUVVFIiBpZD0iQ18yOF90eXBlIi8+PHNlbGVjdCBuYW1lPSJDXzI4IiBpZD0iQ18yOCIgY2xhc3M9InNlbGVjdHBpY2tlciIgdGl0bGU9IlR5cGUgZGUgdHJhbnNhY3Rpb24iIGRhdGEtd2lkdGg9IjEwMCUiPjxvcHRpb24gdmFsdWU9IlZlbnRlIj5BIHZlbmRyZTwvb3B0aW9uPjxvcHRpb24gdmFsdWU9IkxvY2F0aW9uIj5BIGxvdWVyPC9vcHRpb24+PC9zZWxlY3Q+CQkJCQk8L2Rpdj4KCQkJCTwvZGl2PgoJCQkJPGRpdiBjbGFzcz0iZGlzcGxheS1jZWxsIHNlcGFyYXRlLWNlbGwiPiZuYnNwOzwvZGl2PgoJCQkJCQkKCQkJPGRpdiBjbGFzcz0iZGlzcGxheS1jZWxsIj4KCQkJCTxkaXYgY2xhc3M9ImlucHV0LWdyb3VwIHcxMDAiPgoJCQkJCTxzcGFuIGNsYXNzPSJpbnB1dC1ncm91cC1hZGRvbiI+IDxpIGNsYXNzPSJwZS03cy1ob21lIHBlLTJ4Ij48L2k+IDwvc3Bhbj4KCQkJCQk8c2VsZWN0IG5hbWU9IkNfMjdfUkVQTEFDRSIgaWQ9IkNfMjdfUkVQTEFDRSIgY2xhc3M9InNlbGVjdHBpY2tlciIgbXVsdGlwbGUgdGl0bGU9IlR5cGUgZGUgYmllbiIgZGF0YS13aWR0aD0iMTAwJSIgZGF0YS1zZWxlY3RlZC10ZXh0LWZvcm1hdD0iY291bnQiIGRhdGEtY291bnQtc2VsZWN0ZWQtdGV4dD0iezB9IGNob2l4IiA+PG9wdGlvbiB2YWx1ZT0iMiI+TWFpc29uPC9vcHRpb24+PG9wdGlvbiB2YWx1ZT0iMSI+QXBwYXJ0ZW1lbnQ8L29wdGlvbj48b3B0aW9uIHZhbHVlPSI1Ij5QYXJraW5nIC8gYm94PC9vcHRpb24+PG9wdGlvbiB2YWx1ZT0iQ2hhbWJyZSI+Q2hhbWJyZTwvb3B0aW9uPjwvc2VsZWN0PjxpbnB1dCB0eXBlPSJoaWRkZW4iIG5hbWU9IkNfMjdfc2VhcmNoIiB2YWx1ZT0iRUdBTCIgaWQ9IkNfMjdfc2VhcmNoIi8+PGlucHV0IHR5cGU9ImhpZGRlbiIgbmFtZT0iQ18yN190eXBlIiB2YWx1ZT0iVU5JUVVFIiBpZD0iQ18yN190eXBlIi8+PGlucHV0IHR5cGU9ImhpZGRlbiIgbmFtZT0iQ18yNyIgaWQ9IkNfMjciIGNsYXNzPSJoaWRkZW4iICAvPgkJCQk8L2Rpdj4KCQkJPC9kaXY+CgkJCTxkaXYgY2xhc3M9ImRpc3BsYXktY2VsbCBzZXBhcmF0ZS1jZWxsIj4mbmJzcDs8L2Rpdj4KCQkJCQkJCQkJCQkJCQkJCgkJCQkJCQk8ZGl2IGNsYXNzPSJkaXNwbGF5LWNlbGwiPgoJCQkJCQkJCTxkaXYgY2xhc3M9ImlucHV0LWdyb3VwICB3MTAwIj4KCQkJCQkJCQkJPHNwYW4gY2xhc3M9ImlucHV0LWdyb3VwLWFkZG9uIj4gPGkgY2xhc3M9InBlLTdzLW1hcC1tYXJrZXIgcGUtMngiPjwvaT4gPC9zcGFuPgoJCQkJCQkJCQk8aW5wdXQgdHlwZT0iaGlkZGVuIiBuYW1lPSJDXzY1X3NlYXJjaCIgdmFsdWU9IkNPTlRJRU5UIiBpZD0iQ182NV9zZWFyY2giLz48aW5wdXQgdHlwZT0iaGlkZGVuIiBuYW1lPSJDXzY1X3R5cGUiIHZhbHVlPSJURVhUIiBpZD0iQ182NV90eXBlIi8+PGRpdiBpZD0iQ182NV9jb250YWluZXIiIHN0eWxlPSJwb3NpdGlvbiA6cmVsYXRpdmU7IiBkYXRhLWxpbmU9IiI+PGlucHV0IHR5cGU9ImhpZGRlbiIgbmFtZT0iQ182NSIgaWQ9IkNfNjUiIGNsYXNzPSJDXzY1Ii8+PHNlbGVjdCBvbmNoYW5nZT0ndmFsaWRfdmlsbGUoJCh0aGlzKSk7JyBuYW1lPSdDXzY1X3RlbXAnIG11bHRpcGxlIGF1dG9jb21wbGV0ZT0nb2ZmJyBjbGFzcz0nc2VsZWN0cGlja2VyIHdpdGgtYWpheCBmb3JtLWNvbnRyb2wganMtY2hvc2VuIHdpZHRoMzMwIGNvbnRhaW5lcl9zZWxlY3RfY2l0eScKCSAgICAgICAgZGF0YS12YWx1ZT0nLkNfNjUnCgkgICAgICAgIGRhdGEtbW9kYWw9JyNDXzY1X21vZGFsJwoJICAgICAgICBkYXRhLWxpdmUtc2VhcmNoPSd0cnVlJwoJCQlkYXRhLXNlbGVjdGVkLXRleHQtZm9ybWF0PSdjb3VudD4xJwoJCQlkYXRhLW1heC1vcHRpb25zPSc1JwoJCQlkYXRhLWNvdW50LXNlbGVjdGVkLXRleHQ9J3swfSBjaG9peCcKCQkJZGF0YS1tYXgtb3B0aW9ucy10ZXh0PSdbIjUgY2hvaXggbWF4aW11bSIsIjUgY2hvaXggbWF4aW11bSJdJwoJICAgICAgICB0aXRsZT0nVmlsbGUsIEMuUCcKCSAgICAgICAgcGxhY2Vob2xkZXI9J1ZpbGxlLCBDLlAnPjwvc2VsZWN0PjwvZGl2PgkJCQkJCQkJPC9kaXY+CgkJCQkJCQk8L2Rpdj4KCQkJCQkJCQkJCQkJCQkKCgoJCQkKCQkJCQkJCQkJCQkJCQkJPGRpdiBjbGFzcz0iZGlzcGxheS1jZWxsIj4KCQkJCTxidXR0b24gY2xhc3M9ImJ0biBidG4tcHJpbWFyeSBidG4tc3VibWl0Ij4KCQkJCQlHTwoJCQkJPC9idXR0b24+CgkJCTwvZGl2PgoKCQk8L2Rpdj4KCgoJCQoJPC9mb3JtPgo8L2Rpdj4KCgoKPHNjcmlwdD4KCXZhciBtb2RhbFNob3cgPSBmYWxzZTsKCSQoZnVuY3Rpb24oKXsKCQk8IS0tJCgiI0NfMjgiKS52YWwoIlZlbnRlIiktLT4KCQkkKCIjcmVjaGVyY2hlIC5yYWRpb1R5cGVUcmFuc2F0aW9uIC5idG4iKS5jbGljayhmdW5jdGlvbigpewoJCQkkKCIjQ18yOCIpLnZhbCgkKHRoaXMpLnRleHQoKSkKCQkJJCgiI3JlY2hlcmNoZSAucmFkaW9UeXBlVHJhbnNhdGlvbiAuYnRuIikucmVtb3ZlQ2xhc3MoImJ0bi1zZWxlY3RlZCIpOwoJCQkkKHRoaXMpLmFkZENsYXNzKCJidG4tc2VsZWN0ZWQiKTsKCQkJJCgiI3JlY2hlcmNoZSAuc2VsZWN0QnVkZ2V0IikuaGlkZSgpOwoJCQkkKCIjcmVjaGVyY2hlICNzZWxlY3QiKyQodGhpcykudGV4dCgpKS5zaG93KCk7CgkJfSk7CgoKCQkvL3RyYWl0ZW1lbnQgZmllbGQKCQlpZigkKCcjdG9rZW5maWVsZFZpbGxlJykubGVuZ3RoPjApewoJCQkkKCcjdG9rZW5maWVsZFZpbGxlJykudG9rZW5maWVsZCh7CgkJCSAgYXV0b2NvbXBsZXRlOiB7CgkJCQlzb3VyY2U6IFtdLAoJCQkJZGVsYXk6IDEwMAoJCQkgIH0sCgkJCSAgc2hvd0F1dG9jb21wbGV0ZU9uRm9jdXM6IHRydWUKCQkJfSkuY2hhbmdlKGZ1bmN0aW9uKCl7CgkJCQkkKCIjQ182NSIpLnZhbCgkKHRoaXMpLnZhbCgpKTsKCQkJfSkKCQl9CgoJCSQoIiNxdWlja19maW5kIC5idG4tc3VibWl0IikuY2xpY2soZnVuY3Rpb24oKXsKCgkJfSk7CgoKCgl9KTsKCglmdW5jdGlvbiBzaG93X3NlYXJjaF9jYXJ0byh1cmwpCgl7CgkJaWYodXJsKQoJCQlkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnZ29vZ2xlX21hcHNfaWZyYW1lJykuc3JjPXVybDsKCQlpZighbW9kYWxTaG93KXsKCQkJJCgnI21vZGFsRHJhd09uTWFwJykubW9kYWwoJ3Nob3cnKTsKCQkJbW9kYWxTaG93ID0gdHJ1ZTsKCQl9ZWxzZXsKCQkJJCgnI21vZGFsRHJhd09uTWFwJykubW9kYWwoJ2hpZGUnKTsKCQkJbW9kYWxTaG93ID0gZmFsc2U7CgkJfQoKCX0KCWZ1bmN0aW9uIHNlYXJjaF9jYXJ0b19jbGVhck1hcCgpCgl7CgkJY2xlYXJNYXAoKTsKCQlkb2N1bWVudC5xdWlja19maW5kLm1hcF9wb2x5Z29uZS52YWx1ZSA9ICcnOwoJfQoJZnVuY3Rpb24gY2hhbmdlX3RhcmdldCgpCgl7CgkJaWYoZG9jdW1lbnQucXVpY2tfZmluZC5hZmZpY2hlX3Jlc19jYXJ0ZS5jaGVja2VkKQoJCQlkb2N1bWVudC5xdWlja19maW5kLmFjdGlvbiA9ICJhZHZhbmNlZF9zZWFyY2hfcmVzdWx0X2NhcnRvLnBocCIgOwoJCWVsc2UKCQkJZG9jdW1lbnQucXVpY2tfZmluZC5hY3Rpb24gPSAiYWR2YW5jZWRfc2VhcmNoX3Jlc3VsdC5waHAiIDsKCX0KCgoKICAgIC8vIFRZUEUgTkVVRiBBTkNJRU4KICAgICQoIiNDXzIxMV9SRVBMQUNFIikuYmluZCgnY2hhbmdlJywgZnVuY3Rpb24oKXsKICAgICAgICAkKCIjQ18yMTEiKS52YWwoJCgiI0NfMjExX1JFUExBQ0UiKS52YWwoKSk7CiAgICB9KTsKICAgIC8vIFRZUEUgQklFTgogICAgJCgiI0NfMjdfUkVQTEFDRSIpLmJpbmQoJ2NoYW5nZScsIGZ1bmN0aW9uKCl7CiAgICAgICAgJCgiI0NfMjciKS52YWwoJCgiI0NfMjdfUkVQTEFDRSIpLnZhbCgpKTsKICAgIH0pOwoKCgoJLyo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09Cgk9ICAgICAgICAgIENIT0lYIFRSQUNFIE9VIFZJTExFICAgICAgICAgID0KCT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0qLwoJJCgnLnBsdXNEZUNyaXRlcmVzJykuaGlkZSgpOwoJJCgnLmNsaWNrTW9yZUNyaXRlcmVzJykuY2xpY2soZnVuY3Rpb24oZSl7CgkJZS5wcmV2ZW50RGVmYXVsdCgpOwoKCQlpZiggJCgnLnBsdXNEZUNyaXRlcmVzJykuaXMoIjp2aXNpYmxlIikgKXsKCQkJJCgnLnBsdXNEZUNyaXRlcmVzJykucmVtb3ZlQ2xhc3MoJ2ZhZGVJblVwJykuYWRkQ2xhc3MoJ2ZhZGVJblVwJykuaGlkZSgpOwoJCX1lbHNlewoJCQkkKCcucGx1c0RlQ3JpdGVyZXMnKS5hZGRDbGFzcygnYW5pbWF0ZWQgZmFkZUluRG93bicpLnNob3coKTsKCQl9Cgl9KTsKCS8qPT09PT0gIEVuZCBvZiBQTFVTIERFIENSSVRFUkVTICA9PT09PT0qLwoKCjwvc2NyaXB0PgoKPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPgoJJChkb2N1bWVudCkucmVhZHkoZnVuY3Rpb24oKXsKCQlqUXVlcnkoJy5qcy1jaG9zZW4nKS5zZWxlY3RwaWNrZXIoKTsKCQlqUXVlcnkoJy5qcy1jaG9zZW4nKS5vbignY2hhbmdlJywgZnVuY3Rpb24oKQoJCXsKCQkJJGVsZW1lbnQgPSAkKHRoaXMpOwoJCQkkdGFyZ2V0ID0gJCgkZWxlbWVudC5kYXRhKCd2YWx1ZScpKTsKCQkJJG1vZGFsID0gJCgkZWxlbWVudC5kYXRhKCdtb2RhbCcpKTsKCQkJJHNlbGVjdHMgPSAkKHRoaXMpLnNlbGVjdHBpY2tlcigndmFsJyk7CgkJCWlmKCRzZWxlY3RzKQoJCQl7CgkJCQl2YXIgYXR0ciA9ICRlbGVtZW50LmF0dHIoJ211bHRpcGxlJyk7CgkJCQl2YXIgYXJncyA9IEFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKCRzZWxlY3RzKTsKCgkJCQlpZih0eXBlb2YgYXR0ciAhPT0gdHlwZW9mIHVuZGVmaW5lZCAmJiBhdHRyICE9PSBmYWxzZSl7CgkJCQkJJHRhcmdldC52YWwoYXJncy5qb2luKCcsJykpOwoJCQkJCSRtb2RhbC52YWwoYXJncy5qb2luKCcsJykpOwoJCQkJfWVsc2V7CgkJCQkJJHRhcmdldC52YWwoYXJncy5qb2luKCcnKSk7CgkJCQkJJG1vZGFsLnZhbChhcmdzLmpvaW4oJycpKTsKCQkJCX0KCQkJfQoJCQllbHNlCgkJCXsKCQkJCSR0YXJnZXQudmFsKCcnKTsKCQkJCSRtb2RhbC52YWwoJycpOwoJCQl9CgkJfSk7Cgl9KTsKCWZ1bmN0aW9uIHZhbGlkX3ZpbGxlKCRlbGVtZW50KQoJewoJICAgJHRhcmdldCA9ICQoJGVsZW1lbnQuZGF0YSgndmFsdWUnKSk7CgkgICAkbW9kYWwgPSAkKCRlbGVtZW50LmRhdGEoJ21vZGFsJykpOwoJICAgdmFyIHNlbGVjdHMgPSAkZWxlbWVudC5zZWxlY3RwaWNrZXIoJ3ZhbCcpOwoJICAgLy9jb25zb2xlLmxvZyhzZWxlY3RzKTsKCSAgIGlmKHNlbGVjdHMpCgkgICB7CgkgICAgICB2YXIgYXJncyA9IEFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKHNlbGVjdHMpOwoJICAgICAgJHRhcmdldC52YWwoYXJncy5qb2luKCcsJykpOwoJICAgICAgJG1vZGFsLnZhbChhcmdzLmpvaW4oJywnKSk7CgkgICB9CgkgICBlbHNlCgkgICB7CgkgICAgICAkdGFyZ2V0LnZhbCgnJyk7CgkgICAgICAkbW9kYWwudmFsKCcnKTsKCSAgIH0KCX0KCWZ1bmN0aW9uIGdldF9jaXRpZXMoKQoJewoJCWFnZW50LmNhbGwoJycsJ2dldF9jaXR5X2Zyb21fY291bnRyeScsJ2dldF9jaXR5X2Zyb21fY291bnRyeV9yZXR1cm4nLCQoJyNpbnRlcm5hdGlvbmFsIC5yZXNlYXJjaC1jaXR5ICNDXzE3MjUnKS52YWwoKSwnJyk7Cgl9CgoJZnVuY3Rpb24gZ2V0X2NpdHlfZnJvbV9jb3VudHJ5X3JldHVybihyZXN1bHQpCgl7CgkJJCgnI2xpc3RfY2l0aWVzX2Zyb21fY291bnRyeScpLmVtcHR5KCk7CgkJJCgnI2xpc3RfY2l0aWVzX2Zyb21fY291bnRyeScpLmh0bWwocmVzdWx0KTsKCX0KCgkvLyBUZXN0IHN1ciBjaGFtcCByZWNoZXJjaGUgcGFyIHJlZgoJZnVuY3Rpb24gdmVyaWZfY2hhbXBfcmVmKGZvcm0pCgl7CgkJdmFyIGVycm9yID0gZmFsc2U7CgoJCS8vIE9uIHJldGlyZSB0b3VzIGxlcyBlc3BhY2VzIHF1aSBwZXV2ZW50IMOqdHJlIHByw6lzZW50IGRhbnMgbGUgY2hhbXAKCQl2YXIgdmFsUmVmID0galF1ZXJ5KCcjc2VhcmNoICNyZWYtc2VhcmNoICNrZXl3b3JkcycpLnZhbCgpOwoJCXZhciBmaW5kID0gJyAnOwoJCXZhciByZWdleCA9IG5ldyBSZWdFeHAoZmluZCwgJ2cnKTsKCQl2YXIgcmVmID0gdmFsUmVmLnJlcGxhY2UocmVnZXgsICcnKTsKCgkJalF1ZXJ5KCcjc2VhcmNoICNyZWYtc2VhcmNoICNrZXl3b3JkcycpLnZhbChyZWYpOwoKCQlpZighZXJyb3IpCgkJCWRvY3VtZW50LmZvcm1zW2Zvcm1dLnN1Ym1pdCgpOwoJfQoKCQoJZnVuY3Rpb24gc2hvd19jaXRpZXModmFsKQoJewoJCWlmICh2YWwudG9Mb3dlckNhc2UoKSAgIT0gJ2ZyYW5jZScpCgkJewoJCQlhZ2VudC5jYWxsKCcnLCdnZXRfY2l0eV9mcm9tX2NvdW50cnknLCdnZXRfY2l0eV9mcm9tX2NvdW50cnlfcmV0dXJuJywkKCcjaW50ZXJuYXRpb25hbCAucmVzZWFyY2gtY2l0eSAjQ18xNzI1JykudmFsKCksIicnIik7CgkJfQoJCWVsc2UKCQl7CgkJCSQoJyNsaXN0X2NpdGllc19mcm9tX2NvdW50cnkgLmZvcm0tY29udHJvbCcpLnJlbW92ZSgpOwoJCQkkKCcjbGlzdF9jaXRpZXNfZnJvbV9jb3VudHJ5JykuYXBwZW5kKCc8c2VsZWN0IGNsYXNzPSJmb3JtLWNvbnRyb2wiPjxvcHRpb24gc2VsZWN0ZWQ9InNlbGVjdGVkInZhbHVlPSIiPlNhaW50IE1hcnRpbjwvb3B0aW9uPjwvc2VsZWN0PicpOwoJCX0KCX0KPC9zY3JpcHQ+CgkJCQk8L2Rpdj4KCgkJCQkKCQkJCQoJCQkJCQkJPC9kaXY+CgoJCTwvZGl2PgoJPC9kaXY+Cgk8ZGl2IGlkPSJCZy13aGl0ZSI+CgkJPGRpdiBjbGFzcz0iY29udGFpbmVyIj4KCgk8ZGl2IGlkPSJwYWdlRGV0YWlsIiA+Cgk8b2wgaXRlbXNjb3BlIGl0ZW10eXBlPSJodHRwOi8vc2NoZW1hLm9yZy9CcmVhZGNydW1iTGlzdCIgY2xhc3M9ImJyZWFkY3J1bWIiPjxsaSBwcm9wZXJ0eT0iaXRlbUxpc3RFbGVtZW50IiBpdGVtc2NvcGUgaXRlbXR5cGU9Imh0dHA6Ly9zY2hlbWEub3JnL0xpc3RJdGVtIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgcHJvcGVydHk9Iml0ZW0iIGl0ZW10eXBlPSJodHRwOi8vc2NoZW1hLm9yZy9UaGluZyIgaXRlbXByb3A9Iml0ZW0iIHRhcmdldD0iX3BhcmVudCIgIGhyZWY9Ii8vd3d3LnBhcmlzLXNlaW5lLWltbW9iaWxpZXIuY29tIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gaXRlbXByb3A9Im5hbWUiID48aSBjbGFzcz0iZmEgZmEtaG9tZSBmYS0yeCI+PC9pPjwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bWV0YSBpdGVtcHJvcD0icG9zaXRpb24iIGNvbnRlbnQ9IjEiIC8+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvbGk+PGxpIHByb3BlcnR5PSJpdGVtTGlzdEVsZW1lbnQiIGl0ZW1zY29wZSBpdGVtdHlwZT0iaHR0cDovL3NjaGVtYS5vcmcvTGlzdEl0ZW0iPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBwcm9wZXJ0eT0iaXRlbSIgaXRlbXR5cGU9Imh0dHA6Ly9zY2hlbWEub3JnL1RoaW5nIiBpdGVtcHJvcD0iaXRlbSIgdGFyZ2V0PSJfcGFyZW50IiAgaHJlZj0iLi4vdHlwZV9iaWVuLzMvYXBwYXJ0ZW1lbnRzLmh0bWwiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBpdGVtcHJvcD0ibmFtZSIgPkFwcGFydGVtZW50czwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bWV0YSBpdGVtcHJvcD0icG9zaXRpb24iIGNvbnRlbnQ9IjIiIC8+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvbGk+PGxpIHByb3BlcnR5PSJpdGVtTGlzdEVsZW1lbnQiIGl0ZW1zY29wZSBpdGVtdHlwZT0iaHR0cDovL3NjaGVtYS5vcmcvTGlzdEl0ZW0iPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBwcm9wZXJ0eT0iaXRlbSIgaXRlbXR5cGU9Imh0dHA6Ly9zY2hlbWEub3JnL1RoaW5nIiBpdGVtcHJvcD0iaXRlbSIgdGFyZ2V0PSJfcGFyZW50IiAgaHJlZj0iLi4vdHlwZV9iaWVuLzMtMzMvYS12ZW5kcmUuaHRtbCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGl0ZW1wcm9wPSJuYW1lIiA+QSB2ZW5kcmU8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPG1ldGEgaXRlbXByb3A9InBvc2l0aW9uIiBjb250ZW50PSIzIiAvPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2xpPjxsaSBwcm9wZXJ0eT0iaXRlbUxpc3RFbGVtZW50IiBpdGVtc2NvcGUgaXRlbXR5cGU9Imh0dHA6Ly9zY2hlbWEub3JnL0xpc3RJdGVtIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgcHJvcGVydHk9Iml0ZW0iIGl0ZW10eXBlPSJodHRwOi8vc2NoZW1hLm9yZy9UaGluZyIgaXRlbXByb3A9Iml0ZW0iIHRhcmdldD0iX3BhcmVudCIgIGhyZWY9Ii4uL3R5cGVfYmllbi8zLTMzLTMxLzUtcGllY2VzLWV0Lmh0bWwiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBpdGVtcHJvcD0ibmFtZSIgPjUgcGnoY2VzIGV0ICs8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPG1ldGEgaXRlbXByb3A9InBvc2l0aW9uIiBjb250ZW50PSI0IiAvPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2xpPjxsaSBpdGVtcHJvcD0iaXRlbUxpc3RFbGVtZW50IiAgaXRlbXNjb3BlIGl0ZW10eXBlPSJodHRwOi8vc2NoZW1hLm9yZy9MaXN0SXRlbSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGl0ZW1wcm9wPSJuYW1lIj5SZWYuIDogYm9ubWFyY2hlPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bWV0YSBpdGVtcHJvcD0icG9zaXRpb24iIGNvbnRlbnQ9IjUiIC8+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvbGk+PC9vbD4JPGgxIGNsYXNzPSJ0ZXh0LXVwcGVyY2FzZSI+QVBQQVJURU1FTlQgRkFNSUxJQUwgQk9OIE1BUkNIyTxkaXYgaWQ9ImNvbnRlbmV1cl9idXlfbm93XzM1ODg5NjczIiBjbGFzcz0iY29udGVuZXVyX2J1eV9ub3ciPgoJCQkJCQkJPGEgY2xhc3M9ImJ0bl9idXlfbm93IHRvb2x0aXBfYnRuIiBocmVmPSIjIiBkYXRhLXRvZ2dsZT0idG9vbHRpcCIgZGF0YS1wbGFjZW1lbnQ9InRvcCIgdGl0bGU9IkFqb3V0ZXIg4CBtYSBzZWxlY3Rpb24iIG9uY2xpY2s9ImphdmFzY3JpcHQ6YWRkX3RvX3NlbGVjdGlvbigzNTg4OTY3Myk7cmV0dXJuIGZhbHNlOyI+PGkgY2xhc3M9ImZhIGZhLXN0YXItbyAiPjwvaT48L2E+CgkJCQkJCQk8L2Rpdj48L2gxPgoJPGRpdiBpZD0icGhvdG9Db250YWluZXIiPgoJCQkJCTxkaXYgaWQ9ImRpYXBvRGV0YWlsIiBjbGFzcz0iZGlhcG9EZXRhaWwiPgoJCQkJCQkJCQkJCQkJCQk8ZGl2IGNsYXNzPSJpbWciIHN0eWxlPSJiYWNrZ3JvdW5kOnVybCgnLi4vb2ZmaWNlOC9wYXJpc3NlaW5lX2NoZXJjaGVtaWRpL2NhdGFsb2cvaW1hZ2VzL3ByXzMvMy81LzgvOC85LzYvNy8zLzM1ODg5NjczYS5qcGcnKSBuby1yZXBlYXQgY2VudGVyOyAtd2Via2l0LWJhY2tncm91bmQtc2l6ZTogY292ZXI7IGJhY2tncm91bmQtc2l6ZTogY292ZXI7IHBvc2l0aW9uOnJlbGF0aXZlOyI+CgkJCQkJCQkJCQkJCQkJCTxhICBjbGFzcz0idGV4dC1jZW50ZXIiIGRhdGEtc2xpZGUtaW5kZXg9IjAiIGhyZWY9Ii4uL29mZmljZTgvcGFyaXNzZWluZV9jaGVyY2hlbWlkaS9jYXRhbG9nL2ltYWdlcy9wcl8zLzMvNS84LzgvOS82LzcvMy8zNTg4OTY3M2EuanBnIiBzdHlsZT0icG9zaXRpb246YWJzb2x1dGU7d2lkdGg6MTAwJTtoZWlnaHQ6MTAwJSI+PC9hPgoJCQkJCQkJCQkJCQkJPC9kaXY+CgkJCQkJCQkJCQkJPGRpdiBjbGFzcz0iaW1nIiBzdHlsZT0iYmFja2dyb3VuZDp1cmwoJy4uL29mZmljZTgvcGFyaXNzZWluZV9jaGVyY2hlbWlkaS9jYXRhbG9nL2ltYWdlcy9wcl8zLzMvNS84LzgvOS82LzcvMy8zNTg4OTY3M2IuanBnJykgbm8tcmVwZWF0IGNlbnRlcjsgLXdlYmtpdC1iYWNrZ3JvdW5kLXNpemU6IGNvdmVyOyBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyOyBwb3NpdGlvbjpyZWxhdGl2ZTsiPgoJCQkJCQkJCQkJCQkJCQk8YSAgY2xhc3M9InRleHQtY2VudGVyIiBkYXRhLXNsaWRlLWluZGV4PSIxIiBocmVmPSIuLi9vZmZpY2U4L3Bhcmlzc2VpbmVfY2hlcmNoZW1pZGkvY2F0YWxvZy9pbWFnZXMvcHJfMy8zLzUvOC84LzkvNi83LzMvMzU4ODk2NzNiLmpwZyIgc3R5bGU9InBvc2l0aW9uOmFic29sdXRlO3dpZHRoOjEwMCU7aGVpZ2h0OjEwMCUiPjwvYT4KCQkJCQkJCQkJCQkJCTwvZGl2PgoJCQkJCQkJCQkJCTxkaXYgY2xhc3M9ImltZyIgc3R5bGU9ImJhY2tncm91bmQ6dXJsKCcuLi9vZmZpY2U4L3Bhcmlzc2VpbmVfY2hlcmNoZW1pZGkvY2F0YWxvZy9pbWFnZXMvcHJfMy8zLzUvOC84LzkvNi83LzMvMzU4ODk2NzNjLmpwZycpIG5vLXJlcGVhdCBjZW50ZXI7IC13ZWJraXQtYmFja2dyb3VuZC1zaXplOiBjb3ZlcjsgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjsgcG9zaXRpb246cmVsYXRpdmU7Ij4KCQkJCQkJCQkJCQkJCQkJPGEgIGNsYXNzPSJ0ZXh0LWNlbnRlciIgZGF0YS1zbGlkZS1pbmRleD0iMiIgaHJlZj0iLi4vb2ZmaWNlOC9wYXJpc3NlaW5lX2NoZXJjaGVtaWRpL2NhdGFsb2cvaW1hZ2VzL3ByXzMvMy81LzgvOC85LzYvNy8zLzM1ODg5NjczYy5qcGciIHN0eWxlPSJwb3NpdGlvbjphYnNvbHV0ZTt3aWR0aDoxMDAlO2hlaWdodDoxMDAlIj48L2E+CgkJCQkJCQkJCQkJCQk8L2Rpdj4KCQkJCQkJCQkJCQk8ZGl2IGNsYXNzPSJpbWciIHN0eWxlPSJiYWNrZ3JvdW5kOnVybCgnLi4vb2ZmaWNlOC9wYXJpc3NlaW5lX2NoZXJjaGVtaWRpL2NhdGFsb2cvaW1hZ2VzL3ByXzMvMy81LzgvOC85LzYvNy8zLzM1ODg5NjczZC5qcGcnKSBuby1yZXBlYXQgY2VudGVyOyAtd2Via2l0LWJhY2tncm91bmQtc2l6ZTogY292ZXI7IGJhY2tncm91bmQtc2l6ZTogY292ZXI7IHBvc2l0aW9uOnJlbGF0aXZlOyI+CgkJCQkJCQkJCQkJCQkJCTxhICBjbGFzcz0idGV4dC1jZW50ZXIiIGRhdGEtc2xpZGUtaW5kZXg9IjMiIGhyZWY9Ii4uL29mZmljZTgvcGFyaXNzZWluZV9jaGVyY2hlbWlkaS9jYXRhbG9nL2ltYWdlcy9wcl8zLzMvNS84LzgvOS82LzcvMy8zNTg4OTY3M2QuanBnIiBzdHlsZT0icG9zaXRpb246YWJzb2x1dGU7d2lkdGg6MTAwJTtoZWlnaHQ6MTAwJSI+PC9hPgoJCQkJCQkJCQkJCQkJPC9kaXY+CgkJCQkJCQkJCQkJCTwvZGl2PgoJCQkJPGRpdiBjbGFzcz0iY29sLW1kLTkiPgoJCQkJCQkJCTwvZGl2PgoJPC9kaXY+Cgk8ZGl2IGNsYXNzPSJyb3ciPgoKCQk8ZGl2IGNsYXNzPSJjb2wtbWQtOSI+CgkJCTxkaXYgY2xhc3M9ImRpc3BsYXktdGFibGUgdGl0cmVIMyI+CgkJCQk8ZGl2IGNsYXNzPSJkaXNwbGF5LWNlbGwgbm93cmFwIj4KCQkJCQk8ZGl2IGNsYXNzPSJoMyB0ZXh0LXVwcGVyY2FzZSI+REVTQ1JJUFRJT048L2Rpdj4KCQkJCTwvZGl2PgoJCQkJPGRpdiBjbGFzcz0iZGlzcGxheS1jZWxsIHcxMDAiPgoJCQkJCTxkaXYgY2xhc3M9ImhyLWRhc2hlZCI+PC9kaXY+CgkJCQk8L2Rpdj4KCQkJPC9kaXY+CgkJCTxkaXYgY2xhc3M9ImRlc2NyaXB0aW9uIHRleHQtanVzdGlmeSI+CgkJCQk8ZGl2IGNsYXNzPSJyZWZlcmVuY2UgZm9udC1pdGFsaWMgdGV4dC1sZWZ0IHRleHQtbXV0ZWQiPgoJCQkJCVJlZiBib25tYXJjaGUJCQkJPC9kaXY+CgkJCQkqKiBFWENMVVNJVklUySAqKiBTyFZSRVMtQkFCWUxPTkUgKiogQ0hBUk1FIERFIEwnQU5DSUVOICoqIE5vdXMgdm91cyBwcm9wb3NvbnMgdW4gYXBwYXJ0ZW1lbnQgZmFtaWxpYWwsIHNpdHXpIGF1IDPobWUg6XRhZ2UgYXZlYyBBU0NFTlNFVVIsIGF1IHNlaW4gZCd1biBiZWwgaW1tZXVibGUgZHUgWElY6G1lLCBkJ3VuZSBzdXBlcmZpY2llIGRlIDEwMy44MCBtsiBjYXJyZXouIFNldWwg4CBsJ+l0YWdlLCBjZSBiaWVuIGNvbXByZW5kIDogdW5lIGVudHLpZSwgdW4gYmVhdSBkb3VibGUgc+lqb3VyIGF2ZWMgQ0hFTUlOyUUsIDMgY2hhbWJyZXMsIHVuZSBjdWlzaW5lLCB1bmUgc2FsbGUgZGUgYmFpbnMsIHVuIHdjIHPpcGFy6S4gQ2UgYmllbiBkaXNwb3NlIGRlIG5vbWJyZXV4IHJhbmdlbWVudHMgZXQgZHUgQ0hBUk1FIGRlIGwnYW5jaWVuIChQYXJxdWV0LCBNb3VsdXJlcywgQ2hlbWlu6WVzKS4gVW5lIHN0dWRldHRlIGRlIDkgbbIgbG9pIGNhcnJleiwgZGVzc2VydmllIHBhciBhc2NlbnNldXIsIHNlcmEgdmVuZHVlIG9ibGlnYXRvaXJlbWVudCBhdmVjIGwnYXBwYXJ0ZW1lbnQgYXUgcHJpeCBkZSAxNTUgMDAwIGV1cm9zIGhvbm9yYWlyZXMgZCdhZ2VuY2UgaW5jbHVzLiBEZXV4IGNhdmVzIGNvbXBs6HRlbnQgY2UgYmllbi4gKiogRXhjbHVzaXZpdOkgUGFyaXMgU0VJTkUgKiogLSA1OSwgcnVlIGR1IENoZXJjaGUtTWlkaSAtIDc1MDA2IFBhcmlzIChBQ0hBVCAtIFZFTlRFIC0gTE9DQVRJT04gLSBHRVNUSU9OIC0gyVZBTFVBVElPTiBPRkZFUlRFIFNPVVMgMjQgSCkuPHNwYW4gY2xhc3M9J3ByaWNlX2FsdXJfZGVzY3JpcHRpb24nPjxkaXYgY2xhc3M9ImZvcm1hdHRlZF9wcmljZV9hbHVyMl9kaXYiPjxzcGFuIGNsYXNzPSJob25vX2luY2x1cyI+PHNwYW4gY2xhc3M9Imhvbm9faW5jbHVzX3ByaWNlIj4qKiAxJm5ic3A7NzY0Jm5ic3A7MDAwJm5ic3A7gDwvc3Bhbj4gPHNwYW4gY2xhc3M9Imhvbm9faW5jbHVzX3RleHQiPmhvbm9yYWlyZXMgaW5jbHVzIDwvc3Bhbj48L3NwYW4+IHwgPHNwYW4gY2xhc3M9Imhvbm9fbmV0Ij48c3BhbiBjbGFzcz0iaG9ub19uZXRfcHJpY2UiPjEmbmJzcDs2OTEmbmJzcDsyNzUmbmJzcDuAPC9zcGFuPiA8c3BhbiBjbGFzcz0iaG9ub19uZXRfdGV4dCI+aG9ycyBob25vcmFpcmVzPC9zcGFuPjwvc3Bhbj4gfCA8c3BhbiBjbGFzcz0iaG9ub19wZXJjZW50Ij5Ib25vcmFpcmVzIDogNC4zMCUgVFRDIOAgbGEgY2hhcmdlIGRlIGwnYWNxdelyZXVyPC9zcGFuPjwvZGl2Pjwvc3Bhbj48ZGl2IGNsYXNzPSJtZW50aW9uc19iYXJlbWVfcHJvZHVjdCI+PGEgY2xhc3M9ImJ0biBidG4tcHJpbWFyeSIgdGFyZ2V0PSJfYmxhbmsiIHRpdGxlPSJOb3MgaG9ub3JhaXJlcyIgaHJlZj0iLi4vc2VnbWVudHMvaW1tby9jYXRhbG9nL2ltYWdlcy9tYW51ZmFjdHVyZXJzX2JhcmVtZS8yOTg1LnBkZiI+Tm9zIGhvbm9yYWlyZXM8L2E+PC9kaXY+CQkJCQkJCTwvZGl2PgoJCQk8ZGl2IGNsYXNzPSJyb3ciPgoJCQkJPGRpdiBjbGFzcz0iY29sLXNtLTgiPgoJCQkJCTxkaXYgY2xhc3M9ImRpc3BsYXktdGFibGUgdzEwMCI+CgkJCQkJCTxkaXYgY2xhc3M9ImRpc3BsYXktY2VsbCB3MzMgbm93cmFwIHRleHQtY2VudGVyIj4KCQkJCQkJCTxpIGNsYXNzPSJwZSBwZS03cy1jcm9wIHBlLTR4Ij48L2k+CgkJCQkJCTwvZGl2PgoJCQkJCQk8ZGl2IGNsYXNzPSJkaXNwbGF5LWNlbGwgdzMzIG5vd3JhcCB0ZXh0LWNlbnRlciI+CgkJCQkJCQk8aSBjbGFzcz0icGUgcGUtN3MtYm94MiBwZS00eCI+PC9pPgoJCQkJCQk8L2Rpdj4KCQkJCQkJPGRpdiBjbGFzcz0iZGlzcGxheS1jZWxsIHczMyBub3dyYXAgdGV4dC1jZW50ZXIiPgoJCQkJCQkJPGkgY2xhc3M9InBlIHBlLTdzLWNhc2ggcGUtNHgiPjwvaT4KCQkJCQkJPC9kaXY+CgkJCQkJPC9kaXY+CgkJCQkJPGRpdiBjbGFzcz0iZGlzcGxheS10YWJsZSB3MTAwIGNhcmFjIj4KCQkJCQkJPGRpdiBjbGFzcz0iZGlzcGxheS1jZWxsIHczMyAgdGV4dC1jZW50ZXIgdmVydGljYWxUb3AiPgoJCQkJCQkJMTA0bSZzdXAyOwkJCQkJCTwvZGl2PgoJCQkJCQk8ZGl2IGNsYXNzPSJkaXNwbGF5LWNlbGwgdzMzICB0ZXh0LWNlbnRlciB2ZXJ0aWNhbFRvcCI+CgkJCQkJCQk1IFBp6GNlKHMpCQkJCQkJPC9kaXY+CgkJCQkJCTxkaXYgY2xhc3M9ImRpc3BsYXktY2VsbCB3MzMgIHRleHQtY2VudGVyIHZlcnRpY2FsVG9wIj4KCQkJCQkJCTxzcGFuIGNsYXNzPSJmb3JtYXR0ZWRfcHJpY2VfYWx1cjJfc3BhbiI+PHNwYW4gY2xhc3M9Imhvbm9faW5jbHVzIj48c3BhbiBjbGFzcz0iaG9ub19pbmNsdXNfcHJpY2UiPiAxJm5ic3A7NzY0Jm5ic3A7MDAwJm5ic3A7gDwvc3Bhbj4gPHNwYW4gY2xhc3M9Imhvbm9faW5jbHVzX3RleHQiPioqPC9zcGFuPjwvc3Bhbj48L3NwYW4+CQkJCQkJPC9kaXY+CgkJCQkJPC9kaXY+CgkJCQk8L2Rpdj4KCQkJCTxkaXYgY2xhc3M9ImNvbC1zbS00IHRleHQtY2VudGVyIHNoYXJlIj4KCQkJCQk8ZGl2IGNsYXNzPSJoMiI+UGFydGFnZXIgbCdhbm5vbmNlPC9kaXY+CgkJCQkJPGEgIGhyZWY9Imh0dHBzOi8vd3d3LmZhY2Vib29rLmNvbS9zaGFyZXIvc2hhcmVyLnBocD91PWh0dHAlM0ElMkYlMkZ3d3cucGFyaXMtc2VpbmUtaW1tb2JpbGllci5jb20lMkZmaWNoZXMlMkYzLTMzLTMxXzM1ODg5NjczJTJGYXBwYXJ0ZW1lbnQtZmFtaWxpYWwtYm9uLW1hcmNoZS5odG1sIiB0YXJnZXQ9Il9ibGFuayI+CgkJCQkJCTxzcGFuIGNsYXNzPSJmYS1zdGFjayBmYS1sZyI+CgkJCQkJCSAgPGkgY2xhc3M9ImZhIGZhLWNpcmNsZS10aGluIGZhLXN0YWNrLTJ4Ij48L2k+CgkJCQkJCSAgPGkgY2xhc3M9ImZhIGZhLWZhY2Vib29rIGZhLXN0YWNrLTF4Ij48L2k+CgkJCQkJCTwvc3Bhbj4KCQkJCQk8L2E+CgkJCQkJPGEgaHJlZj0iaHR0cHM6Ly90d2l0dGVyLmNvbS9pbnRlbnQvdHdlZXQ/dXJsPWh0dHAlM0ElMkYlMkZ3d3cucGFyaXMtc2VpbmUtaW1tb2JpbGllci5jb20lMkZmaWNoZXMlMkYzLTMzLTMxXzM1ODg5NjczJTJGYXBwYXJ0ZW1lbnQtZmFtaWxpYWwtYm9uLW1hcmNoZS5odG1sIiB0YXJnZXQ9Il9ibGFuayI+CgkJCQkJCTxzcGFuIGNsYXNzPSJmYS1zdGFjayBmYS1sZyI+CgkJCQkJCSAgPGkgY2xhc3M9ImZhIGZhLWNpcmNsZS10aGluIGZhLXN0YWNrLTJ4Ij48L2k+CgkJCQkJCSAgPGkgY2xhc3M9ImZhIGZhLXR3aXR0ZXIgZmEtc3RhY2stMXgiPjwvaT4KCQkJCQkJPC9zcGFuPgoJCQkJCTwvYT4KCQkJCQk8YSBvbmNsaWNrPSJvcGVuX21vZGFsX2lmcmFtZV9nbG9iYWwoJ3RlbGxfYV9mcmllbmQucGhwP3Byb2R1Y3RzX2lkPTM1ODg5NjczJnZpZXc9cG9wdXAnKTtyZXR1cm4gZmFsc2U7IiBocmVmPSIjIj4KCQkJCQkJPHNwYW4gY2xhc3M9ImZhLXN0YWNrIGZhLWxnIj4KCQkJCQkJICA8aSBjbGFzcz0iZmEgZmEtY2lyY2xlLXRoaW4gZmEtc3RhY2stMngiPjwvaT4KCQkJCQkJICA8aSBjbGFzcz0iZmEgZmEtZW52ZWxvcGUgZmEtc3RhY2stMXgiPjwvaT4KCQkJCQkJPC9zcGFuPgoJCQkJCTwvYT4KCQkJCTwvZGl2PgoJCQk8L2Rpdj4KCQk8L2Rpdj4KCQk8ZGl2IGNsYXNzPSJjb2wtbWQtMyI+CgkJCTxkaXYgaWQ9ImNvbnRhY3RlckFnZW5jZSI+CgkJCQkJCQkJPGEgaHJlZj0iY29udGFjdF91cy5waHA/bWFudWZhY3R1cmVyX2lkPTI5ODUmcHJvZHVjdHNfaWQ9MzU4ODk2NzMiIG9uY2xpY2s9ImdhKCdzZW5kJywgJ2V2ZW50JywgJ2ZpY2hlLWJpZW4nLCAnY2xpYy1jb250YWN0ZXItbGFnZW5jZScsICdmaWNoZS1kZS1iaWVuLWNvbnRhY3Rlci1sYWdlbmNlJyk7IiBjbGFzcz0iYnRuIGJ0bi1wcmltYXJ5IGJ0bi1ibG9jayIgc3R5bGU9ImRpc3BsYXk6YmxvY2s7Ij5Db250YWN0ZXIgbCdhZ2VuY2U8L2E+CgkJCQkJCQkJPCEtLSA8ZGl2IGNsYXNzPSJoNCB0ZXh0LWNlbnRlciB0ZXh0LXVwcGVyY2FzZSI+Q29udGFjdGVyIGwnYWdlbmNlPC9kaXY+IC0tPgoJCQkJCQkJCTwhLS0KCQkJCTxzY3JpcHQ+CgkJCQkJJChmdW5jdGlvbigpewoJCQkJCQkkKCIjYWdlbmNlX2Zvcm1fZmllbGQiKS5hdHRyKCJwbGFjZWhvbGRlciIsIk1lc3NhZ2UiKTsKCQkJCQkJJCgiI2NvbnRhY3RlckFnZW5jZSAuZm9ybS1jb250cm9sIikuZWFjaChmdW5jdGlvbigpewoJCQkJCQkJJCh0aGlzKS5hdHRyKCJwbGFjZWhvbGRlciIsJCh0aGlzKS5hdHRyKCJwbGFjZWhvbGRlciIpKyIgKiIpOwoJCQkJCQl9KQoJCQkJCX0pCgkJCQk8L3NjcmlwdD4KCQkJCS0tPgoJCQkJCQkJPC9kaXY+CgkJCQkJCTxkaXYgaWQ9ImNvbnRhY3RlckFnZW5jZSI+CgkJCQk8YSB0YXJnZXQ9Il9ibGFuayIgY2xhc3M9ImJ0biBidG4tcHJpbWFyeSBidG4tYmxvY2siIHN0eWxlPSJkaXNwbGF5OmJsb2NrIiB0aXRsZT0iSW1wcmltZXIgbGEgZmljaGUgZGUgYmllbiIgIGRhdGEtdG9nZ2xlPSJ0b29sdGlwIiBkYXRhLXBsYWNlbWVudD0idG9wIiBocmVmPSJwcm9kdWN0c19wcmludC5waHA/cHJvZHVjdHNfaWQ9MzU4ODk2NzMiPkltcHJpbWVyIGxhIGZpY2hlPC9hPgoJCQk8L2Rpdj4KCQkJCQk8L2Rpdj4KCTwvZGl2PgoJPGJyPjxicj4KCTxkaXYgY2xhc3M9ImRpc3BsYXktdGFibGUgdGl0cmVIMyI+CgkJPGRpdiBjbGFzcz0iZGlzcGxheS1jZWxsIG5vd3JhcCI+CgkJCTxkaXYgY2xhc3M9ImgzIHRleHQtdXBwZXJjYXNlIj5DQVJBQ1RFUklTVElRVUVTPC9kaXY+CgkJPC9kaXY+CgkJPGRpdiBjbGFzcz0iZGlzcGxheS1jZWxsIHcxMDAiPgoJCQk8ZGl2IGNsYXNzPSJoci1kYXNoZWQiPjwvZGl2PgoJCTwvZGl2PgoJPC9kaXY+Cgk8ZGl2IGlkPSJjYXJhY3RlcmlzdGlxdWUiPgoJCTxkaXYgY2xhc3M9InJvdyI+CgkJCTxkaXYgY2xhc3M9ImNvbC1tZC03Ij4KCQkJCQkJCQk8ZGl2IGlkPSJkZXRhaWxIaWRkZW4iIGNsYXNzPSJoaWRkZW4iPjxkaXYgY2xhc3M9InBhbmVsIHBhbmVsLWRlZmF1bHQgIEdlbmVyYWwgIj4KCQkJCQk8ZGl2IGNsYXNzPSJwYW5lbC1ib2R5Ij48aDM+R+lu6XJhbDwvaDM+PHVsIGNsYXNzPSJsaXN0LWdyb3VwIj48bGkgY2xhc3M9Imxpc3QtZ3JvdXAtaXRlbSBvZGQiPjxkaXYgY2xhc3M9InJvdyI+PGRpdiBjbGFzcz0iY29sLXNtLTYiPlR5cGUgZGUgYmllbjwvZGl2PjxkaXYgY2xhc3M9ImNvbC1zbS02Ij48Yj5BcHBhcnRlbWVudDwvYj48L2Rpdj48L2Rpdj48L2xpPjxsaSBjbGFzcz0ibGlzdC1ncm91cC1pdGVtIGV2ZW4iPjxkaXYgY2xhc3M9InJvdyI+PGRpdiBjbGFzcz0iY29sLXNtLTYiPlR5cGUgZGUgdHJhbnNhY3Rpb248L2Rpdj48ZGl2IGNsYXNzPSJjb2wtc20tNiI+PGI+QSB2ZW5kcmU8L2I+PC9kaXY+PC9kaXY+PC9saT48L3VsPjwvZGl2PjwvZGl2PjxkaXYgY2xhc3M9InBhbmVsIHBhbmVsLWRlZmF1bHQgIGxvY2FsaXNhdGlvbiAiPgoJCQkJCTxkaXYgY2xhc3M9InBhbmVsLWJvZHkiPjxoMz48aW1nIHNyYz0iaW1hZ2VzL3B1Y2VfZmxlY2hlLmdpZiIgYm9yZGVyPSIwIiBpdGVtcHJvcD0iaW1hZ2UiIHdpZHRoPSIyIiBoZWlnaHQ9IjIiLz48c3BhbiBjbGFzcz0icGFnZVN1YkhlYWRpbmciPkxvY2FsaXNhdGlvbjwvc3Bhbj48L2gzPjx1bCBjbGFzcz0ibGlzdC1ncm91cCI+PGxpIGNsYXNzPSJsaXN0LWdyb3VwLWl0ZW0gb2RkIj48ZGl2IGNsYXNzPSJyb3ciPjxkaXYgY2xhc3M9ImNvbC1zbS02Ij5Db2RlIHBvc3RhbDwvZGl2PjxkaXYgY2xhc3M9ImNvbC1zbS02Ij48Yj43NTAwNzwvYj48L2Rpdj48L2Rpdj48L2xpPjxsaSBjbGFzcz0ibGlzdC1ncm91cC1pdGVtIGV2ZW4iPjxkaXYgY2xhc3M9InJvdyI+PGRpdiBjbGFzcz0iY29sLXNtLTYiPlZpbGxlPC9kaXY+PGRpdiBjbGFzcz0iY29sLXNtLTYiPjxiPlBhcmlzPC9iPjwvZGl2PjwvZGl2PjwvbGk+PGxpIGNsYXNzPSJsaXN0LWdyb3VwLWl0ZW0gb2RkIj48ZGl2IGNsYXNzPSJyb3ciPjxkaXYgY2xhc3M9ImNvbC1zbS02Ij5TZWN0ZXVyPC9kaXY+PGRpdiBjbGFzcz0iY29sLXNtLTYiPjxiPjc1MDA3PC9iPjwvZGl2PjwvZGl2PjwvbGk+PGxpIGNsYXNzPSJsaXN0LWdyb3VwLWl0ZW0gZXZlbiI+PGRpdiBjbGFzcz0icm93Ij48ZGl2IGNsYXNzPSJjb2wtc20tNiI+RXRhZ2U8L2Rpdj48ZGl2IGNsYXNzPSJjb2wtc20tNiI+PGI+MzwvYj48L2Rpdj48L2Rpdj48L2xpPjxsaSBjbGFzcz0ibGlzdC1ncm91cC1pdGVtIG9kZCI+PGRpdiBjbGFzcz0icm93Ij48ZGl2IGNsYXNzPSJjb2wtc20tNiI+Tm9tYnJlIOl0YWdlczwvZGl2PjxkaXYgY2xhc3M9ImNvbC1zbS02Ij48Yj42PC9iPjwvZGl2PjwvZGl2PjwvbGk+PC91bD48L2Rpdj48L2Rpdj48ZGl2IGNsYXNzPSJwYW5lbCBwYW5lbC1kZWZhdWx0ICBhc3BlY3RzX2ZpbmFuY2llcnMgIj4KCQkJCQk8ZGl2IGNsYXNzPSJwYW5lbC1ib2R5Ij48aDM+PGltZyBzcmM9ImltYWdlcy9wdWNlX2ZsZWNoZS5naWYiIGJvcmRlcj0iMCIgaXRlbXByb3A9ImltYWdlIiB3aWR0aD0iMiIgaGVpZ2h0PSIyIi8+PHNwYW4gY2xhc3M9InBhZ2VTdWJIZWFkaW5nIj5Bc3BlY3RzIGZpbmFuY2llcnM8L3NwYW4+PC9oMz48dWwgY2xhc3M9Imxpc3QtZ3JvdXAiPjxsaSBjbGFzcz0ibGlzdC1ncm91cC1pdGVtIG9kZCI+PGRpdiBjbGFzcz0icm93Ij48ZGl2IGNsYXNzPSJjb2wtc20tNiI+UHJpeDwvZGl2PjxkaXYgY2xhc3M9ImNvbC1zbS02Ij48Yj4xNzY0MDAwIEVVUjwvYj48L2Rpdj48L2Rpdj48L2xpPjxsaSBjbGFzcz0ibGlzdC1ncm91cC1pdGVtIGV2ZW4iPjxkaXYgY2xhc3M9InJvdyI+PGRpdiBjbGFzcz0iY29sLXNtLTYiPkNoYXJnZXMgY29wcm9wcmnpdOk8L2Rpdj48ZGl2IGNsYXNzPSJjb2wtc20tNiI+PGI+MzUxIEVVUiAvIG1vaXM8L2I+PC9kaXY+PC9kaXY+PC9saT48bGkgY2xhc3M9Imxpc3QtZ3JvdXAtaXRlbSBvZGQiPjxkaXYgY2xhc3M9InJvdyI+PGRpdiBjbGFzcz0iY29sLXNtLTYiPlRheGUgRm9uY2nocmU8L2Rpdj48ZGl2IGNsYXNzPSJjb2wtc20tNiI+PGI+MTUyMiBFVVI8L2I+PC9kaXY+PC9kaXY+PC9saT48L3VsPjwvZGl2PjwvZGl2PjxkaXYgY2xhc3M9InBhbmVsIHBhbmVsLWRlZmF1bHQgIGNvcHJvcHJpZXRlICI+CgkJCQkJPGRpdiBjbGFzcz0icGFuZWwtYm9keSI+PGgzPjxpbWcgc3JjPSJpbWFnZXMvcHVjZV9mbGVjaGUuZ2lmIiBib3JkZXI9IjAiIGl0ZW1wcm9wPSJpbWFnZSIgd2lkdGg9IjIiIGhlaWdodD0iMiIvPjxzcGFuIGNsYXNzPSJwYWdlU3ViSGVhZGluZyI+Q29wcm9wcmnpdOk8L3NwYW4+PC9oMz48dWwgY2xhc3M9Imxpc3QtZ3JvdXAiPjxsaSBjbGFzcz0ibGlzdC1ncm91cC1pdGVtIG9kZCI+PGRpdiBjbGFzcz0icm93Ij48ZGl2IGNsYXNzPSJjb2wtc20tNiI+QmllbiBlbiBjb3Byb3Byael06TwvZGl2PjxkaXYgY2xhc3M9ImNvbC1zbS02Ij48Yj5PdWk8L2I+PC9kaXY+PC9kaXY+PC9saT48bGkgY2xhc3M9Imxpc3QtZ3JvdXAtaXRlbSBldmVuIj48ZGl2IGNsYXNzPSJyb3ciPjxkaXYgY2xhc3M9ImNvbC1zbS02Ij5OYiBMb3RzIENvcHJvcHJp6XTpPC9kaXY+PGRpdiBjbGFzcz0iY29sLXNtLTYiPjxiPjI3PC9iPjwvZGl2PjwvZGl2PjwvbGk+PGxpIGNsYXNzPSJsaXN0LWdyb3VwLWl0ZW0gb2RkIj48ZGl2IGNsYXNzPSJyb3ciPjxkaXYgY2xhc3M9ImNvbC1zbS02Ij5Eb250IGxvdHMgZCdoYWJpdGF0aW9uPC9kaXY+PGRpdiBjbGFzcz0iY29sLXNtLTYiPjxiPjE1PC9iPjwvZGl2PjwvZGl2PjwvbGk+PGxpIGNsYXNzPSJsaXN0LWdyb3VwLWl0ZW0gZXZlbiI+PGRpdiBjbGFzcz0icm93Ij48ZGl2IGNsYXNzPSJjb2wtc20tNiI+UHJvY+lkdXJlcyBkaWxpZ2VudOllcyBjLyBzeW5kaWNhdCBkZSBjb3Byb3Byael06TwvZGl2PjxkaXYgY2xhc3M9ImNvbC1zbS02Ij48Yj5QYXMgZGUgcHJvY+lkdXJlIGVuIGNvdXJzPC9iPjwvZGl2PjwvZGl2PjwvbGk+PC91bD48L2Rpdj48L2Rpdj48ZGl2IGNsYXNzPSJwYW5lbCBwYW5lbC1kZWZhdWx0ICBpbnRlcmlldXIgIj4KCQkJCQk8ZGl2IGNsYXNzPSJwYW5lbC1ib2R5Ij48aDM+PGltZyBzcmM9ImltYWdlcy9wdWNlX2ZsZWNoZS5naWYiIGJvcmRlcj0iMCIgaXRlbXByb3A9ImltYWdlIiB3aWR0aD0iMiIgaGVpZ2h0PSIyIi8+PHNwYW4gY2xhc3M9InBhZ2VTdWJIZWFkaW5nIj5JbnTpcmlldXI8L3NwYW4+PC9oMz48dWwgY2xhc3M9Imxpc3QtZ3JvdXAiPjxsaSBjbGFzcz0ibGlzdC1ncm91cC1pdGVtIG9kZCI+PGRpdiBjbGFzcz0icm93Ij48ZGl2IGNsYXNzPSJjb2wtc20tNiI+Tm9tYnJlIHBp6GNlczwvZGl2PjxkaXYgY2xhc3M9ImNvbC1zbS02Ij48Yj41PC9iPjwvZGl2PjwvZGl2PjwvbGk+PGxpIGNsYXNzPSJsaXN0LWdyb3VwLWl0ZW0gZXZlbiI+PGRpdiBjbGFzcz0icm93Ij48ZGl2IGNsYXNzPSJjb2wtc20tNiI+Q2hhbWJyZXM8L2Rpdj48ZGl2IGNsYXNzPSJjb2wtc20tNiI+PGI+MzwvYj48L2Rpdj48L2Rpdj48L2xpPjxsaSBjbGFzcz0ibGlzdC1ncm91cC1pdGVtIG9kZCI+PGRpdiBjbGFzcz0icm93Ij48ZGl2IGNsYXNzPSJjb2wtc20tNiI+U2FsbGUocykgZGUgYmFpbnM8L2Rpdj48ZGl2IGNsYXNzPSJjb2wtc20tNiI+PGI+MTwvYj48L2Rpdj48L2Rpdj48L2xpPjxsaSBjbGFzcz0ibGlzdC1ncm91cC1pdGVtIGV2ZW4iPjxkaXYgY2xhc3M9InJvdyI+PGRpdiBjbGFzcz0iY29sLXNtLTYiPldDPC9kaXY+PGRpdiBjbGFzcz0iY29sLXNtLTYiPjxiPjE8L2I+PC9kaXY+PC9kaXY+PC9saT48bGkgY2xhc3M9Imxpc3QtZ3JvdXAtaXRlbSBvZGQiPjxkaXYgY2xhc3M9InJvdyI+PGRpdiBjbGFzcz0iY29sLXNtLTYiPkN1aXNpbmU8L2Rpdj48ZGl2IGNsYXNzPSJjb2wtc20tNiI+PGI+QW3pbmFn6WUv6XF1aXDpZTwvYj48L2Rpdj48L2Rpdj48L2xpPjxsaSBjbGFzcz0ibGlzdC1ncm91cC1pdGVtIGV2ZW4iPjxkaXYgY2xhc3M9InJvdyI+PGRpdiBjbGFzcz0iY29sLXNtLTYiPlPpam91ciBEb3VibGU8L2Rpdj48ZGl2IGNsYXNzPSJjb2wtc20tNiI+PGI+T3VpPC9iPjwvZGl2PjwvZGl2PjwvbGk+PGxpIGNsYXNzPSJsaXN0LWdyb3VwLWl0ZW0gb2RkIj48ZGl2IGNsYXNzPSJyb3ciPjxkaXYgY2xhc3M9ImNvbC1zbS02Ij5UeXBlIENoYXVmZmFnZTwvZGl2PjxkaXYgY2xhc3M9ImNvbC1zbS02Ij48Yj5JbmRpdmlkdWVsPC9iPjwvZGl2PjwvZGl2PjwvbGk+PC91bD48L2Rpdj48L2Rpdj48ZGl2IGNsYXNzPSJwYW5lbCBwYW5lbC1kZWZhdWx0ICBleHRlcmlldXIgIj4KCQkJCQk8ZGl2IGNsYXNzPSJwYW5lbC1ib2R5Ij48aDM+PGltZyBzcmM9ImltYWdlcy9wdWNlX2ZsZWNoZS5naWYiIGJvcmRlcj0iMCIgaXRlbXByb3A9ImltYWdlIiB3aWR0aD0iMiIgaGVpZ2h0PSIyIi8+PHNwYW4gY2xhc3M9InBhZ2VTdWJIZWFkaW5nIj5FeHTpcmlldXI8L3NwYW4+PC9oMz48dWwgY2xhc3M9Imxpc3QtZ3JvdXAiPjxsaSBjbGFzcz0ibGlzdC1ncm91cC1pdGVtIG9kZCI+PGRpdiBjbGFzcz0icm93Ij48ZGl2IGNsYXNzPSJjb2wtc20tNiI+QW5u6WUgY29uc3RydWN0aW9uPC9kaXY+PGRpdiBjbGFzcz0iY29sLXNtLTYiPjxiPjE4ODA8L2I+PC9kaXY+PC9kaXY+PC9saT48bGkgY2xhc3M9Imxpc3QtZ3JvdXAtaXRlbSBldmVuIj48ZGl2IGNsYXNzPSJyb3ciPjxkaXYgY2xhc3M9ImNvbC1zbS02Ij5OZXVmIC0gQW5jaWVuPC9kaXY+PGRpdiBjbGFzcz0iY29sLXNtLTYiPjxiPkFuY2llbjwvYj48L2Rpdj48L2Rpdj48L2xpPjwvdWw+PC9kaXY+PC9kaXY+PGRpdiBjbGFzcz0icGFuZWwgcGFuZWwtZGVmYXVsdCAgc3VyZmFjZXMgIj4KCQkJCQk8ZGl2IGNsYXNzPSJwYW5lbC1ib2R5Ij48aDM+PGltZyBzcmM9ImltYWdlcy9wdWNlX2ZsZWNoZS5naWYiIGJvcmRlcj0iMCIgaXRlbXByb3A9ImltYWdlIiB3aWR0aD0iMiIgaGVpZ2h0PSIyIi8+PHNwYW4gY2xhc3M9InBhZ2VTdWJIZWFkaW5nIj5TdXJmYWNlczwvc3Bhbj48L2gzPjx1bCBjbGFzcz0ibGlzdC1ncm91cCI+PGxpIGNsYXNzPSJsaXN0LWdyb3VwLWl0ZW0gb2RkIj48ZGl2IGNsYXNzPSJyb3ciPjxkaXYgY2xhc3M9ImNvbC1zbS02Ij5TdXJmYWNlPC9kaXY+PGRpdiBjbGFzcz0iY29sLXNtLTYiPjxiPjEwMy44IG0yPC9iPjwvZGl2PjwvZGl2PjwvbGk+PC91bD48L2Rpdj48L2Rpdj48ZGl2IGNsYXNzPSJwYW5lbCBwYW5lbC1kZWZhdWx0ICBhdXRyZXMgIj4KCQkJCQk8ZGl2IGNsYXNzPSJwYW5lbC1ib2R5Ij48aDM+PGltZyBzcmM9ImltYWdlcy9wdWNlX2ZsZWNoZS5naWYiIGJvcmRlcj0iMCIgaXRlbXByb3A9ImltYWdlIiB3aWR0aD0iMiIgaGVpZ2h0PSIyIi8+PHNwYW4gY2xhc3M9InBhZ2VTdWJIZWFkaW5nIj5BdXRyZXM8L3NwYW4+PC9oMz48dWwgY2xhc3M9Imxpc3QtZ3JvdXAiPjxsaSBjbGFzcz0ibGlzdC1ncm91cC1pdGVtIG9kZCI+PGRpdiBjbGFzcz0icm93Ij48ZGl2IGNsYXNzPSJjb2wtc20tNiI+QXNjZW5zZXVyPC9kaXY+PGRpdiBjbGFzcz0iY29sLXNtLTYiPjxiPk91aTwvYj48L2Rpdj48L2Rpdj48L2xpPjxsaSBjbGFzcz0ibGlzdC1ncm91cC1pdGVtIGV2ZW4iPjxkaXYgY2xhc3M9InJvdyI+PGRpdiBjbGFzcz0iY29sLXNtLTYiPkNhdmUocyk8L2Rpdj48ZGl2IGNsYXNzPSJjb2wtc20tNiI+PGI+MjwvYj48L2Rpdj48L2Rpdj48L2xpPjxsaSBjbGFzcz0ibGlzdC1ncm91cC1pdGVtIG9kZCI+PGRpdiBjbGFzcz0icm93Ij48ZGl2IGNsYXNzPSJjb2wtc20tNiI+SW50ZXJwaG9uZTwvZGl2PjxkaXYgY2xhc3M9ImNvbC1zbS02Ij48Yj5PdWk8L2I+PC9kaXY+PC9kaXY+PC9saT48L3VsPjwvZGl2PjwvZGl2PjxkaXYgY2xhc3M9InBhbmVsIHBhbmVsLWRlZmF1bHQgIG1hbmRhdCAiPgoJCQkJCTxkaXYgY2xhc3M9InBhbmVsLWJvZHkiPjxoMz48aW1nIHNyYz0iaW1hZ2VzL3B1Y2VfZmxlY2hlLmdpZiIgYm9yZGVyPSIwIiBpdGVtcHJvcD0iaW1hZ2UiIHdpZHRoPSIyIiBoZWlnaHQ9IjIiLz48c3BhbiBjbGFzcz0icGFnZVN1YkhlYWRpbmciPk1hbmRhdDwvc3Bhbj48L2gzPjx1bCBjbGFzcz0ibGlzdC1ncm91cCI+PGxpIGNsYXNzPSJsaXN0LWdyb3VwLWl0ZW0gb2RkIj48ZGl2IGNsYXNzPSJyb3ciPjxkaXYgY2xhc3M9ImNvbC1zbS02Ij5EaXNwb25pYmlsaXTpPC9kaXY+PGRpdiBjbGFzcz0iY29sLXNtLTYiPjxiPjE5LzAyLzIwMjA8L2I+PC9kaXY+PC9kaXY+PC9saT48L3VsPjwvZGl2PjwvZGl2PjxkaXYgY2xhc3M9InBhbmVsIHBhbmVsLWRlZmF1bHQgIGRpYWdub3N0aWNzICI+CgkJCQkJPGRpdiBjbGFzcz0icGFuZWwtYm9keSI+PGgzPjxpbWcgc3JjPSJpbWFnZXMvcHVjZV9mbGVjaGUuZ2lmIiBib3JkZXI9IjAiIGl0ZW1wcm9wPSJpbWFnZSIgd2lkdGg9IjIiIGhlaWdodD0iMiIvPjxzcGFuIGNsYXNzPSJwYWdlU3ViSGVhZGluZyI+RGlhZ25vc3RpY3M8L3NwYW4+PC9oMz48dWwgY2xhc3M9Imxpc3QtZ3JvdXAiPjxsaSBjbGFzcz0ibGlzdC1ncm91cC1pdGVtIG9kZCI+PGRpdiBjbGFzcz0icm93Ij48ZGl2IGNsYXNzPSJjb2wtc20tNiI+Q29uc28gRW5lcmc8L2Rpdj48ZGl2IGNsYXNzPSJjb2wtc20tNiI+PGI+RjwvYj48L2Rpdj48L2Rpdj48L2xpPjxsaSBjbGFzcz0ibGlzdC1ncm91cC1pdGVtIGV2ZW4iPjxkaXYgY2xhc3M9InJvdyI+PGRpdiBjbGFzcz0iY29sLXNtLTYiPlZhbGV1ciBjb25zbyBhbm51ZWxsZSDpbmVyZ2llPC9kaXY+PGRpdiBjbGFzcz0iY29sLXNtLTYiPjxiPjM5OCBrV2gvbTIgcGFyIGFuPC9iPjwvZGl2PjwvZGl2PjwvbGk+PGxpIGNsYXNzPSJsaXN0LWdyb3VwLWl0ZW0gb2RkIj48ZGl2IGNsYXNzPSJyb3ciPjxkaXYgY2xhc3M9ImNvbC1zbS02Ij5HYXogRWZmZXQgZGUgU2VycmU8L2Rpdj48ZGl2IGNsYXNzPSJjb2wtc20tNiI+PGI+QzwvYj48L2Rpdj48L2Rpdj48L2xpPjxsaSBjbGFzcz0ibGlzdC1ncm91cC1pdGVtIGV2ZW4iPjxkaXYgY2xhc3M9InJvdyI+PGRpdiBjbGFzcz0iY29sLXNtLTYiPlZhbGV1ciBHYXogRWZmZXQgZGUgc2VycmU8L2Rpdj48ZGl2IGNsYXNzPSJjb2wtc20tNiI+PGI+MTIgS2cgQ08yL20yL2FuPC9iPjwvZGl2PjwvZGl2PjwvbGk+PC91bD48L2Rpdj48L2Rpdj48L2Rpdj4KCQkJCTxkaXYgaWQ9ImRldGFpbENhcmFjIiBjbGFzcz0icm93Ij4KCQkJCQk8ZGl2IGNsYXNzPSJjb2wtbWQtNiBjb2wtc20tNiI+CgkJCQkJCTx0YWJsZSBjbGFzcz0idGFibGUiPgoJCQkJCQk8L3RhYmxlPgoJCQkJCTwvZGl2PgoJCQkJCTxkaXYgY2xhc3M9ImNvbC1tZC02IGNvbC1zbS02Ij4KCQkJCQkJPHRhYmxlIGNsYXNzPSJ0YWJsZSI+CgkJCQkJCTwvdGFibGU+CgkJCQkJPC9kaXY+CgkJCQkJPGRpdiBjbGFzcz0iY29sLW1kLTEyIj48ZGl2IGNsYXNzPSJidG4gYnRuLWRlZmF1bHQgbW9yZS1jcml0ZXJpYSI+UGx1cyBkZSBjYXJhY3TpcmlzdGlxdWVzIDxpIGNsYXNzPSJwZSBwZS03cy1hbmdsZS1kb3duIHBlLTJ4IHBlLXZhIj48L2k+PC9kaXY+PC9kaXY+CgkJCQk8L2Rpdj4KCQkJCQkJCTwvZGl2PgoJCQk8ZGl2IGNsYXNzPSJjb2wtbWQtNSI+CgkJCQk8ZGl2IGNsYXNzPSJ0ZXh0LWNlbnRlciI+CgkJCQkJPGRpdiBjbGFzcz0iYmlsYW5zX2VuZXJnaWUiPjxkaXYgY2xhc3M9ImRwZV9pdGVtIiBpZD0iaW5mb3NEUEUiPjxpbWcgc3JjPSJhZG1pbi9pbWFnZXMvZHBlL0RQRV9GXzM5OC5wbmciIGJvcmRlcj0iMCIgaXRlbXByb3A9ImltYWdlIiB0aXRsZT0iIENvbnNvbW1hdGlvbiDpbmVyZ2V0aXF1ZSAiIGFsdD0iIENvbnNvbW1hdGlvbiDpbmVyZ2V0aXF1ZSIgd2lkdGg9IjE4MCIgaGVpZ2h0PSIxODAiIHN0eWxlPScnLz48L2Rpdj48ZGl2IGNsYXNzPSJkcGVfaXRlbSIgaWQ9ImluZm9zR0FaIj48aW1nIHNyYz0iYWRtaW4vaW1hZ2VzL2RwZS9HRVNfQ18xMi5wbmciIGJvcmRlcj0iMCIgaXRlbXByb3A9ImltYWdlIiB0aXRsZT0iIEZhaWJsZSDpbWlzc2lvbiBkZSBHRVMgIiBhbHQ9IiBGYWlibGUg6W1pc3Npb24gZGUgR0VTIiB3aWR0aD0iMTgwIiBoZWlnaHQ9IjE4MCIgc3R5bGU9JycvPjwvZGl2PjwvZGl2PgkJCQk8L2Rpdj4KCQkJPC9kaXY+CgkJPC9kaXY+Cgk8L2Rpdj4KCgoJCQkJCQkJCTxkaXYgaWQ9Im1vZE91dGlscyI+Cjxici8+CjwvZGl2PgoKPHNjcmlwdCBsYW5ndWFnZT0iSmF2YVNjcmlwdCI+CmZ1bmN0aW9uIEZyYWlzTm90YWlyZSgpCnsKCS8vLS0gSW5pdGlhbGlzYXRpb24KCXZhciBtb250YW50LHRheGVzLGZyYWlzbm90YWlyZSx0YXV4X25vdGFpcmUsdGF1eCxkZWJvdXJzLGh5cG90aGVxdWUsdGF1eF9oeXBvdGhlcXVlLGVucmVnaXN0cmVtZW50LHRhdXhfZW5yZWdpc3RyZW1lbnQ7CgkJbW9udGFudCA9IGRvY3VtZW50LmZvcm1zWyJuZXdfcHJvZHVjdCJdLnByb2R1Y3RzX3ByaWNlX25ldF92ZW5kZXVyLnZhbHVlOwoJCQoJaWYgKGRvY3VtZW50LmZvcm1zWyJuZXdfcHJvZHVjdCJdLnByb2R1Y3RzX3ByaWNlX25ldF92ZW5kZXVyLnZhbHVlICE9ICcnKQoJewoJCQoJCXN3aXRjaCAodHJ1ZSkgewoJCQljYXNlIChtb250YW50PD02NTAwKToKCQkJdGF1eF9ub3RhaXJlID0gNCAvIDEwMDsKCQkJYWpvdXRfbm90YWlyZSA9IDA7CgkJCWJyZWFrOwoJCQljYXNlIChtb250YW50ID4gNjUwMCkgJiYgKG1vbnRhbnQgPD0xNzAwMCk6CgkJCXRhdXhfbm90YWlyZSA9IDEuNjUgLyAxMDA7CgkJCWFqb3V0X25vdGFpcmUgPSAxNTIsNzU7CgkJCWJyZWFrOwoJCQljYXNlIChtb250YW50ID4gMTcwMDApICYmIChtb250YW50IDw9NjAwMDApOgoJCQl0YXV4X25vdGFpcmUgPSAxLjEgLyAxMDA7CgkJCWFqb3V0X25vdGFpcmUgPSAyNDYsMjU7CgkJCWJyZWFrOwoJCQlkZWZhdWx0OgoJCQl0YXV4X25vdGFpcmUgPSAwLjgyNSAvIDEwMDsKCQkJYWpvdXRfbm90YWlyZSA9IDQxMSwyNTsKCQkJYnJlYWs7CgkJfQoJCQoJCWlmIChkb2N1bWVudC5mb3Jtc1sibmV3X3Byb2R1Y3QiXS50eXBlX2xvZ2VtZW50WzFdLmNoZWNrZWQpCgkJewoKCQkJdGF1eFRWQSAgPSAyMCAvIDEwMDsKCQkJdGF1eF9lbnJlZ2lzdHJlbWVudCA9IDUuOCAvIDEwMDsKCQkJdGF1eF9oeXBvdGhlcXVlID0gMC4xMCAvIDEwMDsKCQkJZGVib3VycyA9IDEwMDA7CgkJCQoJCQllbnJlZ2lzdHJlbWVudD0gbW9udGFudCAqIHRhdXhfZW5yZWdpc3RyZW1lbnQ7CgkJCWh5cG90aGVxdWUgPSBtb250YW50ICogdGF1eF9oeXBvdGhlcXVlOwoKCQkJLy8tLSBGcmFpcyBkZSBub3RhaXJlCgkJCWZyYWlzbm90YWlyZSA9IChtb250YW50KnRhdXhfbm90YWlyZSkgKyBham91dF9ub3RhaXJlOwoJCQlmcmFpc25vdGFpcmUgPSBmcmFpc25vdGFpcmUgKyAoZnJhaXNub3RhaXJlKnRhdXhUVkEpOwoJCQlmcmFpc25vdGFpcmUgPSBmcmFpc25vdGFpcmUgKyBoeXBvdGhlcXVlICsgZW5yZWdpc3RyZW1lbnQgKyBkZWJvdXJzOwoJCQlmcmFpc25vdGFpcmUgPSBNYXRoLnJvdW5kKGZyYWlzbm90YWlyZSk7CgkJCQoJCX0KCQllbHNlCgkJewoJCQl0YXV4VFZBICA9IDIwIC8gMTAwOwoJCQl0YXV4X2h5cG90aGVxdWUgPSAwLjEwIC8gMTAwOwoJCQlwdWJsaWNpdGVfZm9uY2llcmUgPSBtb250YW50ICogMC44MzM7CgkJCXB1YmxpY2l0ZV9mb25jaWVyZSA9IHB1YmxpY2l0ZV9mb25jaWVyZSAqICgwLjcxNS8xMDApOwoJCQlkZWJvdXJzID0gMTAwMDsKCQkJCgkJCWh5cG90aGVxdWUgPSBtb250YW50ICogdGF1eF9oeXBvdGhlcXVlOwoKCQkJLy8tLSBGcmFpcyBkZSBub3RhaXJlCgkJCWZyYWlzbm90YWlyZSA9IChtb250YW50KnRhdXhfbm90YWlyZSkgKyBham91dF9ub3RhaXJlOwoJCQlmcmFpc25vdGFpcmUgPSBmcmFpc25vdGFpcmUgKyAoZnJhaXNub3RhaXJlKnRhdXhUVkEpOwoJCQlmcmFpc25vdGFpcmUgPSBmcmFpc25vdGFpcmUgKyBoeXBvdGhlcXVlICsgcHVibGljaXRlX2ZvbmNpZXJlICsgZGVib3VyczsKCQkJZnJhaXNub3RhaXJlID0gTWF0aC5yb3VuZChmcmFpc25vdGFpcmUpOwoJCX0KCgkJCS8vLS0gQWZmaWNoYWdlIHLpc3VsdGF0CgkJCWRvY3VtZW50LmZvcm1zWyJuZXdfcHJvZHVjdCJdLnByb2R1Y3RzX0ZyYWlzLnZhbHVlID0gZnJhaXNub3RhaXJlOwoJfQp9CgoKLyoqCiAqICBDYWxjdWxlIHVuZSBlc3RpbWF0aW9uIGR1IG1vbnRhbnQgZCd1biBsb3llcgogKiAgZW4gZm9uY3Rpb24gZCd1biByYXRpbyBwculk6WZpbmkuCiAqICAKICogIEByZXR1cm4gbnVsbAogKiAgQGF1dGhvciBzZUxvZ2VyLmNvbQogKi8KZnVuY3Rpb24gZXN0aW1lTG95ZXIoKSB7Cgl2YXIgcmV2ZW51cyA9IDA7IC8vIG1vbnRhbnQgZGVzIHJldmVudXMgbWVuc3VlbHMKCXZhciBsb3llciA9IDA7IC8vIG1vbnRhbnQgZXN0aW3pIGR1IGxveWVyIG1lbnN1ZWwKCXZhciByYXRpbyA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJyZXZlbnVzX3JhdGlvIikudmFsdWU7IC8vIHJhdGlvIHJldmVudSAvIGxveWVyIHJlY29tbWFuZOkKCWxveWVyID0gbnVtTm9ybWFsaXNlKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJtb250YW50X2xveWVyIikudmFsdWUpOwoJcmV2ZW51cyA9IG51bU5vcm1hbGlzZShkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgicmV2ZW51c19tZW5zdWVscyIpLnZhbHVlKTsKCQoJaWYgKGlzTmFOKHJldmVudXMpKSB7CgkJZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoInJldmVudXNfbWVuc3VlbHMiKS52YWx1ZSA9IDA7CgkJcmV2ZW51cyA9IDA7CgkJYWxlcnQoIlZvdXMgZGV2ZXogZW50cmVyIHVuIHJldmVudSB2YWxpZGUuIik7CgkJZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoIm1vbnRhbnRfbG95ZXIiKS52YWx1ZSA9IDA7Cgl9IAoJaWYgKGlzTmFOKHJhdGlvKSkgewoJCWRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJyZXZlbnVzX3JhdGlvIikudmFsdWUgPSAzMy4zOwoJCXJhdGlvID0gMDsKCQlhbGVydCgnVm90cmUgcmF0aW8gblwnZXN0IHBhcyB2YWxpZGUuJyk7CgkJZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoIm1vbnRhbnRfbG95ZXIiKS52YWx1ZSA9IDA7Cgl9CWVsc2UgewoJCWxveWVyID0gcGFyc2VJbnQocmV2ZW51cyAqIHJhdGlvKSAvIDEwMDsKCQlkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgibW9udGFudF9sb3llciIpLnZhbHVlID0gbnVtRm9ybWF0KGxveWVyKTsKCX0KCQoJCgkKCQp9CgovKioKICogU+lsZWN0aW9ubmUgdW4gb2JqZXQgcGFyIHNvbiBpZGVudGlmaWFudC4KICogCiAqIEBwYXJhbSBpZDogaWRlbnRpZmlhbnQgZGUgbCdvYmpldAogKiBAcmV0dXJuIG9iamV0OiBvYmpldCBz6WxlY3Rpb25u6QogKi8KZnVuY3Rpb24gZ2V0T2JqKGlkKSB7CglvYmpldCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGlkKTsKCXJldHVybiBvYmpldDsKfQoKLyoqCiAqIE1ldCDgIDAgbGVzIGNoYW1wcyBub24tcmVtcGxpcyBkdSBmb3JtdWxhaXJlCiAqLwpmdW5jdGlvbiByYVplcm8oY2hhbXBzKSB7Cglmb3IgKHZhciBpID0gMDsgaSA8IGNoYW1wcy5sZW5ndGggOyBpKyspewoJCWlmKGlzTmFOKGNoYW1wc1tpXS52YWx1ZSkgfHwgIWNoYW1wc1tpXS52YWx1ZSl7CgkJCWNoYW1wc1tpXS52YWx1ZSA9IDA7CgkJfQoJfQp9CgovKioKICogIEVmZmVjdHVlIGxlcyBjYWxjdWxzIHN1aXZhbnRzIDogCiAqICAqIG5vbWJyZSBkZSBNZW5zdWFsaXTpcywKICogICogbW9udGFudCBkZXMgTWVuc3VhbGl06XMsIAogKiAgKiBtb250YW50IGRlIGwnZW1wcnVudC4KICogIAogKiAgQHBhcmFtIHdoYXQ6IGlkZW50aWZpYW50IGR1IGNhbGN1bCDgIGVmZmVjdHVlcgogKiAgQHJldHVybiBudWxsCiAqICBAYXV0aG9yIHNlTG9nZXIuY29tCiAqLwpmdW5jdGlvbiBNTV9jYWxjKHdoYXQpIHsKCXZhciB0OyAvLyB0YXV4IGRlIGwnZW1wcnVudAoJdmFyIGEgPSAwOyAvLyBhcHBvcnQgaW5pdGlhbAoJdmFyIGM7IC8vIG1vbnRhbnQgZGUgbCdlbXBydW50Cgl2YXIgbjsgLy8gbm9tYnJlIGRlIE1lbnN1YWxpdOlzCgl2YXIgbTsgLy8gbW9udGFudCBkZXMgTWVuc3VhbGl06XMKCXZhciByZXN1bHRhdDsKCQkKCXN3aXRjaCAod2hhdCkgewoJY2FzZSAnbWVucyc6CgkJCgkJdmFyIG1lbnNfdGF1eCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJtZW5zX3RhdXgiKTsKCQkvLyB2YXIgbWVuc19hcHBvcnQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgibWVuc19hcHBvcnQiKTsKCQl2YXIgbWVuc19lbXBydW50ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoIm1lbnNfZW1wcnVudCIpOwoJCXZhciBtZW5zX25ibWVucyA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJtZW5zX25ibWVucyIpOwoKCQkvKiBvbiBtZXQg4CB66XJvIGxlcyBjaGFtcHMgc+lsZWN0aW9ubulzIHBvdXIgY29tbWVuY2VyICovCgkJdmFyIGNoYW1wcyA9IFtdOyAvLyBjaGFtcHMgZHUgZm9ybXVsYWlyZQoJCWNoYW1wcy5wdXNoKG1lbnNfdGF1eCk7CgkJLy8gY2hhbXBzLnB1c2gobWVuc19hcHBvcnQpOwoJCWNoYW1wcy5wdXNoKG1lbnNfZW1wcnVudCk7CgkJY2hhbXBzLnB1c2gobWVuc19uYm1lbnMpOwoJCXJhWmVybyhjaGFtcHMpOwoJCS8qIGZpbiBkZSBtaXNlIOAgeulybyAqLwoJCQoJCXQgPSBudW1Ob3JtYWxpc2UobWVuc190YXV4LnZhbHVlKSAvIDEwMDsKCQkvLyBhID0gbnVtTm9ybWFsaXNlKG1lbnNfYXBwb3J0LnZhbHVlKTsKCQkvLyBjID0gbnVtTm9ybWFsaXNlKG1lbnNfZW1wcnVudC52YWx1ZSkgLSBhOwoJCWMgPSBudW1Ob3JtYWxpc2UobWVuc19lbXBydW50LnZhbHVlKTsKCQluID0gbnVtTm9ybWFsaXNlKG1lbnNfbmJtZW5zLnZhbHVlKTsKCQkKCQlpZiAoICh0IDwgMC4wMSkgfHwgKHQgPiAwLjA5KSApCgkJCWFsZXJ0KCdWb3VzIGRldmV6IHNhaXNpciB1biB0YXV4IGNvbXByaXMgZW50cmUgMSUgZXQgOSUnKTsKCQllbHNlIHsKCQkJdCA9IHQgLyAxMjsKCQkJaWYgKGRvY3VtZW50LmdldEVsZW1lbnRzQnlOYW1lKCJtZW5zX2R1cmVlIilbMV0uY2hlY2tlZCkgewoJCQkJbiA9IG4gKiAxMjsKCQkJfQoJCQlpZiAobiA9PSAwKSB7CgkJCQlhbGVydCgiVm91cyBkZXZleiBzYWlzaXIgdW5lIGR1cullIGQnZW1wcnVudC4iKTsKCQkJfSBlbHNlIHsKCQkJCXJlc3VsdGF0ID0gTWF0aC5yb3VuZCgxMDAgKiBjICogKHQgLyAoMSAtICgxIC8gTWF0aC5wb3coMSArIHQsIG4pKSkpKSAvIDEwMDsKCQkJCWRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJtZW5zX21lbnMiKS52YWx1ZSA9IG51bUZvcm1hdChyZXN1bHRhdCk7OwoJCQl9CgkJfQoJCWJyZWFrOwoJCQoJY2FzZSAnZW1wcnVudCc6CgkJCgkJdmFyIGVtcHJ1bnRfdGF1eCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJlbXBydW50X3RhdXgiKTsKCQkvLyB2YXIgZW1wcnVudF9hcHBvcnQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiZW1wcnVudF9hcHBvcnQiKTsKCQl2YXIgZW1wcnVudF9uYm1lbnMgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiZW1wcnVudF9uYm1lbnMiKTsKCQl2YXIgZW1wcnVudF9tZW5zID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImVtcHJ1bnRfbWVucyIpOwoJCQoJCS8qIG9uIG1ldCDgIHrpcm8gbGVzIGNoYW1wcyBz6WxlY3Rpb25u6XMgcG91ciBjb21tZW5jZXIgKi8KCQl2YXIgY2hhbXBzID0gW107IC8vIGNoYW1wcyBkdSBmb3JtdWxhaXJlCgkJY2hhbXBzLnB1c2goZW1wcnVudF90YXV4KTsKCQkvLyBjaGFtcHMucHVzaChlbXBydW50X2FwcG9ydCk7CgkJY2hhbXBzLnB1c2goZW1wcnVudF9uYm1lbnMpOwoJCWNoYW1wcy5wdXNoKGVtcHJ1bnRfbWVucyk7CgkJcmFaZXJvKGNoYW1wcyk7CgkJLyogZmluIGRlIG1pc2Ug4CB66XJvICovCQkKCQkKCQkKCQl0ID0gbnVtTm9ybWFsaXNlKGVtcHJ1bnRfdGF1eC52YWx1ZSkgLyAxMDA7IC8vIHRhdXggaW50ZXJldCArIGFzc3VyYW5jZQoJCS8vIGEgPSBudW1Ob3JtYWxpc2UoZW1wcnVudF9hcHBvcnQudmFsdWUpOwoJCW4gPSBudW1Ob3JtYWxpc2UoZW1wcnVudF9uYm1lbnMudmFsdWUpOwoJCW0gPSAgbnVtTm9ybWFsaXNlKGVtcHJ1bnRfbWVucy52YWx1ZSk7CgkJCgkJaWYgKCh0IDwgMC4wMSkgfHwgKHQgPiAwLjA5KSkKCQkJYWxlcnQoJ1ZvdXMgZGV2ZXogc2Fpc2lyIHVuIHRhdXggY29tcHJpcyBlbnRyZSAxJSBldCA5JScpOwoJCWVsc2UgewoJCQl0ID0gdCAvIDEyOwoJCQlpZiAoZG9jdW1lbnQuZ2V0RWxlbWVudHNCeU5hbWUoImVtcHJ1bnRfZHVyZWUiKVsxXS5jaGVja2VkKSB7CgkJCQluID0gbiAqIDEyOwoJCQl9CgkJCXJlc3VsdGF0ID0gCQlNYXRoLnJvdW5kKChtICogKCgxIC0gKDEgLyBNYXRoLnBvdygxICsgdCwgbikpKSAvIHQgKSkpOwoJCQkvLyByZXN1bHRhdCA9IE1hdGgucm91bmQoKG0gKiAoKDEgLSAoMSAvIE1hdGgucG93KDEgKyB0LCBuKSkpIC8gdCkgLSBhKSk7CgkJCWRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJlbXBydW50X2VtcHJ1bnQiKS52YWx1ZSA9IG51bUZvcm1hdChyZXN1bHRhdCk7CgkJfQoJCWJyZWFrOwoJCQoJY2FzZSAnbmJtZW5zJzoKCQkKCQl2YXIgbmJtZW5zX3RhdXggPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgibmJtZW5zX3RhdXgiKTsKCQl2YXIgbmJtZW5zX2FwcG9ydCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJuYm1lbnNfYXBwb3J0Iik7CgkJdmFyIG5ibWVuc19lbXBydW50ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoIm5ibWVuc19lbXBydW50Iik7CgkJdmFyIG5ibWVuc19tZW5zID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoIm5ibWVuc19tZW5zIik7CgkJCgkJLyogb24gbWV0IOAgeulybyBsZXMgY2hhbXBzIHPpbGVjdGlvbm7pcyBwb3VyIGNvbW1lbmNlciAqLwoJCXZhciBjaGFtcHMgPSBbXTsgLy8gY2hhbXBzIGR1IGZvcm11bGFpcmUKCQljaGFtcHMucHVzaChuYm1lbnNfdGF1eCk7CgkJY2hhbXBzLnB1c2gobmJtZW5zX2FwcG9ydCk7CgkJY2hhbXBzLnB1c2gobmJtZW5zX2VtcHJ1bnQpOwoJCWNoYW1wcy5wdXNoKG5ibWVuc19tZW5zKTsKCQlyYVplcm8oY2hhbXBzKTsKCQkvKiBmaW4gZGUgbWlzZSDgIHrpcm8gKi8KCQkKCQl0ID0gbnVtTm9ybWFsaXNlKG5ibWVuc190YXV4LnZhbHVlKSAvIDEwMDsKCQlhID0gbnVtTm9ybWFsaXNlKG5ibWVuc19hcHBvcnQudmFsdWUpOwoJCWMgPSBudW1Ob3JtYWxpc2UobmJtZW5zX2VtcHJ1bnQudmFsdWUpIC0gYTsKCgkJbSA9IG51bU5vcm1hbGlzZShuYm1lbnNfbWVucy52YWx1ZSk7CgkJaWYgKCh0IDwgMC4wMSkgfHwgKHQgPiAwLjA5KSkKCQkJYWxlcnQoIlZvdXMgZGV2ZXogc2Fpc2lyIHVuIHRhdXggY29tcHJpcyBlbnRyZSAxJSBldCA5JS4iKTsKCQllbHNlIHsKCQkJdCA9IHQgLyAxMjsKCQkJcmVzdWx0YXQgPSBNYXRoLnJvdW5kKE1hdGgubG9nKC0xIC8gKCgoYyAvIG0pICogdCkgLSAxKSkgLyBNYXRoLmxvZygxICsgdCkpOwoJCQlkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgibmJtZW5zX25ibWVucyIpLnZhbHVlID0gcmVzdWx0YXQ7CgkJCWRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJuYm1lbnNfbmJtZW5zIikudmFsdWUgKz0gIiBtb2lzICgiCgkJCQkJKyBNYXRoLnJvdW5kKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJuYm1lbnNfbmJtZW5zIikudmFsdWUgLyAxMikKCQkJCQkrICcgYW4nCgkJCQkJKyAoKE1hdGgucm91bmQoZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoIm5ibWVuc19uYm1lbnMiKS52YWx1ZSAvIDEyKSA+IDEpID8gInMiCgkJCQkJCQk6ICcnKSArICcpJzsKCQl9CgkJYnJlYWs7Cgl9Owp9CgovKioKICogIG1vZGlmaWUgbGUgZm9ybWF0IGQndW4gbm9tYnJlCiAqICBham91dGUgdW4gc+lwYXJhdGV1ciBkZSBtaWxsaWVycwogKiAgY29udmVydGl0IGxlcyBwb2ludHMgcGFyIGRlcyB2aXJndWxlcwogKiAgCiAqICBAcGFyYW0gbG9uZ051bSB7U3RyaW5nfSBsYSB2YWxldXIg4CB0cmFpdGVyCiAqICBAcmV0dXJuIGxhIHZhbGV1ciBmb3JtYXR06WUgc291cyBmb3JtZSBkZSBjaGHubmUKICogIEBhdXRob3IgS2VpdGggSmVuY2kgPG1yZWRrai5jb20+CiAqICBAYXV0aG9yIEZyYW7nb2lzIEJhZGllciA8c2VMb2dlci5jb20+CiAqLwpmdW5jdGlvbiBudW1Gb3JtYXQobG9uZ051bSkKeyAgIAogICAgLy8gZXhlbXBsZSBkZSBz6XBhcmF0ZXVyIDogVW5pY29kZSBtZWRpdW0gbWF0aGVtYXRpY2FsIHNwYWNlIFx1MjA1RgogICAgdmFyIHNlcGFyYXRvciA9ICIgIjsKICAgIHZhciByZXN1bHRhdDsKICAgIGxvbmdOdW0gPSBsb25nTnVtICsgIiI7CiAgICB4ID0gbG9uZ051bS5zcGxpdCgiLiIpOwogICAgeDEgPSB4WzBdOwogICAgeDIgPSB4Lmxlbmd0aCA+IDEgPyAiLiIgKyB4WzFdIDogIiI7CiAgICB2YXIgcmVnZXggPSAvKFxkKykoXGR7M30pLzsKICAgIHdoaWxlIChyZWdleC50ZXN0KHgxKSkgewogICAgICAgIHgxID0geDEucmVwbGFjZShyZWdleCwgIiQxIiArIHNlcGFyYXRvciArICIkMiIpOwogICAgfQogICAgcmVzdWx0YXQgPSB4MSArIHgyOwogICAgcmV0dXJuIHJlc3VsdGF0LnJlcGxhY2UoIi4iLCAiLCIpOwp9CgovKioKICogIG5vcm1hbGlzZSB1bmUgdmFsZXVyIG51belyaXF1ZQogKiAgCiAqICBAcGFyYW0gdmFsIChTdHJpbmcpIHZhbGV1ciDgIHRyYWl0ZXIKICogIEByZXR1cm4gdmFsZXVyIG5vcm1hbGlz6WUKICogIEBhdXRob3IgRnJhbudvaXMgQmFkaWVyIDxzZUxvZ2VyLmNvbT4KICovCmZ1bmN0aW9uIG51bU5vcm1hbGlzZSh2YWwpCnsKCXZhbCA9IHZhbCArICIiOwoJdmFsID0gdmFsLnJlcGxhY2UoLywvZ2ksICIuIik7CiAgICB2YWwgPSB2YWwucmVwbGFjZSgvXHMrL2dpLCAiIik7CiAgICAKICAgIHJldHVybiBwYXJzZUZsb2F0KHZhbCk7Cn0KCiAgdmFyIF90bj0wOwogICBmdW5jdGlvbiBUZXN0TnVtKGNoYW1wLGZtdCkKICAgewogICAgdmFyIHJldD0wOwogICAgdmFyIHM9Y2hhbXA7CiAgICB2YXIgaTEsaTIsYzsKICAgIF90bj0wOwogICAgaTE9MDsKICAgIGkyPXMubGVuZ3RoOwogICAgaWYoaTE8aTIpCiAgICB7CiAgICAgdmFyIE1heEVudGllcixNYXhEZWNpLE5lZ09LPTAsTmJFbnRpZXI9MCxOYkRlY2k9MCxpVmlyZz0wLGksczI9IiI7CiAgICAgaWYoZm10PDApCiAgICAgewogICAgICBOZWdPSz0xOwogICAgICBmbXQ9LWZtdDsKICAgICB9CiAgICAgTWF4RW50aWVyPWZtdC8xMDsKICAgICBNYXhEZWNpPWZtdCUxMDsKICAgICBmb3IoaT1pMTtpPGkyO2krKykKICAgICB7CiAgICAgIGM9cy5jaGFyQXQoaSk7CiAgICAgIGlmKChjPj0nMCcpJiYoYzw9JzknKSkKICAgICAgewogICAgICAgaWYoaVZpcmcpIAogICAgICAgeyAKICAgICAgICBOYkRlY2krKzsgCiAgICAgICAgaWYoTmJEZWNpPk1heERlY2kpIAogICAgICAgIHsgCiAgICAgICAgIHJldD0tMzsgCiAgICAgICAgIGJyZWFrOyAKICAgICAgICB9CiAgICAgICB9CiAgICAgICBlbHNlIAogICAgICAgeyAKICAgICAgICBOYkVudGllcisrOyAKICAgICAgICBpZihOYkVudGllcj5NYXhFbnRpZXIpIAogICAgICAgIHsgCiAgICAgICAgIHJldD0tMjsgCiAgICAgICAgIGJyZWFrOyAKICAgICAgICB9IAogICAgICAgfQogICAgICB9CiAgICAgIGVsc2UKICAgICAgaWYoKGM9PScuJyl8fChjPT0nLCcpKQogICAgICB7IAogICAgICAgaWYoaVZpcmcpIAogICAgICAgeyAKICAgICAgICByZXQ9LTE7IAogICAgICAgIGJyZWFrOyAKICAgICAgIH0KICAgICAgIGlWaXJnPWkrMTsKICAgICAgIGM9Jy4nOwogICAgICB9CiAgICAgIGVsc2UKICAgICAgaWYoYz09Jy0nKQogICAgICB7IAogICAgICAgaWYoKCFOZWdPSyl8fChpPmkxKSkKICAgICAgIHsKICAgICAgICByZXQ9LTQ7IAogICAgICAgIGJyZWFrOyAKICAgICAgIH0KICAgICAgfQogICAgICBlbHNlCiAgICAgIHsgCiAgICAgICByZXQ9LTE7CiAgICAgICBicmVhazsKICAgICAgfQogICAgICBzMis9YzsKICAgICB9CiAgICAgaWYoIXJldCkKICAgICB7CiAgICAgIF90bj0oaVZpcmcpID8gcGFyc2VGbG9hdChzMikgOiBwYXJzZUludChzMik7CiAgICAgIHJldD0xOwogICAgIH0KICAgIH0KICAgIHJldHVybihyZXQpOyAKICAgfQoKICAgZnVuY3Rpb24gR2V0TnVtKGNoYW1wLCBmbXQpCiAgIHsgCiAgICBUZXN0TnVtKGNoYW1wLGZtdCk7IAogICAgcmV0dXJuKF90bik7CiAgIH0KCiAgIGZ1bmN0aW9uIGNhbGN1bCgpCiAgIHsKICAgIHdpdGggKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdlbmRldHRlbWVudCcpKQogICAgewogICAgIHQxLnZhbHVlPUdldE51bSh2MS52YWx1ZSw4MikqR2V0TnVtKG0xLnZhbHVlLDIwKSsKICAgICBHZXROdW0odjIudmFsdWUsODIpKkdldE51bShtMi52YWx1ZSwyMCkrCiAgICAgR2V0TnVtKHYzLnZhbHVlLDgyKSpHZXROdW0obTMudmFsdWUsMjApKwogICAgIEdldE51bSh2NC52YWx1ZSwxMjIpOwogICAgIHQyLnZhbHVlPUdldE51bSh2NS52YWx1ZSw4MikqR2V0TnVtKG01LnZhbHVlLDIwKSsKICAgICBHZXROdW0odjYudmFsdWUsODIpKkdldE51bShtNi52YWx1ZSwyMCk7CiAgICAgdDMudmFsdWU9dDEudmFsdWUtdDIudmFsdWU7CiAgICAgdDQudmFsdWU9R2V0TnVtKHQzLnZhbHVlLDEyMikqR2V0TnVtKHY3LnZhbHVlLDIyKS8xMDA7CiAgICAgdDUudmFsdWU9cGFyc2VJbnQoR2V0TnVtKHQ0LnZhbHVlLDEyMikqMTAwLzEyKS8xMDA7CiAgICB9CiAgIH0KCgo8L3NjcmlwdD4JICAgICAgPGJyPgoJPGRpdiBjbGFzcz0ibWVudGlvbnMiPjxkaXYgc3R5bGU9ImZsb2F0IDpsZWZ0IDsgd2lkdGggOiAxMDAlOyBmb250LXdlaWdodCA6IGJvbGQgOyIgY2xhc3M9InRpdGxlLW1lbnRpb25zLXByb2R1Y3RzIj5NZW50aW9ucyBs6WdhbGVzPC9kaXY+Q2UgYmllbiBmYWl0IHBhcnRpZSBkJ3VuZSBjb3Byb3Byael06SBkZSAyNyBsb3RzLkFmZmljaGFnZSBkZXMgaW5mb3JtYXRpb25zIGzpZ2FsZXMmbmJzcDs6Jm5ic3A7UEFSSVMgU0VJTkUgSU1NT0JJTElFUiAtIEFnZW5jZSBDaGVyY2hlLU1pZGkgfCBSYWlzb24gc29jaWFsZSZuYnNwOzombmJzcDtQQVJJUyBTRUlORSBJTU1PQklMSUVSIHwgQWRyZXNzZSBzaehnZSBzb2NpYWwmbmJzcDs6Jm5ic3A7NTkgcnVlIGR1IENoZXJjaGUgIE1pZGkgLSA3NTAwNiBQQVJJUyB8IFNpcmV0Jm5ic3A7OiZuYnNwOzQwMzA4ODQ2MTAwMDIxIHwgUkNTJm5ic3A7OiZuYnNwO05DIHwgTnVtZXJvIFRWQSBJbnRyYWNvbW11bmF1dGFpcmUmbmJzcDs6Jm5ic3A7RlI1NDQwMzA4ODQ2MSB8IEZvcm1lIGp1cmlkaXF1ZSZuYnNwOzombmJzcDtTQVJMIHwgQ2FwaXRhbCBzb2NpYWwmbmJzcDs6Jm5ic3A7NDIgMDAwIIAgIHwgQXNzdXJhbmNlIFJDUCA6IDEyMDEzNzQwNSB8IDxici8+Q2FydGUgVCA6IENQSSA3NTAxIDIwMTcgMDAwIDAyMyAzNjYgfCBEYXRlIGRlIGTpbGl2cmFuY2UgOiAyMDE3LTEyLTE4IHwgTGlldSBkZSBk6WxpdnJhbmNlIDogTkMgfCBDYWlzc2UgZGUgZ2FyYW50aWUgZmluYW5jaehyZSA6IEZOQUlNLiAgfCBOsCBkZSBjYWlzc2UgZGUgZ2FyYW50aWUgOiAyMDY5OSB8IEFkcmVzc2UgY2Fpc3NlIGRlIGdhcmFudGllIDogODkgcnVlIGRlIGxhIEJPRVRJRSAtIDc1MDA4IFBBUklTIHwgTW9udGFudCBkZSBsYSBnYXJhbnRpZSBmaW5hbmNp6HJlIDogMTIwIDAwMCCAICB8IE5vbSBkdSBt6WRpYXRldXIgOiBBTk0gQ29uc28gfCBBZHJlc3NlIGR1IG3pZGlhdGV1ciA6IDYyIHJ1ZSBUaXF1ZXRvbm5lIDc1MDAyIFBBUklTIHwgQWRyZXNzZSBkdSBzaXRlIDogPGEgaHJlZj0iaHR0cDovL2FubS1jb25zby5jb20iIHRhcmdldD0iX2JsYW5rIj5hbm0tY29uc28uY29tPC9hPiB8IDxici8+IEVudHJlcHJpc2UganVyaWRpcXVlbWVudCBldCBmaW5hbmNp6HJlbWVudCBpbmTpcGVuZGFudGU8YnI+PC9kaXY+CjwvZGl2PgoKCTxzY3JpcHQ+CgkJJCgnI2RpYXBvRGV0YWlsJykuY2xpY2soZnVuY3Rpb24oZXZlbnQpewoJCQlldmVudCA9IGV2ZW50IHx8IHdpbmRvdy5ldmVudDsKCQkJaWYoZXZlbnQudGFyZ2V0LmhyZWYgIT0gJycgJiYgZXZlbnQudGFyZ2V0LmhyZWYgIT0gdW5kZWZpbmVkKXsKCQkJCXZhciB0YXJnZXQgPSBldmVudC50YXJnZXQgfHwgZXZlbnQuc3JjRWxlbWVudCwKCQkJCQlsaW5rID0gdGFyZ2V0LnNyYyA/IHRhcmdldC5wYXJlbnROb2RlIDogdGFyZ2V0LAoJCQkJCW9wdGlvbnMgPSB7aW5kZXg6IGxpbmssIGV2ZW50OiBldmVudH0sCgkJCQkJbGlua3MgPSAkKHRoaXMpLmZpbmQoJ2EnKTsKCQkJCWJsdWVpbXAuR2FsbGVyeShsaW5rcywgb3B0aW9ucyk7CgkJCX0KCQkJZWxzZSBpZihldmVudC50YXJnZXQuY2xhc3NOYW1lID09ICJzbGlkZXItcGFnZXNpbW1vLWltZy1iaWciKQoJCQl7CgkJCQkkKCcuc2xpZGVyLXBhZ2VzaW1tby1vdmVybGF5IC5pbWc6bnRoLWNoaWxkKDEpIGEnKS5jbGljaygpOwoJCQl9CgkJfSk7Cgk8L3NjcmlwdD4KCQo8ZGl2IGlkPSJibHVlaW1wLWdhbGxlcnkiIGNsYXNzPSJibHVlaW1wLWdhbGxlcnkgYmx1ZWltcC1nYWxsZXJ5LWNvbnRyb2xzIiBzdHlsZT0iZGlzcGxheTogbm9uZTsiPgoJCTwhLS0gVGhlIGNvbnRhaW5lciBmb3IgdGhlIG1vZGFsIHNsaWRlcyAtLT4KCQk8ZGl2IGNsYXNzPSJzbGlkZXMiIHN0eWxlPSJ3aWR0aDogNTc2MHB4OyI+PC9kaXY+CgkJPCEtLSBDb250cm9scyBmb3IgdGhlIGJvcmRlcmxlc3MgbGlnaHRib3ggLS0+CgkJPGgzIGNsYXNzPSJ0aXRsZSI+PC9oMz4KCQk8YSBjbGFzcz0icHJldiI+izwvYT4KCQk8YSBjbGFzcz0ibmV4dCI+mzwvYT4KCQk8YSBjbGFzcz0iY2xvc2UiPtc8L2E+CgkJPGEgY2xhc3M9InBsYXktcGF1c2UiPjwvYT4KCQk8b2wgY2xhc3M9ImluZGljYXRvciI+PC9vbD4KCTwvZGl2PgoKCQkJCQkJCQkJCTxkaXYgY2xhc3M9InNlcGFyYXRlIGRpc3BsYXktdGFibGUgZGlzcGxheS10YWJsZS1jZW50ZXIgdzUwIGhpZGRlbi14cyI+CgkJCQkJPGRpdiBjbGFzcz0iZGlzcGxheS1jZWxsIHc1MCI+CgkJCQkJCTxocj4KCQkJCQk8L2Rpdj4KCQkJCQk8ZGl2IGNsYXNzPSJkaXNwbGF5LWNlbGwgbm93cmFwIHRleHQtbXV0ZWQiPgoJCQkJCQkmbmJzcDsmbmJzcDs8aSBjbGFzcz0icGUtN3MtYW5nbGUtZG93bi1jaXJjbGUgcGUtMngiPjwvaT4mbmJzcDsmbmJzcDsKCQkJCQk8L2Rpdj4KCQkJCQk8ZGl2IGNsYXNzPSJkaXNwbGF5LWNlbGwgdzUwIj4KCQkJCQkJPGhyPgoJCQkJCTwvZGl2PgoJCQkJPC9kaXY+CgkJCQoJCQk8ZGl2IGlkPSJjb2wtZm9vdGVyIj4KCQkJCTxkaXYgY2xhc3M9ImNvbC14cy0xMiBjb2wtc20tNiBjb2wtbWQtMyI+CgkJCQkJPHVsPjxsaT48YSAgIGhyZWY9Ii8iPiZjb3B5OyAyMDIwIFBBUklTIFNFSU5FIElNTU9CSUxJRVI8L2E+PC9saT48bGk+PGEgICBocmVmPSJhZ2VuY2VzLnBocCI+QWdlbmNlczwvYT48L2xpPjxsaT48YSAgIGhyZWY9InNpdGVfcGxhbi5waHAiPlBsYW4gZHUgc2l0ZTwvYT48L2xpPjxsaT48YSAgIGhyZWY9ImNvbnRhY3RfdXMucGhwIj5Db250YWN0ZXotbm91czwvYT48L2xpPjxsaT48YSAgIGhyZWY9Im1lbnRpb25zLnBocCI+TWVudGlvbnM8L2E+PC9saT48bGk+PGEgICBocmVmPSJhY2NvdW50LnBocCI+TW9uIGNvbXB0ZTwvYT48L2xpPjxsaT48YSBocmVmPSJodHRwczovL3d3dy5hYzMtZ3JvdXBlLmNvbS8iIHRhcmdldD0iX25ldyIgPgoJCQkJCQk8aW1nIGJvcmRlcj0iMCIgc3JjPSJpbWFnZXMvbG9nby1hYzMtZGlnaXRhbC1wZXRpdC5qcGciIGFsdD0ibG9naWNpZWwgaW1tb2JpbGllciIgdGl0bGU9ImxvZ2ljaWVsIGltbW9iaWxpZXIiLz4KCQkJCQkJPC9hPjwvbGk+CTxsaT4KCQkJCQkJPGEgaHJlZj0icnNzLnBocCI+CgkJCQkJCQk8aW1nIHNyYz0iaW1hZ2VzL2ZsdXhfcnNzLnBuZyIgYWx0PSJmbHV4IFJTUyIgYm9yZGVyPSIwIiB3aWR0aD0iMzgiIGhlaWdodD0iMTQiLz4KCQkJCQkJPC9hPgoJCQkJCTwvbGk+PC91bD4JCQkJCTxicj4KCQkJCQk8ZGl2IGNsYXNzPSJjbGVhciI+PC9kaXY+CgkJCQk8L2Rpdj4KCQkJCTxkaXYgY2xhc3M9ImNvbC14cy0xMiBjb2wtc20tNiBjb2wtbWQtMyI+CgkJCQkJPGgzIGNsYXNzPSJoNCB0ZXh0LWNvbG9yLXBlcnNvIHRleHQtYm9sZCB0ZXh0LXVwcGVyY2FzZSI+Tm9zIGFnZW5jZXM8L2gzPgoJCQkJCTxkaXYgaWQ9Im5vc0FnZW5jZXMiPgoJCQkJCQkJCQkJCQkJPGRpdiBjbGFzcz0iYWdlbmNlIj4KCQkJCQkJCQk8ZGl2IGNsYXNzPSJkaXNwbGF5LXRhYmxlIHcxMDAiPgoJCQkJCQkJCQk8ZGl2IGNsYXNzPSIiPgoJCQkJCQkJCQkJPGRpdiBjbGFzcz0iaDUgdGV4dC11cHBlcmNhc2UgdGV4dC1ib2xkIiBzdHlsZT0ibWFyZ2luLXRvcCA6IDAiPjxhIGhyZWY9Ii4uL2FnZW5jZS8yOTg1X19fL3BhcmlzLXNlaW5lLWltbW9iaWxpZXItYWdlbmNlLWNoZXJjaGUtbWlkaS5odG1sIj5QQVJJUyBTRUlORSBJTU1PQklMSUVSIC0gQWdlbmNlIENoZXJjaGUtTWlkaTwvYT48L2Rpdj4KCQkJCQkJCQkJCTxkaXYgY2xhc3M9ImRpc3BsYXktdGFibGUgdzEwMCI+CgkJCQkJCQkJCQkJPGRpdiBjbGFzcz0iZGlzcGxheS1jZWxsIG5vd3JhcCI+CgkJCQkJCQkJCQkJCTxpIGNsYXNzPSJwZS03cy1tYXAtbWFya2VyIHBlLTJ4IHRleHQtY29sb3ItcGVyc28iPjwvaT4mbmJzcDsmbmJzcDsKCQkJCQkJCQkJCQk8L2Rpdj4KCQkJCQkJCQkJCQk8ZGl2IGNsYXNzPSJkaXNwbGF5LWNlbGwgdzEwMCI+CgkJCQkJCQkJCQkJCTU5IHJ1ZSBkdSBDaGVyY2hlICBNaWRpPGJyLz4KCQkJCQkJCQkJCQkJNzUwMDYgUEFSSVMJCQkJCQkJCQkJCTwvZGl2PgoJCQkJCQkJCQkJPC9kaXY+CgkJCQkJCQkJCTwvZGl2PgoJCQkJCQkJCQk8ZGl2IGNsYXNzPSIiPgoJCQkJCQkJCQkJPGRpdiBjbGFzcz0iaDUgdGV4dC11cHBlcmNhc2UiIHN0eWxlPSJtYXJnaW4tdG9wIDogMCI+Jm5ic3A7PC9kaXY+CgkJCQkJCQkJCQk8ZGl2IGNsYXNzPSJkaXNwbGF5LXRhYmxlIHcxMDAiPgoJCQkJCQkJCQkJCTxkaXYgY2xhc3M9ImRpc3BsYXktY2VsbCBub3dyYXAiPgoJCQkJCQkJCQkJCQk8aSBjbGFzcz0icGUtN3MtcGhvbmUgcGUtMnggdGV4dC1jb2xvci1wZXJzbyI+PC9pPiZuYnNwOyZuYnNwOwoJCQkJCQkJCQkJCTwvZGl2PgoJCQkJCQkJCQkJCTxkaXYgY2xhc3M9ImRpc3BsYXktY2VsbCB3MTAwIj4KCQkJCQkJCQkJCQkJMDEuNDUuNDQuNjYuMDA8YnIvPgoJCQkJCQkJCQkJCQl2ZW50ZUBwYXJpcy1zZWluZS1pbW1vYmlsaWVyLmNvbQkJCQkJCQkJCQkJPC9kaXY+CgkJCQkJCQkJCQk8L2Rpdj4KCQkJCQkJCQkJPC9kaXY+CgkJCQkJCQkJCTxkaXYgY2xhc3M9ImRpc3BsYXktY2VsbCB3MjAgdGV4dC1jZW50ZXIiPgoJCQkJCQkJCQkJCQkJCQkJCQkJCQk8YSB0YXJnZXQ9Il9ibGFuayIgaHJlZj0iaHR0cHM6Ly93d3cuZmFjZWJvb2suY29tL1BhcmlzU2VpbmVJbW1vYmlsaWVyLyIgY2xhc3M9ImZiIj48aSBjbGFzcz0iZmEgZmEtZmFjZWJvb2stc3F1YXJlIGZhLTN4Ij48L2k+PC9hPgoJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJPGEgdGFyZ2V0PSJfYmxhbmsiIGhyZWY9Imh0dHBzOi8vd3d3LmxpbmtlZGluLmNvbS9jb21wYW55L3BhcmlzLXNlaW5lLWltbW9iaWxpZXIiIGNsYXNzPSJncGx1cyI+PGkgY2xhc3M9ImZhIGZhLWxpbmtlZGluLXNxdWFyZSBmYS0zeCI+PC9pPjwvYT4KCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCTxhIHRhcmdldD0iX2JsYW5rIiBocmVmPSJodHRwczovL3d3dy5pbnN0YWdyYW0uY29tL1BhcmlzU2VpbmVJbW1vYmlsaWVyLyIgY2xhc3M9ImdwbHVzIj48aSBjbGFzcz0iZmEgZmEtaW5zdGFncmFtIGZhLTN4Ij48L2k+PC9hPgoJCQkJCQkJCQkJCQkJCQkJCQkJCQoJCQkJCQkJCQk8L2Rpdj4KCgkJCQkJCQkJPC9kaXY+CgkJCQkJCQk8L2Rpdj4KCQkJCQkJCQkJCQkJCTxkaXYgY2xhc3M9ImFnZW5jZSI+CgkJCQkJCQkJPGRpdiBjbGFzcz0iZGlzcGxheS10YWJsZSB3MTAwIj4KCQkJCQkJCQkJPGRpdiBjbGFzcz0iIj4KCQkJCQkJCQkJCTxkaXYgY2xhc3M9Img1IHRleHQtdXBwZXJjYXNlIHRleHQtYm9sZCIgc3R5bGU9Im1hcmdpbi10b3AgOiAwIj48YSBocmVmPSIuLi9hZ2VuY2UvMTUzNjA3X19fL3BhcmlzLXNlaW5lLWltbW9iaWxpZXItYWdlbmNlLXNhaW50LWhvbm9yZS5odG1sIj5QQVJJUyBTRUlORSBJTU1PQklMSUVSIC0gQWdlbmNlIFNhaW50LUhvbm9y6TwvYT48L2Rpdj4KCQkJCQkJCQkJCTxkaXYgY2xhc3M9ImRpc3BsYXktdGFibGUgdzEwMCI+CgkJCQkJCQkJCQkJPGRpdiBjbGFzcz0iZGlzcGxheS1jZWxsIG5vd3JhcCI+CgkJCQkJCQkJCQkJCTxpIGNsYXNzPSJwZS03cy1tYXAtbWFya2VyIHBlLTJ4IHRleHQtY29sb3ItcGVyc28iPjwvaT4mbmJzcDsmbmJzcDsKCQkJCQkJCQkJCQk8L2Rpdj4KCQkJCQkJCQkJCQk8ZGl2IGNsYXNzPSJkaXNwbGF5LWNlbGwgdzEwMCI+CgkJCQkJCQkJCQkJCTQ5IHJ1ZSBTYWludC1Sb2NoPGJyLz4KCQkJCQkJCQkJCQkJNzUwMDEgUEFSSVMJCQkJCQkJCQkJCTwvZGl2PgoJCQkJCQkJCQkJPC9kaXY+CgkJCQkJCQkJCTwvZGl2PgoJCQkJCQkJCQk8ZGl2IGNsYXNzPSIiPgoJCQkJCQkJCQkJPGRpdiBjbGFzcz0iaDUgdGV4dC11cHBlcmNhc2UiIHN0eWxlPSJtYXJnaW4tdG9wIDogMCI+Jm5ic3A7PC9kaXY+CgkJCQkJCQkJCQk8ZGl2IGNsYXNzPSJkaXNwbGF5LXRhYmxlIHcxMDAiPgoJCQkJCQkJCQkJCTxkaXYgY2xhc3M9ImRpc3BsYXktY2VsbCBub3dyYXAiPgoJCQkJCQkJCQkJCQk8aSBjbGFzcz0icGUtN3MtcGhvbmUgcGUtMnggdGV4dC1jb2xvci1wZXJzbyI+PC9pPiZuYnNwOyZuYnNwOwoJCQkJCQkJCQkJCTwvZGl2PgoJCQkJCQkJCQkJCTxkaXYgY2xhc3M9ImRpc3BsYXktY2VsbCB3MTAwIj4KCQkJCQkJCQkJCQkJMDEuNDIuNjAuNzcuNzc8YnIvPgoJCQkJCQkJCQkJCQlzdGhAcGFyaXMtc2VpbmUtaW1tb2JpbGllci5jb20JCQkJCQkJCQkJCTwvZGl2PgoJCQkJCQkJCQkJPC9kaXY+CgkJCQkJCQkJCTwvZGl2PgoJCQkJCQkJCQk8ZGl2IGNsYXNzPSJkaXNwbGF5LWNlbGwgdzIwIHRleHQtY2VudGVyIj4KCQkJCQkJCQkJCQkJCQkJCQkJCQkJPGEgdGFyZ2V0PSJfYmxhbmsiIGhyZWY9Imh0dHBzOi8vd3d3LmZhY2Vib29rLmNvbS9QYXJpc1NlaW5lSW1tb2JpbGllci8iIGNsYXNzPSJmYiI+PGkgY2xhc3M9ImZhIGZhLWZhY2Vib29rLXNxdWFyZSBmYS0zeCI+PC9pPjwvYT4KCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCTxhIHRhcmdldD0iX2JsYW5rIiBocmVmPSJodHRwczovL3d3dy5saW5rZWRpbi5jb20vY29tcGFueS9wYXJpcy1zZWluZS1pbW1vYmlsaWVyIiBjbGFzcz0iZ3BsdXMiPjxpIGNsYXNzPSJmYSBmYS1saW5rZWRpbi1zcXVhcmUgZmEtM3giPjwvaT48L2E+CgkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQk8YSB0YXJnZXQ9Il9ibGFuayIgaHJlZj0iaHR0cHM6Ly93d3cuaW5zdGFncmFtLmNvbS9QYXJpc1NlaW5lSW1tb2JpbGllci8iIGNsYXNzPSJncGx1cyI+PGkgY2xhc3M9ImZhIGZhLWluc3RhZ3JhbSBmYS0zeCI+PC9pPjwvYT4KCQkJCQkJCQkJCQkJCQkJCQkJCQkKCQkJCQkJCQkJPC9kaXY+CgoJCQkJCQkJCTwvZGl2PgoJCQkJCQkJPC9kaXY+CgkJCQkJCQkJCQkJCQk8ZGl2IGNsYXNzPSJhZ2VuY2UiPgoJCQkJCQkJCTxkaXYgY2xhc3M9ImRpc3BsYXktdGFibGUgdzEwMCI+CgkJCQkJCQkJCTxkaXYgY2xhc3M9IiI+CgkJCQkJCQkJCQk8ZGl2IGNsYXNzPSJoNSB0ZXh0LXVwcGVyY2FzZSB0ZXh0LWJvbGQiIHN0eWxlPSJtYXJnaW4tdG9wIDogMCI+PGEgaHJlZj0iLi4vYWdlbmNlLzE1NjA1NF9fXy9wYXJpcy1zZWluZS1pbW1vYmlsaWVyLWFnZW5jZS1zZXZyZXMtdmFuZWF1Lmh0bWwiPlBBUklTIFNFSU5FIElNTU9CSUxJRVIgLSBBZ2VuY2UgU+h2cmVzLVZhbmVhdTwvYT48L2Rpdj4KCQkJCQkJCQkJCTxkaXYgY2xhc3M9ImRpc3BsYXktdGFibGUgdzEwMCI+CgkJCQkJCQkJCQkJPGRpdiBjbGFzcz0iZGlzcGxheS1jZWxsIG5vd3JhcCI+CgkJCQkJCQkJCQkJCTxpIGNsYXNzPSJwZS03cy1tYXAtbWFya2VyIHBlLTJ4IHRleHQtY29sb3ItcGVyc28iPjwvaT4mbmJzcDsmbmJzcDsKCQkJCQkJCQkJCQk8L2Rpdj4KCQkJCQkJCQkJCQk8ZGl2IGNsYXNzPSJkaXNwbGF5LWNlbGwgdzEwMCI+CgkJCQkJCQkJCQkJCTg1IHJ1ZSBkZSBT6HZyZXM8YnIvPgoJCQkJCQkJCQkJCQk3NTAwNiBQQVJJUwkJCQkJCQkJCQkJPC9kaXY+CgkJCQkJCQkJCQk8L2Rpdj4KCQkJCQkJCQkJPC9kaXY+CgkJCQkJCQkJCTxkaXYgY2xhc3M9IiI+CgkJCQkJCQkJCQk8ZGl2IGNsYXNzPSJoNSB0ZXh0LXVwcGVyY2FzZSIgc3R5bGU9Im1hcmdpbi10b3AgOiAwIj4mbmJzcDs8L2Rpdj4KCQkJCQkJCQkJCTxkaXYgY2xhc3M9ImRpc3BsYXktdGFibGUgdzEwMCI+CgkJCQkJCQkJCQkJPGRpdiBjbGFzcz0iZGlzcGxheS1jZWxsIG5vd3JhcCI+CgkJCQkJCQkJCQkJCTxpIGNsYXNzPSJwZS03cy1waG9uZSBwZS0yeCB0ZXh0LWNvbG9yLXBlcnNvIj48L2k+Jm5ic3A7Jm5ic3A7CgkJCQkJCQkJCQkJPC9kaXY+CgkJCQkJCQkJCQkJPGRpdiBjbGFzcz0iZGlzcGxheS1jZWxsIHcxMDAiPgoJCQkJCQkJCQkJCQkwMS40NS40NC4wNS4wNTxici8+CgkJCQkJCQkJCQkJCXZlbnRlQHBhcmlzLXNlaW5lLWltbW9iaWxpZXIuY29tCQkJCQkJCQkJCQk8L2Rpdj4KCQkJCQkJCQkJCTwvZGl2PgoJCQkJCQkJCQk8L2Rpdj4KCQkJCQkJCQkJPGRpdiBjbGFzcz0iZGlzcGxheS1jZWxsIHcyMCB0ZXh0LWNlbnRlciI+CgkJCQkJCQkJCQkJCQkJCQkJCQkJCTxhIHRhcmdldD0iX2JsYW5rIiBocmVmPSJodHRwczovL3d3dy5mYWNlYm9vay5jb20vUGFyaXNTZWluZUltbW9iaWxpZXIvIiBjbGFzcz0iZmIiPjxpIGNsYXNzPSJmYSBmYS1mYWNlYm9vay1zcXVhcmUgZmEtM3giPjwvaT48L2E+CgkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQk8YSB0YXJnZXQ9Il9ibGFuayIgaHJlZj0iaHR0cHM6Ly93d3cubGlua2VkaW4uY29tL2NvbXBhbnkvcGFyaXMtc2VpbmUtaW1tb2JpbGllciIgY2xhc3M9ImdwbHVzIj48aSBjbGFzcz0iZmEgZmEtbGlua2VkaW4tc3F1YXJlIGZhLTN4Ij48L2k+PC9hPgoJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJPGEgdGFyZ2V0PSJfYmxhbmsiIGhyZWY9Imh0dHBzOi8vd3d3Lmluc3RhZ3JhbS5jb20vUGFyaXNTZWluZUltbW9iaWxpZXIvIiBjbGFzcz0iZ3BsdXMiPjxpIGNsYXNzPSJmYSBmYS1pbnN0YWdyYW0gZmEtM3giPjwvaT48L2E+CgkJCQkJCQkJCQkJCQkJCQkJCQkJCgkJCQkJCQkJCTwvZGl2PgoKCQkJCQkJCQk8L2Rpdj4KCQkJCQkJCTwvZGl2PgoJCQkJCQkJCQkJCTwvZGl2PgoJCQkJPC9kaXY+CgkJCQk8ZGl2IGNsYXNzPSJoaWRkZW4teHMgaGlkZGVuLXNtIGNvbC1tZC0zIj4KCQkJCQk8aDMgY2xhc3M9Img0IHRleHQtY29sb3ItcGVyc28gdGV4dC1ib2xkIHRleHQtdXBwZXJjYXNlIj5Bbm5vbmNlcyBwYXIgdmlsbGU8L2gzPgoJCQkJCTx1bD4KCQkJCQkJCQkJCQkJCTxsaT48YSBocmVmPSIuLi92aWxsZV9iaWVuLzc1MDA2Xy9wYXJpcy0wNmVtZS5odG1sIj4KCQkJCQkJCWltbW9iaWxpZXIgcGFyaXMJCQkJCQkJCQkJCQkJCQk3NTAwNgkJCQkJCQk8L2E+CgkJCQkJCQk8L2xpPgoJCQkJCQkJCQkJCQkJPGxpPjxhIGhyZWY9Ii4uL3ZpbGxlX2JpZW4vNzUwMDdfL3BhcmlzLTA3ZW1lLmh0bWwiPgoJCQkJCQkJaW1tb2JpbGllciBwYXJpcwkJCQkJCQkJCQkJCQkJCTc1MDA3CQkJCQkJCTwvYT4KCQkJCQkJCTwvbGk+CgkJCQkJCQkJCQkJCQk8bGk+PGEgaHJlZj0iLi4vdmlsbGVfYmllbi83NTAwMV8vcGFyaXMtMDFlci5odG1sIj4KCQkJCQkJCWltbW9iaWxpZXIgcGFyaXMJCQkJCQkJCQkJCQkJCQk3NTAwMQkJCQkJCQk8L2E+CgkJCQkJCQk8L2xpPgoJCQkJCQkJCQkJCQkJPGxpPjxhIGhyZWY9Ii4uL3ZpbGxlX2JpZW4vNzUwMTVfL3BhcmlzLTE1ZW1lLmh0bWwiPgoJCQkJCQkJaW1tb2JpbGllciBwYXJpcwkJCQkJCQkJCQkJCQkJCTc1MDE1CQkJCQkJCTwvYT4KCQkJCQkJCTwvbGk+CgkJCQkJCQkJCQkJCQk8bGk+PGEgaHJlZj0iLi4vdmlsbGVfYmllbi83NTAwOF8vcGFyaXMtMDhlbWUuaHRtbCI+CgkJCQkJCQlpbW1vYmlsaWVyIHBhcmlzCQkJCQkJCQkJCQkJCQkJNzUwMDgJCQkJCQkJPC9hPgoJCQkJCQkJPC9saT4KCQkJCQkJCQkJCQk8L3VsPgoJCQkJPC9kaXY+CgkJCQk8ZGl2IGNsYXNzPSJoaWRkZW4teHMgaGlkZGVuLXNtIGNvbC1tZC0zIj4KCQkJCQk8ZGl2IGNsYXNzPSJoNCB0ZXh0LWJvbGQiPiZuYnNwOzwvZGl2PgoJCQkJCTx1bD4KCQkJCQkJCQkJCQkJCTxsaT48YSBocmVmPSIuLi92aWxsZV9iaWVuLzc1MDE2Xy9wYXJpcy0xNmVtZS5odG1sIj4KCQkJCQkJCWltbW9iaWxpZXIgcGFyaXMJCQkJCQkJCQkJCQkJCQk3NTAxNgkJCQkJCQk8L2E+CgkJCQkJCQk8L2xpPgoJCQkJCQkJCQkJCQkJPGxpPjxhIGhyZWY9Ii4uL3ZpbGxlX2JpZW4vUGFyaXNfL2ltbW9iaWxpZXItcGFyaXMuaHRtbCI+CgkJCQkJCQlpbW1vYmlsaWVyIHBhcmlzCQkJCQkJCQkJCQkJCQkJNzUxMTYJCQkJCQkJPC9hPgoJCQkJCQkJPC9saT4KCQkJCQkJCQkJCQkJCTxsaT48YSBocmVmPSIuLi92aWxsZV9iaWVuLzc1MDA5Xy9wYXJpcy0wOWVtZS5odG1sIj4KCQkJCQkJCWltbW9iaWxpZXIgcGFyaXMJCQkJCQkJCQkJCQkJCQk3NTAwOQkJCQkJCQk8L2E+CgkJCQkJCQk8L2xpPgoJCQkJCQkJCQkJCQkJPGxpPjxhIGhyZWY9Ii4uL3ZpbGxlX2JpZW4vNzUwMjBfL3BhcmlzLTIwZW1lLmh0bWwiPgoJCQkJCQkJaW1tb2JpbGllciBwYXJpcwkJCQkJCQkJCQkJCQkJCTc1MDIwCQkJCQkJCTwvYT4KCQkJCQkJCTwvbGk+CgkJCQkJCQkJCQkJPC91bD4KCQkJCTwvZGl2PgoJCQk8L2Rpdj4KCQk8L2Rpdj4KCTwvZGl2PgoJPC9kaXY+CgoKCQoKCiAgICAgICAgICAgIDxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij4KICAgICAgICAgICAgZnVuY3Rpb24gZGVsZXRlX3BvbHkoKSB7fQogICAgICAgICAgICB2YXIgb3B0aW9ucyA9IHsKICAgICAgICAgICAgICAgIGFqYXg6IHsKICAgICAgICAgICAgICAgICAgICB1cmw6ICdpbmNsdWRlcy9mdW5jdGlvbnMvYWpheC9hamF4X3VybC5waHAnLAogICAgICAgICAgICAgICAgICAgIHR5cGU6ICdHRVQnLAogICAgICAgICAgICAgICAgICAgIGRhdGFUeXBlOiAnanNvbicsCiAgICAgICAgICAgICAgICAgICAgZGF0YTogewogICAgICAgICAgICAgICAgICAgICAgICBtZXRob2Q6ICdzdWdnZXN0X2NvdW50cnlfanF1ZXJ5X2FqYXgnLAogICAgICAgICAgICAgICAgICAgICAgICByZXF1ZXRlOiBbJ3t7e3F9fX0nXSwKICAgICAgICAgICAgICAgICAgICAgICAgbW9kZTogJ2FkdmFuY2VkJywKICAgICAgICAgICAgICAgICAgICAgICAgaGF2ZV9vZmZlcnM6IDAsCiAgICAgICAgICAgICAgICAgICAgICAgIGRpc3BsYXlGaXJzdFplcm86IDAKICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgIGJlZm9yZVNlbmQ6IGZ1bmN0aW9uKCkgewogICAgICAgICAgICAgICAgICAgICAgICBpZiAodHlwZW9mICQoJy5ib290c3RyYXAtc2VsZWN0LndpdGgtYWpheCcpLmZpbmQoJy5zZWFyY2gtbG9hZGVyJykuYXR0cignY2xhc3MnKSA9PSAndW5kZWZpbmVkJykgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgJCgnLmJvb3RzdHJhcC1zZWxlY3Qud2l0aC1hamF4JykuZmluZCgnLmJzLXNlYXJjaGJveCcpLmFwcGVuZCgnPGRpdiBjbGFzcz0ic2VhcmNoLWxvYWRlciIgc3R5bGU9ImRpc3BsYXk6IGJsb2NrOyI+PC9kaXY+Jyk7CiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgZWxzZSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkKCcuYm9vdHN0cmFwLXNlbGVjdC53aXRoLWFqYXgnKS5maW5kKCcuc2VhcmNoLWxvYWRlcicpLnNob3coKTsKICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgc3VjY2VzczogZnVuY3Rpb24oZGF0YSkgewogICAgICAgICAgICAgICAgICAgICAgICAkKCcuYm9vdHN0cmFwLXNlbGVjdC53aXRoLWFqYXgnKS5maW5kKCcuc2VhcmNoLWxvYWRlcicpLmhpZGUoKTsKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgcHJlc2VydmVTZWxlY3RlZCA6dHJ1ZSwKICAgICAgICAgICAgICAgIHByZXNlcnZlU2VsZWN0ZWRQb3NpdGlvbjonYmVmb3JlJywKICAgICAgICAgICAgICAgIGxvZzogMCwKICAgICAgICAgICAgICAgIHByZXByb2Nlc3NEYXRhOiBmdW5jdGlvbiAoZGF0YSkKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgaSwgbCA9IGRhdGEubGVuZ3RoLCBhcnJheSA9IFtdOwogICAgICAgICAgICAgICAgICAgICAgICBpZiAobCkKICAgICAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9yKGkgPSAwOyBpIDwgbDsgaSsrKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmKGRhdGFbaV0uaWQgPT0gJ2RpdmlkZXInKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYXJyYXkucHVzaCgkLmV4dGVuZCh0cnVlLCBkYXRhW2ldLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnZGl2aWRlcicgOiB0cnVlLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ2RhdGEnOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN1YnRleHQ6ICcnLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpY29uOiAnJywgLy8gSWNvbiBjbGFzcyBuYW1lIGV4OiBpY29uLWdsYXNzCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRlbnQ6ICcnKyAgZGF0YVtpXS50ZXh0ICsnJywKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZWxzZSBpZihkYXRhW2ldLmlkID09ICdkaXNhYmxlZCcpCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhcnJheS5wdXNoKCQuZXh0ZW5kKHRydWUsIGRhdGFbaV0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICd0ZXh0JzogZGF0YVtpXS50ZXh0LAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ3ZhbHVlJzogZGF0YVtpXS50ZXh0LAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ2NsYXNzJzogJ2Rpc2FibGVkJywKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICdkaXNhYmxlZCcgOiB0cnVlLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ2RhdGEnOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN1YnRleHQ6ICcnLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpY29uOiAnJywgLy8gSWNvbiBjbGFzcyBuYW1lIGV4OiBpY29uLWdsYXNzCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRlbnQ6ICcnKyAgZGF0YVtpXS50ZXh0ICsnJywKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZWxzZQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYXJyYXkucHVzaCgkLmV4dGVuZCh0cnVlLCBkYXRhW2ldLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAndGV4dCc6IGRhdGFbaV0udGV4dCwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICd2YWx1ZSc6IGRhdGFbaV0uaWQsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnY2xhc3MnOiBkYXRhW2ldLmNsYXNzLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGF0YTogewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRlbnQ6IGRhdGFbaV0udGV4dAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBZb3UgbXVzdCBhbHdheXMgcmV0dXJuIGEgdmFsaWQgYXJyYXkgd2hlbiBwcm9jZXNzaW5nIGRhdGEuIFRoZQogICAgICAgICAgICAgICAgICAgIC8vIGRhdGEgYXJndW1lbnQgcGFzc2VkIGlzIGEgY2xvbmUgYW5kIGNhbm5vdCBiZSBtb2RpZmllZCBkaXJlY3RseS4KICAgICAgICAgICAgICAgICAgICByZXR1cm4gYXJyYXk7CiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgbG9jYWxlOiB7CiAgICAgICAgICAgICAgICAgICAgY3VycmVudGx5U2VsZWN0ZWQ6ICdT6WxlY3Rpb24nLAogICAgICAgICAgICAgICAgICAgIGVtcHR5VGl0bGU6ICdWaWxsZSwgQy5QJywKICAgICAgICAgICAgICAgICAgICBlcnJvclRleHQ6ICdCT1hfU0VBUkNIX05PX1JFU1VMVFMnLAogICAgICAgICAgICAgICAgICAgIHNlYXJjaFBsYWNlaG9sZGVyOiAnU2Fpc2lyIHVuZSB2aWxsZScsCiAgICAgICAgICAgICAgICAgICAgc3RhdHVzSW5pdGlhbGl6ZWQ6ICdCT1hfU0VBUkNIX1NBSVNJUl9WSUxMRScsCiAgICAgICAgICAgICAgICAgICAgc3RhdHVzTm9SZXN1bHRzOiAnQk9YX1NFQVJDSF9OT19SRVNVTFRTJywKICAgICAgICAgICAgICAgICAgICBzdGF0dXNTZWFyY2hpbmc6ICdCT1hfU0VBUkNIX1JFQ0hFUkNIRV9DT1VSUycKICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICB0ZW1wbGF0ZXM6IHsKICAgICAgICAgICAgICAgICAgICAvLyBUaGUgcGxhY2Vob2xkZXIgZm9yIHN0YXR1cyB1cGRhdGVzIHBlcnRhaW5pbmcgdG8gdGhlIGxpc3QgYW5kIHJlcXVlc3QuCiAgICAgICAgICAgICAgICAgICAgc3RhdHVzOiAnJywKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfTsKCiAgICAgICAgICAgIGpRdWVyeShmdW5jdGlvbigkKSB7CiAgICAgICAgICAgICAgICAkKCcuc2VsZWN0cGlja2VyJykuc2VsZWN0cGlja2VyKCkuZmlsdGVyKCcud2l0aC1hamF4JykuYWpheFNlbGVjdFBpY2tlcihvcHRpb25zKTsKICAgICAgICAgICAgICAgICQoJy5zZWxlY3RwaWNrZXInKS5maWx0ZXIoJy53aXRoLWFqYXgnKS50cmlnZ2VyKCdjaGFuZ2UnKTsKICAgICAgICAgICAgfSk7CiAgICAgICAgPC9zY3JpcHQ+CiAgICA8IS0tIEVNUGVDSEUgQ0xJQyBEUk9JVCBTVVIgUEhPVE9TIC8gUFJPVEVDVElPTiBQSE9UT1MgLS0+CjxkaXYgY2xhc3M9Im1vZGFsIGZhZGUiIGlkPSJtb2RhbF9wb3B1cF9pZnJhbWUiIHRhYmluZGV4PSItMSIgcm9sZT0iZGlhbG9nIiBhcmlhLWxhYmVsbGVkYnk9Im15TW9kYWxMYWJlbCIgYXJpYS1oaWRkZW49InRydWUiPgoJCSAgPGRpdiBjbGFzcz0ibW9kYWwtZGlhbG9nIG1vZGFsLWxnIj4KCQkJPGRpdiBjbGFzcz0ibW9kYWwtY29udGVudCI+CgkJCSAgPGRpdiBjbGFzcz0ibW9kYWwtaGVhZGVyIj4KCQkJCTxidXR0b24gdHlwZT0iYnV0dG9uIiBjbGFzcz0iY2xvc2UiIGRhdGEtZGlzbWlzcz0ibW9kYWwiIGFyaWEtaGlkZGVuPSJ0cnVlIj4mdGltZXM7PC9idXR0b24+CgkJCQkJCTxoND48L2g0PgoJCQkJPC9kaXY+CgkJCQk8ZGl2IGNsYXNzPSJtb2RhbC1ib2R5Ij4KCQkJCTxpZnJhbWUgY2xhc3M9IiIgd2lkdGg9Ijk5LjYlIiBib3JkZXI9IjAiIGZyYW1lYm9yZGVyPSIwIiBzcmM9IiI+PC9pZnJhbWU+CgkJCSAgPC9kaXY+CgkJCTwvZGl2PgoJCSAgPC9kaXY+CgkJPC9kaXY+CQkJCQkgPHNjcmlwdD4KCQkJCQkJLy8gUmVtcGxhY2V6IGxhIHZhbGV1ciBVQS1YWFhYWFgtWSBwYXIgbCdpZGVudGlmaWFudCBhbmFseXRpY3MgZGUgdm90cmUgc2l0ZS4KCQkJCQkJZ2FQcm9wZXJ0eSA9ICdVQS0xMjc0ODg4MjgtMicgOwoKCQkJCQkJLy8gROlzYWN0aXZlIGxlIHRyYWNraW5nIHNpIGxlIGNvb2tpZSBkkk9wdC1vdXQgZXhpc3RlIGTpauAuCgkJCQkJCXZhciBkaXNhYmxlU3RyID0gJ2dhLWRpc2FibGUtJyArIGdhUHJvcGVydHk7CgoJCQkJCQlpZiAoZG9jdW1lbnQuY29va2llLmluZGV4T2YoJ2hhc0NvbnNlbnQ9ZmFsc2UnKSA+IC0xKSB7CgkJCQkJCQl3aW5kb3dbZGlzYWJsZVN0cl0gPSB0cnVlOwoJCQkJCQl9CgkJCQkJCQoJCQkJCQkJKGZ1bmN0aW9uKGkscyxvLGcscixhLG0pe2lbJ0dvb2dsZUFuYWx5dGljc09iamVjdCddPXI7aVtyXT1pW3JdfHxmdW5jdGlvbigpewoJCQkJCQkJKGlbcl0ucT1pW3JdLnF8fFtdKS5wdXNoKGFyZ3VtZW50cyl9LGlbcl0ubD0xKm5ldyBEYXRlKCk7YT1zLmNyZWF0ZUVsZW1lbnQobyksCgkJCQkJCQltPXMuZ2V0RWxlbWVudHNCeVRhZ05hbWUobylbMF07YS5hc3luYz0xO2Euc3JjPWc7bS5wYXJlbnROb2RlLmluc2VydEJlZm9yZShhLG0pCgkJCQkJCQl9KSh3aW5kb3csZG9jdW1lbnQsJ3NjcmlwdCcsJy8vd3d3Lmdvb2dsZS1hbmFseXRpY3MuY29tL2FuYWx5dGljcy5qcycsJ2dhJyk7CgoJCQkJCQkJZ2EoJ2NyZWF0ZScsIGdhUHJvcGVydHkgLCAnYXV0bycpOwoJCQkJCQkJZ2EoJ3JlcXVpcmUnLCAnZGlzcGxheWZlYXR1cmVzJyk7CgkJCQkJCQlnYSgnc2V0JywgJ2Fub255bWl6ZUlwJywgdHJ1ZSk7CgkJCQkJCQlnYSgnc2VuZCcsICdwYWdldmlldycpOwoJCQkJCQkJLy8gZ2EoJ3NlbmQnLCAnX3RyYWNrUGFnZXZpZXcnKTsKCgkJCQkJCQkJCQk8L3NjcmlwdD4KCQkJPHNjcmlwdD4KLy9DZXR0ZSBmb25jdGlvbiByZXRvdXJuZSBsYSBkYXRlIGSSZXhwaXJhdGlvbiBkdSBjb29raWUgZGUgY29uc2VudGVtZW50CgpmdW5jdGlvbiBnZXRDb29raWVFeHBpcmVEYXRlKCkKewogdmFyIGNvb2tpZVRpbWVvdXQgPSAzNDIxNDQwMDAwMDsvLyBMZSBub21icmUgZGUgbWlsbGlzZWNvbmRlcyBxdWUgZm9udCAxMyBtb2lzCiB2YXIgZGF0ZSA9IG5ldyBEYXRlKCk7CmRhdGUuc2V0VGltZShkYXRlLmdldFRpbWUoKStjb29raWVUaW1lb3V0KTsKdmFyIGV4cGlyZXMgPSAiOyBleHBpcmVzPSIrZGF0ZS50b0dNVFN0cmluZygpOwpyZXR1cm4gZXhwaXJlczsKfQoKLy8gQ2V0dGUgZm9uY3Rpb24gZXN0IGFwcGVs6WUgcG91ciBhZmZpY2hlciBsYSBkZW1hbmRlIGRlIGNvbnNlbnRlbWVudApmdW5jdGlvbiBhc2tDb25zZW50KCkKewoJCQl1cmxfY29va2llID0gJ21lbnRpb25zLnBocCNtZW50aW9uc19jb29raWVzJyA7CgkKICAgIHZhciBib2R5dGFnID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoJ2JvZHknKVswXTsKICAgIHZhciBkaXYgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTsKICAgIGRpdi5zZXRBdHRyaWJ1dGUoJ2lkJywnY29va2llLWJhbm5lcicpOwoJICAgIC8vIExlIGNvZGUgSFRNTCBkZSBsYSBkZW1hbmRlIGRlIGNvbnNlbnRlbWVudAogICAgLy8gVm91cyBwb3V2ZXogbW9kaWZpZXIgbGUgY29udGVudSBhaW5zaSBxdWUgbGUgc3R5bGUKCQkJZGl2LmlubmVySFRNTCA9ICAiPGEgY2xhc3M9J2Nsb3NlX2Nvb2tpZV9iYW5uZXInIGhyZWY9JyMnIG9uY2xpY2s9J2Nsb3NlX2Nvb2tpZV9iYW5uZXIoKTsgcmV0dXJuIGZhbHNlOyc+RmVybWVyIFg8L2E+PGRpdiBjbGFzcz0nY29udGFpbmVyJz5FbiBwb3Vyc3VpdmFudCB2b3RyZSBuYXZpZ2F0aW9uLCB2b3VzIGFjY2VwdGV6IGwndXRpbGlzYXRpb24gZGUgY29va2llcyBwb3VyIHZvdXMgcHJvcG9zZXIgZGVzIHNlcnZpY2VzIGFkYXB06XMg4CB2b3MgY2VudHJlcyBkJ2ludOly6nRzIGV0IHLpYWxpc2VyIGRlcyBzdGF0aXN0aXF1ZXMgZGUgdmlzaXRlIGR1IHNpdGUuPGJyLz48YSBocmVmPSciICsgdXJsX2Nvb2tpZSsgIic+RW4gc2F2b2lyIHBsdXM8L2E+Jm5ic3A7Jm5ic3A7Jm5ic3A7Jm5ic3A7PGEgaHJlZj0nY29va2llcy5waHAnPlBhcmFt6XRyZXIgdm9zIGNvb2tpZXM8L2E+PC9kaXY+IiA7CgkJLy8gUG91ciBk6XNhY3RpdmVyIHRvdXQgZGUgc3VpdGUgbGUgZOlw9HQgZHUgY29va2llIGRlIG1lc3VyZSBkXGF1ZGllbmNlIDxhIGhyZWY9ImphdmFzY3JpcHQ6Z2FPcHRvdXQoKSI+Y2xpcXVlei1pY2k8L2E+LgoJYm9keXRhZy5pbnNlcnRCZWZvcmUoZGl2LGJvZHl0YWcuZmlyc3RDaGlsZCk7IC8vIEFqb3V0ZSBsYSBiYW5uaehyZSBqdXN0ZSBhdSBk6WJ1dCBkZSBsYSBwYWdlCiAgICBkb2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZSgnYm9keScpWzBdLmNsYXNzTmFtZSs9JyBjb29raWViYW5uZXInOwp9CgovLyBSZXRvdXJuZSBsYSBjaGFpbmUgZGUgY2FyYWN06HJlIGNvcnJlc3BvbmRhbnQg4CBub209dmFsZXVyCmZ1bmN0aW9uIGdldENvb2tpZShOb21EdUNvb2tpZSkgIHsKCWNvbnNvbGUubG9nKGRvY3VtZW50LmNvb2tpZSkgOyAKICAgIGlmIChkb2N1bWVudC5jb29raWUubGVuZ3RoID4gMCkgewogICAgICAgIGJlZ2luID0gZG9jdW1lbnQuY29va2llLmluZGV4T2YoTm9tRHVDb29raWUrIj0iKTsKICAgICAgICBpZiAoYmVnaW4gIT0gLTEpICB7CiAgICAgICAgICAgIGJlZ2luICs9IE5vbUR1Q29va2llLmxlbmd0aCsxOwogICAgICAgICAgICBlbmQgPSBkb2N1bWVudC5jb29raWUuaW5kZXhPZigiOyIsIGJlZ2luKTsKICAgICAgICAgICAgaWYgKGVuZCA9PSAtMSkgZW5kID0gZG9jdW1lbnQuY29va2llLmxlbmd0aDsKICAgICAgICAgICAgcmV0dXJuIHVuZXNjYXBlKGRvY3VtZW50LmNvb2tpZS5zdWJzdHJpbmcoYmVnaW4sIGVuZCkpOwogICAgICAgIH0KICAgICB9CiAgICByZXR1cm4gbnVsbDsKfQpmdW5jdGlvbiBzZXRfY29va2llcygpCnsKCS8vIGFuYWx5dGljcwoJaWYoJCgnI2FuYWx5dGljcycpLnByb3AoJ2NoZWNrZWQnKSA9PSB0cnVlKQoJewoJCWRlbENvb2tpZShkaXNhYmxlU3RyKTsKCQlkb2N1bWVudC5jb29raWUgPSAnaGFzQ29uc2VudD10cnVlOycrIGdldENvb2tpZUV4cGlyZURhdGUoKSArJyA7IHBhdGg9Lyc7Cgl9CgllbHNlIAoJewoJCWdhT3B0b3V0KCdmYWxzZScpIDsgCgl9CgoJLy8gculzZWF1eCBzb2NpYXV4IAoJZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ21zZ2luZm8nKS5zdHlsZS5kaXNwbGF5ID0gJ2Jsb2NrJzsKCWRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdtc2dpbmZvJykuaW5uZXJIVE1MID0gIlRFWFRfTVNHX0lORk9fQ09PS0lFIiA7IAoKfQovLyBGb25jdGlvbiBkJ2VmZmFjZW1lbnQgZGVzIGNvb2tpZXMKZnVuY3Rpb24gZGVsQ29va2llKG5hbWUgKSAgIHsKICAgIHBhdGggPSAiO3BhdGg9IiArICIvIjsKICAgIGRvbWFpbiA9ICI7ZG9tYWluPSIgKyAiLiIrZG9jdW1lbnQubG9jYXRpb24uaG9zdG5hbWU7CiAgICB2YXIgZXhwaXJhdGlvbiA9ICJUaHUsIDAxLUphbi0xOTcwIDAwOjAwOjAxIEdNVCI7CiAgICBkb2N1bWVudC5jb29raWUgPSBuYW1lICsgIj0iICsgcGF0aCArIGRvbWFpbiArICI7ZXhwaXJlcz0iICsgZXhwaXJhdGlvbjsKfQoKLy8gRWZmYWNlIHRvdXMgbGVzIHR5cGVzIGRlIGNvb2tpZXMgdXRpbGlz6XMgcGFyIEdvb2dsZSBBbmFseXRpY3MKZnVuY3Rpb24gZGVsZXRlQW5hbHl0aWNzQ29va2llcygpIHsKICAgIHZhciBjb29raWVOYW1lcyA9IFsiX191dG1hIiwiX191dG1iIiwiX191dG1jIiwiX191dG16IiwiX2dhIl0KICAgIGZvciAodmFyIGk9MDsgaTxjb29raWVOYW1lcy5sZW5ndGg7IGkrKykKICAgICAgICBkZWxDb29raWUoY29va2llTmFtZXNbaV0pCn0KCi8vIExhIGZvbmN0aW9uIGQnb3B0LW91dApmdW5jdGlvbiBnYU9wdG91dChtb2RlPSdiYW5uaWVyZScpCnsKCWlmKHR5cGVvZihkaXNhYmxlU3RyKSAhPSAndW5kZWZpbmVkJykKCQlkb2N1bWVudC5jb29raWUgPSBkaXNhYmxlU3RyICsgJz10cnVlOycrIGdldENvb2tpZUV4cGlyZURhdGUoKSArJyA7IHBhdGg9Lyc7CglpZihtb2RlID09ICdiYW5uaWVyZScpCgkJZG9jdW1lbnQuY29va2llID0gJ2hhc0NvbnNlbnQ9ZmFsc2U7JysgZ2V0Q29va2llRXhwaXJlRGF0ZSgpICsnIDsgcGF0aD0vJzsKCXZhciBkaXYgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnY29va2llLWJhbm5lcicpOwoJLy8gQ2kgZGVzc291cyBsZSBjb2RlIGRlIGxhIGJhbm5p6HJlIGFmZmljaOllIHVuZSBmb2lzIHF1ZSBsJ3V0aWxpc2F0ZXVyIHMnZXN0IG9wcG9z6SBhdSBk6XD0dAoJLy8gVm91cyBwb3V2ZXogbW9kaWZpZXIgbGUgY29udGVudSBldCBsZSBzdHlsZQoJaWYgKCBkaXYhPSBudWxsICkgZGl2LmlubmVySFRNTCA9ICc8ZGl2IGNsYXNzPSJjb250YWluZXIiPiBWb3VzIHZvdXMg6nRlcyBvcHBvc+kgXAoJYXUgZOlw9HQgZGUgY29va2llcyBkZSBtZXN1cmVzIGRcJ2F1ZGllbmNlIEdvb2dsZSBzdXIgdm90cmUgbmF2aWdhdGV1ci48L2Rpdj4nCglpZih0eXBlb2YoZGlzYWJsZVN0cikgIT0gJ3VuZGVmaW5lZCcpCgkJd2luZG93W2Rpc2FibGVTdHJdID0gdHJ1ZTsKCWRlbGV0ZUFuYWx5dGljc0Nvb2tpZXMoKTsKCWlmKG1vZGUgPT0gJ2Jhbm5pZXJlJykKCQlhbGVydCgnTGVzIGNvb2tpZXMgR29vZ2xlIEFuYWx5dGljcyBuZSBzb250IHBsdXMgZW5yZWdpc3Ry6XMgc3VyIHZvdHJlIG9yZGluYXRldXIuJykgOwp9CmZ1bmN0aW9uIGNsb3NlX2Nvb2tpZV9iYW5uZXIoKQp7CgllbGVtZW50ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2Nvb2tpZS1iYW5uZXInKTsKCWVsZW1lbnQucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChlbGVtZW50KTsKCWRvY3VtZW50LmJvZHkuY2xhc3NOYW1lID0gZG9jdW1lbnQuYm9keS5jbGFzc05hbWUucmVwbGFjZSgnY29va2llYmFubmVyJywnJyk7Cglkb2N1bWVudC5jb29raWUgPSAnaGFzQ29uc2VudD10cnVlOyAnKyBnZXRDb29raWVFeHBpcmVEYXRlKCkgKycgOyBwYXRoPS8nOwp9Ci8vQ2UgYm91dCBkZSBjb2RlIHbpcmlmaWUgcXVlIGxlIGNvbnNlbnRlbWVudCBuJ2EgcGFzIGTpauAg6XTpIG9idGVudSBhdmFudCBkJ2FmZmljaGVyCi8vIGxhIGJhbmnpcmUKdmFyIGNvbnNlbnRDb29raWUgPSBnZXRDb29raWUoJ2hhc0NvbnNlbnQnKTsKaWYgKCFjb25zZW50Q29va2llKQp7CgkvL0wndXRpbGlzYXRldXIgbidhIHBhcyBlbmNvcmUgZGUgY29va2llIGRlIGNvbnNlbnRlbWVudAoJdmFyIHJlZmVycmVyX2hvc3QgPSBkb2N1bWVudC5yZWZlcnJlci5zcGxpdCgnLycpWzJdOwoJaWYgKCByZWZlcnJlcl9ob3N0ICE9IGRvY3VtZW50LmxvY2F0aW9uLmhvc3RuYW1lICkKCXsgLy9zaSBpbCB2aWVudCBkJ3VuIGF1dHJlIHNpdGUKCQkvL29uIGTpc2FjdGl2ZSBsZSB0cmFja2luZyBldCBvbiBhZmZpY2hlIGxhIGRlbWFuZGUgZGUgY29uc2VudGVtZW50CgkJLy8gYXJ0aWNsZSA2IGRlbGliZXJhdGlvbiBodHRwOi8vd3d3LmNuaWwuZnIvZG9jdW1lbnRhdGlvbi9kZWxpYmVyYXRpb25zL2RlbGliZXJhdGlvbi9kZWxpYi8zMDAvIG9uIHNlIHBhc3NlIGR1IGNvbnNlbnRlbWVudCBwb3VyIGxlIGTpcG90IGRlIGNvb2tpZSBpbW3pZGlhdDsKCQlpZih0eXBlb2YoZGlzYWJsZVN0cikgIT0gJ3VuZGVmaW5lZCcpCgkJCXdpbmRvd1tkaXNhYmxlU3RyXSA9IGZhbHNlOwoJCXdpbmRvdy5vbmxvYWQgPSBhc2tDb25zZW50KCk7Cgl9CgllbHNlCgl7IC8vc2lub24gb24gbHVpIGTpcG9zZSB1biBjb29raWUKCQlkb2N1bWVudC5jb29raWUgPSAnaGFzQ29uc2VudD10cnVlOyAnKyBnZXRDb29raWVFeHBpcmVEYXRlKCkgKycgOyBwYXRoPS8nOwoJfQp9Cjwvc2NyaXB0PgoJPC9ib2R5Pgo8L2h0bWw+Cg==
    http_version: null
  recorded_at: Wed, 08 Apr 2020 15:50:51 GMT
recorded_with: VCR 5.1.0
