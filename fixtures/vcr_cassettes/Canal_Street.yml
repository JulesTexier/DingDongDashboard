---
http_interactions:
- request:
    method: get
    uri: http://www.canal-street.fr/a-vendre/1
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Wed, 15 Apr 2020 14:41:00 GMT
      Server:
      - Apache/2.4.25 (Debian)
      Expires:
      - Thu, 19 Nov 1981 08:52:00 GMT
      Cache-Control:
      - no-store, no-cache, must-revalidate
      Pragma:
      - no-cache
      X-Bobcat-Version:
      - kitty.pryde.20200414.rev1
      Set-Cookie:
      - PHPSESSID=n4d6oeelabeh715gcbmo15np2t; path=/
      - SRV=c55; path=/
      Vary:
      - Accept-Encoding
      X-Server-Id:
      - cluster5-w6
      Access-Control-Allow-Origin:
      - "*"
      Content-Length:
      - '12008'
      Content-Type:
      - text/html; charset=UTF-8
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: null
  recorded_at: Wed, 15 Apr 2020 14:41:00 GMT
- request:
    method: get
    uri: http://www.canal-street.fr/a-vendre/2
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Wed, 15 Apr 2020 14:41:00 GMT
      Server:
      - Apache/2.4.25 (Debian)
      Expires:
      - Thu, 19 Nov 1981 08:52:00 GMT
      Cache-Control:
      - no-store, no-cache, must-revalidate
      Pragma:
      - no-cache
      X-Bobcat-Version:
      - kitty.pryde.20200414.rev1
      Set-Cookie:
      - PHPSESSID=53psn9729ce3bftau2m6ahr2qg; path=/
      - SRV=c53; path=/
      Vary:
      - Accept-Encoding
      X-Server-Id:
      - cluster5-w3
      Access-Control-Allow-Origin:
      - "*"
      Content-Length:
      - '7822'
      Content-Type:
      - text/html; charset=UTF-8
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: null
  recorded_at: Wed, 15 Apr 2020 14:41:00 GMT
- request:
    method: get
    uri: http://www.canal-street.fr/596-Canal-Saint-Martin-3-pieces-102-m.html
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Wed, 15 Apr 2020 14:41:00 GMT
      Server:
      - Apache/2.4.25 (Debian)
      Expires:
      - Thu, 19 Nov 1981 08:52:00 GMT
      Cache-Control:
      - no-store, no-cache, must-revalidate
      Pragma:
      - no-cache
      X-Bobcat-Version:
      - kitty.pryde.20200414.rev1
      Set-Cookie:
      - PHPSESSID=uk7h8v3uhq9m8kb19n43c13g4g; path=/
      - SRV=c54; path=/
      Vary:
      - Accept-Encoding
      X-Server-Id:
      - cluster5-w4
      Access-Control-Allow-Origin:
      - "*"
      Content-Length:
      - '14498'
      Content-Type:
      - text/html; charset=UTF-8
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: null
  recorded_at: Wed, 15 Apr 2020 14:41:00 GMT
- request:
    method: get
    uri: http://www.canal-street.fr/553-Republique-6-pieces-133-m.html
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Wed, 15 Apr 2020 14:41:00 GMT
      Server:
      - Apache/2.4.25 (Debian)
      Expires:
      - Thu, 19 Nov 1981 08:52:00 GMT
      Cache-Control:
      - no-store, no-cache, must-revalidate
      Pragma:
      - no-cache
      X-Bobcat-Version:
      - kitty.pryde.20200414.rev1
      Set-Cookie:
      - PHPSESSID=bofas25j7i0q6r2aqkmk6qnvre; path=/
      - SRV=c55; path=/
      Vary:
      - Accept-Encoding
      X-Server-Id:
      - cluster5-w6
      Access-Control-Allow-Origin:
      - "*"
      Content-Length:
      - '14358'
      Content-Type:
      - text/html; charset=UTF-8
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: null
  recorded_at: Wed, 15 Apr 2020 14:41:00 GMT
- request:
    method: get
    uri: http://www.canal-street.fr/668-Canal-Saint-Martin-3-pieces-62-18m.html
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Wed, 15 Apr 2020 14:41:00 GMT
      Server:
      - Apache/2.4.25 (Debian)
      Expires:
      - Thu, 19 Nov 1981 08:52:00 GMT
      Cache-Control:
      - no-store, no-cache, must-revalidate
      Pragma:
      - no-cache
      X-Bobcat-Version:
      - kitty.pryde.20200414.rev1
      Set-Cookie:
      - PHPSESSID=3878jj4ivdjfnspc8ji2s7duui; path=/
      - SRV=c53; path=/
      Vary:
      - Accept-Encoding
      X-Server-Id:
      - cluster5-w3
      Access-Control-Allow-Origin:
      - "*"
      Content-Length:
      - '14724'
      Content-Type:
      - text/html; charset=UTF-8
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: null
  recorded_at: Wed, 15 Apr 2020 14:41:00 GMT
- request:
    method: get
    uri: http://www.canal-street.fr/650-Hopital-Saint-Louis-3-pieces-59-98m.html
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Wed, 15 Apr 2020 14:41:00 GMT
      Server:
      - Apache/2.4.25 (Debian)
      Expires:
      - Thu, 19 Nov 1981 08:52:00 GMT
      Cache-Control:
      - no-store, no-cache, must-revalidate
      Pragma:
      - no-cache
      X-Bobcat-Version:
      - kitty.pryde.20200414.rev1
      Set-Cookie:
      - PHPSESSID=bqun1plnksa18get88tbvnnnjc; path=/
      - SRV=c54; path=/
      Vary:
      - Accept-Encoding
      X-Server-Id:
      - cluster5-w4
      Access-Control-Allow-Origin:
      - "*"
      Content-Length:
      - '14430'
      Content-Type:
      - text/html; charset=UTF-8
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: null
  recorded_at: Wed, 15 Apr 2020 14:41:00 GMT
- request:
    method: get
    uri: http://www.canal-street.fr/619-Hopital-Saint-Louis-2-pieces-54-m.html
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Wed, 15 Apr 2020 14:41:00 GMT
      Server:
      - Apache/2.4.25 (Debian)
      Expires:
      - Thu, 19 Nov 1981 08:52:00 GMT
      Cache-Control:
      - no-store, no-cache, must-revalidate
      Pragma:
      - no-cache
      X-Bobcat-Version:
      - kitty.pryde.20200414.rev1
      Set-Cookie:
      - PHPSESSID=30gri2vprrruo29p34co6bfje8; path=/
      - SRV=c55; path=/
      Vary:
      - Accept-Encoding
      X-Server-Id:
      - cluster5-w6
      Access-Control-Allow-Origin:
      - "*"
      Content-Length:
      - '14483'
      Content-Type:
      - text/html; charset=UTF-8
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: null
  recorded_at: Wed, 15 Apr 2020 14:41:00 GMT
- request:
    method: get
    uri: http://www.canal-street.fr/567-Canal-saint-Martin-2-pieces-42-42-m-Box.html
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Wed, 15 Apr 2020 14:41:00 GMT
      Server:
      - Apache/2.4.25 (Debian)
      Expires:
      - Thu, 19 Nov 1981 08:52:00 GMT
      Cache-Control:
      - no-store, no-cache, must-revalidate
      Pragma:
      - no-cache
      X-Bobcat-Version:
      - kitty.pryde.20200414.rev1
      Set-Cookie:
      - PHPSESSID=ked5o7rpekpckct5dk44m30o4u; path=/
      - SRV=c52; path=/
      Vary:
      - Accept-Encoding
      X-Server-Id:
      - cluster5-w2
      Access-Control-Allow-Origin:
      - "*"
      Content-Length:
      - '14636'
      Content-Type:
      - text/html; charset=UTF-8
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        PCFET0NUWVBFIGh0bWw+CjxodG1sIGxhbmc9ImZyIiBjbGFzcz0ibm8tanMiPgogICAgPGhlYWQ+CiAgICAgICAgPG1ldGEgY2hhcnNldD0idXRmLTgiPgogICAgICAgIDxtZXRhIGh0dHAtZXF1aXY9IlgtVUEtQ29tcGF0aWJsZSIgY29udGVudD0iSUU9ZWRnZSI+CiAgICAgICAgPG1ldGEgbmFtZT0idmlld3BvcnQiIGNvbnRlbnQ9IndpZHRoPWRldmljZS13aWR0aCwgaW5pdGlhbC1zY2FsZT0xLjAsIG1heGltdW0tc2NhbGU9MS4wIj4KICAgICAgICA8dGl0bGU+dmVudGUgQ2FuYWwgc2FpbnQgTWFydGluLCAyIHBpw6hjZXMgNDIsNDIgbcKyICsgQm94PC90aXRsZT4KICAgICAgICA8bWV0YSBuYW1lPSJkZXNjcmlwdGlvbiIgY29udGVudD0idmVudGUgYXBwYXJ0ZW1lbnQgMiBwacOoY2VzIFBhcmlzIDogQ2FuYWwgc2FpbnQgTWFydGluLCAyIHBpw6hjZXMgNDIsNDIgbcKyICsgQm94Ij4KICAgICAgICA8bWV0YSBuYW1lPSJhdXRob3IiIGNvbnRlbnQ9IiI+CiAgICAgICAgCiAgICAgICAgICAgIDxsaW5rIHJlbD0iaWNvbiIgaHJlZj0iaW1hZ2VzL2Zhdmljb24ucG5nIiB0eXBlPSJpbWFnZS9wbmciIC8+CiAgICAgICAgICAgIDxsaW5rIHJlbD0ic2hvcnRjdXQgaWNvbiIgaHJlZj0iaW1hZ2VzL2Zhdmljb24ucG5nIiB0eXBlPSJpbWFnZS9wbmciIC8+CiAgICAgICAgCiAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxtZXRhIG5hbWU9ImdlbmVyYXRvciIgY29udGVudD0idmVuaWNlIiA+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaW5rICByZWw9ImNhbm9uaWNhbCIgaHJlZj0iaHR0cDovL3d3dy5jYW5hbC1zdHJlZXQuZnIvNTY3LUNhbmFsLXNhaW50LU1hcnRpbi0yLXBpZWNlcy00Mi00Mi1tLUJveC5odG1sIiA+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxtZXRhIHByb3BlcnR5PSJnZW5lcmF0b3IiIGNvbnRlbnQ9ImJPYmNhdCIgPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKCiAgICAgICAgCgogICAgICAgIDxiYXNlIGhyZWY9Imh0dHA6Ly93d3cuY2FuYWwtc3RyZWV0LmZyLyI+CgogICAgICAgIAogICAgICAgIAogICAgICAgICAgICAgICAgPHNjcmlwdCB0eXBlPSJhcHBsaWNhdGlvbi9sZCtqc29uIj4KICAgICAgICB7CiAgICAgICAgICAgICJAY29udGV4dCI6ICJodHRwczovL3NjaGVtYS5vcmciLAogICAgICAgICAgICAiQHR5cGUiOiAiT3JnYW5pemF0aW9uIiwKICAgICAgICAgICAgIm5hbWUiOiAiQ0FOQUwgU1RSRUVUIiwKICAgICAgICAgICAgImFnZ3JlZ2F0ZVJhdGluZyI6CiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICJAdHlwZSI6ICJBZ2dyZWdhdGVSYXRpbmciLAogICAgICAgICAgICAgICAgInJhdGluZ1ZhbHVlIjogIjkzIiwKICAgICAgICAgICAgICAgICJyZXZpZXdDb3VudCI6ICI1MCIsCiAgICAgICAgICAgICAgICAiV29yc3RSYXRpbmciOiAiMCIsCiAgICAgICAgICAgICAgICAiQmVzdFJhdGluZyI6IjEwMCIKICAgICAgICAgICAgfQogICAgICAgIH0KICAgIDwvc2NyaXB0PgogICAgICAgIAoKICAgICAgICAKICAgIAogICAgICAgIDxtZXRhIHByb3BlcnR5PSJvZzp0aXRsZSIgY29udGVudD0iQ2FuYWwgc2FpbnQgTWFydGluLCAyIHBpJmVncmF2ZTtjZXMgNDIsNDIgbSZzdXAyOyArIEJveCIgLz4KICAgICAgICA8bWV0YSBwcm9wZXJ0eT0ib2c6dHlwZSIgY29udGVudD0iQXJ0aWNsZSIgLz4KICAgICAgICA8bWV0YSBwcm9wZXJ0eT0ib2c6aW1hZ2UiIGNvbnRlbnQ9Imh0dHA6Ly9jYW5hbC1zdHJlZXQuc3RhdGljbGJpLmNvbS9vcmlnaW5hbC9pbWFnZXMvYmllbnMvMS82ZWE3MGY0MmNiZDFmMWZiMWMyOGI4ZGIxODNlZDQ2YS9vcmlnaW5hbC84OWNjMTM3YThlOWE0N2NkZTg2NTc1ZTdmMjc2Yzg5Mi5qcGciIC8+CiAgICAKCiAgICAgICAgIAoKICAgICAgICAKICAgICAgICAgICAgPGxpbmsgcmVsPSJzdHlsZXNoZWV0IiB0eXBlPSJ0ZXh0L2NzcyIgaHJlZj0iL2Nzcy9idWlsZF9jYTFiODljN2MyYjhlMGZhNTZhZmZlMTMzZTZlMjlkYy5jc3MiIC8+CiAgICAgICAgICAgIDxsaW5rIHJlbD0ic3R5bGVzaGVldCIgdHlwZT0idGV4dC9jc3MiIGhyZWY9Ii8vY29kZS5qcXVlcnkuY29tL3VpLzEuMTAuNC90aGVtZXMvc21vb3RobmVzcy9qcXVlcnktdWkuY3NzIiAvPgogICAgICAgIAogICAgICAgICAKICAgICAgICA8bGluayByZWw9InN0eWxlc2hlZXQiIHR5cGU9InRleHQvY3NzIiBocmVmPSIvY3NzL2ZvbnRzL3N0eWxlLmNzcyIgLz4KICAgICAgICA8bGluayByZWw9InN0eWxlc2hlZXQiIHR5cGU9InRleHQvY3NzIiBocmVmPSIvY3NzL2V4cHJlLmNzcyIgLz4KICAgICAgICAgCiAgICAgICAgPCEtLSBIVE1MNSBTaGltIGFuZCBSZXNwb25kLmpzIElFOCBzdXBwb3J0IG9mIEhUTUw1IGVsZW1lbnRzIGFuZCBtZWRpYSBxdWVyaWVzIC0tPgogICAgICAgIDwhLS1baWYgbHQgSUUgOV0+CiAgICAgICAgICA8c2NyaXB0IHNyYz0iaHR0cHM6Ly9vc3MubWF4Y2RuLmNvbS9saWJzL2h0bWw1c2hpdi8zLjcuMC9odG1sNXNoaXYuanMiPjwvc2NyaXB0PgogICAgICAgICAgPHNjcmlwdCBzcmM9Imh0dHBzOi8vb3NzLm1heGNkbi5jb20vbGlicy9yZXNwb25kLmpzLzEuNC4yL3Jlc3BvbmQubWluLmpzIj48L3NjcmlwdD4KICAgICAgICA8IVtlbmRpZl0tLT4KICAgICAgICAKICAgICAgICAKICAgICAgICAgICAgPCEtLSBHb29nbGUgVGFnIE1hbmFnZXIgLS0+CjxzY3JpcHQ+KGZ1bmN0aW9uKHcsZCxzLGwsaSl7IHdbbF09d1tsXXx8W107d1tsXS5wdXNoKCB7ICdndG0uc3RhcnQnOgogICAgbmV3IERhdGUoKS5nZXRUaW1lKCksZXZlbnQ6J2d0bS5qcyd9KTt2YXIgZj1kLmdldEVsZW1lbnRzQnlUYWdOYW1lKHMpWzBdLAogICAgICAgICAgICBqPWQuY3JlYXRlRWxlbWVudChzKSxkbD1sIT0nZGF0YUxheWVyJz8nJmw9JytsOicnO2ouYXN5bmM9dHJ1ZTtqLnNyYz0KICAgICAgICAgICAgJ2h0dHBzOi8vd3d3Lmdvb2dsZXRhZ21hbmFnZXIuY29tL2d0bS5qcz9pZD0nK2krZGw7Zi5wYXJlbnROb2RlLmluc2VydEJlZm9yZShqLGYpOwogICAgICAgICAgICB9KSh3aW5kb3csZG9jdW1lbnQsJ3NjcmlwdCcsJ2RhdGFMYXllcicsJ0dUTS1XNkc0VlRNJyk7PC9zY3JpcHQ+CjwhLS0gRW5kIEdvb2dsZSBUYWcgTWFuYWdlciAtLT4KICAgICAgICAKICAgICAgICAKICAgICAgICAgICAgICAgICAgICAKICAgIDwvaGVhZD4KCiAgICA8Ym9keSBpZD0icGFnZURldGFpbCIgY2xhc3M9IiI+CgogICAgICAgICAgICA8IS0tIEdvb2dsZSBUYWcgTWFuYWdlciAobm9zY3JpcHQpIC0tPgo8bm9zY3JpcHQ+PGlmcmFtZSBzcmM9Imh0dHBzOi8vd3d3Lmdvb2dsZXRhZ21hbmFnZXIuY29tL25zLmh0bWw/aWQ9R1RNLVc2RzRWVE0iCiAgICAgICAgICAgICAgICAgIGhlaWdodD0iMCIgd2lkdGg9IjAiIHN0eWxlPSJkaXNwbGF5Om5vbmU7dmlzaWJpbGl0eTpoaWRkZW4iPjwvaWZyYW1lPjwvbm9zY3JpcHQ+CjwhLS0gRW5kIEdvb2dsZSBUYWcgTWFuYWdlciAobm9zY3JpcHQpIC0tPgoKICAgIAoKICAgICAgICAKICAgICAgICAgICAgICAgICAgICAKCiAgICAgICAgCiAgICAKCgogICAgCiAgICAKICAgICAgICAgICAgCiAgICAgICAgCgoKCgogICAgCgogICAgCgoKCiAgICAKICAgIAogICAgICAgICAgICAKICAgIAogICAgICAgIAogICAgICAgIAogICAgICAgIAoKCgoKICAgIAoKIAogICAgICAgICAgICAgICAgCiAgICAKICAgICAgICAKICAgIAogICAgCiAgICAKICAgIAogICAgCiAgICAKICAgICAgICAgICAgCiAgIAogICAgDQogICAgPGhlYWRlciBjbGFzcz0icHJpbmNpcGFsSGVhZGVyIj4NCiAgICAgICAgPHNlY3Rpb24gY2xhc3M9ImhlYWRlclRvcCI+DQogICAgICAgICAgICA8ZGl2IGNsYXNzPSJ1dGlscyB2aXNpYmxlLWxnIHZpc2libGUtbWQgaGlkZGVuLXNtIGhpZGRlbi14cyI+DQogICAgICAgICAgICAgICAgPGRpdiBpZD0ibGFuZyIgY2xhc3M9ImFjdGlvbjIgbGFuZ3VlcyI+DQogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImFjdGlvbjItaXRlbSI+DQogICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iZmxhZyBmbGFnX2ZyIGFjdGl2ZUxhbmcgZHJvcGRvd24tdG9nZ2xlIiBkYXRhLXRvZ2dsZT0iZHJvcGRvd24iPjwvc3Bhbj4NCiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImhpZGRlbkxhbmd1ZSI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJmbGFnIGZsYWdfZnIgZmxhZ19mcl9mYWRlZCBoaWRlIHJpZ2h0Ij4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxmb3JtIG1ldGhvZD0icG9zdCIgYWN0aW9uPSIvL3d3dy5jYW5hbC1zdHJlZXQuZnIvNTY3LUNhbmFsLXNhaW50LU1hcnRpbi0yLXBpZWNlcy00Mi00Mi1tLUJveC5odG1sIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0iaGlkZGVuIiBuYW1lPSJsYW5nIiB2YWx1ZT0iZnIiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJzdWJtaXQiIHZhbHVlPSIgIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZm9ybT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJmbGFnIGZsYWdfZW4gZmxhZ19lbl9mYWRlZCAgcmlnaHQiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGZvcm0gbWV0aG9kPSJwb3N0IiBhY3Rpb249Ii8vd3d3LmNhbmFsLXN0cmVldC5mci81NjctQ2FuYWwtc2FpbnQtTWFydGluLTItcGllY2VzLTQyLTQyLW0tQm94Lmh0bWwiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJoaWRkZW4iIG5hbWU9ImxhbmciIHZhbHVlPSJlbiI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9InN1Ym1pdCIgdmFsdWU9IiAiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9mb3JtPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgPGRpdiBpZD0icGFuaWVyIiBjbGFzcz0iYWN0aW9uMiBwYW5pZXIiPg0KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJhY3Rpb24yLWl0ZW0iPg0KICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iL3NlbGVjdGlvbi5odG1sIiBkYXRhLXRvZ2dsZT0idG9vbHRpcCIgZGF0YS1wbGFjZW1lbnQ9ImxlZnQiID48c3BhbiBjbGFzcz0iaWNvbi1jb2V1cjIgaWNvbnMtZHQiPjwvc3Bhbj48L2E+DQogICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgIDwvZGl2Pg0KDQogICAgICAgICAgICAgICAgPGRpdiBpZD0ibWFpbCIgY2xhc3M9ImFjdGlvbjIgYWN0aW9ucnN2Ij4NCiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iYWN0aW9uMi1pdGVtIj4NCiAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Ii9jb250YWN0Lmh0bWwiPjxzcGFuIGNsYXNzPSJpY29uLWVtYWlsMiBpY29ucyBkcm9wZG93bi10b2dnbGUiIGRhdGEtdG9nZ2xlPSJkcm9wZG93biIgPjwvc3Bhbj4gIDxzcGFuIGNsYXNzPSJ0ZXh0ZmFjZWJvb2siPk5vdXMgQ29udGFjdGVyPC9zcGFuPjwvYT4NCiAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgPC9kaXY+DQoNCiAgICAgICAgICAgICAgICA8ZGl2IGlkPSJmYWNlYm9va2siIGNsYXNzPSJhY3Rpb24yIGFjdGlvbnJzdiI+DQogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImFjdGlvbjItaXRlbSI+DQogICAgICAgICAgICAgICAgICAgICAgICA8YSB0YXJnZXQ9Il9ibGFuayIgaHJlZj0iaHR0cHM6Ly93d3cuZmFjZWJvb2suY29tL2NhbmFsc3RyZWV0aW1tby8/ZnJlZj10cyI+PHNwYW4gY2xhc3M9Imljb24tZmFjZWJvb2syIGljb25zIGRyb3Bkb3duLXRvZ2dsZSIgZGF0YS10b2dnbGU9ImRyb3Bkb3duIiA+PC9zcGFuPiAgPHNwYW4gY2xhc3M9InRleHRmYWNlYm9vayI+Tm91cyBzdWl2cmUgc3VyIEZhY2Vib29rPC9zcGFuPjwvYT4NCiAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgPC9kaXY+DQoNCiAgICAgICAgICAgICAgICA8ZGl2IGlkPSJ0d2l0dGVyciIgY2xhc3M9ImFjdGlvbjIgYWN0aW9ucnN2Ij4NCiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iYWN0aW9uMi1pdGVtIj4NCiAgICAgICAgICAgICAgICAgICAgICAgIDxhIHRhcmdldD0iX2JsYW5rIiBocmVmPSJodHRwczovL3R3aXR0ZXIuY29tL2NhbmFsc3RyZWV0aW1tbyI+PHNwYW4gY2xhc3M9Imljb24tdHdpdHRlcjMgaWNvbnMgZHJvcGRvd24tdG9nZ2xlIiBkYXRhLXRvZ2dsZT0iZHJvcGRvd24iID48L3NwYW4+ICA8c3BhbiBjbGFzcz0idGV4dGZhY2Vib29rIj5Ob3VzIHN1aXZyZSBzdXIgVHdpdHRlcjwvc3Bhbj48L2E+DQogICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgIDwvZGl2Pg0KDQogICAgICAgICAgICAgICAgPGRpdiBpZD0iZ29vZ2xlZSIgY2xhc3M9ImFjdGlvbjIgYWN0aW9ucnN2Ij4NCiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iYWN0aW9uMi1pdGVtIj4NCiAgICAgICAgICAgICAgICAgICAgICAgIDxhIHRhcmdldD0iX2JsYW5rIiBocmVmPSJodHRwczovL3BsdXMuZ29vZ2xlLmNvbS8rQ2FuYWxTdHJlZXRJbW1vYmlsaWVyIj48c3BhbiBjbGFzcz0iaWNvbi1nb29nbGVwbHVzMiBpY29ucyBkcm9wZG93bi10b2dnbGUiIGRhdGEtdG9nZ2xlPSJkcm9wZG93biIgPjwvc3Bhbj4gIDxzcGFuIGNsYXNzPSJ0ZXh0ZmFjZWJvb2siPk5vdXMgc3VpdnJlIHN1ciBHb29nbGUrPC9zcGFuPjwvYT4NCiAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgPC9kaXY+DQoNCiAgICAgICAgICAgICAgICA8ZGl2IGlkPSJkYWlseW1vdGlvbiIgY2xhc3M9ImFjdGlvbjIgYWN0aW9ucnN2Ij4NCiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iYWN0aW9uMi1pdGVtIj4NCiAgICAgICAgICAgICAgICAgICAgICAgIDxhIHRhcmdldD0iX2JsYW5rIiBocmVmPSJodHRwOi8vd3d3LmRhaWx5bW90aW9uLmNvbS9jYW5hbHN0cmVldGltbW8iPjxzcGFuIGNsYXNzPSJpY29uLWRhaWx5bW90aW9uIGljb25zIGRyb3Bkb3duLXRvZ2dsZSIgZGF0YS10b2dnbGU9ImRyb3Bkb3duIiA+PC9zcGFuPiAgPHNwYW4gY2xhc3M9InRleHRmYWNlYm9vayI+Tm91cyBzdWl2cmUgc3VyIERhaWx5bW90aW9uPC9zcGFuPjwvYT4NCiAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgPC9kaXY+DQoNCiAgICAgICAgICAgICAgICA8ZGl2IGlkPSJ5b3V0dWJlIiBjbGFzcz0iYWN0aW9uMiBhY3Rpb25yc3YiPg0KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJhY3Rpb24yLWl0ZW0iPg0KICAgICAgICAgICAgICAgICAgICAgICAgPGEgdGFyZ2V0PSJfYmxhbmsiIGhyZWY9Imh0dHBzOi8vd3d3LnlvdXR1YmUuY29tL2NoYW5uZWwvVUNsWEdNR0tPUnRYVlNWRDRFWG9jMGx3Ij48c3BhbiBjbGFzcz0iaWNvbi15b3V0dWJlMiBpY29ucyBkcm9wZG93bi10b2dnbGUiIGRhdGEtdG9nZ2xlPSJkcm9wZG93biIgPjwvc3Bhbj4gIDxzcGFuIGNsYXNzPSJ0ZXh0ZmFjZWJvb2siPk5vdXMgc3VpdnJlIHN1ciBZb3V0dWJlPC9zcGFuPjwvYT4NCiAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgPC9kaXY+DQoNCiAgICAgICAgICAgICAgICA8ZGl2IGlkPSJwaW50ZXJlc3QiIGNsYXNzPSJhY3Rpb24yIGFjdGlvbnJzdiI+DQogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImFjdGlvbjItaXRlbSI+DQogICAgICAgICAgICAgICAgICAgICAgICA8YSB0YXJnZXQ9Il9ibGFuayIgaHJlZj0iaHR0cDovL3d3dy5waW50ZXJlc3QuZnIvY2FuYWxzdHJlZXRpbW1vIj48c3BhbiBjbGFzcz0iaWNvbi1waW50ZXJlc3QgaWNvbnMgZHJvcGRvd24tdG9nZ2xlIiBkYXRhLXRvZ2dsZT0iZHJvcGRvd24iID48L3NwYW4+ICA8c3BhbiBjbGFzcz0idGV4dGZhY2Vib29rIj5Ob3VzIHN1aXZyZSBzdXIgUGludGVyZXN0PC9zcGFuPjwvYT4NCiAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgPC9kaXY+DQoNCiAgICAgICAgICAgICAgICA8ZGl2IGlkPSJsaW5rZWRpbiIgY2xhc3M9ImFjdGlvbjIgYWN0aW9ucnN2Ij4NCiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iYWN0aW9uMi1pdGVtIj4NCiAgICAgICAgICAgICAgICAgICAgICAgIDxhIHRhcmdldD0iX2JsYW5rIiBocmVmPSJodHRwczovL3d3dy5saW5rZWRpbi5jb20vaW4vY2FuYWwtc3RyZWV0LTE5NjA3M2IyLyI+PHNwYW4gY2xhc3M9Imljb24tbGlua2VkaW4yIGljb25zIGRyb3Bkb3duLXRvZ2dsZSIgZGF0YS10b2dnbGU9ImRyb3Bkb3duIiA+PC9zcGFuPiAgPHNwYW4gY2xhc3M9InRleHRmYWNlYm9vayI+Tm91cyBzdWl2cmUgc3VyIExpbmtlZGluPC9zcGFuPjwvYT4NCiAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgPC9kaXY+DQoNCiAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29udGFpbmVyIj4NCiAgICAgICAgICAgICAgICANCiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icm93IGFsbEhlYWRlciI+DQogICAgICAgICAgICAgICAgICAgICAgICANCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJhY3Rpb24taXRlbSI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxidXR0b24gY2xhc3M9ImJ0bkhlYWRlciIgb25jbGljaz0id2luZG93Lm9wZW4oJy9hZG1pbi9lc3BhY2VfcHJvcHJpZXRhaXJlLnBocCcpOyByZXR1cm4gZmFsc2U7Ij4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJpY29uLWVzcGFjZXByb3ByaWV0YWlyZSBidG5IZWFkZXJJY29uIj48L3NwYW4+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iYnRuSGVhZGVyVGVybSI+RXNwYWNlIHByb3ByacOpdGFpcmU8L3NwYW4+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYnV0dG9uPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgICAgICAgICANCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbC1tZC00IGxvZ28iPiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIDxhIGhyZWY9Ii8iIGlkPSJsb2dvU2l0ZSIgPjxpbWcgc3JjPSJodHRwOi8vY2FuYWwtc3RyZWV0LnN0YXRpY2xiaS5jb20vb3JpZ2luYWwvaW1hZ2VzL2xvZ29TaXRlLnBuZyIgLz48L2E+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIAogICAgDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtbWQtNyBjb2wtbWQtb2Zmc2V0LTEgbWVudSI+CiAgICAgICAgICAgICAgICA8bmF2IGNsYXNzPSJuYXZiYXIgbmF2YmFyLWRlZmF1bHQgIGFmZml4LXRvcCAiPgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Im5hdmJhci1oZWFkZXIiPgogICAgICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIHR5cGU9ImJ1dHRvbiIgY2xhc3M9Im5hdmJhci10b2dnbGUgYnRuLXRvZ2dsZSIgZGF0YS10b2dnbGU9ImNvbGxhcHNlIiBkYXRhLXRhcmdldD0iI25hdmJhciIgYXJpYS1leHBhbmRlZD0iZmFsc2UiIGFyaWEtY29udHJvbHM9Im5hdmJhciI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0b2dnbGVFbHQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJ3b3JkIj5NZW51PC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0b2dnbGVFbHQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJpY29uLWJhciI+PC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJpY29uLWJhciI+PC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJpY29uLWJhciI+PC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvYnV0dG9uPgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgICAgICAgICA8ZGl2IGlkPSJuYXZiYXJUaGVtZSI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNsb3NlTmF2IHZpc2libGUteHMiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4+JmxlZnRhcnJvdzs8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICA8dWwgY2xhc3M9Im5hdiBuYXZiYXItbmF2Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgIDxsaSBjbGFzcz0iICI+CiAgICAgICAgICAgIDxhIGhyZWY9Ii8iIHRhcmdldD0iIiA+PGltZyBzcmM9Jy4uL2ltYWdlcy9hY2N1ZWlsLnBuZycgYWx0PScnPjwvYT4KICAgIAogICAgPC9saT4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgPGxpIGNsYXNzPSIgIj4KICAgICAgICAgICAgPGEgaHJlZj0iL2EtdmVuZHJlLzEiIHRhcmdldD0iIiA+QWNoZXRlcjwvYT4KICAgIAogICAgPC9saT4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgPGxpIGNsYXNzPSIgIj4KICAgICAgICAgICAgPGEgaHJlZj0iL2EtbG91ZXIvMSIgdGFyZ2V0PSIiID5Mb3VlcjwvYT4KICAgIAogICAgPC9saT4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgPGxpIGNsYXNzPSIgIj4KICAgICAgICAgICAgPGEgaHJlZj0iL2VzdGltYXRpb24taW1tb2JpbGllcmUtcGFyaXMuaHRtbCIgdGFyZ2V0PSIiID5WZW5kcmU8L2E+CiAgICAKICAgIDwvbGk+ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgIDxsaSBjbGFzcz0iICI+CiAgICAgICAgICAgIDxhIGhyZWY9Ii9nZXN0aW9uLWxvY2F0aXZlLXBhcmlzLmh0bWwiIHRhcmdldD0iIiA+RmFpcmUgZ8OpcmVyPC9hPgogICAgCiAgICA8L2xpPiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICA8bGkgY2xhc3M9IiAiPgogICAgICAgICAgICA8YSBocmVmPSIvbm9zLWNvbnNlaWxzLmh0bWwiIHRhcmdldD0iIiA+Tm9zIGNvbnNlaWxzPC9hPgogICAgCiAgICA8L2xpPiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3VsPgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPC9uYXY+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIAogICAgDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgIA0KICAgICAgICAgICAgPC9kaXY+DQogICAgICAgIDwvc2VjdGlvbj4NCiAgICAgICAgDQogICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICA8c2VjdGlvbiBjbGFzcz0ic2VhcmNoWm9uZSBzZWFyY2hJbm5lciI+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb250YWluZXIgc2VhcmNoIj4KICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgPGZvcm0gbWV0aG9kPSJwb3N0IiBjbGFzcz0iY29udGFpbmVyU2VhcmNoIHYyIiBkYXRhLXNlbGVjdHBpY2tlci1ub3Jlc3VsdHMgPSAiQXVjdW4gcsOpc3VsdGF0IiBhY3Rpb249Ii9yZWNoZXJjaGUvIiByb2xlPSJmb3JtIj4KICAgIAogICAgICAgIDxkaXYgY2xhc3M9InJvdyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZm9ybS1ncm91cCBjb2wteHMtMTIgY29sLW1kLTQgY29sLXhzLTEyIj4gIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9InRleHQiIG5hbWU9ImRhdGFbU2VhcmNoXVtzdXJmbWluXSIgcGxhY2Vob2xkZXI9IlN1cmZhY2UgbWluLiAobcKyKSIgaWQ9ImlucHV0U3VyZk1pbiIgdmFsdWU9IiIgY2xhc3M9ImZvcm0tY29udHJvbCBudW1lcmljSW5wdXQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZm9ybS1ncm91cCBjb2wteHMtMTIgY29sLW1kLTQgY29sLXNtLTYgY29sLXhzLTEyIj4gIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9InRleHQiIG5hbWU9ImRhdGFbU2VhcmNoXVtwcml4bWF4XSIgcGxhY2Vob2xkZXI9IkJ1ZGdldCBtYXhpIiBpZD0iaW5wdXRfcHJpeE1heCIgdmFsdWU9IiIgY2xhc3M9ImZvcm0tY29udHJvbCBudW1lcmljSW5wdXQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImJ0blNlYXJjaCBjb2wteHMtMTIgY29sLW1kLTQgY29sLXNtLTEyIGNvbC14cy0xMiI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiB0eXBlPSJzdWJtaXQiIGNsYXNzPSJidG4gYnRuLXByaW1hcnkiPlJlY2hlcmNoZXI8L2J1dHRvbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJhZHZTZWFyY2hCdG4iPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4+UmVjaGVyY2hlIGF2YW5jw6llPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iaWNvbkZsZWNoIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iaWNvbi1taW5pLWYtcmlnaHQgIj48L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgCiAgICAKICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSIgYWR2U2VhcmNoICI+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJyb3ciPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImZvcm0tZ3JvdXAgY29sLXhzLTEyIGNvbC1tZC0zIGNvbC1zbS02IGNvbC14cy0xMiI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNlbGVjdCBuYW1lPSJkYXRhW1NlYXJjaF1baWR2aWxsZWNvZGVdW10iIGlkPSJpbnB1dExvY2FsaXNhdGlvbiIgY2xhc3M9ImZvcm0tY29udHJvbCBzZWxlY3RwaWNrZXIiIG11bHRpcGxlIHRpdGxlPSJMb2NhbGlzYXRpb24iIGRhdGEtbGl2ZS1zZWFyY2g9dHJ1ZSBkYXRhLXN0eWxlPSJidG4tc2VsZWN0cGlja2VyIj4KICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT0idm9pZCI+TG9jYWxpc2F0aW9uPC9vcHRpb24+CiAgICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPSJ2aWxsZS0xIiA+CiAgICAgICAgICAgIFRvdXRlIGxhIHZpbGxlIC0gUGFyaXMKICAgICAgICA8L29wdGlvbj4KICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT0iY29kZS0xMCIgPgogICAgICAgICAgICA3NTAxMCAtIFBhcmlzCiAgICAgICAgPC9vcHRpb24+CiAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9ImNvZGUtMTkiID4KICAgICAgICAgICAgNzUwMTkgLSBQYXJpcwogICAgICAgIDwvb3B0aW9uPgogICAgPC9zZWxlY3Q+CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJmb3JtLWdyb3VwIGNvbC14cy0xMiBjb2wtbWQtMiBjb2wteHMtMTIiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJ0ZXh0IiBuYW1lPSJkYXRhW1NlYXJjaF1bcHJpeG1pbl0iIHBsYWNlaG9sZGVyPSJCdWRnZXQgbWluaW11bSIgaWQ9ImlucHV0X2R1YWxQcml4TWluIiB2YWx1ZT0iIiAgY2xhc3M9ImZvcm0tY29udHJvbCBudW1lcmljSW5wdXQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJyb3ciPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIAogICAgPC9mb3JtPiAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9zZWN0aW9uPgogICAgICAgIAogICAgDQogICAgICAgIA0KICAgIDwvaGVhZGVyPg0KCiAgICAKICAgICAgICAKICAgIAogICAgCiAgICAgICAgCiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbnRhaW5lciI+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgCiAgICAKICAgIAogICAgCiAgICAKCiAgICAgICAgCiAgICAgICAgICAgIAogICAgICAgIAogICAgICAgICAgICAKICAgICAgICAKICAgICAgICAKICAgICAgICAKICAgICAgICAKICAgIAogICAgICAgICAgICAKICAgICAgICAKICAgICAgICAKICAgICAgICAKICAgICAgICAKICAgICAgICAKICAgICAgICAKCiAgIAoKICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgaWQ9IkNhbGN1bGV0dGUiIGNsYXNzPSJtb2RhbCBmYWRlIiAgdGFiaW5kZXg9Ii0xIiByb2xlPSJkaWFsb2ciIGFyaWEtbGFiZWxsZWRieT0ibXlMYXJnZU1vZGFsTGFiZWwiIGFyaWEtaGlkZGVuPSJ0cnVlIj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Im1vZGFsLWRpYWxvZyBtb2RhbC1tZCI+CiAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InJvdyBtb2RhbC1jb250ZW50Ij4KICAgICAgICAgICAgICAgICAgICA8Zm9ybSBjbGFzcz0iZm9ybS1ob3Jpem9udGFsIiByb2xlPSJmb3JtIiBhY3Rpb249IiIgb25zdWJtaXQ9InJldHVybiBjYWxjdWxhdGVDcmVkaXQodGhpcyk7Ij4KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ibW9kYWwtaGVhZGVyIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxidXR0b24gdHlwZT0iYnV0dG9uIiBjbGFzcz0iY2xvc2UiIGRhdGEtZGlzbWlzcz0ibW9kYWwiIGFyaWEtaGlkZGVuPSJ0cnVlIj4mdGltZXM7PC9idXR0b24+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aDQgY2xhc3M9Im1vZGFsLXRpdGxlIHRoZW1UaXRsZSI+Q2FsY3VsZXR0ZTwvaDQ+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJtb2RhbC1ib2R5Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImZvcm0tZ3JvdXAiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgZm9yPSJtb250YW50IiBjbGFzcz0iY29sLW1kLTQgY29udHJvbC1sYWJlbCI+TW9udGFudCAqPC9sYWJlbD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sLW1kLTgiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9InRleHQiIGNsYXNzPSJmb3JtLWNvbnRyb2wgbnVtZXJpY0lucHV0IiBuYW1lPSJtb250YW50IiBpZD0ibW9udGFudCIgdmFsdWU9IjQ3MDAwMCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJmb3JtLWdyb3VwIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGZvcj0idGF1eCIgY2xhc3M9ImNvbC1tZC00IGNvbnRyb2wtbGFiZWwiPlRhdXggKCUpICogPC9sYWJlbD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sLW1kLTgiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9Im51bWJlciIgc3RlcD0iMC4wMSIgbWluPSIwIiBjbGFzcz0iZm9ybS1jb250cm9sIiBuYW1lPSJ0YXV4IiBpZD0idGF1eCIgcmVxdWlyZWQ9IiI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJmb3JtLWdyb3VwIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGZvcj0iYXBwb3J0IiBjbGFzcz0iY29sLW1kLTQgY29udHJvbC1sYWJlbCI+QXBwb3J0IDwvbGFiZWw+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbC1tZC04Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0idGV4dCIgY2xhc3M9ImZvcm0tY29udHJvbCBudW1lcmljSW5wdXQiIG5hbWU9ImFwcG9ydCIgaWQ9ImFwcG9ydCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJmb3JtLWdyb3VwIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGZvcj0iZHVyZWUiIGNsYXNzPSJjb2wtbWQtNCBjb250cm9sLWxhYmVsIj5EdXLDqWUgKEFubsOpZXMpICogPC9sYWJlbD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sLW1kLTgiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9InRleHQiIGNsYXNzPSJmb3JtLWNvbnRyb2wgbnVtZXJpY0lucHV0IiBuYW1lPSJkdXJlZSIgaWQ9ImR1cmVlIiByZXF1aXJlZD0iIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZm9ybS1ncm91cCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBmb3I9ImR1cmVlIiBjbGFzcz0iY29sLW1kLTQgY29udHJvbC1sYWJlbCB0ZXh0LWxlZnQiPk1lbnN1YWxpdMOpcyA8L2xhYmVsPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtbWQtOCB0ZXh0LWxlZnQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJyZXN1bHQiPiA8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJtb2RhbC1mb290ZXIiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGNsYXNzPSJzbWFsbCBvYmxpZ0NoYW1wIHB1bGwtbGVmdCI+KkNoYW1wcyBvYmxpZ2F0b2lyZXM8L2xhYmVsPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiB0eXBlPSJzdWJtaXQiIGNsYXNzPSJidG4gYnRuLWRlZmF1bHQgcmlnaHQiPkNhbGN1bGVyPC9idXR0b24+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgIDwvZm9ybT4KICAgICAgICAgICAgICAgICAgPC9kaXY+PCEtLSAvLm1vZGFsLWNvbnRlbnQgLS0+CiAgICAgICAgICAgICAgICA8L2Rpdj48IS0tIC8ubW9kYWwtZGlhbG9nIC0tPgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgCiAgICAKICAgICAgICAgICAgCiAgICAgICAgICAgIDxkaXYgaWQ9InNlbmRGcmllbmQiIGNsYXNzPSJtb2RhbCBmYWRlIiAgdGFiaW5kZXg9Ii0xIiByb2xlPSJkaWFsb2ciIGFyaWEtbGFiZWxsZWRieT0ibXlMYXJnZU1vZGFsTGFiZWwiIGFyaWEtaGlkZGVuPSJ0cnVlIj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Im1vZGFsLWRpYWxvZyBtb2RhbC1tZCI+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icm93IG1vZGFsLWNvbnRlbnQiPgogICAgICAgICAgICAgICAgICAgICAgICA8Zm9ybSBjbGFzcz0iZm9ybS1ob3Jpem9udGFsIiByb2xlPSJmb3JtIiBtZXRob2Q9InBvc3QiIGFjdGlvbj0iLzU2Ny1DYW5hbC1zYWludC1NYXJ0aW4tMi1waWVjZXMtNDItNDItbS1Cb3guaHRtbCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0iaGlkZGVuIiBuYW1lPSJhY3Rpb24iIHZhbHVlPSJzZW5kRnJpZW5kIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJoaWRkZW4iIG5hbWU9ImRhdGFbQ29udGFjdF1bdXJsXSIgdmFsdWU9Imh0dHA6Ly93d3cuY2FuYWwtc3RyZWV0LmZyLzU2Ny1DYW5hbC1zYWludC1NYXJ0aW4tMi1waWVjZXMtNDItNDItbS1Cb3guaHRtbCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJtb2RhbC1oZWFkZXIiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxidXR0b24gdHlwZT0iYnV0dG9uIiBjbGFzcz0iY2xvc2UiIGRhdGEtZGlzbWlzcz0ibW9kYWwiIGFyaWEtaGlkZGVuPSJ0cnVlIj4mdGltZXM7PC9idXR0b24+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGg0IGNsYXNzPSJtb2RhbC10aXRsZSB0aGVtVGl0bGUiPlBhcnRhZ2VyPC9oND4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ibW9kYWwtYm9keSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZm9ybS1ncm91cCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBmb3I9ImRhdGFbQ29udGFjdF1bbm9tXSIgY2xhc3M9ImNvbC1tZC00IGNvbnRyb2wtbGFiZWwiPlZvdHJlIG5vbSAqPC9sYWJlbD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sLW1kLTgiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9InRleHQiIGNsYXNzPSJmb3JtLWNvbnRyb2wiIG5hbWU9ImRhdGFbQ29udGFjdF1bbm9tXSIgcmVxdWlyZWQ9IiI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImZvcm0tZ3JvdXAiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgZm9yPSJkYXRhW0NvbnRhY3RdW2Zyb21dIiBjbGFzcz0iY29sLW1kLTQgY29udHJvbC1sYWJlbCI+Vm90cmUgYWRyZXNzZSBtYWlsICo8L2xhYmVsPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtbWQtOCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9InRleHQiIGNsYXNzPSJmb3JtLWNvbnRyb2wiIG5hbWU9ImRhdGFbQ29udGFjdF1bZnJvbV0iIHJlcXVpcmVkPSIiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJmb3JtLWdyb3VwIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGZvcj0iZGF0YVtDb250YWN0XVt0b10iIGNsYXNzPSJjb2wtbWQtNCBjb250cm9sLWxhYmVsIj5NYWlsIGRlIHZvdHJlIGFtaSAqPC9sYWJlbD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sLW1kLTgiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJ0ZXh0IiBjbGFzcz0iZm9ybS1jb250cm9sIiBuYW1lPSJkYXRhW0NvbnRhY3RdW3RvXSIgcmVxdWlyZWQ9IiI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImFzYnJ5dyIgc3R5bGU9ImRpc3BsYXk6bm9uZSI+CjxpbnB1dCB0eXBlPSJ0ZXh0IiBuYW1lPSJhc19keW5hIiBkYXRhLXdhaXQ9IjU5N2M5Y2Q3NzQxYjI4YWQ0Mjg3MWFmNWVjYjAwZDBlIiBkYXRhLW9yaWc9IjM3Mzc5NGUzODMzOGI3ZjFlYzQ4ZjRjNzEwZjRkMmY4IiBjbGFzcz0iYXNfZmllbGQgYXNfZmllbGQtMiAyIiB2YWx1ZT0iMzczNzk0ZTM4MzM4YjdmMWVjNDhmNGM3MTBmNGQyZjgiLz4KPGlucHV0IHR5cGU9InRleHQiIG5hbWU9ImFzX3N0YXQiIGNsYXNzPSJhc19maWVsZCBhc19maWVsZC0xIDEiIHZhbHVlPSIiLz4KPC9kaXY+CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImZvcm0tZ3JvdXAiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgZm9yPSJkYXRhW0NvbnRhY3RdW21lc3NhZ2VdIiBjbGFzcz0iY29sLW1kLTQgY29udHJvbC1sYWJlbCI+Vm90cmUgbWVzc2FnZTwvbGFiZWw+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbC1tZC04Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0idGV4dCIgY2xhc3M9ImZvcm0tY29udHJvbCIgaWQ9Im1lc3NhZ2UiIG5hbWU9ImRhdGFbQ29udGFjdF1bbWVzc2FnZV0iPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ibW9kYWwtZm9vdGVyIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgY2xhc3M9InNtYWxsIG9ibGlnQ2hhbXAgcHVsbC1sZWZ0Ij4qQ2hhbXBzIG9ibGlnYXRvaXJlczwvbGFiZWw+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiB0eXBlPSJzdWJtaXQiIGNsYXNzPSJidG4gYnRuLWRlZmF1bHQgcmlnaHQiPkVudm95ZXI8L2J1dHRvbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICA8L2Zvcm0+CiAgICAgICAgICAgICAgICAgICAgPC9kaXY+PCEtLSAvLm1vZGFsLWNvbnRlbnQgLS0+CiAgICAgICAgICAgICAgICA8L2Rpdj48IS0tIC8ubW9kYWwtZGlhbG9nIC0tPgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAKICAgIAogICAgICAgIAogICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgaWQ9IkNvbnRhY3QiIGNsYXNzPSJtb2RhbCBmYWRlIiAgdGFiaW5kZXg9Ii0xIiByb2xlPSJkaWFsb2ciIGFyaWEtbGFiZWxsZWRieT0ibXlMYXJnZU1vZGFsTGFiZWwiIGFyaWEtaGlkZGVuPSJ0cnVlIj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Im1vZGFsLWRpYWxvZyBtb2RhbC1tZCI+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icm93IG1vZGFsLWNvbnRlbnQiPgogICAgICAgICAgICAgICAgICAgICAgICA8Zm9ybSBjbGFzcz0iZm9ybS1ob3Jpem9udGFsIiByb2xlPSJmb3JtIiBtZXRob2Q9InBvc3QiIGFjdGlvbj0iLzU2Ny1DYW5hbC1zYWludC1NYXJ0aW4tMi1waWVjZXMtNDItNDItbS1Cb3guaHRtbCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0iaGlkZGVuIiB2YWx1ZT0id3d3LmNhbmFsLXN0cmVldC5mci81NjctQ2FuYWwtc2FpbnQtTWFydGluLTItcGllY2VzLTQyLTQyLW0tQm94Lmh0bWwiIG5hbWU9ImRhdGFbQ29udGFjdF1bb3JpZ2luZW1haWxdIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJoaWRkZW4iIHZhbHVlPSJhZ2VuY2VAY2FuYWwtc3RyZWV0LmZyIiAgbmFtZT0iZGF0YVtDb250YWN0XVt0b10iPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJtb2RhbC1oZWFkZXIiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxidXR0b24gdHlwZT0iYnV0dG9uIiBjbGFzcz0iY2xvc2UiIGRhdGEtZGlzbWlzcz0ibW9kYWwiIGFyaWEtaGlkZGVuPSJ0cnVlIj4mdGltZXM7PC9idXR0b24+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGg0IGNsYXNzPSJtb2RhbC10aXRsZSB0aGVtVGl0bGUiPkNvbnRhY3RlcjwvaDQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Im1vZGFsLWJvZHkiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZm9ybS1ncm91cCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsICBjbGFzcz0iY29sLXhzLTEyIGNvbC1zbS00IGNvbnRyb2wtbGFiZWwiPlZvdHJlIG5vbSAgKjwvbGFiZWw+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sLXhzLTEyIGNvbC1zbS04Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9InRleHQiICAgcGxhY2Vob2xkZXI9IiIgIG5hbWU9ImRhdGFbQ29udGFjdF1bbm9tXSIgY2xhc3M9ImZvcm0tY29udHJvbCIgcmVxdWlyZWQgb25pbnZhbGlkPSJzZXRDdXN0b21WYWxpZGl0eSgnVmV1aWxsZXogcmVuc2VpZ25lciBjZSBjaGFtcHMnKSIgb25pbnB1dD0ic2V0Q3VzdG9tVmFsaWRpdHkoJycpIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZm9ybS1ncm91cCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsICBjbGFzcz0iY29sLXhzLTEyIGNvbC1zbS00IGNvbnRyb2wtbGFiZWwiPlZvdHJlIGFkcmVzc2UgbWFpbCAgKjwvbGFiZWw+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sLXhzLTEyIGNvbC1zbS04Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9ImVtYWlsIiAgIHBsYWNlaG9sZGVyPSIiICBuYW1lPSJkYXRhW0NvbnRhY3RdW2VtYWlsXSIgY2xhc3M9ImZvcm0tY29udHJvbCIgcmVxdWlyZWQgb25pbnZhbGlkPSJzZXRDdXN0b21WYWxpZGl0eSgnVmV1aWxsZXogcmVuc2VpZ25lciBjZSBjaGFtcHMnKSIgb25pbnB1dD0ic2V0Q3VzdG9tVmFsaWRpdHkoJycpIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZm9ybS1ncm91cCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsICBjbGFzcz0iY29sLXhzLTEyIGNvbC1zbS00IGNvbnRyb2wtbGFiZWwiPlZvdHJlIFTDqWzDqXBob25lICAqPC9sYWJlbD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2wteHMtMTIgY29sLXNtLTgiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0idGV4dCIgICBwbGFjZWhvbGRlcj0iIiAgbmFtZT0iZGF0YVtDb250YWN0XVt0ZWxdIiBjbGFzcz0iZm9ybS1jb250cm9sIiByZXF1aXJlZCBvbmludmFsaWQ9InNldEN1c3RvbVZhbGlkaXR5KCdWZXVpbGxleiByZW5zZWlnbmVyIGNlIGNoYW1wcycpIiBvbmlucHV0PSJzZXRDdXN0b21WYWxpZGl0eSgnJykiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJmb3JtLWdyb3VwIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgIGNsYXNzPSJjb2wteHMtMTIgY29sLXNtLTQgY29udHJvbC1sYWJlbCI+Vm90cmUgdmlsbGUgICo8L2xhYmVsPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbC14cy0xMiBjb2wtc20tOCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJ0ZXh0IiAgIHBsYWNlaG9sZGVyPSIiICBuYW1lPSJkYXRhW0NvbnRhY3RdW3ZpbGxlXSIgY2xhc3M9ImZvcm0tY29udHJvbCIgcmVxdWlyZWQgb25pbnZhbGlkPSJzZXRDdXN0b21WYWxpZGl0eSgnVmV1aWxsZXogcmVuc2VpZ25lciBjZSBjaGFtcHMnKSIgb25pbnB1dD0ic2V0Q3VzdG9tVmFsaWRpdHkoJycpIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZm9ybS1ncm91cCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsICBjbGFzcz0iY29sLXhzLTEyIGNvbC1zbS00IGNvbnRyb2wtbGFiZWwiPlZvdHJlIG1lc3NhZ2UgPC9sYWJlbD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2wteHMtMTIgY29sLXNtLTgiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGV4dGFyZWEgbmFtZT0iZGF0YVtDb250YWN0XVttZXNzYWdlXSIgY2xhc3M9ImZvcm0tY29udHJvbCIgcGxhY2Vob2xkZXI9IiIgPjwvdGV4dGFyZWE+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZm9ybS1ncm91cCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2wteHMtMTIgY29sLXNtLTggY29sLXNtLXB1c2gtNCBjb250cm9sLWxhYmVsIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBSw6lmw6lyZW5jZTogMTg2NgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJoaWRkZW4iIG5hbWU9ImRhdGFbaWRiaWVuXVtdIiB2YWx1ZT0iNTY3IiAvPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJhc2JyeXciIHN0eWxlPSJkaXNwbGF5Om5vbmUiPgo8aW5wdXQgdHlwZT0idGV4dCIgbmFtZT0iYXNfZHluYSIgZGF0YS13YWl0PSI1OTdjOWNkNzc0MWIyOGFkNDI4NzFhZjVlY2IwMGQwZSIgZGF0YS1vcmlnPSIzNzM3OTRlMzgzMzhiN2YxZWM0OGY0YzcxMGY0ZDJmOCIgY2xhc3M9ImFzX2ZpZWxkIGFzX2ZpZWxkLTIgMiIgdmFsdWU9IjM3Mzc5NGUzODMzOGI3ZjFlYzQ4ZjRjNzEwZjRkMmY4Ii8+CjxpbnB1dCB0eXBlPSJ0ZXh0IiBuYW1lPSJhc19zdGF0IiBjbGFzcz0iYXNfZmllbGQgYXNfZmllbGQtMSAxIiB2YWx1ZT0iIi8+CjwvZGl2PgoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InJncGQtY2hlY2tib3giPgogICAgPGlucHV0IHR5cGU9ImNoZWNrYm94IiBuYW1lPSJyZ3BkLWFncmVlbWVudCIgaWQ9InJncGQtYWdyZWVtZW50bW9kYWwiIC8+CiAgICA8bGFiZWwgZm9yPSJyZ3BkLWFncmVlbWVudG1vZGFsIj5KJ2FjY2VwdGUgbGVzIGNvbmRpdGlvbnMgZCd1dGlsaXNhdGlvbiBkZXMgZG9ubsOpZXMgKCopPC9sYWJlbD4KPC9kaXY+CjxzY3JpcHQ+CiAgJ3VzZSBzdHJpY3QnOwoKICAoZnVuY3Rpb24gKCkgewogICAgdmFyIGFncmVlbWVudCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdyZ3BkLWFncmVlbWVudG1vZGFsJyk7CiAgICB2YXIgZm9ybSA9IGFncmVlbWVudC5jbG9zZXN0KCdmb3JtJyk7CiAgICBmb3JtLmFkZEV2ZW50TGlzdGVuZXIoJ3N1Ym1pdCcsIGZ1bmN0aW9uIChldmVudCkgewogICAgICBpZiAoIWFncmVlbWVudC5jaGVja2VkKSB7CiAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTsKICAgICAgICBhbGVydCgiVmV1aWxsZXogYWNjZXB0ZXIgbCd1dGlsaXNhdGlvbiBkZSB2b3MgZG9ubsOpZXMgcG91ciBjb250aW51ZXIuIik7CiAgICAgICAgcmV0dXJuIGZhbHNlOwogICAgICB9IGVsc2UgewogICAgICAgIHJldHVybiB0cnVlOwogICAgICB9CiAgICB9KTsKICB9KSgpOwo8L3NjcmlwdD4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ibW9kYWwtZm9vdGVyIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgY2xhc3M9InNtYWxsIG9ibGlnQ2hhbXAgcHVsbC1sZWZ0Ij4qQ2hhbXBzIG9ibGlnYXRvaXJlczwvbGFiZWw+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiB0eXBlPSJzdWJtaXQiIGNsYXNzPSJidG4gYnRuLWRlZmF1bHQgcmlnaHQiPkVudm95ZXI8L2J1dHRvbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICA8L2Zvcm0+CiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImxlZ2FscyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0icmdwZC1sZWdhbHMiPiogOiBMZXMgaW5mb3JtYXRpb25zIHJlY3VlaWxsaWVzIHN1ciBjZSBmb3JtdWxhaXJlIHNvbnQgZW5yZWdpc3Ryw6llcyBkYW5zIHVuIGZpY2hpZXIgaW5mb3JtYXRpc8OpIHBhciBMYSBCb2l0ZSBJbW1vIHBvdXIgbGEgZ2VzdGlvbiBkZSBsYSBjbGllbnTDqGxlL3Byb3NwZWN0cyBkZSBDYW5hbCBTdHJlZXQuCkVsbGVzIHNvbnQgY29uc2VydsOpZXMganVzcXUnw6AgZGVtYW5kZSBkZSBzdXBwcmVzc2lvbiBldCBzb250IGRlc3RpbsOpZXMgw6AgQ2FuYWwgU3RyZWV0LgpDb25mb3Jtw6ltZW50IMOgIGxhIGxvaSDCqyBpbmZvcm1hdGlxdWUgZXQgbGliZXJ0w6lzIMK7LCB2b3VzIHBvdXZleiBleGVyY2VyIHZvdHJlIGRyb2l0IGQnYWNjw6hzIGF1eCBkb25uw6llcyB2b3VzIGNvbmNlcm5hbnQgZXQgbGVzIGZhaXJlIHJlY3RpZmllciBlbiBjb250YWN0YW50IENhbmFsIFN0cmVldC4KTm91cyB2b3VzIGluZm9ybW9ucyBkZSBs4oCZZXhpc3RlbmNlIGRlIGxhIGxpc3RlIGQnb3Bwb3NpdGlvbiBhdSBkw6ltYXJjaGFnZSB0w6lsw6lwaG9uaXF1ZSDCqyBCbG9jdGVsIMK7LCBzdXIgbGFxdWVsbGUgdm91cyBwb3V2ZXogdm91cyBpbnNjcmlyZSBpY2kgOiBodHRwczovL2NvbnNvLmJsb2N0ZWwuZnIvPC9wPiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgIDwvZGl2PjwhLS0gLy5tb2RhbC1jb250ZW50IC0tPgogICAgICAgICAgICAgICAgPC9kaXY+PCEtLSAvLm1vZGFsLWRpYWxvZyAtLT4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgCiAgICAKICAgCiAgIAogICAgPHNlY3Rpb24gaXRlbXNjb3BlIGl0ZW10eXBlPSJodHRwczovL3NjaGVtYS5vcmcvUHJvZHVjdCIgY2xhc3M9ImNvbnRhaW5lckRldGFpbCBjb250ZW50UGFnZSAgIj4KICAgICAgICAKICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29udGFpbmVyIj4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InRoZW1UaXRsZSBoMVBhZ2UiPgogICAgICAgICAgICAgICAgICAgICAgICA8aDEgaXRlbXByb3A9Im5hbWUiPkNhbmFsIHNhaW50IE1hcnRpbiwgMiBwacOoY2VzIDQyLDQyIG3CsiArIEJveDwvaDE+CiAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICA8c2NyaXB0IHR5cGU9J2FwcGxpY2F0aW9uL2xkK2pzb24nPgogICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgIkBjb250ZXh0IjoiaHR0cHM6Ly9zY2hlbWEub3JnIiwKICAgICAgICAgICAgICAgICAgICAgICAgIkB0eXBlIjoiQnJlYWRjcnVtYkxpc3QiLAogICAgICAgICAgICAgICAgICAgICAgICAiaXRlbUxpc3RFbGVtZW50IjoKICAgICAgICAgICAgICAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAiQHR5cGUiOiJMaXN0SXRlbSIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAicG9zaXRpb24iOjEsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAiaXRlbSI6IHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAiQGlkIjoiLyIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIm5hbWUiOiJBY2N1ZWlsIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIkB0eXBlIjoiTGlzdEl0ZW0iLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgInBvc2l0aW9uIjoyLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIml0ZW0iOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIkBpZCI6Ii9BY2hldGVyLTAtYS1QYXJpcy8xIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAibmFtZSI6IkFjaGV0ZXIgdW4gbG9nZW1lbnQgw6AgUGFyaXMsIHBhciBiaWVucyIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJAdHlwZSI6Ikxpc3RJdGVtIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJwb3NpdGlvbiI6MywKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJpdGVtIjogewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJAaWQiOiIvQWNoZXRlci0wLWEtUGFyaXMvMi1BcHBhcnRlbWVudC8xIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAibmFtZSI6IkFwcGFydGVtZW50cyDDoCB2ZW5kcmUiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAiQHR5cGUiOiJMaXN0SXRlbSIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAicG9zaXRpb24iOjQsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAiaXRlbSI6IHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAiQGlkIjoiLzU2Ny1DYW5hbC1zYWludC1NYXJ0aW4tMi1waWVjZXMtNDItNDItbS1Cb3guaHRtbCIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIm5hbWUiOiJDYW5hbCBzYWludCBNYXJ0aW4sIDIgcGnDqGNlcyA0Miw0MiBtwrIgKyBCb3giCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXQogICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgPC9zY3JpcHQ+CiAgICAgICAgICAgICAgICAgICAgPG9sIGNsYXNzPSJicmVhZGNydW1iIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaT48YSBocmVmPSIvIiA+QWNjdWVpbDwvYT48L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpPjxhIGhyZWY9Ii9BY2hldGVyLTAtYS1QYXJpcy8xIiA+QWNoZXRlciB1biBsb2dlbWVudCDDoCBQYXJpcywgcGFyIGJpZW5zPC9hPjwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGk+PGEgaHJlZj0iL0FjaGV0ZXItMC1hLVBhcmlzLzItQXBwYXJ0ZW1lbnQvMSIgPkFwcGFydGVtZW50cyDDoCB2ZW5kcmU8L2E+PC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaT48YSBocmVmPSIvQWNoZXRlci0wLWEtUGFyaXMvMi1waWVjZXMvMSIgPjIgcGnDqGNlcyDDoCB2ZW5kcmU8L2E+PC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaT5DYW5hbCBzYWludCBNYXJ0aW4sIDIgcGnDqGNlcyA0Miw0MiBtwrIgKyBCb3g8L2xpPgogICAgICAgICAgICAgICAgICAgIDwvb2w+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgCiAgICAgICAgCiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbnRhaW5lckR0IGNvbnRhaW5lciI+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJyb3ciPgogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtbWQtMTIgZG9jcyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIAogICAgCiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJyb3cgYnRuRHQiPgogICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbC1tZC0zIGJhY2tsaXN0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJidG4gYnRuLWRlZmF1bHQgYmFjayI+PCBSZXRvdXI8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sLW1kLTUgYWN0aW9uRHQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cD5PdXRpbHMgcHJhdGlxdWVzPC9wPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJidG4tZHQiIGRhdGEtdG9nZ2xlPSJtb2RhbCIgZGF0YS10YXJnZXQ9IiNDb250YWN0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJpY29uLWNvbnRhY3RtYWlsMiBpY29ucy1kdCIgIGRhdGEtdG9nZ2xlPSJ0b29sdGlwIiBkYXRhLXBsYWNlbWVudD0idG9wIiB0aXRsZT0iQ29udGFjdGV6LW5vdXMiID48L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImJ0bi1kdCIgb25jbGljaz0id2luZG93Lm9wZW4oJy9hZG1pbi9wZGYucGhwP2xhbmc9ZnImaWRhbm49NTY3JmZpY2hlX3R5cGU9dmlzaXRlJnBkZl9vcmllbnRhdGlvbj1QJnBkZl90ZW1wbGF0ZT0xJyk7IHJldHVybiBmYWxzZTsiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9Imljb24taW1wcmltZXIyIGljb25zLWR0IiAgZGF0YS10b2dnbGU9InRvb2x0aXAiIGRhdGEtcGxhY2VtZW50PSJ0b3AiIHRpdGxlPSJJbXByaW1lciBjZXR0ZSBmaWNoZSIgPjwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImJ0bi1kdCIgZGF0YS10b2dnbGU9Im1vZGFsIiBkYXRhLXRhcmdldD0iI0NhbGN1bGV0dGUiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJpY29uLWNhbGN1bGV0dGUyIGljb25zLWR0IiAgZGF0YS10b2dnbGU9InRvb2x0aXAiIGRhdGEtcGxhY2VtZW50PSJ0b3AiIHRpdGxlPSJDYWxjdWxldHRlIiA+PC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgDQogICAgPGRpdiBjbGFzcz0iYnRuLWR0IGJ0bi1zZWxlY3QiIHJlbD0iNTY3Ij4NCiAgICAgICAgPHNwYW4gY2xhc3M9Imljb24tY29ldXIyIGljb25zLWR0IiAgZGF0YS10b2dnbGU9InRvb2x0aXAiIGRhdGEtcGxhY2VtZW50PSJ0b3AiIHRpdGxlPSJBam91dGVyIMOgIG1hIHPDqWxlY3Rpb24iID48L3NwYW4+DQogICAgICAgIDxpbnB1dCB0eXBlPSJoaWRkZW4iIHZhbHVlPSI1NjciLz4NCiAgICA8L2Rpdj4NCgogICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCgogICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbC1tZC00IHJzdkR0IiBkYXRhLXVybD0iaHR0cDovL3d3dy5jYW5hbC1zdHJlZXQuZnIvNTY3LUNhbmFsLXNhaW50LU1hcnRpbi0yLXBpZWNlcy00Mi00Mi1tLUJveC5odG1sIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHA+UGFydGFnZXIgc3VyPC9wPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgaWQ9ImZhY2Vib29rIiBkYXRhLXVybD0iaHR0cDovL3d3dy5jYW5hbC1zdHJlZXQuZnIvNTY3LUNhbmFsLXNhaW50LU1hcnRpbi0yLXBpZWNlcy00Mi00Mi1tLUJveC5odG1sP2xhbmc9ZnIiIGRhdGEtdGl0bGU9IiAiPjwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBpZD0idHdpdHRlciI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImJveCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ic2hhcmUgaWNvbi10d2l0dGVyMyBpY29ucy1kdCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly90d2l0dGVyLmNvbS9pbnRlbnQvdHdlZXQ/b3JpZ2luYWxfcmVmZXJlcj1odHRwOi8vd3d3LmNhbmFsLXN0cmVldC5mci81NjctQ2FuYWwtc2FpbnQtTWFydGluLTItcGllY2VzLTQyLTQyLW0tQm94Lmh0bWwmcmVmX3NyYz10d3NyY150ZncmdGV4dD12ZW50ZSBDYW5hbCBzYWludCBNYXJ0aW4sIDIgcGnDqGNlcyA0Miw0MiBtwrIgKyBCb3gmdHdfcD10d2VldGJ1dHRvbiZ1cmw9aHR0cDovL3d3dy5jYW5hbC1zdHJlZXQuZnIvNTY3LUNhbmFsLXNhaW50LU1hcnRpbi0yLXBpZWNlcy00Mi00Mi1tLUJveC5odG1sIj48L2E+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBpZD0iZ29vZ2xlcGx1cyIgZGF0YS11cmw9Imh0dHA6Ly93d3cuY2FuYWwtc3RyZWV0LmZyLzU2Ny1DYW5hbC1zYWludC1NYXJ0aW4tMi1waWVjZXMtNDItNDItbS1Cb3guaHRtbCIgZGF0YS10aXRsZT0iICI+PC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ic2hhcnJyZSIgZGF0YS10b2dnbGU9Im1vZGFsIiBkYXRhLXRhcmdldD0iI3NlbmRGcmllbmQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9Imljb24tcGFydGFnZXIyIGljb25zLWR0Ij48L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgCgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJzdGF0dXMiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iU3RhdHV0QmllbiB2ZW5kdSI+VmVuZHU8L3NwYW4+ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgCiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbnRlbnREdCBkdDIiPgogICAgICAgICAgICAgICAgICAgIAogICAgCiAgICAgICAgPGRpdiBjbGFzcz0icm93Ij4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sLW1kLTEyIj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InRvcER0MiBzbGlkZXJWMiI+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iYmllblRpdGxlIj4KICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aDI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgQXBwYXJ0ZW1lbnQKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgNDIuNDIgbSZzdXAyOyAtIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAyIHBpw6hjZXMgLSAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBQYXJpcyAoNzUwMTApCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2gyPgogICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBpdGVtcHJvcD0icHJvZHVjdElEIiBjbGFzcz0icmVmIj5SZWYgMTg2Njwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgIDxmaWd1cmUgY2xhc3M9Im1haW5JbWcgIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICA8ZGl2IGNsYXNzPSJsb2FkZXIiPgogICAgICAgICAgICA8aW1nIHNyYz0iaW1hZ2VzL2xvYWRpbmcuZ2lmIiBhbHQ9ImdhbGxlcnkgbG9hZGVyIi8+CiAgICAgICAgPC9kaXY+CiAgICAgICAgPHVsIGNsYXNzPSJpbWFnZUdhbGxlcnkgaW1hZ2VIQyAgbG9hZGluZyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaSBkYXRhLWl0ZXJhdG9yPSIwIgogICAgICAgICAgICAgICAgICAgICAgICBkYXRhLXRodW1iPSJodHRwOi8vY2FuYWwtc3RyZWV0LnN0YXRpY2xiaS5jb20vMjAweDIwMC9pbWFnZXMvYmllbnMvMS82ZWE3MGY0MmNiZDFmMWZiMWMyOGI4ZGIxODNlZDQ2YS84OWNjMTM3YThlOWE0N2NkZTg2NTc1ZTdmMjc2Yzg5Mi5qcGciCiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtc3JjPSJodHRwOi8vY2FuYWwtc3RyZWV0LnN0YXRpY2xiaS5jb20vb3JpZ2luYWwvaW1hZ2VzL2JpZW5zLzEvNmVhNzBmNDJjYmQxZjFmYjFjMjhiOGRiMTgzZWQ0NmEvODljYzEzN2E4ZTlhNDdjZGU4NjU3NWU3ZjI3NmM4OTIuanBnIgogICAgICAgICAgICAgICAgICAgICAgICBkYXRhLXNyYy1mb3J0aHVtYj0iaHR0cDovL2NhbmFsLXN0cmVldC5zdGF0aWNsYmkuY29tL29yaWdpbmFsL2ltYWdlcy9iaWVucy8xLzZlYTcwZjQyY2JkMWYxZmIxYzI4YjhkYjE4M2VkNDZhLzg5Y2MxMzdhOGU5YTQ3Y2RlODY1NzVlN2YyNzZjODkyLmpwZyI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgc3JjPSJodHRwOi8vY2FuYWwtc3RyZWV0LnN0YXRpY2xiaS5jb20vb3JpZ2luYWwvaW1hZ2VzL2JpZW5zLzEvNmVhNzBmNDJjYmQxZjFmYjFjMjhiOGRiMTgzZWQ0NmEvODljYzEzN2E4ZTlhNDdjZGU4NjU3NWU3ZjI3NmM4OTIuanBnIiBhbHQ9IiIgLz4KICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGkgZGF0YS1pdGVyYXRvcj0iMSIKICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS10aHVtYj0iaHR0cDovL2NhbmFsLXN0cmVldC5zdGF0aWNsYmkuY29tLzIwMHgyMDAvaW1hZ2VzL2JpZW5zLzEvNmVhNzBmNDJjYmQxZjFmYjFjMjhiOGRiMTgzZWQ0NmEvMzUxNjAwY2QwYzAzYjAyZGIxOTdkOWVkYmFkYzU1ZGEuanBnIgogICAgICAgICAgICAgICAgICAgICAgICBkYXRhLXNyYz0iaHR0cDovL2NhbmFsLXN0cmVldC5zdGF0aWNsYmkuY29tL29yaWdpbmFsL2ltYWdlcy9iaWVucy8xLzZlYTcwZjQyY2JkMWYxZmIxYzI4YjhkYjE4M2VkNDZhLzM1MTYwMGNkMGMwM2IwMmRiMTk3ZDllZGJhZGM1NWRhLmpwZyIKICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1zcmMtZm9ydGh1bWI9Imh0dHA6Ly9jYW5hbC1zdHJlZXQuc3RhdGljbGJpLmNvbS9vcmlnaW5hbC9pbWFnZXMvYmllbnMvMS82ZWE3MGY0MmNiZDFmMWZiMWMyOGI4ZGIxODNlZDQ2YS8zNTE2MDBjZDBjMDNiMDJkYjE5N2Q5ZWRiYWRjNTVkYS5qcGciPgogICAgICAgICAgICAgICAgICAgICAgICA8aW1nIHNyYz0iaHR0cDovL2NhbmFsLXN0cmVldC5zdGF0aWNsYmkuY29tL29yaWdpbmFsL2ltYWdlcy9iaWVucy8xLzZlYTcwZjQyY2JkMWYxZmIxYzI4YjhkYjE4M2VkNDZhLzM1MTYwMGNkMGMwM2IwMmRiMTk3ZDllZGJhZGM1NWRhLmpwZyIgYWx0PSIiIC8+CiAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpIGRhdGEtaXRlcmF0b3I9IjIiCiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtdGh1bWI9Imh0dHA6Ly9jYW5hbC1zdHJlZXQuc3RhdGljbGJpLmNvbS8yMDB4MjAwL2ltYWdlcy9iaWVucy8xLzZlYTcwZjQyY2JkMWYxZmIxYzI4YjhkYjE4M2VkNDZhLzYwNzZlZGRiY2U4MzBiOTU3MTZhYjRiZTdhNmQ5YTY1LmpwZyIKICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1zcmM9Imh0dHA6Ly9jYW5hbC1zdHJlZXQuc3RhdGljbGJpLmNvbS9vcmlnaW5hbC9pbWFnZXMvYmllbnMvMS82ZWE3MGY0MmNiZDFmMWZiMWMyOGI4ZGIxODNlZDQ2YS82MDc2ZWRkYmNlODMwYjk1NzE2YWI0YmU3YTZkOWE2NS5qcGciCiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtc3JjLWZvcnRodW1iPSJodHRwOi8vY2FuYWwtc3RyZWV0LnN0YXRpY2xiaS5jb20vb3JpZ2luYWwvaW1hZ2VzL2JpZW5zLzEvNmVhNzBmNDJjYmQxZjFmYjFjMjhiOGRiMTgzZWQ0NmEvNjA3NmVkZGJjZTgzMGI5NTcxNmFiNGJlN2E2ZDlhNjUuanBnIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBzcmM9Imh0dHA6Ly9jYW5hbC1zdHJlZXQuc3RhdGljbGJpLmNvbS9vcmlnaW5hbC9pbWFnZXMvYmllbnMvMS82ZWE3MGY0MmNiZDFmMWZiMWMyOGI4ZGIxODNlZDQ2YS82MDc2ZWRkYmNlODMwYjk1NzE2YWI0YmU3YTZkOWE2NS5qcGciIGFsdD0iIiAvPgogICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaSBkYXRhLWl0ZXJhdG9yPSIzIgogICAgICAgICAgICAgICAgICAgICAgICBkYXRhLXRodW1iPSJodHRwOi8vY2FuYWwtc3RyZWV0LnN0YXRpY2xiaS5jb20vMjAweDIwMC9pbWFnZXMvYmllbnMvMS82ZWE3MGY0MmNiZDFmMWZiMWMyOGI4ZGIxODNlZDQ2YS8zNDM2OTI4NGM0Y2ZkZDY4MjQxODMzYmE2MWM5NzFjZi5qcGciCiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtc3JjPSJodHRwOi8vY2FuYWwtc3RyZWV0LnN0YXRpY2xiaS5jb20vb3JpZ2luYWwvaW1hZ2VzL2JpZW5zLzEvNmVhNzBmNDJjYmQxZjFmYjFjMjhiOGRiMTgzZWQ0NmEvMzQzNjkyODRjNGNmZGQ2ODI0MTgzM2JhNjFjOTcxY2YuanBnIgogICAgICAgICAgICAgICAgICAgICAgICBkYXRhLXNyYy1mb3J0aHVtYj0iaHR0cDovL2NhbmFsLXN0cmVldC5zdGF0aWNsYmkuY29tL29yaWdpbmFsL2ltYWdlcy9iaWVucy8xLzZlYTcwZjQyY2JkMWYxZmIxYzI4YjhkYjE4M2VkNDZhLzM0MzY5Mjg0YzRjZmRkNjgyNDE4MzNiYTYxYzk3MWNmLmpwZyI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgc3JjPSJodHRwOi8vY2FuYWwtc3RyZWV0LnN0YXRpY2xiaS5jb20vb3JpZ2luYWwvaW1hZ2VzL2JpZW5zLzEvNmVhNzBmNDJjYmQxZjFmYjFjMjhiOGRiMTgzZWQ0NmEvMzQzNjkyODRjNGNmZGQ2ODI0MTgzM2JhNjFjOTcxY2YuanBnIiBhbHQ9IiIgLz4KICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGkgZGF0YS1pdGVyYXRvcj0iNCIKICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS10aHVtYj0iaHR0cDovL2NhbmFsLXN0cmVldC5zdGF0aWNsYmkuY29tLzIwMHgyMDAvaW1hZ2VzL2JpZW5zLzEvNmVhNzBmNDJjYmQxZjFmYjFjMjhiOGRiMTgzZWQ0NmEvOWI3Mzk4NjgzMjBhYTdhODI3ZjJlMDAyNDI3ZDc2NWIuanBnIgogICAgICAgICAgICAgICAgICAgICAgICBkYXRhLXNyYz0iaHR0cDovL2NhbmFsLXN0cmVldC5zdGF0aWNsYmkuY29tL29yaWdpbmFsL2ltYWdlcy9iaWVucy8xLzZlYTcwZjQyY2JkMWYxZmIxYzI4YjhkYjE4M2VkNDZhLzliNzM5ODY4MzIwYWE3YTgyN2YyZTAwMjQyN2Q3NjViLmpwZyIKICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1zcmMtZm9ydGh1bWI9Imh0dHA6Ly9jYW5hbC1zdHJlZXQuc3RhdGljbGJpLmNvbS9vcmlnaW5hbC9pbWFnZXMvYmllbnMvMS82ZWE3MGY0MmNiZDFmMWZiMWMyOGI4ZGIxODNlZDQ2YS85YjczOTg2ODMyMGFhN2E4MjdmMmUwMDI0MjdkNzY1Yi5qcGciPgogICAgICAgICAgICAgICAgICAgICAgICA8aW1nIHNyYz0iaHR0cDovL2NhbmFsLXN0cmVldC5zdGF0aWNsYmkuY29tL29yaWdpbmFsL2ltYWdlcy9iaWVucy8xLzZlYTcwZjQyY2JkMWYxZmIxYzI4YjhkYjE4M2VkNDZhLzliNzM5ODY4MzIwYWE3YTgyN2YyZTAwMjQyN2Q3NjViLmpwZyIgYWx0PSIiIC8+CiAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpIGRhdGEtaXRlcmF0b3I9IjUiCiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtdGh1bWI9Imh0dHA6Ly9jYW5hbC1zdHJlZXQuc3RhdGljbGJpLmNvbS8yMDB4MjAwL2ltYWdlcy9iaWVucy8xLzZlYTcwZjQyY2JkMWYxZmIxYzI4YjhkYjE4M2VkNDZhLzU4YTkxNjkwNWQ3MzNmZjNiZThjYzM3YWU5ZmQ3MTY5LmpwZyIKICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1zcmM9Imh0dHA6Ly9jYW5hbC1zdHJlZXQuc3RhdGljbGJpLmNvbS9vcmlnaW5hbC9pbWFnZXMvYmllbnMvMS82ZWE3MGY0MmNiZDFmMWZiMWMyOGI4ZGIxODNlZDQ2YS81OGE5MTY5MDVkNzMzZmYzYmU4Y2MzN2FlOWZkNzE2OS5qcGciCiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtc3JjLWZvcnRodW1iPSJodHRwOi8vY2FuYWwtc3RyZWV0LnN0YXRpY2xiaS5jb20vb3JpZ2luYWwvaW1hZ2VzL2JpZW5zLzEvNmVhNzBmNDJjYmQxZjFmYjFjMjhiOGRiMTgzZWQ0NmEvNThhOTE2OTA1ZDczM2ZmM2JlOGNjMzdhZTlmZDcxNjkuanBnIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBzcmM9Imh0dHA6Ly9jYW5hbC1zdHJlZXQuc3RhdGljbGJpLmNvbS9vcmlnaW5hbC9pbWFnZXMvYmllbnMvMS82ZWE3MGY0MmNiZDFmMWZiMWMyOGI4ZGIxODNlZDQ2YS81OGE5MTY5MDVkNzMzZmYzYmU4Y2MzN2FlOWZkNzE2OS5qcGciIGFsdD0iIiAvPgogICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaSBkYXRhLWl0ZXJhdG9yPSI2IgogICAgICAgICAgICAgICAgICAgICAgICBkYXRhLXRodW1iPSJodHRwOi8vY2FuYWwtc3RyZWV0LnN0YXRpY2xiaS5jb20vMjAweDIwMC9pbWFnZXMvYmllbnMvMS82ZWE3MGY0MmNiZDFmMWZiMWMyOGI4ZGIxODNlZDQ2YS9mZTYwZTAxYmVlZGU1MWMzYmY3ZWIwNGM0MDNlZTMwMS5qcGciCiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtc3JjPSJodHRwOi8vY2FuYWwtc3RyZWV0LnN0YXRpY2xiaS5jb20vb3JpZ2luYWwvaW1hZ2VzL2JpZW5zLzEvNmVhNzBmNDJjYmQxZjFmYjFjMjhiOGRiMTgzZWQ0NmEvZmU2MGUwMWJlZWRlNTFjM2JmN2ViMDRjNDAzZWUzMDEuanBnIgogICAgICAgICAgICAgICAgICAgICAgICBkYXRhLXNyYy1mb3J0aHVtYj0iaHR0cDovL2NhbmFsLXN0cmVldC5zdGF0aWNsYmkuY29tL29yaWdpbmFsL2ltYWdlcy9iaWVucy8xLzZlYTcwZjQyY2JkMWYxZmIxYzI4YjhkYjE4M2VkNDZhL2ZlNjBlMDFiZWVkZTUxYzNiZjdlYjA0YzQwM2VlMzAxLmpwZyI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgc3JjPSJodHRwOi8vY2FuYWwtc3RyZWV0LnN0YXRpY2xiaS5jb20vb3JpZ2luYWwvaW1hZ2VzL2JpZW5zLzEvNmVhNzBmNDJjYmQxZjFmYjFjMjhiOGRiMTgzZWQ0NmEvZmU2MGUwMWJlZWRlNTFjM2JmN2ViMDRjNDAzZWUzMDEuanBnIiBhbHQ9IiIgLz4KICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3VsPgogICAgCgogICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGZpZ2NhcHRpb24+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJpeC1kdDIiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJsYWJlbC1jYXB0aW9uIj5Qcml4PC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBpdGVtcHJvcD0ib2ZmZXJzIiBpdGVtc2NvcGUgaXRlbXR5cGU9Imh0dHBzOi8vc2NoZW1hLm9yZy9PZmZlciI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBpdGVtcHJvcD0icHJpY2UiIGNvbnRlbnQ9IjQ3MDAwMCI+NDcwIDAwMDwvc3Bhbj4gPHNwYW4gaXRlbXByb3A9InByaWNlQ3VycmVuY3kiPuKCrDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZmlnY2FwdGlvbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICA8L2ZpZ3VyZT4KICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2Rpdj4KICAgIAoKCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAKCiAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAKCiAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJyb3ciPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhcnRpY2xlIGNsYXNzPSJjb2wtbWQtNiAgZWxlbWVudER0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0aGVtVGl0bGUgZWxlbWVudER0VGl0bGUiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxoMT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgRGVzY3JpcHRpb24gZGUgbCdvZmZyZQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvaDE+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHAgaXRlbXByb3A9ImRlc2NyaXB0aW9uIj5BIHByb3hpbWl0w6kgaW1tw6lkaWF0ZSBkdSBjYW5hbCBTYWludCBNYXJ0aW4sIHJ1ZSBkZSBsYSBHcmFuZ2UgYXV4IEJlbGxlcywgYmVsIGFwcGFydGVtZW50IDIgcGnDqGNlcyBkZSA0Miw0MiBtwrIgKGxvaSBDYXJyZXopIGF1IDbDqG3DqSDDqXRhZ2UgYXZlYyBhc2NlbnNldXIgZCd1bmUgcsOpc2lkZW5jZSBkZSBzdGFuZGluZywgY29tcHJlbmFudCA6IApFbnRyw6llLCBiZWF1IHPDqWpvdXIgYXZlYyBjdWlzaW5lIHNlbWktb3V2ZXJ0ZSBhbcOpbmFnw6llLCBjaGFtYnJlLCBzYWxsZSBkZSBiYWlucyBhdmVjIHdjLCBiYWxjb24gZmlsYW50IGV0IGdyYW5kIEJveCBkZSAxNSwzMCBtwrIgZW4gc291cy1zb2wgZGUgbCdpbW1ldWJsZS4gClBhcnF1ZXQsIGNoYXVmZmFnZSBldCBlYXUgY2hhdWRlIGluZGl2aWR1ZWxzIGdheiwgdHLDqHMgY2FsbWUgKHN1ciBqYXJkaW4pIGV0IGx1bWluZXV4ICh2dWUgdG90YWxlbWVudCBkw6lnYWfDqWUpLiA8L3A+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYXJ0aWNsZT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YXJ0aWNsZSBjbGFzcz0iY29sLW1kLTYgIGVsZW1lbnREdCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0idGhlbVRpdGxlIGVsZW1lbnREdFRpdGxlIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aDE+RGVzY3JpcHRpZiBkdSBiaWVuPC9oMT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZGF0YUJpZW4iPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHVsIGlkPSJkYXRhVGl0bGUiIGNsYXNzPSJuYXYgbmF2LXRhYnMiIHJvbGU9InRhYmxpc3QiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGkgY2xhc3M9ImFjdGl2ZSI+PGEgaHJlZj0iI2luZm9zIiBjbGFzcz0iYnRuLWRlZmF1bHQiPkfDqW7DqXJhbDwvYT48L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGkgY2xhc3M9IiI+PGEgaHJlZj0iI2RldGFpbHMiIGNsYXNzPSJidG4tZGVmYXVsdCI+RMOpdGFpbHMgKzwvYT48L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGkgY2xhc3M9IiI+PGEgaHJlZj0iI2NvcHJvIiBjbGFzcz0iYnRuLWRlZmF1bHQiPkNvcHJvcHJpw6l0w6k8L2E+PC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpIGNsYXNzPSIiPjxhIGhyZWY9IiNpbmZvc2ZpIiBjbGFzcz0iYnRuLWRlZmF1bHQiPkZpbmFuY2llcjwvYT48L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3VsPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGlkPSJkYXRhQ29udGVudCIgY2xhc3M9InRhYi1jb250ZW50Ij4KICAgICAgICAgICAgCiAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0YWItcGFuZSBmYWRlICBhY3RpdmUgaW4iIGlkPSJpbmZvcyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0iZGF0YSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InRlcm1JbmZvcyI+Q29kZSBwb3N0YWw8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJ2YWx1ZUluZm9zICIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgNzUwMTAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxocj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJkYXRhIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0idGVybUluZm9zIj5TdXJmYWNlIGhhYml0YWJsZSAobcKyKTwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InZhbHVlSW5mb3MgIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA0Miw0MiBtwrIgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxocj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJkYXRhIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0idGVybUluZm9zIj5TdXJmYWNlIGxvaSBDYXJyZXogKG3Csik8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJ2YWx1ZUluZm9zICIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgNDIuNDIgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxocj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJkYXRhIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0idGVybUluZm9zIj5Ob21icmUgZGUgY2hhbWJyZShzKTwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InZhbHVlSW5mb3MgIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAxICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3A+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aHI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0iZGF0YSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InRlcm1JbmZvcyI+Tm9tYnJlIGRlIHBpw6hjZXM8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJ2YWx1ZUluZm9zICIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgMiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGhyPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9ImRhdGEiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJ0ZXJtSW5mb3MiPkV0YWdlPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0idmFsdWVJbmZvcyAiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDYgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxocj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJkYXRhIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0idGVybUluZm9zIj5Ob21icmUgZGUgbml2ZWF1eDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InZhbHVlSW5mb3MgIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAxICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3A+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aHI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0iZGF0YSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InRlcm1JbmZvcyI+QXNjZW5zZXVyPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0idmFsdWVJbmZvcyAiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIE9VSSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGhyPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9ImRhdGEiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJ0ZXJtSW5mb3MiPlZ1ZTwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InZhbHVlSW5mb3MgIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBEw6lnYWfDqWUgc3VyIGphcmRpbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGhyPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0YWItcGFuZSBmYWRlICIgaWQ9ImRldGFpbHMiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9ImRhdGEiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJ0ZXJtSW5mb3MiPk5iIGRlIHNhbGxlIGRlIGJhaW5zPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0idmFsdWVJbmZvcyAiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDEgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxocj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJkYXRhIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0idGVybUluZm9zIj5Nb2RlIGRlIGNoYXVmZmFnZTwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InZhbHVlSW5mb3MgIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBHQVogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxocj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJkYXRhIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0idGVybUluZm9zIj5UeXBlIGRlIGNoYXVmZmFnZSA8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJ2YWx1ZUluZm9zICIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgUkFESUFURVVSICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3A+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aHI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0iZGF0YSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InRlcm1JbmZvcyI+Rm9ybWF0IGRlIGNoYXVmZmFnZTwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InZhbHVlSW5mb3MgIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBJTkRJVklEVUVMICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3A+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aHI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0iZGF0YSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InRlcm1JbmZvcyI+SW50ZXJwaG9uZTwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InZhbHVlSW5mb3MgIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBPVUkgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxocj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJkYXRhIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0idGVybUluZm9zIj5CYWxjb248L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJ2YWx1ZUluZm9zICIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgT1VJICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3A+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aHI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0iZGF0YSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InRlcm1JbmZvcyI+Tm9tYnJlIGRlIGdhcmFnZTwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InZhbHVlSW5mb3MgIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAxICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3A+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aHI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0iZGF0YSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InRlcm1JbmZvcyI+RXhwb3NpdGlvbjwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InZhbHVlSW5mb3MgIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBOb3JkLU9VRVNUICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3A+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aHI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InRhYi1wYW5lIGZhZGUgIiBpZD0iY29wcm8iPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9ImRhdGEiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJ0ZXJtSW5mb3MiPlF1b3RlIFBhcnQgYW5udWVsbGUgZGVzIGNoYXJnZXM8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJ2YWx1ZUluZm9zICIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgMSAzNjAg4oKsICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3A+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aHI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InRhYi1wYW5lIGZhZGUgIiBpZD0iaW5mb3NmaSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0iZGF0YSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InRlcm1JbmZvcyI+UHJpeCBkZSB2ZW50ZTwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InZhbHVlSW5mb3MgIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA0NzAgMDAwIOKCrCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGhyPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9ImRhdGEiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJ0ZXJtSW5mb3MiPjxzcGFuIGNsYXNzPSIic21hbGxpbmZvcyIiPkxlcyBob25vcmFpcmVzIGQnYWdlbmNlIHNlcm9udCBpbnTDqWdyYWxlbWVudCDDoCBsYSBjaGFyZ2UgZHUgdmVuZGV1cjwvc3Bhbj48L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJ2YWx1ZUluZm9zICIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJm5ic3A7ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3A+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aHI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0iZGF0YSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InRlcm1JbmZvcyI+Q2hhcmdlczwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InZhbHVlSW5mb3MgIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAxMTQg4oKsICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3A+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aHI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0iZGF0YSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InRlcm1JbmZvcyI+VGF4ZSBmb25jacOocmUgYW5udWVsbGU8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJ2YWx1ZUluZm9zICIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgNzcwIOKCrCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGhyPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAKICAgICAgICA8L2Rpdj4KICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2FydGljbGU+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJyb3ciPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGFydGljbGUgY2xhc3M9ImNvbC1tZC02IGVsZW1lbnREdCI+CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0aGVtVGl0bGUgZWxlbWVudER0VGl0bGUgICI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aDE+RGlhZ25vc3RpY3MgZGUgcGVyZm9ybWFuY2Ugw6luZXJnw6l0aXF1ZTwvaDE+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZW5lcmd5IHJvdyB0ZXh0LWNlbnRlciI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2wteHMtNiAgZHBlIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBzcmM9Ii9hZG1pbi9kcGUucGhwP2xhbmc9ZnImYW1wO2lkYW5uPTU2NyIgYWx0PSJEUEUiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iIGNvbC14cy02ICBnZXMiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW1nIHNyYz0iL2FkbWluL2RwZS5waHA/dHlwZT1HRVMmYW1wO2xhbmc9ZnImYW1wO2lkYW5uPTU2NyIgYWx0PSJEUEUiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYXJ0aWNsZT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YXJ0aWNsZSBjbGFzcz0iY29sLW1kLTYgZWxlbWVudER0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0idGhlbVRpdGxlIGVsZW1lbnREdFRpdGxlIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxoMT5DZXR0ZSBhbm5vbmNlIHZvdXMgaW50w6lyZXNzZSA/PC9oMT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxmb3JtIG1ldGhvZD0icG9zdCIgYWN0aW9uPSIvNTY3LUNhbmFsLXNhaW50LU1hcnRpbi0yLXBpZWNlcy00Mi00Mi1tLUJveC5odG1sIiBjbGFzcz0iZm9ybS1ob3Jpem9udGFsIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImZvcm0tZ3JvdXAiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImZpZWxkIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCAgY2xhc3M9ImNvbC1zbS00IGNvbnRyb2wtbGFiZWwiPlZvdHJlIG5vbSAqPC9sYWJlbD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbC1zbS04Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0idGV4dCIgICBwbGFjZWhvbGRlcj0iIiAgbmFtZT0iZGF0YVtDb250YWN0XVtub21dIiBjbGFzcz0iZm9ybS1jb250cm9sIiByZXF1aXJlZCBvbmludmFsaWQ9InNldEN1c3RvbVZhbGlkaXR5KCdWZXVpbGxleiByZW5zZWlnbmVyIGNlIGNoYW1wcycpIiBvbmlucHV0PSJzZXRDdXN0b21WYWxpZGl0eSgnJykiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImZpZWxkIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCAgY2xhc3M9ImNvbC1zbS00IGNvbnRyb2wtbGFiZWwiPlZvdHJlIGFkcmVzc2UgbWFpbCAqPC9sYWJlbD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbC1zbS04Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0iZW1haWwiICAgcGxhY2Vob2xkZXI9IiIgIG5hbWU9ImRhdGFbQ29udGFjdF1bZW1haWxdIiBjbGFzcz0iZm9ybS1jb250cm9sIiByZXF1aXJlZCBvbmludmFsaWQ9InNldEN1c3RvbVZhbGlkaXR5KCdWZXVpbGxleiByZW5zZWlnbmVyIGNlIGNoYW1wcycpIiBvbmlucHV0PSJzZXRDdXN0b21WYWxpZGl0eSgnJykiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImZpZWxkIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCAgY2xhc3M9ImNvbC1zbS00IGNvbnRyb2wtbGFiZWwiPlZvdHJlIFTDqWzDqXBob25lICo8L2xhYmVsPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sLXNtLTgiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJ0ZXh0IiAgIHBsYWNlaG9sZGVyPSIiICBuYW1lPSJkYXRhW0NvbnRhY3RdW3RlbF0iIGNsYXNzPSJmb3JtLWNvbnRyb2wiIHJlcXVpcmVkIG9uaW52YWxpZD0ic2V0Q3VzdG9tVmFsaWRpdHkoJ1ZldWlsbGV6IHJlbnNlaWduZXIgY2UgY2hhbXBzJykiIG9uaW5wdXQ9InNldEN1c3RvbVZhbGlkaXR5KCcnKSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZmllbGQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsICBjbGFzcz0iY29sLXNtLTQgY29udHJvbC1sYWJlbCI+Vm90cmUgdmlsbGUgKjwvbGFiZWw+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtc20tOCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9InRleHQiICAgcGxhY2Vob2xkZXI9IiIgIG5hbWU9ImRhdGFbQ29udGFjdF1bdmlsbGVdIiBjbGFzcz0iZm9ybS1jb250cm9sIiByZXF1aXJlZCBvbmludmFsaWQ9InNldEN1c3RvbVZhbGlkaXR5KCdWZXVpbGxleiByZW5zZWlnbmVyIGNlIGNoYW1wcycpIiBvbmlucHV0PSJzZXRDdXN0b21WYWxpZGl0eSgnJykiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImZpZWxkIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCAgY2xhc3M9ImNvbC1zbS00IGNvbnRyb2wtbGFiZWwiPlZvdHJlIG1lc3NhZ2U8L2xhYmVsPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sLXNtLTgiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZXh0YXJlYSBuYW1lPSJkYXRhW0NvbnRhY3RdW21lc3NhZ2VdIiBjbGFzcz0iZm9ybS1jb250cm9sIiBwbGFjZWhvbGRlcj0iIiA+PC90ZXh0YXJlYT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImFzYnJ5dyIgc3R5bGU9ImRpc3BsYXk6bm9uZSI+CjxpbnB1dCB0eXBlPSJ0ZXh0IiBuYW1lPSJhc19keW5hIiBkYXRhLXdhaXQ9IjU5N2M5Y2Q3NzQxYjI4YWQ0Mjg3MWFmNWVjYjAwZDBlIiBkYXRhLW9yaWc9IjM3Mzc5NGUzODMzOGI3ZjFlYzQ4ZjRjNzEwZjRkMmY4IiBjbGFzcz0iYXNfZmllbGQgYXNfZmllbGQtMiAyIiB2YWx1ZT0iMzczNzk0ZTM4MzM4YjdmMWVjNDhmNGM3MTBmNGQyZjgiLz4KPGlucHV0IHR5cGU9InRleHQiIG5hbWU9ImFzX3N0YXQiIGNsYXNzPSJhc19maWVsZCBhc19maWVsZC0xIDEiIHZhbHVlPSIiLz4KPC9kaXY+CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InJncGQtY2hlY2tib3giPgogICAgPGlucHV0IHR5cGU9ImNoZWNrYm94IiBuYW1lPSJyZ3BkLWFncmVlbWVudCIgaWQ9InJncGQtYWdyZWVtZW50IiAvPgogICAgPGxhYmVsIGZvcj0icmdwZC1hZ3JlZW1lbnQiPkonYWNjZXB0ZSBsZXMgY29uZGl0aW9ucyBkJ3V0aWxpc2F0aW9uIGRlcyBkb25uw6llcyAoKik8L2xhYmVsPgo8L2Rpdj4KPHNjcmlwdD4KICAndXNlIHN0cmljdCc7CgogIChmdW5jdGlvbiAoKSB7CiAgICB2YXIgYWdyZWVtZW50ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3JncGQtYWdyZWVtZW50Jyk7CiAgICB2YXIgZm9ybSA9IGFncmVlbWVudC5jbG9zZXN0KCdmb3JtJyk7CiAgICBmb3JtLmFkZEV2ZW50TGlzdGVuZXIoJ3N1Ym1pdCcsIGZ1bmN0aW9uIChldmVudCkgewogICAgICBpZiAoIWFncmVlbWVudC5jaGVja2VkKSB7CiAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTsKICAgICAgICBhbGVydCgiVmV1aWxsZXogYWNjZXB0ZXIgbCd1dGlsaXNhdGlvbiBkZSB2b3MgZG9ubsOpZXMgcG91ciBjb250aW51ZXIuIik7CiAgICAgICAgcmV0dXJuIGZhbHNlOwogICAgICB9IGVsc2UgewogICAgICAgIHJldHVybiB0cnVlOwogICAgICB9CiAgICB9KTsKICB9KSgpOwo8L3NjcmlwdD4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJoaWRkZW4iIG5hbWU9ImRhdGFbaWRiaWVuXVtdIiB2YWx1ZT0iNTY3Ii8+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sLXNtLTggY29sLXNtLXB1c2gtNCBjb2wteHMtMTEgY29sLXhzLXB1c2gtMSBidG5TZW5kIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiB0eXBlPSJzdWJtaXQiIGNsYXNzPSJidG4gYnRuLWRlZmF1bHQiPkVudm95ZXI8L2J1dHRvbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9Im9ibGlnIj4qIENoYW1wcyBvYmxpZ2F0b2lyZXM8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9mb3JtPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJsZWdhbHMiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9InJncGQtbGVnYWxzIj4qIDogTGVzIGluZm9ybWF0aW9ucyByZWN1ZWlsbGllcyBzdXIgY2UgZm9ybXVsYWlyZSBzb250IGVucmVnaXN0csOpZXMgZGFucyB1biBmaWNoaWVyIGluZm9ybWF0aXPDqSBwYXIgTGEgQm9pdGUgSW1tbyBwb3VyIGxhIGdlc3Rpb24gZGUgbGEgY2xpZW50w6hsZS9wcm9zcGVjdHMgZGUgQ2FuYWwgU3RyZWV0LgpFbGxlcyBzb250IGNvbnNlcnbDqWVzIGp1c3F1J8OgIGRlbWFuZGUgZGUgc3VwcHJlc3Npb24gZXQgc29udCBkZXN0aW7DqWVzIMOgIENhbmFsIFN0cmVldC4KQ29uZm9ybcOpbWVudCDDoCBsYSBsb2kgwqsgaW5mb3JtYXRpcXVlIGV0IGxpYmVydMOpcyDCuywgdm91cyBwb3V2ZXogZXhlcmNlciB2b3RyZSBkcm9pdCBkJ2FjY8OocyBhdXggZG9ubsOpZXMgdm91cyBjb25jZXJuYW50IGV0IGxlcyBmYWlyZSByZWN0aWZpZXIgZW4gY29udGFjdGFudCBDYW5hbCBTdHJlZXQuCk5vdXMgdm91cyBpbmZvcm1vbnMgZGUgbOKAmWV4aXN0ZW5jZSBkZSBsYSBsaXN0ZSBkJ29wcG9zaXRpb24gYXUgZMOpbWFyY2hhZ2UgdMOpbMOpcGhvbmlxdWUgwqsgQmxvY3RlbCDCuywgc3VyIGxhcXVlbGxlIHZvdXMgcG91dmV6IHZvdXMgaW5zY3JpcmUgaWNpIDogaHR0cHM6Ly9jb25zby5ibG9jdGVsLmZyLzwvcD4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2FydGljbGU+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InJvdyBiaWdEYXRhIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sLXNtLTEyIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzZWN0aW9uIGNsYXNzPSJtYXAtaW5mb3MtY2l0eSBlbGVtZW50RHQiPgogICAgICAgIDxkaXYgY2xhc3M9InRpdGxlIHRoZW1UaXRsZSBlbGVtZW50RHRUaXRsZSI+CiAgICAgICAgICAgIDxoMT5MYSB2aWxsZSBkZSBQYXJpcyAoNzUwMTApPC9oMT4KICAgICAgICA8L2Rpdj4KICAgICAgICA8ZGl2IGNsYXNzPSJjb250ZW50Ij4KICAgICAgICAgICAgCiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2wteHMtMTIgbWFwIj4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGlkPSJtYXBJbmZvc0NpdHkiIHN0eWxlPSJ3aWR0aDoxMDAlO2hlaWdodDozMDBweDsiPjwvZGl2PgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Im1hcC1idXR0b25zIj48L2Rpdj4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAKICAgICAgICAgICAgCiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2wteHMtMTIgc3RhdCI+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBpZD0ic3RhdHNJbmZvc0NpdHkiPjwvZGl2PgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIAogICAgICAgIDwvZGl2PgogICAgPC9zZWN0aW9uPgogICAgCiAgICA8c3R5bGUgdHlwZT0idGV4dC9jc3MiPgogICAgICAgICNzdGF0c0luZm9zQ2l0eSB7CiAgICAgICAgfQogICAgICAgICNzdGF0c0luZm9zQ2l0eSB1bHsKICAgICAgICAgICAgbWFyZ2luOjA7IHBhZGRpbmc6MDsgbGlzdC1zdHlsZTogaW5zaWRlIG5vbmU7CiAgICAgICAgfQogICAgICAgICNzdGF0c0luZm9zQ2l0eSBsaXsKICAgICAgICAgICAgZm9udC1zaXplOiAwLjg1ZW07CiAgICAgICAgICAgIHBhZGRpbmc6MXB4OwogICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAycHg7CiAgICAgICAgfQogICAgICAgICNzdGF0c0luZm9zQ2l0eSAudGl0bGV7CiAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiBib2xkOwogICAgICAgICAgICBtYXJnaW4tYm90dG9tOjVweDsKICAgICAgICB9CiAgICAgICAgI3N0YXRzSW5mb3NDaXR5IGxpLm9kZHsKICAgICAgICAgICAgYmFja2dyb3VuZDojZWZlZmVmOwogICAgICAgIH0KICAgICAgICAjc3RhdHNJbmZvc0NpdHkgbGkgc3BhbnsKICAgICAgICAgICAgZGlzcGxheTppbmxpbmUtYmxvY2s7CiAgICAgICAgfQogICAgICAgICNzdGF0c0luZm9zQ2l0eSBsaSAudmFsdWV7CiAgICAgICAgICAgIHRleHQtYWxpZ246cmlnaHQ7CiAgICAgICAgICAgIGZsb2F0OnJpZ2h0OwogICAgICAgICAgICBwYWRkaW5nLXJpZ2h0OiA1cHg7CiAgICAgICAgfQogICAgICAgICNtYXBJbmZvc0NpdHkgaW1nIHsKICAgICAgICAgICAgbWF4LXdpZHRoOiBub25lOwogICAgICAgIH0KICAgICAgICAubWFwLWJ1dHRvbnN7CiAgICAgICAgICAgIGhlaWdodDozMHB4OwogICAgICAgIH0KICAgICAgICAubWFwLWJ1dHRvbnMgYXsKICAgICAgICAgICAgZGlzcGxheTogYmxvY2s7CiAgICAgICAgICAgIGZsb2F0OiBsZWZ0OwogICAgICAgICAgICBiYWNrZ3JvdW5kOiAjZTBlMGUwOwogICAgICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7CiAgICAgICAgICAgIHdpZHRoOjMwcHg7IGhlaWdodDozMHB4OwogICAgICAgICAgICBtYXJnaW46MCAwLjVweDsKICAgICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyOwogICAgICAgICAgICBmb250LXNpemU6OHB4OwogICAgICAgIH0KICAgIDwvc3R5bGU+CiAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgCiAgICA8L3NlY3Rpb24+CgogICAgCiAgICAKICAgICAgICAgICAgICAgICAgICA8c2VjdGlvbiBjbGFzcz0iaW5kZXhhdGlvbiI+CiAgICAgICAgICAgICAgICA8bmF2IGNsYXNzPSJjb250YWluZXIiPgogICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJyb3ciPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sLW1kLTEyIHRoZW1UaXRsZSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGgxPk5vcyB2ZW50ZXMgaW1tb2JpbGnDqHJlcyDDoCBQYXJpcyA6IDxzcGFuIGNsYXNzPSdwcmltYXJ5Jz5DYW5hbCBTdCBNYXJ0aW48L3NwYW4+LCA8c3BhbiBjbGFzcz0ncHJpbWFyeSc+MTDDqG1lIGFycm9uZGlzc2VtZW50PC9zcGFuPiBldCBhdXRyZXMgcXVhcnRpZXJzLjwvaDE+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InJvdyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbC1tZC0zIGNvbC1zbS02IGNvbC14cy0xMiBibG9jLWluZGV4YXRpb24iPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dWw+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGkgY2xhc3M9InRpdGxlIj48YSBocmVmPSIvQWNoZXRlci0wLWEtUGFyaXMvMSIgPjxzcGFuIGNsYXNzPSJwdWNlIGhpZGRlbi14cyI+PC9zcGFuPiA8cD48c3Ryb25nPkFjaGV0ZXIgdW4gbG9nZW1lbnQgw6AgUGFyaXMsIHBhciBiaWVuczwvc3Ryb25nPjwvcD48L2E+PC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpPiA8YSBocmVmPSIvQWNoZXRlci0wLWEtUGFyaXMvMi1BcHBhcnRlbWVudC8xIiA+PHA+QXBwYXJ0ZW1lbnRzIMOgIHZlbmRyZTwvcD48L2E+PC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGk+IDxhIGhyZWY9Ii9BY2hldGVyLTAtYS1QYXJpcy80LVN0dWRpby8xIiA+PHA+U3R1ZGlvcyDDoCB2ZW5kcmU8L3A+PC9hPjwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpPiA8YSBocmVmPSIvQWNoZXRlci0wLWEtUGFyaXMvMTgtRHVwbGV4LzEiID48cD5EdXBsZXhzIMOgIHZlbmRyZTwvcD48L2E+PC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGk+IDxhIGhyZWY9Ii9BY2hldGVyLTAtYS1QYXJpcy8zMS1Mb2Z0LzEiID48cD5Mb2Z0cyDDoCB2ZW5kcmU8L3A+PC9hPjwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdWw+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtbWQtMyBjb2wtc20tNiBjb2wteHMtMTIgYmxvYy1pbmRleGF0aW9uIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHVsPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpIGNsYXNzPSJ0aXRsZSI+PGEgaHJlZj0iL0FjaGV0ZXItMC1hLVBhcmlzLzEiID48c3BhbiBjbGFzcz0icHVjZSBoaWRkZW4teHMiPjwvc3Bhbj4gPHA+PHN0cm9uZz5BY2hldGVyIMOgIFBhcmlzLCBwYXIgcGnDqGNlczwvc3Ryb25nPjwvcD48L2E+PC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpPiA8YSBocmVmPSIvQWNoZXRlci0wLWEtUGFyaXMvMi1waWVjZXMvMSIgPjxwPjIgcGnDqGNlcyDDoCB2ZW5kcmU8L3A+PC9hPjwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpPiA8YSBocmVmPSIvQWNoZXRlci0wLWEtUGFyaXMvMy1waWVjZXMvMSIgPjxwPjMgcGnDqGNlcyDDoCB2ZW5kcmU8L3A+PC9hPjwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpPiA8YSBocmVmPSIvQWNoZXRlci0wLWEtUGFyaXMvNC1waWVjZXMvMSIgPjxwPjQgcGnDqGNlcyDDoCB2ZW5kcmU8L3A+PC9hPjwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpPiA8YSBocmVmPSIvQWNoZXRlci0wLWEtUGFyaXMvNS1waWVjZXMvMSIgPjxwPjUgcGnDqGNlcyDDoCB2ZW5kcmU8L3A+PC9hPjwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdWw+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtbWQtMyBjb2wtc20tNiBjb2wteHMtMTIgYmxvYy1pbmRleGF0aW9uIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHVsPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpIGNsYXNzPSJ0aXRsZSI+PGEgaHJlZj0iL0FjaGV0ZXItMC1hLVBhcmlzLzEiID48c3BhbiBjbGFzcz0icHVjZSBoaWRkZW4teHMiPjwvc3Bhbj4gPHA+PHN0cm9uZz5BY2hldGVyIMOgIFBhcmlzLCBwYXIgYXJyb25kaXNzZW1lbnRzPC9zdHJvbmc+PC9wPjwvYT48L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGk+IDxhIGhyZWY9Ii9BY2hldGVyLTAtYS1QYXJpcy9QYXJpcyAxMMOobWUtMzkzMTcvMSIgPjxwPk5vcyBhbm5vbmNlcyDDoCBQYXJpcyBQYXJpcyAxMMOobWU8L3A+PC9hPjwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpPiA8YSBocmVmPSIvQWNoZXRlci0wLWEtUGFyaXMvUGFyaXMgMjDDqG1lLTM5MzE5LzEiID48cD5Ob3MgYW5ub25jZXMgw6AgUGFyaXMgUGFyaXMgMjDDqG1lPC9wPjwvYT48L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaT4gPGEgaHJlZj0iL0FjaGV0ZXItMC1hLVBhcmlzL1BhcmlzIDExw6htZS0zOTMyMi8xIiA+PHA+Tm9zIGFubm9uY2VzIMOgIFBhcmlzIFBhcmlzIDExw6htZTwvcD48L2E+PC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGk+IDxhIGhyZWY9Ii9BY2hldGVyLTAtYS1QYXJpcy9QYXJpcyA3w6htZS0zOTMyMC8xIiA+PHA+Tm9zIGFubm9uY2VzIMOgIFBhcmlzIFBhcmlzIDfDqG1lPC9wPjwvYT48L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaT4gPGEgaHJlZj0iL0FjaGV0ZXItMC1hLVBhcmlzL1BhcmlzIDPDqG1lLTM4MTc1LzEiID48cD5Ob3MgYW5ub25jZXMgw6AgUGFyaXMgUGFyaXMgM8OobWU8L3A+PC9hPjwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdWw+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtbWQtMyBjb2wtc20tNiBjb2wteHMtMTIgYmxvYy1pbmRleGF0aW9uIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHVsPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpIGNsYXNzPSJ0aXRsZSI+PGEgaHJlZj0iLzAtQWNoZXRlci0yMC1jYW5hbC1zdC1tYXJ0aW4tcGFyaXMvMSIgPjxzcGFuIGNsYXNzPSJwdWNlIGhpZGRlbi14cyI+PC9zcGFuPiA8cD48c3Ryb25nPkFjaGV0ZXIgw6AgUGFyaXMgQ2FuYWwgU3QgTWFydGluPC9zdHJvbmc+PC9wPjwvYT48L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGk+IDxhIGhyZWY9Ii8wLUFjaGV0ZXItMjAtY2FuYWwtc3QtbWFydGluLXBhcmlzLzItQXBwYXJ0ZW1lbnQvMSIgPjxwPkFwcGFydGVtZW50IFBhcmlzIENhbmFsIFN0IE1hcnRpbjwvcD48L2E+PC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGk+IDxhIGhyZWY9Ii8wLUFjaGV0ZXItMjAtY2FuYWwtc3QtbWFydGluLXBhcmlzLzQtU3R1ZGlvLzEiID48cD5TdHVkaW8gUGFyaXMgQ2FuYWwgU3QgTWFydGluPC9wPjwvYT48L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaT4gPGEgaHJlZj0iLzAtQWNoZXRlci0yMC1jYW5hbC1zdC1tYXJ0aW4tcGFyaXMvMTgtRHVwbGV4LzEiID48cD5EdXBsZXggUGFyaXMgQ2FuYWwgU3QgTWFydGluPC9wPjwvYT48L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaT4gPGEgaHJlZj0iLzAtQWNoZXRlci0yMC1jYW5hbC1zdC1tYXJ0aW4tcGFyaXMvMzEtTG9mdC8xIiA+PHA+TG9mdCBQYXJpcyBDYW5hbCBTdCBNYXJ0aW48L3A+PC9hPjwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdWw+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIDwvbmF2PgogICAgICAgICAgICA8L3NlY3Rpb24+CiAgICAgICAgICAgIAogICAgCiAgICAgCgogICAgCgogICAgICAgIAogICAgICAgIDxzZWN0aW9uIGNsYXNzPSJtYWluRnRyIj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29udGFpbmVyIj4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIDxhcnRpY2xlIGNsYXNzPSJiYW5kZWF1QmxvYyI+CiAgICAgICAgICAgICAgICAgICAgICAgIA0KICAgIDxkaXYgY2xhc3M9InRoZW1UaXRsZSI+DQogICAgICAgIDxoMT5DQU5BTCBTVFJFRVQ8L2gxPg0KICAgIDwvZGl2Pg0KCiAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29udGVudC1tYWluRnRyIGNvbnRhaW5lciI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvb3Jkc0Zvb3RlciByb3ciPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIAogICAgICAgIAogICAgICAgIDx1bCBjbGFzcz0iY29vcmRzIGRlZmF1bHRDb29yZHMgY29sLXhzLTEyICAiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGkgY2xhc3M9ImFkcmVzcyI+CiAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZWxlbWVudENvb3JkcyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJ2YWxDb29yZHMgYWRyZXNzZSI+NCBSdWUgZGUgTGEgR3JhbmdlIGF1eCBCZWxsZXM8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InZhbENvb3JkcyBjcCI+NzUwMTA8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InZhbENvb3JkcyB2aWxsZSI+UGFyaXMgMTA8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGkgY2xhc3M9InBob25lIj4KICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJlbGVtZW50Q29vcmRzIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9InRlbDowMSA0MiAzOCAwMiAwNiI+MDEgNDIgMzggMDIgMDY8L2E+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGkgY2xhc3M9ImVtYWlsIj4KICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJlbGVtZW50Q29vcmRzIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Im1haWx0bzphZ2VuY2VAY2FuYWwtc3RyZWV0LmZyIj5hZ2VuY2VAY2FuYWwtc3RyZWV0LmZyPC9hPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgPC91bD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICA8ZGl2IGNsYXNzPSJidG4tcHJpbWFyeSBidG4tZnRyIj4KICAgICAgICA8YSBocmVmPSIvIyIgZGF0YS10b2dnbGU9Im1vZGFsIiBkYXRhLXRhcmdldD0iI0NvbnRhY3QiID5Db250YWN0PC9hPgogICAgPC9kaXY+CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIDwvYXJ0aWNsZT4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhcnRpY2xlIGNsYXNzPSJiYW5kZWF1Qm90dG9tIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0idGhlbVRpdGxlIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxoMT5Ob3VzIHN1aXZyZSBzdXI8L2gxPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icnN2Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL3d3dy5mYWNlYm9vay5jb20vY2FuYWxzdHJlZXRpbW1vLz9mcmVmPXRzIiBjbGFzcz0ibGlua3JzdiAiIHRhcmdldD0iX2JsYW5rIiA+PHNwYW4gY2xhc3M9Imljb24tZmFjZWJvb2syIGljb25zIj48L3NwYW4+PC9hPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly90d2l0dGVyLmNvbS9jYW5hbHN0cmVldGltbW8iIGNsYXNzPSJsaW5rcnN2ICIgdGFyZ2V0PSJfYmxhbmsiID48c3BhbiBjbGFzcz0iaWNvbi10d2l0dGVyMyBpY29ucyI+PC9zcGFuPjwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vd3d3LnlvdXR1YmUuY29tL2NoYW5uZWwvVUNsWEdNR0tPUnRYVlNWRDRFWG9jMGx3IiBjbGFzcz0ibGlua3JzdiAiIHRhcmdldD0iX2JsYW5rIiA+PHNwYW4gY2xhc3M9Imljb24teW91dHViZTIgaWNvbnMiPjwvc3Bhbj48L2E+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL3BsdXMuZ29vZ2xlLmNvbS8rQ2FuYWxTdHJlZXRJbW1vYmlsaWVyIiBjbGFzcz0ibGlua3JzdiAiIHRhcmdldD0iX2JsYW5rIiA+PHNwYW4gY2xhc3M9Imljb24tZ29vZ2xlcGx1czIgaWNvbnMiPjwvc3Bhbj48L2E+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwOi8vd3d3LmRhaWx5bW90aW9uLmNvbS9jYW5hbHN0cmVldGltbW8iIGNsYXNzPSJsaW5rcnN2ICIgdGFyZ2V0PSJfYmxhbmsiID48c3BhbiBjbGFzcz0iaWNvbi1kYWlseW1vdGlvbiBpY29ucyI+PC9zcGFuPjwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vd3d3LmxpbmtlZGluLmNvbS9pbi9jYW5hbC1zdHJlZXQtMTk2MDczYjIvIiBjbGFzcz0ibGlua3JzdiAiIHRhcmdldD0iX2JsYW5rIiA+PHNwYW4gY2xhc3M9Imljb24tbGlua2VkaW4yIGljb25zIj48L3NwYW4+PC9hPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYXJ0aWNsZT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIAogICAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L3NlY3Rpb24+CiAgICAKICAgIAogICAgCiAgICAgICAgPHNlY3Rpb24gY2xhc3M9ImZ0ci1ib3R0b20iPgogICAgICAgICAgICANCiAgICA8ZGl2IGNsYXNzPSJjb250YWluZXIiPg0KICAgICAgICA8ZGl2IGNsYXNzPSJyb3ciPg0KICAgICAgICAgICAgPGFydGljbGUgY2xhc3M9ImNvbC1zbS00IGVsZW1lbnRGdHIiPg0KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbnRlbnRGdHIgbmF2aWdhdGlvbiI+DQogICAgICAgICAgICAgICAgICAgIDxpbWcgc3JjPSJodHRwOi8vY2FuYWwtc3RyZWV0LnN0YXRpY2xiaS5jb20vb3JpZ2luYWwvaW1hZ2VzL2xvZ29fZm9vdGVyLnBuZyIgLz4NCiAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgIDwvYXJ0aWNsZT4NCiAgICAgICAgICAgIDxhcnRpY2xlIGNsYXNzPSJjb2wtc20tNCBlbGVtZW50RnRyIj4NCiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0aGVtVGl0bGUiPg0KICAgICAgICAgICAgICAgICAgICA8aDE+QWRow6lyZW50czwvaDE+DQogICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29udGVudEZ0ciBuYXZpZ2F0aW9uIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBzcmM9Imh0dHA6Ly9jYW5hbC1zdHJlZXQuc3RhdGljbGJpLmNvbS9vcmlnaW5hbC9pbWFnZXMvc29jYWxlLnBuZyIgY2xhc3M9IiIgLz4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgPC9hcnRpY2xlPg0KICAgICAgICAgICAgPGFydGljbGUgY2xhc3M9ImNvbC1zbS00IGVsZW1lbnRGdHIiPg0KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InRoZW1UaXRsZSI+DQogICAgICAgICAgICAgICAgICAgIDxoMT5TZSBjb25uZWN0ZXI8L2gxPg0KICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbnRlbnRGdHIgbmF2aWdhdGlvbiI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxidXR0b24gY2xhc3M9ImJ0bkZ0ciIgb25jbGljaz0id2luZG93Lm9wZW4oJy9hZG1pbi9lc3BhY2VfcHJvcHJpZXRhaXJlLnBocCcpOyByZXR1cm4gZmFsc2U7Ij4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iaWNvbi1lc3BhY2Vwcm9wcmlldGFpcmUgYnRuRnRySWNvbiI+PC9zcGFuPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJidG5GdHJUZXJtIj5Fc3BhY2UgcHJvcHJpw6l0YWlyZTwvc3Bhbj4NCiAgICAgICAgICAgICAgICAgICAgICAgIDwvYnV0dG9uPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIGNsYXNzPSJidG5GdHIiIG9uY2xpY2s9IndpbmRvdy5vcGVuKCcvbG9jYXRhaXJlJyk7IHJldHVybiBmYWxzZTsiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJpY29uLWVzcGFjZXByb3ByaWV0YWlyZSBidG5GdHJJY29uIj48L3NwYW4+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImJ0bkZ0clRlcm0iPkVzcGFjZSBsb2NhdGFpcmU8L3NwYW4+DQogICAgICAgICAgICAgICAgICAgICAgICA8L2J1dHRvbj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgPC9hcnRpY2xlPg0KICAgICAgICA8L2Rpdj4NCiAgICA8L2Rpdj4NCgogICAgICAgIDwvc2VjdGlvbj4KICAgIAogICAgCiAgICAgICAgPGZvb3RlciBjbGFzcz0ianVtYm90cm9uIGxhc3RGdHIiPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb250YWluZXIiPgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icm93Ij4KICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sLW1kLTQgY29sLXNtLTYgYmxvY2tfbGFzdEZ0ciI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cD4mY29weTsgMjAyMCB8IFRvdXMgZHJvaXRzIHLDqXNlcnbDqXMgfCBUcmFkdWN0aW9uIHBvd2VyZWQgYnkgR29vZ2xlIDxici8+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iL3BsYW4tZHUtc2l0ZS5odG1sIiA+UGxhbiBkdSBzaXRlPC9hPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC0gPGEgaHJlZj0iL2kvcmVkYWMvbGVnYWxzIiA+TWVudGlvbnMgbMOpZ2FsZXM8L2E+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLSA8YSBocmVmPSIvaS9yZWRhYy9ob25vcmFpcmVzIiA+Tm9zIGhvbm9yYWlyZXM8L2E+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAtIDxhIGhyZWY9Ii9ub3MtbGllbnMuaHRtbCIgPkxpZW5zPC9hPiAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAtIDxhIGhyZWY9Ii9hZG1pbi8iIHRhcmdldD0iX2JsYW5rIiA+QWRtaW48L2E+IAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC0gPGEgaHJlZj0iL3RvdXRlcy1ub3MtYW5ub25jZXMuaHRtbCIgPlRvdXRlcyBub3MgYW5ub25jZXM8L2E+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3A+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtbWQtNCBjb2wtc20tNiBibG9ja19sYXN0RnRyIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Imljb25SZXNwIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iaWNvbi1tdWx0aXN1cHBvcnQiPjwvc3Bhbj48cCBjbGFzcz0iY29udGVudFJlc3AiPlNpdGUgaW50ZXJuZXQgY29tcGF0aWJsZSBtdWx0aS1zdXBwb3J0cyw8YnIvPnVuIHNldWwgc2l0ZSBhZGFwdGFibGUgw6AgdG91cyBsZXMgdHlwZXMgZCfDqWNyYW5zLjwvcD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sLW1kLTQgY29sLXNtLTEyIGJsb2NrX2xhc3RGdHIiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBzcmM9Imh0dHA6Ly9jYW5hbC1zdHJlZXQuc3RhdGljbGJpLmNvbS9vcmlnaW5hbC9pbWFnZXMvbG9nb0xCSS5wbmciIGFsdD0iTGEgYm9pdGUgaW1tbyIgLz4KICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9mb290ZXI+CiAgICAKCgogICAgCiAgICAKCgogICAgICAgIDxzY3JpcHQgc3JjPSIvL2FqYXguZ29vZ2xlYXBpcy5jb20vYWpheC9saWJzL2pxdWVyeS8xLjEwLjEvanF1ZXJ5Lm1pbi5qcyIgPjwvc2NyaXB0PgogICAgICAgIDxzY3JpcHQgc3JjPSIvL2FqYXguZ29vZ2xlYXBpcy5jb20vYWpheC9saWJzL2pxdWVyeXVpLzEuMTAuMy9qcXVlcnktdWkubWluLmpzIiA+PC9zY3JpcHQ+CiAgICAgICAgCiAgICAgICAgICAgIDxzY3JpcHQgc3JjPSIvanMvYnVpbGRfYzliOWNhYjdjN2I1ZDc2MzU4MTdmMGRiYTcwNzMwYTEuanMiIGRhdGEtbW9kZWw9J3ZlbmljZScgaWQ9J3ByaW5jaXBhbEpzJz48L3NjcmlwdD4KICAgICAgICAKCiAgICAgICAgIAogICAgPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPgogICAgICAgICQoZG9jdW1lbnQpLnJlYWR5KGZ1bmN0aW9uKCl7CiAgICAgICAgICAgICQoICIuYmFjayIgKS5jbGljayhmdW5jdGlvbigpIHsKICAgICAgICAgICAgICAgIHZhciB1cmwgPSAiLy93d3cuY2FuYWwtc3RyZWV0LmZyIjsKICAgICAgICAgICAgICAgICQobG9jYXRpb24pLmF0dHIoJ2hyZWYnLHVybCk7CiAgICAgICAgICAgIH0pOwogICAgICAgIH0pOwogICAgPC9zY3JpcHQ+CiAgICAgICAgICAgICAgICA8c2NyaXB0PgogICAgICAgIAogICAgICAgICAvKioqKioqKioqKiogYmllbiBjb25maWcgb3B0aW9uIGdlb2xvYyAqKioqKioqKioqKiAvCiAgICAgICAgICAqCiAgICAgICAgICAqIEB0eXBlIEFycmF5fEFycmF5CiAgICAgICAgICAqLwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgbWFya2VycyA9IHt9OwogICAgICAgIHZhciBtYXA7CiAgICAgICAgdmFyIGlzTWFwRHJhZ2dpbmc7CiAgICAgICAgdmFyIGlkbGVTa2lwcGVkOwogICAgICAgIHZhciB2aXNpYmxlOwogICAgICAgIHZhciB0cmFuc2xhdGVzID0ge307CiAgICAgICAgdmFyIGdlb2NvZGVyOwoKICAgICAgICB2YXIgY29sb3JNYXJrZXJzOwogICAgICAgICAKCgogICAgICAgIGZ1bmN0aW9uIGdldE1hcChNYXApewoKICAgICAgICAgICAgdmFyIG1hcCA9IE1hcC5tYXA7CiAgICAgICAgICAgIG9wdGlvbnNDaXJjbGUgPSB7CiAgICAgICAgICAgICAgICBtYXA6IG1hcCwKICAgICAgICAgICAgICAgIGNlbnRlcjogeyBsYXQgOiA0OC44NzIyNDU4MDA1NTggLCBsbmc6ICAyLjM3MjQyNjY0MDg5MzkgfSwKICAgICAgICAgICAgICAgIHJhZGl1czogMTUwMCwKICAgICAgICAgICAgICAgIHN0cm9rZUNvbG9yOiAnI0IzRDEwMCcsCiAgICAgICAgICAgICAgICBzdHJva2VPcGFjaXR5OiAwLjgsCiAgICAgICAgICAgICAgICBzdHJva2VXZWlnaHQ6IDEsCiAgICAgICAgICAgICAgICBmaWxsQ29sb3I6ICcjQjNEMTAwJywKICAgICAgICAgICAgICAgIGZpbGxPcGFjaXR5OiAwLjM1CiAgICAgICAgICAgIH07CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvL21hcC5zZXRDZW50ZXIobmV3IGdvb2dsZS5tYXBzLkxhdExuZyg0OC44NjAwMDA2MTAsIDIuMzQ0NDQ5OTk3KSk7CiAgICAgICAgICAgICAgICAgICAgTWFwLnNldENlbnRlcihtYXAsIHsgbGF0OiA0OC44NzIyNDU4MDA1NTgsIGxuZzogMi4zNzI0MjY2NDA4OTM5IH0pOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFkZExpc3RlbmVycyhNYXApOwogICAgICAgIH0KCiAgICAgICAgZnVuY3Rpb24gYWRkTGlzdGVuZXJzKE1hcCl7CiAgICAgICAgICBNYXAuc2V0TWluWm9vbShNYXAubWFwLCAxMik7CiAgICAgICAgICBjYWxsTWFya2VycyhNYXApOwogICAgICAgICAgTWFwLmFkZE1hcExpc3RlbmVyKE1hcC5tYXAsICdpZGxlJywgZnVuY3Rpb24oKSB7CiAgICAgICAgICAgIGlmIChpc01hcERyYWdnaW5nKSB7CiAgICAgICAgICAgICAgaWRsZVNraXBwZWQgPSB0cnVlOwogICAgICAgICAgICAgIHJldHVybjsKICAgICAgICAgICAgfQogICAgICAgICAgICBpZGxlU2tpcHBlZCA9IGZhbHNlOwogICAgICAgICAgICBjYWxsTWFya2VycyhNYXApOwogICAgICAgICAgfSk7CiAgICAgICAgICBNYXAuYWRkTWFwTGlzdGVuZXIoTWFwLm1hcCwgJ2RyYWdzdGFydCcsIGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgaXNNYXBEcmFnZ2luZyA9IHRydWU7CiAgICAgICAgICB9KTsKICAgICAgICAgIE1hcC5hZGRNYXBMaXN0ZW5lcihNYXAubWFwLCAnZHJhZ2VuZCcsIGZ1bmN0aW9uKCkgewogICAgICAgICAgICBpc01hcERyYWdnaW5nID0gZmFsc2U7CiAgICAgICAgICAgIGlmIChpZGxlU2tpcHBlZCA9PT0gdHJ1ZSkgewogICAgICAgICAgICAgIGNhbGxNYXJrZXJzKE1hcCk7CiAgICAgICAgICAgICAgaWRsZVNraXBwZWQgPSBmYWxzZTsKICAgICAgICAgICAgfQogICAgICAgICAgfSk7CiAgICAgICAgfQoKCiAgICAgICAgZnVuY3Rpb24gY2FsbE1hcmtlcnMoTWFwKXsKICAgICAgICAgICAgdmFyIGJvdW5kcyA9IE1hcC5nZXRCb3VuZHMoTWFwLm1hcCk7CiAgICAgICAgICAgIHZhciBib3VuZHNDb29yZHMgPSBNYXAuZ2V0TGF0TG5nTWluTWF4KGJvdW5kcyk7CiAgICAgICAgICAgIHZhciBteEx0ID0gYm91bmRzQ29vcmRzLmxhdC5tYXg7CiAgICAgICAgICAgIHZhciBtbkx0ID0gYm91bmRzQ29vcmRzLmxhdC5taW47CiAgICAgICAgICAgIHZhciBteExnID0gYm91bmRzQ29vcmRzLmxuZy5tYXg7CiAgICAgICAgICAgIHZhciBtbkxnID0gYm91bmRzQ29vcmRzLmxuZy5taW47CiAgICAgICAgICAgICQuZ2V0KCIvaS9wb2kvZ2V0UG9pQmV0d2Vlbj9taW5MYXQ9Iittbkx0KyImbWF4TGF0PSIrbXhMdCsiJm1pbkxuZz0iK21uTGcrIiZtYXhMbmc9IitteExnKS5kb25lKGZ1bmN0aW9uKGpzb25NYXJrZXJzKXsKICAgICAgICAgICAgICAgIGlmKGpzb25NYXJrZXJzID09PSBudWxsKXsKICAgICAgICAgICAgICAgICAgICBqc29uTWFya2VycyA9IFtdOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgY2xlYW5NYXJrZXJzKCk7CiAgICAgICAgICAgICAgICBhZGRNYXJrZXJzKGpzb25NYXJrZXJzLCBNYXApOwogICAgICAgICAgICB9KTsKICAgICAgICB9CgogICAgICAgIGZ1bmN0aW9uIGNsZWFuTWFya2VycygpewogICAgICAgICAgICB2aXNpYmxlID0gW107CiAgICAgICAgICAgIGZvcihrZXkgaW4gbWFya2Vycyl7CiAgICAgICAgICAgICAgICBpZihtYXJrZXJzLmhhc093blByb3BlcnR5KGtleSkpewogICAgICAgICAgICAgICAgICAgICQuZWFjaChtYXJrZXJzW2tleV0sIGZ1bmN0aW9uKGssIG1hcmtlcil7CiAgICAgICAgICAgICAgICAgICAgICB2YXIgTWFwID0gbWFya2VyLmRhdGFDb250YWluZXIuTWFwOwogICAgICAgICAgICAgICAgICAgICAgICBpZihtYXJrZXIuZGF0YUNvbnRhaW5lci5tYXAgIT09IG51bGwgJiYgdmlzaWJsZS5pbmRleE9mKGtleSk8MCl7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2aXNpYmxlLnB1c2goa2V5KTsKICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICBNYXAucmVtb3ZlTWFya2VyKE1hcC5tYXAsIG1hcmtlcik7CiAgICAgICAgICAgICAgICAgICAgICAgIG1hcmtlci5kYXRhQ29udGFpbmVyLm1hcCA9IG51bGw7CiAgICAgICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICAgICAgbWFya2Vyc1trZXldID0gW107CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICB9CiAgICAgICAgCiAgICAgICAgZnVuY3Rpb24gYWRkTWFya2Vycyhqc29uTWFya2VycywgTWFwKXsKICAgICAgICAgICAgJC5lYWNoKGpzb25NYXJrZXJzLCBmdW5jdGlvbigpewogICAgICAgICAgICAgIHZhciBtYXJrZXJEYXRhID0gdGhpczsKICAgICAgICAgICAgICAgIGlmKCFtYXJrZXJzLmhhc093blByb3BlcnR5KHRoaXMubm9tKSl7CiAgICAgICAgICAgICAgICAgICAgbWFya2Vyc1t0aGlzLm5vbV0gPSBbXTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIHZhciBwb3NpdGlvbiA9IHsgbGF0OiBtYXJrZXJEYXRhLnksIGxuZzogbWFya2VyRGF0YS54fTsKICAgICAgICAgICAgICAgIHZhciBtYXBNYXJrZXIgPSB2aXNpYmxlLmluZGV4T2YodGhpcy5ub20pPj0wID8gTWFwLm1hcCA6IG51bGw7CiAgICAgICAgICAgICAgICB0cmFuc2xhdGVzW3RoaXMubm9tXSA9IHRoaXMudHJhbnNsYXRlOwogICAgICAgICAgICAgIHZhciBtYXJrZXJPcHRpb25zID0gewogICAgICAgICAgICAgICAgdGl0bGU6IHRoaXMudHJhbnNsYXRlLAogICAgICAgICAgICAgICAgaWNvbjogTWFwLmNyZWF0ZUljb24oJy9pL3BvaS9nZXRJY29uTWFwP3R5cGU9Jyt0aGlzLm5vbSwgWzMyLDU0XSkKICAgICAgICAgICAgICB9OwogICAgICAgICAgICAgIHZhciBtYXJrZXIgPSBNYXAuY3JlYXRlTWFwTWFya2VyKHBvc2l0aW9uLCBtYXJrZXJPcHRpb25zLCB7CiAgICAgICAgICAgICAgICBtYXA6IG1hcE1hcmtlciwKICAgICAgICAgICAgICAgIE1hcDogTWFwCiAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgaWYgKHZpc2libGUuaW5kZXhPZih0aGlzLm5vbSk+PTApIHsKICAgICAgICAgICAgICAgIE1hcC5hZGRNYXJrZXIoTWFwLm1hcCwgbWFya2VyKTsKICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBtYXJrZXJzW3RoaXMubm9tXS5wdXNoKG1hcmtlcik7CiAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICAgICAgICAgICAgYWRkQnV0dG9ucygpOwogICAgICAgIH0KICAgICAgICAKCiAgICAgICAgZnVuY3Rpb24gYWRkQnV0dG9ucygpewogICAgICAgICAgICAkKCIubWFwLWJ1dHRvbnMiKS5lbXB0eSgpOwogICAgICAgICAgICAkLmVhY2gobWFya2VycywgZnVuY3Rpb24oaywgbWtzKXsKICAgICAgICAgICAgICAgIGlmKG1rcy5sZW5ndGggPiAwKXsKICAgICAgICAgICAgICAgICAgICB2YXIgaXNWaXNpYmxlID0gKHZpc2libGUuaW5kZXhPZihrKSA+IC0xKTsKICAgICAgICAgICAgICAgICAgICBhZGRUeXBlQnV0dG9uKGssIGlzVmlzaWJsZSk7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0pOwogICAgICAgIH0KICAgICAgICAKICAgICAgICAgICAgZnVuY3Rpb24gc2hvd0hpZGVNYXJrZXJzKHR5cGUpewogICAgICAgICAgICAgICAgaWYobWFya2Vycy5oYXNPd25Qcm9wZXJ0eSh0eXBlKSl7CiAgICAgICAgICAgICAgICAgICAgZm9yKHZhciBpID0gMDsgaSA8IG1hcmtlcnNbdHlwZV0ubGVuZ3RoOyBpKyspewogICAgICAgICAgICAgICAgICAgICAgIGlmKG1hcmtlcnNbdHlwZV1baV0uZGF0YUNvbnRhaW5lci5tYXAgPT09IG51bGwgKXsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1hcmtlcnNbdHlwZV1baV0uZGF0YUNvbnRhaW5lci5tYXAgPSBtYXJrZXJzW3R5cGVdW2ldLmRhdGFDb250YWluZXIuTWFwLm1hcDsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1hcmtlcnNbdHlwZV1baV0uZGF0YUNvbnRhaW5lci5NYXAuYWRkTWFya2VyKG1hcmtlcnNbdHlwZV1baV0uZGF0YUNvbnRhaW5lci5tYXAsIG1hcmtlcnNbdHlwZV1baV0pOwogICAgICAgICAgICAgICAgICAgICAgICAgICBjb2xvclR5cGUodHlwZSwgdHJ1ZSk7CiAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgICAgICAgIG1hcmtlcnNbdHlwZV1baV0uZGF0YUNvbnRhaW5lci5NYXAucmVtb3ZlTWFya2VyKG1hcmtlcnNbdHlwZV1baV0uZGF0YUNvbnRhaW5lci5tYXAsIG1hcmtlcnNbdHlwZV1baV0pOwogICAgICAgICAgICAgICAgICAgICAgICAgbWFya2Vyc1t0eXBlXVtpXS5kYXRhQ29udGFpbmVyLm1hcCA9IG51bGw7CiAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbG9yVHlwZSh0eXBlLCBmYWxzZSk7CiAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgIAogICAgICAgIAogICAgICAgICAgICBmdW5jdGlvbiBhZGRUeXBlQnV0dG9uKHR5cGUsIGlzVmlzaWJsZSl7CiAgICAgICAgICAgICAgICB2YXIgYmFyID0gJCgiLm1hcC1idXR0b25zIik7CiAgICAgICAgICAgICAgICB2YXIgYSA9ICQoIjxhLz4iKTsKICAgICAgICAgICAgICAgIHZhciB0cmFuc2xhdGUgPSB0cmFuc2xhdGVzW3R5cGVdOwogICAgICAgICAgICAgICAgYS5hdHRyKCJjbGFzcyIsIm1hcC1idXR0b24iKTsKICAgICAgICAgICAgICAgIGEuYXR0cigicmVsIiwgdHlwZSk7CiAgICAgICAgICAgICAgICBhLmF0dHIoImhyZWYiLCIjIik7CiAgICAgICAgICAgICAgICB2YXIgaW1nID0gJCgiPGltZy8+Iik7CiAgICAgICAgICAgICAgICBpbWcuYXR0cignc3JjJywgJy9pL3BvaS9nZXRJY29uQmFyP3R5cGU9Jyt0eXBlKTsKICAgICAgICAgICAgICAgIGltZy5hdHRyKCd0aXRsZScsIHRyYW5zbGF0ZSk7CiAgICAgICAgICAgICAgICBpbWcuYXR0cignYWx0JywgdHlwZSk7CiAgICAgICAgICAgICAgICBpZihpc1Zpc2libGUpewogICAgICAgICAgICAgICAgICAgIGltZy5jc3MoJ2JhY2tncm91bmQtY29sb3InLCAnIycrY29sb3JNYXJrZXJzW3R5cGVdKTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIGEuYXBwZW5kKGltZyk7CiAgICAgICAgICAgICAgICAKICAgIGEuYXBwZW5kKCc8c3BhbiBjbGFzcz0idHlwZUxpbmsiPicrdHJhbnNsYXRlKyc8L3NwYW4+Jyk7CgogICAgICAgICAgICAgICAgYmFyLmFwcGVuZChhKTsKICAgICAgICAgICAgfQogICAgICAgIAogICAgICAgIAogICAgICAgICAgICBmdW5jdGlvbiBjb2xvclR5cGUodHlwZSwgc2hvdyl7CiAgICAgICAgICAgICAgICB2YXIgY29sb3I7CiAgICAgICAgICAgICAgICBpZihzaG93KXsKICAgICAgICAgICAgICAgICAgICBjb2xvciA9ICcjJytjb2xvck1hcmtlcnNbdHlwZV07CiAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICAgIGNvbG9yID0gJ3RyYW5zcGFyZW50JzsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICQoJ2ltZ1thbHQ9IicrdHlwZSsnIl0nKS5jc3MoJ2JhY2tncm91bmQtY29sb3InLCBjb2xvcik7CiAgICAgICAgICAgIH0KICAgICAgICAKICAgICAgICBmdW5jdGlvbiBhcHAgKCl7CiAgICAgICAgICAgIAogICAgICAgICAgICAKICAgICAgICAgICAgICAgICQuZ2V0U2NyaXB0KCcvaS9qc29uL2dldExiaW1hcHNMaWInLCBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgICAgICAgICAgJC5hamF4KCcvaS9qc29uL2dldEFwaUtleXM/dHlwZT1kZXRhaWwnKS5kb25lKGZ1bmN0aW9uIChhcGlLZXlzKSB7CiAgICAgICAgICAgICAgICAgICAgICB2YXIgcHJvdmlkZXIgPSAnamF3Zyc7CiAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBtYXBPcHRpb25zID0gewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB6b29tIDogMTQgLCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtaW5ab29tIDogMTIgLCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwYW5Db250cm9sIDogMSAsICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNjYWxlQ29udHJvbCA6IDEgLCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB6b29tQ29udHJvbCA6IDEgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfTsKICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgIHZhciBvcHRpb25zID0gT2JqZWN0LmFzc2lnbih7IH0sIG1hcE9wdGlvbnMsIHsKICAgICAgICAgICAgICAgICAgICAgICAgbWFwQ29udGFpbmVyOiAnI21hcEluZm9zQ2l0eScsCiAgICAgICAgICAgICAgICAgICAgICAgIHRva2VuOiBhcGlLZXlzW3Byb3ZpZGVyXSwKICAgICAgICAgICAgICAgICAgICAgICAgY2FsbGJhY2s6IHdpbmRvdy5nZXRNYXAKICAgICAgICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgICAgICAgbGJpbWFwcy5jYWxsYmFjayhsYmltYXBzLnByb3ZpZGVyc1twcm92aWRlcl0pKG9wdGlvbnMpCiAgICAgICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAKCiAgICAgICAgICAgIAogICAgICAgICAgICAgICAgJChkb2N1bWVudCkub24oImNsaWNrIiwiLm1hcC1idXR0b24iLCBmdW5jdGlvbigpewogICAgICAgICAgICAgICAgICAgIHZhciB0eXBlID0gJCh0aGlzKS5hdHRyKCJyZWwiKTsKICAgICAgICAgICAgICAgICAgICBzaG93SGlkZU1hcmtlcnModHlwZSk7CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlOwogICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAkLmdldCgnL2kvcG9pL2dldEljb25Db2xvcnMnKS5kb25lKGZ1bmN0aW9uKHJlc3VsdCkgewogICAgICAgICAgICAgICAgICAgICAgICBjb2xvck1hcmtlcnMgPSByZXN1bHQ7CiAgICAgICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICAgICAgJC5nZXQoIi9pL3BvaS9nZXRTdGF0cz9pZGxvY2FsaXRlPTc2OTgiLHt9LCdqc29uJykuZG9uZShmdW5jdGlvbihzdGF0cyl7CiAgICAgICAgICAgICAgICAgICAgICAgIAogICAgdmFyIGkgPSAwOwogICAgdmFyIHVsID0gJCgiPHVsIGNsYXNzPSdsZWZ0U3RhdCcvPiIpOwogICAgdmFyIHVsMiA9ICQoIjx1bCBjbGFzcz0ncmlnaHRTdGF0Jy8+Iik7CiAgICAkKCcjc3RhdHNJbmZvc0NpdHknKS5hcHBlbmQoJzxkaXYgY2xhc3M9InRoZW1UaXRsZSI+U3RhdGlzdGlxdWVzPC9kaXY+Jyk7CiAgICAkLmVhY2goc3RhdHMsIGZ1bmN0aW9uKGssIHN0YXQpewogICAgICAgIHZhciBsaSA9ICQoIjxsaS8+Iik7CiAgICAgICAgaWYoaSUyID09PSAwKXsKICAgICAgICAgICAgbGkuYWRkQ2xhc3MoJ2V2ZW4nKTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgICBsaS5hZGRDbGFzcygnb2RkJyk7CiAgICAgICAgfQogICAgICAgIHZhciB1bml0ZSA9ICIlIjsKICAgICAgICBpZiAoKHN0YXQudHJhbnNsYXRlKS5pbmNsdWRlcygiTm9tYnJlIil8fHN0YXQucHJvdmlkZXIgPT0gJ2FwaScpewogICAgICAgICAgIHVuaXRlID0gIiI7CiAgICAgICAgfQogICAgICAgIGxpLmh0bWwoJzxzcGFuIGNsYXNzPSJuYW1lIj4nK3N0YXQudHJhbnNsYXRlKyc8L3NwYW4+PHNwYW4gY2xhc3M9InZhbHVlIj4nK3N0YXQuc3RhdCsnICcrdW5pdGUrJzwvc3Bhbj4nKTsKICAgICAgICBpZiAoaSA8IDcpewogICAgICAgICAgICB1bC5hcHBlbmQobGkpOwogICAgICAgIH0KICAgICAgICBlbHNlIGlmIChpID4gNiAmJiBpIDwgMTQpewogICAgICAgICAgICAkKCIjc3RhdHNJbmZvc0NpdHkiKS5hcHBlbmQodWwpOwogICAgICAgICAgICB1bDIuYXBwZW5kKGxpKTsKICAgICAgICB9CiAgICAgICAgaSsrOwogICAgfSk7CiAgICAkKCIjc3RhdHNJbmZvc0NpdHkiKS5hcHBlbmQodWwyKTsKCiAgICAgICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgCiAgICAgICAgfQogICAgICAgIAogICAgICAgICAgICBhcHAoKTsKICAgICAgICAKCiAgICAgICAgCiAgICA8L3NjcmlwdD4KICAgICAgICAKCiAgICAgICAgCiAgICAgICAgIAogICAgICAgICAgPCEtLSDDoCB1dGlsaXNlciBzaSBvbiB2ZXV0IGFqb3V0ZXIgdW4gZmljaGllciBqcyBzcMOpY2lmaXF1ZSBhdSBzaXRlIC0tPgoKCiAgICAgICAgCiAgICAKICAgICAgICAgICAgCiAgICA8c2NyaXB0PgpqUXVlcnkoZG9jdW1lbnQpLnJlYWR5KGZ1bmN0aW9uKCl7CiAgICAgICAgICAgIGpRdWVyeShkb2N1bWVudCkub24oJ3N1Ym1pdCcsICdmb3JtJywgZnVuY3Rpb24oKXsgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICB2YXIgbXlmb3JtID0galF1ZXJ5KHRoaXMpOwogICAgICAgICAgICAgICAgdmFyIGFzID0galF1ZXJ5KCcuYXNicnl3JywgbXlmb3JtKTsgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICBpZihhcy5sZW5ndGgpeyAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgdmFyIGR5bmFtaWMgPSBqUXVlcnkoJy4yJywgYXMpOwogICAgICAgICAgICAgICAgICAgIHZhciBjdXJyZW50dmFsdWUgPSBkeW5hbWljLnZhbCgpOwogICAgICAgICAgICAgICAgICAgIHZhciBvcmlndmFsdWUgPSBkeW5hbWljLmF0dHIoJ2RhdGEtb3JpZycpOwogICAgICAgICAgICAgICAgICAgIGlmKGN1cnJlbnR2YWx1ZSA9PT0gb3JpZ3ZhbHVlKSB7CiAgICAgICAgICAgICAgICAgICAgICAgIHZhciB3YWl0ZWR2YWx1ZSA9IGR5bmFtaWMuYXR0cignZGF0YS13YWl0Jyk7CiAgICAgICAgICAgICAgICAgICAgICAgIGR5bmFtaWMudmFsKHdhaXRlZHZhbHVlKTsKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTsKICAgICAgICAgICAgfSk7CiAgICAgICAgfSk7Cjwvc2NyaXB0PgoKCiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIAogICAgICAgIAogICAgICAgICAgICA8ZGl2IGNsYXNzPSJzY3JvbGxUb1RvcCI+CiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iaWNvbi1mbGVjaGUgZnMtNDAiPjwvc3Bhbj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgCgogICAgICAgIAogICAgICAgIAogICAgPC9ib2R5Pgo8L2h0bWw+Cg==
    http_version: null
  recorded_at: Wed, 15 Apr 2020 14:41:00 GMT
- request:
    method: get
    uri: http://www.canal-street.fr/603-Buttes-Chaumont-2-pieces-52-m.html
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Wed, 15 Apr 2020 14:41:00 GMT
      Server:
      - Apache/2.4.25 (Debian)
      Expires:
      - Thu, 19 Nov 1981 08:52:00 GMT
      Cache-Control:
      - no-store, no-cache, must-revalidate
      Pragma:
      - no-cache
      X-Bobcat-Version:
      - kitty.pryde.20200414.rev1
      Set-Cookie:
      - PHPSESSID=8misbh9tpdt0s8bvcv1cb5ap4s; path=/
      - SRV=c53; path=/
      Vary:
      - Accept-Encoding
      X-Server-Id:
      - cluster5-w3
      Access-Control-Allow-Origin:
      - "*"
      Content-Length:
      - '14754'
      Content-Type:
      - text/html; charset=UTF-8
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: null
  recorded_at: Wed, 15 Apr 2020 14:41:00 GMT
- request:
    method: get
    uri: http://www.canal-street.fr/665-Canal-Saint-Martin-1-piece-20-9m.html
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Wed, 15 Apr 2020 14:41:01 GMT
      Server:
      - Apache/2.4.25 (Debian)
      Expires:
      - Thu, 19 Nov 1981 08:52:00 GMT
      Cache-Control:
      - no-store, no-cache, must-revalidate
      Pragma:
      - no-cache
      X-Bobcat-Version:
      - kitty.pryde.20200414.rev1
      Set-Cookie:
      - PHPSESSID=c2j9ehce8e2u29mc1ulj1giv6o; path=/
      - SRV=c54; path=/
      Vary:
      - Accept-Encoding
      X-Server-Id:
      - cluster5-w4
      Access-Control-Allow-Origin:
      - "*"
      Content-Length:
      - '14956'
      Content-Type:
      - text/html; charset=UTF-8
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: null
  recorded_at: Wed, 15 Apr 2020 14:41:01 GMT
- request:
    method: get
    uri: http://www.canal-street.fr/669-Canal-Saint-Martin-Studio-16-3-m-balcon.html
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Wed, 15 Apr 2020 14:41:01 GMT
      Server:
      - Apache/2.4.25 (Debian)
      Expires:
      - Thu, 19 Nov 1981 08:52:00 GMT
      Cache-Control:
      - no-store, no-cache, must-revalidate
      Pragma:
      - no-cache
      X-Bobcat-Version:
      - kitty.pryde.20200414.rev1
      Set-Cookie:
      - PHPSESSID=o6rdjuom0dpljhokuor5ercnf1; path=/
      - SRV=c52; path=/
      Vary:
      - Accept-Encoding
      X-Server-Id:
      - cluster5-w2
      Access-Control-Allow-Origin:
      - "*"
      Content-Length:
      - '14792'
      Content-Type:
      - text/html; charset=UTF-8
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: null
  recorded_at: Wed, 15 Apr 2020 14:41:01 GMT
recorded_with: VCR 5.1.0
