---
http_interactions:
- request:
    method: post
    uri: https://www.immobilier-surmesure.com/wp-admin/admin-ajax.php
    body:
      encoding: UTF-8
      string: lieux%5B%5D=paris&lieux%5B%5D=paris-11&lieux%5B%5D=paris-12&lieux%5B%5D=paris-20&Prix=&budget=0%2C2000000&surface-mini=&action=myfilter&cat=14
    headers:
      User-Agent:
      - Typhoeus - https://github.com/typhoeus/typhoeus
      Expect:
      - ''
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 11 Jun 2020 16:23:48 GMT
      Server:
      - Apache
      X-Robots-Tag:
      - noindex
      X-Content-Type-Options:
      - nosniff
      Expires:
      - Wed, 11 Jan 1984 05:00:00 GMT
      Cache-Control:
      - no-cache, must-revalidate, max-age=0
      X-Frame-Options:
      - SAMEORIGIN
      Referrer-Policy:
      - strict-origin-when-cross-origin
      Vary:
      - Accept-Encoding
      Transfer-Encoding:
      - chunked
      Content-Type:
      - text/html; charset=UTF-8
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version:
  recorded_at: Thu, 11 Jun 2020 16:23:48 GMT
- request:
    method: get
    uri: https://www.immobilier-surmesure.com/nos-biens/appartement-3-pieces-paris-12e-2/
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 11 Jun 2020 16:23:48 GMT
      Server:
      - Apache
      Vary:
      - User-Agent,Accept-Encoding
      Last-Modified:
      - Wed, 10 Jun 2020 12:53:23 GMT
      Accept-Ranges:
      - bytes
      Cache-Control:
      - max-age=0, no-cache, no-store, must-revalidate
      Pragma:
      - no-cache
      Expires:
      - Mon, 29 Oct 1923 20:30:00 GMT
      Content-Length:
      - '12385'
      Content-Type:
      - text/html; charset=UTF-8
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version:
  recorded_at: Thu, 11 Jun 2020 16:23:48 GMT
- request:
    method: get
    uri: https://www.immobilier-surmesure.com/nos-biens/appartement-4-pieces-paris-20eme-arrondissement/
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 11 Jun 2020 16:23:49 GMT
      Server:
      - Apache
      Vary:
      - User-Agent,Accept-Encoding
      Last-Modified:
      - Wed, 10 Jun 2020 12:16:08 GMT
      Accept-Ranges:
      - bytes
      Cache-Control:
      - max-age=0, no-cache, no-store, must-revalidate
      Pragma:
      - no-cache
      Expires:
      - Mon, 29 Oct 1923 20:30:00 GMT
      Content-Length:
      - '12412'
      Content-Type:
      - text/html; charset=UTF-8
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version:
  recorded_at: Thu, 11 Jun 2020 16:23:49 GMT
- request:
    method: get
    uri: https://www.immobilier-surmesure.com/nos-biens/appartement-paris-20e/
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 301
      message: Moved Permanently
    headers:
      Date:
      - Thu, 11 Jun 2020 16:23:49 GMT
      Server:
      - Apache
      Expires:
      - Thu, 11 Jun 2020 17:23:49 GMT
      Cache-Control:
      - max-age=3600
      X-Redirect-By:
      - redirection
      Location:
      - https://www.immobilier-surmesure.com/agences/agence-immobiliere-de-paris-20e/
      Transfer-Encoding:
      - chunked
      Content-Type:
      - text/html; charset=UTF-8
    body:
      encoding: UTF-8
      string: "<!-- html is corrupted -->"
    http_version:
  recorded_at: Thu, 11 Jun 2020 16:23:49 GMT
- request:
    method: get
    uri: https://www.immobilier-surmesure.com/agences/agence-immobiliere-de-paris-20e/
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 11 Jun 2020 16:23:49 GMT
      Server:
      - Apache
      Vary:
      - User-Agent,Accept-Encoding
      Last-Modified:
      - Wed, 10 Jun 2020 12:11:18 GMT
      Accept-Ranges:
      - bytes
      Cache-Control:
      - max-age=0, no-cache, no-store, must-revalidate
      Pragma:
      - no-cache
      Expires:
      - Mon, 29 Oct 1923 20:30:00 GMT
      Content-Length:
      - '14392'
      Content-Type:
      - text/html; charset=UTF-8
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version:
  recorded_at: Thu, 11 Jun 2020 16:23:49 GMT
- request:
    method: get
    uri: https://www.immobilier-surmesure.com/nos-biens/appartement-a-renover-paris-2e/
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 11 Jun 2020 16:23:49 GMT
      Server:
      - Apache
      Vary:
      - User-Agent,Accept-Encoding
      Last-Modified:
      - Wed, 10 Jun 2020 12:11:17 GMT
      Accept-Ranges:
      - bytes
      Cache-Control:
      - max-age=0, no-cache, no-store, must-revalidate
      Pragma:
      - no-cache
      Expires:
      - Mon, 29 Oct 1923 20:30:00 GMT
      Content-Length:
      - '12226'
      Content-Type:
      - text/html; charset=UTF-8
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version:
  recorded_at: Thu, 11 Jun 2020 16:23:49 GMT
- request:
    method: get
    uri: https://www.immobilier-surmesure.com/nos-biens/appartement-1-piece-studio-paris-20e/
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 11 Jun 2020 16:23:49 GMT
      Server:
      - Apache
      Vary:
      - User-Agent,Accept-Encoding
      Last-Modified:
      - Wed, 10 Jun 2020 11:23:59 GMT
      Accept-Ranges:
      - bytes
      Cache-Control:
      - max-age=0, no-cache, no-store, must-revalidate
      Pragma:
      - no-cache
      Expires:
      - Mon, 29 Oct 1923 20:30:00 GMT
      Content-Length:
      - '12384'
      Content-Type:
      - text/html; charset=UTF-8
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version:
  recorded_at: Thu, 11 Jun 2020 16:23:49 GMT
- request:
    method: get
    uri: https://www.immobilier-surmesure.com/nos-biens/appartement-ancien-2-pieces-paris-11e-arrondissement/
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 11 Jun 2020 16:23:49 GMT
      Server:
      - Apache
      Vary:
      - User-Agent,Accept-Encoding
      Last-Modified:
      - Wed, 10 Jun 2020 11:23:58 GMT
      Accept-Ranges:
      - bytes
      Cache-Control:
      - max-age=0, no-cache, no-store, must-revalidate
      Pragma:
      - no-cache
      Expires:
      - Mon, 29 Oct 1923 20:30:00 GMT
      Content-Length:
      - '12455'
      Content-Type:
      - text/html; charset=UTF-8
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version:
  recorded_at: Thu, 11 Jun 2020 16:23:49 GMT
- request:
    method: get
    uri: https://www.immobilier-surmesure.com/nos-biens/appartement-de-standing-3-pieces-paris-11e/
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 11 Jun 2020 16:23:50 GMT
      Server:
      - Apache
      Vary:
      - User-Agent,Accept-Encoding
      Last-Modified:
      - Wed, 10 Jun 2020 11:17:44 GMT
      Accept-Ranges:
      - bytes
      Cache-Control:
      - max-age=0, no-cache, no-store, must-revalidate
      Pragma:
      - no-cache
      Expires:
      - Mon, 29 Oct 1923 20:30:00 GMT
      Content-Length:
      - '12411'
      Content-Type:
      - text/html; charset=UTF-8
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version:
  recorded_at: Thu, 11 Jun 2020 16:23:50 GMT
- request:
    method: get
    uri: https://www.immobilier-surmesure.com/nos-biens/studio-a-vendre-paris-12e-arrondissement/
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 11 Jun 2020 16:23:50 GMT
      Server:
      - Apache
      Vary:
      - User-Agent,Accept-Encoding
      Last-Modified:
      - Wed, 10 Jun 2020 11:10:54 GMT
      Accept-Ranges:
      - bytes
      Cache-Control:
      - max-age=0, no-cache, no-store, must-revalidate
      Pragma:
      - no-cache
      Expires:
      - Mon, 29 Oct 1923 20:30:00 GMT
      Content-Length:
      - '12285'
      Content-Type:
      - text/html; charset=UTF-8
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version:
  recorded_at: Thu, 11 Jun 2020 16:23:50 GMT
- request:
    method: get
    uri: https://www.immobilier-surmesure.com/nos-biens/appartement-44m2-paris-20e-3-pieces/
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 11 Jun 2020 16:23:50 GMT
      Server:
      - Apache
      Vary:
      - User-Agent,Accept-Encoding
      Last-Modified:
      - Wed, 10 Jun 2020 11:05:52 GMT
      Accept-Ranges:
      - bytes
      Cache-Control:
      - max-age=0, no-cache, no-store, must-revalidate
      Pragma:
      - no-cache
      Expires:
      - Mon, 29 Oct 1923 20:30:00 GMT
      Content-Length:
      - '12119'
      Content-Type:
      - text/html; charset=UTF-8
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version:
  recorded_at: Thu, 11 Jun 2020 16:23:50 GMT
recorded_with: VCR 5.1.0
